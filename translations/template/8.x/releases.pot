# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Taylor Otwell
# This file is distributed under the same license as the Laravel Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2022-01-25 16:07+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title #
#: docs/8.x/releases.md:1
#, no-wrap
msgid "Release Notes"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:7
#, no-wrap
msgid ""
"- [Versioning Scheme](#versioning-scheme)\n"
"    - [Exceptions](#exceptions)\n"
"- [Support Policy](#support-policy)\n"
"- [Laravel 8](#laravel-8)\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:9
#, no-wrap
msgid "<a name=\"versioning-scheme\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/releases.md:9
#, no-wrap
msgid "Versioning Scheme"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:12
msgid ""
"Laravel and its other first-party packages follow [Semantic "
"Versioning](https://semver.org). Major framework releases are released every "
"year (~January), while minor and patch releases may be released as often as "
"every week. Minor and patch releases should **never** contain breaking "
"changes."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:14
msgid ""
"When referencing the Laravel framework or its components from your "
"application or package, you should always use a version constraint such as "
"`^8.0`, since major releases of Laravel do include breaking "
"changes. However, we strive to always ensure you may update to a new major "
"release in one day or less."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:16
#, no-wrap
msgid "<a name=\"exceptions\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/releases.md:16
#, no-wrap
msgid "Exceptions"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:19
#, no-wrap
msgid "<a name=\"named-arguments\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/releases.md:19
#, no-wrap
msgid "Named Arguments"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:22
msgid ""
"At this time, PHP's [named "
"arguments](https://www.php.net/manual/en/functions.arguments.php#functions.named-arguments) "
"functionality are not covered by Laravel's backwards compatibility "
"guidelines. We may choose to rename function parameters when necessary in "
"order to improve the Laravel codebase. Therefore, using named arguments when "
"calling Laravel methods should be done cautiously and with the understanding "
"that the parameter names may change in the future."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:24
#, no-wrap
msgid "<a name=\"support-policy\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/releases.md:24
#, no-wrap
msgid "Support Policy"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:27
msgid ""
"For LTS releases, such as Laravel 9, bug fixes are provided for 2 years and "
"security fixes are provided for 3 years. These releases provide the longest "
"window of support and maintenance. For general releases, bug fixes are "
"provided for 18 months and security fixes are provided for 2 years. For all "
"additional libraries, including Lumen, only the latest release receives bug "
"fixes. In addition, please review the database versions [supported by "
"Laravel](/docs/{{version}}/database#introduction)."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:35
msgid ""
"| Version | PHP (*) | Release | Bug Fixes Until | Security Fixes Until | | "
"--- | --- | --- | --- | --- | | 6 (LTS) | 7.2 - 8.0 | September 3rd, 2019 | "
"January 25th, 2022 | September 6th, 2022 | | 7 | 7.2 - 8.0 | March 3rd, 2020 "
"| October 6th, 2020 | March 3rd, 2021 | | 8 | 7.3 - 8.1 | September 8th, "
"2020 | July 26th, 2022 | January 24th, 2023 | | 9 (LTS) | 8.0 - 8.1 | "
"February 8th, 2022 | February 8th, 2024 | February 8th, 2025 | | 10 | 8.0 - "
"8.1 | February 7th, 2023 | August 7th, 2024 | February 7th, 2025 |"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:46
#, no-wrap
msgid ""
"<div class=\"sm:flex dark:text-gray-400 mb-1\">\n"
"    <div class=\"flex items-center mr-4\">\n"
"        <div class=\"w-3 h-3 mr-2 bg-red-500\"></div>\n"
"        <div>End of life</div>\n"
"    </div>\n"
"    <div class=\"flex items-center\">\n"
"        <div class=\"w-3 h-3 mr-2 bg-orange-600\"></div>\n"
"        <div>Security fixes only</div>\n"
"    </div>\n"
"</div>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:48
msgid "(*) Supported PHP versions"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:50
#, no-wrap
msgid "<a name=\"laravel-8\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/releases.md:50
#, no-wrap
msgid "Laravel 8"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:53
msgid ""
"Laravel 8 continues the improvements made in Laravel 7.x by introducing "
"Laravel Jetstream, model factory classes, migration squashing, job batching, "
"improved rate limiting, queue improvements, dynamic Blade components, "
"Tailwind pagination views, time testing helpers, improvements to `artisan "
"serve`, event listener improvements, and a variety of other bug fixes and "
"usability improvements."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:55
#, no-wrap
msgid "<a name=\"laravel-jetstream\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/releases.md:55
#, no-wrap
msgid "Laravel Jetstream"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:58
msgid ""
"_Laravel Jetstream was written by [Taylor "
"Otwell](https://github.com/taylorotwell)_."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:60
msgid ""
"[Laravel Jetstream](https://jetstream.laravel.com) is a beautifully designed "
"application scaffolding for Laravel. Jetstream provides the perfect starting "
"point for your next project and includes login, registration, email "
"verification, two-factor authentication, session management, API support via "
"Laravel Sanctum, and optional team management. Laravel Jetstream replaces "
"and improves upon the legacy authentication UI scaffolding available for "
"previous versions of Laravel."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:62
msgid ""
"Jetstream is designed using [Tailwind CSS](https://tailwindcss.com) and "
"offers your choice of [Livewire](https://laravel-livewire.com) or "
"[Inertia](https://inertiajs.com) scaffolding."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:64
#, no-wrap
msgid "<a name=\"models-directory\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/releases.md:64
#, no-wrap
msgid "Models Directory"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:67
msgid ""
"By overwhelming community demand, the default Laravel application skeleton "
"now contains an `app/Models` directory. We hope you enjoy this new home for "
"your Eloquent models! All relevant generator commands have been updated to "
"assume models exist within the `app/Models` directory if it exists. If the "
"directory does not exist, the framework will assume your models should be "
"placed within the `app` directory."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:69
#, no-wrap
msgid "<a name=\"model-factory-classes\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/releases.md:69
#, no-wrap
msgid "Model Factory Classes"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:72
msgid ""
"_Model factory classes were contributed by [Taylor "
"Otwell](https://github.com/taylorotwell)_."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:74
msgid ""
"Eloquent [model "
"factories](/docs/{{version}}/database-testing#defining-model-factories) have "
"been entirely re-written as class based factories and improved to have "
"first-class relationship support. For example, the `UserFactory` included "
"with Laravel is written like so:"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:76
#, no-wrap
msgid "    <?php\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:78
#, no-wrap
msgid "    namespace Database\\Factories;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:82
#, no-wrap
msgid ""
"    use App\\Models\\User;\n"
"    use Illuminate\\Database\\Eloquent\\Factories\\Factory;\n"
"    use Illuminate\\Support\\Str;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:91
#, no-wrap
msgid ""
"    class UserFactory extends Factory\n"
"    {\n"
"        /**\n"
"         * The name of the factory's corresponding model.\n"
"         *\n"
"         * @var string\n"
"         */\n"
"        protected $model = User::class;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:108
#, no-wrap
msgid ""
"        /**\n"
"         * Define the model's default state.\n"
"         *\n"
"         * @return array\n"
"         */\n"
"        public function definition()\n"
"        {\n"
"            return [\n"
"                'name' => $this->faker->name(),\n"
"                'email' => $this->faker->unique()->safeEmail(),\n"
"                'email_verified_at' => now(),\n"
"                'password' => "
"'$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', // "
"password\n"
"                'remember_token' => Str::random(10),\n"
"            ];\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:110
msgid ""
"Thanks to the new `HasFactory` trait available on generated models, the "
"model factory may be used like so:"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:112 docs/8.x/releases.md:134
#, no-wrap
msgid "    use App\\Models\\User;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:114
#, no-wrap
msgid "    User::factory()->count(50)->create();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:116
msgid ""
"Since model factories are now simple PHP classes, state transformations may "
"be written as class methods. In addition, you may add any other helper "
"classes to your Eloquent model factory as needed."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:118
msgid ""
"For example, your `User` model might have a `suspended` state that modifies "
"one of its default attribute values. You may define your state "
"transformations using the base factory's `state` method. You may name your "
"state method anything you like. After all, it's just a typical PHP method:"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:130
#, no-wrap
msgid ""
"    /**\n"
"     * Indicate that the user is suspended.\n"
"     *\n"
"     * @return \\Illuminate\\Database\\Eloquent\\Factories\\Factory\n"
"     */\n"
"    public function suspended()\n"
"    {\n"
"        return $this->state([\n"
"            'account_status' => 'suspended',\n"
"        ]);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:132
msgid "After defining the state transformation method, we may use it like so:"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:136
#, no-wrap
msgid "    User::factory()->count(5)->suspended()->create();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:138
msgid ""
"As mentioned, Laravel 8's model factories contain first class support for "
"relationships. So, assuming our `User` model has a `posts` relationship "
"method, we may simply run the following code to generate a user with three "
"posts:"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:144
#, no-wrap
msgid ""
"    $users = User::factory()\n"
"                ->hasPosts(3, [\n"
"                    'published' => false,\n"
"                ])\n"
"                ->create();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:146
msgid ""
"To ease the upgrade process, the "
"[laravel/legacy-factories](https://github.com/laravel/legacy-factories) "
"package has been released to provide support for the previous iteration of "
"model factories within Laravel 8.x."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:148
msgid ""
"Laravel's re-written factories contain many more features that we think you "
"will love. To learn more about model factories, please consult the [database "
"testing "
"documentation](/docs/{{version}}/database-testing#defining-model-factories)."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:150
#, no-wrap
msgid "<a name=\"migration-squashing\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/releases.md:150
#, no-wrap
msgid "Migration Squashing"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:153
msgid ""
"_Migration squashing was contributed by [Taylor "
"Otwell](https://github.com/taylorotwell)_."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:155
msgid ""
"As you build your application, you may accumulate more and more migrations "
"over time. This can lead to your migration directory becoming bloated with "
"potentially hundreds of migrations. If you're using MySQL or PostgreSQL, you "
"may now \"squash\" your migrations into a single SQL file. To get started, "
"execute the `schema:dump` command:"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:157
#, no-wrap
msgid "    php artisan schema:dump\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:160
#, no-wrap
msgid ""
"    // Dump the current database schema and prune all existing "
"migrations...\n"
"    php artisan schema:dump --prune\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:162
msgid ""
"When you execute this command, Laravel will write a \"schema\" file to your "
"`database/schema` directory. Now, when you attempt to migrate your database "
"and no other migrations have been executed, Laravel will execute the schema "
"file's SQL first. After executing the schema file's commands, Laravel will "
"execute any remaining migrations that were not part of the schema dump."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:164
#, no-wrap
msgid "<a name=\"job-batching\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/releases.md:164
#, no-wrap
msgid "Job Batching"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:167
msgid ""
"_Job batching was contributed by [Taylor "
"Otwell](https://github.com/taylorotwell) & [Mohamed "
"Said](https://github.com/themsaid)_."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:169
msgid ""
"Laravel's job batching feature allows you to easily execute a batch of jobs "
"and then perform some action when the batch of jobs has completed executing."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:171
msgid ""
"The new `batch` method of the `Bus` facade may be used to dispatch a batch "
"of jobs. Of course, batching is primarily useful when combined with "
"completion callbacks. So, you may use the `then`, `catch`, and `finally` "
"methods to define completion callbacks for the batch. Each of these "
"callbacks will receive an `Illuminate\\Bus\\Batch` instance when they are "
"invoked:"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:177
#, no-wrap
msgid ""
"    use App\\Jobs\\ProcessPodcast;\n"
"    use App\\Podcast;\n"
"    use Illuminate\\Bus\\Batch;\n"
"    use Illuminate\\Support\\Facades\\Bus;\n"
"    use Throwable;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:191
#, no-wrap
msgid ""
"    $batch = Bus::batch([\n"
"        new ProcessPodcast(Podcast::find(1)),\n"
"        new ProcessPodcast(Podcast::find(2)),\n"
"        new ProcessPodcast(Podcast::find(3)),\n"
"        new ProcessPodcast(Podcast::find(4)),\n"
"        new ProcessPodcast(Podcast::find(5)),\n"
"    ])->then(function (Batch $batch) {\n"
"        // All jobs completed successfully...\n"
"    })->catch(function (Batch $batch, Throwable $e) {\n"
"        // First batch job failure detected...\n"
"    })->finally(function (Batch $batch) {\n"
"        // The batch has finished executing...\n"
"    })->dispatch();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:193
#, no-wrap
msgid "    return $batch->id;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:195
msgid ""
"To learn more about job batching, please consult the [queue "
"documentation](/docs/{{version}}/queues#job-batching)."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:197
#, no-wrap
msgid "<a name=\"improved-rate-limiting\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/releases.md:197
#, no-wrap
msgid "Improved Rate Limiting"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:200
msgid ""
"_Rate limiting improvements were contributed by [Taylor "
"Otwell](https://github.com/taylorotwell)_."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:202
msgid ""
"Laravel's request rate limiter feature has been augmented with more "
"flexibility and power, while still maintaining backwards compatibility with "
"previous release's `throttle` middleware API."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:204
msgid ""
"Rate limiters are defined using the `RateLimiter` facade's `for` method. The "
"`for` method accepts a rate limiter name and a closure that returns the "
"limit configuration that should apply to routes that are assigned this rate "
"limiter:"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:207
#, no-wrap
msgid ""
"    use Illuminate\\Cache\\RateLimiting\\Limit;\n"
"    use Illuminate\\Support\\Facades\\RateLimiter;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:211
#, no-wrap
msgid ""
"    RateLimiter::for('global', function (Request $request) {\n"
"        return Limit::perMinute(1000);\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:213
msgid ""
"Since rate limiter callbacks receive the incoming HTTP request instance, you "
"may build the appropriate rate limit dynamically based on the incoming "
"request or authenticated user:"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:219
#, no-wrap
msgid ""
"    RateLimiter::for('uploads', function (Request $request) {\n"
"        return $request->user()->vipCustomer()\n"
"                    ? Limit::none()\n"
"                    : Limit::perMinute(100);\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:221
msgid ""
"Sometimes you may wish to segment rate limits by some arbitrary value. For "
"example, you may wish to allow users to access a given route 100 times per "
"minute per IP address. To accomplish this, you may use the `by` method when "
"building your rate limit:"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:227
#, no-wrap
msgid ""
"    RateLimiter::for('uploads', function (Request $request) {\n"
"        return $request->user()->vipCustomer()\n"
"                    ? Limit::none()\n"
"                    : Limit::perMinute(100)->by($request->ip());\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:229
msgid ""
"Rate limiters may be attached to routes or route groups using the `throttle` "
"[middleware](/docs/{{version}}/middleware). The throttle middleware accepts "
"the name of the rate limiter you wish to assign to the route:"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:234
#, no-wrap
msgid ""
"    Route::middleware(['throttle:uploads'])->group(function () {\n"
"        Route::post('/audio', function () {\n"
"            //\n"
"        });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:239
#, no-wrap
msgid ""
"        Route::post('/video', function () {\n"
"            //\n"
"        });\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:241
msgid ""
"To learn more about rate limiting, please consult the [routing "
"documentation](/docs/{{version}}/routing#rate-limiting)."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:243
#, no-wrap
msgid "<a name=\"improved-maintenance-mode\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/releases.md:243
#, no-wrap
msgid "Improved Maintenance Mode"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:246
msgid ""
"_Maintenance mode improvements were contributed by [Taylor "
"Otwell](https://github.com/taylorotwell) with inspiration from "
"[Spatie](https://spatie.be)_."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:248
msgid ""
"In previous releases of Laravel, the `php artisan down` maintenance mode "
"feature may be bypassed using an \"allow list\" of IP addresses that were "
"allowed to access the application. This feature has been removed in favor of "
"a simpler \"secret\" / token solution."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:250
msgid ""
"While in maintenance mode, you may use the `secret` option to specify a "
"maintenance mode bypass token:"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:252
#, no-wrap
msgid "    php artisan down --secret=\"1630542a-246b-4b66-afa1-dd72a4c43515\"\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:254
msgid ""
"After placing the application in maintenance mode, you may navigate to the "
"application URL matching this token and Laravel will issue a maintenance "
"mode bypass cookie to your browser:"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:256
#, no-wrap
msgid "    https://example.com/1630542a-246b-4b66-afa1-dd72a4c43515\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:258
msgid ""
"When accessing this hidden route, you will then be redirected to the `/` "
"route of the application. Once the cookie has been issued to your browser, "
"you will be able to browse the application normally as if it was not in "
"maintenance mode."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:260
#, no-wrap
msgid "<a name=\"pre-rendering-the-maintenance-mode-view\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/releases.md:260
#, no-wrap
msgid "Pre-Rendering The Maintenance Mode View"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:263
msgid ""
"If you utilize the `php artisan down` command during deployment, your users "
"may still occasionally encounter errors if they access the application while "
"your Composer dependencies or other infrastructure components are "
"updating. This occurs because a significant part of the Laravel framework "
"must boot in order to determine your application is in maintenance mode and "
"render the maintenance mode view using the templating engine."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:265
msgid ""
"For this reason, Laravel now allows you to pre-render a maintenance mode "
"view that will be returned at the very beginning of the request cycle. This "
"view is rendered before any of your application's dependencies have "
"loaded. You may pre-render a template of your choice using the `down` "
"command's `render` option:"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:267
#, no-wrap
msgid "    php artisan down --render=\"errors::503\"\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:269
#, no-wrap
msgid "<a name=\"closure-dispatch-chain-catch\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/releases.md:269
#, no-wrap
msgid "Closure Dispatch / Chain `catch`"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:272
msgid ""
"_Catch improvements were contributed by [Mohamed "
"Said](https://github.com/themsaid)_."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:274
msgid ""
"Using the new `catch` method, you may now provide a closure that should be "
"executed if a queued closure fails to complete successfully after exhausting "
"all of your queue's configured retry attempts:"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:276
#, no-wrap
msgid "    use Throwable;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:282
#, no-wrap
msgid ""
"    dispatch(function () use ($podcast) {\n"
"        $podcast->publish();\n"
"    })->catch(function (Throwable $e) {\n"
"        // This job has failed...\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:284
#, no-wrap
msgid "<a name=\"dynamic-blade-components\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/releases.md:284
#, no-wrap
msgid "Dynamic Blade Components"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:287
msgid ""
"_Dynamic Blade components were contributed by [Taylor "
"Otwell](https://github.com/taylorotwell)_."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:289
msgid ""
"Sometimes you may need to render a component but not know which component "
"should be rendered until runtime. In this situation, you may now use "
"Laravel's built-in `dynamic-component` component to render the component "
"based on a runtime value or variable:"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:291
#, no-wrap
msgid "    <x-dynamic-component :component=\"$componentName\" class=\"mt-4\" />\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:293
msgid ""
"To learn more about Blade components, please consult the [Blade "
"documentation](/docs/{{version}}/blade#components)."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:295
#, no-wrap
msgid "<a name=\"event-listener-improvements\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/releases.md:295
#, no-wrap
msgid "Event Listener Improvements"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:298
msgid ""
"_Event listener improvements were contributed by [Taylor "
"Otwell](https://github.com/taylorotwell)_."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:300
msgid ""
"Closure based event listeners may now be registered by only passing the "
"closure to the `Event::listen` method. Laravel will inspect the closure to "
"determine which type of event the listener handles:"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:303
#, no-wrap
msgid ""
"    use App\\Events\\PodcastProcessed;\n"
"    use Illuminate\\Support\\Facades\\Event;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:307
#, no-wrap
msgid ""
"    Event::listen(function (PodcastProcessed $event) {\n"
"        //\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:309
msgid ""
"In addition, closure based event listeners may now be marked as queueable "
"using the `Illuminate\\Events\\queueable` function:"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:313
#, no-wrap
msgid ""
"    use App\\Events\\PodcastProcessed;\n"
"    use function Illuminate\\Events\\queueable;\n"
"    use Illuminate\\Support\\Facades\\Event;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:317
#, no-wrap
msgid ""
"    Event::listen(queueable(function (PodcastProcessed $event) {\n"
"        //\n"
"    }));\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:319
msgid ""
"Like queued jobs, you may use the `onConnection`, `onQueue`, and `delay` "
"methods to customize the execution of the queued listener:"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:323
#, no-wrap
msgid ""
"    Event::listen(queueable(function (PodcastProcessed $event) {\n"
"        //\n"
"    "
"})->onConnection('redis')->onQueue('podcasts')->delay(now()->addSeconds(10)));\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:325
msgid ""
"If you would like to handle anonymous queued listener failures, you may "
"provide a closure to the `catch` method while defining the `queueable` "
"listener:"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:330
#, no-wrap
msgid ""
"    use App\\Events\\PodcastProcessed;\n"
"    use function Illuminate\\Events\\queueable;\n"
"    use Illuminate\\Support\\Facades\\Event;\n"
"    use Throwable;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:336
#, no-wrap
msgid ""
"    Event::listen(queueable(function (PodcastProcessed $event) {\n"
"        //\n"
"    })->catch(function (PodcastProcessed $event, Throwable $e) {\n"
"        // The queued listener failed...\n"
"    }));\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:338
#, no-wrap
msgid "<a name=\"time-testing-helpers\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/releases.md:338
#, no-wrap
msgid "Time Testing Helpers"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:341
msgid ""
"_Time testing helpers were contributed by [Taylor "
"Otwell](https://github.com/taylorotwell) with inspiration from Ruby on "
"Rails_."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:343
msgid ""
"When testing, you may occasionally need to modify the time returned by "
"helpers such as `now` or `Illuminate\\Support\\Carbon::now()`. Laravel's "
"base feature test class now includes helpers that allow you to manipulate "
"the current time:"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:354
#, no-wrap
msgid ""
"    public function testTimeCanBeManipulated()\n"
"    {\n"
"        // Travel into the future...\n"
"        $this->travel(5)->milliseconds();\n"
"        $this->travel(5)->seconds();\n"
"        $this->travel(5)->minutes();\n"
"        $this->travel(5)->hours();\n"
"        $this->travel(5)->days();\n"
"        $this->travel(5)->weeks();\n"
"        $this->travel(5)->years();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:357
#, no-wrap
msgid ""
"        // Travel into the past...\n"
"        $this->travel(-5)->hours();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:360
#, no-wrap
msgid ""
"        // Travel to an explicit time...\n"
"        $this->travelTo(now()->subHours(6));\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:364
#, no-wrap
msgid ""
"        // Return back to the present time...\n"
"        $this->travelBack();\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:366
#, no-wrap
msgid "<a name=\"artisan-serve-improvements\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/releases.md:366
#, no-wrap
msgid "Artisan `serve` Improvements"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:369
msgid ""
"_Artisan `serve` improvements were contributed by [Taylor "
"Otwell](https://github.com/taylorotwell)_."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:371
msgid ""
"The Artisan `serve` command has been improved with automatic reloading when "
"environment variable changes are detected within your local `.env` "
"file. Previously, the command had to be manually stopped and restarted."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:373
#, no-wrap
msgid "<a name=\"tailwind-pagination-views\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/releases.md:373
#, no-wrap
msgid "Tailwind Pagination Views"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:376
msgid ""
"The Laravel paginator has been updated to use the [Tailwind "
"CSS](https://tailwindcss.com) framework by default. Tailwind CSS is a highly "
"customizable, low-level CSS framework that gives you all of the building "
"blocks you need to build bespoke designs without any annoying opinionated "
"styles you have to fight to override. Of course, Bootstrap 3 and 4 views "
"remain available as well."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:378
#, no-wrap
msgid "<a name=\"routing-namespace-updates\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/releases.md:378
#, no-wrap
msgid "Routing Namespace Updates"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:381
msgid ""
"In previous releases of Laravel, the `RouteServiceProvider` contained a "
"`$namespace` property. This property's value would automatically be prefixed "
"onto controller route definitions and calls to the `action` helper / "
"`URL::action` method. In Laravel 8.x, this property is `null` by "
"default. This means that no automatic namespace prefixing will be done by "
"Laravel. Therefore, in new Laravel 8.x applications, controller route "
"definitions should be defined using standard PHP callable syntax:"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:383
#, no-wrap
msgid "    use App\\Http\\Controllers\\UserController;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:385
#, no-wrap
msgid "    Route::get('/users', [UserController::class, 'index']);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:387
msgid "Calls to the `action` related methods should use the same callable syntax:"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:389
#, no-wrap
msgid "    action([UserController::class, 'index']);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:391
#, no-wrap
msgid "    return Redirect::action([UserController::class, 'index']);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:393
msgid ""
"If you prefer Laravel 7.x style controller route prefixing, you may simply "
"add the `$namespace` property into your application's "
"`RouteServiceProvider`."
msgstr ""

#. type: Plain text
#: docs/8.x/releases.md:394
#, no-wrap
msgid ""
"> {note} This change only affects new Laravel 8.x applications. Applications "
"upgrading from Laravel 7.x will still have the `$namespace` property in "
"their `RouteServiceProvider`.\n"
msgstr ""
