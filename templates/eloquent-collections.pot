# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Taylor Otwell
# This file is distributed under the same license as the Laravel Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"#-#-#-#-#  eloquent-collections.pot (Laravel Documentation VERSION)  #-#-#-#-#\n"
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2022-02-08 06:32+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"
"#-#-#-#-#  eloquent-collections.pot (Laravel Documentation VERSION)  #-#-#-#-#\n"
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2022-02-08 06:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"
"#-#-#-#-#  eloquent-collections.pot (Laravel Documentation VERSION)  #-#-#-#-#\n"
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2022-02-08 06:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"
#
#. type: Title #
# File: docs/8.x/eloquent-collections.md, line: 1
# File: docs/9.x/eloquent-collections.md, line: 1
# File: docs/master/eloquent-collections.md, line: 1
#, no-wrap
msgid "Eloquent: Collections"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 6
# File: docs/9.x/eloquent-collections.md, line: 6
# File: docs/master/eloquent-collections.md, line: 6
msgid "- [Introduction](#introduction)  - [Available Methods](#available-methods)  - [Custom Collections](#custom-collections)"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 8
# File: docs/9.x/eloquent-collections.md, line: 8
# File: docs/master/eloquent-collections.md, line: 8
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr ""
#
#. type: Title ##
# File: docs/8.x/eloquent-collections.md, line: 8
# File: docs/9.x/eloquent-collections.md, line: 8
# File: docs/master/eloquent-collections.md, line: 8
#, no-wrap
msgid "Introduction"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 11
# File: docs/9.x/eloquent-collections.md, line: 11
# File: docs/master/eloquent-collections.md, line: 11
msgid "All Eloquent methods that return more than one model result will return instances of the `Illuminate\\Database\\Eloquent\\Collection` class, including results retrieved via the `get` method or accessed via a relationship. The Eloquent collection object extends Laravel's [base collection](/docs/{{version}}/collections), so it naturally inherits dozens of methods used to fluently work with the underlying array of Eloquent models. Be sure to review the Laravel collection documentation to learn all about these helpful methods!"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 13
# File: docs/9.x/eloquent-collections.md, line: 13
# File: docs/master/eloquent-collections.md, line: 13
msgid "All collections also serve as iterators, allowing you to loop over them as if they were simple PHP arrays:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 15
# File: docs/8.x/eloquent-collections.md, line: 95
# File: docs/8.x/eloquent-collections.md, line: 129
# File: docs/8.x/eloquent-collections.md, line: 186
# File: docs/9.x/eloquent-collections.md, line: 15
# File: docs/9.x/eloquent-collections.md, line: 95
# File: docs/9.x/eloquent-collections.md, line: 129
# File: docs/9.x/eloquent-collections.md, line: 186
# File: docs/master/eloquent-collections.md, line: 15
# File: docs/master/eloquent-collections.md, line: 95
# File: docs/master/eloquent-collections.md, line: 129
# File: docs/master/eloquent-collections.md, line: 186
#, no-wrap
msgid "    use App\\Models\\User;\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 17
# File: docs/9.x/eloquent-collections.md, line: 17
# File: docs/master/eloquent-collections.md, line: 17
#, no-wrap
msgid "    $users = User::where('active', 1)->get();\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 21
# File: docs/9.x/eloquent-collections.md, line: 21
# File: docs/master/eloquent-collections.md, line: 21
#, no-wrap
msgid ""
"    foreach ($users as $user) {\n"
"        echo $user->name;\n"
"    }\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 23
# File: docs/9.x/eloquent-collections.md, line: 23
# File: docs/master/eloquent-collections.md, line: 23
msgid "However, as previously mentioned, collections are much more powerful than arrays and expose a variety of map / reduce operations that may be chained using an intuitive interface. For example, we may remove all inactive models and then gather the first name for each remaining user:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 29
# File: docs/9.x/eloquent-collections.md, line: 29
# File: docs/master/eloquent-collections.md, line: 29
#, no-wrap
msgid ""
"    $names = User::all()->reject(function ($user) {\n"
"        return $user->active === false;\n"
"    })->map(function ($user) {\n"
"        return $user->name;\n"
"    });\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 31
# File: docs/9.x/eloquent-collections.md, line: 31
# File: docs/master/eloquent-collections.md, line: 31
#, no-wrap
msgid "<a name=\"eloquent-collection-conversion\"></a>\n"
msgstr ""
#
#. type: Title ####
# File: docs/8.x/eloquent-collections.md, line: 31
# File: docs/9.x/eloquent-collections.md, line: 31
# File: docs/master/eloquent-collections.md, line: 31
#, no-wrap
msgid "Eloquent Collection Conversion"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 34
# File: docs/9.x/eloquent-collections.md, line: 34
# File: docs/master/eloquent-collections.md, line: 34
msgid "While most Eloquent collection methods return a new instance of an Eloquent collection, the `collapse`, `flatten`, `flip`, `keys`, `pluck`, and `zip` methods return a [base collection](/docs/{{version}}/collections) instance. Likewise, if a `map` operation returns a collection that does not contain any Eloquent models, it will be converted to a base collection instance."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 36
# File: docs/9.x/eloquent-collections.md, line: 36
# File: docs/master/eloquent-collections.md, line: 36
#, no-wrap
msgid "<a name=\"available-methods\"></a>\n"
msgstr ""
#
#. type: Title ##
# File: docs/8.x/eloquent-collections.md, line: 36
# File: docs/9.x/eloquent-collections.md, line: 36
# File: docs/master/eloquent-collections.md, line: 36
#, no-wrap
msgid "Available Methods"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 39
# File: docs/9.x/eloquent-collections.md, line: 39
# File: docs/master/eloquent-collections.md, line: 39
msgid "All Eloquent collections extend the base [Laravel collection](/docs/{{version}}/collections#available-methods) object; therefore, they inherit all of the powerful methods provided by the base collection class."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 41
# File: docs/9.x/eloquent-collections.md, line: 41
# File: docs/master/eloquent-collections.md, line: 41
msgid "In addition, the `Illuminate\\Database\\Eloquent\\Collection` class provides a superset of methods to aid with managing your model collections. Most methods return `Illuminate\\Database\\Eloquent\\Collection` instances; however, some methods, like `modelKeys`, return an `Illuminate\\Support\\Collection` instance."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 47
# File: docs/9.x/eloquent-collections.md, line: 47
# File: docs/master/eloquent-collections.md, line: 47
#, no-wrap
msgid ""
"<style>\n"
"    #collection-method-list > p {\n"
"        column-count: 1; -moz-column-count: 1; -webkit-column-count: 1;\n"
"        column-gap: 2em; -moz-column-gap: 2em; -webkit-column-gap: 2em;\n"
"    }\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 51
# File: docs/9.x/eloquent-collections.md, line: 51
# File: docs/master/eloquent-collections.md, line: 51
#, no-wrap
msgid ""
"    #collection-method-list a {\n"
"        display: block;\n"
"    }\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 55
# File: docs/9.x/eloquent-collections.md, line: 55
# File: docs/master/eloquent-collections.md, line: 55
#, no-wrap
msgid ""
"    .collection-method code {\n"
"        font-size: 14px;\n"
"    }\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 60
# File: docs/9.x/eloquent-collections.md, line: 60
# File: docs/master/eloquent-collections.md, line: 60
#, no-wrap
msgid ""
"    .collection-method:not(.first-collection-method) {\n"
"        margin-top: 50px;\n"
"    }\n"
"</style>\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 62
# File: docs/9.x/eloquent-collections.md, line: 62
# File: docs/master/eloquent-collections.md, line: 62
#, no-wrap
msgid "<div id=\"collection-method-list\" markdown=\"1\">\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 77
# File: docs/9.x/eloquent-collections.md, line: 77
# File: docs/master/eloquent-collections.md, line: 77
msgid "[contains](#method-contains)  [diff](#method-diff)  [except](#method-except)  [find](#method-find)  [fresh](#method-fresh)  [intersect](#method-intersect)  [load](#method-load)  [loadMissing](#method-loadMissing)  [modelKeys](#method-modelKeys)  [makeVisible](#method-makeVisible)  [makeHidden](#method-makeHidden)  [only](#method-only)  [toQuery](#method-toquery)  [unique](#method-unique)"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 79
# File: docs/9.x/eloquent-collections.md, line: 79
# File: docs/master/eloquent-collections.md, line: 79
#, no-wrap
msgid "</div>\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 81
# File: docs/9.x/eloquent-collections.md, line: 81
# File: docs/master/eloquent-collections.md, line: 81
#, no-wrap
msgid "<a name=\"method-contains\"></a>\n"
msgstr ""
#
#. type: Title ####
# File: docs/8.x/eloquent-collections.md, line: 81
# File: docs/9.x/eloquent-collections.md, line: 81
# File: docs/master/eloquent-collections.md, line: 81
#, no-wrap
msgid "`contains($key, $operator = null, $value = null)` {.collection-method .first-collection-method}"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 84
# File: docs/9.x/eloquent-collections.md, line: 84
# File: docs/master/eloquent-collections.md, line: 84
msgid "The `contains` method may be used to determine if a given model instance is contained by the collection. This method accepts a primary key or a model instance:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 86
# File: docs/9.x/eloquent-collections.md, line: 86
# File: docs/master/eloquent-collections.md, line: 86
#, no-wrap
msgid "    $users->contains(1);\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 88
# File: docs/9.x/eloquent-collections.md, line: 88
# File: docs/master/eloquent-collections.md, line: 88
#, no-wrap
msgid "    $users->contains(User::find(1));\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 90
# File: docs/9.x/eloquent-collections.md, line: 90
# File: docs/master/eloquent-collections.md, line: 90
#, no-wrap
msgid "<a name=\"method-diff\"></a>\n"
msgstr ""
#
#. type: Title ####
# File: docs/8.x/eloquent-collections.md, line: 90
# File: docs/9.x/eloquent-collections.md, line: 90
# File: docs/master/eloquent-collections.md, line: 90
#, no-wrap
msgid "`diff($items)` {.collection-method}"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 93
# File: docs/9.x/eloquent-collections.md, line: 93
# File: docs/master/eloquent-collections.md, line: 93
msgid "The `diff` method returns all of the models that are not present in the given collection:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 97
# File: docs/9.x/eloquent-collections.md, line: 97
# File: docs/master/eloquent-collections.md, line: 97
#, no-wrap
msgid "    $users = $users->diff(User::whereIn('id', [1, 2, 3])->get());\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 99
# File: docs/9.x/eloquent-collections.md, line: 99
# File: docs/master/eloquent-collections.md, line: 99
#, no-wrap
msgid "<a name=\"method-except\"></a>\n"
msgstr ""
#
#. type: Title ####
# File: docs/8.x/eloquent-collections.md, line: 99
# File: docs/9.x/eloquent-collections.md, line: 99
# File: docs/master/eloquent-collections.md, line: 99
#, no-wrap
msgid "`except($keys)` {.collection-method}"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 102
# File: docs/9.x/eloquent-collections.md, line: 102
# File: docs/master/eloquent-collections.md, line: 102
msgid "The `except` method returns all of the models that do not have the given primary keys:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 104
# File: docs/9.x/eloquent-collections.md, line: 104
# File: docs/master/eloquent-collections.md, line: 104
#, no-wrap
msgid "    $users = $users->except([1, 2, 3]);\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 106
# File: docs/9.x/eloquent-collections.md, line: 106
# File: docs/master/eloquent-collections.md, line: 106
#, no-wrap
msgid "<a name=\"method-find\"></a>\n"
msgstr ""
#
#. type: Title ####
# File: docs/8.x/eloquent-collections.md, line: 106
# File: docs/9.x/eloquent-collections.md, line: 106
# File: docs/master/eloquent-collections.md, line: 106
#, no-wrap
msgid "`find($key)` {.collection-method}"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 109
# File: docs/9.x/eloquent-collections.md, line: 109
# File: docs/master/eloquent-collections.md, line: 109
msgid "The `find` method returns the model that has a primary key matching the given key. If `$key` is a model instance, `find` will attempt to return a model matching the primary key. If `$key` is an array of keys, `find` will return all models which have a primary key in the given array:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 111
# File: docs/9.x/eloquent-collections.md, line: 111
# File: docs/master/eloquent-collections.md, line: 111
#, no-wrap
msgid "    $users = User::all();\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 113
# File: docs/9.x/eloquent-collections.md, line: 113
# File: docs/master/eloquent-collections.md, line: 113
#, no-wrap
msgid "    $user = $users->find(1);\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 115
# File: docs/9.x/eloquent-collections.md, line: 115
# File: docs/master/eloquent-collections.md, line: 115
#, no-wrap
msgid "<a name=\"method-fresh\"></a>\n"
msgstr ""
#
#. type: Title ####
# File: docs/8.x/eloquent-collections.md, line: 115
# File: docs/9.x/eloquent-collections.md, line: 115
# File: docs/master/eloquent-collections.md, line: 115
#, no-wrap
msgid "`fresh($with = [])` {.collection-method}"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 118
# File: docs/9.x/eloquent-collections.md, line: 118
# File: docs/master/eloquent-collections.md, line: 118
msgid "The `fresh` method retrieves a fresh instance of each model in the collection from the database. In addition, any specified relationships will be eager loaded:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 120
# File: docs/9.x/eloquent-collections.md, line: 120
# File: docs/master/eloquent-collections.md, line: 120
#, no-wrap
msgid "    $users = $users->fresh();\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 122
# File: docs/9.x/eloquent-collections.md, line: 122
# File: docs/master/eloquent-collections.md, line: 122
#, no-wrap
msgid "    $users = $users->fresh('comments');\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 124
# File: docs/9.x/eloquent-collections.md, line: 124
# File: docs/master/eloquent-collections.md, line: 124
#, no-wrap
msgid "<a name=\"method-intersect\"></a>\n"
msgstr ""
#
#. type: Title ####
# File: docs/8.x/eloquent-collections.md, line: 124
# File: docs/9.x/eloquent-collections.md, line: 124
# File: docs/master/eloquent-collections.md, line: 124
#, no-wrap
msgid "`intersect($items)` {.collection-method}"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 127
# File: docs/9.x/eloquent-collections.md, line: 127
# File: docs/master/eloquent-collections.md, line: 127
msgid "The `intersect` method returns all of the models that are also present in the given collection:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 131
# File: docs/9.x/eloquent-collections.md, line: 131
# File: docs/master/eloquent-collections.md, line: 131
#, no-wrap
msgid "    $users = $users->intersect(User::whereIn('id', [1, 2, 3])->get());\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 133
# File: docs/9.x/eloquent-collections.md, line: 133
# File: docs/master/eloquent-collections.md, line: 133
#, no-wrap
msgid "<a name=\"method-load\"></a>\n"
msgstr ""
#
#. type: Title ####
# File: docs/8.x/eloquent-collections.md, line: 133
# File: docs/9.x/eloquent-collections.md, line: 133
# File: docs/master/eloquent-collections.md, line: 133
#, no-wrap
msgid "`load($relations)` {.collection-method}"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 136
# File: docs/9.x/eloquent-collections.md, line: 136
# File: docs/master/eloquent-collections.md, line: 136
msgid "The `load` method eager loads the given relationships for all models in the collection:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 138
# File: docs/9.x/eloquent-collections.md, line: 138
# File: docs/master/eloquent-collections.md, line: 138
#, no-wrap
msgid "    $users->load(['comments', 'posts']);\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 140
# File: docs/9.x/eloquent-collections.md, line: 140
# File: docs/master/eloquent-collections.md, line: 140
#, no-wrap
msgid "    $users->load('comments.author');\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 142
# File: docs/9.x/eloquent-collections.md, line: 142
# File: docs/master/eloquent-collections.md, line: 142
#, no-wrap
msgid "<a name=\"method-loadMissing\"></a>\n"
msgstr ""
#
#. type: Title ####
# File: docs/8.x/eloquent-collections.md, line: 142
# File: docs/9.x/eloquent-collections.md, line: 142
# File: docs/master/eloquent-collections.md, line: 142
#, no-wrap
msgid "`loadMissing($relations)` {.collection-method}"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 145
# File: docs/9.x/eloquent-collections.md, line: 145
# File: docs/master/eloquent-collections.md, line: 145
msgid "The `loadMissing` method eager loads the given relationships for all models in the collection if the relationships are not already loaded:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 147
# File: docs/9.x/eloquent-collections.md, line: 147
# File: docs/master/eloquent-collections.md, line: 147
#, no-wrap
msgid "    $users->loadMissing(['comments', 'posts']);\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 149
# File: docs/9.x/eloquent-collections.md, line: 149
# File: docs/master/eloquent-collections.md, line: 149
#, no-wrap
msgid "    $users->loadMissing('comments.author');\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 151
# File: docs/9.x/eloquent-collections.md, line: 151
# File: docs/master/eloquent-collections.md, line: 151
#, no-wrap
msgid "<a name=\"method-modelKeys\"></a>\n"
msgstr ""
#
#. type: Title ####
# File: docs/8.x/eloquent-collections.md, line: 151
# File: docs/9.x/eloquent-collections.md, line: 151
# File: docs/master/eloquent-collections.md, line: 151
#, no-wrap
msgid "`modelKeys()` {.collection-method}"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 154
# File: docs/9.x/eloquent-collections.md, line: 154
# File: docs/master/eloquent-collections.md, line: 154
msgid "The `modelKeys` method returns the primary keys for all models in the collection:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 156
# File: docs/9.x/eloquent-collections.md, line: 156
# File: docs/master/eloquent-collections.md, line: 156
#, no-wrap
msgid "    $users->modelKeys();\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 158
# File: docs/9.x/eloquent-collections.md, line: 158
# File: docs/master/eloquent-collections.md, line: 158
#, no-wrap
msgid "    // [1, 2, 3, 4, 5]\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 160
# File: docs/9.x/eloquent-collections.md, line: 160
# File: docs/master/eloquent-collections.md, line: 160
#, no-wrap
msgid "<a name=\"method-makeVisible\"></a>\n"
msgstr ""
#
#. type: Title ####
# File: docs/8.x/eloquent-collections.md, line: 160
# File: docs/9.x/eloquent-collections.md, line: 160
# File: docs/master/eloquent-collections.md, line: 160
#, no-wrap
msgid "`makeVisible($attributes)` {.collection-method}"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 163
# File: docs/9.x/eloquent-collections.md, line: 163
# File: docs/master/eloquent-collections.md, line: 163
msgid "The `makeVisible` method [makes attributes visible](/docs/{{version}}/eloquent-serialization#hiding-attributes-from-json) that are typically \"hidden\" on each model in the collection:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 165
# File: docs/9.x/eloquent-collections.md, line: 165
# File: docs/master/eloquent-collections.md, line: 165
#, no-wrap
msgid "    $users = $users->makeVisible(['address', 'phone_number']);\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 167
# File: docs/9.x/eloquent-collections.md, line: 167
# File: docs/master/eloquent-collections.md, line: 167
#, no-wrap
msgid "<a name=\"method-makeHidden\"></a>\n"
msgstr ""
#
#. type: Title ####
# File: docs/8.x/eloquent-collections.md, line: 167
# File: docs/9.x/eloquent-collections.md, line: 167
# File: docs/master/eloquent-collections.md, line: 167
#, no-wrap
msgid "`makeHidden($attributes)` {.collection-method}"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 170
# File: docs/9.x/eloquent-collections.md, line: 170
# File: docs/master/eloquent-collections.md, line: 170
msgid "The `makeHidden` method [hides attributes](/docs/{{version}}/eloquent-serialization#hiding-attributes-from-json) that are typically \"visible\" on each model in the collection:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 172
# File: docs/9.x/eloquent-collections.md, line: 172
# File: docs/master/eloquent-collections.md, line: 172
#, no-wrap
msgid "    $users = $users->makeHidden(['address', 'phone_number']);\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 174
# File: docs/9.x/eloquent-collections.md, line: 174
# File: docs/master/eloquent-collections.md, line: 174
#, no-wrap
msgid "<a name=\"method-only\"></a>\n"
msgstr ""
#
#. type: Title ####
# File: docs/8.x/eloquent-collections.md, line: 174
# File: docs/9.x/eloquent-collections.md, line: 174
# File: docs/master/eloquent-collections.md, line: 174
#, no-wrap
msgid "`only($keys)` {.collection-method}"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 177
# File: docs/9.x/eloquent-collections.md, line: 177
# File: docs/master/eloquent-collections.md, line: 177
msgid "The `only` method returns all of the models that have the given primary keys:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 179
# File: docs/9.x/eloquent-collections.md, line: 179
# File: docs/master/eloquent-collections.md, line: 179
#, no-wrap
msgid "    $users = $users->only([1, 2, 3]);\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 181
# File: docs/9.x/eloquent-collections.md, line: 181
# File: docs/master/eloquent-collections.md, line: 181
#, no-wrap
msgid "<a name=\"method-toquery\"></a>\n"
msgstr ""
#
#. type: Title ####
# File: docs/8.x/eloquent-collections.md, line: 181
# File: docs/9.x/eloquent-collections.md, line: 181
# File: docs/master/eloquent-collections.md, line: 181
#, no-wrap
msgid "`toQuery()` {.collection-method}"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 184
# File: docs/9.x/eloquent-collections.md, line: 184
# File: docs/master/eloquent-collections.md, line: 184
msgid "The `toQuery` method returns an Eloquent query builder instance containing a `whereIn` constraint on the collection model's primary keys:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 188
# File: docs/9.x/eloquent-collections.md, line: 188
# File: docs/master/eloquent-collections.md, line: 188
#, no-wrap
msgid "    $users = User::where('status', 'VIP')->get();\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 192
# File: docs/9.x/eloquent-collections.md, line: 192
# File: docs/master/eloquent-collections.md, line: 192
#, no-wrap
msgid ""
"    $users->toQuery()->update([\n"
"        'status' => 'Administrator',\n"
"    ]);\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 194
# File: docs/9.x/eloquent-collections.md, line: 194
# File: docs/master/eloquent-collections.md, line: 194
#, no-wrap
msgid "<a name=\"method-unique\"></a>\n"
msgstr ""
#
#. type: Title ####
# File: docs/8.x/eloquent-collections.md, line: 194
# File: docs/9.x/eloquent-collections.md, line: 194
# File: docs/master/eloquent-collections.md, line: 194
#, no-wrap
msgid "`unique($key = null, $strict = false)` {.collection-method}"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 197
# File: docs/9.x/eloquent-collections.md, line: 197
# File: docs/master/eloquent-collections.md, line: 197
msgid "The `unique` method returns all of the unique models in the collection. Any models of the same type with the same primary key as another model in the collection are removed:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 199
# File: docs/9.x/eloquent-collections.md, line: 199
# File: docs/master/eloquent-collections.md, line: 199
#, no-wrap
msgid "    $users = $users->unique();\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 201
# File: docs/9.x/eloquent-collections.md, line: 201
# File: docs/master/eloquent-collections.md, line: 201
#, no-wrap
msgid "<a name=\"custom-collections\"></a>\n"
msgstr ""
#
#. type: Title ##
# File: docs/8.x/eloquent-collections.md, line: 201
# File: docs/9.x/eloquent-collections.md, line: 201
# File: docs/master/eloquent-collections.md, line: 201
#, no-wrap
msgid "Custom Collections"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 204
# File: docs/9.x/eloquent-collections.md, line: 204
# File: docs/master/eloquent-collections.md, line: 204
msgid "If you would like to use a custom `Collection` object when interacting with a given model, you may define a `newCollection` method on your model:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 206
# File: docs/9.x/eloquent-collections.md, line: 206
# File: docs/master/eloquent-collections.md, line: 206
#, no-wrap
msgid "    <?php\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 208
# File: docs/9.x/eloquent-collections.md, line: 208
# File: docs/master/eloquent-collections.md, line: 208
#, no-wrap
msgid "    namespace App\\Models;\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 211
# File: docs/9.x/eloquent-collections.md, line: 211
# File: docs/master/eloquent-collections.md, line: 211
#, no-wrap
msgid ""
"    use App\\Support\\UserCollection;\n"
"    use Illuminate\\Database\\Eloquent\\Model;\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 225
# File: docs/9.x/eloquent-collections.md, line: 225
# File: docs/master/eloquent-collections.md, line: 225
#, no-wrap
msgid ""
"    class User extends Model\n"
"    {\n"
"        /**\n"
"         * Create a new Eloquent Collection instance.\n"
"         *\n"
"         * @param  array  $models\n"
"         * @return \\Illuminate\\Database\\Eloquent\\Collection\n"
"         */\n"
"        public function newCollection(array $models = [])\n"
"        {\n"
"            return new UserCollection($models);\n"
"        }\n"
"    }\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/eloquent-collections.md, line: 226
# File: docs/9.x/eloquent-collections.md, line: 226
# File: docs/master/eloquent-collections.md, line: 226
msgid "Once you have defined a `newCollection` method, you will receive an instance of your custom collection anytime Eloquent would normally return an `Illuminate\\Database\\Eloquent\\Collection` instance. If you would like to use a custom collection for every model in your application, you should define the `newCollection` method on a base model class that is extended by all of your application's models."
msgstr ""
