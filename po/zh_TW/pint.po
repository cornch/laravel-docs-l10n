msgid ""
msgstr ""
"Content-Type: text/plain; charset=UTF-8\n"
"Language: zh_TW\n"
"Language-Team: Chinese Traditional\n"
"PO-Revision-Date: 2024-06-30 08:27\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Project-Id-Version: laravel-docs\n"
"X-Crowdin-File: /main/templates/pint.pot\n"
"X-Crowdin-File-ID: 178\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"

# H1
#: ./docs/9.x/pint.md:1
#: ./docs/10.x/pint.md:1
#: ./docs/11.x/pint.md:1
#: ./docs/master/pint.md:1
msgid "Laravel Pint"
msgstr "Laravel Pint"

# P
#: ./docs/9.x/pint.md:3
#: ./docs/10.x/pint.md:3
#: ./docs/11.x/pint.md:3
#: ./docs/master/pint.md:3
msgid "[Introduction](#introduction)"
msgstr "[簡介](#introduction)"

# P
#: ./docs/9.x/pint.md:4
#: ./docs/10.x/pint.md:4
#: ./docs/11.x/pint.md:4
#: ./docs/master/pint.md:4
msgid "[Installation](#installation)"
msgstr "[安裝](#installation)"

# P
#: ./docs/9.x/pint.md:5
#: ./docs/10.x/pint.md:5
#: ./docs/11.x/pint.md:5
#: ./docs/master/pint.md:5
msgid "[Running Pint](#running-pint)"
msgstr "[執行 Pint](#running-pint)"

# P
#: ./docs/9.x/pint.md:6
#: ./docs/10.x/pint.md:6
#: ./docs/11.x/pint.md:6
#: ./docs/master/pint.md:6
msgid "[Configuring Pint](#configuring-pint)"
msgstr "[設定 Pint](#configuring-pint)"

# P
#: ./docs/9.x/pint.md:7
#: ./docs/10.x/pint.md:7
#: ./docs/11.x/pint.md:7
#: ./docs/master/pint.md:7
msgid "[Presets](#presets)"
msgstr "[預設](#presets)"

# P
#: ./docs/9.x/pint.md:8
#: ./docs/10.x/pint.md:8
#: ./docs/11.x/pint.md:8
#: ./docs/master/pint.md:8
msgid "[Rules](#rules)"
msgstr "[規則](#rules)"

# P
#: ./docs/9.x/pint.md:9
#: ./docs/10.x/pint.md:9
#: ./docs/11.x/pint.md:9
#: ./docs/master/pint.md:9
msgid "[Excluding Files / Folders](#excluding-files-or-folders)"
msgstr "[排除檔案或資料夾](#excluding-files-or-folders)"

# P
#: ./docs/11.x/pint.md:10
msgid "[Continuous Integration](#continuous-integration)"
msgstr ""

# P
#: ./docs/11.x/pint.md:11
msgid "[GitHub Actions](#running-tests-on-github-actions)"
msgstr ""

# P
#: ./docs/9.x/pint.md:11
#: ./docs/10.x/pint.md:11
#: ./docs/11.x/pint.md:13
#: ./docs/master/pint.md:11
#~ msgid "<a name=\"introduction\"></a>"
#~ msgstr ""

# H2
#: ./docs/9.x/pint.md:12
#: ./docs/10.x/pint.md:12
#: ./docs/11.x/pint.md:14
#: ./docs/master/pint.md:12
msgid "Introduction"
msgstr "簡介"

# P
#: ./docs/9.x/pint.md:14
#: ./docs/10.x/pint.md:14
#: ./docs/11.x/pint.md:16
msgid "[Laravel Pint](https://github.com/laravel/pint) is an opinionated PHP code style fixer for minimalists. Pint is built on top of PHP-CS-Fixer and makes it simple to ensure that your code style stays clean and consistent."
msgstr "[Laravel Pint](https://github.com/laravel/pint) 是一款專為極簡主義者涉及的主導性 (Opinionated) PHP ^[Code Style Fixer](程式碼風格修正程式)。Pint 以 PHP-CS-Fixer 為基礎，並讓其保持簡單，以確保你的 Code Style 保持乾淨與統一。"

# P
#: ./docs/master/pint.md:14
msgid "[Laravel Pint](https://github.com/laravel/pint) is an opinionated PHP code style fixer for minimalists. Pint is built on top of [PHP CS Fixer](https://github.com/FriendsOfPHP/PHP-CS-Fixer) and makes it simple to ensure that your code style stays clean and consistent."
msgstr ""

# P
#: ./docs/9.x/pint.md:16
#: ./docs/10.x/pint.md:16
#: ./docs/11.x/pint.md:18
#: ./docs/master/pint.md:16
msgid "Pint is automatically installed with all new Laravel applications so you may start using it immediately. By default, Pint does not require any configuration and will fix code style issues in your code by following the opinionated coding style of Laravel."
msgstr "在所有新建立的 Laravel 專案中，會自動安裝 Pint，因此你可以馬上開始使用。預設情況下，Pint 並不需要任何設定，會自動使用 Laravel 的主導性 Coding Style 來修正程式碼中的 Coding Style 問題。"

# P
#: ./docs/9.x/pint.md:18
#: ./docs/10.x/pint.md:18
#: ./docs/11.x/pint.md:20
#: ./docs/master/pint.md:18
#~ msgid "<a name=\"installation\"></a>"
#~ msgstr ""

# H2
#: ./docs/9.x/pint.md:19
#: ./docs/10.x/pint.md:19
#: ./docs/11.x/pint.md:21
#: ./docs/master/pint.md:19
msgid "Installation"
msgstr "安裝"

# P
#: ./docs/9.x/pint.md:21
#: ./docs/10.x/pint.md:21
#: ./docs/11.x/pint.md:23
#: ./docs/master/pint.md:21
msgid "Pint is included in recent releases of the Laravel framework, so installation is typically unnecessary. However, for older applications, you may install Laravel Pint via Composer:"
msgstr "Pint 已包含在最近釋出的 Laravel 框架中，因此通常不需要進行安裝。不過，在舊的專案中，可以使用 Composer 來安裝 Laravel Pint："

# CODE: shell
#: ./docs/9.x/pint.md:23
#: ./docs/10.x/pint.md:23
#: ./docs/11.x/pint.md:25
#: ./docs/master/pint.md:23
msgid "composer require laravel/pint --dev"
msgstr ""

# P
#: ./docs/9.x/pint.md:27
#: ./docs/10.x/pint.md:27
#: ./docs/11.x/pint.md:29
#: ./docs/master/pint.md:27
#~ msgid "<a name=\"running-pint\"></a>"
#~ msgstr ""

# H2
#: ./docs/9.x/pint.md:28
#: ./docs/10.x/pint.md:28
#: ./docs/11.x/pint.md:30
#: ./docs/master/pint.md:28
msgid "Running Pint"
msgstr "執行 Pint"

# P
#: ./docs/9.x/pint.md:30
#: ./docs/10.x/pint.md:30
#: ./docs/11.x/pint.md:32
#: ./docs/master/pint.md:30
msgid "You can instruct Pint to fix code style issues by invoking the `pint` binary that is available in your project's `vendor/bin` directory:"
msgstr "只要呼叫專案 `vendor/bin` 目錄中的 `pint` 二進位檔案，就可以讓 Pint 修正 Coding Style 問題："

# CODE: shell
#: ./docs/9.x/pint.md:32
#: ./docs/10.x/pint.md:32
#: ./docs/11.x/pint.md:34
#: ./docs/master/pint.md:32
msgid "./vendor/bin/pint"
msgstr ""

# P
#: ./docs/9.x/pint.md:36
#: ./docs/10.x/pint.md:36
#: ./docs/11.x/pint.md:38
#: ./docs/master/pint.md:36
msgid "You may also run Pint on specific files or directories:"
msgstr "也可以針對特定檔案或目錄來執行 Pint："

# CODE: shell
#: ./docs/9.x/pint.md:38
#: ./docs/10.x/pint.md:38
#: ./docs/11.x/pint.md:40
#: ./docs/master/pint.md:38
msgid ""
"./vendor/bin/pint app/Models\n"
"\n"
"./vendor/bin/pint app/Models/User.php"
msgstr ""

# P
#: ./docs/9.x/pint.md:44
#: ./docs/10.x/pint.md:44
#: ./docs/11.x/pint.md:46
#: ./docs/master/pint.md:44
msgid "Pint will display a thorough list of all of the files that it updates. You can view even more detail about Pint's changes by providing the `-v` option when invoking Pint:"
msgstr "Pint 會列出其更新的檔案列表。只要在呼叫 Pint 時提供 `-v` 選項，就可以檢視更多關於 Pint 所做出更改的詳情："

# CODE: shell
#: ./docs/9.x/pint.md:46
#: ./docs/10.x/pint.md:46
#: ./docs/11.x/pint.md:48
#: ./docs/master/pint.md:46
msgid "./vendor/bin/pint -v"
msgstr ""

# P
#: ./docs/9.x/pint.md:50
#: ./docs/10.x/pint.md:50
#: ./docs/master/pint.md:50
msgid "If you would like Pint to simply inspect your code for style errors without actually changing the files, you may use the `--test` option:"
msgstr "若只想讓 Pint 偵測程式碼中的 Coding Style 錯誤而不實際更改檔案，可以使用 `--test` 選項："

# P
#: ./docs/11.x/pint.md:52
msgid "If you would like Pint to simply inspect your code for style errors without actually changing the files, you may use the `--test` option. Pint will return a non-zero exit code if any code style errors are found:"
msgstr ""

# CODE: shell
#: ./docs/9.x/pint.md:52
#: ./docs/10.x/pint.md:52
#: ./docs/11.x/pint.md:54
#: ./docs/master/pint.md:52
msgid "./vendor/bin/pint --test"
msgstr ""

# P
#: ./docs/9.x/pint.md:56
#: ./docs/10.x/pint.md:56
#: ./docs/11.x/pint.md:58
#: ./docs/master/pint.md:56
msgid "If you would like Pint to only modify the files that have uncommitted changes according to Git, you may use the `--dirty` option:"
msgstr "若要根據 Git 來讓 Pint 只修改包含未 Commit 更改的檔案，可使用 `--dirty` 選項："

# CODE: shell
#: ./docs/9.x/pint.md:58
#: ./docs/10.x/pint.md:58
#: ./docs/11.x/pint.md:60
#: ./docs/master/pint.md:58
msgid "./vendor/bin/pint --dirty"
msgstr ""

# P
#: ./docs/9.x/pint.md:62
#: ./docs/10.x/pint.md:62
#: ./docs/11.x/pint.md:70
#: ./docs/master/pint.md:62
#~ msgid "<a name=\"configuring-pint\"></a>"
#~ msgstr ""

# H2
#: ./docs/9.x/pint.md:63
#: ./docs/10.x/pint.md:63
#: ./docs/11.x/pint.md:71
#: ./docs/master/pint.md:63
msgid "Configuring Pint"
msgstr "設定 Pint"

# P
#: ./docs/11.x/pint.md:64
msgid "If you would like Pint to fix any files with code style errors but also exit with a non-zero exit code if any errors were fixed, you may use the `--repair` option:"
msgstr ""

# P
#: ./docs/9.x/pint.md:65
#: ./docs/10.x/pint.md:65
#: ./docs/11.x/pint.md:73
#: ./docs/master/pint.md:65
msgid "As previously mentioned, Pint does not require any configuration. However, if you wish to customize the presets, rules, or inspected folders, you may do so by creating a `pint.json` file in your project's root directory:"
msgstr "剛才也提到過，Pint 不需要任何設定檔。不過，若有需要更改預設、規則、或是要檢查的資料夾，可在專案根目錄建立一個 `pint.json` 檔："

# CODE: shell
#: ./docs/11.x/pint.md:66
msgid "./vendor/bin/pint --repair"
msgstr ""

# CODE: json
#: ./docs/9.x/pint.md:67
#: ./docs/10.x/pint.md:67
#: ./docs/11.x/pint.md:75
#: ./docs/master/pint.md:67
msgid ""
"{\n"
"    \"preset\": \"laravel\"\n"
"}"
msgstr ""

# P
#: ./docs/9.x/pint.md:73
#: ./docs/10.x/pint.md:73
#: ./docs/11.x/pint.md:81
#: ./docs/master/pint.md:73
msgid "In addition, if you wish to use a `pint.json` from a specific directory, you may provide the `--config` option when invoking Pint:"
msgstr "此外，若要使用特定資料夾中的 `pint.json` 檔，可在呼叫 Pint 時提供 `--config` 選項："

# CODE: shell
#: ./docs/9.x/pint.md:75
#: ./docs/10.x/pint.md:75
#: ./docs/master/pint.md:75
msgid "pint --config vendor/my-company/coding-style/pint.json"
msgstr ""

# P
#: ./docs/9.x/pint.md:79
#: ./docs/10.x/pint.md:79
#: ./docs/11.x/pint.md:87
#: ./docs/master/pint.md:79
#~ msgid "<a name=\"presets\"></a>"
#~ msgstr ""

# H3
#: ./docs/9.x/pint.md:80
#: ./docs/10.x/pint.md:80
#: ./docs/11.x/pint.md:88
#: ./docs/master/pint.md:80
msgid "Presets"
msgstr "預設"

# P
#: ./docs/9.x/pint.md:82
#: ./docs/10.x/pint.md:82
#: ./docs/master/pint.md:82
msgid "Presets defines a set of rules that can be used to fix code style issues in your code. By default, Pint uses the `laravel` preset, which fixes issues by following the opinionated coding style of Laravel. However, you may specify a different preset by providing the `--preset` option to Pint:"
msgstr "「預設 (Preset)」定義了一組可用來修正程式碼中 Coding Style 的規則。預設情況下，Pint 使用了 `laravel` 預設，這個預設遵守 Laravel 的主導性 Coding Style。不過，也可與提供 `--preset` 選項給 Pint 來指定不同的預設："

# CODE: shell
#: ./docs/11.x/pint.md:83
msgid "./vendor/bin/pint --config vendor/my-company/coding-style/pint.json"
msgstr ""

# CODE: shell
#: ./docs/9.x/pint.md:84
#: ./docs/10.x/pint.md:84
#: ./docs/master/pint.md:84
msgid "pint --preset psr12"
msgstr ""

# P
#: ./docs/9.x/pint.md:88
#: ./docs/10.x/pint.md:88
#: ./docs/11.x/pint.md:96
#: ./docs/master/pint.md:88
msgid "If you wish, you may also set the preset in your project's `pint.json` file:"
msgstr "若有需要，也可以在專案的 `pint.json` 檔案中設定預設："

# P
#: ./docs/11.x/pint.md:90
msgid "Presets define a set of rules that can be used to fix code style issues in your code. By default, Pint uses the `laravel` preset, which fixes issues by following the opinionated coding style of Laravel. However, you may specify a different preset by providing the `--preset` option to Pint:"
msgstr ""

# CODE: json
#: ./docs/9.x/pint.md:90
#: ./docs/10.x/pint.md:90
#: ./docs/11.x/pint.md:98
#: ./docs/master/pint.md:90
msgid ""
"{\n"
"    \"preset\": \"psr12\"\n"
"}"
msgstr ""

# CODE: shell
#: ./docs/11.x/pint.md:92
msgid "./vendor/bin/pint --preset psr12"
msgstr ""

# P
#: ./docs/10.x/pint.md:96
#: ./docs/master/pint.md:96
msgid "Pint's currently supported presets are: `laravel`, `per`, `psr12`, and `symfony`."
msgstr "Pint 目前支援的預設有：`laravel`、`per`、`psr12`、`symfony`。"

# P
#: ./docs/9.x/pint.md:96
msgid "Pint's currently supported presets are: `laravel`, `psr12`, and `symfony`."
msgstr "Pint 目前支援的預設有：`laravel`、`psr12`、`symfony`。"

# P
#: ./docs/9.x/pint.md:98
#: ./docs/10.x/pint.md:98
#: ./docs/11.x/pint.md:106
#: ./docs/master/pint.md:98
#~ msgid "<a name=\"rules\"></a>"
#~ msgstr ""

# H3
#: ./docs/9.x/pint.md:99
#: ./docs/10.x/pint.md:99
#: ./docs/11.x/pint.md:107
#: ./docs/master/pint.md:99
msgid "Rules"
msgstr "規則"

# P
#: ./docs/9.x/pint.md:101
#: ./docs/10.x/pint.md:101
#: ./docs/11.x/pint.md:109
#: ./docs/master/pint.md:101
msgid "Rules are style guidelines that Pint will use to fix code style issues in your code. As mentioned above, presets are predefined groups of rules that should be perfect for most PHP projects, so you typically will not need to worry about the individual rules they contain."
msgstr "「規則 (Rule)」是 Pint 要用來修正程式碼 Coding Style 問題的樣式準則。剛才提到過，「預設」預先定義了一組規則，這些規則應該適用於大多數的 PHP 專案，因此你通常不需要擔心個別的規則。"

# P
#: ./docs/9.x/pint.md:103
#: ./docs/10.x/pint.md:103
#: ./docs/master/pint.md:103
msgid "However, if you wish, you may enable or disable specific rules in your `pint.json` file:"
msgstr "不過，若有需要，也可以在 `pint.json` 檔中啟用或禁用特定的規則："

# P
#: ./docs/11.x/pint.md:104
msgid "Pint's currently supported presets are: `laravel`, `per`, `psr12`, `symfony`, and `empty`."
msgstr ""

# CODE: json
#: ./docs/9.x/pint.md:105
#: ./docs/10.x/pint.md:105
#: ./docs/master/pint.md:105
msgid ""
"{\n"
"    \"preset\": \"laravel\",\n"
"    \"rules\": {\n"
"        \"simplified_null_return\": true,\n"
"        \"braces\": false,\n"
"        \"new_with_braces\": {\n"
"            \"anonymous_class\": false,\n"
"            \"named_class\": false\n"
"        }\n"
"    }\n"
"}"
msgstr ""

# P
#: ./docs/11.x/pint.md:111
msgid "However, if you wish, you may enable or disable specific rules in your `pint.json` file or use the `empty` preset and define the rules from scratch:"
msgstr ""

# CODE: json
#: ./docs/11.x/pint.md:113
msgid ""
"{\n"
"    \"preset\": \"laravel\",\n"
"    \"rules\": {\n"
"        \"simplified_null_return\": true,\n"
"        \"array_indentation\": false,\n"
"        \"new_with_parentheses\": {\n"
"            \"anonymous_class\": true,\n"
"            \"named_class\": true\n"
"        }\n"
"    }\n"
"}"
msgstr ""

# P
#: ./docs/9.x/pint.md:119
#: ./docs/10.x/pint.md:119
#: ./docs/11.x/pint.md:127
msgid "Pint is built on top of [PHP-CS-Fixer](https://github.com/FriendsOfPHP/PHP-CS-Fixer). Therefore, you may use any of its rules to fix code style issues in your project: [PHP-CS-Fixer Configurator](https://mlocati.github.io/php-cs-fixer-configurator)."
msgstr "Pint 以 [PHP-CS-Fixer](https://github.com/FriendsOfPHP/PHP-CS-Fixer) 為基礎製作，因此，你可以使用 PHP-CS-Fixer 的規則來修正專案中的 Coding Style 問題： [PHP-CS-Fixer Configurator](https://mlocati.github.io/php-cs-fixer-configurator)。"

# P
#: ./docs/master/pint.md:119
msgid "Pint is built on top of [PHP CS Fixer](https://github.com/FriendsOfPHP/PHP-CS-Fixer). Therefore, you may use any of its rules to fix code style issues in your project: [PHP CS Fixer Configurator](https://mlocati.github.io/php-cs-fixer-configurator)."
msgstr ""

# P
#: ./docs/9.x/pint.md:121
#: ./docs/10.x/pint.md:121
#: ./docs/11.x/pint.md:129
#: ./docs/master/pint.md:121
#~ msgid "<a name=\"excluding-files-or-folders\"></a>"
#~ msgstr ""

# H3
#: ./docs/9.x/pint.md:122
#: ./docs/10.x/pint.md:122
#: ./docs/11.x/pint.md:130
#: ./docs/master/pint.md:122
msgid "Excluding Files / Folders"
msgstr "排除檔案或資料夾"

# P
#: ./docs/9.x/pint.md:124
#: ./docs/10.x/pint.md:124
#: ./docs/11.x/pint.md:132
#: ./docs/master/pint.md:124
msgid "By default, Pint will inspect all `.php` files in your project except those in the `vendor` directory. If you wish to exclude more folders, you may do so using the `exclude` configuration option:"
msgstr "預設情況下，Pint 會檢查專案中除了 `vendor` 目錄以外的所有 `.php` 檔案。若有需要排除其他目錄，可使用 `exclude` 設定選項："

# CODE: json
#: ./docs/9.x/pint.md:126
#: ./docs/10.x/pint.md:126
#: ./docs/11.x/pint.md:134
#: ./docs/master/pint.md:126
msgid ""
"{\n"
"    \"exclude\": [\n"
"        \"my-specific/folder\"\n"
"    ]\n"
"}"
msgstr ""

# P
#: ./docs/9.x/pint.md:134
#: ./docs/10.x/pint.md:134
#: ./docs/11.x/pint.md:142
#: ./docs/master/pint.md:134
msgid "If you wish to exclude all files that contain a given name pattern, you may do so using the `notName` configuration option:"
msgstr "若有需要排除所有符合特定檔名規則的檔案，可使用 `notName` 選項："

# CODE: json
#: ./docs/9.x/pint.md:136
#: ./docs/10.x/pint.md:136
#: ./docs/11.x/pint.md:144
#: ./docs/master/pint.md:136
msgid ""
"{\n"
"    \"notName\": [\n"
"        \"*-my-file.php\"\n"
"    ]\n"
"}"
msgstr ""

# P
#: ./docs/9.x/pint.md:144
#: ./docs/10.x/pint.md:144
#: ./docs/11.x/pint.md:152
#: ./docs/master/pint.md:144
msgid "If you would like to exclude a file by providing an exact path to the file, you may do so using the `notPath` configuration option:"
msgstr "若有需要排除特定路徑的檔案，可使用 `notPath` 設定選項："

# CODE: json
#: ./docs/9.x/pint.md:146
#: ./docs/10.x/pint.md:146
#: ./docs/11.x/pint.md:154
#: ./docs/master/pint.md:146
msgid ""
"{\n"
"    \"notPath\": [\n"
"        \"path/to/excluded-file.php\"\n"
"    ]\n"
"}"
msgstr ""

# P
#: ./docs/11.x/pint.md:162
#~ msgid "<a name=\"continuous-integration\"></a>"
#~ msgstr ""

# H2
#: ./docs/11.x/pint.md:163
msgid "Continuous Integration"
msgstr ""

# P
#: ./docs/11.x/pint.md:165
#~ msgid "<a name=\"running-tests-on-github-actions\"></a>"
#~ msgstr ""

# H3
#: ./docs/11.x/pint.md:166
msgid "GitHub Actions"
msgstr ""

# P
#: ./docs/11.x/pint.md:168
msgid "To automate linting your project with Laravel Pint, you can configure [GitHub Actions](https://github.com/features/actions) to run Pint whenever new code is pushed to GitHub. First, be sure to grant \"Read and write permissions\" to workflows within GitHub at **Settings > Actions > General > Workflow permissions**. Then, create a `.github/workflows/lint.yml` file with the following content:"
msgstr ""

# CODE: yaml
#: ./docs/11.x/pint.md:170
msgid ""
"name: Fix Code Style\n"
"\n"
"on: [push]\n"
"\n"
"jobs:\n"
"  lint:\n"
"    runs-on: ubuntu-latest\n"
"    strategy:\n"
"      fail-fast: true\n"
"      matrix:\n"
"        php: [8.3]\n"
"\n"
"    steps:\n"
"      - name: Checkout code\n"
"        uses: actions/checkout@v4\n"
"\n"
"      - name: Setup PHP\n"
"        uses: shivammathur/setup-php@v2\n"
"        with:\n"
"          php-version: ${{ matrix.php }}\n"
"          extensions: json, dom, curl, libxml, mbstring\n"
"          coverage: none\n"
"\n"
"      - name: Install Pint\n"
"        run: composer global require laravel/pint\n"
"\n"
"      - name: Run Pint\n"
"        run: pint\n"
"\n"
"      - name: Commit linted files\n"
"        uses: stefanzweifel/git-auto-commit-action@v5\n"
"        with:\n"
"          commit_message: \"Fixes coding style\""
msgstr ""
