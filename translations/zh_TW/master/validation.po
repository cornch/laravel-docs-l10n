# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-03-23 04:12+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Cornch <cornch@cornch.dev>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.4.2\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Title #
#: docs/master/validation.md:1
#, no-wrap
msgid "Validation"
msgstr ""

#. type: Bullet: '- '
#: docs/master/validation.md:32
msgid "[Introduction](#introduction)"
msgstr ""

#. type: Bullet: '- '
#: docs/master/validation.md:32
msgid "[Validation Quickstart](#validation-quickstart)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/validation.md:32
msgid "[Defining The Routes](#quick-defining-the-routes)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/validation.md:32
msgid "[Creating The Controller](#quick-creating-the-controller)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/validation.md:32
msgid "[Writing The Validation Logic](#quick-writing-the-validation-logic)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/validation.md:32
msgid ""
"[Displaying The Validation Errors](#quick-displaying-the-validation-errors)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/validation.md:32
msgid "[Repopulating Forms](#repopulating-forms)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/validation.md:32
msgid "[A Note On Optional Fields](#a-note-on-optional-fields)"
msgstr ""

#. type: Bullet: '- '
#: docs/master/validation.md:32
msgid "[Form Request Validation](#form-request-validation)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/validation.md:32
msgid "[Creating Form Requests](#creating-form-requests)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/validation.md:32
msgid "[Authorizing Form Requests](#authorizing-form-requests)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/validation.md:32
msgid "[Customizing The Error Messages](#customizing-the-error-messages)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/validation.md:32
msgid "[Preparing Input For Validation](#preparing-input-for-validation)"
msgstr ""

#. type: Bullet: '- '
#: docs/master/validation.md:32
msgid "[Manually Creating Validators](#manually-creating-validators)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/validation.md:32
msgid "[Automatic Redirection](#automatic-redirection)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/validation.md:32
msgid "[Named Error Bags](#named-error-bags)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/validation.md:32
msgid ""
"[Customizing The Error Messages](#manual-customizing-the-error-messages)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/validation.md:32
msgid "[After Validation Hook](#after-validation-hook)"
msgstr ""

#. type: Bullet: '- '
#: docs/master/validation.md:32
msgid "[Working With Error Messages](#working-with-error-messages)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/validation.md:32
msgid ""
"[Specifying Custom Messages In Language Files](#specifying-custom-messages-"
"in-language-files)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/validation.md:32
msgid ""
"[Specifying Attributes In Language Files](#specifying-attribute-in-language-"
"files)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/validation.md:32
msgid ""
"[Specifying Values In Language Files](#specifying-values-in-language-files)"
msgstr ""

#. type: Bullet: '- '
#: docs/master/validation.md:32
msgid "[Available Validation Rules](#available-validation-rules)"
msgstr ""

#. type: Bullet: '- '
#: docs/master/validation.md:32
msgid "[Conditionally Adding Rules](#conditionally-adding-rules)"
msgstr ""

#. type: Bullet: '- '
#: docs/master/validation.md:32
msgid "[Validating Arrays](#validating-arrays)"
msgstr ""

#. type: Bullet: '- '
#: docs/master/validation.md:32
msgid "[Custom Validation Rules](#custom-validation-rules)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/validation.md:32
msgid "[Using Rule Objects](#using-rule-objects)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/validation.md:32
msgid "[Using Closures](#using-closures)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/validation.md:32
msgid "[Implicit Rules](#implicit-rules)"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:34
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/validation.md:34
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:37
msgid ""
"Laravel provides several different approaches to validate your application's "
"incoming data. It is most common to use the `validate` method available on "
"all incoming HTTP requests. However, we will discuss other approaches to "
"validation as well."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:39
msgid ""
"Laravel includes a wide variety of convenient validation rules that you may "
"apply to data, even providing the ability to validate if values are unique "
"in a given database table. We'll cover each of these validation rules in "
"detail so that you are familiar with all of Laravel's validation features."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:41
#, no-wrap
msgid "<a name=\"validation-quickstart\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/validation.md:41
#, no-wrap
msgid "Validation Quickstart"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:44
msgid ""
"To learn about Laravel's powerful validation features, let's look at a "
"complete example of validating a form and displaying the error messages back "
"to the user. By reading this high-level overview, you'll be able to gain a "
"good general understanding of how to validate incoming request data using "
"Laravel:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:46
#, no-wrap
msgid "<a name=\"quick-defining-the-routes\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/validation.md:46
#, no-wrap
msgid "Defining The Routes"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:49
msgid ""
"First, let's assume we have the following routes defined in our `routes/web."
"php` file:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:51
#, no-wrap
msgid "    use App\\Http\\Controllers\\PostController;\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:54
#, no-wrap
msgid ""
"    Route::get('/post/create', [PostController::class, 'create']);\n"
"    Route::post('/post', [PostController::class, 'store']);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:56
msgid ""
"The `GET` route will display a form for the user to create a new blog post, "
"while the `POST` route will store the new blog post in the database."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:58
#, no-wrap
msgid "<a name=\"quick-creating-the-controller\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/validation.md:58
#, no-wrap
msgid "Creating The Controller"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:61
msgid ""
"Next, let's take a look at a simple controller that handles incoming "
"requests to these routes. We'll leave the `store` method empty for now:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:63 docs/master/validation.md:412
#: docs/master/validation.md:1379
#, no-wrap
msgid "    <?php\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:65 docs/master/validation.md:414
#, no-wrap
msgid "    namespace App\\Http\\Controllers;\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:68
#, no-wrap
msgid ""
"    use App\\Http\\Controllers\\Controller;\n"
"    use Illuminate\\Http\\Request;\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:80
#, no-wrap
msgid ""
"    class PostController extends Controller\n"
"    {\n"
"        /**\n"
"         * Show the form to create a new blog post.\n"
"         *\n"
"         * @return \\Illuminate\\View\\View\n"
"         */\n"
"        public function create()\n"
"        {\n"
"            return view('post.create');\n"
"        }\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:92
#, no-wrap
msgid ""
"        /**\n"
"         * Store a new blog post.\n"
"         *\n"
"         * @param  \\Illuminate\\Http\\Request  $request\n"
"         * @return \\Illuminate\\Http\\Response\n"
"         */\n"
"        public function store(Request $request)\n"
"        {\n"
"            // Validate and store the blog post...\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:94
#, no-wrap
msgid "<a name=\"quick-writing-the-validation-logic\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/validation.md:94
#, no-wrap
msgid "Writing The Validation Logic"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:97
msgid ""
"Now we are ready to fill in our `store` method with the logic to validate "
"the new blog post. To do this, we will use the `validate` method provided by "
"the `Illuminate\\Http\\Request` object. If the validation rules pass, your "
"code will keep executing normally; however, if validation fails, an "
"exception will be thrown and the proper error response will automatically be "
"sent back to the user."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:99
msgid ""
"If validation fails during a traditional HTTP request, a redirect response "
"to the previous URL will be generated. If the incoming request is an XHR "
"request, a JSON response containing the validation error messages will be "
"returned."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:101
msgid ""
"To get a better understanding of the `validate` method, let's jump back into "
"the `store` method:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:114
#, no-wrap
msgid ""
"    /**\n"
"     * Store a new blog post.\n"
"     *\n"
"     * @param  \\Illuminate\\Http\\Request  $request\n"
"     * @return \\Illuminate\\Http\\Response\n"
"     */\n"
"    public function store(Request $request)\n"
"    {\n"
"        $validated = $request->validate([\n"
"            'title' => 'required|unique:posts|max:255',\n"
"            'body' => 'required',\n"
"        ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:117
#, no-wrap
msgid ""
"        // The blog post is valid...\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:119
msgid ""
"As you can see, the validation rules are passed into the `validate` method. "
"Don't worry - all available validation rules are [documented](#available-"
"validation-rules). Again, if the validation fails, the proper response will "
"automatically be generated. If the validation passes, our controller will "
"continue executing normally."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:121
msgid ""
"Alternatively, validation rules may be specified as arrays of rules instead "
"of a single `|` delimited string:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:126
#, no-wrap
msgid ""
"    $validatedData = $request->validate([\n"
"        'title' => ['required', 'unique:posts', 'max:255'],\n"
"        'body' => ['required'],\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:128
msgid ""
"In addition, you may use the `validateWithBag` method to validate a request "
"and store any error messages within a [named error bag](#named-error-bags):"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:133
#, no-wrap
msgid ""
"    $validatedData = $request->validateWithBag('post', [\n"
"        'title' => ['required', 'unique:posts', 'max:255'],\n"
"        'body' => ['required'],\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:135
#, no-wrap
msgid "<a name=\"stopping-on-first-validation-failure\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:135
#, no-wrap
msgid "Stopping On First Validation Failure"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:138
msgid ""
"Sometimes you may wish to stop running validation rules on an attribute "
"after the first validation failure. To do so, assign the `bail` rule to the "
"attribute:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:143
#, no-wrap
msgid ""
"    $request->validate([\n"
"        'title' => 'bail|required|unique:posts|max:255',\n"
"        'body' => 'required',\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:145
msgid ""
"In this example, if the `unique` rule on the `title` attribute fails, the "
"`max` rule will not be checked. Rules will be validated in the order they "
"are assigned."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:147
#, no-wrap
msgid "<a name=\"a-note-on-nested-attributes\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:147
#, no-wrap
msgid "A Note On Nested Attributes"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:150
msgid ""
"If the incoming HTTP request contains \"nested\" field data, you may specify "
"these fields in your validation rules using \"dot\" syntax:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:156
#, no-wrap
msgid ""
"    $request->validate([\n"
"        'title' => 'required|unique:posts|max:255',\n"
"        'author.name' => 'required',\n"
"        'author.description' => 'required',\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:158
msgid ""
"On the other hand, if your field name contains a literal period, you can "
"explicitly prevent this from being interpreted as \"dot\" syntax by escaping "
"the period with a backslash:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:163
#, no-wrap
msgid ""
"    $request->validate([\n"
"        'title' => 'required|unique:posts|max:255',\n"
"        'v1\\.0' => 'required',\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:165
#, no-wrap
msgid "<a name=\"quick-displaying-the-validation-errors\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/validation.md:165
#, no-wrap
msgid "Displaying The Validation Errors"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:168
msgid ""
"So, what if the incoming request fields do not pass the given validation "
"rules? As mentioned previously, Laravel will automatically redirect the user "
"back to their previous location. In addition, all of the validation errors "
"and [request input](/docs/{{version}}/requests#retrieving-old-input) will "
"automatically be [flashed to the session](/docs/{{version}}/session#flash-"
"data)."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:170
msgid ""
"An `$errors` variable is shared with all of your application's views by the "
"`Illuminate\\View\\Middleware\\ShareErrorsFromSession` middleware, which is "
"provided by the `web` middleware group. When this middleware is applied an `"
"$errors` variable will always be available in your views, allowing you to "
"conveniently assume the `$errors` variable is always defined and can be "
"safely used. The `$errors` variable will be an instance of `Illuminate"
"\\Support\\MessageBag`. For more information on working with this object, "
"[check out its documentation](#working-with-error-messages)."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:172
msgid ""
"So, in our example, the user will be redirected to our controller's `create` "
"method when validation fails, allowing us to display the error messages in "
"the view:"
msgstr ""

#. type: Fenced code block (html)
#: docs/master/validation.md:173
#, no-wrap
msgid ""
"<!-- /resources/views/post/create.blade.php -->\n"
"\n"
"<h1>Create Post</h1>\n"
"\n"
"@if ($errors->any())\n"
"    <div class=\"alert alert-danger\">\n"
"        <ul>\n"
"            @foreach ($errors->all() as $error)\n"
"                <li>{{ $error }}</li>\n"
"            @endforeach\n"
"        </ul>\n"
"    </div>\n"
"@endif\n"
"\n"
"<!-- Create Post Form -->\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:192
#, no-wrap
msgid "<a name=\"quick-customizing-the-error-messages\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/validation.md:192 docs/master/validation.md:353
#: docs/master/validation.md:477
#, no-wrap
msgid "Customizing The Error Messages"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:195 docs/master/validation.md:582
msgid ""
"Laravel's built-in validation rules each has an error message that is "
"located in your application's `resources/lang/en/validation.php` file. "
"Within this file, you will find a translation entry for each validation "
"rule. You are free to change or modify these messages based on the needs of "
"your application."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:197 docs/master/validation.md:584
msgid ""
"In addition, you may copy this file to another translation language "
"directory to translate the messages for your application's language. To "
"learn more about Laravel localization, check out the complete [localization "
"documentation](/docs/{{version}}/localization)."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:199
#, no-wrap
msgid "<a name=\"quick-xhr-requests-and-validation\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:199
#, no-wrap
msgid "XHR Requests & Validation"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:202
msgid ""
"In this example, we used a traditional form to send data to the application. "
"However, many applications receive XHR requests from a JavaScript powered "
"frontend. When using the `validate` method during an XHR request, Laravel "
"will not generate a redirect response. Instead, Laravel generates a JSON "
"response containing all of the validation errors. This JSON response will be "
"sent with a 422 HTTP status code."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:204
#, no-wrap
msgid "<a name=\"the-at-error-directive\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:204
#, no-wrap
msgid "The `@error` Directive"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:207
msgid ""
"You may use the `@error` [Blade](/docs/{{version}}/blade) directive to "
"quickly determine if validation error messages exist for a given attribute. "
"Within an `@error` directive, you may echo the `$message` variable to "
"display the error message:"
msgstr ""

#. type: Fenced code block (html)
#: docs/master/validation.md:208
#, no-wrap
msgid ""
"<!-- /resources/views/post/create.blade.php -->\n"
"\n"
"<label for=\"title\">Post Title</label>\n"
"\n"
"<input id=\"title\" type=\"text\" class=\"@error('title') is-invalid @enderror\">\n"
"\n"
"@error('title')\n"
"    <div class=\"alert alert-danger\">{{ $message }}</div>\n"
"@enderror\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:221
#, no-wrap
msgid "<a name=\"repopulating-forms\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/validation.md:221
#, no-wrap
msgid "Repopulating Forms"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:224
msgid ""
"When Laravel generates a redirect response due to a validation error, the "
"framework will automatically [flash all of the request's input to the "
"session](/docs/{{version}}/session#flash-data). This is done so that you may "
"conveniently access the input during the next request and repopulate the "
"form that the user attempted to submit."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:226
msgid ""
"To retrieve flashed input from the previous request, invoke the `old` method "
"on an instance of `Illuminate\\Http\\Request`. The `old` method will pull "
"the previously flashed input data from the [session](/docs/{{version}}/"
"session):"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:228
#, no-wrap
msgid "    $title = $request->old('title');\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:230
msgid ""
"Laravel also provides a global `old` helper. If you are displaying old input "
"within a [Blade template](/docs/{{version}}/blade), it is more convenient to "
"use the `old` helper to repopulate the form. If no old input exists for the "
"given field, `null` will be returned:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:232
#, no-wrap
msgid "    <input type=\"text\" name=\"title\" value=\"{{ old('title') }}\">\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:234
#, no-wrap
msgid "<a name=\"a-note-on-optional-fields\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/validation.md:234
#, no-wrap
msgid "A Note On Optional Fields"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:237
msgid ""
"By default, Laravel includes the `TrimStrings` and "
"`ConvertEmptyStringsToNull` middleware in your application's global "
"middleware stack. These middleware are listed in the stack by the `App\\Http"
"\\Kernel` class. Because of this, you will often need to mark your \"optional"
"\" request fields as `nullable` if you do not want the validator to consider "
"`null` values as invalid. For example:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:243
#, no-wrap
msgid ""
"    $request->validate([\n"
"        'title' => 'required|unique:posts|max:255',\n"
"        'body' => 'required',\n"
"        'publish_at' => 'nullable|date',\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:245
msgid ""
"In this example, we are specifying that the `publish_at` field may be either "
"`null` or a valid date representation. If the `nullable` modifier is not "
"added to the rule definition, the validator would consider `null` an invalid "
"date."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:247
#, no-wrap
msgid "<a name=\"form-request-validation\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/validation.md:247
#, no-wrap
msgid "Form Request Validation"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:250
#, no-wrap
msgid "<a name=\"creating-form-requests\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/validation.md:250
#, no-wrap
msgid "Creating Form Requests"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:253
msgid ""
"For more complex validation scenarios, you may wish to create a \"form "
"request\". Form requests are custom request classes that encapsulate their "
"own validation and authorization logic. To create a form request class, you "
"may use the `make:request` Artisan CLI command:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:255
#, no-wrap
msgid "    php artisan make:request StorePostRequest\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:257
msgid ""
"The generated form request class will be placed in the `app/Http/Requests` "
"directory. If this directory does not exist, it will be created when you run "
"the `make:request` command. Each form request generated by Laravel has two "
"methods: `authorize` and `rules`."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:259
msgid ""
"As you might have guessed, the `authorize` method is responsible for "
"determining if the currently authenticated user can perform the action "
"represented by the request, while the `rules` method returns the validation "
"rules that should apply to the request's data:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:272
#, no-wrap
msgid ""
"    /**\n"
"     * Get the validation rules that apply to the request.\n"
"     *\n"
"     * @return array\n"
"     */\n"
"    public function rules()\n"
"    {\n"
"        return [\n"
"            'title' => 'required|unique:posts|max:255',\n"
"            'body' => 'required',\n"
"        ];\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:274
#, no-wrap
msgid "> {tip} You may type-hint any dependencies you require within the `rules` method's signature. They will automatically be resolved via the Laravel [service container](/docs/{{version}}/container).\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:276
msgid ""
"So, how are the validation rules evaluated? All you need to do is type-hint "
"the request on your controller method. The incoming form request is "
"validated before the controller method is called, meaning you do not need to "
"clutter your controller with any validation logic:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:286
#, no-wrap
msgid ""
"    /**\n"
"     * Store a new blog post.\n"
"     *\n"
"     * @param  \\App\\Http\\Requests\\StorePostRequest  $request\n"
"     * @return Illuminate\\Http\\Response\n"
"     */\n"
"    public function store(StorePostRequest $request)\n"
"    {\n"
"        // The incoming request is valid...\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:290
#, no-wrap
msgid ""
"        // Retrieve the validated input data...\n"
"        $validated = $request->validated();\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:292
msgid ""
"If validation fails, a redirect response will be generated to send the user "
"back to their previous location. The errors will also be flashed to the "
"session so they are available for display. If the request was an XHR "
"request, an HTTP response with a 422 status code will be returned to the "
"user including a JSON representation of the validation errors."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:294
#, no-wrap
msgid "<a name=\"adding-after-hooks-to-form-requests\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:294
#, no-wrap
msgid "Adding After Hooks To Form Requests"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:297
msgid ""
"If you would like to add an \"after\" validation hook to a form request, you "
"may use the `withValidator` method. This method receives the fully "
"constructed validator, allowing you to call any of its methods before the "
"validation rules are actually evaluated:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:312
#, no-wrap
msgid ""
"    /**\n"
"     * Configure the validator instance.\n"
"     *\n"
"     * @param  \\Illuminate\\Validation\\Validator  $validator\n"
"     * @return void\n"
"     */\n"
"    public function withValidator($validator)\n"
"    {\n"
"        $validator->after(function ($validator) {\n"
"            if ($this->somethingElseIsInvalid()) {\n"
"                $validator->errors()->add('field', 'Something is wrong with this field!');\n"
"            }\n"
"        });\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:314
#, no-wrap
msgid "<a name=\"authorizing-form-requests\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/validation.md:314
#, no-wrap
msgid "Authorizing Form Requests"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:317
msgid ""
"The form request class also contains an `authorize` method. Within this "
"method, you may determine if the authenticated user actually has the "
"authority to update a given resource. For example, you may determine if a "
"user actually owns a blog comment they are attempting to update. Most "
"likely, you will interact with your [authorization gates and policies](/docs/"
"{{version}}/authorization) within this method:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:319
#, no-wrap
msgid "    use App\\Models\\Comment;\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:328
#, no-wrap
msgid ""
"    /**\n"
"     * Determine if the user is authorized to make this request.\n"
"     *\n"
"     * @return bool\n"
"     */\n"
"    public function authorize()\n"
"    {\n"
"        $comment = Comment::find($this->route('comment'));\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:331
#, no-wrap
msgid ""
"        return $comment && $this->user()->can('update', $comment);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:333
msgid ""
"Since all form requests extend the base Laravel request class, we may use "
"the `user` method to access the currently authenticated user. Also, note the "
"call to the `route` method in the example above. This method grants you "
"access to the URI parameters defined on the route being called, such as the "
"`{comment}` parameter in the example below:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:335
#, no-wrap
msgid "    Route::post('/comment/{comment}');\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:337
msgid ""
"If the `authorize` method returns `false`, an HTTP response with a 403 "
"status code will automatically be returned and your controller method will "
"not execute."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:339
msgid ""
"If you plan to handle authorization logic for the request in another part of "
"your application, you may simply return `true` from the `authorize` method:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:349
#, no-wrap
msgid ""
"    /**\n"
"     * Determine if the user is authorized to make this request.\n"
"     *\n"
"     * @return bool\n"
"     */\n"
"    public function authorize()\n"
"    {\n"
"        return true;\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:351
#, no-wrap
msgid "> {tip} You may type-hint any dependencies you need within the `authorize` method's signature. They will automatically be resolved via the Laravel [service container](/docs/{{version}}/container).\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:353
#, no-wrap
msgid "<a name=\"customizing-the-error-messages\"></a>\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:356
msgid ""
"You may customize the error messages used by the form request by overriding "
"the `messages` method. This method should return an array of attribute / "
"rule pairs and their corresponding error messages:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:369
#, no-wrap
msgid ""
"    /**\n"
"     * Get the error messages for the defined validation rules.\n"
"     *\n"
"     * @return array\n"
"     */\n"
"    public function messages()\n"
"    {\n"
"        return [\n"
"            'title.required' => 'A title is required',\n"
"            'body.required' => 'A message is required',\n"
"        ];\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:371
#, no-wrap
msgid "<a name=\"customizing-the-validation-attributes\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:371
#, no-wrap
msgid "Customizing The Validation Attributes"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:374
msgid ""
"Many of Laravel's built-in validation rule error messages contain an `:"
"attribute` placeholder. If you would like the `:attribute` placeholder of "
"your validation message to be replaced with a custom attribute name, you may "
"specify the custom names by overriding the `attributes` method. This method "
"should return an array of attribute / name pairs:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:386
#, no-wrap
msgid ""
"    /**\n"
"     * Get custom attributes for validator errors.\n"
"     *\n"
"     * @return array\n"
"     */\n"
"    public function attributes()\n"
"    {\n"
"        return [\n"
"            'email' => 'email address',\n"
"        ];\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:388
#, no-wrap
msgid "<a name=\"preparing-input-for-validation\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/validation.md:388
#, no-wrap
msgid "Preparing Input For Validation"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:391
msgid ""
"If you need to prepare or sanitize any data from the request before you "
"apply your validation rules, you may use the `prepareForValidation` method:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:393
#, no-wrap
msgid "    use Illuminate\\Support\\Str;\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:405
#, no-wrap
msgid ""
"    /**\n"
"     * Prepare the data for validation.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    protected function prepareForValidation()\n"
"    {\n"
"        $this->merge([\n"
"            'slug' => Str::slug($this->slug),\n"
"        ]);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:407
#, no-wrap
msgid "<a name=\"manually-creating-validators\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/validation.md:407
#, no-wrap
msgid "Manually Creating Validators"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:410
msgid ""
"If you do not want to use the `validate` method on the request, you may "
"create a validator instance manually using the `Validator` [facade](/docs/"
"{{version}}/facades). The `make` method on the facade generates a new "
"validator instance:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:418
#, no-wrap
msgid ""
"    use App\\Http\\Controllers\\Controller;\n"
"    use Illuminate\\Http\\Request;\n"
"    use Illuminate\\Support\\Facades\\Validator;\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:433
#, no-wrap
msgid ""
"    class PostController extends Controller\n"
"    {\n"
"        /**\n"
"         * Store a new blog post.\n"
"         *\n"
"         * @param  Request  $request\n"
"         * @return Response\n"
"         */\n"
"        public function store(Request $request)\n"
"        {\n"
"            $validator = Validator::make($request->all(), [\n"
"                'title' => 'required|unique:posts|max:255',\n"
"                'body' => 'required',\n"
"            ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:439
#, no-wrap
msgid ""
"            if ($validator->fails()) {\n"
"                return redirect('post/create')\n"
"                            ->withErrors($validator)\n"
"                            ->withInput();\n"
"            }\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:443
#, no-wrap
msgid ""
"            // Store the blog post...\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:445
msgid ""
"The first argument passed to the `make` method is the data under validation. "
"The second argument is an array of the validation rules that should be "
"applied to the data."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:447
msgid ""
"After determining whether the request validation failed, you may use the "
"`withErrors` method to flash the error messages to the session. When using "
"this method, the `$errors` variable will automatically be shared with your "
"views after redirection, allowing you to easily display them back to the "
"user. The `withErrors` method accepts a validator, a `MessageBag`, or a PHP "
"`array`."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:449
#, no-wrap
msgid "<a name=\"automatic-redirection\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/validation.md:449
#, no-wrap
msgid "Automatic Redirection"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:452
msgid ""
"If you would like to create a validator instance manually but still take "
"advantage of the automatic redirection offered by the HTTP request's "
"`validate` method, you may call the `validate` method on an existing "
"validator instance. If validation fails, the user will automatically be "
"redirected or, in the case of an XHR request, a JSON response will be "
"returned:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:457
#, no-wrap
msgid ""
"    Validator::make($request->all(), [\n"
"        'title' => 'required|unique:posts|max:255',\n"
"        'body' => 'required',\n"
"    ])->validate();\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:459
msgid ""
"You may use the `validateWithBag` method to store the error messages in a "
"[named error bag](#named-error-bags) if validation fails:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:464
#, no-wrap
msgid ""
"    Validator::make($request->all(), [\n"
"        'title' => 'required|unique:posts|max:255',\n"
"        'body' => 'required',\n"
"    ])->validateWithBag('post');\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:466
#, no-wrap
msgid "<a name=\"named-error-bags\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/validation.md:466
#, no-wrap
msgid "Named Error Bags"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:469
msgid ""
"If you have multiple forms on a single page, you may wish to name the "
"`MessageBag` containing the validation errors, allowing you to retrieve the "
"error messages for a specific form. To achieve this, pass a name as the "
"second argument to `withErrors`:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:471
#, no-wrap
msgid "    return redirect('register')->withErrors($validator, 'login');\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:473
msgid ""
"You may then access the named `MessageBag` instance from the `$errors` "
"variable:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:475
#, no-wrap
msgid "    {{ $errors->login->first('email') }}\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:477
#, no-wrap
msgid "<a name=\"manual-customizing-the-error-messages\"></a>\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:480
msgid ""
"If needed, you may provide custom error messages that a validator instance "
"should use instead of the default error messages provided by Laravel. There "
"are several ways to specify custom messages. First, you may pass the custom "
"messages as the third argument to the `Validator::make` method:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:484
#, no-wrap
msgid ""
"    $validator = Validator::make($input, $rules, $messages = [\n"
"        'required' => 'The :attribute field is required.',\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:486
msgid ""
"In this example, the `:attribute` placeholder will be replaced by the actual "
"name of the field under validation. You may also utilize other placeholders "
"in validation messages. For example:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:493
#, no-wrap
msgid ""
"    $messages = [\n"
"        'same' => 'The :attribute and :other must match.',\n"
"        'size' => 'The :attribute must be exactly :size.',\n"
"        'between' => 'The :attribute value :input is not between :min - :max.',\n"
"        'in' => 'The :attribute must be one of the following types: :values',\n"
"    ];\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:495
#, no-wrap
msgid "<a name=\"specifying-a-custom-message-for-a-given-attribute\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:495
#, no-wrap
msgid "Specifying A Custom Message For A Given Attribute"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:498
msgid ""
"Sometimes you may wish to specify a custom error message only for a specific "
"attribute. You may do so using \"dot\" notation. Specify the attribute's "
"name first, followed by the rule:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:502
#, no-wrap
msgid ""
"    $messages = [\n"
"        'email.required' => 'We need to know your email address!',\n"
"    ];\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:504
#, no-wrap
msgid "<a name=\"specifying-custom-attribute-values\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:504
#, no-wrap
msgid "Specifying Custom Attribute Values"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:507
msgid ""
"Many of Laravel's built-in error messages include an `:attribute:` "
"placeholder that is replaced with the name of the field or attribute under "
"validation. To customize the values used to replace these placeholders for "
"specific fields, you may pass an array of custom attributes as the fourth "
"argument to the `Validator::make` method:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:511
#, no-wrap
msgid ""
"    $validator = Validator::make($input, $rules, $messages, [\n"
"        'email' => 'email address',\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:513
#, no-wrap
msgid "<a name=\"after-validation-hook\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/validation.md:513
#, no-wrap
msgid "After Validation Hook"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:516
msgid ""
"You may also attach callbacks to be run after validation is completed. This "
"allows you to easily perform further validation and even add more error "
"messages to the message collection. To get started, call the `after` method "
"on a validator instance:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:518
#, no-wrap
msgid "    $validator = Validator::make(...);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:526
#, no-wrap
msgid ""
"    $validator->after(function ($validator) {\n"
"        if ($this->somethingElseIsInvalid()) {\n"
"            $validator->errors()->add(\n"
"                'field', 'Something is wrong with this field!'\n"
"            );\n"
"        }\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:530
#, no-wrap
msgid ""
"    if ($validator->fails()) {\n"
"        //\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:532
#, no-wrap
msgid "<a name=\"working-with-error-messages\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/validation.md:532
#, no-wrap
msgid "Working With Error Messages"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:535
msgid ""
"After calling the `errors` method on a `Validator` instance, you will "
"receive an `Illuminate\\Support\\MessageBag` instance, which has a variety "
"of convenient methods for working with error messages. The `$errors` "
"variable that is automatically made available to all views is also an "
"instance of the `MessageBag` class."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:537
#, no-wrap
msgid "<a name=\"retrieving-the-first-error-message-for-a-field\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:537
#, no-wrap
msgid "Retrieving The First Error Message For A Field"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:540
msgid ""
"To retrieve the first error message for a given field, use the `first` "
"method:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:542
#, no-wrap
msgid "    $errors = $validator->errors();\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:544
#, no-wrap
msgid "    echo $errors->first('email');\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:546
#, no-wrap
msgid "<a name=\"retrieving-all-error-messages-for-a-field\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:546
#, no-wrap
msgid "Retrieving All Error Messages For A Field"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:549
msgid ""
"If you need to retrieve an array of all the messages for a given field, use "
"the `get` method:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:553
#, no-wrap
msgid ""
"    foreach ($errors->get('email') as $message) {\n"
"        //\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:555
msgid ""
"If you are validating an array form field, you may retrieve all of the "
"messages for each of the array elements using the `*` character:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:559
#, no-wrap
msgid ""
"    foreach ($errors->get('attachments.*') as $message) {\n"
"        //\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:561
#, no-wrap
msgid "<a name=\"retrieving-all-error-messages-for-all-fields\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:561
#, no-wrap
msgid "Retrieving All Error Messages For All Fields"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:564
msgid ""
"To retrieve an array of all messages for all fields, use the `all` method:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:568
#, no-wrap
msgid ""
"    foreach ($errors->all() as $message) {\n"
"        //\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:570
#, no-wrap
msgid "<a name=\"determining-if-messages-exist-for-a-field\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:570
#, no-wrap
msgid "Determining If Messages Exist For A Field"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:573
msgid ""
"The `has` method may be used to determine if any error messages exist for a "
"given field:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:577
#, no-wrap
msgid ""
"    if ($errors->has('email')) {\n"
"        //\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:579
#, no-wrap
msgid "<a name=\"specifying-custom-messages-in-language-files\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/validation.md:579
#, no-wrap
msgid "Specifying Custom Messages In Language Files"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:586
#, no-wrap
msgid "<a name=\"custom-messages-for-specific-attributes\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:586
#, no-wrap
msgid "Custom Messages For Specific Attributes"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:589
msgid ""
"You may customize the error messages used for specified attribute and rule "
"combinations within your application's validation language files. To do so, "
"add your message customizations to the `custom` array of your application's "
"`resources/lang/xx/validation.php` language file:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:596
#, no-wrap
msgid ""
"    'custom' => [\n"
"        'email' => [\n"
"            'required' => 'We need to know your email address!',\n"
"            'max' => 'Your email address is too long!'\n"
"        ],\n"
"    ],\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:598
#, no-wrap
msgid "<a name=\"specifying-attribute-in-language-files\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/validation.md:598
#, no-wrap
msgid "Specifying Attributes In Language Files"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:601
msgid ""
"Many of Laravel's built-in error messages include an `:attribute:` "
"placeholder that is replaced with the name of the field or attribute under "
"validation. If you would like the `:attribute` portion of your validation "
"message to be replaced with a custom value, you may specify the custom "
"attribute name in the `attributes` array of your `resources/lang/xx/"
"validation.php` language file:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:605
#, no-wrap
msgid ""
"    'attributes' => [\n"
"        'email' => 'email address',\n"
"    ],\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:607
#, no-wrap
msgid "<a name=\"specifying-values-in-language-files\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/validation.md:607
#, no-wrap
msgid "Specifying Values In Language Files"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:610
msgid ""
"Some of Laravel's built-in validation rule error messages contain a `:value` "
"placeholder that is replaced with the current value of the request "
"attribute. However, you may occasionally need the `:value` portion of your "
"validation message to be replaced with a custom representation of the value. "
"For example, consider the following rule that specifies that a credit card "
"number is required if the `payment_type` has a value of `cc`:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:614
#, no-wrap
msgid ""
"    Validator::make($request->all(), [\n"
"        'credit_card_number' => 'required_if:payment_type,cc'\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:616
msgid ""
"If this validation rule fails, it will produce the following error message:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:618
#, no-wrap
msgid "    The credit card number field is required when payment type is cc.\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:620
msgid ""
"Instead of displaying `cc` as the payment type value, you may specify a more "
"user-friendly value representation in your `resources/lang/xx/validation."
"php` language file by defining a `values` array:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:626
#, no-wrap
msgid ""
"    'values' => [\n"
"        'payment_type' => [\n"
"            'cc' => 'credit card'\n"
"        ],\n"
"    ],\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:628
msgid ""
"After defining this value, the validation rule will produce the following "
"error message:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:630
#, no-wrap
msgid "    The credit card number field is required when payment type is credit card.\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:632
#, no-wrap
msgid "<a name=\"available-validation-rules\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/validation.md:632
#, no-wrap
msgid "Available Validation Rules"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:635
msgid "Below is a list of all available validation rules and their function:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:641
#, no-wrap
msgid ""
"<style>\n"
"    .collection-method-list > p {\n"
"        column-count: 3; -moz-column-count: 3; -webkit-column-count: 3;\n"
"        column-gap: 2em; -moz-column-gap: 2em; -webkit-column-gap: 2em;\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:646
#, no-wrap
msgid ""
"    .collection-method-list a {\n"
"        display: block;\n"
"    }\n"
"</style>\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:648
#, no-wrap
msgid "<div class=\"collection-method-list\" markdown=\"1\">\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:716
msgid ""
"[Accepted](#rule-accepted)  [Active URL](#rule-active-url)  [After (Date)]"
"(#rule-after)  [After Or Equal (Date)](#rule-after-or-equal)  [Alpha](#rule-"
"alpha)  [Alpha Dash](#rule-alpha-dash)  [Alpha Numeric](#rule-alpha-num)  "
"[Array](#rule-array)  [Bail](#rule-bail)  [Before (Date)](#rule-before)  "
"[Before Or Equal (Date)](#rule-before-or-equal)  [Between](#rule-between)  "
"[Boolean](#rule-boolean)  [Confirmed](#rule-confirmed)  [Date](#rule-date)  "
"[Date Equals](#rule-date-equals)  [Date Format](#rule-date-format)  "
"[Different](#rule-different)  [Digits](#rule-digits)  [Digits Between](#rule-"
"digits-between)  [Dimensions (Image Files)](#rule-dimensions)  [Distinct]"
"(#rule-distinct)  [Email](#rule-email)  [Ends With](#rule-ends-with)  "
"[Exclude If](#rule-exclude-if)  [Exclude Unless](#rule-exclude-unless)  "
"[Exists (Database)](#rule-exists)  [File](#rule-file)  [Filled](#rule-"
"filled)  [Greater Than](#rule-gt)  [Greater Than Or Equal](#rule-gte)  "
"[Image (File)](#rule-image)  [In](#rule-in)  [In Array](#rule-in-array)  "
"[Integer](#rule-integer)  [IP Address](#rule-ip)  [JSON](#rule-json)  [Less "
"Than](#rule-lt)  [Less Than Or Equal](#rule-lte)  [Max](#rule-max)  [MIME "
"Types](#rule-mimetypes)  [MIME Type By File Extension](#rule-mimes)  [Min]"
"(#rule-min)  [Multiple Of](#multiple-of)  [Not In](#rule-not-in)  [Not Regex]"
"(#rule-not-regex)  [Nullable](#rule-nullable)  [Numeric](#rule-numeric)  "
"[Password](#rule-password)  [Present](#rule-present)  [Regular Expression]"
"(#rule-regex)  [Required](#rule-required)  [Required If](#rule-required-if)  "
"[Required Unless](#rule-required-unless)  [Required With](#rule-required-"
"with)  [Required With All](#rule-required-with-all)  [Required Without]"
"(#rule-required-without)  [Required Without All](#rule-required-without-"
"all)  [Same](#rule-same)  [Size](#rule-size)  [Sometimes](#conditionally-"
"adding-rules)  [Starts With](#rule-starts-with)  [String](#rule-string)  "
"[Timezone](#rule-timezone)  [Unique (Database)](#rule-unique)  [URL](#rule-"
"url)  [UUID](#rule-uuid)"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:718 docs/master/validation.md:1125
#, no-wrap
msgid "</div>\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:720
#, no-wrap
msgid "<a name=\"rule-accepted\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:720
#, no-wrap
msgid "accepted"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:723
msgid ""
"The field under validation must be `\"yes\"`, `\"on\"`, `1`, or `true`. This "
"is useful for validating \"Terms of Service\" acceptance or similar fields."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:725
#, no-wrap
msgid "<a name=\"rule-active-url\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:725
#, no-wrap
msgid "active_url"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:728
msgid ""
"The field under validation must have a valid A or AAAA record according to "
"the `dns_get_record` PHP function. The hostname of the provided URL is "
"extracted using the `parse_url` PHP function before being passed to "
"`dns_get_record`."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:730
#, no-wrap
msgid "<a name=\"rule-after\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:730
#, no-wrap
msgid "after:_date_"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:733
msgid ""
"The field under validation must be a value after a given date. The dates "
"will be passed into the `strtotime` PHP function in order to be converted to "
"a valid `DateTime` instance:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:735
#, no-wrap
msgid "    'start_date' => 'required|date|after:tomorrow'\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:737
msgid ""
"Instead of passing a date string to be evaluated by `strtotime`, you may "
"specify another field to compare against the date:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:739
#, no-wrap
msgid "    'finish_date' => 'required|date|after:start_date'\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:741
#, no-wrap
msgid "<a name=\"rule-after-or-equal\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:741
#, no-wrap
msgid "after\\_or\\_equal:_date_"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:744
msgid ""
"The field under validation must be a value after or equal to the given date. "
"For more information, see the [after](#rule-after) rule."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:746
#, no-wrap
msgid "<a name=\"rule-alpha\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:746
#, no-wrap
msgid "alpha"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:749
msgid "The field under validation must be entirely alphabetic characters."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:751
#, no-wrap
msgid "<a name=\"rule-alpha-dash\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:751
#, no-wrap
msgid "alpha_dash"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:754
msgid ""
"The field under validation may have alpha-numeric characters, as well as "
"dashes and underscores."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:756
#, no-wrap
msgid "<a name=\"rule-alpha-num\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:756
#, no-wrap
msgid "alpha_num"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:759
msgid "The field under validation must be entirely alpha-numeric characters."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:761
#, no-wrap
msgid "<a name=\"rule-array\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:761
#, no-wrap
msgid "array"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:764
msgid "The field under validation must be a PHP `array`."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:766
#, no-wrap
msgid "<a name=\"rule-bail\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:766
#, no-wrap
msgid "bail"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:769
msgid "Stop running validation rules after the first validation failure."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:771
#, no-wrap
msgid "<a name=\"rule-before\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:771
#, no-wrap
msgid "before:_date_"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:774
msgid ""
"The field under validation must be a value preceding the given date. The "
"dates will be passed into the PHP `strtotime` function in order to be "
"converted into a valid `DateTime` instance. In addition, like the [`after`]"
"(#rule-after) rule, the name of another field under validation may be "
"supplied as the value of `date`."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:776
#, no-wrap
msgid "<a name=\"rule-before-or-equal\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:776
#, no-wrap
msgid "before\\_or\\_equal:_date_"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:779
msgid ""
"The field under validation must be a value preceding or equal to the given "
"date. The dates will be passed into the PHP `strtotime` function in order to "
"be converted into a valid `DateTime` instance. In addition, like the "
"[`after`](#rule-after) rule, the name of another field under validation may "
"be supplied as the value of `date`."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:781
#, no-wrap
msgid "<a name=\"rule-between\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:781
#, no-wrap
msgid "between:_min_,_max_"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:784
msgid ""
"The field under validation must have a size between the given _min_ and "
"_max_. Strings, numerics, arrays, and files are evaluated in the same "
"fashion as the [`size`](#rule-size) rule."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:786
#, no-wrap
msgid "<a name=\"rule-boolean\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:786
#, no-wrap
msgid "boolean"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:789
msgid ""
"The field under validation must be able to be cast as a boolean. Accepted "
"input are `true`, `false`, `1`, `0`, `\"1\"`, and `\"0\"`."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:791
#, no-wrap
msgid "<a name=\"rule-confirmed\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:791
#, no-wrap
msgid "confirmed"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:794
msgid ""
"The field under validation must have a matching field of `{field}"
"_confirmation`. For example, if the field under validation is `password`, a "
"matching `password_confirmation` field must be present in the input."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:796
#, no-wrap
msgid "<a name=\"rule-date\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:796
#, no-wrap
msgid "date"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:799
msgid ""
"The field under validation must be a valid, non-relative date according to "
"the `strtotime` PHP function."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:801
#, no-wrap
msgid "<a name=\"rule-date-equals\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:801
#, no-wrap
msgid "date_equals:_date_"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:804
msgid ""
"The field under validation must be equal to the given date. The dates will "
"be passed into the PHP `strtotime` function in order to be converted into a "
"valid `DateTime` instance."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:806
#, no-wrap
msgid "<a name=\"rule-date-format\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:806
#, no-wrap
msgid "date_format:_format_"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:809
msgid ""
"The field under validation must match the given _format_. You should use "
"**either** `date` or `date_format` when validating a field, not both. This "
"validation rule supports all formats supported by PHP's [DateTime](https://"
"www.php.net/manual/en/class.datetime.php) class."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:811
#, no-wrap
msgid "<a name=\"rule-different\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:811
#, no-wrap
msgid "different:_field_"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:814
msgid "The field under validation must have a different value than _field_."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:816
#, no-wrap
msgid "<a name=\"rule-digits\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:816
#, no-wrap
msgid "digits:_value_"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:819
msgid ""
"The field under validation must be _numeric_ and must have an exact length "
"of _value_."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:821
#, no-wrap
msgid "<a name=\"rule-digits-between\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:821
#, no-wrap
msgid "digits_between:_min_,_max_"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:824
msgid ""
"The field under validation must be _numeric_ and must have a length between "
"the given _min_ and _max_."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:826
#, no-wrap
msgid "<a name=\"rule-dimensions\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:826
#, no-wrap
msgid "dimensions"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:829
msgid ""
"The file under validation must be an image meeting the dimension constraints "
"as specified by the rule's parameters:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:831
#, no-wrap
msgid "    'avatar' => 'dimensions:min_width=100,min_height=200'\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:833
msgid ""
"Available constraints are: _min\\_width_, _max\\_width_, _min\\_height_, _max"
"\\_height_, _width_, _height_, _ratio_."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:835
msgid ""
"A _ratio_ constraint should be represented as width divided by height. This "
"can be specified either by a fraction like `3/2` or a float like `1.5`:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:837
#, no-wrap
msgid "    'avatar' => 'dimensions:ratio=3/2'\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:839
msgid ""
"Since this rule requires several arguments, you may use the `Rule::"
"dimensions` method to fluently construct the rule:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:842 docs/master/validation.md:928
#: docs/master/validation.md:970 docs/master/validation.md:1135
#: docs/master/validation.md:1237
#, no-wrap
msgid ""
"    use Illuminate\\Support\\Facades\\Validator;\n"
"    use Illuminate\\Validation\\Rule;\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:849
#, no-wrap
msgid ""
"    Validator::make($data, [\n"
"        'avatar' => [\n"
"            'required',\n"
"            Rule::dimensions()->maxWidth(1000)->maxHeight(500)->ratio(3 / 2),\n"
"        ],\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:851
#, no-wrap
msgid "<a name=\"rule-distinct\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:851
#, no-wrap
msgid "distinct"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:854
msgid ""
"When validating arrays, the field under validation must not have any "
"duplicate values:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:856
#, no-wrap
msgid "    'foo.*.id' => 'distinct'\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:858
msgid ""
"You may add `ignore_case` to the validation rule's arguments to make the "
"rule ignore capitalization differences:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:860
#, no-wrap
msgid "    'foo.*.id' => 'distinct:ignore_case'\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:862
#, no-wrap
msgid "<a name=\"rule-email\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:862
#, no-wrap
msgid "email"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:865
msgid ""
"The field under validation must be formatted as an email address. This "
"validation rule utilizes the [`egulias/email-validator`](https://github.com/"
"egulias/EmailValidator) package for validating the email address. By "
"default, the `RFCValidation` validator is applied, but you can apply other "
"validation styles as well:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:867
#, no-wrap
msgid "    'email' => 'email:rfc,dns'\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:869
msgid ""
"The example above will apply the `RFCValidation` and `DNSCheckValidation` "
"validations. Here's a full list of validation styles you can apply:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:877
#, no-wrap
msgid ""
"<div class=\"content-list\" markdown=\"1\">\n"
"- `rfc`: `RFCValidation`\n"
"- `strict`: `NoRFCWarningsValidation`\n"
"- `dns`: `DNSCheckValidation`\n"
"- `spoof`: `SpoofCheckValidation`\n"
"- `filter`: `FilterEmailValidation`\n"
"</div>\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:879
msgid ""
"The `filter` validator, which uses PHP's `filter_var` function, ships with "
"Laravel and was Laravel's default email validation behavior prior to Laravel "
"version 5.8."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:881
#, no-wrap
msgid "> {note} The `dns` and `spoof` validators require the PHP `intl` extension.\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:883
#, no-wrap
msgid "<a name=\"rule-ends-with\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:883
#, no-wrap
msgid "ends_with:_foo_,_bar_,..."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:886
msgid "The field under validation must end with one of the given values."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:888
#, no-wrap
msgid "<a name=\"rule-exclude-if\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:888
#, no-wrap
msgid "exclude_if:_anotherfield_,_value_"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:891
msgid ""
"The field under validation will be excluded from the request data returned "
"by the `validate` and `validated` methods if the _anotherfield_ field is "
"equal to _value_."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:893
#, no-wrap
msgid "<a name=\"rule-exclude-unless\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:893
#, no-wrap
msgid "exclude_unless:_anotherfield_,_value_"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:896
msgid ""
"The field under validation will be excluded from the request data returned "
"by the `validate` and `validated` methods unless _anotherfield_'s field is "
"equal to _value_."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:898
#, no-wrap
msgid "<a name=\"rule-exists\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:898
#, no-wrap
msgid "exists:_table_,_column_"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:901
msgid "The field under validation must exist in a given database table."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:903
#, no-wrap
msgid "<a name=\"basic-usage-of-exists-rule\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:903
#, no-wrap
msgid "Basic Usage Of Exists Rule"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:906
#, no-wrap
msgid "    'state' => 'exists:states'\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:908
msgid ""
"If the `column` option is not specified, the field name will be used. So, in "
"this case, the rule will validate that the `states` database table contains "
"a record with a `state` column value matching the request's `state` "
"attribute value."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:910
#, no-wrap
msgid "<a name=\"specifying-a-custom-column-name\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:910
#, no-wrap
msgid "Specifying A Custom Column Name"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:913
msgid ""
"You may explicitly specify the database column name that should be used by "
"the validation rule by placing it after the database table name:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:915
#, no-wrap
msgid "    'state' => 'exists:states,abbreviation'\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:917
msgid ""
"Occasionally, you may need to specify a specific database connection to be "
"used for the `exists` query. You can accomplish this by prepending the "
"connection name to the table name:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:919
#, no-wrap
msgid "    'email' => 'exists:connection.staff,email'\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:921 docs/master/validation.md:1216
msgid ""
"Instead of specifying the table name directly, you may specify the Eloquent "
"model which should be used to determine the table name:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:923
#, no-wrap
msgid "    'user_id' => 'exists:App\\Models\\User,id'\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:925
msgid ""
"If you would like to customize the query executed by the validation rule, "
"you may use the `Rule` class to fluently define the rule. In this example, "
"we'll also specify the validation rules as an array instead of using the `|` "
"character to delimit them:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:937
#, no-wrap
msgid ""
"    Validator::make($data, [\n"
"        'email' => [\n"
"            'required',\n"
"            Rule::exists('staff')->where(function ($query) {\n"
"                return $query->where('account_id', 1);\n"
"            }),\n"
"        ],\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:939
#, no-wrap
msgid "<a name=\"rule-file\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:939
#, no-wrap
msgid "file"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:942
msgid "The field under validation must be a successfully uploaded file."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:944
#, no-wrap
msgid "<a name=\"rule-filled\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:944
#, no-wrap
msgid "filled"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:947
msgid "The field under validation must not be empty when it is present."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:949
#, no-wrap
msgid "<a name=\"rule-gt\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:949
#, no-wrap
msgid "gt:_field_"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:952
msgid ""
"The field under validation must be greater than the given _field_. The two "
"fields must be of the same type. Strings, numerics, arrays, and files are "
"evaluated using the same conventions as the [`size`](#rule-size) rule."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:954
#, no-wrap
msgid "<a name=\"rule-gte\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:954
#, no-wrap
msgid "gte:_field_"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:957
msgid ""
"The field under validation must be greater than or equal to the given "
"_field_. The two fields must be of the same type. Strings, numerics, arrays, "
"and files are evaluated using the same conventions as the [`size`](#rule-"
"size) rule."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:959
#, no-wrap
msgid "<a name=\"rule-image\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:959
#, no-wrap
msgid "image"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:962
msgid ""
"The file under validation must be an image (jpg, jpeg, png, bmp, gif, svg, "
"or webp)."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:964
#, no-wrap
msgid "<a name=\"rule-in\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:964
#, no-wrap
msgid "in:_foo_,_bar_,..."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:967
msgid ""
"The field under validation must be included in the given list of values. "
"Since this rule often requires you to `implode` an array, the `Rule::in` "
"method may be used to fluently construct the rule:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:977
#, no-wrap
msgid ""
"    Validator::make($data, [\n"
"        'zones' => [\n"
"            'required',\n"
"            Rule::in(['first-zone', 'second-zone']),\n"
"        ],\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:979
#, no-wrap
msgid "<a name=\"rule-in-array\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:979
#, no-wrap
msgid "in_array:_anotherfield_.*"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:982
msgid "The field under validation must exist in _anotherfield_'s values."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:984
#, no-wrap
msgid "<a name=\"rule-integer\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:984
#, no-wrap
msgid "integer"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:987
msgid "The field under validation must be an integer."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:989
#, no-wrap
msgid "> {note} This validation rule does not verify that the input is of the \"integer\" variable type, only that the input is a string or numeric value that contains an integer.\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:991
#, no-wrap
msgid "<a name=\"rule-ip\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:991
#, no-wrap
msgid "ip"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:994
msgid "The field under validation must be an IP address."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:996
#, no-wrap
msgid "<a name=\"ipv4\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:996
#, no-wrap
msgid "ipv4"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:999
msgid "The field under validation must be an IPv4 address."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1001
#, no-wrap
msgid "<a name=\"ipv6\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1001
#, no-wrap
msgid "ipv6"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1004
msgid "The field under validation must be an IPv6 address."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1006
#, no-wrap
msgid "<a name=\"rule-json\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1006
#, no-wrap
msgid "json"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1009
msgid "The field under validation must be a valid JSON string."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1011
#, no-wrap
msgid "<a name=\"rule-lt\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1011
#, no-wrap
msgid "lt:_field_"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1014
msgid ""
"The field under validation must be less than the given _field_. The two "
"fields must be of the same type. Strings, numerics, arrays, and files are "
"evaluated using the same conventions as the [`size`](#rule-size) rule."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1016
#, no-wrap
msgid "<a name=\"rule-lte\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1016
#, no-wrap
msgid "lte:_field_"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1019
msgid ""
"The field under validation must be less than or equal to the given _field_. "
"The two fields must be of the same type. Strings, numerics, arrays, and "
"files are evaluated using the same conventions as the [`size`](#rule-size) "
"rule."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1021
#, no-wrap
msgid "<a name=\"rule-max\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1021
#, no-wrap
msgid "max:_value_"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1024
msgid ""
"The field under validation must be less than or equal to a maximum _value_. "
"Strings, numerics, arrays, and files are evaluated in the same fashion as "
"the [`size`](#rule-size) rule."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1026
#, no-wrap
msgid "<a name=\"rule-mimetypes\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1026
#, no-wrap
msgid "mimetypes:_text/plain_,..."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1029
msgid "The file under validation must match one of the given MIME types:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1031
#, no-wrap
msgid "    'video' => 'mimetypes:video/avi,video/mpeg,video/quicktime'\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1033
msgid ""
"To determine the MIME type of the uploaded file, the file's contents will be "
"read and the framework will attempt to guess the MIME type, which may be "
"different from the client's provided MIME type."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1035
#, no-wrap
msgid "<a name=\"rule-mimes\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1035
#, no-wrap
msgid "mimes:_foo_,_bar_,..."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1038
msgid ""
"The file under validation must have a MIME type corresponding to one of the "
"listed extensions."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1040
#, no-wrap
msgid "<a name=\"basic-usage-of-mime-rule\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1040
#, no-wrap
msgid "Basic Usage Of MIME Rule"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1043
#, no-wrap
msgid "    'photo' => 'mimes:jpg,bmp,png'\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1045
msgid ""
"Even though you only need to specify the extensions, this rule actually "
"validates the MIME type of the file by reading the file's contents and "
"guessing its MIME type. A full listing of MIME types and their corresponding "
"extensions may be found at the following location:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1047
msgid ""
"[https://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types]"
"(https://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types)"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1049
#, no-wrap
msgid "<a name=\"rule-min\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1049
#, no-wrap
msgid "min:_value_"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1052
msgid ""
"The field under validation must have a minimum _value_. Strings, numerics, "
"arrays, and files are evaluated in the same fashion as the [`size`](#rule-"
"size) rule."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1054
#, no-wrap
msgid "<a name=\"multiple-of\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1054
#, no-wrap
msgid "multiple_of:_value_"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1057
msgid "The field under validation must be a multiple of _value_."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1059
#, no-wrap
msgid "<a name=\"rule-not-in\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1059
#, no-wrap
msgid "not_in:_foo_,_bar_,..."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1062
msgid ""
"The field under validation must not be included in the given list of values. "
"The `Rule::notIn` method may be used to fluently construct the rule:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1064
#, no-wrap
msgid "    use Illuminate\\Validation\\Rule;\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1071
#, no-wrap
msgid ""
"    Validator::make($data, [\n"
"        'toppings' => [\n"
"            'required',\n"
"            Rule::notIn(['sprinkles', 'cherries']),\n"
"        ],\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1073
#, no-wrap
msgid "<a name=\"rule-not-regex\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1073
#, no-wrap
msgid "not_regex:_pattern_"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1076
msgid "The field under validation must not match the given regular expression."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1078
#, no-wrap
msgid "Internally, this rule uses the PHP `preg_match` function. The pattern specified should obey the same formatting required by `preg_match` and thus also include valid delimiters. For example: `'email' => 'not_regex:/^.+$/i'`.\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1080
#, no-wrap
msgid "> {note} When using the `regex` / `not_regex` patterns, it may be necessary to specify your validation rules using an array instead of using `|` delimiters, especially if the regular expression contains a `|` character.\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1082
#, no-wrap
msgid "<a name=\"rule-nullable\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1082
#, no-wrap
msgid "nullable"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1085
msgid "The field under validation may be `null`."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1087
#, no-wrap
msgid "<a name=\"rule-numeric\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1087
#, no-wrap
msgid "numeric"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1090
msgid ""
"The field under validation must be [numeric](https://www.php.net/manual/en/"
"function.is-numeric.php)."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1092
#, no-wrap
msgid "<a name=\"rule-password\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1092
#, no-wrap
msgid "password"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1095
msgid ""
"The field under validation must match the authenticated user's password. You "
"may specify an [authentication guard](/docs/{{version}}/authentication) "
"using the rule's first parameter:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1097
#, no-wrap
msgid "    'password' => 'password:api'\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1099
#, no-wrap
msgid "<a name=\"rule-present\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1099
#, no-wrap
msgid "present"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1102
msgid ""
"The field under validation must be present in the input data but can be "
"empty."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1104
#, no-wrap
msgid "<a name=\"rule-regex\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1104
#, no-wrap
msgid "regex:_pattern_"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1107
msgid "The field under validation must match the given regular expression."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1109
#, no-wrap
msgid "Internally, this rule uses the PHP `preg_match` function. The pattern specified should obey the same formatting required by `preg_match` and thus also include valid delimiters. For example: `'email' => 'regex:/^.+@.+$/i'`.\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1111
#, no-wrap
msgid "> {note} When using the `regex` / `not_regex` patterns, it may be necessary to specify rules in an array instead of using `|` delimiters, especially if the regular expression contains a `|` character.\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1113
#, no-wrap
msgid "<a name=\"rule-required\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1113
#, no-wrap
msgid "required"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1116
msgid ""
"The field under validation must be present in the input data and not empty. "
"A field is considered \"empty\" if one of the following conditions are true:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1118
#, no-wrap
msgid "<div class=\"content-list\" markdown=\"1\">\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1123
msgid ""
"- The value is `null`.  - The value is an empty string.  - The value is an "
"empty array or empty `Countable` object.  - The value is an uploaded file "
"with no path."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1127
#, no-wrap
msgid "<a name=\"rule-required-if\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1127
#, no-wrap
msgid "required_if:_anotherfield_,_value_,..."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1130
msgid ""
"The field under validation must be present and not empty if the "
"_anotherfield_ field is equal to any _value_."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1132
msgid ""
"If you would like to construct a more complex condition for the "
"`required_if` rule, you may use the `Rule::requiredIf` method. This method "
"accepts a boolean or a closure. When passed a closure, the closure should "
"return `true` or `false` to indicate if the field under validation is "
"required:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1139
#, no-wrap
msgid ""
"    Validator::make($request->all(), [\n"
"        'role_id' => Rule::requiredIf($request->user()->is_admin),\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1145
#, no-wrap
msgid ""
"    Validator::make($request->all(), [\n"
"        'role_id' => Rule::requiredIf(function () use ($request) {\n"
"            return $request->user()->is_admin;\n"
"        }),\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1147
#, no-wrap
msgid "<a name=\"rule-required-unless\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1147
#, no-wrap
msgid "required_unless:_anotherfield_,_value_,..."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1150
msgid ""
"The field under validation must be present and not empty unless the "
"_anotherfield_ field is equal to any _value_."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1152
#, no-wrap
msgid "<a name=\"rule-required-with\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1152
#, no-wrap
msgid "required_with:_foo_,_bar_,..."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1155
msgid ""
"The field under validation must be present and not empty _only if_ any of "
"the other specified fields are present."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1157
#, no-wrap
msgid "<a name=\"rule-required-with-all\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1157
#, no-wrap
msgid "required_with_all:_foo_,_bar_,..."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1160
msgid ""
"The field under validation must be present and not empty _only if_ all of "
"the other specified fields are present."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1162
#, no-wrap
msgid "<a name=\"rule-required-without\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1162
#, no-wrap
msgid "required_without:_foo_,_bar_,..."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1165
msgid ""
"The field under validation must be present and not empty _only when_ any of "
"the other specified fields are not present."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1167
#, no-wrap
msgid "<a name=\"rule-required-without-all\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1167
#, no-wrap
msgid "required_without_all:_foo_,_bar_,..."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1170
msgid ""
"The field under validation must be present and not empty _only when_ all of "
"the other specified fields are not present."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1172
#, no-wrap
msgid "<a name=\"rule-same\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1172
#, no-wrap
msgid "same:_field_"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1175
msgid "The given _field_ must match the field under validation."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1177
#, no-wrap
msgid "<a name=\"rule-size\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1177
#, no-wrap
msgid "size:_value_"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1180
msgid ""
"The field under validation must have a size matching the given _value_. For "
"string data, _value_ corresponds to the number of characters. For numeric "
"data, _value_ corresponds to a given integer value (the attribute must also "
"have the `numeric` or `integer` rule). For an array, _size_ corresponds to "
"the `count` of the array. For files, _size_ corresponds to the file size in "
"kilobytes. Let's look at some examples:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1183
#, no-wrap
msgid ""
"    // Validate that a string is exactly 12 characters long...\n"
"    'title' => 'size:12';\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1186
#, no-wrap
msgid ""
"    // Validate that a provided integer equals 10...\n"
"    'seats' => 'integer|size:10';\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1189
#, no-wrap
msgid ""
"    // Validate that an array has exactly 5 elements...\n"
"    'tags' => 'array|size:5';\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1192
#, no-wrap
msgid ""
"    // Validate that an uploaded file is exactly 512 kilobytes...\n"
"    'image' => 'file|size:512';\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1194
#, no-wrap
msgid "<a name=\"rule-starts-with\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1194
#, no-wrap
msgid "starts_with:_foo_,_bar_,..."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1197
msgid "The field under validation must start with one of the given values."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1199
#, no-wrap
msgid "<a name=\"rule-string\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1199
#, no-wrap
msgid "string"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1202
msgid ""
"The field under validation must be a string. If you would like to allow the "
"field to also be `null`, you should assign the `nullable` rule to the field."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1204
#, no-wrap
msgid "<a name=\"rule-timezone\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1204
#, no-wrap
msgid "timezone"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1207
msgid ""
"The field under validation must be a valid timezone identifier according to "
"the `timezone_identifiers_list` PHP function."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1209
#, no-wrap
msgid "<a name=\"rule-unique\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1209
#, no-wrap
msgid "unique:_table_,_column_,_except_,_idColumn_"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1212
msgid ""
"The field under validation must not exist within the given database table."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1214
#, no-wrap
msgid "**Specifying A Custom Table / Column Name:**\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1218
#, no-wrap
msgid "    'email' => 'unique:App\\Models\\User,email_address'\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1220
msgid ""
"The `column` option may be used to specify the field's corresponding "
"database column. If the `column` option is not specified, the name of the "
"field under validation will be used."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1222
#, no-wrap
msgid "    'email' => 'unique:users,email_address'\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1224
#, no-wrap
msgid "**Specifying A Custom Database Connection**\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1226
msgid ""
"Occasionally, you may need to set a custom connection for database queries "
"made by the Validator. To accomplish this, you may prepend the connection "
"name to the table name:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1228
#, no-wrap
msgid "    'email' => 'unique:connection.users,email_address'\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1230
#, no-wrap
msgid "**Forcing A Unique Rule To Ignore A Given ID:**\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1232
msgid ""
"Sometimes, you may wish to ignore a given ID during unique validation. For "
"example, consider an \"update profile\" screen that includes the user's "
"name, email address, and location. You will probably want to verify that the "
"email address is unique. However, if the user only changes the name field "
"and not the email field, you do not want a validation error to be thrown "
"because the user is already the owner of the email address in question."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1234
msgid ""
"To instruct the validator to ignore the user's ID, we'll use the `Rule` "
"class to fluently define the rule. In this example, we'll also specify the "
"validation rules as an array instead of using the `|` character to delimit "
"the rules:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1244
#, no-wrap
msgid ""
"    Validator::make($data, [\n"
"        'email' => [\n"
"            'required',\n"
"            Rule::unique('users')->ignore($user->id),\n"
"        ],\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1246
#, no-wrap
msgid "> {note} You should never pass any user controlled request input into the `ignore` method. Instead, you should only pass a system generated unique ID such as an auto-incrementing ID or UUID from an Eloquent model instance. Otherwise, your application will be vulnerable to an SQL injection attack.\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1248
msgid ""
"Instead of passing the model key's value to the `ignore` method, you may "
"also pass the entire model instance. Laravel will automatically extract the "
"key from the model:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1250
#, no-wrap
msgid "    Rule::unique('users')->ignore($user)\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1252
msgid ""
"If your table uses a primary key column name other than `id`, you may "
"specify the name of the column when calling the `ignore` method:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1254
#, no-wrap
msgid "    Rule::unique('users')->ignore($user->id, 'user_id')\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1256
msgid ""
"By default, the `unique` rule will check the uniqueness of the column "
"matching the name of the attribute being validated. However, you may pass a "
"different column name as the second argument to the `unique` method:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1258
#, no-wrap
msgid "    Rule::unique('users', 'email_address')->ignore($user->id),\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1260
#, no-wrap
msgid "**Adding Additional Where Clauses:**\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1262
msgid ""
"You may specify additional query conditions by customizing the query using "
"the `where` method. For example, let's add a query condition that scopes the "
"query to only search records that have an `account_id` column value of `1`:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1266
#, no-wrap
msgid ""
"    'email' => Rule::unique('users')->where(function ($query) {\n"
"        return $query->where('account_id', 1);\n"
"    })\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1268
#, no-wrap
msgid "<a name=\"rule-url\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1268
#, no-wrap
msgid "url"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1271
msgid "The field under validation must be a valid URL."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1273
#, no-wrap
msgid "<a name=\"rule-uuid\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1273
#, no-wrap
msgid "uuid"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1276
msgid ""
"The field under validation must be a valid RFC 4122 (version 1, 3, 4, or 5) "
"universally unique identifier (UUID)."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1278
#, no-wrap
msgid "<a name=\"conditionally-adding-rules\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/validation.md:1278
#, no-wrap
msgid "Conditionally Adding Rules"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1281
#, no-wrap
msgid "<a name=\"skipping-validation-when-fields-have-certain-values\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1281
#, no-wrap
msgid "Skipping Validation When Fields Have Certain Values"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1284
msgid ""
"You may occasionally wish to not validate a given field if another field has "
"a given value. You may accomplish this using the `exclude_if` validation "
"rule. In this example, the `appointment_date` and `doctor_name` fields will "
"not be validated if the `has_appointment` field has a value of `false`:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1286 docs/master/validation.md:1320
#: docs/master/validation.md:1346 docs/master/validation.md:1435
#: docs/master/validation.md:1454
#, no-wrap
msgid "    use Illuminate\\Support\\Facades\\Validator;\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1292
#, no-wrap
msgid ""
"    $validator = Validator::make($data, [\n"
"        'has_appointment' => 'required|bool',\n"
"        'appointment_date' => 'exclude_if:has_appointment,false|required|date',\n"
"        'doctor_name' => 'exclude_if:has_appointment,false|required|string',\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1294
msgid ""
"Alternatively, you may use the `exclude_unless` rule to not validate a given "
"field unless another field has a given value:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1300
#, no-wrap
msgid ""
"    $validator = Validator::make($data, [\n"
"        'has_appointment' => 'required|bool',\n"
"        'appointment_date' => 'exclude_unless:has_appointment,true|required|date',\n"
"        'doctor_name' => 'exclude_unless:has_appointment,true|required|string',\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1302
#, no-wrap
msgid "<a name=\"validating-when-present\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1302
#, no-wrap
msgid "Validating When Present"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1305
msgid ""
"In some situations, you may wish to run validation checks against a field "
"**only** if that field is present in the data being validated. To quickly "
"accomplish this, add the `sometimes` rule to your rule list:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1309
#, no-wrap
msgid ""
"    $v = Validator::make($request->all(), [\n"
"        'email' => 'sometimes|required|email',\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1311
msgid ""
"In the example above, the `email` field will only be validated if it is "
"present in the `$data` array."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1313
#, no-wrap
msgid "> {tip} If you are attempting to validate a field that should always be present but may be empty, check out [this note on optional fields](#a-note-on-optional-fields)\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1315
#, no-wrap
msgid "<a name=\"complex-conditional-validation\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/validation.md:1315
#, no-wrap
msgid "Complex Conditional Validation"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1318
msgid ""
"Sometimes you may wish to add validation rules based on more complex "
"conditional logic. For example, you may wish to require a given field only "
"if another field has a greater value than 100. Or, you may need two fields "
"to have a given value only when another field is present. Adding these "
"validation rules doesn't have to be a pain. First, create a `Validator` "
"instance with your _static rules_ that never change:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1325
#, no-wrap
msgid ""
"    $validator = Validator::make($request->all(), [\n"
"        'email' => 'required|email',\n"
"        'games' => 'required|numeric',\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1327
msgid ""
"Let's assume our web application is for game collectors. If a game collector "
"registers with our application and they own more than 100 games, we want "
"them to explain why they own so many games. For example, perhaps they run a "
"game resale shop, or maybe they just enjoy collecting games. To "
"conditionally add this requirement, we can use the `sometimes` method on the "
"`Validator` instance."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1331
#, no-wrap
msgid ""
"    $v->sometimes('reason', 'required|max:500', function ($input) {\n"
"        return $input->games >= 100;\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1333
msgid ""
"The first argument passed to the `sometimes` method is the name of the field "
"we are conditionally validating. The second argument is a list of the rules "
"we want to add. If the closure passed as the third argument returns `true`, "
"the rules will be added. This method makes it a breeze to build complex "
"conditional validations. You may even add conditional validations for "
"several fields at once:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1337
#, no-wrap
msgid ""
"    $v->sometimes(['reason', 'cost'], 'required', function ($input) {\n"
"        return $input->games >= 100;\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1339
#, no-wrap
msgid "> {tip} The `$input` parameter passed to your closure will be an instance of `Illuminate\\Support\\Fluent` and may be used to access your input and files under validation.\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1341
#, no-wrap
msgid "<a name=\"validating-arrays\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/validation.md:1341
#, no-wrap
msgid "Validating Arrays"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1344
msgid ""
"Validating array based form input fields doesn't have to be a pain. You may "
"use \"dot notation\" to validate attributes within an array. For example, if "
"the incoming HTTP request contains a `photos[profile]` field, you may "
"validate it like so:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1350
#, no-wrap
msgid ""
"    $validator = Validator::make($request->all(), [\n"
"        'photos.profile' => 'required|image',\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1352
msgid ""
"You may also validate each element of an array. For example, to validate "
"that each email in a given array input field is unique, you may do the "
"following:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1357
#, no-wrap
msgid ""
"    $validator = Validator::make($request->all(), [\n"
"        'person.*.email' => 'email|unique:users',\n"
"        'person.*.first_name' => 'required_with:person.*.last_name',\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1359
msgid ""
"Likewise, you may use the `*` character when specifying [custom validation "
"messages in your language files](#custom-messages-for-specific-attributes), "
"making it a breeze to use a single validation message for array based fields:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1365
#, no-wrap
msgid ""
"    'custom' => [\n"
"        'person.*.email' => [\n"
"            'unique' => 'Each person must have a unique email address',\n"
"        ]\n"
"    ],\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1367
#, no-wrap
msgid "<a name=\"custom-validation-rules\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/validation.md:1367
#, no-wrap
msgid "Custom Validation Rules"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1370
#, no-wrap
msgid "<a name=\"using-rule-objects\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/validation.md:1370
#, no-wrap
msgid "Using Rule Objects"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1373
msgid ""
"Laravel provides a variety of helpful validation rules; however, you may "
"wish to specify some of your own. One method of registering custom "
"validation rules is using rule objects. To generate a new rule object, you "
"may use the `make:rule` Artisan command. Let's use this command to generate "
"a rule that verifies a string is uppercase. Laravel will place the new rule "
"in the `app/Rules` directory. If this directory does not exist, Laravel will "
"create it when you execute the Artisan command to create your rule:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1375
#, no-wrap
msgid "    php artisan make:rule Uppercase\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1377
msgid ""
"Once the rule has been created, we are ready to define its behavior. A rule "
"object contains two methods: `passes` and `message`. The `passes` method "
"receives the attribute value and name, and should return `true` or `false` "
"depending on whether the attribute value is valid or not. The `message` "
"method should return the validation error message that should be used when "
"validation fails:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1381
#, no-wrap
msgid "    namespace App\\Rules;\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1383
#, no-wrap
msgid "    use Illuminate\\Contracts\\Validation\\Rule;\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1397
#, no-wrap
msgid ""
"    class Uppercase implements Rule\n"
"    {\n"
"        /**\n"
"         * Determine if the validation rule passes.\n"
"         *\n"
"         * @param  string  $attribute\n"
"         * @param  mixed  $value\n"
"         * @return bool\n"
"         */\n"
"        public function passes($attribute, $value)\n"
"        {\n"
"            return strtoupper($value) === $value;\n"
"        }\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1408
#, no-wrap
msgid ""
"        /**\n"
"         * Get the validation error message.\n"
"         *\n"
"         * @return string\n"
"         */\n"
"        public function message()\n"
"        {\n"
"            return 'The :attribute must be uppercase.';\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1410
msgid ""
"You may call the `trans` helper from your `message` method if you would like "
"to return an error message from your translation files:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1420
#, no-wrap
msgid ""
"    /**\n"
"     * Get the validation error message.\n"
"     *\n"
"     * @return string\n"
"     */\n"
"    public function message()\n"
"    {\n"
"        return trans('validation.uppercase');\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1422
msgid ""
"Once the rule has been defined, you may attach it to a validator by passing "
"an instance of the rule object with your other validation rules:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1424
#, no-wrap
msgid "    use App\\Rules\\Uppercase;\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1428
#, no-wrap
msgid ""
"    $request->validate([\n"
"        'name' => ['required', 'string', new Uppercase],\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1430
#, no-wrap
msgid "<a name=\"using-closures\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/validation.md:1430
#, no-wrap
msgid "Using Closures"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1433
msgid ""
"If you only need the functionality of a custom rule once throughout your "
"application, you may use a closure instead of a rule object. The closure "
"receives the attribute's name, the attribute's value, and a `$fail` callback "
"that should be called if validation fails:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1447
#, no-wrap
msgid ""
"    $validator = Validator::make($request->all(), [\n"
"        'title' => [\n"
"            'required',\n"
"            'max:255',\n"
"            function ($attribute, $value, $fail) {\n"
"                if ($value === 'foo') {\n"
"                    $fail('The '.$attribute.' is invalid.');\n"
"                }\n"
"            },\n"
"        ],\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1449
#, no-wrap
msgid "<a name=\"implicit-rules\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/validation.md:1449
#, no-wrap
msgid "Implicit Rules"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1452
msgid ""
"By default, when an attribute being validated is not present or contains an "
"empty string, normal validation rules, including custom rules, are not run. "
"For example, the [`unique`](#rule-unique) rule will not be run against an "
"empty string:"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1456
#, no-wrap
msgid "    $rules = ['name' => 'unique:users,name'];\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1458
#, no-wrap
msgid "    $input = ['name' => ''];\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1460
#, no-wrap
msgid "    Validator::make($input, $rules)->passes(); // true\n"
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1462
msgid ""
"For a custom rule to run even when an attribute is empty, the rule must "
"imply that the attribute is required. To create an \"implicit\" rule, "
"implement the `Illuminate\\Contracts\\Validation\\ImplicitRule` interface. "
"This interface serves as a \"marker interface\" for the validator; "
"therefore, it does not contain any additional methods you need to implement "
"beyond the methods required by the typical `Rule` interface."
msgstr ""

#. type: Plain text
#: docs/master/validation.md:1463
#, no-wrap
msgid "> {note} An \"implicit\" rule only _implies_ that the attribute is required. Whether it actually invalidates a missing or empty attribute is up to you.\n"
msgstr ""

#, no-wrap
#~ msgid "Laravel Fortify"
#~ msgstr "Laravel Fortify"

#~ msgid "[What Is Fortify?](#what-is-fortify)"
#~ msgstr "[什麼是 Fortify？](#what-is-fortify)"

#~ msgid "[When Should I Use Fortify?](#when-should-i-use-fortify)"
#~ msgstr "[什麼時候該用 Fortify？](#when-should-i-use-fortify)"
