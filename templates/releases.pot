# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Taylor Otwell
# This file is distributed under the same license as the Laravel Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2022-02-07 15:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"
#
#. type: Title #
# File: docs/8.x/releases.md, line: 1
# File: docs/master/releases.md, line: 1
#, no-wrap
msgid "Release Notes"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 7
#, no-wrap
msgid ""
"- [Versioning Scheme](#versioning-scheme)\n"
"    - [Exceptions](#exceptions)\n"
"- [Support Policy](#support-policy)\n"
"- [Laravel 8](#laravel-8)\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 9
# File: docs/master/releases.md, line: 9
#, no-wrap
msgid "<a name=\"versioning-scheme\"></a>\n"
msgstr ""
#
#. type: Title ##
# File: docs/8.x/releases.md, line: 9
# File: docs/master/releases.md, line: 9
#, no-wrap
msgid "Versioning Scheme"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 12
# File: docs/master/releases.md, line: 12
msgid "Laravel and its other first-party packages follow [Semantic Versioning](https://semver.org). Major framework releases are released every year (~February), while minor and patch releases may be released as often as every week. Minor and patch releases should **never** contain breaking changes."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 14
msgid "When referencing the Laravel framework or its components from your application or package, you should always use a version constraint such as `^8.0`, since major releases of Laravel do include breaking changes. However, we strive to always ensure you may update to a new major release in one day or less."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 16
#, no-wrap
msgid "<a name=\"exceptions\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/8.x/releases.md, line: 16
#, no-wrap
msgid "Exceptions"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 19
# File: docs/master/releases.md, line: 16
#, no-wrap
msgid "<a name=\"named-arguments\"></a>\n"
msgstr ""
#
#. type: Title ####
# File: docs/8.x/releases.md, line: 19
# File: docs/master/releases.md, line: 16
#, no-wrap
msgid "Named Arguments"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 22
msgid "At this time, PHP's [named arguments](https://www.php.net/manual/en/functions.arguments.php#functions.named-arguments) functionality are not covered by Laravel's backwards compatibility guidelines. We may choose to rename function parameters when necessary in order to improve the Laravel codebase. Therefore, using named arguments when calling Laravel methods should be done cautiously and with the understanding that the parameter names may change in the future."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 24
# File: docs/master/releases.md, line: 21
#, no-wrap
msgid "<a name=\"support-policy\"></a>\n"
msgstr ""
#
#. type: Title ##
# File: docs/8.x/releases.md, line: 24
# File: docs/master/releases.md, line: 21
#, no-wrap
msgid "Support Policy"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 27
# File: docs/master/releases.md, line: 24
msgid "For LTS releases, such as Laravel 9, bug fixes are provided for 2 years and security fixes are provided for 3 years. These releases provide the longest window of support and maintenance. For general releases, bug fixes are provided for 18 months and security fixes are provided for 2 years. For all additional libraries, including Lumen, only the latest release receives bug fixes. In addition, please review the database versions [supported by Laravel](/docs/{{version}}/database#introduction)."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 35
# File: docs/master/releases.md, line: 32
msgid "| Version | PHP (*) | Release | Bug Fixes Until | Security Fixes Until | | --- | --- | --- | --- | --- | | 6 (LTS) | 7.2 - 8.0 | September 3rd, 2019 | January 25th, 2022 | September 6th, 2022 | | 7 | 7.2 - 8.0 | March 3rd, 2020 | October 6th, 2020 | March 3rd, 2021 | | 8 | 7.3 - 8.1 | September 8th, 2020 | July 26th, 2022 | January 24th, 2023 | | 9 (LTS) | 8.0 - 8.1 | February 8th, 2022 | February 8th, 2024 | February 8th, 2025 | | 10 | 8.0 - 8.1 | February 7th, 2023 | August 7th, 2024 | February 7th, 2025 |"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 46
# File: docs/master/releases.md, line: 43
#, no-wrap
msgid ""
"<div class=\"version-colors\">\n"
"    <div class=\"end-of-life\">\n"
"        <div class=\"color-box\"></div>\n"
"        <div>End of life</div>\n"
"    </div>\n"
"    <div class=\"security-fixes\">\n"
"        <div class=\"color-box\"></div>\n"
"        <div>Security fixes only</div>\n"
"    </div>\n"
"</div>\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 48
# File: docs/master/releases.md, line: 45
msgid "(*) Supported PHP versions"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 50
#, no-wrap
msgid "<a name=\"laravel-8\"></a>\n"
msgstr ""
#
#. type: Title ##
# File: docs/8.x/releases.md, line: 50
#, no-wrap
msgid "Laravel 8"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 53
msgid "Laravel 8 continues the improvements made in Laravel 7.x by introducing Laravel Jetstream, model factory classes, migration squashing, job batching, improved rate limiting, queue improvements, dynamic Blade components, Tailwind pagination views, time testing helpers, improvements to `artisan serve`, event listener improvements, and a variety of other bug fixes and usability improvements."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 55
# File: docs/master/releases.md, line: 61
#, no-wrap
msgid "<a name=\"laravel-jetstream\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/8.x/releases.md, line: 55
#, no-wrap
msgid "Laravel Jetstream"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 58
msgid "_Laravel Jetstream was written by [Taylor Otwell](https://github.com/taylorotwell)_."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 60
msgid "[Laravel Jetstream](https://jetstream.laravel.com) is a beautifully designed application scaffolding for Laravel. Jetstream provides the perfect starting point for your next project and includes login, registration, email verification, two-factor authentication, session management, API support via Laravel Sanctum, and optional team management. Laravel Jetstream replaces and improves upon the legacy authentication UI scaffolding available for previous versions of Laravel."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 62
msgid "Jetstream is designed using [Tailwind CSS](https://tailwindcss.com) and offers your choice of [Livewire](https://laravel-livewire.com) or [Inertia](https://inertiajs.com) scaffolding."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 64
#, no-wrap
msgid "<a name=\"models-directory\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/8.x/releases.md, line: 64
#, no-wrap
msgid "Models Directory"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 67
msgid "By overwhelming community demand, the default Laravel application skeleton now contains an `app/Models` directory. We hope you enjoy this new home for your Eloquent models! All relevant generator commands have been updated to assume models exist within the `app/Models` directory if it exists. If the directory does not exist, the framework will assume your models should be placed within the `app` directory."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 69
#, no-wrap
msgid "<a name=\"model-factory-classes\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/8.x/releases.md, line: 69
#, no-wrap
msgid "Model Factory Classes"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 72
msgid "_Model factory classes were contributed by [Taylor Otwell](https://github.com/taylorotwell)_."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 74
msgid "Eloquent [model factories](/docs/{{version}}/database-testing#defining-model-factories) have been entirely re-written as class based factories and improved to have first-class relationship support. For example, the `UserFactory` included with Laravel is written like so:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 76
#, no-wrap
msgid "    <?php\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 78
#, no-wrap
msgid "    namespace Database\\Factories;\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 82
#, no-wrap
msgid ""
"    use App\\Models\\User;\n"
"    use Illuminate\\Database\\Eloquent\\Factories\\Factory;\n"
"    use Illuminate\\Support\\Str;\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 91
#, no-wrap
msgid ""
"    class UserFactory extends Factory\n"
"    {\n"
"        /**\n"
"         * The name of the factory's corresponding model.\n"
"         *\n"
"         * @var string\n"
"         */\n"
"        protected $model = User::class;\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 108
#, no-wrap
msgid ""
"        /**\n"
"         * Define the model's default state.\n"
"         *\n"
"         * @return array\n"
"         */\n"
"        public function definition()\n"
"        {\n"
"            return [\n"
"                'name' => $this->faker->name(),\n"
"                'email' => $this->faker->unique()->safeEmail(),\n"
"                'email_verified_at' => now(),\n"
"                'password' => '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', // password\n"
"                'remember_token' => Str::random(10),\n"
"            ];\n"
"        }\n"
"    }\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 110
msgid "Thanks to the new `HasFactory` trait available on generated models, the model factory may be used like so:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 112
# File: docs/8.x/releases.md, line: 134
#, no-wrap
msgid "    use App\\Models\\User;\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 114
#, no-wrap
msgid "    User::factory()->count(50)->create();\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 116
msgid "Since model factories are now simple PHP classes, state transformations may be written as class methods. In addition, you may add any other helper classes to your Eloquent model factory as needed."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 118
msgid "For example, your `User` model might have a `suspended` state that modifies one of its default attribute values. You may define your state transformations using the base factory's `state` method. You may name your state method anything you like. After all, it's just a typical PHP method:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 130
#, no-wrap
msgid ""
"    /**\n"
"     * Indicate that the user is suspended.\n"
"     *\n"
"     * @return \\Illuminate\\Database\\Eloquent\\Factories\\Factory\n"
"     */\n"
"    public function suspended()\n"
"    {\n"
"        return $this->state([\n"
"            'account_status' => 'suspended',\n"
"        ]);\n"
"    }\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 132
msgid "After defining the state transformation method, we may use it like so:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 136
#, no-wrap
msgid "    User::factory()->count(5)->suspended()->create();\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 138
msgid "As mentioned, Laravel 8's model factories contain first class support for relationships. So, assuming our `User` model has a `posts` relationship method, we may simply run the following code to generate a user with three posts:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 144
#, no-wrap
msgid ""
"    $users = User::factory()\n"
"                ->hasPosts(3, [\n"
"                    'published' => false,\n"
"                ])\n"
"                ->create();\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 146
msgid "To ease the upgrade process, the [laravel/legacy-factories](https://github.com/laravel/legacy-factories) package has been released to provide support for the previous iteration of model factories within Laravel 8.x."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 148
msgid "Laravel's re-written factories contain many more features that we think you will love. To learn more about model factories, please consult the [database testing documentation](/docs/{{version}}/database-testing#defining-model-factories)."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 150
#, no-wrap
msgid "<a name=\"migration-squashing\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/8.x/releases.md, line: 150
#, no-wrap
msgid "Migration Squashing"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 153
msgid "_Migration squashing was contributed by [Taylor Otwell](https://github.com/taylorotwell)_."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 155
msgid "As you build your application, you may accumulate more and more migrations over time. This can lead to your migration directory becoming bloated with potentially hundreds of migrations. If you're using MySQL or PostgreSQL, you may now \"squash\" your migrations into a single SQL file. To get started, execute the `schema:dump` command:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 157
#, no-wrap
msgid "    php artisan schema:dump\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 160
#, no-wrap
msgid ""
"    // Dump the current database schema and prune all existing migrations...\n"
"    php artisan schema:dump --prune\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 162
msgid "When you execute this command, Laravel will write a \"schema\" file to your `database/schema` directory. Now, when you attempt to migrate your database and no other migrations have been executed, Laravel will execute the schema file's SQL first. After executing the schema file's commands, Laravel will execute any remaining migrations that were not part of the schema dump."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 164
#, no-wrap
msgid "<a name=\"job-batching\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/8.x/releases.md, line: 164
#, no-wrap
msgid "Job Batching"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 167
msgid "_Job batching was contributed by [Taylor Otwell](https://github.com/taylorotwell) & [Mohamed Said](https://github.com/themsaid)_."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 169
msgid "Laravel's job batching feature allows you to easily execute a batch of jobs and then perform some action when the batch of jobs has completed executing."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 171
msgid "The new `batch` method of the `Bus` facade may be used to dispatch a batch of jobs. Of course, batching is primarily useful when combined with completion callbacks. So, you may use the `then`, `catch`, and `finally` methods to define completion callbacks for the batch. Each of these callbacks will receive an `Illuminate\\Bus\\Batch` instance when they are invoked:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 177
#, no-wrap
msgid ""
"    use App\\Jobs\\ProcessPodcast;\n"
"    use App\\Podcast;\n"
"    use Illuminate\\Bus\\Batch;\n"
"    use Illuminate\\Support\\Facades\\Bus;\n"
"    use Throwable;\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 191
#, no-wrap
msgid ""
"    $batch = Bus::batch([\n"
"        new ProcessPodcast(Podcast::find(1)),\n"
"        new ProcessPodcast(Podcast::find(2)),\n"
"        new ProcessPodcast(Podcast::find(3)),\n"
"        new ProcessPodcast(Podcast::find(4)),\n"
"        new ProcessPodcast(Podcast::find(5)),\n"
"    ])->then(function (Batch $batch) {\n"
"        // All jobs completed successfully...\n"
"    })->catch(function (Batch $batch, Throwable $e) {\n"
"        // First batch job failure detected...\n"
"    })->finally(function (Batch $batch) {\n"
"        // The batch has finished executing...\n"
"    })->dispatch();\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 193
#, no-wrap
msgid "    return $batch->id;\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 195
msgid "To learn more about job batching, please consult the [queue documentation](/docs/{{version}}/queues#job-batching)."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 197
#, no-wrap
msgid "<a name=\"improved-rate-limiting\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/8.x/releases.md, line: 197
#, no-wrap
msgid "Improved Rate Limiting"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 200
msgid "_Rate limiting improvements were contributed by [Taylor Otwell](https://github.com/taylorotwell)_."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 202
msgid "Laravel's request rate limiter feature has been augmented with more flexibility and power, while still maintaining backwards compatibility with previous release's `throttle` middleware API."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 204
msgid "Rate limiters are defined using the `RateLimiter` facade's `for` method. The `for` method accepts a rate limiter name and a closure that returns the limit configuration that should apply to routes that are assigned this rate limiter:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 207
#, no-wrap
msgid ""
"    use Illuminate\\Cache\\RateLimiting\\Limit;\n"
"    use Illuminate\\Support\\Facades\\RateLimiter;\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 211
#, no-wrap
msgid ""
"    RateLimiter::for('global', function (Request $request) {\n"
"        return Limit::perMinute(1000);\n"
"    });\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 213
msgid "Since rate limiter callbacks receive the incoming HTTP request instance, you may build the appropriate rate limit dynamically based on the incoming request or authenticated user:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 219
#, no-wrap
msgid ""
"    RateLimiter::for('uploads', function (Request $request) {\n"
"        return $request->user()->vipCustomer()\n"
"                    ? Limit::none()\n"
"                    : Limit::perMinute(100);\n"
"    });\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 221
msgid "Sometimes you may wish to segment rate limits by some arbitrary value. For example, you may wish to allow users to access a given route 100 times per minute per IP address. To accomplish this, you may use the `by` method when building your rate limit:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 227
#, no-wrap
msgid ""
"    RateLimiter::for('uploads', function (Request $request) {\n"
"        return $request->user()->vipCustomer()\n"
"                    ? Limit::none()\n"
"                    : Limit::perMinute(100)->by($request->ip());\n"
"    });\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 229
msgid "Rate limiters may be attached to routes or route groups using the `throttle` [middleware](/docs/{{version}}/middleware). The throttle middleware accepts the name of the rate limiter you wish to assign to the route:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 234
#, no-wrap
msgid ""
"    Route::middleware(['throttle:uploads'])->group(function () {\n"
"        Route::post('/audio', function () {\n"
"            //\n"
"        });\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 239
#, no-wrap
msgid ""
"        Route::post('/video', function () {\n"
"            //\n"
"        });\n"
"    });\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 241
msgid "To learn more about rate limiting, please consult the [routing documentation](/docs/{{version}}/routing#rate-limiting)."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 243
#, no-wrap
msgid "<a name=\"improved-maintenance-mode\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/8.x/releases.md, line: 243
#, no-wrap
msgid "Improved Maintenance Mode"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 246
msgid "_Maintenance mode improvements were contributed by [Taylor Otwell](https://github.com/taylorotwell) with inspiration from [Spatie](https://spatie.be)_."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 248
msgid "In previous releases of Laravel, the `php artisan down` maintenance mode feature may be bypassed using an \"allow list\" of IP addresses that were allowed to access the application. This feature has been removed in favor of a simpler \"secret\" / token solution."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 250
msgid "While in maintenance mode, you may use the `secret` option to specify a maintenance mode bypass token:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 252
#, no-wrap
msgid "    php artisan down --secret=\"1630542a-246b-4b66-afa1-dd72a4c43515\"\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 254
msgid "After placing the application in maintenance mode, you may navigate to the application URL matching this token and Laravel will issue a maintenance mode bypass cookie to your browser:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 256
#, no-wrap
msgid "    https://example.com/1630542a-246b-4b66-afa1-dd72a4c43515\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 258
msgid "When accessing this hidden route, you will then be redirected to the `/` route of the application. Once the cookie has been issued to your browser, you will be able to browse the application normally as if it was not in maintenance mode."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 260
#, no-wrap
msgid "<a name=\"pre-rendering-the-maintenance-mode-view\"></a>\n"
msgstr ""
#
#. type: Title ####
# File: docs/8.x/releases.md, line: 260
#, no-wrap
msgid "Pre-Rendering The Maintenance Mode View"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 263
msgid "If you utilize the `php artisan down` command during deployment, your users may still occasionally encounter errors if they access the application while your Composer dependencies or other infrastructure components are updating. This occurs because a significant part of the Laravel framework must boot in order to determine your application is in maintenance mode and render the maintenance mode view using the templating engine."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 265
msgid "For this reason, Laravel now allows you to pre-render a maintenance mode view that will be returned at the very beginning of the request cycle. This view is rendered before any of your application's dependencies have loaded. You may pre-render a template of your choice using the `down` command's `render` option:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 267
#, no-wrap
msgid "    php artisan down --render=\"errors::503\"\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 269
#, no-wrap
msgid "<a name=\"closure-dispatch-chain-catch\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/8.x/releases.md, line: 269
#, no-wrap
msgid "Closure Dispatch / Chain `catch`"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 272
msgid "_Catch improvements were contributed by [Mohamed Said](https://github.com/themsaid)_."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 274
msgid "Using the new `catch` method, you may now provide a closure that should be executed if a queued closure fails to complete successfully after exhausting all of your queue's configured retry attempts:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 276
#, no-wrap
msgid "    use Throwable;\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 282
#, no-wrap
msgid ""
"    dispatch(function () use ($podcast) {\n"
"        $podcast->publish();\n"
"    })->catch(function (Throwable $e) {\n"
"        // This job has failed...\n"
"    });\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 284
#, no-wrap
msgid "<a name=\"dynamic-blade-components\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/8.x/releases.md, line: 284
#, no-wrap
msgid "Dynamic Blade Components"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 287
msgid "_Dynamic Blade components were contributed by [Taylor Otwell](https://github.com/taylorotwell)_."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 289
msgid "Sometimes you may need to render a component but not know which component should be rendered until runtime. In this situation, you may now use Laravel's built-in `dynamic-component` component to render the component based on a runtime value or variable:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 291
#, no-wrap
msgid "    <x-dynamic-component :component=\"$componentName\" class=\"mt-4\" />\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 293
msgid "To learn more about Blade components, please consult the [Blade documentation](/docs/{{version}}/blade#components)."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 295
#, no-wrap
msgid "<a name=\"event-listener-improvements\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/8.x/releases.md, line: 295
#, no-wrap
msgid "Event Listener Improvements"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 298
msgid "_Event listener improvements were contributed by [Taylor Otwell](https://github.com/taylorotwell)_."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 300
msgid "Closure based event listeners may now be registered by only passing the closure to the `Event::listen` method. Laravel will inspect the closure to determine which type of event the listener handles:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 303
#, no-wrap
msgid ""
"    use App\\Events\\PodcastProcessed;\n"
"    use Illuminate\\Support\\Facades\\Event;\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 307
#, no-wrap
msgid ""
"    Event::listen(function (PodcastProcessed $event) {\n"
"        //\n"
"    });\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 309
msgid "In addition, closure based event listeners may now be marked as queueable using the `Illuminate\\Events\\queueable` function:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 313
#, no-wrap
msgid ""
"    use App\\Events\\PodcastProcessed;\n"
"    use function Illuminate\\Events\\queueable;\n"
"    use Illuminate\\Support\\Facades\\Event;\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 317
#, no-wrap
msgid ""
"    Event::listen(queueable(function (PodcastProcessed $event) {\n"
"        //\n"
"    }));\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 319
msgid "Like queued jobs, you may use the `onConnection`, `onQueue`, and `delay` methods to customize the execution of the queued listener:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 323
#, no-wrap
msgid ""
"    Event::listen(queueable(function (PodcastProcessed $event) {\n"
"        //\n"
"    })->onConnection('redis')->onQueue('podcasts')->delay(now()->addSeconds(10)));\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 325
msgid "If you would like to handle anonymous queued listener failures, you may provide a closure to the `catch` method while defining the `queueable` listener:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 330
#, no-wrap
msgid ""
"    use App\\Events\\PodcastProcessed;\n"
"    use function Illuminate\\Events\\queueable;\n"
"    use Illuminate\\Support\\Facades\\Event;\n"
"    use Throwable;\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 336
#, no-wrap
msgid ""
"    Event::listen(queueable(function (PodcastProcessed $event) {\n"
"        //\n"
"    })->catch(function (PodcastProcessed $event, Throwable $e) {\n"
"        // The queued listener failed...\n"
"    }));\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 338
#, no-wrap
msgid "<a name=\"time-testing-helpers\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/8.x/releases.md, line: 338
#, no-wrap
msgid "Time Testing Helpers"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 341
msgid "_Time testing helpers were contributed by [Taylor Otwell](https://github.com/taylorotwell) with inspiration from Ruby on Rails_."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 343
msgid "When testing, you may occasionally need to modify the time returned by helpers such as `now` or `Illuminate\\Support\\Carbon::now()`. Laravel's base feature test class now includes helpers that allow you to manipulate the current time:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 354
#, no-wrap
msgid ""
"    public function testTimeCanBeManipulated()\n"
"    {\n"
"        // Travel into the future...\n"
"        $this->travel(5)->milliseconds();\n"
"        $this->travel(5)->seconds();\n"
"        $this->travel(5)->minutes();\n"
"        $this->travel(5)->hours();\n"
"        $this->travel(5)->days();\n"
"        $this->travel(5)->weeks();\n"
"        $this->travel(5)->years();\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 357
#, no-wrap
msgid ""
"        // Travel into the past...\n"
"        $this->travel(-5)->hours();\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 360
#, no-wrap
msgid ""
"        // Travel to an explicit time...\n"
"        $this->travelTo(now()->subHours(6));\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 364
#, no-wrap
msgid ""
"        // Return back to the present time...\n"
"        $this->travelBack();\n"
"    }\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 366
#, no-wrap
msgid "<a name=\"artisan-serve-improvements\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/8.x/releases.md, line: 366
#, no-wrap
msgid "Artisan `serve` Improvements"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 369
msgid "_Artisan `serve` improvements were contributed by [Taylor Otwell](https://github.com/taylorotwell)_."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 371
msgid "The Artisan `serve` command has been improved with automatic reloading when environment variable changes are detected within your local `.env` file. Previously, the command had to be manually stopped and restarted."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 373
#, no-wrap
msgid "<a name=\"tailwind-pagination-views\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/8.x/releases.md, line: 373
#, no-wrap
msgid "Tailwind Pagination Views"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 376
msgid "The Laravel paginator has been updated to use the [Tailwind CSS](https://tailwindcss.com) framework by default. Tailwind CSS is a highly customizable, low-level CSS framework that gives you all of the building blocks you need to build bespoke designs without any annoying opinionated styles you have to fight to override. Of course, Bootstrap 3 and 4 views remain available as well."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 378
#, no-wrap
msgid "<a name=\"routing-namespace-updates\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/8.x/releases.md, line: 378
#, no-wrap
msgid "Routing Namespace Updates"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 381
msgid "In previous releases of Laravel, the `RouteServiceProvider` contained a `$namespace` property. This property's value would automatically be prefixed onto controller route definitions and calls to the `action` helper / `URL::action` method. In Laravel 8.x, this property is `null` by default. This means that no automatic namespace prefixing will be done by Laravel. Therefore, in new Laravel 8.x applications, controller route definitions should be defined using standard PHP callable syntax:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 383
#, no-wrap
msgid "    use App\\Http\\Controllers\\UserController;\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 385
#, no-wrap
msgid "    Route::get('/users', [UserController::class, 'index']);\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 387
msgid "Calls to the `action` related methods should use the same callable syntax:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 389
#, no-wrap
msgid "    action([UserController::class, 'index']);\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 391
#, no-wrap
msgid "    return Redirect::action([UserController::class, 'index']);\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 393
msgid "If you prefer Laravel 7.x style controller route prefixing, you may simply add the `$namespace` property into your application's `RouteServiceProvider`."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/releases.md, line: 394
#, no-wrap
msgid "> {note} This change only affects new Laravel 8.x applications. Applications upgrading from Laravel 7.x will still have the `$namespace` property in their `RouteServiceProvider`.\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 7
#, no-wrap
msgid ""
"- [Versioning Scheme](#versioning-scheme)\n"
"    - [Exceptions](#exceptions)\n"
"- [Support Policy](#support-policy)\n"
"- [Laravel 9](#laravel-9)\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 14
msgid "When referencing the Laravel framework or its components from your application or package, you should always use a version constraint such as `^9.0`, since major releases of Laravel do include breaking changes. However, we strive to always ensure you may update to a new major release in one day or less."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 19
msgid "[Named arguments](https://www.php.net/manual/en/functions.arguments.php#functions.named-arguments) are not covered by Laravel's backwards compatibility guidelines. We may choose to rename function arguments when necessary in order to improve the Laravel codebase. Therefore, using named arguments when calling Laravel methods should be done cautiously and with the understanding that the parameter names may change in the future."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 47
#, no-wrap
msgid "<a name=\"laravel-9\"></a>\n"
msgstr ""
#
#. type: Title ##
# File: docs/master/releases.md, line: 47
#, no-wrap
msgid "Laravel 9"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 50
msgid "As you may know, Laravel transitioned to yearly releases with the release of Laravel 8. Previously, major versions were released every 6 months. This transition is intended to ease the maintenance burden on the community and challenge our development team to ship amazing, powerful new features without introducing breaking changes. Therefore, we have shipped a variety of robust features to Laravel 8 without breaking backwards compatibility, such as parallel testing support, improved Breeze starter kits, HTTP client improvements, and even new Eloquent relationship types such as \"has one of many\"."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 52
msgid "Therefore, this commitment to ship great new features during the current release will likely lead to future \"major\" releases being primarily used for \"maintenance\" tasks such as upgrading upstream dependencies, which can be seen in these release notes."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 54
msgid "Laravel 9 continues the improvements made in Laravel 8.x by introducing support for Symfony 6.0 components, Symfony Mailer, Flysystem 3.0, improved `route:list` output, a Laravel Scout database driver, new Eloquent accessor / mutator syntax, implicit route bindings via Enums, and a variety of other bug fixes and usability improvements."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 56
#, no-wrap
msgid "<a name=\"php-8\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/master/releases.md, line: 56
#, no-wrap
msgid "PHP 8.0"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 59
msgid "Laravel 9.x requires a minimum PHP version of 8.0."
msgstr ""
#
#. type: Title ###
# File: docs/master/releases.md, line: 61
#, no-wrap
msgid "Symfony Mailer"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 64
msgid "_Symfony Mailer support was contributed by [Dries Vints](https://github.com/driesvints)_, [James Brooks](https://github.com/jbrooksuk), and [Julius Kiekbusch](https://github.com/Jubeki)."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 66
msgid "Previous releases of Laravel utilized the [Swift Mailer](https://swiftmailer.symfony.com/docs/introduction.html) library to send outgoing email. However, that library is no longer maintained and has been succeeded by Symfony Mailer."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 68
msgid "Please review the [upgrade guide](/docs/{{version}}/upgrade#symfony-mailer) to learn more about ensuring your application is compatible with Symfony Mailer."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 70
#, no-wrap
msgid "<a name=\"flysystem-3\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/master/releases.md, line: 70
#, no-wrap
msgid "Flysystem 3.x"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 73
msgid "_Flysystem 3.x support was contributed by [Dries Vints](https://github.com/driesvints)_."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 75
msgid "Laravel 9.x upgrades our upstream Flysystem dependency to Flysystem 3.x. Flysystem powers all of filesystem interactions offered by the `Storage` facade."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 77
msgid "Please review the [upgrade guide](/docs/{{version}}/upgrade#flysystem-3) to learn more about ensuring your application is compatible with Flysystem 3.x."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 79
#, no-wrap
msgid "<a name=\"eloquent-accessors-and-mutators\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/master/releases.md, line: 79
#, no-wrap
msgid "Improved Eloquent Accessors / Mutators"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 82
msgid "_Improved Eloquent accessors / mutators was contributed by [Taylor Otwell](https://github.com/taylorotwell)_."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 84
msgid "Laravel 9.x offers a new way to define Eloquent [accessors and mutators](/docs/{{version}}/eloquent-mutators#accessors-and-mutators). In previous releases of Laravel, the only way to define accessors and mutators was by defining prefixed methods on your model like so:"
msgstr ""
#
#. type: Code fence info string
# File: docs/master/releases.md, line: 85
# File: docs/master/releases.md, line: 99
# File: docs/master/releases.md, line: 113
# File: docs/master/releases.md, line: 167
# File: docs/master/releases.md, line: 177
# File: docs/master/releases.md, line: 261
# File: docs/master/releases.md, line: 269
#, no-wrap
msgid "php"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 85
#, no-wrap
msgid ""
"public function getNameAttribute($value)\n"
"{\n"
"    return strtoupper($value);\n"
"}\n"
"\n"
"public function setNameAttribute($value)\n"
"{\n"
"    $this->attributes['name'] = $value;\n"
"}\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 98
msgid "However, in Laravel 9.x you may define an accessor and mutator using a single, non-prefixed method by type-hinting a return type of `Illuminate\\Database\\Eloquent\\Casts\\Attribute`:"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 99
#, no-wrap
msgid ""
"use Illuminate\\Database\\Eloquent\\Casts\\Attribute;\n"
"\n"
"public function name(): Attribute\n"
"{\n"
"    return new Attribute(\n"
"        get: fn ($value) => strtoupper($value),\n"
"        set: fn ($value) => $value,\n"
"    );\n"
"}\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 112
msgid "In addition, this new approach to defining accessors will cache object values that are returned by the attribute, just like [custom cast classes](/docs/{{version}}/eloquent-mutators#custom-casts):"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 113
#, no-wrap
msgid ""
"use App\\Support\\Address;\n"
"use Illuminate\\Database\\Eloquent\\Casts\\Attribute;\n"
"\n"
"public function address(): Attribute\n"
"{\n"
"    return new Attribute(\n"
"        get: fn ($value, $attributes) => new Address(\n"
"            $attributes['address_line_one'],\n"
"            $attributes['address_line_two'],\n"
"        ),\n"
"        set: fn (Address $value) => [\n"
"            'address_line_one' => $value->lineOne,\n"
"            'address_line_two' => $value->lineTwo,\n"
"        ],\n"
"    );\n"
"}\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 133
#, no-wrap
msgid "<a name=\"enum-casting\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/master/releases.md, line: 133
#, no-wrap
msgid "Enum Eloquent Attribute Casting"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 136
#, no-wrap
msgid "> {note} Enum casting is only available for PHP 8.1+.\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 138
msgid "_Enum casting was contributed by [Mohamed Said](https://github.com/themsaid)_."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 140
msgid "Eloquent now allows you to cast your attribute values to PHP enums. To accomplish this, you may specify the attribute and enum you wish to cast in your model's `$casts` property array:"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 142
#, no-wrap
msgid "    use App\\Enums\\ServerStatus;\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 151
#, no-wrap
msgid ""
"    /**\n"
"     * The attributes that should be cast.\n"
"     *\n"
"     * @var array\n"
"     */\n"
"    protected $casts = [\n"
"        'status' => ServerStatus::class,\n"
"    ];\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 153
msgid "Once you have defined the cast on your model, the specified attribute will be automatically cast to and from an enum when you interact with the attribute:"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 156
#, no-wrap
msgid ""
"    if ($server->status == ServerStatus::provisioned) {\n"
"        $server->status = ServerStatus::ready;\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 159
#, no-wrap
msgid ""
"        $server->save();\n"
"    }\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 161
#, no-wrap
msgid "<a name=\"implicit-route-bindings-with-enums\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/master/releases.md, line: 161
#, no-wrap
msgid "Implicit Route Bindings With Enums"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 164
msgid "_Implicit Enum bindings was contributed by [Nuno Maduro](https://github.com/nunomaduro)_."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 166
msgid "PHP 8.1 introduces support for [Enums](https://www.php.net/manual/en/language.enumerations.backed.php). Laravel 9.x introduces the ability to type-hint an Enum on your route definition and Laravel will only invoke the route if that route segment is a valid Enum value in the URI. Otherwise, an HTTP 404 response will be returned automatically. For example, given the following Enum:"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 167
#, no-wrap
msgid ""
"enum Category: string\n"
"{\n"
"    case Fruits = 'fruits';\n"
"    case People = 'people';\n"
"}\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 176
msgid "You may define a route that will only be invoked if the `{category}` route segment is `fruits` or `people`. Otherwise, an HTTP 404 response will be returned:"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 177
#, no-wrap
msgid ""
"Route::get('/categories/{category}', function (Category $category) {\n"
"    return $category->value;\n"
"});\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 184
#, no-wrap
msgid "<a name=\"forced-scoping-of-route-bindings\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/master/releases.md, line: 184
#, no-wrap
msgid "Forced Scoping Of Route Bindings"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 187
msgid "_Forced scoped bindings was contributed by [Claudio Dekker](https://github.com/claudiodekker)_."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 189
msgid "In previous releases of Laravel, you may wish to scope the second Eloquent model in a route definition such that it must be a child of the previous Eloquent model. For example, consider this route definition that retrieves a blog post by slug for a specific user:"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 192
# File: docs/master/releases.md, line: 203
#, no-wrap
msgid ""
"    use App\\Models\\Post;\n"
"    use App\\Models\\User;\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 196
#, no-wrap
msgid ""
"    Route::get('/users/{user}/posts/{post:slug}', function (User $user, Post $post) {\n"
"        return $post;\n"
"    });\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 198
msgid "When using a custom keyed implicit binding as a nested route parameter, Laravel will automatically scope the query to retrieve the nested model by its parent using conventions to guess the relationship name on the parent. However, this behavior was only previously supported by Laravel when a custom key was used for the child route binding."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 200
msgid "However, in Laravel 9.x, you may now instruct Laravel to scope \"child\" bindings even when a custom key is not provided. To do so, you may invoke the `scopeBindings` method when defining your route:"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 207
#, no-wrap
msgid ""
"    Route::get('/users/{user}/posts/{post}', function (User $user, Post $post) {\n"
"        return $post;\n"
"    })->scopeBindings();\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 209
msgid "Or, you may instruct an entire group of route definitions to use scoped bindings:"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 215
#, no-wrap
msgid ""
"    Route::scopeBindings()->group(function () {\n"
"        Route::get('/users/{user}/posts/{post}', function (User $user, Post $post) {\n"
"            return $post;\n"
"        });\n"
"    });\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 217
#, no-wrap
msgid "<a name=\"controller-route-groups\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/master/releases.md, line: 217
#, no-wrap
msgid "Controller Route Groups"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 220
msgid "_Route group improvements were contributed by [Luke Downing](https://github.com/lukeraymonddowning)_."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 222
msgid "You may now use the `controller` method to define the common controller for all of the routes within the group. Then, when defining the routes, you only need to provide the controller method that they invoke:"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 224
#, no-wrap
msgid "    use App\\Http\\Controllers\\OrderController;\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 229
#, no-wrap
msgid ""
"    Route::controller(OrderController::class)->group(function () {\n"
"        Route::get('/orders/{id}', 'show');\n"
"        Route::post('/orders', 'store');\n"
"    });\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 231
#, no-wrap
msgid "<a name=\"full-text\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/master/releases.md, line: 231
#, no-wrap
msgid "Full Text Indexes / Where Clauses"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 234
msgid "_Full text indexes and \"where\" clauses were contributed by [Taylor Otwell](https://github.com/taylorotwell) and [Dries Vints](https://github.com/driesvints)_."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 236
msgid "When using MySQL or PostgreSQL, the `fullText` method may now be added to column definitions to generate full text indexes:"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 238
#, no-wrap
msgid "    $table->text('bio')->fullText();\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 240
msgid "In addition, the `whereFullText` and `orWhereFullText` methods may be used to add full text \"where\" clauses to a query for columns that have [full text indexes](/docs/{{version}}/migrations#available-index-types). These methods will be transformed into the appropriate SQL for the underlying database system by Laravel. For example, a `MATCH AGAINST` clause will be generated for applications utilizing MySQL:"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 244
#, no-wrap
msgid ""
"    $users = DB::table('users')\n"
"               ->whereFullText('bio', 'web developer')\n"
"               ->get();\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 246
#, no-wrap
msgid "<a name=\"laravel-scout-database-engine\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/master/releases.md, line: 246
#, no-wrap
msgid "Laravel Scout Database Engine"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 249
msgid "_The Laravel Scout database engine was contributed by [Taylor Otwell](https://github.com/taylorotwell) and [Dries Vints](https://github.com/driesvints)_."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 251
msgid "If your application interacts with small to medium sized databases or has a light workload, you may now use Scout's \"database\" engine instead of a dedicated search service such as Algolia or MeiliSerach. The database engine will use \"where like\" clauses and full text indexes when filtering results from your existing database to determine the applicable search results for your query."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 253
msgid "To learn more about the Scout database engine, consult the [Scout documentation](/docs/{{version}}/scout)."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 255
#, no-wrap
msgid "<a name=\"rendering-inline-blade-templates\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/master/releases.md, line: 255
#, no-wrap
msgid "Rendering Inline Blade Templates"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 258
msgid "_Rendering inline Blade templates was contributed by [Jason Beggs](https://github.com/jasonlbeggs). Rendering inline Blade components was contributed by [Toby Zerner](https://github.com/tobyzerner)_."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 260
msgid "Sometimes you may need to transform a raw Blade template string into valid HTML. You may accomplish this using the `render` method provided by the `Blade` facade. The `render` method accepts the Blade template string and an optional array of data to provide to the template:"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 261
#, no-wrap
msgid ""
"use Illuminate\\Support\\Facades\\Blade;\n"
"\n"
"return Blade::render('Hello, {{ $name }}', ['name' => 'Julian Bashir']);\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 268
msgid "Similarly, the `renderComponent` method may be used to render a given class component by passing the component instance to the method:"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 269
#, no-wrap
msgid ""
"use App\\View\\Components\\HelloComponent;\n"
"\n"
"return Blade::renderComponent(new HelloComponent('Julian Bashir'));\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 276
#, no-wrap
msgid "<a name=\"slot-name-shortcut\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/master/releases.md, line: 276
#, no-wrap
msgid "Slot Name Shortcut"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 279
msgid "_Slot name shortcuts were contributed by [Caleb Porzio](https://github.com/calebporzio)._"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 281
msgid "In previous releases of Laravel, slot names were provided using a `name` attribute on the `x-slot` tag:"
msgstr ""
#
#. type: Code fence info string
# File: docs/master/releases.md, line: 282
# File: docs/master/releases.md, line: 294
#, no-wrap
msgid "html"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 282
#, no-wrap
msgid ""
"<x-alert>\n"
"    <x-slot name=\"title\">\n"
"        Server Error\n"
"    </x-slot>\n"
"\n"
"    <strong>Whoops!</strong> Something went wrong!\n"
"</x-alert>\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 293
msgid "However, beginning in Laravel 9.x, you may specify the slot's name using a convenient, shorter syntax:"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 294
#, no-wrap
msgid ""
"<x-slot:title>\n"
"    Server Error\n"
"</x-slot>\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 301
#, no-wrap
msgid "<a name=\"checked-selected-blade-directives\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/master/releases.md, line: 301
#, no-wrap
msgid "Checked / Selected Blade Directives"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 304
msgid "_Checked and selected Blade directives were contributed by [Ash Allen](https://github.com/ash-jc-allen) and [Taylor Otwell](https://github.com/taylorotwell)_."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 306
msgid "For convenience, you may now use the `@checked` directive to easily indicate if a given HTML checkbox input is \"checked\". This directive will echo `checked` if the provided condition evaluates to `true`:"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 311
#, no-wrap
msgid ""
"    <input type=\"checkbox\"\n"
"            name=\"active\"\n"
"            value=\"active\"\n"
"            @checked(old('active', $user->active)) />\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 313
msgid "Likewise, the `@selected` directive may be used to indicate if a given select option should be \"selected\":"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 321
#, no-wrap
msgid ""
"    <select name=\"version\">\n"
"        @foreach ($product->versions as $version)\n"
"            <option value=\"{{ $version }}\" @selected(old('version') == $version)>\n"
"                {{ $version }}\n"
"            </option>\n"
"        @endforeach\n"
"    </select>\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 323
#, no-wrap
msgid "<a name=\"bootstrap-5-pagination-views\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/master/releases.md, line: 323
#, no-wrap
msgid "Bootstrap 5 Pagination Views"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 326
msgid "_Bootstrap 5 pagination views were contributed by [Jared Lewis](https://github.com/jrd-lewis)_."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 328
msgid "Laravel now includes pagination views built using [Bootstrap 5](https://getbootstrap.com/). To use these views instead of the default Tailwind views, you may call the paginator's `useBootstrapFive` method within the `boot` method of your `App\\Providers\\AppServiceProvider` class:"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 330
#, no-wrap
msgid "    use Illuminate\\Pagination\\Paginator;\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 340
#, no-wrap
msgid ""
"    /**\n"
"     * Bootstrap any application services.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function boot()\n"
"    {\n"
"        Paginator::useBootstrapFive();\n"
"    }\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 342
#, no-wrap
msgid "<a name=\"improved-validation-of-nested-array-data\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/master/releases.md, line: 342
#, no-wrap
msgid "Improved Validation Of Nested Array Data"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 345
msgid "_Improved validation of nested array inputs was contributed by [Steve Bauman](https://github.com/stevebauman)_."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 347
msgid "Sometimes you may need to access the value for a given nested array element when assigning validation rules to the attribute. You may now accomplish this using the `Rule::foreEach` method. The `forEach` method accepts a closure that will be invoked for each iteration of the array attribute under validation and will receive the attribute's value and explicit, fully-expanded attribute name. The closure should return an array of rules to assign to the array element:"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 351
#, no-wrap
msgid ""
"    use App\\Rules\\HasPermission;\n"
"    use Illuminate\\Support\\Facades\\Validator;\n"
"    use Illuminate\\Validation\\Rule;\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 360
#, no-wrap
msgid ""
"    $validator = Validator::make($request->all(), [\n"
"        'companies.*.id' => Rule::forEach(function ($value, $attribute) {\n"
"            return [\n"
"                Rule::exists(Company::class, 'id'),\n"
"                new HasPermission('manage-company', $value),\n"
"            ];\n"
"        }),\n"
"    ]);\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 362
#, no-wrap
msgid "<a name=\"laravel-breeze-api\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/master/releases.md, line: 362
#, no-wrap
msgid "Laravel Breeze API & Next.js"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 365
msgid "_The Laravel Breeze API scaffolding and Next.js starter kit was contributed by [Taylor Otwell](https://github.com/taylorotwell) and [Miguel Piedrafita](https://twitter.com/m1guelpf)_."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 367
msgid "The [Laravel Breeze](/docs/{{version}}/starter-kits#breeze-and-next) starter kit has received an \"API\" scaffolding mode and complimentary [Next.js](https://nextjs.org) [frontend implementation](https://github.com/laravel/breeze-next). This starter kit scaffolding may be used to jump start your Laravel applications that are serving as a backend, Laravel Sanctum authenticated API for a JavaScript frontend."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 369
#, no-wrap
msgid "<a name=\"exception-page\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/master/releases.md, line: 369
#, no-wrap
msgid "Improved Ignition Exception Page"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 372
msgid "_Ignition is developed by [Spatie](https://spatie.be/)._"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 374
msgid "Ignition, the open source exception debug page created by Spatie, has been redesigned from the ground up. The new, improved Ignition ships with Laravel 9.x and includes light / dark themes, customizable \"open in editor\" functionality, and more."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 378
#, no-wrap
msgid ""
"<p align=\"center\">\n"
"<img width=\"100%\" src=\"https://user-images.githubusercontent.com/483853/149235404-f7caba56-ebdf-499e-9883-cac5d5610369.png\"/>\n"
"</p>\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 380
#, no-wrap
msgid "<a name=\"improved-route-list\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/master/releases.md, line: 380
#, no-wrap
msgid "Improved `route:list` CLI Output"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 383
msgid "_Improved `route:list` CLI output was contributed by [Nuno Maduro](https://github.com/nunomaduro)_."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 385
msgid "The `route:list` CLI output has been significantly improved for the Laravel 9.x release, offering a beautiful new experience when exploring your route definitions."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 389
#, no-wrap
msgid ""
"<p align=\"center\">\n"
"<img src=\"https://user-images.githubusercontent.com/5457236/148321982-38c8b869-f188-4f42-a3cc-a03451d5216c.png\"/>\n"
"</p>\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 391
#, no-wrap
msgid "<a name=\"test-coverage-support-on-artisan-test-Command\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/master/releases.md, line: 391
#, no-wrap
msgid "Test Coverage Using Artisan `test` Command"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 394
msgid "_Test coverage when using the Artisan `test` command was contributed by [Nuno Maduro](https://github.com/nunomaduro)_."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 396
msgid "The Artisan `test` command has received a new `--coverage` option that you may use to explore the amount of code coverage your tests are providing to your application:"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 398
#, no-wrap
msgid "    php artisan test --coverage\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 400
msgid "The test coverage results will be displayed directly within the CLI output."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 404
#, no-wrap
msgid ""
"<p align=\"center\">\n"
"<img width=\"100%\" src=\"https://user-images.githubusercontent.com/5457236/150133237-440290c2-3538-4d8e-8eac-4fdd5ec7bd9e.png\"/>\n"
"</p>\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 406
msgid "In addition, if you would like to specify a minimum threshold that your test coverage percentage must meet, you may use the `--min` option. The test suite will fail if the given minimum threshold is not met:"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 408
#, no-wrap
msgid "    php artisan test --coverage --min=80.3\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 412
#, no-wrap
msgid ""
"<p align=\"center\">\n"
"<img width=\"100%\" src=\"https://user-images.githubusercontent.com/5457236/149989853-a29a7629-2bfa-4bf3-bbf7-cdba339ec157.png\"/>\n"
"</p>\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 414
#, no-wrap
msgid "<a name=\"soketi-echo-server\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/master/releases.md, line: 414
#, no-wrap
msgid "Soketi Echo Server"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 417
msgid "_The Soketi Echo server was developed by [Alex Renoki](https://github.com/rennokki)_."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 419
msgid "Although not exclusive to Laravel 9.x, Laravel has recently assisted with the documentation of Soketi, a [Laravel Echo](/docs/{{version}}/broadcasting) compatible Web Socket server written for Node.js. Soketi provides a great, open source alternative to Pusher and Ably for those applications that prefer to manage their own Web Socket server."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 421
msgid "For more information on using Soketi, please consult the [broadcasting documentation](/docs/{{version}}/broadcasting) and [Soketi documentation](https://docs.soketi.app/)."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 423
#, no-wrap
msgid "<a name=\"improved-collections-ide-support\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/master/releases.md, line: 423
#, no-wrap
msgid "Improved Collections IDE Support"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 426
msgid "_Improved collections IDE support was contributed by [Nuno Maduro](https://github.com/nunomaduro)_."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 428
msgid "Laravel 9.x adds improved, \"generic\" style type definitions to the collections component, improving IDE and static analysis support. IDEs such as [PHPStorm](https://blog.jetbrains.com/phpstorm/2021/12/phpstorm-2021-3-release/#support_for_future_laravel_collections) or static analysis tools such as [PHPStan](https://phpstan.org) will now better understand Laravel collections natively."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 432
#, no-wrap
msgid ""
"<p align=\"center\">\n"
"<img width=\"100%\" src=\"https://user-images.githubusercontent.com/5457236/151783350-ed301660-1e09-44c1-b549-85c6db3f078d.gif\"/>\n"
"</p>\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 434
#, no-wrap
msgid "<a name=\"new-helpers\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/master/releases.md, line: 434
#, no-wrap
msgid "New Helpers"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 437
msgid "Laravel 9.x introduces two new, convenient helper functions that you may use in your own application."
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 439
#, no-wrap
msgid "<a name=\"new-helpers-str\"></a>\n"
msgstr ""
#
#. type: Title ####
# File: docs/master/releases.md, line: 439
#, no-wrap
msgid "`str`"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 442
msgid "The `str` function returns a new `Illuminate\\Support\\Stringable` instance for the given string. This function is equivalent to the `Str::of` method:"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 444
#, no-wrap
msgid "    $string = str('Taylor')->append(' Otwell');\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 446
#, no-wrap
msgid "    // 'Taylor Otwell'\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 448
msgid "If no argument is provided to the `str` function, the function returns an instance of `Illuminate\\Support\\Str`:"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 450
#, no-wrap
msgid "    $snake = str()->snake('LaravelFramework');\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 452
#, no-wrap
msgid "    // 'laravel_framework'\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 454
#, no-wrap
msgid "<a name=\"new-helpers-to-route\"></a>\n"
msgstr ""
#
#. type: Title ####
# File: docs/master/releases.md, line: 454
#, no-wrap
msgid "`to_route`"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 457
msgid "The `to_route` function generates a redirect HTTP response for a given named route, providing an expressive way to redirect to named routes from your routes and controllers:"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 459
#, no-wrap
msgid "    return to_route('users.show', ['user' => 1]);\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 461
msgid "If necessary, you may pass the HTTP status code that should be assigned to the redirect and any additional response headers as the third and fourth arguments to the to_route method:"
msgstr ""
#
#. type: Plain text
# File: docs/master/releases.md, line: 462
#, no-wrap
msgid "    return to_route('users.show', ['user' => 1], 302, ['X-Framework' => 'Laravel']);\n"
msgstr ""
