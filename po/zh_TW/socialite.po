msgid ""
msgstr ""
"Content-Type: text/plain; charset=UTF-8\n"
"Language: zh_TW\n"
"Language-Team: Chinese Traditional\n"
"PO-Revision-Date: 2024-06-30 08:27\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Project-Id-Version: laravel-docs\n"
"X-Crowdin-File: /main/templates/socialite.pot\n"
"X-Crowdin-File-ID: 155\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"

#: ./docs/8.x/socialite.md:1
#: ./docs/9.x/socialite.md:1
#: ./docs/10.x/socialite.md:1
#: ./docs/11.x/socialite.md:1
#: ./docs/master/socialite.md:1
msgctxt "H1"
msgid "Laravel Socialite"
msgstr "Laravel Socialite"

#: ./docs/8.x/socialite.md:3
#: ./docs/9.x/socialite.md:3
#: ./docs/10.x/socialite.md:3
#: ./docs/11.x/socialite.md:3
#: ./docs/master/socialite.md:3
msgctxt "P"
msgid "[Introduction](#introduction)"
msgstr "[簡介](#introduction)"

#: ./docs/8.x/socialite.md:4
#: ./docs/9.x/socialite.md:4
#: ./docs/10.x/socialite.md:4
#: ./docs/11.x/socialite.md:4
#: ./docs/master/socialite.md:4
msgctxt "P"
msgid "[Installation](#installation)"
msgstr "[安裝](#installation)"

#: ./docs/8.x/socialite.md:5
#: ./docs/9.x/socialite.md:5
#: ./docs/10.x/socialite.md:5
#: ./docs/11.x/socialite.md:5
#: ./docs/master/socialite.md:5
msgctxt "P"
msgid "[Upgrading Socialite](#upgrading-socialite)"
msgstr "[更新 Socialite](#upgrading-socialite)"

#: ./docs/8.x/socialite.md:6
#: ./docs/9.x/socialite.md:6
#: ./docs/10.x/socialite.md:6
#: ./docs/11.x/socialite.md:6
#: ./docs/master/socialite.md:6
msgctxt "P"
msgid "[Configuration](#configuration)"
msgstr "[設定](#configuration)"

#: ./docs/8.x/socialite.md:7
#: ./docs/9.x/socialite.md:7
#: ./docs/10.x/socialite.md:7
#: ./docs/11.x/socialite.md:7
#: ./docs/master/socialite.md:7
msgctxt "P"
msgid "[Authentication](#authentication)"
msgstr "[身份認證](#authentication)"

#: ./docs/8.x/socialite.md:8
#: ./docs/9.x/socialite.md:8
#: ./docs/10.x/socialite.md:8
#: ./docs/11.x/socialite.md:8
#: ./docs/master/socialite.md:8
msgctxt "P"
msgid "[Routing](#routing)"
msgstr "[Routing](#routing)"

#: ./docs/10.x/socialite.md:9
#: ./docs/11.x/socialite.md:9
#: ./docs/master/socialite.md:9
msgctxt "P"
msgid "[Authentication and Storage](#authentication-and-storage)"
msgstr ""

#: ./docs/8.x/socialite.md:9
#: ./docs/9.x/socialite.md:9
msgctxt "P"
msgid "[Authentication & Storage](#authentication-and-storage)"
msgstr "[身份認證與檔案儲存](#authentication-and-storage)"

#: ./docs/8.x/socialite.md:10
#: ./docs/9.x/socialite.md:10
#: ./docs/10.x/socialite.md:10
#: ./docs/11.x/socialite.md:10
#: ./docs/master/socialite.md:10
msgctxt "P"
msgid "[Access Scopes](#access-scopes)"
msgstr "[存取範圍 (Scope)](#access-scopes)"

#: ./docs/10.x/socialite.md:11
#: ./docs/11.x/socialite.md:11
#: ./docs/master/socialite.md:11
msgctxt "P"
msgid "[Slack Bot Scopes](#slack-bot-scopes)"
msgstr "[Slack Bot 的 Scope](#slack-bot-scopes)"

#: ./docs/8.x/socialite.md:11
#: ./docs/9.x/socialite.md:11
#: ./docs/10.x/socialite.md:12
#: ./docs/11.x/socialite.md:12
#: ./docs/master/socialite.md:12
msgctxt "P"
msgid "[Optional Parameters](#optional-parameters)"
msgstr "[可選參數](#optional-parameters)"

#: ./docs/8.x/socialite.md:12
#: ./docs/9.x/socialite.md:12
#: ./docs/10.x/socialite.md:13
#: ./docs/11.x/socialite.md:13
#: ./docs/master/socialite.md:13
msgctxt "P"
msgid "[Retrieving User Details](#retrieving-user-details)"
msgstr "[取得使用者的詳細資訊](#retrieving-user-details)"

#: ./docs/8.x/socialite.md:14
#: ./docs/9.x/socialite.md:14
#: ./docs/10.x/socialite.md:15
#: ./docs/11.x/socialite.md:15
#: ./docs/master/socialite.md:15
#~ msgctxt "P"
#~ msgid "<a name=\"introduction\"></a>"
#~ msgstr ""

#: ./docs/8.x/socialite.md:15
#: ./docs/9.x/socialite.md:15
#: ./docs/10.x/socialite.md:16
#: ./docs/11.x/socialite.md:16
#: ./docs/master/socialite.md:16
msgctxt "H2"
msgid "Introduction"
msgstr "簡介"

#: ./docs/8.x/socialite.md:17
msgctxt "P"
msgid "In addition to typical, form based authentication, Laravel also provides a simple, convenient way to authenticate with OAuth providers using [Laravel Socialite](https://github.com/laravel/socialite). Socialite currently supports authentication with Facebook, Twitter, LinkedIn, Google, GitHub, GitLab, and Bitbucket."
msgstr "除了一般基於表單的登入方式之外，在 Laravel 中，還可以通過 [Laravel Socialite](https://github.com/laravel/socialite) 來以簡單、方便的方式使用 OAuth Provider 登入。目前 Socialite 支援使用 Facebook、Twitter、LinkedIn、Google、GitHub、GitLab 和 Bitbucket 等服務來進行登入。"

#: ./docs/9.x/socialite.md:17
msgctxt "P"
msgid "In addition to typical, form based authentication, Laravel also provides a simple, convenient way to authenticate with OAuth providers using [Laravel Socialite](https://github.com/laravel/socialite). Socialite currently supports authentication via Facebook, Twitter, LinkedIn, Google, GitHub, GitLab, and Bitbucket."
msgstr "除了一般基於表單的登入方式之外，在 Laravel 中，還可以通過 [Laravel Socialite](https://github.com/laravel/socialite) 來以簡單、方便的方式使用 OAuth Provider 登入。目前 Socialite 支援使用 Facebook、Twitter、LinkedIn、Google、GitHub、GitLab 和 Bitbucket 等服務來進行登入。"

#: ./docs/10.x/socialite.md:18
#: ./docs/master/socialite.md:18
msgctxt "P"
msgid "In addition to typical, form based authentication, Laravel also provides a simple, convenient way to authenticate with OAuth providers using [Laravel Socialite](https://github.com/laravel/socialite). Socialite currently supports authentication via Facebook, Twitter, LinkedIn, Google, GitHub, GitLab, Bitbucket, and Slack."
msgstr "除了一般基於表單的登入方式之外，在 Laravel 中，還可以通過 [Laravel Socialite](https://github.com/laravel/socialite) 來以簡單、方便的方式使用 OAuth Provider 登入。目前 Socialite 支援使用 Facebook、Twitter、LinkedIn、Google、GitHub、GitLab、Bitbucket，與 Slack 等服務來進行登入。"

#: ./docs/11.x/socialite.md:18
msgctxt "P"
msgid "In addition to typical, form based authentication, Laravel also provides a simple, convenient way to authenticate with OAuth providers using [Laravel Socialite](https://github.com/laravel/socialite). Socialite currently supports authentication via Facebook, X, LinkedIn, Google, GitHub, GitLab, Bitbucket, and Slack."
msgstr ""

#: ./docs/8.x/socialite.md:19
msgctxt "P"
msgid "Adapters for other platforms are listed at the community driven [Socialite Providers](https://socialiteproviders.com/) website."
msgstr ""

#: ./docs/9.x/socialite.md:20
#: ./docs/10.x/socialite.md:21
#: ./docs/11.x/socialite.md:21
#: ./docs/master/socialite.md:21
msgctxt "P"
msgid "Adapters for other platforms are available via the community driven [Socialite Providers](https://socialiteproviders.com/) website."
msgstr "[Socialite Providers](https://socialiteproviders.com/) 網站上還提供了由社群維護的其他平台的 Adapter。"

#: ./docs/8.x/socialite.md:21
#: ./docs/9.x/socialite.md:22
#: ./docs/10.x/socialite.md:23
#: ./docs/11.x/socialite.md:23
#: ./docs/master/socialite.md:23
#~ msgctxt "P"
#~ msgid "<a name=\"installation\"></a>"
#~ msgstr ""

#: ./docs/8.x/socialite.md:22
#: ./docs/9.x/socialite.md:23
#: ./docs/10.x/socialite.md:24
#: ./docs/11.x/socialite.md:24
#: ./docs/master/socialite.md:24
msgctxt "H2"
msgid "Installation"
msgstr "安裝"

#: ./docs/8.x/socialite.md:24
#: ./docs/9.x/socialite.md:25
#: ./docs/10.x/socialite.md:26
#: ./docs/11.x/socialite.md:26
#: ./docs/master/socialite.md:26
msgctxt "P"
msgid "To get started with Socialite, use the Composer package manager to add the package to your project's dependencies:"
msgstr "若要開始使用 Socialite，請使用 Composer 套件管理器將 Socialite 套件新增至專案的相依性套件中："

#: ./docs/8.x/socialite.md:26
#: ./docs/9.x/socialite.md:27
#: ./docs/10.x/socialite.md:28
#: ./docs/11.x/socialite.md:28
#: ./docs/master/socialite.md:28
msgctxt "CODE"
msgid "composer require laravel/socialite"
msgstr ""

#: ./docs/8.x/socialite.md:28
#: ./docs/9.x/socialite.md:31
#: ./docs/10.x/socialite.md:32
#: ./docs/11.x/socialite.md:32
#: ./docs/master/socialite.md:32
#~ msgctxt "P"
#~ msgid "<a name=\"upgrading-socialite\"></a>"
#~ msgstr ""

#: ./docs/8.x/socialite.md:29
#: ./docs/9.x/socialite.md:32
#: ./docs/10.x/socialite.md:33
#: ./docs/11.x/socialite.md:33
#: ./docs/master/socialite.md:33
msgctxt "H2"
msgid "Upgrading Socialite"
msgstr "更新 Socialite"

#: ./docs/8.x/socialite.md:31
#: ./docs/9.x/socialite.md:34
#: ./docs/10.x/socialite.md:35
#: ./docs/11.x/socialite.md:35
#: ./docs/master/socialite.md:35
msgctxt "P"
msgid "When upgrading to a new major version of Socialite, it's important that you carefully review [the upgrade guide](https://github.com/laravel/socialite/blob/master/UPGRADE.md)."
msgstr "將 Telescope 升級到新的主要 (Major) 版本時，請務必仔細閱讀[升級指南](https://github.com/laravel/socialite/blob/master/UPGRADE.md)。"

#: ./docs/8.x/socialite.md:33
#: ./docs/9.x/socialite.md:36
#: ./docs/10.x/socialite.md:37
#: ./docs/11.x/socialite.md:37
#: ./docs/master/socialite.md:37
#~ msgctxt "P"
#~ msgid "<a name=\"configuration\"></a>"
#~ msgstr ""

#: ./docs/8.x/socialite.md:34
#: ./docs/9.x/socialite.md:37
#: ./docs/10.x/socialite.md:38
#: ./docs/11.x/socialite.md:38
#: ./docs/master/socialite.md:38
msgctxt "H2"
msgid "Configuration"
msgstr "設定"

#: ./docs/8.x/socialite.md:36
msgctxt "P"
msgid "Before using Socialite, you will need to add credentials for the OAuth providers your application utilizes. These credentials should be placed in your application's `config/services.php` configuration file, and should use the key `facebook`, `twitter`, `linkedin`, `google`, `github`, `gitlab`, or `bitbucket`, depending on the providers your application requires:"
msgstr "在使用 Socialite 之前，我們需要先為網站所要用的 OAuth Provider 設定憑證 (Credential)。請將這些憑證放在專案的 `config/services.php` 設定檔中，並依照你的專案所要使用的 OAuth Provider，設定 `facebook`、`twitter` (OAuth )、`twitter-oauth-` (OAuth )、`linkedin`、`google`、`github`、`gitlab` 或 `bitbucket` 等相對應的 key："

#: ./docs/8.x/socialite.md:38
#: ./docs/9.x/socialite.md:43
#: ./docs/10.x/socialite.md:44
#: ./docs/11.x/socialite.md:44
#: ./docs/master/socialite.md:44
msgctxt "CODE"
msgid ""
"'github' => [\n"
"    'client_id' => env('GITHUB_CLIENT_ID'),\n"
"    'client_secret' => env('GITHUB_CLIENT_SECRET'),\n"
"    'redirect' => 'http://example.com/callback-url',\n"
"],"
msgstr ""

#: ./docs/9.x/socialite.md:39
#: ./docs/10.x/socialite.md:40
#: ./docs/11.x/socialite.md:40
#: ./docs/master/socialite.md:40
msgctxt "P"
msgid "Before using Socialite, you will need to add credentials for the OAuth providers your application utilizes. Typically, these credentials may be retrieved by creating a \"developer application\" within the dashboard of the service you will be authenticating with."
msgstr "在使用 Socialite 之前，需要新增你的網站要使用的 OAuth Provider 憑證 (Credential)。一般來說，可以在要用來登入的服務的儀表板中建立「開發者應用程式」來取得這些憑證。"

#: ./docs/9.x/socialite.md:41
msgctxt "P"
msgid "These credentials should be placed in your application's `config/services.php` configuration file, and should use the key `facebook`, `twitter` (OAuth 1.0), `twitter-oauth-2` (OAuth 2.0), `linkedin`, `google`, `github`, `gitlab`, or `bitbucket`, depending on the providers your application requires:"
msgstr "請將這些憑證放在專案的 `config/services.php` 設定檔中，並依照你的專案所要使用的 OAuth Provider，設定 `facebook`、`twitter` (OAuth 1.0)、`twitter-oauth-2` (OAuth 2.0)、`linkedin`、`google`、`github`、`gitlab` 或 `bitbucket` 等相對應的 key："

#: ./docs/10.x/socialite.md:42
#: ./docs/master/socialite.md:42
msgctxt "P"
msgid "These credentials should be placed in your application's `config/services.php` configuration file, and should use the key `facebook`, `twitter` (OAuth 1.0), `twitter-oauth-2` (OAuth 2.0), `linkedin-openid`, `google`, `github`, `gitlab`, `bitbucket`, or `slack`, depending on the providers your application requires:"
msgstr "請將這些憑證放在專案的 `config/services.php` 設定檔中，並依照你的專案所要使用的 OAuth Provider，設定 `facebook`、`twitter` (OAuth 1.0)、`twitter-oauth-2` (OAuth 2.0)、`linkedin-openid`、`google`、`github`、`gitlab`、`bitbucket` 或 `slack` 等相對應的 key："

#: ./docs/11.x/socialite.md:42
msgctxt "P"
msgid "These credentials should be placed in your application's `config/services.php` configuration file, and should use the key `facebook`, `x`, `linkedin-openid`, `google`, `github`, `gitlab`, `bitbucket`, `slack`, or `slack-openid`, depending on the providers your application requires:"
msgstr ""

#: ./docs/8.x/socialite.md:44
#: ./docs/9.x/socialite.md:50
#: ./docs/10.x/socialite.md:51
#: ./docs/11.x/socialite.md:51
#: ./docs/master/socialite.md:51
msgctxt "P"
msgid "If the `redirect` option contains a relative path, it will automatically be resolved to a fully qualified URL."
msgstr "如果 `redirect` 選項包含相對路徑，則會為自動解析成完整的 URL。"

#: ./docs/8.x/socialite.md:46
#: ./docs/9.x/socialite.md:52
#: ./docs/10.x/socialite.md:53
#: ./docs/11.x/socialite.md:53
#: ./docs/master/socialite.md:53
#~ msgctxt "P"
#~ msgid "<a name=\"authentication\"></a>"
#~ msgstr ""

#: ./docs/8.x/socialite.md:47
#: ./docs/9.x/socialite.md:53
#: ./docs/10.x/socialite.md:54
#: ./docs/11.x/socialite.md:54
#: ./docs/master/socialite.md:54
msgctxt "H2"
msgid "Authentication"
msgstr "登入"

#: ./docs/8.x/socialite.md:49
#: ./docs/9.x/socialite.md:55
#: ./docs/10.x/socialite.md:56
#: ./docs/11.x/socialite.md:56
#: ./docs/master/socialite.md:56
#~ msgctxt "P"
#~ msgid "<a name=\"routing\"></a>"
#~ msgstr ""

#: ./docs/8.x/socialite.md:50
#: ./docs/9.x/socialite.md:56
#: ./docs/10.x/socialite.md:57
#: ./docs/11.x/socialite.md:57
#: ./docs/master/socialite.md:57
msgctxt "H3"
msgid "Routing"
msgstr "Routing"

#: ./docs/8.x/socialite.md:52
msgctxt "P"
msgid "To authenticate users using an OAuth provider, you will need two routes: one for redirecting the user to the OAuth provider, and another for receiving the callback from the provider after authentication. The example controller below demonstrates the implementation of both routes:"
msgstr "要使用 OAuth Provider 來登入使用者，需要兩個 Route：一個用來將使用者重新導向到 OAuth Provider，另一個用來接收登入後 Provider 傳回來的回呼。下面的範例 Controller 將說明如何實作這兩個 Route："

#: ./docs/8.x/socialite.md:54
#: ./docs/9.x/socialite.md:60
#: ./docs/10.x/socialite.md:61
#: ./docs/11.x/socialite.md:61
#: ./docs/master/socialite.md:61
msgctxt "CODE"
msgid ""
"use Laravel\\Socialite\\Facades\\Socialite;\n"
"\n"
"Route::get('/auth/redirect', function () {\n"
"    return Socialite::driver('github')->redirect();\n"
"});\n"
"\n"
"Route::get('/auth/callback', function () {\n"
"    $user = Socialite::driver('github')->user();\n"
"\n"
"    // $user->token\n"
"});"
msgstr ""

#: ./docs/9.x/socialite.md:58
#: ./docs/10.x/socialite.md:59
#: ./docs/11.x/socialite.md:59
#: ./docs/master/socialite.md:59
msgctxt "P"
msgid "To authenticate users using an OAuth provider, you will need two routes: one for redirecting the user to the OAuth provider, and another for receiving the callback from the provider after authentication. The example routes below demonstrate the implementation of both routes:"
msgstr "要使用 OAuth Provider 來登入使用者，需要兩個 Route：一個用來將使用者重新導向到 OAuth Provider，另一個用來接收登入後 Provider 傳回來的回呼。下面的範例說明如何實作這兩個 Route："

#: ./docs/8.x/socialite.md:66
msgctxt "P"
msgid "The `redirect` method provided by the `Socialite` facade takes care of redirecting the user to the OAuth provider, while the `user` method will read the incoming request and retrieve the user's information from the provider after they are authenticated."
msgstr "`Socialite` Facade 上的 `redirect` 方法負責將使用者重新導向到 OAuth Provider。當使用者登入後，`user` 方法會讀取傳入的 Request，並向 OAuth Provider 取得使用者的資訊。"

#: ./docs/8.x/socialite.md:68
#: ./docs/9.x/socialite.md:74
#: ./docs/10.x/socialite.md:75
#: ./docs/11.x/socialite.md:75
#: ./docs/master/socialite.md:75
#~ msgctxt "P"
#~ msgid "<a name=\"authentication-and-storage\"></a>"
#~ msgstr ""

#: ./docs/8.x/socialite.md:69
#: ./docs/9.x/socialite.md:75
msgctxt "H3"
msgid "Authentication & Storage"
msgstr "登入與檔案儲存"

#: ./docs/8.x/socialite.md:71
#: ./docs/9.x/socialite.md:77
#: ./docs/10.x/socialite.md:78
#: ./docs/11.x/socialite.md:78
#: ./docs/master/socialite.md:78
msgctxt "P"
msgid "Once the user has been retrieved from the OAuth provider, you may determine if the user exists in your application's database and [authenticate the user](/docs/{{version}}/authentication#authenticate-a-user-instance). If the user does not exist in your application's database, you will typically create a new record in your database to represent the user:"
msgstr "從 OAuth Provider 取得使用者後，就可以判斷該使用者是否存在我們的網站中，並[登入該使用者](/docs/{{version}}/authentication#authenticate-a-user-instance)。如果使用者不存在網站資料庫中，可以在資料庫中建立："

#: ./docs/9.x/socialite.md:72
#: ./docs/10.x/socialite.md:73
#: ./docs/11.x/socialite.md:73
#: ./docs/master/socialite.md:73
msgctxt "P"
msgid "The `redirect` method provided by the `Socialite` facade takes care of redirecting the user to the OAuth provider, while the `user` method will examine the incoming request and retrieve the user's information from the provider after they have approved the authentication request."
msgstr "`Socialite` Facade 上的 `redirect` 方法負責將使用者重新導向到 OAuth Provider。當使用者同意登入要求後，`user` 方法會檢查傳入的 Request，並向 OAuth Provider 取得使用者的資訊。"

#: ./docs/8.x/socialite.md:73
msgctxt "CODE"
msgid ""
"use App\\Models\\User;\n"
"use Illuminate\\Support\\Facades\\Auth;\n"
"use Laravel\\Socialite\\Facades\\Socialite;\n"
"\n"
"Route::get('/auth/callback', function () {\n"
"    $githubUser = Socialite::driver('github')->user();\n"
"\n"
"    $user = User::where('github_id', $githubUser->id)->first();\n"
"\n"
"    if ($user) {\n"
"        $user->update([\n"
"            'github_token' => $githubUser->token,\n"
"            'github_refresh_token' => $githubUser->refreshToken,\n"
"        ]);\n"
"    } else {\n"
"        $user = User::create([\n"
"            'name' => $githubUser->name,\n"
"            'email' => $githubUser->email,\n"
"            'github_id' => $githubUser->id,\n"
"            'github_token' => $githubUser->token,\n"
"            'github_refresh_token' => $githubUser->refreshToken,\n"
"        ]);\n"
"    }\n"
"\n"
"    Auth::login($user);\n"
"\n"
"    return redirect('/dashboard');\n"
"});"
msgstr ""

#: ./docs/10.x/socialite.md:76
#: ./docs/11.x/socialite.md:76
#: ./docs/master/socialite.md:76
msgctxt "H3"
msgid "Authentication and Storage"
msgstr ""

#: ./docs/9.x/socialite.md:79
#: ./docs/10.x/socialite.md:80
#: ./docs/11.x/socialite.md:80
#: ./docs/master/socialite.md:80
msgctxt "CODE"
msgid ""
"use App\\Models\\User;\n"
"use Illuminate\\Support\\Facades\\Auth;\n"
"use Laravel\\Socialite\\Facades\\Socialite;\n"
"\n"
"Route::get('/auth/callback', function () {\n"
"    $githubUser = Socialite::driver('github')->user();\n"
"\n"
"    $user = User::updateOrCreate([\n"
"        'github_id' => $githubUser->id,\n"
"    ], [\n"
"        'name' => $githubUser->name,\n"
"        'email' => $githubUser->email,\n"
"        'github_token' => $githubUser->token,\n"
"        'github_refresh_token' => $githubUser->refreshToken,\n"
"    ]);\n"
"\n"
"    Auth::login($user);\n"
"\n"
"    return redirect('/dashboard');\n"
"});"
msgstr ""

#: ./docs/8.x/socialite.md:102
#: ./docs/9.x/socialite.md:101
#: ./docs/10.x/socialite.md:102
#: ./docs/11.x/socialite.md:102
#: ./docs/master/socialite.md:102
msgctxt "P"
msgid "For more information regarding what user information is available from specific OAuth providers, please consult the documentation on [retrieving user details](#retrieving-user-details)."
msgstr "有關各個 OAuth Provider 所提供的使用者資訊，請參考說明文件中有關[取得使用者詳細資料](#retrieving-user-details)的部分。"

#: ./docs/8.x/socialite.md:104
#: ./docs/9.x/socialite.md:103
#: ./docs/10.x/socialite.md:104
#: ./docs/11.x/socialite.md:104
#: ./docs/master/socialite.md:104
#~ msgctxt "P"
#~ msgid "<a name=\"access-scopes\"></a>"
#~ msgstr ""

#: ./docs/8.x/socialite.md:105
#: ./docs/9.x/socialite.md:104
#: ./docs/10.x/socialite.md:105
#: ./docs/11.x/socialite.md:105
#: ./docs/master/socialite.md:105
msgctxt "H3"
msgid "Access Scopes"
msgstr "Access Scope (存取範圍)"

#: ./docs/9.x/socialite.md:106
#: ./docs/10.x/socialite.md:107
#: ./docs/11.x/socialite.md:107
#: ./docs/master/socialite.md:107
msgctxt "P"
msgid "Before redirecting the user, you may use the `scopes` method to specify the \"scopes\" that should be included in the authentication request. This method will merge all previously specified scopes with the scopes that you specify:"
msgstr "在為使用者重新導向前，我們可以使用 `scopes` 方法來指定這個登入驗證 Request 中要包含的「Scope (範圍)」。此方法會將所指定的 Scopes 與先前指定的所有 Scopes 合併起來："

#: ./docs/8.x/socialite.md:107
msgctxt "P"
msgid "Before redirecting the user, you may also add additional \"scopes\" to the authentication request using the `scopes` method. This method will merge all existing scopes with the scopes that you supply:"
msgstr "在重新導向使用者前，我們還可以使用 `scopes` 方法來在登入驗證 Request 中加上額外的「Scopes (範圍)」。此方法會將所提供的 Scopes 與其他現有的 Scopes 合併："

#: ./docs/8.x/socialite.md:109
#: ./docs/9.x/socialite.md:108
#: ./docs/10.x/socialite.md:109
#: ./docs/11.x/socialite.md:109
#: ./docs/master/socialite.md:109
msgctxt "CODE"
msgid ""
"use Laravel\\Socialite\\Facades\\Socialite;\n"
"\n"
"return Socialite::driver('github')\n"
"    ->scopes(['read:user', 'public_repo'])\n"
"    ->redirect();"
msgstr ""

#: ./docs/8.x/socialite.md:115
#: ./docs/9.x/socialite.md:114
#: ./docs/10.x/socialite.md:115
#: ./docs/11.x/socialite.md:115
#: ./docs/master/socialite.md:115
msgctxt "P"
msgid "You can overwrite all existing scopes on the authentication request using the `setScopes` method:"
msgstr "可以使用 `setScopes` 方法來複寫登入驗證 Request 上的所有已存在的 Scopes："

#: ./docs/8.x/socialite.md:117
#: ./docs/9.x/socialite.md:116
#: ./docs/10.x/socialite.md:117
#: ./docs/11.x/socialite.md:117
#: ./docs/master/socialite.md:117
msgctxt "CODE"
msgid ""
"return Socialite::driver('github')\n"
"    ->setScopes(['read:user', 'public_repo'])\n"
"    ->redirect();"
msgstr ""

#: ./docs/10.x/socialite.md:121
#: ./docs/11.x/socialite.md:121
#: ./docs/master/socialite.md:121
#~ msgctxt "P"
#~ msgid "<a name=\"slack-bot-scopes\"></a>"
#~ msgstr ""

#: ./docs/8.x/socialite.md:121
#: ./docs/9.x/socialite.md:120
#: ./docs/10.x/socialite.md:148
#: ./docs/11.x/socialite.md:148
#: ./docs/master/socialite.md:148
#~ msgctxt "P"
#~ msgid "<a name=\"optional-parameters\"></a>"
#~ msgstr ""

#: ./docs/10.x/socialite.md:122
#: ./docs/11.x/socialite.md:122
#: ./docs/master/socialite.md:122
msgctxt "H3"
msgid "Slack Bot Scopes"
msgstr "Slack Bot 的 Scope"

#: ./docs/8.x/socialite.md:122
#: ./docs/9.x/socialite.md:121
#: ./docs/10.x/socialite.md:149
#: ./docs/11.x/socialite.md:149
#: ./docs/master/socialite.md:149
msgctxt "H3"
msgid "Optional Parameters"
msgstr "可選的參數"

#: ./docs/9.x/socialite.md:123
#: ./docs/10.x/socialite.md:151
#: ./docs/11.x/socialite.md:151
#: ./docs/master/socialite.md:151
msgctxt "P"
msgid "A number of OAuth providers support other optional parameters on the redirect request. To include any optional parameters in the request, call the `with` method with an associative array:"
msgstr "有一些 OAuth Provider 還支援在重新導向 Request 上設定其他可選的參數。若要在 Request 中包含任何可選的參數，請呼叫 `with` 方法並提供一個關聯式陣列："

#: ./docs/10.x/socialite.md:124
#: ./docs/11.x/socialite.md:124
#: ./docs/master/socialite.md:124
msgctxt "P"
msgid "Slack's API provides [different types of access tokens](https://api.slack.com/authentication/token-types), each with their own set of [permission scopes](https://api.slack.com/scopes). Socialite is compatible with both of the following Slack access tokens types:"
msgstr ""

#: ./docs/8.x/socialite.md:124
msgctxt "P"
msgid "A number of OAuth providers support optional parameters in the redirect request. To include any optional parameters in the request, call the `with` method with an associative array:"
msgstr "有一些 OAuth Provider 還支援在重新導向 Request 上設定可選的參數。若要在 Request 中包含任何可選的參數，請呼叫 `with` 方法並提供一個關聯式陣列："

#: ./docs/8.x/socialite.md:126
#: ./docs/9.x/socialite.md:125
#: ./docs/10.x/socialite.md:153
#: ./docs/11.x/socialite.md:153
#: ./docs/master/socialite.md:153
msgctxt "CODE"
msgid ""
"use Laravel\\Socialite\\Facades\\Socialite;\n"
"\n"
"return Socialite::driver('google')\n"
"    ->with(['hd' => 'example.com'])\n"
"    ->redirect();"
msgstr ""

#: ./docs/10.x/socialite.md:128
#: ./docs/11.x/socialite.md:128
#: ./docs/master/socialite.md:128
msgctxt "P"
msgid "Bot (prefixed with `xoxb-`)"
msgstr ""

#: ./docs/10.x/socialite.md:129
#: ./docs/11.x/socialite.md:129
#: ./docs/master/socialite.md:129
msgctxt "P"
msgid "User (prefixed with `xoxp-`)"
msgstr ""

#: ./docs/8.x/socialite.md:132
#: ./docs/9.x/socialite.md:132
#: ./docs/10.x/socialite.md:160
#: ./docs/11.x/socialite.md:160
#: ./docs/master/socialite.md:160
msgctxt "P"
msgid "When using the `with` method, be careful not to pass any reserved keywords such as `state` or `response_type`."
msgstr "在使用 `with` 方法時，請小心不要傳入任何保留字 (Reserved Keywords)，如 `state` 或 `response_type` 等。"

#: ./docs/10.x/socialite.md:133
#: ./docs/11.x/socialite.md:133
#: ./docs/master/socialite.md:133
msgctxt "P"
msgid "By default, the `slack` driver will generate a `user` token and invoking the driver's `user` method will return the user's details."
msgstr ""

#: ./docs/8.x/socialite.md:134
#: ./docs/9.x/socialite.md:134
#: ./docs/10.x/socialite.md:162
#: ./docs/11.x/socialite.md:162
#: ./docs/master/socialite.md:162
#~ msgctxt "P"
#~ msgid "<a name=\"retrieving-user-details\"></a>"
#~ msgstr ""

#: ./docs/10.x/socialite.md:135
#: ./docs/11.x/socialite.md:135
#: ./docs/master/socialite.md:135
msgctxt "P"
msgid "Bot tokens are primarily useful if your application will be sending notifications to external Slack workspaces that are owned by your application's users. To generate a bot token, invoke the `asBotUser` method before redirecting the user to Slack for authentication:"
msgstr ""

#: ./docs/8.x/socialite.md:135
#: ./docs/9.x/socialite.md:135
#: ./docs/10.x/socialite.md:163
#: ./docs/11.x/socialite.md:163
#: ./docs/master/socialite.md:163
msgctxt "H2"
msgid "Retrieving User Details"
msgstr "取得使用者詳細資料"

#: ./docs/10.x/socialite.md:137
#: ./docs/11.x/socialite.md:137
#: ./docs/master/socialite.md:137
msgctxt "CODE"
msgid ""
"return Socialite::driver('slack')\n"
"    ->asBotUser()\n"
"    ->setScopes(['chat:write', 'chat:write.public', 'chat:write.customize'])\n"
"    ->redirect();"
msgstr ""

#: ./docs/8.x/socialite.md:137
msgctxt "P"
msgid "After the user is redirected back to your authentication callback route, you may retrieve the user's details using Socialite's `user` method. The user object returned by the `user` method provides a variety of properties and methods you may use to store information about the user in your own database. Different properties and methods may be available depending on whether the OAuth provider you are authenticating with supports OAuth 1.0 or OAuth 2.0:"
msgstr "使用者被重新導向到登入驗證 ^[Callback](回呼) Route 後，就可以使用 Socialite 的 `user` 方法來取得使用者的詳細資料。`user` 方法回傳的使用者物件提供了多種屬性與方法，我們可以將與該使用者有關的資訊存在資料庫中。根據所使用的 OAuth Provider 支援的是 OAuth 1.0 還是 OAuth 2.0，該物件上會有不同的屬性與方法："

#: ./docs/9.x/socialite.md:137
#: ./docs/10.x/socialite.md:165
#: ./docs/11.x/socialite.md:165
#: ./docs/master/socialite.md:165
msgctxt "P"
msgid "After the user is redirected back to your application's authentication callback route, you may retrieve the user's details using Socialite's `user` method. The user object returned by the `user` method provides a variety of properties and methods you may use to store information about the user in your own database."
msgstr "使用者被重新導向到我們網站上的登入驗證 ^[Callback](回呼) Route 後，就可以使用 Socialite 的 `user` 方法來取得使用者的詳細資料。`user` 方法回傳的使用者物件提供了多種屬性與方法，我們可以將與該使用者有關的資訊存在資料庫中。"

#: ./docs/8.x/socialite.md:139
#: ./docs/9.x/socialite.md:141
#: ./docs/10.x/socialite.md:169
#: ./docs/11.x/socialite.md:169
#: ./docs/master/socialite.md:169
msgctxt "CODE"
msgid ""
"use Laravel\\Socialite\\Facades\\Socialite;\n"
"\n"
"Route::get('/auth/callback', function () {\n"
"    $user = Socialite::driver('github')->user();\n"
"\n"
"    // OAuth 2.0 providers...\n"
"    $token = $user->token;\n"
"    $refreshToken = $user->refreshToken;\n"
"    $expiresIn = $user->expiresIn;\n"
"\n"
"    // OAuth 1.0 providers...\n"
"    $token = $user->token;\n"
"    $tokenSecret = $user->tokenSecret;\n"
"\n"
"    // All providers...\n"
"    $user->getId();\n"
"    $user->getNickname();\n"
"    $user->getName();\n"
"    $user->getEmail();\n"
"    $user->getAvatar();\n"
"});"
msgstr ""

#: ./docs/9.x/socialite.md:139
#: ./docs/10.x/socialite.md:167
#: ./docs/11.x/socialite.md:167
#: ./docs/master/socialite.md:167
msgctxt "P"
msgid "Differing properties and methods may be available on this object depending on whether the OAuth provider you are authenticating with supports OAuth 1.0 or OAuth 2.0:"
msgstr "根據所使用的 OAuth Provider 是支援 OAuth 1.0 還是 OAuth 2.0，該物件上所提供的屬性與方法可能會有所不同："

#: ./docs/10.x/socialite.md:142
#: ./docs/11.x/socialite.md:142
#: ./docs/master/socialite.md:142
msgctxt "P"
msgid "In addition, you must invoke the `asBotUser` method before invoking the `user` method after Slack redirects the user back to your application after authentication:"
msgstr ""

#: ./docs/10.x/socialite.md:144
#: ./docs/11.x/socialite.md:144
#: ./docs/master/socialite.md:144
msgctxt "CODE"
msgid "$user = Socialite::driver('slack')->asBotUser()->user();"
msgstr ""

#: ./docs/10.x/socialite.md:146
#: ./docs/11.x/socialite.md:146
#: ./docs/master/socialite.md:146
msgctxt "P"
msgid "When generating a bot token, the `user` method will still return a `Laravel\\Socialite\\Two\\User` instance; however, only the `token` property will be hydrated. This token may be stored in order to [send notifications to the authenticated user's Slack workspaces](/docs/{{version}}/notifications#notifying-external-slack-workspaces)."
msgstr ""

#: ./docs/8.x/socialite.md:161
#: ./docs/9.x/socialite.md:163
#: ./docs/10.x/socialite.md:191
#: ./docs/11.x/socialite.md:191
#: ./docs/master/socialite.md:191
#~ msgctxt "P"
#~ msgid "<a name=\"retrieving-user-details-from-a-token-oauth2\"></a>"
#~ msgstr ""

#: ./docs/8.x/socialite.md:162
#: ./docs/9.x/socialite.md:164
msgctxt "H4"
msgid "Retrieving User Details From A Token (OAuth2)"
msgstr "以 ^[Token](權杖) 來取得使用者詳細資料 (OAuth2)"

#: ./docs/8.x/socialite.md:164
msgctxt "P"
msgid "If you already have a valid access token for a user, you can retrieve their details using Socialite's `userFromToken` method:"
msgstr "若你已經擁有使用者的有效 ^[Access Token](存取權杖)，就可使用 Socialite 的 `userFromToken` 方法來取得該使用者的詳細資料："

#: ./docs/8.x/socialite.md:166
#: ./docs/9.x/socialite.md:168
#: ./docs/10.x/socialite.md:196
#: ./docs/11.x/socialite.md:196
#: ./docs/master/socialite.md:196
msgctxt "CODE"
msgid ""
"use Laravel\\Socialite\\Facades\\Socialite;\n"
"\n"
"$user = Socialite::driver('github')->userFromToken($token);"
msgstr ""

#: ./docs/9.x/socialite.md:166
#: ./docs/10.x/socialite.md:194
#: ./docs/11.x/socialite.md:194
#: ./docs/master/socialite.md:194
msgctxt "P"
msgid "If you already have a valid access token for a user, you can retrieve their user details using Socialite's `userFromToken` method:"
msgstr "若你已經擁有使用者的有效 ^[Access Token](存取權杖)，就可使用 Socialite 的 `userFromToken` 方法來取得該使用者的詳細資料："

#: ./docs/8.x/socialite.md:170
#: ./docs/9.x/socialite.md:172
#: ./docs/10.x/socialite.md:200
#: ./docs/master/socialite.md:200
#~ msgctxt "P"
#~ msgid "<a name=\"retrieving-user-details-from-a-token-and-secret-oauth1\"></a>"
#~ msgstr ""

#: ./docs/8.x/socialite.md:171
#: ./docs/9.x/socialite.md:173
msgctxt "H4"
msgid "Retrieving User Details From A Token And Secret (OAuth1)"
msgstr "以 ^[Token](權杖) 與 ^[Secret](密鑰) 來取得使用者詳細資料 (OAuth1)"

#: ./docs/8.x/socialite.md:173
msgctxt "P"
msgid "If you already have a valid token and secret for a user, you can retrieve their details using Socialite's `userFromTokenAndSecret` method:"
msgstr "若你已經擁有使用者的有效 ^[Token](權杖) 與 ^[Secret](密鑰)，就可使用 Socialite 的 `userFromTokenAndSecret` 方法來取得該使用者的詳細資料："

#: ./docs/8.x/socialite.md:175
#: ./docs/9.x/socialite.md:177
#: ./docs/10.x/socialite.md:205
#: ./docs/master/socialite.md:205
msgctxt "CODE"
msgid ""
"use Laravel\\Socialite\\Facades\\Socialite;\n"
"\n"
"$user = Socialite::driver('twitter')->userFromTokenAndSecret($token, $secret);"
msgstr ""

#: ./docs/9.x/socialite.md:175
#: ./docs/10.x/socialite.md:203
#: ./docs/master/socialite.md:203
msgctxt "P"
msgid "If you already have a valid token and secret for a user, you can retrieve their user details using Socialite's `userFromTokenAndSecret` method:"
msgstr "若你已經擁有使用者的有效 ^[Token](權杖) 與 ^[Secret](密鑰)，就可使用 Socialite 的 `userFromTokenAndSecret` 方法來取得該使用者的詳細資料："

#: ./docs/8.x/socialite.md:179
#: ./docs/9.x/socialite.md:181
#: ./docs/10.x/socialite.md:209
#: ./docs/11.x/socialite.md:202
#: ./docs/master/socialite.md:209
#~ msgctxt "P"
#~ msgid "<a name=\"stateless-authentication\"></a>"
#~ msgstr ""

#: ./docs/8.x/socialite.md:180
#: ./docs/9.x/socialite.md:182
#: ./docs/10.x/socialite.md:210
#: ./docs/11.x/socialite.md:203
#: ./docs/master/socialite.md:210
msgctxt "H4"
msgid "Stateless Authentication"
msgstr "^[Stateless](無周邊) 的登入驗證"

#: ./docs/8.x/socialite.md:182
msgctxt "P"
msgid "The `stateless` method may be used to disable session state verification. This is useful when adding social authentication to an API:"
msgstr "使用 `stateless` 方法可關閉 Session 狀態驗證。此方法適合用在 API 中加入社群網站登入："

#: ./docs/8.x/socialite.md:184
#: ./docs/9.x/socialite.md:186
#: ./docs/10.x/socialite.md:214
#: ./docs/11.x/socialite.md:207
#: ./docs/master/socialite.md:214
msgctxt "CODE"
msgid ""
"use Laravel\\Socialite\\Facades\\Socialite;\n"
"\n"
"return Socialite::driver('google')->stateless()->user();"
msgstr ""

#: ./docs/9.x/socialite.md:184
#: ./docs/10.x/socialite.md:212
#: ./docs/11.x/socialite.md:205
#: ./docs/master/socialite.md:212
msgctxt "P"
msgid "The `stateless` method may be used to disable session state verification. This is useful when adding social authentication to a stateless API that does not utilize cookie based sessions:"
msgstr "使用 `stateless` 方法可關閉 Session 狀態驗證。此方法適合用於在不使用 Cookie 的 Stateless API 工作階段中加入社群網站登入。"

#: ./docs/8.x/socialite.md:188
msgctxt "P"
msgid "Stateless authentication is not available for the Twitter driver, which uses OAuth 1.0 for authentication."
msgstr ""

#: ./docs/9.x/socialite.md:191
#: ./docs/10.x/socialite.md:219
#: ./docs/master/socialite.md:219
msgctxt "P"
msgid "Stateless authentication is not available for the Twitter OAuth 1.0 driver."
msgstr "Twitter OAuth 1.0 Driver 不支援 Stateless 的登入驗證。"

#: ./docs/10.x/socialite.md:192
#: ./docs/master/socialite.md:192
msgctxt "H4"
msgid "Retrieving User Details From a Token (OAuth2)"
msgstr ""

#: ./docs/11.x/socialite.md:192
msgctxt "H4"
msgid "Retrieving User Details From a Token"
msgstr ""

#: ./docs/11.x/socialite.md:200
msgctxt "P"
msgid "If you are using Facebook Limited Login via an iOS application, Facebook will return an OIDC token instead of an access token. Like an access token, the OIDC token can be provided to the `userFromToken` method in order to retrieve user details."
msgstr ""

#: ./docs/10.x/socialite.md:201
#: ./docs/master/socialite.md:201
msgctxt "H4"
msgid "Retrieving User Details From a Token and Secret (OAuth1)"
msgstr ""
