msgid ""
msgstr ""
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/templates/logging.pot\n"
"X-Crowdin-File-ID: 97\n"
"Project-Id-Version: laravel-docs\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"PO-Revision-Date: 2024-11-30 06:48\n"

#: ./docs/11.x/logging.md
msgctxt "TD"
msgid "A driver that calls a specified factory to create a channel."
msgstr ""

#: ./docs/11.x/logging.md
msgctxt "TD"
msgid "A `RotatingFileHandler` based Monolog driver which rotates daily."
msgstr ""

#: ./docs/11.x/logging.md
msgctxt "TD"
msgid "An `ErrorLogHandler` based Monolog driver."
msgstr ""

#: ./docs/11.x/logging.md
msgctxt "TD"
msgid "A Monolog factory driver that may use any supported Monolog handler."
msgstr ""

#: ./docs/11.x/logging.md
msgctxt "TD"
msgid "A `SyslogUdpHandler` based Monolog driver."
msgstr ""

#: ./docs/11.x/logging.md
msgctxt "TD"
msgid "A single file or path based logger channel (`StreamHandler`)."
msgstr ""

#: ./docs/11.x/logging.md
msgctxt "TD"
msgid "A `SlackWebhookHandler` based Monolog driver."
msgstr ""

#: ./docs/11.x/logging.md
msgctxt "TD"
msgid "A wrapper to facilitate creating \"multi-channel\" channels."
msgstr ""

#: ./docs/11.x/logging.md
msgctxt "TD"
msgid "A `SyslogHandler` based Monolog driver."
msgstr ""

#: ./docs/11.x/logging.md
msgctxt "TD"
msgid "Indicates if messages should bubble up to other channels after being handled."
msgstr ""

#: ./docs/11.x/logging.md
msgctxt "TD"
msgid "Attempt to lock the log file before writing to it."
msgstr ""

#: ./docs/11.x/logging.md
msgctxt "TD"
msgid "The log file's permissions."
msgstr ""

#: ./docs/11.x/logging.md
msgctxt "TD"
msgid "The number of days that daily log files should be retained."
msgstr ""

#: ./docs/11.x/logging.md
msgctxt "TD"
msgid "`14`"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/11.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "Name"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/11.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "Description"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/11.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "`custom`"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "A driver that calls a specified factory to create a channel"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/11.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "`daily`"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "A `RotatingFileHandler` based Monolog driver which rotates daily"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/11.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "`errorlog`"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "An `ErrorLogHandler` based Monolog driver"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/11.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "`monolog`"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "A Monolog factory driver that may use any supported Monolog handler"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
msgctxt "TD"
msgid "`null`"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
msgctxt "TD"
msgid "A driver that discards all log messages"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/11.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "`papertrail`"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "A `SyslogUdpHandler` based Monolog driver"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/11.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "`single`"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "A single file or path based logger channel (`StreamHandler`)"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/11.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "`slack`"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "A `SlackWebhookHandler` based Monolog driver"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/11.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "`stack`"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "A wrapper to facilitate creating \"multi-channel\" channels"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/11.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "`syslog`"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "A `SyslogHandler` based Monolog driver"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/11.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "Default"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/11.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "`bubble`"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "Indicates if messages should bubble up to other channels after being handled"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/11.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "`true`"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/11.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "`locking`"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "Attempt to lock the log file before writing to it"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/11.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "`false`"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/11.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "`permission`"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "The log file's permissions"
msgstr ""

#: ./docs/8.x/logging.md
#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/11.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "`0644`"
msgstr ""

#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/11.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "`days`"
msgstr ""

#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "The number of days that daily log files should be retained"
msgstr ""

#: ./docs/9.x/logging.md
#: ./docs/10.x/logging.md
#: ./docs/master/logging.md
msgctxt "TD"
msgid "`7`"
msgstr ""

#: ./docs/8.x/logging.md:1
#: ./docs/9.x/logging.md:1
#: ./docs/10.x/logging.md:1
#: ./docs/11.x/logging.md:1
#: ./docs/master/logging.md:1
msgctxt "H1"
msgid "Logging"
msgstr ""

#: ./docs/8.x/logging.md:3
#: ./docs/9.x/logging.md:3
#: ./docs/10.x/logging.md:3
#: ./docs/11.x/logging.md:3
#: ./docs/master/logging.md:3
msgctxt "P"
msgid "[Introduction](#introduction)"
msgstr ""

#: ./docs/8.x/logging.md:4
#: ./docs/9.x/logging.md:4
#: ./docs/10.x/logging.md:4
#: ./docs/11.x/logging.md:4
#: ./docs/master/logging.md:4
msgctxt "P"
msgid "[Configuration](#configuration)"
msgstr ""

#: ./docs/8.x/logging.md:5
#: ./docs/9.x/logging.md:5
#: ./docs/10.x/logging.md:5
#: ./docs/11.x/logging.md:5
#: ./docs/master/logging.md:5
msgctxt "P"
msgid "[Available Channel Drivers](#available-channel-drivers)"
msgstr ""

#: ./docs/8.x/logging.md:6
#: ./docs/9.x/logging.md:6
#: ./docs/10.x/logging.md:6
#: ./docs/11.x/logging.md:6
#: ./docs/master/logging.md:6
msgctxt "P"
msgid "[Channel Prerequisites](#channel-prerequisites)"
msgstr ""

#: ./docs/8.x/logging.md:7
#: ./docs/9.x/logging.md:7
#: ./docs/10.x/logging.md:7
#: ./docs/11.x/logging.md:7
#: ./docs/master/logging.md:7
msgctxt "P"
msgid "[Logging Deprecation Warnings](#logging-deprecation-warnings)"
msgstr ""

#: ./docs/8.x/logging.md:8
#: ./docs/9.x/logging.md:8
#: ./docs/10.x/logging.md:8
#: ./docs/11.x/logging.md:8
#: ./docs/master/logging.md:8
msgctxt "P"
msgid "[Building Log Stacks](#building-log-stacks)"
msgstr ""

#: ./docs/8.x/logging.md:9
#: ./docs/9.x/logging.md:9
#: ./docs/10.x/logging.md:9
#: ./docs/11.x/logging.md:9
#: ./docs/master/logging.md:9
msgctxt "P"
msgid "[Writing Log Messages](#writing-log-messages)"
msgstr ""

#: ./docs/8.x/logging.md:10
#: ./docs/9.x/logging.md:10
#: ./docs/10.x/logging.md:10
#: ./docs/11.x/logging.md:10
#: ./docs/master/logging.md:10
msgctxt "P"
msgid "[Contextual Information](#contextual-information)"
msgstr ""

#: ./docs/10.x/logging.md:11
#: ./docs/11.x/logging.md:11
#: ./docs/master/logging.md:11
msgctxt "P"
msgid "[Writing to Specific Channels](#writing-to-specific-channels)"
msgstr ""

#: ./docs/8.x/logging.md:11
#: ./docs/9.x/logging.md:11
msgctxt "P"
msgid "[Writing To Specific Channels](#writing-to-specific-channels)"
msgstr ""

#: ./docs/8.x/logging.md:12
#: ./docs/9.x/logging.md:12
#: ./docs/10.x/logging.md:12
#: ./docs/11.x/logging.md:12
#: ./docs/master/logging.md:12
msgctxt "P"
msgid "[Monolog Channel Customization](#monolog-channel-customization)"
msgstr ""

#: ./docs/10.x/logging.md:13
#: ./docs/11.x/logging.md:13
#: ./docs/master/logging.md:13
msgctxt "P"
msgid "[Customizing Monolog for Channels](#customizing-monolog-for-channels)"
msgstr ""

#: ./docs/8.x/logging.md:13
#: ./docs/9.x/logging.md:13
msgctxt "P"
msgid "[Customizing Monolog For Channels](#customizing-monolog-for-channels)"
msgstr ""

#: ./docs/8.x/logging.md:14
#: ./docs/9.x/logging.md:14
#: ./docs/10.x/logging.md:14
#: ./docs/11.x/logging.md:14
#: ./docs/master/logging.md:14
msgctxt "P"
msgid "[Creating Monolog Handler Channels](#creating-monolog-handler-channels)"
msgstr ""

#: ./docs/10.x/logging.md:15
#: ./docs/11.x/logging.md:15
#: ./docs/master/logging.md:15
msgctxt "P"
msgid "[Creating Custom Channels via Factories](#creating-custom-channels-via-factories)"
msgstr ""

#: ./docs/8.x/logging.md:15
#: ./docs/9.x/logging.md:15
msgctxt "P"
msgid "[Creating Custom Channels Via Factories](#creating-custom-channels-via-factories)"
msgstr ""

#: ./docs/10.x/logging.md:16
#: ./docs/11.x/logging.md:16
#: ./docs/master/logging.md:16
msgctxt "P"
msgid "[Tailing Log Messages Using Pail](#tailing-log-messages-using-pail)"
msgstr ""

#: ./docs/10.x/logging.md:17
#: ./docs/11.x/logging.md:17
#: ./docs/master/logging.md:17
msgctxt "P"
msgid "[Installation](#pail-installation)"
msgstr ""

#: ./docs/8.x/logging.md:17
#: ./docs/9.x/logging.md:17
#: ./docs/10.x/logging.md:21
#: ./docs/11.x/logging.md:21
#: ./docs/master/logging.md:21
#~ msgctxt "P"
#~ msgid "<a name=\"introduction\"></a>"
#~ msgstr ""

#: ./docs/10.x/logging.md:18
#: ./docs/11.x/logging.md:18
#: ./docs/master/logging.md:18
msgctxt "P"
msgid "[Usage](#pail-usage)"
msgstr ""

#: ./docs/8.x/logging.md:18
#: ./docs/9.x/logging.md:18
#: ./docs/10.x/logging.md:22
#: ./docs/11.x/logging.md:22
#: ./docs/master/logging.md:22
msgctxt "H2"
msgid "Introduction"
msgstr ""

#: ./docs/10.x/logging.md:19
#: ./docs/11.x/logging.md:19
#: ./docs/master/logging.md:19
msgctxt "P"
msgid "[Filtering Logs](#pail-filtering-logs)"
msgstr ""

#: ./docs/8.x/logging.md:20
#: ./docs/9.x/logging.md:20
#: ./docs/10.x/logging.md:24
#: ./docs/11.x/logging.md:24
#: ./docs/master/logging.md:24
msgctxt "P"
msgid "To help you learn more about what's happening within your application, Laravel provides robust logging services that allow you to log messages to files, the system error log, and even to Slack to notify your entire team."
msgstr ""

#: ./docs/8.x/logging.md:22
#: ./docs/9.x/logging.md:22
#: ./docs/10.x/logging.md:26
#: ./docs/11.x/logging.md:26
#: ./docs/master/logging.md:26
msgctxt "P"
msgid "Laravel logging is based on \"channels\". Each channel represents a specific way of writing log information. For example, the `single` channel writes log files to a single log file, while the `slack` channel sends log messages to Slack. Log messages may be written to multiple channels based on their severity."
msgstr ""

#: ./docs/8.x/logging.md:24
#: ./docs/9.x/logging.md:24
#: ./docs/10.x/logging.md:28
#: ./docs/11.x/logging.md:28
#: ./docs/master/logging.md:28
msgctxt "P"
msgid "Under the hood, Laravel utilizes the [Monolog](https://github.com/Seldaek/monolog) library, which provides support for a variety of powerful log handlers. Laravel makes it a cinch to configure these handlers, allowing you to mix and match them to customize your application's log handling."
msgstr ""

#: ./docs/8.x/logging.md:26
#: ./docs/9.x/logging.md:26
#: ./docs/10.x/logging.md:30
#: ./docs/11.x/logging.md:30
#: ./docs/master/logging.md:30
#~ msgctxt "P"
#~ msgid "<a name=\"configuration\"></a>"
#~ msgstr ""

#: ./docs/8.x/logging.md:27
#: ./docs/9.x/logging.md:27
#: ./docs/10.x/logging.md:31
#: ./docs/11.x/logging.md:31
#: ./docs/master/logging.md:31
msgctxt "H2"
msgid "Configuration"
msgstr ""

#: ./docs/8.x/logging.md:29
#: ./docs/9.x/logging.md:29
msgctxt "P"
msgid "All of the configuration options for your application's logging behavior is housed in the `config/logging.php` configuration file. This file allows you to configure your application's log channels, so be sure to review each of the available channels and their options. We'll review a few common options below."
msgstr ""

#: ./docs/8.x/logging.md:31
#: ./docs/9.x/logging.md:31
#: ./docs/10.x/logging.md:35
#: ./docs/11.x/logging.md:35
#: ./docs/master/logging.md:35
msgctxt "P"
msgid "By default, Laravel will use the `stack` channel when logging messages. The `stack` channel is used to aggregate multiple log channels into a single channel. For more information on building stacks, check out the [documentation below](#building-log-stacks)."
msgstr ""

#: ./docs/10.x/logging.md:33
msgctxt "P"
msgid "All of the configuration options for your application's logging behavior are housed in the `config/logging.php` configuration file. This file allows you to configure your application's log channels, so be sure to review each of the available channels and their options. We'll review a few common options below."
msgstr ""

#: ./docs/11.x/logging.md:33
#: ./docs/master/logging.md:33
msgctxt "P"
msgid "All of the configuration options that control your application's logging behavior are housed in the `config/logging.php` configuration file. This file allows you to configure your application's log channels, so be sure to review each of the available channels and their options. We'll review a few common options below."
msgstr ""

#: ./docs/8.x/logging.md:33
#: ./docs/9.x/logging.md:33
#: ./docs/10.x/logging.md:37
#: ./docs/11.x/logging.md:61
#: ./docs/master/logging.md:61
#~ msgctxt "P"
#~ msgid "<a name=\"configuring-the-channel-name\"></a>"
#~ msgstr ""

#: ./docs/8.x/logging.md:34
#: ./docs/9.x/logging.md:34
msgctxt "H4"
msgid "Configuring The Channel Name"
msgstr ""

#: ./docs/8.x/logging.md:36
#: ./docs/9.x/logging.md:36
#: ./docs/10.x/logging.md:40
msgctxt "P"
msgid "By default, Monolog is instantiated with a \"channel name\" that matches the current environment, such as `production` or `local`. To change this value, add a `name` option to your channel's configuration:"
msgstr ""

#: ./docs/10.x/logging.md:38
#: ./docs/11.x/logging.md:62
#: ./docs/master/logging.md:62
msgctxt "H4"
msgid "Configuring the Channel Name"
msgstr ""

#: ./docs/8.x/logging.md:38
#: ./docs/9.x/logging.md:38
#: ./docs/10.x/logging.md:42
#: ./docs/11.x/logging.md:66
#: ./docs/master/logging.md:66
msgctxt "CODE"
msgid "'stack' => [\n"
"    'driver' => 'stack',\n"
"    'name' => 'channel-name',\n"
"    'channels' => ['single', 'slack'],\n"
"],"
msgstr ""

#: ./docs/8.x/logging.md:44
#: ./docs/9.x/logging.md:44
#: ./docs/10.x/logging.md:48
#: ./docs/11.x/logging.md:37
#: ./docs/master/logging.md:37
#~ msgctxt "P"
#~ msgid "<a name=\"available-channel-drivers\"></a>"
#~ msgstr ""

#: ./docs/8.x/logging.md:45
#: ./docs/9.x/logging.md:45
#: ./docs/10.x/logging.md:49
#: ./docs/11.x/logging.md:38
#: ./docs/master/logging.md:38
msgctxt "H3"
msgid "Available Channel Drivers"
msgstr ""

#: ./docs/8.x/logging.md:47
#: ./docs/9.x/logging.md:47
#: ./docs/10.x/logging.md:51
#: ./docs/11.x/logging.md:40
#: ./docs/master/logging.md:40
msgctxt "P"
msgid "Each log channel is powered by a \"driver\". The driver determines how and where the log message is actually recorded. The following log channel drivers are available in every Laravel application. An entry for most of these drivers is already present in your application's `config/logging.php` configuration file, so be sure to review this file to become familiar with its contents:"
msgstr ""

#: ./docs/8.x/logging.md:62
#: ./docs/9.x/logging.md:63
#: ./docs/10.x/logging.md:70
#: ./docs/11.x/logging.md:59
#: ./docs/master/logging.md:59
msgctxt "P"
msgid "Check out the documentation on [advanced channel customization](#monolog-channel-customization) to learn more about the `monolog` and `custom` drivers."
msgstr ""

#: ./docs/11.x/logging.md:64
#: ./docs/master/logging.md:64
msgctxt "P"
msgid "By default, Monolog is instantiated with a \"channel name\" that matches the current environment, such as `production` or `local`. To change this value, you may add a `name` option to your channel's configuration:"
msgstr ""

#: ./docs/8.x/logging.md:64
#: ./docs/9.x/logging.md:65
#: ./docs/10.x/logging.md:72
#: ./docs/11.x/logging.md:72
#: ./docs/master/logging.md:72
#~ msgctxt "P"
#~ msgid "<a name=\"channel-prerequisites\"></a>"
#~ msgstr ""

#: ./docs/8.x/logging.md:65
#: ./docs/9.x/logging.md:66
#: ./docs/10.x/logging.md:73
#: ./docs/11.x/logging.md:73
#: ./docs/master/logging.md:73
msgctxt "H3"
msgid "Channel Prerequisites"
msgstr ""

#: ./docs/8.x/logging.md:67
#: ./docs/9.x/logging.md:68
#: ./docs/10.x/logging.md:75
#: ./docs/11.x/logging.md:75
#: ./docs/master/logging.md:75
#~ msgctxt "P"
#~ msgid "<a name=\"configuring-the-single-and-daily-channels\"></a>"
#~ msgstr ""

#: ./docs/8.x/logging.md:68
#: ./docs/9.x/logging.md:69
msgctxt "H4"
msgid "Configuring The Single and Daily Channels"
msgstr ""

#: ./docs/8.x/logging.md:70
#: ./docs/9.x/logging.md:71
#: ./docs/10.x/logging.md:78
#: ./docs/11.x/logging.md:78
#: ./docs/master/logging.md:78
msgctxt "P"
msgid "The `single` and `daily` channels have three optional configuration options: `bubble`, `permission`, and `locking`."
msgstr ""

#: ./docs/10.x/logging.md:76
#: ./docs/11.x/logging.md:76
#: ./docs/master/logging.md:76
msgctxt "H4"
msgid "Configuring the Single and Daily Channels"
msgstr ""

#: ./docs/8.x/logging.md:78
#: ./docs/9.x/logging.md:85
#: ./docs/10.x/logging.md:100
#: ./docs/11.x/logging.md:100
#: ./docs/master/logging.md:100
#~ msgctxt "P"
#~ msgid "<a name=\"configuring-the-papertrail-channel\"></a>"
#~ msgstr ""

#: ./docs/8.x/logging.md:79
#: ./docs/9.x/logging.md:86
msgctxt "H4"
msgid "Configuring The Papertrail Channel"
msgstr ""

#: ./docs/9.x/logging.md:79
#: ./docs/10.x/logging.md:90
msgctxt "P"
msgid "Additionally, the retention policy for the `daily` channel can be configured via the `days` option:"
msgstr ""

#: ./docs/8.x/logging.md:81
#: ./docs/9.x/logging.md:88
#: ./docs/10.x/logging.md:103
msgctxt "P"
msgid "The `papertrail` channel requires the `host` and `port` configuration options. You can obtain these values from [Papertrail](https://help.papertrailapp.com/kb/configuration/configuring-centralized-logging-from-php-apps/#send-events-from-php-app)."
msgstr ""

#: ./docs/8.x/logging.md:83
#: ./docs/9.x/logging.md:90
#: ./docs/10.x/logging.md:105
#: ./docs/11.x/logging.md:105
#: ./docs/master/logging.md:105
#~ msgctxt "P"
#~ msgid "<a name=\"configuring-the-slack-channel\"></a>"
#~ msgstr ""

#: ./docs/8.x/logging.md:84
#: ./docs/9.x/logging.md:91
msgctxt "H4"
msgid "Configuring The Slack Channel"
msgstr ""

#: ./docs/8.x/logging.md:86
#: ./docs/9.x/logging.md:93
#: ./docs/10.x/logging.md:108
msgctxt "P"
msgid "The `slack` channel requires a `url` configuration option. This URL should match a URL for an [incoming webhook](https://slack.com/apps/A0F7XDUAZ-incoming-webhooks) that you have configured for your Slack team."
msgstr ""

#: ./docs/8.x/logging.md:88
#: ./docs/9.x/logging.md:95
#: ./docs/10.x/logging.md:110
msgctxt "P"
msgid "By default, Slack will only receive logs at the `critical` level and above; however, you can adjust this in your `config/logging.php` configuration file by modifying the `level` configuration option within your Slack log channel's configuration array."
msgstr ""

#: ./docs/11.x/logging.md:90
#: ./docs/master/logging.md:90
msgctxt "P"
msgid "Additionally, the retention policy for the `daily` channel can be configured via the `LOG_DAILY_DAYS` environment variable or by setting the `days` configuration option."
msgstr ""

#: ./docs/8.x/logging.md:90
#: ./docs/9.x/logging.md:97
#: ./docs/10.x/logging.md:112
#: ./docs/11.x/logging.md:112
#: ./docs/master/logging.md:112
#~ msgctxt "P"
#~ msgid "<a name=\"logging-deprecation-warnings\"></a>"
#~ msgstr ""

#: ./docs/8.x/logging.md:91
#: ./docs/9.x/logging.md:98
#: ./docs/10.x/logging.md:113
#: ./docs/11.x/logging.md:113
#: ./docs/master/logging.md:113
msgctxt "H3"
msgid "Logging Deprecation Warnings"
msgstr ""

#: ./docs/8.x/logging.md:93
#: ./docs/9.x/logging.md:100
#: ./docs/10.x/logging.md:115
msgctxt "P"
msgid "PHP, Laravel, and other libraries often notify their users that some of their features have been deprecated and will be removed in a future version. If you would like to log these deprecation warnings, you may specify your preferred `deprecations` log channel in your application's `config/logging.php` configuration file:"
msgstr ""

#: ./docs/8.x/logging.md:95
#: ./docs/9.x/logging.md:102
#: ./docs/10.x/logging.md:117
msgctxt "CODE"
msgid "'deprecations' => env('LOG_DEPRECATIONS_CHANNEL', 'null'),\n\n"
"'channels' => [\n"
"    ...\n"
"]"
msgstr ""

#: ./docs/10.x/logging.md:101
#: ./docs/11.x/logging.md:101
#: ./docs/master/logging.md:101
msgctxt "H4"
msgid "Configuring the Papertrail Channel"
msgstr ""

#: ./docs/8.x/logging.md:101
#: ./docs/9.x/logging.md:108
#: ./docs/10.x/logging.md:123
#: ./docs/11.x/logging.md:126
#: ./docs/master/logging.md:126
msgctxt "P"
msgid "Or, you may define a log channel named `deprecations`. If a log channel with this name exists, it will always be used to log deprecations:"
msgstr ""

#: ./docs/11.x/logging.md:103
msgctxt "P"
msgid "The `papertrail` channel requires `host` and `port` configuration options. These may be defined via the `PAPERTRAIL_URL` and `PAPERTRAIL_PORT` environment variables. You can obtain these values from [Papertrail](https://help.papertrailapp.com/kb/configuration/configuring-centralized-logging-from-php-apps/#send-events-from-php-app)."
msgstr ""

#: ./docs/8.x/logging.md:103
#: ./docs/9.x/logging.md:110
#: ./docs/10.x/logging.md:125
#: ./docs/11.x/logging.md:128
#: ./docs/master/logging.md:128
msgctxt "CODE"
msgid "'channels' => [\n"
"    'deprecations' => [\n"
"        'driver' => 'single',\n"
"        'path' => storage_path('logs/php-deprecation-warnings.log'),\n"
"    ],\n"
"],"
msgstr ""

#: ./docs/master/logging.md:103
msgctxt "P"
msgid "The `papertrail` channel requires `host` and `port` configuration options. These may be defined via the `LOG_PAPERTRAIL_URL` and `LOG_PAPERTRAIL_PORT` environment variables. You can obtain these values from [Papertrail](https://help.papertrailapp.com/kb/configuration/configuring-centralized-logging-from-php-apps/#send-events-from-php-app)."
msgstr ""

#: ./docs/10.x/logging.md:106
#: ./docs/11.x/logging.md:106
#: ./docs/master/logging.md:106
msgctxt "H4"
msgid "Configuring the Slack Channel"
msgstr ""

#: ./docs/11.x/logging.md:108
#: ./docs/master/logging.md:108
msgctxt "P"
msgid "The `slack` channel requires a `url` configuration option. This value may be defined via the `LOG_SLACK_WEBHOOK_URL` environment variable. This URL should match a URL for an [incoming webhook](https://slack.com/apps/A0F7XDUAZ-incoming-webhooks) that you have configured for your Slack team."
msgstr ""

#: ./docs/11.x/logging.md:110
#: ./docs/master/logging.md:110
msgctxt "P"
msgid "By default, Slack will only receive logs at the `critical` level and above; however, you can adjust this using the `LOG_LEVEL` environment variable or by modifying the `level` configuration option within your Slack log channel's configuration array."
msgstr ""

#: ./docs/8.x/logging.md:110
#: ./docs/9.x/logging.md:117
#: ./docs/10.x/logging.md:132
#: ./docs/11.x/logging.md:135
#: ./docs/master/logging.md:135
#~ msgctxt "P"
#~ msgid "<a name=\"building-log-stacks\"></a>"
#~ msgstr ""

#: ./docs/8.x/logging.md:111
#: ./docs/9.x/logging.md:118
#: ./docs/10.x/logging.md:133
#: ./docs/11.x/logging.md:136
#: ./docs/master/logging.md:136
msgctxt "H2"
msgid "Building Log Stacks"
msgstr ""

#: ./docs/8.x/logging.md:113
#: ./docs/9.x/logging.md:120
#: ./docs/10.x/logging.md:135
#: ./docs/11.x/logging.md:138
#: ./docs/master/logging.md:138
msgctxt "P"
msgid "As mentioned previously, the `stack` driver allows you to combine multiple channels into a single log channel for convenience. To illustrate how to use log stacks, let's take a look at an example configuration that you might see in a production application:"
msgstr ""

#: ./docs/11.x/logging.md:115
#: ./docs/master/logging.md:115
msgctxt "P"
msgid "PHP, Laravel, and other libraries often notify their users that some of their features have been deprecated and will be removed in a future version. If you would like to log these deprecation warnings, you may specify your preferred `deprecations` log channel using the `LOG_DEPRECATIONS_CHANNEL` environment variable, or within your application's `config/logging.php` configuration file:"
msgstr ""

#: ./docs/8.x/logging.md:115
#: ./docs/9.x/logging.md:122
#: ./docs/10.x/logging.md:137
msgctxt "CODE"
msgid "'channels' => [\n"
"    'stack' => [\n"
"        'driver' => 'stack',\n"
"        'channels' => ['syslog', 'slack'],\n"
"    ],\n\n"
"    'syslog' => [\n"
"        'driver' => 'syslog',\n"
"        'level' => 'debug',\n"
"    ],\n\n"
"    'slack' => [\n"
"        'driver' => 'slack',\n"
"        'url' => env('LOG_SLACK_WEBHOOK_URL'),\n"
"        'username' => 'Laravel Log',\n"
"        'emoji' => ':boom:',\n"
"        'level' => 'critical',\n"
"    ],\n"
"],"
msgstr ""

#: ./docs/11.x/logging.md:117
#: ./docs/master/logging.md:117
msgctxt "CODE"
msgid "'deprecations' => [\n"
"    'channel' => env('LOG_DEPRECATIONS_CHANNEL', 'null'),\n"
"    'trace' => env('LOG_DEPRECATIONS_TRACE', false),\n"
"],\n\n"
"'channels' => [\n"
"    // ...\n"
"]"
msgstr ""

#: ./docs/8.x/logging.md:135
#: ./docs/9.x/logging.md:142
#: ./docs/10.x/logging.md:157
#: ./docs/11.x/logging.md:166
#: ./docs/master/logging.md:166
msgctxt "P"
msgid "Let's dissect this configuration. First, notice our `stack` channel aggregates two other channels via its `channels` option: `syslog` and `slack`. So, when logging messages, both of these channels will have the opportunity to log the message. However, as we will see below, whether these channels actually log the message may be determined by the message's severity / \"level\"."
msgstr ""

#: ./docs/8.x/logging.md:137
#: ./docs/9.x/logging.md:144
#: ./docs/10.x/logging.md:159
#: ./docs/11.x/logging.md:168
#: ./docs/master/logging.md:168
#~ msgctxt "P"
#~ msgid "<a name=\"log-levels\"></a>"
#~ msgstr ""

#: ./docs/8.x/logging.md:138
#: ./docs/9.x/logging.md:145
#: ./docs/10.x/logging.md:160
#: ./docs/11.x/logging.md:169
#: ./docs/master/logging.md:169
msgctxt "H4"
msgid "Log Levels"
msgstr ""

#: ./docs/11.x/logging.md:140
#: ./docs/master/logging.md:140
msgctxt "CODE: php"
msgid "'channels' => [\n"
"    'stack' => [\n"
"        'driver' => 'stack',\n"
"        'channels' => ['syslog', 'slack'], // [tl! add]\n"
"        'ignore_exceptions' => false,\n"
"    ],\n\n"
"    'syslog' => [\n"
"        'driver' => 'syslog',\n"
"        'level' => env('LOG_LEVEL', 'debug'),\n"
"        'facility' => env('LOG_SYSLOG_FACILITY', LOG_USER),\n"
"        'replace_placeholders' => true,\n"
"    ],\n\n"
"    'slack' => [\n"
"        'driver' => 'slack',\n"
"        'url' => env('LOG_SLACK_WEBHOOK_URL'),\n"
"        'username' => env('LOG_SLACK_USERNAME', 'Laravel Log'),\n"
"        'emoji' => env('LOG_SLACK_EMOJI', ':boom:'),\n"
"        'level' => env('LOG_LEVEL', 'critical'),\n"
"        'replace_placeholders' => true,\n"
"    ],\n"
"],"
msgstr ""

#: ./docs/8.x/logging.md:140
msgctxt "P"
msgid "Take note of the `level` configuration option present on the `syslog` and `slack` channel configurations in the example above. This option determines the minimum \"level\" a message must be in order to be logged by the channel. Monolog, which powers Laravel's logging services, offers all of the log levels defined in the [RFC 5424 specification](https://tools.ietf.org/html/rfc5424): **emergency**, **alert**, **critical**, **error**, **warning**, **notice**, **info**, and **debug**."
msgstr ""

#: ./docs/8.x/logging.md:142
#: ./docs/9.x/logging.md:149
#: ./docs/10.x/logging.md:164
#: ./docs/11.x/logging.md:173
#: ./docs/master/logging.md:173
msgctxt "P"
msgid "So, imagine we log a message using the `debug` method:"
msgstr ""

#: ./docs/8.x/logging.md:144
#: ./docs/9.x/logging.md:151
#: ./docs/10.x/logging.md:166
#: ./docs/11.x/logging.md:175
#: ./docs/master/logging.md:175
msgctxt "CODE"
msgid "Log::debug('An informational message.');"
msgstr ""

#: ./docs/8.x/logging.md:146
#: ./docs/9.x/logging.md:153
#: ./docs/10.x/logging.md:168
#: ./docs/11.x/logging.md:177
#: ./docs/master/logging.md:177
msgctxt "P"
msgid "Given our configuration, the `syslog` channel will write the message to the system log; however, since the error message is not `critical` or above, it will not be sent to Slack. However, if we log an `emergency` message, it will be sent to both the system log and Slack since the `emergency` level is above our minimum level threshold for both channels:"
msgstr ""

#: ./docs/9.x/logging.md:147
#: ./docs/10.x/logging.md:162
#: ./docs/11.x/logging.md:171
#: ./docs/master/logging.md:171
msgctxt "P"
msgid "Take note of the `level` configuration option present on the `syslog` and `slack` channel configurations in the example above. This option determines the minimum \"level\" a message must be in order to be logged by the channel. Monolog, which powers Laravel's logging services, offers all of the log levels defined in the [RFC 5424 specification](https://tools.ietf.org/html/rfc5424). In descending order of severity, these log levels are: **emergency**, **alert**, **critical**, **error**, **warning**, **notice**, **info**, and **debug**."
msgstr ""

#: ./docs/8.x/logging.md:148
#: ./docs/9.x/logging.md:155
#: ./docs/10.x/logging.md:170
#: ./docs/11.x/logging.md:179
#: ./docs/master/logging.md:179
msgctxt "CODE"
msgid "Log::emergency('The system is down!');"
msgstr ""

#: ./docs/8.x/logging.md:150
#: ./docs/9.x/logging.md:157
#: ./docs/10.x/logging.md:172
#: ./docs/11.x/logging.md:181
#: ./docs/master/logging.md:181
#~ msgctxt "P"
#~ msgid "<a name=\"writing-log-messages\"></a>"
#~ msgstr ""

#: ./docs/8.x/logging.md:151
#: ./docs/9.x/logging.md:158
#: ./docs/10.x/logging.md:173
#: ./docs/11.x/logging.md:182
#: ./docs/master/logging.md:182
msgctxt "H2"
msgid "Writing Log Messages"
msgstr ""

#: ./docs/8.x/logging.md:153
#: ./docs/9.x/logging.md:160
#: ./docs/10.x/logging.md:175
#: ./docs/11.x/logging.md:184
#: ./docs/master/logging.md:184
msgctxt "P"
msgid "You may write information to the logs using the `Log` [facade](/docs/{{version}}/facades). As previously mentioned, the logger provides the eight logging levels defined in the [RFC 5424 specification](https://tools.ietf.org/html/rfc5424): **emergency**, **alert**, **critical**, **error**, **warning**, **notice**, **info** and **debug**:"
msgstr ""

#: ./docs/8.x/logging.md:155
#: ./docs/9.x/logging.md:162
#: ./docs/10.x/logging.md:177
#: ./docs/11.x/logging.md:186
#: ./docs/master/logging.md:186
msgctxt "CODE"
msgid "use Illuminate\\Support\\Facades\\Log;\n\n"
"Log::emergency($message);\n"
"Log::alert($message);\n"
"Log::critical($message);\n"
"Log::error($message);\n"
"Log::warning($message);\n"
"Log::notice($message);\n"
"Log::info($message);\n"
"Log::debug($message);"
msgstr ""

#: ./docs/8.x/logging.md:166
#: ./docs/9.x/logging.md:173
#: ./docs/10.x/logging.md:188
#: ./docs/11.x/logging.md:197
#: ./docs/master/logging.md:197
msgctxt "P"
msgid "You may call any of these methods to log a message for the corresponding level. By default, the message will be written to the default log channel as configured by your `logging` configuration file:"
msgstr ""

#: ./docs/8.x/logging.md:168
#: ./docs/9.x/logging.md:175
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Http\\Controllers;\n\n"
"use App\\Http\\Controllers\\Controller;\n"
"use App\\Models\\User;\n"
"use Illuminate\\Support\\Facades\\Log;\n\n"
"class UserController extends Controller\n"
"{\n"
"    /**\n"
"     * Show the profile for the given user.\n"
"     *\n"
"     * @param  int  $id\n"
"     * @return \\Illuminate\\Http\\Response\n"
"     */\n"
"    public function show($id)\n"
"    {\n"
"        Log::info('Showing the user profile for user: '.$id);\n\n"
"        return view('user.profile', [\n"
"            'user' => User::findOrFail($id)\n"
"        ]);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/10.x/logging.md:190
#: ./docs/11.x/logging.md:199
#: ./docs/master/logging.md:199
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Http\\Controllers;\n\n"
"use App\\Http\\Controllers\\Controller;\n"
"use App\\Models\\User;\n"
"use Illuminate\\Support\\Facades\\Log;\n"
"use Illuminate\\View\\View;\n\n"
"class UserController extends Controller\n"
"{\n"
"    /**\n"
"     * Show the profile for the given user.\n"
"     */\n"
"    public function show(string $id): View\n"
"    {\n"
"        Log::info('Showing the user profile for user: {id}', ['id' => $id]);\n\n"
"        return view('user.profile', [\n"
"            'user' => User::findOrFail($id)\n"
"        ]);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/8.x/logging.md:194
#: ./docs/9.x/logging.md:201
#: ./docs/10.x/logging.md:214
#: ./docs/11.x/logging.md:223
#: ./docs/master/logging.md:223
#~ msgctxt "P"
#~ msgid "<a name=\"contextual-information\"></a>"
#~ msgstr ""

#: ./docs/8.x/logging.md:195
#: ./docs/9.x/logging.md:202
#: ./docs/10.x/logging.md:215
#: ./docs/11.x/logging.md:224
#: ./docs/master/logging.md:224
msgctxt "H3"
msgid "Contextual Information"
msgstr ""

#: ./docs/8.x/logging.md:197
#: ./docs/9.x/logging.md:204
#: ./docs/10.x/logging.md:217
#: ./docs/11.x/logging.md:226
#: ./docs/master/logging.md:226
msgctxt "P"
msgid "An array of contextual data may be passed to the log methods. This contextual data will be formatted and displayed with the log message:"
msgstr ""

#: ./docs/8.x/logging.md:199
#: ./docs/9.x/logging.md:206
msgctxt "CODE"
msgid "use Illuminate\\Support\\Facades\\Log;\n\n"
"Log::info('User failed to login.', ['id' => $user->id]);"
msgstr ""

#: ./docs/8.x/logging.md:203
msgctxt "P"
msgid "Occasionally, you may wish to specify some contextual information that should be included with all subsequent log entries. For example, you may wish to log a request ID that is associated with each incoming request to your application. To accomplish this, you may call the `Log` facade's `withContext` method:"
msgstr ""

#: ./docs/8.x/logging.md:205
#: ./docs/9.x/logging.md:212
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Http\\Middleware;\n\n"
"use Closure;\n"
"use Illuminate\\Support\\Facades\\Log;\n"
"use Illuminate\\Support\\Str;\n\n"
"class AssignRequestId\n"
"{\n"
"    /**\n"
"     * Handle an incoming request.\n"
"     *\n"
"     * @param  \\Illuminate\\Http\\Request  $request\n"
"     * @param  \\Closure  $next\n"
"     * @return mixed\n"
"     */\n"
"    public function handle($request, Closure $next)\n"
"    {\n"
"        $requestId = (string) Str::uuid();\n\n"
"        Log::withContext([\n"
"            'request-id' => $requestId\n"
"        ]);\n\n"
"        return $next($request)->header('Request-Id', $requestId);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/9.x/logging.md:210
#: ./docs/10.x/logging.md:223
#: ./docs/11.x/logging.md:232
#: ./docs/master/logging.md:232
msgctxt "P"
msgid "Occasionally, you may wish to specify some contextual information that should be included with all subsequent log entries in a particular channel. For example, you may wish to log a request ID that is associated with each incoming request to your application. To accomplish this, you may call the `Log` facade's `withContext` method:"
msgstr ""

#: ./docs/10.x/logging.md:219
#: ./docs/11.x/logging.md:228
#: ./docs/master/logging.md:228
msgctxt "CODE"
msgid "use Illuminate\\Support\\Facades\\Log;\n\n"
"Log::info('User {id} failed to login.', ['id' => $user->id]);"
msgstr ""

#: ./docs/10.x/logging.md:225
#: ./docs/11.x/logging.md:234
#: ./docs/master/logging.md:234
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Http\\Middleware;\n\n"
"use Closure;\n"
"use Illuminate\\Http\\Request;\n"
"use Illuminate\\Support\\Facades\\Log;\n"
"use Illuminate\\Support\\Str;\n"
"use Symfony\\Component\\HttpFoundation\\Response;\n\n"
"class AssignRequestId\n"
"{\n"
"    /**\n"
"     * Handle an incoming request.\n"
"     *\n"
"     * @param  \\Closure(\\Illuminate\\Http\\Request): (\\Symfony\\Component\\HttpFoundation\\Response)  $next\n"
"     */\n"
"    public function handle(Request $request, Closure $next): Response\n"
"    {\n"
"        $requestId = (string) Str::uuid();\n\n"
"        Log::withContext([\n"
"            'request-id' => $requestId\n"
"        ]);\n\n"
"        $response = $next($request);\n\n"
"        $response->headers->set('Request-Id', $requestId);\n\n"
"        return $response;\n"
"    }\n"
"}"
msgstr ""

#: ./docs/8.x/logging.md:234
#: ./docs/9.x/logging.md:261
#: ./docs/10.x/logging.md:292
#: ./docs/11.x/logging.md:301
#: ./docs/master/logging.md:301
#~ msgctxt "P"
#~ msgid "<a name=\"writing-to-specific-channels\"></a>"
#~ msgstr ""

#: ./docs/8.x/logging.md:235
#: ./docs/9.x/logging.md:262
msgctxt "H3"
msgid "Writing To Specific Channels"
msgstr ""

#: ./docs/8.x/logging.md:237
#: ./docs/9.x/logging.md:264
#: ./docs/10.x/logging.md:295
#: ./docs/11.x/logging.md:304
#: ./docs/master/logging.md:304
msgctxt "P"
msgid "Sometimes you may wish to log a message to a channel other than your application's default channel. You may use the `channel` method on the `Log` facade to retrieve and log to any channel defined in your configuration file:"
msgstr ""

#: ./docs/8.x/logging.md:239
#: ./docs/9.x/logging.md:266
#: ./docs/10.x/logging.md:297
#: ./docs/11.x/logging.md:306
#: ./docs/master/logging.md:306
msgctxt "CODE"
msgid "use Illuminate\\Support\\Facades\\Log;\n\n"
"Log::channel('slack')->info('Something happened!');"
msgstr ""

#: ./docs/9.x/logging.md:241
msgctxt "P"
msgid "If you would like to share contextual information across *all* logging channels, you may call the `Log::shareContext()` method. This method will provide the contextual information to all created channels and any channels that are created subsequently. Typically, the `shareContext` method should be called from the `boot` method of an application service provider:"
msgstr ""

#: ./docs/8.x/logging.md:243
#: ./docs/9.x/logging.md:270
#: ./docs/10.x/logging.md:301
#: ./docs/11.x/logging.md:310
#: ./docs/master/logging.md:310
msgctxt "P"
msgid "If you would like to create an on-demand logging stack consisting of multiple channels, you may use the `stack` method:"
msgstr ""

#: ./docs/9.x/logging.md:243
msgctxt "CODE"
msgid "use Illuminate\\Support\\Facades\\Log;\n"
"use Illuminate\\Support\\Str;\n\n"
"class AppServiceProvider\n"
"{\n"
"    /**\n"
"     * Bootstrap any application services.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function boot()\n"
"    {\n"
"        Log::shareContext([\n"
"            'invocation-id' => (string) Str::uuid(),\n"
"        ]);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/8.x/logging.md:245
#: ./docs/9.x/logging.md:272
#: ./docs/10.x/logging.md:303
#: ./docs/11.x/logging.md:312
#: ./docs/master/logging.md:312
msgctxt "CODE"
msgid "Log::stack(['single', 'slack'])->info('Something happened!');"
msgstr ""

#: ./docs/8.x/logging.md:247
#: ./docs/9.x/logging.md:274
#: ./docs/10.x/logging.md:305
#: ./docs/11.x/logging.md:314
#: ./docs/master/logging.md:314
#~ msgctxt "P"
#~ msgid "<a name=\"on-demand-channels\"></a>"
#~ msgstr ""

#: ./docs/8.x/logging.md:248
#: ./docs/9.x/logging.md:275
#: ./docs/10.x/logging.md:306
#: ./docs/11.x/logging.md:315
#: ./docs/master/logging.md:315
msgctxt "H4"
msgid "On-Demand Channels"
msgstr ""

#: ./docs/8.x/logging.md:250
#: ./docs/9.x/logging.md:277
#: ./docs/10.x/logging.md:308
#: ./docs/11.x/logging.md:317
#: ./docs/master/logging.md:317
msgctxt "P"
msgid "It is also possible to create an on-demand channel by providing the configuration at runtime without that configuration being present in your application's `logging` configuration file. To accomplish this, you may pass a configuration array to the `Log` facade's `build` method:"
msgstr ""

#: ./docs/8.x/logging.md:252
#: ./docs/9.x/logging.md:279
#: ./docs/10.x/logging.md:310
#: ./docs/11.x/logging.md:319
#: ./docs/master/logging.md:319
msgctxt "CODE"
msgid "use Illuminate\\Support\\Facades\\Log;\n\n"
"Log::build([\n"
"  'driver' => 'single',\n"
"  'path' => storage_path('logs/custom.log'),\n"
"])->info('Something happened!');"
msgstr ""

#: ./docs/10.x/logging.md:258
#: ./docs/11.x/logging.md:267
#: ./docs/master/logging.md:267
msgctxt "P"
msgid "If you would like to share contextual information across *all* logging channels, you may invoke the `Log::shareContext()` method. This method will provide the contextual information to all created channels and any channels that are created subsequently:"
msgstr ""

#: ./docs/8.x/logging.md:259
#: ./docs/9.x/logging.md:286
#: ./docs/10.x/logging.md:317
#: ./docs/11.x/logging.md:326
#: ./docs/master/logging.md:326
msgctxt "P"
msgid "You may also wish to include an on-demand channel in an on-demand logging stack. This can be achieved by including your on-demand channel instance in the array passed to the `stack` method:"
msgstr ""

#: ./docs/10.x/logging.md:260
#: ./docs/11.x/logging.md:269
#: ./docs/master/logging.md:269
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Http\\Middleware;\n\n"
"use Closure;\n"
"use Illuminate\\Http\\Request;\n"
"use Illuminate\\Support\\Facades\\Log;\n"
"use Illuminate\\Support\\Str;\n"
"use Symfony\\Component\\HttpFoundation\\Response;\n\n"
"class AssignRequestId\n"
"{\n"
"    /**\n"
"     * Handle an incoming request.\n"
"     *\n"
"     * @param  \\Closure(\\Illuminate\\Http\\Request): (\\Symfony\\Component\\HttpFoundation\\Response)  $next\n"
"     */\n"
"    public function handle(Request $request, Closure $next): Response\n"
"    {\n"
"        $requestId = (string) Str::uuid();\n\n"
"        Log::shareContext([\n"
"            'request-id' => $requestId\n"
"        ]);\n\n"
"        // ...\n"
"    }\n"
"}"
msgstr ""

#: ./docs/8.x/logging.md:261
#: ./docs/9.x/logging.md:288
#: ./docs/10.x/logging.md:319
#: ./docs/11.x/logging.md:328
#: ./docs/master/logging.md:328
msgctxt "CODE"
msgid "use Illuminate\\Support\\Facades\\Log;\n\n"
"$channel = Log::build([\n"
"  'driver' => 'single',\n"
"  'path' => storage_path('logs/custom.log'),\n"
"]);\n\n"
"Log::stack(['slack', $channel])->info('Something happened!');"
msgstr ""

#: ./docs/8.x/logging.md:270
#: ./docs/9.x/logging.md:297
#: ./docs/10.x/logging.md:328
#: ./docs/11.x/logging.md:337
#: ./docs/master/logging.md:337
#~ msgctxt "P"
#~ msgid "<a name=\"monolog-channel-customization\"></a>"
#~ msgstr ""

#: ./docs/8.x/logging.md:271
#: ./docs/9.x/logging.md:298
#: ./docs/10.x/logging.md:329
#: ./docs/11.x/logging.md:338
#: ./docs/master/logging.md:338
msgctxt "H2"
msgid "Monolog Channel Customization"
msgstr ""

#: ./docs/8.x/logging.md:273
#: ./docs/9.x/logging.md:300
#: ./docs/10.x/logging.md:331
#: ./docs/11.x/logging.md:340
#: ./docs/master/logging.md:340
#~ msgctxt "P"
#~ msgid "<a name=\"customizing-monolog-for-channels\"></a>"
#~ msgstr ""

#: ./docs/8.x/logging.md:274
#: ./docs/9.x/logging.md:301
msgctxt "H3"
msgid "Customizing Monolog For Channels"
msgstr ""

#: ./docs/8.x/logging.md:276
#: ./docs/9.x/logging.md:303
#: ./docs/10.x/logging.md:334
#: ./docs/11.x/logging.md:343
#: ./docs/master/logging.md:343
msgctxt "P"
msgid "Sometimes you may need complete control over how Monolog is configured for an existing channel. For example, you may want to configure a custom Monolog `FormatterInterface` implementation for Laravel's built-in `single` channel."
msgstr ""

#: ./docs/8.x/logging.md:278
#: ./docs/9.x/logging.md:305
#: ./docs/10.x/logging.md:336
#: ./docs/11.x/logging.md:345
#: ./docs/master/logging.md:345
msgctxt "P"
msgid "To get started, define a `tap` array on the channel's configuration. The `tap` array should contain a list of classes that should have an opportunity to customize (or \"tap\" into) the Monolog instance after it is created. There is no conventional location where these classes should be placed, so you are free to create a directory within your application to contain these classes:"
msgstr ""

#: ./docs/8.x/logging.md:280
#: ./docs/9.x/logging.md:307
#: ./docs/10.x/logging.md:338
msgctxt "CODE"
msgid "'single' => [\n"
"    'driver' => 'single',\n"
"    'tap' => [App\\Logging\\CustomizeFormatter::class],\n"
"    'path' => storage_path('logs/laravel.log'),\n"
"    'level' => 'debug',\n"
"],"
msgstr ""

#: ./docs/8.x/logging.md:287
#: ./docs/9.x/logging.md:314
#: ./docs/10.x/logging.md:345
#: ./docs/11.x/logging.md:355
#: ./docs/master/logging.md:355
msgctxt "P"
msgid "Once you have configured the `tap` option on your channel, you're ready to define the class that will customize your Monolog instance. This class only needs a single method: `__invoke`, which receives an `Illuminate\\Log\\Logger` instance. The `Illuminate\\Log\\Logger` instance proxies all method calls to the underlying Monolog instance:"
msgstr ""

#: ./docs/8.x/logging.md:289
#: ./docs/9.x/logging.md:316
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Logging;\n\n"
"use Monolog\\Formatter\\LineFormatter;\n\n"
"class CustomizeFormatter\n"
"{\n"
"    /**\n"
"     * Customize the given logger instance.\n"
"     *\n"
"     * @param  \\Illuminate\\Log\\Logger  $logger\n"
"     * @return void\n"
"     */\n"
"    public function __invoke($logger)\n"
"    {\n"
"        foreach ($logger->getHandlers() as $handler) {\n"
"            $handler->setFormatter(new LineFormatter(\n"
"                '[%datetime%] %channel%.%level_name%: %message% %context% %extra%'\n"
"            ));\n"
"        }\n"
"    }\n"
"}"
msgstr ""

#: ./docs/10.x/logging.md:290
#: ./docs/11.x/logging.md:299
#: ./docs/master/logging.md:299
msgctxt "P"
msgid "If you need to share log context while processing queued jobs, you may utilize [job middleware](/docs/{{version}}/queues#job-middleware)."
msgstr ""

#: ./docs/10.x/logging.md:293
#: ./docs/11.x/logging.md:302
#: ./docs/master/logging.md:302
msgctxt "H3"
msgid "Writing to Specific Channels"
msgstr ""

#: ./docs/8.x/logging.md:313
#: ./docs/9.x/logging.md:341
#: ./docs/10.x/logging.md:370
#: ./docs/11.x/logging.md:380
#: ./docs/master/logging.md:380
msgctxt "P"
msgid "All of your \"tap\" classes are resolved by the [service container](/docs/{{version}}/container), so any constructor dependencies they require will automatically be injected."
msgstr ""

#: ./docs/8.x/logging.md:315
#: ./docs/9.x/logging.md:343
#: ./docs/10.x/logging.md:372
#: ./docs/11.x/logging.md:382
#: ./docs/master/logging.md:382
#~ msgctxt "P"
#~ msgid "<a name=\"creating-monolog-handler-channels\"></a>"
#~ msgstr ""

#: ./docs/8.x/logging.md:316
#: ./docs/9.x/logging.md:344
#: ./docs/10.x/logging.md:373
#: ./docs/11.x/logging.md:383
#: ./docs/master/logging.md:383
msgctxt "H3"
msgid "Creating Monolog Handler Channels"
msgstr ""

#: ./docs/8.x/logging.md:318
#: ./docs/9.x/logging.md:346
#: ./docs/10.x/logging.md:375
#: ./docs/11.x/logging.md:385
#: ./docs/master/logging.md:385
msgctxt "P"
msgid "Monolog has a variety of [available handlers](https://github.com/Seldaek/monolog/tree/main/src/Monolog/Handler) and Laravel does not include a built-in channel for each one. In some cases, you may wish to create a custom channel that is merely an instance of a specific Monolog handler that does not have a corresponding Laravel log driver.  These channels can be easily created using the `monolog` driver."
msgstr ""

#: ./docs/8.x/logging.md:320
#: ./docs/9.x/logging.md:348
#: ./docs/10.x/logging.md:377
#: ./docs/11.x/logging.md:387
#: ./docs/master/logging.md:387
msgctxt "P"
msgid "When using the `monolog` driver, the `handler` configuration option is used to specify which handler will be instantiated. Optionally, any constructor parameters the handler needs may be specified using the `with` configuration option:"
msgstr ""

#: ./docs/8.x/logging.md:322
#: ./docs/9.x/logging.md:350
#: ./docs/10.x/logging.md:379
#: ./docs/11.x/logging.md:389
#: ./docs/master/logging.md:389
msgctxt "CODE"
msgid "'logentries' => [\n"
"    'driver'  => 'monolog',\n"
"    'handler' => Monolog\\Handler\\SyslogUdpHandler::class,\n"
"    'with' => [\n"
"        'host' => 'my.logentries.internal.datahubhost.company.com',\n"
"        'port' => '10000',\n"
"    ],\n"
"],"
msgstr ""

#: ./docs/8.x/logging.md:331
#: ./docs/9.x/logging.md:359
#: ./docs/10.x/logging.md:388
#: ./docs/11.x/logging.md:398
#: ./docs/master/logging.md:398
#~ msgctxt "P"
#~ msgid "<a name=\"monolog-formatters\"></a>"
#~ msgstr ""

#: ./docs/10.x/logging.md:332
#: ./docs/11.x/logging.md:341
#: ./docs/master/logging.md:341
msgctxt "H3"
msgid "Customizing Monolog for Channels"
msgstr ""

#: ./docs/8.x/logging.md:332
#: ./docs/9.x/logging.md:360
#: ./docs/10.x/logging.md:389
#: ./docs/11.x/logging.md:399
#: ./docs/master/logging.md:399
msgctxt "H4"
msgid "Monolog Formatters"
msgstr ""

#: ./docs/8.x/logging.md:334
#: ./docs/9.x/logging.md:362
#: ./docs/10.x/logging.md:391
#: ./docs/11.x/logging.md:401
#: ./docs/master/logging.md:401
msgctxt "P"
msgid "When using the `monolog` driver, the Monolog `LineFormatter` will be used as the default formatter. However, you may customize the type of formatter passed to the handler using the `formatter` and `formatter_with` configuration options:"
msgstr ""

#: ./docs/8.x/logging.md:336
#: ./docs/9.x/logging.md:364
#: ./docs/10.x/logging.md:393
#: ./docs/11.x/logging.md:403
#: ./docs/master/logging.md:403
msgctxt "CODE"
msgid "'browser' => [\n"
"    'driver' => 'monolog',\n"
"    'handler' => Monolog\\Handler\\BrowserConsoleHandler::class,\n"
"    'formatter' => Monolog\\Formatter\\HtmlFormatter::class,\n"
"    'formatter_with' => [\n"
"        'dateFormat' => 'Y-m-d',\n"
"    ],\n"
"],"
msgstr ""

#: ./docs/8.x/logging.md:345
#: ./docs/9.x/logging.md:373
#: ./docs/10.x/logging.md:402
#: ./docs/11.x/logging.md:412
#: ./docs/master/logging.md:412
msgctxt "P"
msgid "If you are using a Monolog handler that is capable of providing its own formatter, you may set the value of the `formatter` configuration option to `default`:"
msgstr ""

#: ./docs/10.x/logging.md:347
#: ./docs/11.x/logging.md:357
#: ./docs/master/logging.md:357
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Logging;\n\n"
"use Illuminate\\Log\\Logger;\n"
"use Monolog\\Formatter\\LineFormatter;\n\n"
"class CustomizeFormatter\n"
"{\n"
"    /**\n"
"     * Customize the given logger instance.\n"
"     */\n"
"    public function __invoke(Logger $logger): void\n"
"    {\n"
"        foreach ($logger->getHandlers() as $handler) {\n"
"            $handler->setFormatter(new LineFormatter(\n"
"                '[%datetime%] %channel%.%level_name%: %message% %context% %extra%'\n"
"            ));\n"
"        }\n"
"    }\n"
"}"
msgstr ""

#: ./docs/11.x/logging.md:347
#: ./docs/master/logging.md:347
msgctxt "CODE"
msgid "'single' => [\n"
"    'driver' => 'single',\n"
"    'tap' => [App\\Logging\\CustomizeFormatter::class],\n"
"    'path' => storage_path('logs/laravel.log'),\n"
"    'level' => env('LOG_LEVEL', 'debug'),\n"
"    'replace_placeholders' => true,\n"
"],"
msgstr ""

#: ./docs/8.x/logging.md:347
#: ./docs/9.x/logging.md:375
#: ./docs/10.x/logging.md:404
#: ./docs/11.x/logging.md:414
#: ./docs/master/logging.md:414
msgctxt "CODE"
msgid "'newrelic' => [\n"
"    'driver' => 'monolog',\n"
"    'handler' => Monolog\\Handler\\NewRelicHandler::class,\n"
"    'formatter' => 'default',\n"
"],"
msgstr ""

#: ./docs/8.x/logging.md:353
#: ./docs/9.x/logging.md:381
#: ./docs/10.x/logging.md:437
#: ./docs/11.x/logging.md:445
#: ./docs/master/logging.md:447
#~ msgctxt "P"
#~ msgid "<a name=\"creating-custom-channels-via-factories\"></a>"
#~ msgstr ""

#: ./docs/8.x/logging.md:354
#: ./docs/9.x/logging.md:382
msgctxt "H3"
msgid "Creating Custom Channels Via Factories"
msgstr ""

#: ./docs/8.x/logging.md:356
#: ./docs/9.x/logging.md:384
#: ./docs/10.x/logging.md:440
#: ./docs/11.x/logging.md:448
#: ./docs/master/logging.md:450
msgctxt "P"
msgid "If you would like to define an entirely custom channel in which you have full control over Monolog's instantiation and configuration, you may specify a `custom` driver type in your `config/logging.php` configuration file. Your configuration should include a `via` option that contains the name of the factory class which will be invoked to create the Monolog instance:"
msgstr ""

#: ./docs/8.x/logging.md:358
#: ./docs/9.x/logging.md:386
#: ./docs/10.x/logging.md:442
#: ./docs/11.x/logging.md:450
#: ./docs/master/logging.md:452
msgctxt "CODE"
msgid "'channels' => [\n"
"    'example-custom-channel' => [\n"
"        'driver' => 'custom',\n"
"        'via' => App\\Logging\\CreateCustomLogger::class,\n"
"    ],\n"
"],"
msgstr ""

#: ./docs/8.x/logging.md:365
#: ./docs/9.x/logging.md:393
#: ./docs/10.x/logging.md:449
#: ./docs/11.x/logging.md:457
#: ./docs/master/logging.md:459
msgctxt "P"
msgid "Once you have configured the `custom` driver channel, you're ready to define the class that will create your Monolog instance. This class only needs a single `__invoke` method which should return the Monolog logger instance. The method will receive the channels configuration array as its only argument:"
msgstr ""

#: ./docs/8.x/logging.md:367
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Logging;\n\n"
"use Monolog\\Logger;\n\n"
"class CreateCustomLogger\n"
"{\n"
"    /**\n"
"     * Create a custom Monolog instance.\n"
"     *\n"
"     * @param  array  $config\n"
"     * @return \\Monolog\\Logger\n"
"     */\n"
"    public function __invoke(array $config)\n"
"    {\n"
"        return new Logger(...);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/9.x/logging.md:395
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Logging;\n\n"
"use Monolog\\Logger;\n\n"
"class CreateCustomLogger\n"
"{\n"
"    /**\n"
"     * Create a custom Monolog instance.\n"
"     *\n"
"     * @param  array  $config\n"
"     * @return \\Monolog\\Logger\n"
"     */\n"
"    public function __invoke(array $config)\n"
"    {\n"
"        return new Logger(/* ... */);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/10.x/logging.md:411
#: ./docs/11.x/logging.md:420
#: ./docs/master/logging.md:421
#~ msgctxt "P"
#~ msgid "<a name=\"monolog-processors\"></a>"
#~ msgstr ""

#: ./docs/10.x/logging.md:412
#: ./docs/11.x/logging.md:421
#: ./docs/master/logging.md:422
msgctxt "H4"
msgid "Monolog Processors"
msgstr ""

#: ./docs/10.x/logging.md:414
#: ./docs/11.x/logging.md:423
#: ./docs/master/logging.md:424
msgctxt "P"
msgid "Monolog can also process messages before logging them. You can create your own processors or use the [existing processors offered by Monolog](https://github.com/Seldaek/monolog/tree/main/src/Monolog/Processor)."
msgstr ""

#: ./docs/10.x/logging.md:416
#: ./docs/11.x/logging.md:425
#: ./docs/master/logging.md:426
msgctxt "P"
msgid "If you would like to customize the processors for a `monolog` driver, add a `processors` configuration value to your channel's configuration:"
msgstr ""

#: ./docs/10.x/logging.md:418
#: ./docs/11.x/logging.md:427
#: ./docs/master/logging.md:428
msgctxt "CODE"
msgid " 'memory' => [\n"
"     'driver' => 'monolog',\n"
"     'handler' => Monolog\\Handler\\StreamHandler::class,\n"
"     'with' => [\n"
"         'stream' => 'php://stderr',\n"
"     ],\n"
"     'processors' => [\n"
"         // Simple syntax...\n"
"         Monolog\\Processor\\MemoryUsageProcessor::class,\n\n"
"         // With options...\n"
"         [\n"
"            'processor' => Monolog\\Processor\\PsrLogMessageProcessor::class,\n"
"            'with' => ['removeUsedContextFields' => true],\n"
"        ],\n"
"     ],\n"
" ],"
msgstr ""

#: ./docs/10.x/logging.md:438
#: ./docs/11.x/logging.md:446
#: ./docs/master/logging.md:448
msgctxt "H3"
msgid "Creating Custom Channels via Factories"
msgstr ""

#: ./docs/10.x/logging.md:451
#: ./docs/11.x/logging.md:459
#: ./docs/master/logging.md:461
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Logging;\n\n"
"use Monolog\\Logger;\n\n"
"class CreateCustomLogger\n"
"{\n"
"    /**\n"
"     * Create a custom Monolog instance.\n"
"     */\n"
"    public function __invoke(array $config): Logger\n"
"    {\n"
"        return new Logger(/* ... */);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/10.x/logging.md:468
#: ./docs/11.x/logging.md:476
#: ./docs/master/logging.md:478
#~ msgctxt "P"
#~ msgid "<a name=\"tailing-log-messages-using-pail\"></a>"
#~ msgstr ""

#: ./docs/10.x/logging.md:469
#: ./docs/11.x/logging.md:477
#: ./docs/master/logging.md:479
msgctxt "H2"
msgid "Tailing Log Messages Using Pail"
msgstr ""

#: ./docs/10.x/logging.md:471
#: ./docs/11.x/logging.md:479
#: ./docs/master/logging.md:481
msgctxt "P"
msgid "Often you may need to tail your application's logs in real time. For example, when debugging an issue or when monitoring your application's logs for specific types of errors."
msgstr ""

#: ./docs/10.x/logging.md:473
#: ./docs/11.x/logging.md:481
#: ./docs/master/logging.md:483
msgctxt "P"
msgid "Laravel Pail is a package that allows you to easily dive into your Laravel application's log files directly from the command line. Unlike the standard `tail` command, Pail is designed to work with any log driver, including Sentry or Flare. In addition, Pail provides a set of useful filters to help you quickly find what you're looking for."
msgstr ""

#: ./docs/10.x/logging.md:477
#: ./docs/11.x/logging.md:485
#: ./docs/master/logging.md:487
#~ msgctxt "P"
#~ msgid "<a name=\"pail-installation\"></a>"
#~ msgstr ""

#: ./docs/10.x/logging.md:478
#: ./docs/11.x/logging.md:486
#: ./docs/master/logging.md:488
msgctxt "H3"
msgid "Installation"
msgstr ""

#: ./docs/10.x/logging.md:481
#: ./docs/11.x/logging.md:489
#: ./docs/master/logging.md:491
msgctxt "P"
msgid "Laravel Pail requires [PHP 8.2+](https://php.net/releases/) and the [PCNTL](https://www.php.net/manual/en/book.pcntl.php) extension."
msgstr ""

#: ./docs/10.x/logging.md:483
#: ./docs/11.x/logging.md:491
#: ./docs/master/logging.md:493
msgctxt "P"
msgid "To get started, install Pail into your project using the Composer package manager:"
msgstr ""

#: ./docs/10.x/logging.md:485
#: ./docs/11.x/logging.md:493
#: ./docs/master/logging.md:495
msgctxt "CODE: bash"
msgid "composer require laravel/pail"
msgstr ""

#: ./docs/10.x/logging.md:489
#: ./docs/11.x/logging.md:497
#: ./docs/master/logging.md:499
#~ msgctxt "P"
#~ msgid "<a name=\"pail-usage\"></a>"
#~ msgstr ""

#: ./docs/10.x/logging.md:490
#: ./docs/11.x/logging.md:498
#: ./docs/master/logging.md:500
msgctxt "H3"
msgid "Usage"
msgstr ""

#: ./docs/10.x/logging.md:492
#: ./docs/11.x/logging.md:500
#: ./docs/master/logging.md:502
msgctxt "P"
msgid "To start tailing logs, run the `pail` command:"
msgstr ""

#: ./docs/10.x/logging.md:494
#: ./docs/11.x/logging.md:502
#: ./docs/master/logging.md:504
msgctxt "CODE: bash"
msgid "php artisan pail"
msgstr ""

#: ./docs/10.x/logging.md:498
#: ./docs/11.x/logging.md:506
#: ./docs/master/logging.md:508
msgctxt "P"
msgid "To increase the verbosity of the output and avoid truncation (…), use the `-v` option:"
msgstr ""

#: ./docs/10.x/logging.md:500
#: ./docs/11.x/logging.md:508
#: ./docs/master/logging.md:510
msgctxt "CODE: bash"
msgid "php artisan pail -v"
msgstr ""

#: ./docs/10.x/logging.md:504
#: ./docs/11.x/logging.md:512
#: ./docs/master/logging.md:514
msgctxt "P"
msgid "For maximum verbosity and to display exception stack traces, use the `-vv` option:"
msgstr ""

#: ./docs/10.x/logging.md:506
#: ./docs/11.x/logging.md:514
#: ./docs/master/logging.md:516
msgctxt "CODE: bash"
msgid "php artisan pail -vv"
msgstr ""

#: ./docs/10.x/logging.md:510
#: ./docs/11.x/logging.md:518
#: ./docs/master/logging.md:520
msgctxt "P"
msgid "To stop tailing logs, press `Ctrl+C` at any time."
msgstr ""

#: ./docs/10.x/logging.md:512
#: ./docs/11.x/logging.md:520
#: ./docs/master/logging.md:522
#~ msgctxt "P"
#~ msgid "<a name=\"pail-filtering-logs\"></a>"
#~ msgstr ""

#: ./docs/10.x/logging.md:513
#: ./docs/11.x/logging.md:521
#: ./docs/master/logging.md:523
msgctxt "H3"
msgid "Filtering Logs"
msgstr ""

#: ./docs/10.x/logging.md:515
#: ./docs/11.x/logging.md:523
#: ./docs/master/logging.md:525
#~ msgctxt "P"
#~ msgid "<a name=\"pail-filtering-logs-filter-option\"></a>"
#~ msgstr ""

#: ./docs/10.x/logging.md:516
#: ./docs/11.x/logging.md:524
#: ./docs/master/logging.md:526
msgctxt "H4"
msgid "`--filter`"
msgstr ""

#: ./docs/10.x/logging.md:518
#: ./docs/11.x/logging.md:526
#: ./docs/master/logging.md:528
msgctxt "P"
msgid "You may use the `--filter` option to filter logs by their type, file, message, and stack trace content:"
msgstr ""

#: ./docs/10.x/logging.md:520
#: ./docs/11.x/logging.md:528
#: ./docs/master/logging.md:530
msgctxt "CODE: bash"
msgid "php artisan pail --filter=\"QueryException\""
msgstr ""

#: ./docs/10.x/logging.md:524
#: ./docs/11.x/logging.md:532
#: ./docs/master/logging.md:534
#~ msgctxt "P"
#~ msgid "<a name=\"pail-filtering-logs-message-option\"></a>"
#~ msgstr ""

#: ./docs/10.x/logging.md:525
#: ./docs/11.x/logging.md:533
#: ./docs/master/logging.md:535
msgctxt "H4"
msgid "`--message`"
msgstr ""

#: ./docs/10.x/logging.md:527
#: ./docs/11.x/logging.md:535
#: ./docs/master/logging.md:537
msgctxt "P"
msgid "To filter logs by only their message, you may use the `--message` option:"
msgstr ""

#: ./docs/10.x/logging.md:529
#: ./docs/11.x/logging.md:537
#: ./docs/master/logging.md:539
msgctxt "CODE: bash"
msgid "php artisan pail --message=\"User created\""
msgstr ""

#: ./docs/10.x/logging.md:533
#: ./docs/11.x/logging.md:541
#: ./docs/master/logging.md:543
#~ msgctxt "P"
#~ msgid "<a name=\"pail-filtering-logs-level-option\"></a>"
#~ msgstr ""

#: ./docs/10.x/logging.md:534
#: ./docs/11.x/logging.md:542
#: ./docs/master/logging.md:544
msgctxt "H4"
msgid "`--level`"
msgstr ""

#: ./docs/10.x/logging.md:536
#: ./docs/11.x/logging.md:544
#: ./docs/master/logging.md:546
msgctxt "P"
msgid "The `--level` option may be used to filter logs by their [log level](#log-levels):"
msgstr ""

#: ./docs/10.x/logging.md:538
#: ./docs/11.x/logging.md:546
#: ./docs/master/logging.md:548
msgctxt "CODE: bash"
msgid "php artisan pail --level=error"
msgstr ""

#: ./docs/10.x/logging.md:542
#: ./docs/11.x/logging.md:550
#: ./docs/master/logging.md:552
#~ msgctxt "P"
#~ msgid "<a name=\"pail-filtering-logs-user-option\"></a>"
#~ msgstr ""

#: ./docs/10.x/logging.md:543
#: ./docs/11.x/logging.md:551
#: ./docs/master/logging.md:553
msgctxt "H4"
msgid "`--user`"
msgstr ""

#: ./docs/10.x/logging.md:545
#: ./docs/11.x/logging.md:553
#: ./docs/master/logging.md:555
msgctxt "P"
msgid "To only display logs that were written while a given user was authenticated, you may provide the user's ID to the `--user` option:"
msgstr ""

#: ./docs/10.x/logging.md:547
#: ./docs/11.x/logging.md:555
#: ./docs/master/logging.md:557
msgctxt "CODE: bash"
msgid "php artisan pail --user=1"
msgstr ""

