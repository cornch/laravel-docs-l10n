# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Taylor Otwell
# This file is distributed under the same license as the Laravel Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2021-03-30 14:06+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title #
#: docs/8.x/redis.md:1
#, markdown-text, no-wrap
msgid "Redis"
msgstr ""

#. type: Bullet: '- '
#: docs/8.x/redis.md:12
#, markdown-text
msgid "[Introduction](#introduction)"
msgstr ""

#. type: Bullet: '- '
#: docs/8.x/redis.md:12
#, markdown-text
msgid "[Configuration](#configuration)"
msgstr ""

#. type: Bullet: '    - '
#: docs/8.x/redis.md:12
#, markdown-text
msgid "[Clusters](#clusters)"
msgstr ""

#. type: Bullet: '    - '
#: docs/8.x/redis.md:12
#, markdown-text
msgid "[Predis](#predis)"
msgstr ""

#. type: Bullet: '    - '
#: docs/8.x/redis.md:12
#, markdown-text
msgid "[phpredis](#phpredis)"
msgstr ""

#. type: Bullet: '- '
#: docs/8.x/redis.md:12
#, markdown-text
msgid "[Interacting With Redis](#interacting-with-redis)"
msgstr ""

#. type: Bullet: '    - '
#: docs/8.x/redis.md:12
#, markdown-text
msgid "[Transactions](#transactions)"
msgstr ""

#. type: Bullet: '    - '
#: docs/8.x/redis.md:12
#, markdown-text
msgid "[Pipelining Commands](#pipelining-commands)"
msgstr ""

#. type: Bullet: '- '
#: docs/8.x/redis.md:12
#, markdown-text
msgid "[Pub / Sub](#pubsub)"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:14
#, markdown-text, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/redis.md:14
#, markdown-text, no-wrap
msgid "Introduction"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:17
#, markdown-text
msgid ""
"[Redis](https://redis.io) is an open source, advanced key-value store. It is "
"often referred to as a data structure server since keys can contain "
"[strings](https://redis.io/topics/data-types#strings), "
"[hashes](https://redis.io/topics/data-types#hashes), "
"[lists](https://redis.io/topics/data-types#lists), "
"[sets](https://redis.io/topics/data-types#sets), and [sorted "
"sets](https://redis.io/topics/data-types#sorted-sets)."
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:19
#, markdown-text
msgid ""
"Before using Redis with Laravel, we encourage you to install and use the "
"[phpredis](https://github.com/phpredis/phpredis) PHP extension via PECL. The "
"extension is more complex to install compared to \"user-land\" PHP packages "
"but may yield better performance for applications that make heavy use of "
"Redis. If you are using [Laravel Sail](/docs/{{version}}/sail), this "
"extension is already installed in your application's Docker container."
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:21
#, markdown-text
msgid ""
"If you are unable to install the phpredis extension, you may install the "
"`predis/predis` package via Composer. Predis is a Redis client written "
"entirely in PHP and does not require any additional extensions:"
msgstr ""

#. type: Fenced code block (bash)
#: docs/8.x/redis.md:22
#, no-wrap
msgid "composer require predis/predis\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:27
#, markdown-text, no-wrap
msgid "<a name=\"configuration\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/redis.md:27
#, markdown-text, no-wrap
msgid "Configuration"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:30
#, markdown-text
msgid ""
"You may configure your application's Redis settings via the "
"`config/database.php` configuration file. Within this file, you will see a "
"`redis` array containing the Redis servers utilized by your application:"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:32 docs/8.x/redis.md:54 docs/8.x/redis.md:73
#: docs/8.x/redis.md:92 docs/8.x/redis.md:113 docs/8.x/redis.md:132
#: docs/8.x/redis.md:159
#, markdown-text, no-wrap
msgid "    'redis' => [\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:34 docs/8.x/redis.md:56 docs/8.x/redis.md:75
#: docs/8.x/redis.md:94 docs/8.x/redis.md:115 docs/8.x/redis.md:161
#, markdown-text, no-wrap
msgid "        'client' => env('REDIS_CLIENT', 'phpredis'),\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:41
#, markdown-text, no-wrap
msgid ""
"        'default' => [\n"
"            'host' => env('REDIS_HOST', '127.0.0.1'),\n"
"            'password' => env('REDIS_PASSWORD', null),\n"
"            'port' => env('REDIS_PORT', 6379),\n"
"            'database' => env('REDIS_DB', 0),\n"
"        ],\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:48
#, markdown-text, no-wrap
msgid ""
"        'cache' => [\n"
"            'host' => env('REDIS_HOST', '127.0.0.1'),\n"
"            'password' => env('REDIS_PASSWORD', null),\n"
"            'port' => env('REDIS_PORT', 6379),\n"
"            'database' => env('REDIS_CACHE_DB', 1),\n"
"        ],\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:50 docs/8.x/redis.md:66 docs/8.x/redis.md:85
#: docs/8.x/redis.md:107 docs/8.x/redis.md:125
#, markdown-text, no-wrap
msgid "    ],\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:52
#, markdown-text
msgid ""
"Each Redis server defined in your configuration file is required to have a "
"name, host, and a port unless you define a single URL to represent the Redis "
"connection:"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:60
#, markdown-text, no-wrap
msgid ""
"        'default' => [\n"
"            'url' => 'tcp://127.0.0.1:6379?database=0',\n"
"        ],\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:64
#, markdown-text, no-wrap
msgid ""
"        'cache' => [\n"
"            'url' => 'tls://user:password@127.0.0.1:6380?database=1',\n"
"        ],\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:68
#, markdown-text, no-wrap
msgid "<a name=\"configuring-the-connection-scheme\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/redis.md:68
#, markdown-text, no-wrap
msgid "Configuring The Connection Scheme"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:71
#, markdown-text
msgid ""
"By default, Redis clients will use the `tcp` scheme when connecting to your "
"Redis servers; however, you may use TLS / SSL encryption by specifying a "
"`scheme` configuration option in your Redis server's configuration array:"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:83
#, markdown-text, no-wrap
msgid ""
"        'default' => [\n"
"            'scheme' => 'tls',\n"
"            'host' => env('REDIS_HOST', '127.0.0.1'),\n"
"            'password' => env('REDIS_PASSWORD', null),\n"
"            'port' => env('REDIS_PORT', 6379),\n"
"            'database' => env('REDIS_DB', 0),\n"
"        ],\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:87
#, markdown-text, no-wrap
msgid "<a name=\"clusters\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/redis.md:87
#, markdown-text, no-wrap
msgid "Clusters"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:90
#, markdown-text
msgid ""
"If your application is utilizing a cluster of Redis servers, you should "
"define these clusters within a `clusters` key of your Redis "
"configuration. This configuration key does not exist by default so you will "
"need to create it within your application's `config/database.php` "
"configuration file:"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:105
#, markdown-text, no-wrap
msgid ""
"        'clusters' => [\n"
"            'default' => [\n"
"                [\n"
"                    'host' => env('REDIS_HOST', 'localhost'),\n"
"                    'password' => env('REDIS_PASSWORD', null),\n"
"                    'port' => env('REDIS_PORT', 6379),\n"
"                    'database' => 0,\n"
"                ],\n"
"            ],\n"
"        ],\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:109
#, markdown-text
msgid ""
"By default, clusters will perform client-side sharding across your nodes, "
"allowing you to pool nodes and create a large amount of available "
"RAM. However, client-side sharding does not handle failover; therefore, it "
"is primarily suited for transient cached data that is available from another "
"primary data store."
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:111
#, markdown-text
msgid ""
"If you would like to use native Redis clustering instead of client-side "
"sharding, you may specify this by setting the `options.cluster` "
"configuration value to `redis` within your application's "
"`config/database.php` configuration file:"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:119
#, markdown-text, no-wrap
msgid ""
"        'options' => [\n"
"            'cluster' => env('REDIS_CLUSTER', 'redis'),\n"
"        ],\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:123
#, markdown-text, no-wrap
msgid ""
"        'clusters' => [\n"
"            // ...\n"
"        ],\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:127
#, markdown-text, no-wrap
msgid "<a name=\"predis\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/redis.md:127
#, markdown-text, no-wrap
msgid "Predis"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:130
#, markdown-text
msgid ""
"If you would like your application to interact with Redis via the Predis "
"package, you should ensure the `REDIS_CLIENT` environment variable's value "
"is `predis`:"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:134
#, markdown-text, no-wrap
msgid "        'client' => env('REDIS_CLIENT', 'predis'),\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:137 docs/8.x/redis.md:164
#, markdown-text, no-wrap
msgid ""
"        // Rest of Redis configuration...\n"
"    ],\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:139
#, markdown-text
msgid ""
"In addition to the default `host`, `port`, `database`, and `password` server "
"configuration options, Predis supports additional [connection "
"parameters](https://github.com/nrk/predis/wiki/Connection-Parameters) that "
"may be defined for each of your Redis servers. To utilize these additional "
"configuration options, add them to your Redis server configuration in your "
"application's `config/database.php` configuration file:"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:147
#, markdown-text, no-wrap
msgid ""
"    'default' => [\n"
"        'host' => env('REDIS_HOST', 'localhost'),\n"
"        'password' => env('REDIS_PASSWORD', null),\n"
"        'port' => env('REDIS_PORT', 6379),\n"
"        'database' => 0,\n"
"        'read_write_timeout' => 60,\n"
"    ],\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:149
#, markdown-text, no-wrap
msgid "<a name=\"the-redis-facade-alias\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/redis.md:149
#, markdown-text, no-wrap
msgid "The Redis Facade Alias"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:152
#, markdown-text
msgid ""
"Laravel's `config/app.php` configuration file contains an `aliases` array "
"which defines all of the class aliases that will be registered by the "
"framework. For convenience, an alias entry is included for each "
"[facade](/docs/{{version}}/facades) offered by Laravel; however, the `Redis` "
"alias is disabled because it conflicts with the `Redis` class name provided "
"by the phpredis extension. If you are using the Predis client and would like "
"to enable this alias, you may un-comment the alias in your application's "
"`config/app.php` configuration file."
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:154
#, markdown-text, no-wrap
msgid "<a name=\"phpredis\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/redis.md:154
#, markdown-text, no-wrap
msgid "phpredis"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:157
#, markdown-text
msgid ""
"By default, Laravel will use the phpredis extension to communicate with "
"Redis. The client that Laravel will use to communicate with Redis is "
"dictated by the value of the `redis.client` configuration option, which "
"typically reflects the value of the `REDIS_CLIENT` environment variable:"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:166
#, markdown-text
msgid ""
"In addition to the default `host`, `port`, `database`, and `password` server "
"configuration options, phpredis supports the following additional connection "
"parameters: `name`, `persistent`, `prefix`, `read_timeout`, "
"`retry_interval`, `timeout`, and `context`. You may add any of these options "
"to your Redis server configuration in the `config/database.php` "
"configuration file:"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:178
#, markdown-text, no-wrap
msgid ""
"    'default' => [\n"
"        'host' => env('REDIS_HOST', 'localhost'),\n"
"        'password' => env('REDIS_PASSWORD', null),\n"
"        'port' => env('REDIS_PORT', 6379),\n"
"        'database' => 0,\n"
"        'read_timeout' => 60,\n"
"        'context' => [\n"
"            // 'auth' => ['username', 'secret'],\n"
"            // 'stream' => ['verify_peer' => false],\n"
"        ],\n"
"    ],\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:180
#, markdown-text, no-wrap
msgid "<a name=\"interacting-with-redis\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/redis.md:180
#, markdown-text, no-wrap
msgid "Interacting With Redis"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:183
#, markdown-text
msgid ""
"You may interact with Redis by calling various methods on the `Redis` "
"[facade](/docs/{{version}}/facades). The `Redis` facade supports dynamic "
"methods, meaning you may call any [Redis command](https://redis.io/commands) "
"on the facade and the command will be passed directly to Redis. In this "
"example, we will call the Redis `GET` command by calling the `get` method on "
"the `Redis` facade:"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:185 docs/8.x/redis.md:285
#, markdown-text, no-wrap
msgid "    <?php\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:187
#, markdown-text, no-wrap
msgid "    namespace App\\Http\\Controllers;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:190
#, markdown-text, no-wrap
msgid ""
"    use App\\Http\\Controllers\\Controller;\n"
"    use Illuminate\\Support\\Facades\\Redis;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:206
#, markdown-text, no-wrap
msgid ""
"    class UserController extends Controller\n"
"    {\n"
"        /**\n"
"         * Show the profile for the given user.\n"
"         *\n"
"         * @param  int  $id\n"
"         * @return \\Illuminate\\Http\\Response\n"
"         */\n"
"        public function show($id)\n"
"        {\n"
"            return view('user.profile', [\n"
"                'user' => Redis::get('user:profile:'.$id)\n"
"            ]);\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:208
#, markdown-text
msgid ""
"As mentioned above, you may call any of Redis' commands on the `Redis` "
"facade. Laravel uses magic methods to pass the commands to the Redis "
"server. If a Redis command expects arguments, you should pass those to the "
"facade's corresponding method:"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:210 docs/8.x/redis.md:236 docs/8.x/redis.md:270
#: docs/8.x/redis.md:323
#, markdown-text, no-wrap
msgid "    use Illuminate\\Support\\Facades\\Redis;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:212
#, markdown-text, no-wrap
msgid "    Redis::set('name', 'Taylor');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:214
#, markdown-text, no-wrap
msgid "    $values = Redis::lrange('names', 5, 10);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:216
#, markdown-text
msgid ""
"Alternatively, you may pass commands to the server using the `Redis` "
"facade's `command` method, which accepts the name of the command as its "
"first argument and an array of values as its second argument:"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:218
#, markdown-text, no-wrap
msgid "    $values = Redis::command('lrange', ['name', 5, 10]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:220
#, markdown-text, no-wrap
msgid "<a name=\"using-multiple-redis-connections\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/redis.md:220
#, markdown-text, no-wrap
msgid "Using Multiple Redis Connections"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:223
#, markdown-text
msgid ""
"Your application's `config/database.php` configuration file allows you to "
"define multiple Redis connections / servers. You may obtain a connection to "
"a specific Redis connection using the `Redis` facade's `connection` method:"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:225
#, markdown-text, no-wrap
msgid "    $redis = Redis::connection('connection-name');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:227
#, markdown-text
msgid ""
"To obtain an instance of the default Redis connection, you may call the "
"`connection` method without any additional arguments:"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:229
#, markdown-text, no-wrap
msgid "    $redis = Redis::connection();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:231
#, markdown-text, no-wrap
msgid "<a name=\"transactions\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/redis.md:231
#, markdown-text, no-wrap
msgid "Transactions"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:234
#, markdown-text
msgid ""
"The `Redis` facade's `transaction` method provides a convenient wrapper "
"around Redis' native `MULTI` and `EXEC` commands. The `transaction` method "
"accepts a closure as its only argument. This closure will receive a Redis "
"connection instance and may issue any commands it would like to this "
"instance. All of the Redis commands issued within the closure will be "
"executed in a single, atomic transaction:"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:241
#, markdown-text, no-wrap
msgid ""
"    Redis::transaction(function ($redis) {\n"
"        $redis->incr('user_visits', 1);\n"
"        $redis->incr('total_visits', 1);\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:243
#, markdown-text, no-wrap
msgid ""
"> {note} When defining a Redis transaction, you may not retrieve any values "
"from the Redis connection. Remember, your transaction is executed as a "
"single, atomic operation and that operation is not executed until your "
"entire closure has finished executing its commands.\n"
msgstr ""

#. type: Title ####
#: docs/8.x/redis.md:244
#, markdown-text, no-wrap
msgid "Lua Scripts"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:247
#, markdown-text
msgid ""
"The `eval` method provides another method of executing multiple Redis "
"commands in a single, atomic operation. However, the `eval` method has the "
"benefit of being able to interact with and inspect Redis key values during "
"that operation. Redis scripts are written in the [Lua programming "
"language](https://www.lua.org)."
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:249
#, markdown-text
msgid ""
"The `eval` method can be a bit scary at first, but we'll explore a basic "
"example to break the ice. The `eval` method expects several "
"arguments. First, you should pass the Lua script (as a string) to the "
"method. Secondly, you should pass the number of keys (as an integer) that "
"the script interacts with. Thirdly, you should pass the names of those "
"keys. Finally, you may pass any other additional arguments that you need to "
"access within your script."
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:251
#, markdown-text
msgid ""
"In this example, we will increment a counter, inspect its new value, and "
"increment a second counter if the first counter's value is greater than "
"five. Finally, we will return the value of the first counter:"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:254
#, markdown-text, no-wrap
msgid ""
"    $value = Redis::eval(<<<'LUA'\n"
"        local counter = redis.call(\"incr\", KEYS[1])\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:258
#, markdown-text, no-wrap
msgid ""
"        if counter > 5 then\n"
"            redis.call(\"incr\", KEYS[2])\n"
"        end\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:261
#, markdown-text, no-wrap
msgid ""
"        return counter\n"
"    LUA, 2, 'first-counter', 'second-counter');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:263
#, markdown-text, no-wrap
msgid ""
"> {note} Please consult the [Redis "
"documentation](https://redis.io/commands/eval) for more information on Redis "
"scripting.\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:265
#, markdown-text, no-wrap
msgid "<a name=\"pipelining-commands\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/redis.md:265
#, markdown-text, no-wrap
msgid "Pipelining Commands"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:268
#, markdown-text
msgid ""
"Sometimes you may need to execute dozens of Redis commands. Instead of "
"making a network trip to your Redis server for each command, you may use the "
"`pipeline` method. The `pipeline` method accepts one argument: a closure "
"that receives a Redis instance. You may issue all of your commands to this "
"Redis instance and they will all be sent to the Redis server at the same "
"time to reduce network trips to the server. The commands will still be "
"executed in the order they were issued:"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:276
#, markdown-text, no-wrap
msgid ""
"    Redis::pipeline(function ($pipe) {\n"
"        for ($i = 0; $i < 1000; $i++) {\n"
"            $pipe->set(\"key:$i\", $i);\n"
"        }\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:278
#, markdown-text, no-wrap
msgid "<a name=\"pubsub\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/redis.md:278
#, markdown-text, no-wrap
msgid "Pub / Sub"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:281
#, markdown-text
msgid ""
"Laravel provides a convenient interface to the Redis `publish` and "
"`subscribe` commands. These Redis commands allow you to listen for messages "
"on a given \"channel\". You may publish messages to the channel from another "
"application, or even using another programming language, allowing easy "
"communication between applications and processes."
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:283
#, markdown-text
msgid ""
"First, let's setup a channel listener using the `subscribe` method. We'll "
"place this method call within an [Artisan "
"command](/docs/{{version}}/artisan) since calling the `subscribe` method "
"begins a long-running process:"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:287
#, markdown-text, no-wrap
msgid "    namespace App\\Console\\Commands;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:290
#, markdown-text, no-wrap
msgid ""
"    use Illuminate\\Console\\Command;\n"
"    use Illuminate\\Support\\Facades\\Redis;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:299
#, markdown-text, no-wrap
msgid ""
"    class RedisSubscribe extends Command\n"
"    {\n"
"        /**\n"
"         * The name and signature of the console command.\n"
"         *\n"
"         * @var string\n"
"         */\n"
"        protected $signature = 'redis:subscribe';\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:306
#, markdown-text, no-wrap
msgid ""
"        /**\n"
"         * The console command description.\n"
"         *\n"
"         * @var string\n"
"         */\n"
"        protected $description = 'Subscribe to a Redis channel';\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:319
#, markdown-text, no-wrap
msgid ""
"        /**\n"
"         * Execute the console command.\n"
"         *\n"
"         * @return mixed\n"
"         */\n"
"        public function handle()\n"
"        {\n"
"            Redis::subscribe(['test-channel'], function ($message) {\n"
"                echo $message;\n"
"            });\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:321
#, markdown-text
msgid "Now we may publish messages to the channel using the `publish` method:"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:326
#, markdown-text, no-wrap
msgid ""
"    Route::get('/publish', function () {\n"
"        // ...\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:331
#, markdown-text, no-wrap
msgid ""
"        Redis::publish('test-channel', json_encode([\n"
"            'name' => 'Adam Wathan'\n"
"        ]));\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:333
#, markdown-text, no-wrap
msgid "<a name=\"wildcard-subscriptions\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/redis.md:333
#, markdown-text, no-wrap
msgid "Wildcard Subscriptions"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:336
#, markdown-text
msgid ""
"Using the `psubscribe` method, you may subscribe to a wildcard channel, "
"which may be useful for catching all messages on all channels. The channel "
"name will be passed as the second argument to the provided closure:"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:340
#, markdown-text, no-wrap
msgid ""
"    Redis::psubscribe(['*'], function ($message, $channel) {\n"
"        echo $message;\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/redis.md:343
#, markdown-text, no-wrap
msgid ""
"    Redis::psubscribe(['users.*'], function ($message, $channel) {\n"
"        echo $message;\n"
"    });\n"
msgstr ""
