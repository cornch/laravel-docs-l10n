msgid ""
msgstr ""
"Project-Id-Version: laravel-docs\n"
"POT-Creation-Date: 2022-02-08 06:32+0000\n"
"PO-Revision-Date: 2022-02-11 12:29\n"
"Last-Translator: \n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2022-02-08 06:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: \n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2022-02-08 06:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: \n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/templates/notifications.pot\n"
"X-Crowdin-File-ID: 109\n"

# File: docs/8.x/notifications.md, line: 1
# File: docs/9.x/notifications.md, line: 1
# File: docs/master/notifications.md, line: 1
#. type: Title #
#, no-wrap
msgid "Notifications"
msgstr "通知 - Notification"

# File: docs/8.x/notifications.md, line: 49
# File: docs/9.x/notifications.md, line: 49
# File: docs/master/notifications.md, line: 49
#. type: Bullet: '- '
msgid "[Introduction](#introduction)"
msgstr "[簡介](#introduction)"

# File: docs/8.x/notifications.md, line: 49
# File: docs/9.x/notifications.md, line: 49
# File: docs/master/notifications.md, line: 49
#. type: Bullet: '- '
msgid "[Generating Notifications](#generating-notifications)"
msgstr "[產生 Notification](#generating-notifications)"

# File: docs/8.x/notifications.md, line: 49
# File: docs/9.x/notifications.md, line: 49
# File: docs/master/notifications.md, line: 49
#. type: Plain text
#, no-wrap
msgid "- [Sending Notifications](#sending-notifications)\n"
"    - [Using The Notifiable Trait](#using-the-notifiable-trait)\n"
"    - [Using The Notification Facade](#using-the-notification-facade)\n"
"    - [Specifying Delivery Channels](#specifying-delivery-channels)\n"
"    - [Queueing Notifications](#queueing-notifications)\n"
"    - [On-Demand Notifications](#on-demand-notifications)\n"
"- [Mail Notifications](#mail-notifications)\n"
"    - [Formatting Mail Messages](#formatting-mail-messages)\n"
"    - [Customizing The Sender](#customizing-the-sender)\n"
"    - [Customizing The Recipient](#customizing-the-recipient)\n"
"    - [Customizing The Subject](#customizing-the-subject)\n"
"    - [Customizing The Mailer](#customizing-the-mailer)\n"
"    - [Customizing The Templates](#customizing-the-templates)\n"
"    - [Attachments](#mail-attachments)\n"
"    - [Using Mailables](#using-mailables)\n"
"    - [Previewing Mail Notifications](#previewing-mail-notifications)\n"
"- [Markdown Mail Notifications](#markdown-mail-notifications)\n"
"    - [Generating The Message](#generating-the-message)\n"
"    - [Writing The Message](#writing-the-message)\n"
"    - [Customizing The Components](#customizing-the-components)\n"
"- [Database Notifications](#database-notifications)\n"
"    - [Prerequisites](#database-prerequisites)\n"
"    - [Formatting Database Notifications](#formatting-database-notifications)\n"
"    - [Accessing The Notifications](#accessing-the-notifications)\n"
"    - [Marking Notifications As Read](#marking-notifications-as-read)\n"
"- [Broadcast Notifications](#broadcast-notifications)\n"
"    - [Prerequisites](#broadcast-prerequisites)\n"
"    - [Formatting Broadcast Notifications](#formatting-broadcast-notifications)\n"
"    - [Listening For Notifications](#listening-for-notifications)\n"
"- [SMS Notifications](#sms-notifications)\n"
"    - [Prerequisites](#sms-prerequisites)\n"
"    - [Formatting SMS Notifications](#formatting-sms-notifications)\n"
"    - [Formatting Shortcode Notifications](#formatting-shortcode-notifications)\n"
"    - [Customizing The \"From\" Number](#customizing-the-from-number)\n"
"    - [Adding A Client Reference](#adding-a-client-reference)\n"
"    - [Routing SMS Notifications](#routing-sms-notifications)\n"
"- [Slack Notifications](#slack-notifications)\n"
"    - [Prerequisites](#slack-prerequisites)\n"
"    - [Formatting Slack Notifications](#formatting-slack-notifications)\n"
"    - [Slack Attachments](#slack-attachments)\n"
"    - [Routing Slack Notifications](#routing-slack-notifications)\n"
"- [Localizing Notifications](#localizing-notifications)\n"
"- [Notification Events](#notification-events)\n"
"- [Custom Channels](#custom-channels)\n"
msgstr "- [傳送通知](#sending-notifications)\n"
"    - [使用 Notifiable Trait](#using-the-notifiable-trait)\n"
"    - [使用 Notification Facade](#using-the-notification-facade)\n"
"    - [指定傳送通道](#specifying-delivery-channels)\n"
"    - [將通知放入佇列](#queueing-notifications)\n"
"    - [隨需建立的通知](#on-demand-notifications)\n"
"- [郵件通知](#mail-notifications)\n"
"    - [格式化郵件訊息](#formatting-mail-messages)\n"
"    - [自訂寄件人](#customizing-the-sender)\n"
"    - [自訂收件人](#customizing-the-recipient)\n"
"    - [自訂主旨](#customizing-the-subject)\n"
"    - [自訂 Mailer](#customizing-the-mailer)\n"
"    - [自訂樣板](#customizing-the-templates)\n"
"    - [附加檔案](#mail-attachments)\n"
"    - [使用 Mailable](#using-mailables)\n"
"    - [預覽郵件通知](#previewing-mail-notifications)\n"
"- [Markdown 的郵件通知](#markdown-mail-notifications)\n"
"    - [產生訊息](#generating-the-message)\n"
"    - [撰寫訊息](#writing-the-message)\n"
"    - [自訂元件](#customizing-the-components)\n"
"- [資料庫通知](#database-notifications)\n"
"    - [前置需求](#database-prerequisites)\n"
"    - [格式化資料庫通知](#formatting-database-notifications)\n"
"    - [存取通知](#accessing-the-notifications)\n"
"    - [將通知標記為已讀](#marking-notifications-as-read)\n"
"- [廣播通知](#broadcast-notifications)\n"
"    - [前置需求](#broadcast-prerequisites)\n"
"    - [格式化廣播通知](#formatting-broadcast-notifications)\n"
"    - [監聽通知](#listening-for-notifications)\n"
"- [簡訊通知](#sms-notifications)\n"
"    - [前置需求](#sms-prerequisites)\n"
"    - [格式化簡訊通知](#formatting-sms-notifications)\n"
"    - [格式化 Shortcode 通知](#formatting-shortcode-notifications)\n"
"    - [自訂寄件號碼](#customizing-the-from-number)\n"
"    - [加上用戶端參照](#adding-a-client-reference)\n"
"    - [簡訊通知的路由](#routing-sms-notifications)\n"
"- [Slack 通知](#slack-notifications)\n"
"    - [前置需求](#slack-prerequisites)\n"
"    - [格式化 Slack 通知](#formatting-slack-notifications)\n"
"    - [Slack 附加檔案](#slack-attachments)\n"
"    - [Slack 通知的路由](#routing-slack-notifications)\n"
"- [本土化通知](#localizing-notifications)\n"
"- [通知事件](#notification-events)\n"
"- [自訂通道](#custom-channels)\n"

# File: docs/8.x/notifications.md, line: 51
# File: docs/9.x/notifications.md, line: 51
# File: docs/master/notifications.md, line: 51
#. type: Plain text
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr "<a name=\"introduction\"></a>\n"

# File: docs/8.x/notifications.md, line: 51
# File: docs/9.x/notifications.md, line: 51
# File: docs/master/notifications.md, line: 51
#. type: Title ##
#, no-wrap
msgid "Introduction"
msgstr "簡介"

# File: docs/8.x/notifications.md, line: 54
# File: docs/9.x/notifications.md, line: 54
# File: docs/master/notifications.md, line: 54
#. type: Plain text
msgid "In addition to support for [sending email](/docs/{{version}}/mail), Laravel provides support for sending notifications across a variety of delivery channels, including email, SMS (via [Vonage](https://www.vonage.com/communications-apis/), formerly known as Nexmo), and [Slack](https://slack.com). In addition, a variety of [community built notification channels](https://laravel-notification-channels.com/about/#suggesting-a-new-channel) have been created to send notification over dozens of different channels! Notifications may also be stored in a database so they may be displayed in your web interface."
msgstr "除了支援[寄送郵件](/docs/{{version}}/mail)外，Laravel 還支援以各種不同的通道來寄送通知。支援的通道包含電子郵件、簡訊 (使用 [Vonage](https://www.vonage.com/communications-apis/),，前名 Nexmo)、[Slack](https://slack.com) 等。此外，還有許多[社群製作的通知通道](https://laravel-notification-channels.com/about/#suggesting-a-new-channel)，可使用數十種不同的通道來傳送通知！通知也可以儲存在資料庫中以在網頁界面上顯示。"

# File: docs/8.x/notifications.md, line: 56
# File: docs/9.x/notifications.md, line: 56
# File: docs/master/notifications.md, line: 56
#. type: Plain text
msgid "Typically, notifications should be short, informational messages that notify users of something that occurred in your application. For example, if you are writing a billing application, you might send an \"Invoice Paid\" notification to your users via the email and SMS channels."
msgstr "一般來說，通知是簡短的、資訊性的訊息，用來通知使用者我們的程式裡發生的事情。舉例來說，假設我們正在開發一款請款用的程式，我們可以使用電子郵件與簡訊管道來傳送一個「已收到款項」的通知。"

# File: docs/8.x/notifications.md, line: 58
# File: docs/9.x/notifications.md, line: 58
# File: docs/master/notifications.md, line: 58
#. type: Plain text
#, no-wrap
msgid "<a name=\"generating-notifications\"></a>\n"
msgstr "<a name=\"generating-notifications\"></a>\n"

# File: docs/8.x/notifications.md, line: 58
# File: docs/9.x/notifications.md, line: 58
# File: docs/master/notifications.md, line: 58
#. type: Title ##
#, no-wrap
msgid "Generating Notifications"
msgstr "產生通知"

# File: docs/8.x/notifications.md, line: 61
# File: docs/9.x/notifications.md, line: 61
# File: docs/master/notifications.md, line: 61
#. type: Plain text
msgid "In Laravel, each notification is represented by a single class that is typically stored in the `app/Notifications` directory. Don't worry if you don't see this directory in your application - it will be created for you when you run the `make:notification` Artisan command:"
msgstr ""

# File: docs/8.x/notifications.md, line: 63
#. type: Plain text
#, no-wrap
msgid "    php artisan make:notification InvoicePaid\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 65
# File: docs/9.x/notifications.md, line: 67
# File: docs/master/notifications.md, line: 67
#. type: Plain text
msgid "This command will place a fresh notification class in your `app/Notifications` directory. Each notification class contains a `via` method and a variable number of message building methods, such as `toMail` or `toDatabase`, that convert the notification to a message tailored for that particular channel."
msgstr ""

# File: docs/8.x/notifications.md, line: 67
# File: docs/9.x/notifications.md, line: 69
# File: docs/master/notifications.md, line: 69
#. type: Plain text
#, no-wrap
msgid "<a name=\"sending-notifications\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 67
# File: docs/9.x/notifications.md, line: 69
# File: docs/master/notifications.md, line: 69
#. type: Title ##
#, no-wrap
msgid "Sending Notifications"
msgstr ""

# File: docs/8.x/notifications.md, line: 70
# File: docs/9.x/notifications.md, line: 72
# File: docs/master/notifications.md, line: 72
#. type: Plain text
#, no-wrap
msgid "<a name=\"using-the-notifiable-trait\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 70
# File: docs/9.x/notifications.md, line: 72
# File: docs/master/notifications.md, line: 72
#. type: Title ###
#, no-wrap
msgid "Using The Notifiable Trait"
msgstr ""

# File: docs/8.x/notifications.md, line: 73
# File: docs/9.x/notifications.md, line: 75
# File: docs/master/notifications.md, line: 75
#. type: Plain text
msgid "Notifications may be sent in two ways: using the `notify` method of the `Notifiable` trait or using the `Notification` [facade](/docs/{{version}}/facades). The `Notifiable` trait is included on your application's `App\\Models\\User` model by default:"
msgstr ""

# File: docs/8.x/notifications.md, line: 75
# File: docs/8.x/notifications.md, line: 135
# File: docs/8.x/notifications.md, line: 212
# File: docs/8.x/notifications.md, line: 383
# File: docs/8.x/notifications.md, line: 847
# File: docs/8.x/notifications.md, line: 989
# File: docs/8.x/notifications.md, line: 1121
# File: docs/8.x/notifications.md, line: 1273
# File: docs/8.x/notifications.md, line: 1298
# File: docs/9.x/notifications.md, line: 77
# File: docs/9.x/notifications.md, line: 137
# File: docs/9.x/notifications.md, line: 214
# File: docs/9.x/notifications.md, line: 385
# File: docs/9.x/notifications.md, line: 865
# File: docs/9.x/notifications.md, line: 1007
# File: docs/9.x/notifications.md, line: 1141
# File: docs/9.x/notifications.md, line: 1293
# File: docs/9.x/notifications.md, line: 1318
# File: docs/master/notifications.md, line: 77
# File: docs/master/notifications.md, line: 137
# File: docs/master/notifications.md, line: 214
# File: docs/master/notifications.md, line: 385
# File: docs/master/notifications.md, line: 865
# File: docs/master/notifications.md, line: 1007
# File: docs/master/notifications.md, line: 1141
# File: docs/master/notifications.md, line: 1293
# File: docs/master/notifications.md, line: 1318
#. type: Plain text
#, no-wrap
msgid "    <?php\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 77
# File: docs/8.x/notifications.md, line: 385
# File: docs/8.x/notifications.md, line: 849
# File: docs/8.x/notifications.md, line: 991
# File: docs/8.x/notifications.md, line: 1123
# File: docs/9.x/notifications.md, line: 79
# File: docs/9.x/notifications.md, line: 387
# File: docs/9.x/notifications.md, line: 867
# File: docs/9.x/notifications.md, line: 1009
# File: docs/9.x/notifications.md, line: 1143
# File: docs/master/notifications.md, line: 79
# File: docs/master/notifications.md, line: 387
# File: docs/master/notifications.md, line: 867
# File: docs/master/notifications.md, line: 1009
# File: docs/master/notifications.md, line: 1143
#. type: Plain text
#, no-wrap
msgid "    namespace App\\Models;\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 80
# File: docs/8.x/notifications.md, line: 388
# File: docs/8.x/notifications.md, line: 994
# File: docs/8.x/notifications.md, line: 1126
# File: docs/9.x/notifications.md, line: 82
# File: docs/9.x/notifications.md, line: 390
# File: docs/9.x/notifications.md, line: 1012
# File: docs/9.x/notifications.md, line: 1146
# File: docs/master/notifications.md, line: 82
# File: docs/master/notifications.md, line: 390
# File: docs/master/notifications.md, line: 1012
# File: docs/master/notifications.md, line: 1146
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Foundation\\Auth\\User as Authenticatable;\n"
"    use Illuminate\\Notifications\\Notifiable;\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 85
# File: docs/9.x/notifications.md, line: 87
# File: docs/master/notifications.md, line: 87
#. type: Plain text
#, no-wrap
msgid "    class User extends Authenticatable\n"
"    {\n"
"        use Notifiable;\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 87
# File: docs/9.x/notifications.md, line: 89
# File: docs/master/notifications.md, line: 89
#. type: Plain text
msgid "The `notify` method that is provided by this trait expects to receive a notification instance:"
msgstr ""

# File: docs/8.x/notifications.md, line: 89
# File: docs/8.x/notifications.md, line: 206
# File: docs/9.x/notifications.md, line: 91
# File: docs/9.x/notifications.md, line: 208
# File: docs/master/notifications.md, line: 91
# File: docs/master/notifications.md, line: 208
#. type: Plain text
#, no-wrap
msgid "    use App\\Notifications\\InvoicePaid;\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 91
# File: docs/8.x/notifications.md, line: 152
# File: docs/8.x/notifications.md, line: 1181
# File: docs/9.x/notifications.md, line: 93
# File: docs/9.x/notifications.md, line: 154
# File: docs/9.x/notifications.md, line: 1201
# File: docs/master/notifications.md, line: 93
# File: docs/master/notifications.md, line: 154
# File: docs/master/notifications.md, line: 1201
#. type: Plain text
#, no-wrap
msgid "    $user->notify(new InvoicePaid($invoice));\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 93
# File: docs/9.x/notifications.md, line: 95
# File: docs/master/notifications.md, line: 95
#. type: Plain text
#, no-wrap
msgid "> {tip} Remember, you may use the `Notifiable` trait on any of your models. You are not limited to only including it on your `User` model.\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 95
# File: docs/9.x/notifications.md, line: 97
# File: docs/master/notifications.md, line: 97
#. type: Plain text
#, no-wrap
msgid "<a name=\"using-the-notification-facade\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 95
# File: docs/9.x/notifications.md, line: 97
# File: docs/master/notifications.md, line: 97
#. type: Title ###
#, no-wrap
msgid "Using The Notification Facade"
msgstr ""

# File: docs/8.x/notifications.md, line: 98
# File: docs/9.x/notifications.md, line: 100
# File: docs/master/notifications.md, line: 100
#. type: Plain text
msgid "Alternatively, you may send notifications via the `Notification` [facade](/docs/{{version}}/facades). This approach is useful when you need to send a notification to multiple notifiable entities such as a collection of users. To send notifications using the facade, pass all of the notifiable entities and the notification instance to the `send` method:"
msgstr ""

# File: docs/8.x/notifications.md, line: 100
# File: docs/9.x/notifications.md, line: 102
# File: docs/master/notifications.md, line: 102
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Support\\Facades\\Notification;\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 102
# File: docs/9.x/notifications.md, line: 104
# File: docs/master/notifications.md, line: 104
#. type: Plain text
#, no-wrap
msgid "    Notification::send($users, new InvoicePaid($invoice));\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 104
# File: docs/9.x/notifications.md, line: 106
# File: docs/master/notifications.md, line: 106
#. type: Plain text
msgid "You can also send notifications immediately using the `sendNow` method. This method will send the notification immediately even if the notification implements the `ShouldQueue` interface:"
msgstr ""

# File: docs/8.x/notifications.md, line: 106
# File: docs/9.x/notifications.md, line: 108
# File: docs/master/notifications.md, line: 108
#. type: Plain text
#, no-wrap
msgid "    Notification::sendNow($developers, new DeploymentCompleted($deployment));\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 108
# File: docs/9.x/notifications.md, line: 110
# File: docs/master/notifications.md, line: 110
#. type: Plain text
#, no-wrap
msgid "<a name=\"specifying-delivery-channels\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 108
# File: docs/9.x/notifications.md, line: 110
# File: docs/master/notifications.md, line: 110
#. type: Title ###
#, no-wrap
msgid "Specifying Delivery Channels"
msgstr ""

# File: docs/8.x/notifications.md, line: 111
# File: docs/9.x/notifications.md, line: 113
# File: docs/master/notifications.md, line: 113
#. type: Plain text
msgid "Every notification class has a `via` method that determines on which channels the notification will be delivered. Notifications may be sent on the `mail`, `database`, `broadcast`, `nexmo`, and `slack` channels."
msgstr ""

# File: docs/8.x/notifications.md, line: 113
# File: docs/9.x/notifications.md, line: 115
# File: docs/master/notifications.md, line: 115
#. type: Plain text
#, no-wrap
msgid "> {tip} If you would like to use other delivery channels such as Telegram or Pusher, check out the community driven [Laravel Notification Channels website](http://laravel-notification-channels.com).\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 115
# File: docs/9.x/notifications.md, line: 117
# File: docs/master/notifications.md, line: 117
#. type: Plain text
msgid "The `via` method receives a `$notifiable` instance, which will be an instance of the class to which the notification is being sent. You may use `$notifiable` to determine which channels the notification should be delivered on:"
msgstr ""

# File: docs/8.x/notifications.md, line: 126
# File: docs/9.x/notifications.md, line: 128
# File: docs/master/notifications.md, line: 128
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the notification's delivery channels.\n"
"     *\n"
"     * @param  mixed  $notifiable\n"
"     * @return array\n"
"     */\n"
"    public function via($notifiable)\n"
"    {\n"
"        return $notifiable->prefers_sms ? ['nexmo'] : ['mail', 'database'];\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 128
# File: docs/9.x/notifications.md, line: 130
# File: docs/master/notifications.md, line: 130
#. type: Plain text
#, no-wrap
msgid "<a name=\"queueing-notifications\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 128
# File: docs/9.x/notifications.md, line: 130
# File: docs/master/notifications.md, line: 130
#. type: Title ###
#, no-wrap
msgid "Queueing Notifications"
msgstr ""

# File: docs/8.x/notifications.md, line: 131
# File: docs/9.x/notifications.md, line: 133
# File: docs/master/notifications.md, line: 133
#. type: Plain text
#, no-wrap
msgid "> {note} Before queueing notifications you should configure your queue and [start a worker](/docs/{{version}}/queues).\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 133
# File: docs/9.x/notifications.md, line: 135
# File: docs/master/notifications.md, line: 135
#. type: Plain text
msgid "Sending notifications can take time, especially if the channel needs to make an external API call to deliver the notification. To speed up your application's response time, let your notification be queued by adding the `ShouldQueue` interface and `Queueable` trait to your class. The interface and trait are already imported for all notifications generated using the `make:notification` command, so you may immediately add them to your notification class:"
msgstr ""

# File: docs/8.x/notifications.md, line: 137
# File: docs/8.x/notifications.md, line: 214
# File: docs/8.x/notifications.md, line: 1275
# File: docs/8.x/notifications.md, line: 1300
# File: docs/9.x/notifications.md, line: 139
# File: docs/9.x/notifications.md, line: 216
# File: docs/9.x/notifications.md, line: 1295
# File: docs/9.x/notifications.md, line: 1320
# File: docs/master/notifications.md, line: 139
# File: docs/master/notifications.md, line: 216
# File: docs/master/notifications.md, line: 1295
# File: docs/master/notifications.md, line: 1320
#. type: Plain text
#, no-wrap
msgid "    namespace App\\Notifications;\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 141
# File: docs/8.x/notifications.md, line: 218
# File: docs/9.x/notifications.md, line: 143
# File: docs/9.x/notifications.md, line: 220
# File: docs/master/notifications.md, line: 143
# File: docs/master/notifications.md, line: 220
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Bus\\Queueable;\n"
"    use Illuminate\\Contracts\\Queue\\ShouldQueue;\n"
"    use Illuminate\\Notifications\\Notification;\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 145
# File: docs/8.x/notifications.md, line: 222
# File: docs/9.x/notifications.md, line: 147
# File: docs/9.x/notifications.md, line: 224
# File: docs/master/notifications.md, line: 147
# File: docs/master/notifications.md, line: 224
#. type: Plain text
#, no-wrap
msgid "    class InvoicePaid extends Notification implements ShouldQueue\n"
"    {\n"
"        use Queueable;\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 148
# File: docs/9.x/notifications.md, line: 150
# File: docs/master/notifications.md, line: 150
#. type: Plain text
#, no-wrap
msgid "        // ...\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 150
# File: docs/9.x/notifications.md, line: 152
# File: docs/master/notifications.md, line: 152
#. type: Plain text
msgid "Once the `ShouldQueue` interface has been added to your notification, you may send the notification like normal. Laravel will detect the `ShouldQueue` interface on the class and automatically queue the delivery of the notification:"
msgstr ""

# File: docs/8.x/notifications.md, line: 154
# File: docs/9.x/notifications.md, line: 156
# File: docs/master/notifications.md, line: 156
#. type: Plain text
msgid "If you would like to delay the delivery of the notification, you may chain the `delay` method onto your notification instantiation:"
msgstr ""

# File: docs/8.x/notifications.md, line: 156
# File: docs/9.x/notifications.md, line: 158
# File: docs/master/notifications.md, line: 158
#. type: Plain text
#, no-wrap
msgid "    $delay = now()->addMinutes(10);\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 158
# File: docs/9.x/notifications.md, line: 160
# File: docs/master/notifications.md, line: 160
#. type: Plain text
#, no-wrap
msgid "    $user->notify((new InvoicePaid($invoice))->delay($delay));\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 160
# File: docs/9.x/notifications.md, line: 162
# File: docs/master/notifications.md, line: 162
#. type: Plain text
msgid "You may pass an array to the `delay` method to specify the delay amount for specific channels:"
msgstr ""

# File: docs/8.x/notifications.md, line: 165
# File: docs/9.x/notifications.md, line: 167
# File: docs/master/notifications.md, line: 167
#. type: Plain text
#, no-wrap
msgid "    $user->notify((new InvoicePaid($invoice))->delay([\n"
"        'mail' => now()->addMinutes(5),\n"
"        'sms' => now()->addMinutes(10),\n"
"    ]));\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 167
# File: docs/9.x/notifications.md, line: 169
# File: docs/master/notifications.md, line: 169
#. type: Plain text
msgid "When queueing notifications, a queued job will be created for each recipient and channel combination. For example, six jobs will be dispatched to the queue if your notification has three recipients and two channels."
msgstr ""

# File: docs/8.x/notifications.md, line: 169
# File: docs/9.x/notifications.md, line: 171
# File: docs/master/notifications.md, line: 171
#. type: Plain text
#, no-wrap
msgid "<a name=\"customizing-the-notification-queue-connection\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 169
# File: docs/9.x/notifications.md, line: 171
# File: docs/master/notifications.md, line: 171
#. type: Title ####
#, no-wrap
msgid "Customizing The Notification Queue Connection"
msgstr ""

# File: docs/8.x/notifications.md, line: 172
# File: docs/9.x/notifications.md, line: 174
# File: docs/master/notifications.md, line: 174
#. type: Plain text
msgid "By default, queued notifications will be queued using your application's default queue connection. If you would like to specify a different connection that should be used for a particular notification, you may define a `$connection` property on the notification class:"
msgstr ""

# File: docs/8.x/notifications.md, line: 179
# File: docs/9.x/notifications.md, line: 181
# File: docs/master/notifications.md, line: 181
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * The name of the queue connection to use when queueing the notification.\n"
"     *\n"
"     * @var string\n"
"     */\n"
"    public $connection = 'redis';\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 181
# File: docs/9.x/notifications.md, line: 183
# File: docs/master/notifications.md, line: 183
#. type: Plain text
#, no-wrap
msgid "<a name=\"customizing-notification-channel-queues\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 181
# File: docs/9.x/notifications.md, line: 183
# File: docs/master/notifications.md, line: 183
#. type: Title ####
#, no-wrap
msgid "Customizing Notification Channel Queues"
msgstr ""

# File: docs/8.x/notifications.md, line: 184
# File: docs/9.x/notifications.md, line: 186
# File: docs/master/notifications.md, line: 186
#. type: Plain text
msgid "If you would like to specify a specific queue that should be used for each notification channel supported by the notification, you may define a `viaQueues` method on your notification. This method should return an array of channel name / queue name pairs:"
msgstr ""

# File: docs/8.x/notifications.md, line: 197
# File: docs/9.x/notifications.md, line: 199
# File: docs/master/notifications.md, line: 199
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Determine which queues should be used for each notification channel.\n"
"     *\n"
"     * @return array\n"
"     */\n"
"    public function viaQueues()\n"
"    {\n"
"        return [\n"
"            'mail' => 'mail-queue',\n"
"            'slack' => 'slack-queue',\n"
"        ];\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 199
# File: docs/9.x/notifications.md, line: 201
# File: docs/master/notifications.md, line: 201
#. type: Plain text
#, no-wrap
msgid "<a name=\"queued-notifications-and-database-transactions\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 199
# File: docs/9.x/notifications.md, line: 201
# File: docs/master/notifications.md, line: 201
#. type: Title ####
#, no-wrap
msgid "Queued Notifications & Database Transactions"
msgstr ""

# File: docs/8.x/notifications.md, line: 202
# File: docs/9.x/notifications.md, line: 204
# File: docs/master/notifications.md, line: 204
#. type: Plain text
msgid "When queued notifications are dispatched within database transactions, they may be processed by the queue before the database transaction has committed. When this happens, any updates you have made to models or database records during the database transaction may not yet be reflected in the database. In addition, any models or database records created within the transaction may not exist in the database. If your notification depends on these models, unexpected errors can occur when the job that sends the queued notification is processed."
msgstr ""

# File: docs/8.x/notifications.md, line: 204
# File: docs/9.x/notifications.md, line: 206
# File: docs/master/notifications.md, line: 206
#. type: Plain text
msgid "If your queue connection's `after_commit` configuration option is set to `false`, you may still indicate that a particular queued notification should be dispatched after all open database transactions have been committed by calling the `afterCommit` method when sending the notification:"
msgstr ""

# File: docs/8.x/notifications.md, line: 208
# File: docs/9.x/notifications.md, line: 210
# File: docs/master/notifications.md, line: 210
#. type: Plain text
#, no-wrap
msgid "    $user->notify((new InvoicePaid($invoice))->afterCommit());\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 210
# File: docs/9.x/notifications.md, line: 212
# File: docs/master/notifications.md, line: 212
#. type: Plain text
msgid "Alternatively, you may call the `afterCommit` method from your notification's constructor:"
msgstr ""

# File: docs/8.x/notifications.md, line: 233
# File: docs/9.x/notifications.md, line: 235
# File: docs/master/notifications.md, line: 235
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * Create a new notification instance.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function __construct()\n"
"        {\n"
"            $this->afterCommit();\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 235
# File: docs/9.x/notifications.md, line: 237
# File: docs/master/notifications.md, line: 237
#. type: Plain text
#, no-wrap
msgid "> {tip} To learn more about working around these issues, please review the documentation regarding [queued jobs and database transactions](/docs/{{version}}/queues#jobs-and-database-transactions).\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 237
# File: docs/9.x/notifications.md, line: 239
# File: docs/master/notifications.md, line: 239
#. type: Plain text
#, no-wrap
msgid "<a name=\"determining-if-the-queued-notification-should-be-sent\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 237
# File: docs/9.x/notifications.md, line: 239
# File: docs/master/notifications.md, line: 239
#. type: Title ####
#, no-wrap
msgid "Determining If A Queued Notification Should Be Sent"
msgstr ""

# File: docs/8.x/notifications.md, line: 240
# File: docs/9.x/notifications.md, line: 242
# File: docs/master/notifications.md, line: 242
#. type: Plain text
msgid "After a queued notification has been dispatched for the queue for background processing, it will typically be accepted by a queue worker and sent to its intended recipient."
msgstr ""

# File: docs/8.x/notifications.md, line: 242
# File: docs/9.x/notifications.md, line: 244
# File: docs/master/notifications.md, line: 244
#. type: Plain text
msgid "However, if you would like to make the final determination on whether the queued notification should be sent after it is being processed by a queue worker, you may define a `shouldSend` method on the notification class. If this method returns `false`, the notification will not be sent:"
msgstr ""

# File: docs/8.x/notifications.md, line: 254
# File: docs/9.x/notifications.md, line: 256
# File: docs/master/notifications.md, line: 256
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Determine if the notification should be sent.\n"
"     *\n"
"     * @param  mixed  $notifiable\n"
"     * @param  string  $channel\n"
"     * @return bool\n"
"     */\n"
"    public function shouldSend($notifiable, $channel)\n"
"    {\n"
"        return $this->invoice->isPaid();\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 256
# File: docs/9.x/notifications.md, line: 258
# File: docs/master/notifications.md, line: 258
#. type: Plain text
#, no-wrap
msgid "<a name=\"on-demand-notifications\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 256
# File: docs/9.x/notifications.md, line: 258
# File: docs/master/notifications.md, line: 258
#. type: Title ###
#, no-wrap
msgid "On-Demand Notifications"
msgstr ""

# File: docs/8.x/notifications.md, line: 259
# File: docs/9.x/notifications.md, line: 261
# File: docs/master/notifications.md, line: 261
#. type: Plain text
msgid "Sometimes you may need to send a notification to someone who is not stored as a \"user\" of your application. Using the `Notification` facade's `route` method, you may specify ad-hoc notification routing information before sending the notification:"
msgstr ""

# File: docs/8.x/notifications.md, line: 264
# File: docs/9.x/notifications.md, line: 266
# File: docs/master/notifications.md, line: 266
#. type: Plain text
#, no-wrap
msgid "    Notification::route('mail', 'taylor@example.com')\n"
"                ->route('nexmo', '5555555555')\n"
"                ->route('slack', 'https://hooks.slack.com/services/...')\n"
"                ->notify(new InvoicePaid($invoice));\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 266
# File: docs/9.x/notifications.md, line: 268
# File: docs/master/notifications.md, line: 268
#. type: Plain text
msgid "If you would like to provide the recipient's name when sending an on-demand notification to the `mail` route, you may provide an array that contains the email address as the key and the name as the value of the first element in the array:"
msgstr ""

# File: docs/8.x/notifications.md, line: 270
# File: docs/9.x/notifications.md, line: 272
# File: docs/master/notifications.md, line: 272
#. type: Plain text
#, no-wrap
msgid "    Notification::route('mail', [\n"
"        'barrett@example.com' => 'Barrett Blair',\n"
"    ])->notify(new InvoicePaid($invoice));\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 272
# File: docs/9.x/notifications.md, line: 274
# File: docs/master/notifications.md, line: 274
#. type: Plain text
#, no-wrap
msgid "<a name=\"mail-notifications\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 272
# File: docs/9.x/notifications.md, line: 274
# File: docs/master/notifications.md, line: 274
#. type: Title ##
#, no-wrap
msgid "Mail Notifications"
msgstr ""

# File: docs/8.x/notifications.md, line: 275
# File: docs/9.x/notifications.md, line: 277
# File: docs/master/notifications.md, line: 277
#. type: Plain text
#, no-wrap
msgid "<a name=\"formatting-mail-messages\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 275
# File: docs/9.x/notifications.md, line: 277
# File: docs/master/notifications.md, line: 277
#. type: Title ###
#, no-wrap
msgid "Formatting Mail Messages"
msgstr ""

# File: docs/8.x/notifications.md, line: 278
# File: docs/9.x/notifications.md, line: 280
# File: docs/master/notifications.md, line: 280
#. type: Plain text
msgid "If a notification supports being sent as an email, you should define a `toMail` method on the notification class. This method will receive a `$notifiable` entity and should return an `Illuminate\\Notifications\\Messages\\MailMessage` instance."
msgstr ""

# File: docs/8.x/notifications.md, line: 280
# File: docs/9.x/notifications.md, line: 282
# File: docs/master/notifications.md, line: 282
#. type: Plain text
msgid "The `MailMessage` class contains a few simple methods to help you build transactional email messages. Mail messages may contain lines of text as well as a \"call to action\". Let's take a look at an example `toMail` method:"
msgstr ""

# File: docs/8.x/notifications.md, line: 290
# File: docs/8.x/notifications.md, line: 606
# File: docs/9.x/notifications.md, line: 292
# File: docs/9.x/notifications.md, line: 612
# File: docs/master/notifications.md, line: 292
# File: docs/master/notifications.md, line: 612
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the mail representation of the notification.\n"
"     *\n"
"     * @param  mixed  $notifiable\n"
"     * @return \\Illuminate\\Notifications\\Messages\\MailMessage\n"
"     */\n"
"    public function toMail($notifiable)\n"
"    {\n"
"        $url = url('/invoice/'.$this->invoice->id);\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 297
# File: docs/9.x/notifications.md, line: 299
# File: docs/master/notifications.md, line: 299
#. type: Plain text
#, no-wrap
msgid "        return (new MailMessage)\n"
"                    ->greeting('Hello!')\n"
"                    ->line('One of your invoices has been paid!')\n"
"                    ->action('View Invoice', $url)\n"
"                    ->line('Thank you for using our application!');\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 299
# File: docs/9.x/notifications.md, line: 301
# File: docs/master/notifications.md, line: 301
#. type: Plain text
#, no-wrap
msgid "> {tip} Note we are using `$this->invoice->id` in our `toMail` method. You may pass any data your notification needs to generate its message into the notification's constructor.\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 301
# File: docs/9.x/notifications.md, line: 303
# File: docs/master/notifications.md, line: 303
#. type: Plain text
msgid "In this example, we register a greeting, a line of text, a call to action, and then another line of text. These methods provided by the `MailMessage` object make it simple and fast to format small transactional emails. The mail channel will then translate the message components into a beautiful, responsive HTML email template with a plain-text counterpart. Here is an example of an email generated by the `mail` channel:"
msgstr ""

# File: docs/8.x/notifications.md, line: 303
# File: docs/9.x/notifications.md, line: 305
# File: docs/master/notifications.md, line: 305
#. type: Plain text
#, no-wrap
msgid "<img src=\"https://laravel.com/img/docs/notification-example-2.png\">\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 305
# File: docs/9.x/notifications.md, line: 307
# File: docs/master/notifications.md, line: 307
#. type: Plain text
#, no-wrap
msgid "> {tip} When sending mail notifications, be sure to set the `name` configuration option in your `config/app.php` configuration file. This value will be used in the header and footer of your mail notification messages.\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 307
# File: docs/9.x/notifications.md, line: 309
# File: docs/master/notifications.md, line: 309
#. type: Plain text
#, no-wrap
msgid "<a name=\"other-mail-notification-formatting-options\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 307
# File: docs/9.x/notifications.md, line: 309
# File: docs/master/notifications.md, line: 309
#. type: Title ####
#, no-wrap
msgid "Other Mail Notification Formatting Options"
msgstr ""

# File: docs/8.x/notifications.md, line: 310
# File: docs/9.x/notifications.md, line: 312
# File: docs/master/notifications.md, line: 312
#. type: Plain text
msgid "Instead of defining the \"lines\" of text in the notification class, you may use the `view` method to specify a custom template that should be used to render the notification email:"
msgstr ""

# File: docs/8.x/notifications.md, line: 323
# File: docs/9.x/notifications.md, line: 325
# File: docs/master/notifications.md, line: 325
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the mail representation of the notification.\n"
"     *\n"
"     * @param  mixed  $notifiable\n"
"     * @return \\Illuminate\\Notifications\\Messages\\MailMessage\n"
"     */\n"
"    public function toMail($notifiable)\n"
"    {\n"
"        return (new MailMessage)->view(\n"
"            'emails.name', ['invoice' => $this->invoice]\n"
"        );\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 325
# File: docs/9.x/notifications.md, line: 327
# File: docs/master/notifications.md, line: 327
#. type: Plain text
msgid "You may specify a plain-text view for the mail message by passing the view name as the second element of an array that is given to the `view` method:"
msgstr ""

# File: docs/8.x/notifications.md, line: 339
# File: docs/9.x/notifications.md, line: 341
# File: docs/master/notifications.md, line: 341
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the mail representation of the notification.\n"
"     *\n"
"     * @param  mixed  $notifiable\n"
"     * @return \\Illuminate\\Notifications\\Messages\\MailMessage\n"
"     */\n"
"    public function toMail($notifiable)\n"
"    {\n"
"        return (new MailMessage)->view(\n"
"            ['emails.name.html', 'emails.name.plain'],\n"
"            ['invoice' => $this->invoice]\n"
"        );\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 341
# File: docs/9.x/notifications.md, line: 343
# File: docs/master/notifications.md, line: 343
#. type: Plain text
#, no-wrap
msgid "<a name=\"error-messages\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 341
# File: docs/9.x/notifications.md, line: 343
# File: docs/master/notifications.md, line: 343
#. type: Title ####
#, no-wrap
msgid "Error Messages"
msgstr ""

# File: docs/8.x/notifications.md, line: 344
# File: docs/9.x/notifications.md, line: 346
# File: docs/master/notifications.md, line: 346
#. type: Plain text
msgid "Some notifications inform users of errors, such as a failed invoice payment. You may indicate that a mail message is regarding an error by calling the `error` method when building your message. When using the `error` method on a mail message, the call to action button will be red instead of black:"
msgstr ""

# File: docs/8.x/notifications.md, line: 358
# File: docs/9.x/notifications.md, line: 360
# File: docs/master/notifications.md, line: 360
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the mail representation of the notification.\n"
"     *\n"
"     * @param  mixed  $notifiable\n"
"     * @return \\Illuminate\\Notifications\\Message\n"
"     */\n"
"    public function toMail($notifiable)\n"
"    {\n"
"        return (new MailMessage)\n"
"                    ->error()\n"
"                    ->subject('Notification Subject')\n"
"                    ->line('...');\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 360
# File: docs/9.x/notifications.md, line: 362
# File: docs/master/notifications.md, line: 362
#. type: Plain text
#, no-wrap
msgid "<a name=\"customizing-the-sender\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 360
# File: docs/9.x/notifications.md, line: 362
# File: docs/master/notifications.md, line: 362
#. type: Title ###
#, no-wrap
msgid "Customizing The Sender"
msgstr ""

# File: docs/8.x/notifications.md, line: 363
# File: docs/9.x/notifications.md, line: 365
# File: docs/master/notifications.md, line: 365
#. type: Plain text
msgid "By default, the email's sender / from address is defined in the `config/mail.php` configuration file. However, you may specify the from address for a specific notification using the `from` method:"
msgstr ""

# File: docs/8.x/notifications.md, line: 376
# File: docs/9.x/notifications.md, line: 378
# File: docs/master/notifications.md, line: 378
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the mail representation of the notification.\n"
"     *\n"
"     * @param  mixed  $notifiable\n"
"     * @return \\Illuminate\\Notifications\\Messages\\MailMessage\n"
"     */\n"
"    public function toMail($notifiable)\n"
"    {\n"
"        return (new MailMessage)\n"
"                    ->from('barrett@example.com', 'Barrett Blair')\n"
"                    ->line('...');\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 378
# File: docs/9.x/notifications.md, line: 380
# File: docs/master/notifications.md, line: 380
#. type: Plain text
#, no-wrap
msgid "<a name=\"customizing-the-recipient\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 378
# File: docs/9.x/notifications.md, line: 380
# File: docs/master/notifications.md, line: 380
#. type: Title ###
#, no-wrap
msgid "Customizing The Recipient"
msgstr ""

# File: docs/8.x/notifications.md, line: 381
# File: docs/9.x/notifications.md, line: 383
# File: docs/master/notifications.md, line: 383
#. type: Plain text
msgid "When sending notifications via the `mail` channel, the notification system will automatically look for an `email` property on your notifiable entity. You may customize which email address is used to deliver the notification by defining a `routeNotificationForMail` method on the notifiable entity:"
msgstr ""

# File: docs/8.x/notifications.md, line: 392
# File: docs/8.x/notifications.md, line: 857
# File: docs/8.x/notifications.md, line: 998
# File: docs/8.x/notifications.md, line: 1130
# File: docs/9.x/notifications.md, line: 394
# File: docs/9.x/notifications.md, line: 875
# File: docs/9.x/notifications.md, line: 1016
# File: docs/9.x/notifications.md, line: 1150
# File: docs/master/notifications.md, line: 394
# File: docs/master/notifications.md, line: 875
# File: docs/master/notifications.md, line: 1016
# File: docs/master/notifications.md, line: 1150
#. type: Plain text
#, no-wrap
msgid "    class User extends Authenticatable\n"
"    {\n"
"        use Notifiable;\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 403
# File: docs/9.x/notifications.md, line: 405
# File: docs/master/notifications.md, line: 405
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * Route notifications for the mail channel.\n"
"         *\n"
"         * @param  \\Illuminate\\Notifications\\Notification  $notification\n"
"         * @return array|string\n"
"         */\n"
"        public function routeNotificationForMail($notification)\n"
"        {\n"
"            // Return email address only...\n"
"            return $this->email_address;\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 408
# File: docs/9.x/notifications.md, line: 410
# File: docs/master/notifications.md, line: 410
#. type: Plain text
#, no-wrap
msgid "            // Return email address and name...\n"
"            return [$this->email_address => $this->name];\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 410
# File: docs/9.x/notifications.md, line: 412
# File: docs/master/notifications.md, line: 412
#. type: Plain text
#, no-wrap
msgid "<a name=\"customizing-the-subject\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 410
# File: docs/9.x/notifications.md, line: 412
# File: docs/master/notifications.md, line: 412
#. type: Title ###
#, no-wrap
msgid "Customizing The Subject"
msgstr ""

# File: docs/8.x/notifications.md, line: 413
# File: docs/9.x/notifications.md, line: 415
# File: docs/master/notifications.md, line: 415
#. type: Plain text
msgid "By default, the email's subject is the class name of the notification formatted to \"Title Case\". So, if your notification class is named `InvoicePaid`, the email's subject will be `Invoice Paid`. If you would like to specify a different subject for the message, you may call the `subject` method when building your message:"
msgstr ""

# File: docs/8.x/notifications.md, line: 426
# File: docs/9.x/notifications.md, line: 428
# File: docs/master/notifications.md, line: 428
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the mail representation of the notification.\n"
"     *\n"
"     * @param  mixed  $notifiable\n"
"     * @return \\Illuminate\\Notifications\\Messages\\MailMessage\n"
"     */\n"
"    public function toMail($notifiable)\n"
"    {\n"
"        return (new MailMessage)\n"
"                    ->subject('Notification Subject')\n"
"                    ->line('...');\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 428
# File: docs/9.x/notifications.md, line: 430
# File: docs/master/notifications.md, line: 430
#. type: Plain text
#, no-wrap
msgid "<a name=\"customizing-the-mailer\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 428
# File: docs/9.x/notifications.md, line: 430
# File: docs/master/notifications.md, line: 430
#. type: Title ###
#, no-wrap
msgid "Customizing The Mailer"
msgstr ""

# File: docs/8.x/notifications.md, line: 431
# File: docs/9.x/notifications.md, line: 433
# File: docs/master/notifications.md, line: 433
#. type: Plain text
msgid "By default, the email notification will be sent using the default mailer defined in the `config/mail.php` configuration file. However, you may specify a different mailer at runtime by calling the `mailer` method when building your message:"
msgstr ""

# File: docs/8.x/notifications.md, line: 444
# File: docs/9.x/notifications.md, line: 446
# File: docs/master/notifications.md, line: 446
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the mail representation of the notification.\n"
"     *\n"
"     * @param  mixed  $notifiable\n"
"     * @return \\Illuminate\\Notifications\\Messages\\MailMessage\n"
"     */\n"
"    public function toMail($notifiable)\n"
"    {\n"
"        return (new MailMessage)\n"
"                    ->mailer('postmark')\n"
"                    ->line('...');\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 446
# File: docs/9.x/notifications.md, line: 448
# File: docs/master/notifications.md, line: 448
#. type: Plain text
#, no-wrap
msgid "<a name=\"customizing-the-templates\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 446
# File: docs/9.x/notifications.md, line: 448
# File: docs/master/notifications.md, line: 448
#. type: Title ###
#, no-wrap
msgid "Customizing The Templates"
msgstr ""

# File: docs/8.x/notifications.md, line: 449
# File: docs/9.x/notifications.md, line: 451
# File: docs/master/notifications.md, line: 451
#. type: Plain text
msgid "You can modify the HTML and plain-text template used by mail notifications by publishing the notification package's resources. After running this command, the mail notification templates will be located in the `resources/views/vendor/notifications` directory:"
msgstr ""

# File: docs/8.x/notifications.md, line: 451
#. type: Plain text
#, no-wrap
msgid "    php artisan vendor:publish --tag=laravel-notifications\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 453
# File: docs/9.x/notifications.md, line: 457
# File: docs/master/notifications.md, line: 457
#. type: Plain text
#, no-wrap
msgid "<a name=\"mail-attachments\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 453
# File: docs/9.x/notifications.md, line: 457
# File: docs/master/notifications.md, line: 457
#. type: Title ###
#, no-wrap
msgid "Attachments"
msgstr ""

# File: docs/8.x/notifications.md, line: 456
# File: docs/9.x/notifications.md, line: 460
# File: docs/master/notifications.md, line: 460
#. type: Plain text
msgid "To add attachments to an email notification, use the `attach` method while building your message. The `attach` method accepts the absolute path to the file as its first argument:"
msgstr ""

# File: docs/8.x/notifications.md, line: 469
# File: docs/9.x/notifications.md, line: 473
# File: docs/master/notifications.md, line: 473
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the mail representation of the notification.\n"
"     *\n"
"     * @param  mixed  $notifiable\n"
"     * @return \\Illuminate\\Notifications\\Messages\\MailMessage\n"
"     */\n"
"    public function toMail($notifiable)\n"
"    {\n"
"        return (new MailMessage)\n"
"                    ->greeting('Hello!')\n"
"                    ->attach('/path/to/file');\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 471
# File: docs/9.x/notifications.md, line: 475
# File: docs/master/notifications.md, line: 475
#. type: Plain text
msgid "When attaching files to a message, you may also specify the display name and / or MIME type by passing an `array` as the second argument to the `attach` method:"
msgstr ""

# File: docs/8.x/notifications.md, line: 487
# File: docs/9.x/notifications.md, line: 491
# File: docs/master/notifications.md, line: 491
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the mail representation of the notification.\n"
"     *\n"
"     * @param  mixed  $notifiable\n"
"     * @return \\Illuminate\\Notifications\\Messages\\MailMessage\n"
"     */\n"
"    public function toMail($notifiable)\n"
"    {\n"
"        return (new MailMessage)\n"
"                    ->greeting('Hello!')\n"
"                    ->attach('/path/to/file', [\n"
"                        'as' => 'name.pdf',\n"
"                        'mime' => 'application/pdf',\n"
"                    ]);\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 489
# File: docs/9.x/notifications.md, line: 493
# File: docs/master/notifications.md, line: 493
#. type: Plain text
msgid "Unlike attaching files in mailable objects, you may not attach a file directly from a storage disk using `attachFromStorage`. You should rather use the `attach` method with an absolute path to the file on the storage disk. Alternatively, you could return a [mailable](/docs/{{version}}/mail#generating-mailables) from the `toMail` method:"
msgstr ""

# File: docs/8.x/notifications.md, line: 491
# File: docs/8.x/notifications.md, line: 531
# File: docs/9.x/notifications.md, line: 495
# File: docs/9.x/notifications.md, line: 535
# File: docs/master/notifications.md, line: 495
# File: docs/master/notifications.md, line: 535
#. type: Plain text
#, no-wrap
msgid "    use App\\Mail\\InvoicePaid as InvoicePaidMailable;\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 504
# File: docs/9.x/notifications.md, line: 508
# File: docs/master/notifications.md, line: 508
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the mail representation of the notification.\n"
"     *\n"
"     * @param  mixed  $notifiable\n"
"     * @return Mailable\n"
"     */\n"
"    public function toMail($notifiable)\n"
"    {\n"
"        return (new InvoicePaidMailable($this->invoice))\n"
"                    ->to($notifiable->email)\n"
"                    ->attachFromStorage('/path/to/file');\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 506
# File: docs/9.x/notifications.md, line: 510
# File: docs/master/notifications.md, line: 510
#. type: Plain text
#, no-wrap
msgid "<a name=\"raw-data-attachments\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 506
# File: docs/9.x/notifications.md, line: 510
# File: docs/master/notifications.md, line: 510
#. type: Title ####
#, no-wrap
msgid "Raw Data Attachments"
msgstr ""

# File: docs/8.x/notifications.md, line: 509
# File: docs/9.x/notifications.md, line: 513
# File: docs/master/notifications.md, line: 513
#. type: Plain text
msgid "The `attachData` method may be used to attach a raw string of bytes as an attachment. When calling the `attachData` method, you should provide the filename that should be assigned to the attachment:"
msgstr ""

# File: docs/8.x/notifications.md, line: 524
# File: docs/9.x/notifications.md, line: 528
# File: docs/master/notifications.md, line: 528
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the mail representation of the notification.\n"
"     *\n"
"     * @param  mixed  $notifiable\n"
"     * @return \\Illuminate\\Notifications\\Messages\\MailMessage\n"
"     */\n"
"    public function toMail($notifiable)\n"
"    {\n"
"        return (new MailMessage)\n"
"                    ->greeting('Hello!')\n"
"                    ->attachData($this->pdf, 'name.pdf', [\n"
"                        'mime' => 'application/pdf',\n"
"                    ]);\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 526
# File: docs/9.x/notifications.md, line: 530
# File: docs/master/notifications.md, line: 530
#. type: Plain text
#, no-wrap
msgid "<a name=\"using-mailables\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 526
# File: docs/9.x/notifications.md, line: 530
# File: docs/master/notifications.md, line: 530
#. type: Title ###
#, no-wrap
msgid "Using Mailables"
msgstr ""

# File: docs/8.x/notifications.md, line: 529
# File: docs/9.x/notifications.md, line: 533
# File: docs/master/notifications.md, line: 533
#. type: Plain text
msgid "If needed, you may return a full [mailable object](/docs/{{version}}/mail) from your notification's `toMail` method. When returning a `Mailable` instead of a `MailMessage`, you will need to specify the message recipient using the mailable object's `to` method:"
msgstr ""

# File: docs/8.x/notifications.md, line: 543
# File: docs/9.x/notifications.md, line: 547
# File: docs/master/notifications.md, line: 547
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the mail representation of the notification.\n"
"     *\n"
"     * @param  mixed  $notifiable\n"
"     * @return Mailable\n"
"     */\n"
"    public function toMail($notifiable)\n"
"    {\n"
"        return (new InvoicePaidMailable($this->invoice))\n"
"                    ->to($notifiable->email);\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 545
# File: docs/9.x/notifications.md, line: 549
# File: docs/master/notifications.md, line: 549
#. type: Plain text
#, no-wrap
msgid "<a name=\"mailables-and-on-demand-notifications\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 545
# File: docs/9.x/notifications.md, line: 549
# File: docs/master/notifications.md, line: 549
#. type: Title ####
#, no-wrap
msgid "Mailables & On-Demand Notifications"
msgstr ""

# File: docs/8.x/notifications.md, line: 548
# File: docs/9.x/notifications.md, line: 552
# File: docs/master/notifications.md, line: 552
#. type: Plain text
msgid "If you are sending an [on-demand notification](#on-demand-notifications), the `$notifiable` instance given to the `toMail` method will be an instance of `Illuminate\\Notifications\\AnonymousNotifiable`, which offers a `routeNotificationFor` method that may be used to retrieve the email address the on-demand notification should be sent to:"
msgstr ""

# File: docs/8.x/notifications.md, line: 551
# File: docs/9.x/notifications.md, line: 555
# File: docs/master/notifications.md, line: 555
#. type: Plain text
#, no-wrap
msgid "    use App\\Mail\\InvoicePaid as InvoicePaidMailable;\n"
"    use Illuminate\\Notifications\\AnonymousNotifiable;\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 563
# File: docs/9.x/notifications.md, line: 567
# File: docs/master/notifications.md, line: 567
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the mail representation of the notification.\n"
"     *\n"
"     * @param  mixed  $notifiable\n"
"     * @return Mailable\n"
"     */\n"
"    public function toMail($notifiable)\n"
"    {\n"
"        $address = $notifiable instanceof AnonymousNotifiable\n"
"                ? $notifiable->routeNotificationFor('mail')\n"
"                : $notifiable->email;\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 567
# File: docs/9.x/notifications.md, line: 571
# File: docs/master/notifications.md, line: 571
#. type: Plain text
#, no-wrap
msgid "        return (new InvoicePaidMailable($this->invoice))\n"
"                    ->to($address);\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 569
# File: docs/9.x/notifications.md, line: 573
# File: docs/master/notifications.md, line: 573
#. type: Plain text
#, no-wrap
msgid "<a name=\"previewing-mail-notifications\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 569
# File: docs/9.x/notifications.md, line: 573
# File: docs/master/notifications.md, line: 573
#. type: Title ###
#, no-wrap
msgid "Previewing Mail Notifications"
msgstr ""

# File: docs/8.x/notifications.md, line: 572
# File: docs/9.x/notifications.md, line: 576
# File: docs/master/notifications.md, line: 576
#. type: Plain text
msgid "When designing a mail notification template, it is convenient to quickly preview the rendered mail message in your browser like a typical Blade template. For this reason, Laravel allows you to return any mail message generated by a mail notification directly from a route closure or controller. When a `MailMessage` is returned, it will be rendered and displayed in the browser, allowing you to quickly preview its design without needing to send it to an actual email address:"
msgstr ""

# File: docs/8.x/notifications.md, line: 575
# File: docs/9.x/notifications.md, line: 579
# File: docs/master/notifications.md, line: 579
#. type: Plain text
#, no-wrap
msgid "    use App\\Models\\Invoice;\n"
"    use App\\Notifications\\InvoicePaid;\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 578
# File: docs/9.x/notifications.md, line: 582
# File: docs/master/notifications.md, line: 582
#. type: Plain text
#, no-wrap
msgid "    Route::get('/notification', function () {\n"
"        $invoice = Invoice::find(1);\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 582
# File: docs/9.x/notifications.md, line: 586
# File: docs/master/notifications.md, line: 586
#. type: Plain text
#, no-wrap
msgid "        return (new InvoicePaid($invoice))\n"
"                    ->toMail($invoice->user);\n"
"    });\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 584
# File: docs/9.x/notifications.md, line: 588
# File: docs/master/notifications.md, line: 588
#. type: Plain text
#, no-wrap
msgid "<a name=\"markdown-mail-notifications\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 584
# File: docs/9.x/notifications.md, line: 588
# File: docs/master/notifications.md, line: 588
#. type: Title ##
#, no-wrap
msgid "Markdown Mail Notifications"
msgstr ""

# File: docs/8.x/notifications.md, line: 587
# File: docs/9.x/notifications.md, line: 591
# File: docs/master/notifications.md, line: 591
#. type: Plain text
msgid "Markdown mail notifications allow you to take advantage of the pre-built templates of mail notifications, while giving you more freedom to write longer, customized messages. Since the messages are written in Markdown, Laravel is able to render beautiful, responsive HTML templates for the messages while also automatically generating a plain-text counterpart."
msgstr ""

# File: docs/8.x/notifications.md, line: 589
# File: docs/9.x/notifications.md, line: 593
# File: docs/master/notifications.md, line: 593
#. type: Plain text
#, no-wrap
msgid "<a name=\"generating-the-message\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 589
# File: docs/9.x/notifications.md, line: 593
# File: docs/master/notifications.md, line: 593
#. type: Title ###
#, no-wrap
msgid "Generating The Message"
msgstr ""

# File: docs/8.x/notifications.md, line: 592
# File: docs/9.x/notifications.md, line: 596
# File: docs/master/notifications.md, line: 596
#. type: Plain text
msgid "To generate a notification with a corresponding Markdown template, you may use the `--markdown` option of the `make:notification` Artisan command:"
msgstr ""

# File: docs/8.x/notifications.md, line: 594
#. type: Plain text
#, no-wrap
msgid "    php artisan make:notification InvoicePaid --markdown=mail.invoice.paid\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 596
# File: docs/9.x/notifications.md, line: 602
# File: docs/master/notifications.md, line: 602
#. type: Plain text
msgid "Like all other mail notifications, notifications that use Markdown templates should define a `toMail` method on their notification class. However, instead of using the `line` and `action` methods to construct the notification, use the `markdown` method to specify the name of the Markdown template that should be used. An array of data you wish to make available to the template may be passed as the method's second argument:"
msgstr ""

# File: docs/8.x/notifications.md, line: 611
# File: docs/9.x/notifications.md, line: 617
# File: docs/master/notifications.md, line: 617
#. type: Plain text
#, no-wrap
msgid "        return (new MailMessage)\n"
"                    ->subject('Invoice Paid')\n"
"                    ->markdown('mail.invoice.paid', ['url' => $url]);\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 613
# File: docs/9.x/notifications.md, line: 619
# File: docs/master/notifications.md, line: 619
#. type: Plain text
#, no-wrap
msgid "<a name=\"writing-the-message\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 613
# File: docs/9.x/notifications.md, line: 619
# File: docs/master/notifications.md, line: 619
#. type: Title ###
#, no-wrap
msgid "Writing The Message"
msgstr ""

# File: docs/8.x/notifications.md, line: 616
# File: docs/9.x/notifications.md, line: 622
# File: docs/master/notifications.md, line: 622
#. type: Plain text
msgid "Markdown mail notifications use a combination of Blade components and Markdown syntax which allow you to easily construct notifications while leveraging Laravel's pre-crafted notification components:"
msgstr ""

# File: docs/8.x/notifications.md, line: 619
#. type: Plain text
#, no-wrap
msgid "    @component('mail::message')\n"
"    # Invoice Paid\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 621
#. type: Plain text
#, no-wrap
msgid "    Your invoice has been paid!\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 625
#. type: Plain text
#, no-wrap
msgid "    @component('mail::button', ['url' => $url])\n"
"    View Invoice\n"
"    @endcomponent\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 629
#. type: Plain text
#, no-wrap
msgid "    Thanks,<br>\n"
"    {{ config('app.name') }}\n"
"    @endcomponent\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 631
# File: docs/9.x/notifications.md, line: 639
# File: docs/master/notifications.md, line: 639
#. type: Plain text
#, no-wrap
msgid "<a name=\"button-component\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 631
# File: docs/9.x/notifications.md, line: 639
# File: docs/master/notifications.md, line: 639
#. type: Title ####
#, no-wrap
msgid "Button Component"
msgstr ""

# File: docs/8.x/notifications.md, line: 634
# File: docs/9.x/notifications.md, line: 642
# File: docs/master/notifications.md, line: 642
#. type: Plain text
msgid "The button component renders a centered button link. The component accepts two arguments, a `url` and an optional `color`. Supported colors are `primary`, `green`, and `red`. You may add as many button components to a notification as you wish:"
msgstr ""

# File: docs/8.x/notifications.md, line: 638
#. type: Plain text
#, no-wrap
msgid "    @component('mail::button', ['url' => $url, 'color' => 'green'])\n"
"    View Invoice\n"
"    @endcomponent\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 640
# File: docs/9.x/notifications.md, line: 650
# File: docs/master/notifications.md, line: 650
#. type: Plain text
#, no-wrap
msgid "<a name=\"panel-component\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 640
# File: docs/9.x/notifications.md, line: 650
# File: docs/master/notifications.md, line: 650
#. type: Title ####
#, no-wrap
msgid "Panel Component"
msgstr ""

# File: docs/8.x/notifications.md, line: 643
# File: docs/9.x/notifications.md, line: 653
# File: docs/master/notifications.md, line: 653
#. type: Plain text
msgid "The panel component renders the given block of text in a panel that has a slightly different background color than the rest of the notification. This allows you to draw attention to a given block of text:"
msgstr ""

# File: docs/8.x/notifications.md, line: 647
#. type: Plain text
#, no-wrap
msgid "    @component('mail::panel')\n"
"    This is the panel content.\n"
"    @endcomponent\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 649
# File: docs/9.x/notifications.md, line: 661
# File: docs/master/notifications.md, line: 661
#. type: Plain text
#, no-wrap
msgid "<a name=\"table-component\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 649
# File: docs/9.x/notifications.md, line: 661
# File: docs/master/notifications.md, line: 661
#. type: Title ####
#, no-wrap
msgid "Table Component"
msgstr ""

# File: docs/8.x/notifications.md, line: 652
# File: docs/9.x/notifications.md, line: 664
# File: docs/master/notifications.md, line: 664
#. type: Plain text
msgid "The table component allows you to transform a Markdown table into an HTML table. The component accepts the Markdown table as its content. Table column alignment is supported using the default Markdown table alignment syntax:"
msgstr ""

# File: docs/8.x/notifications.md, line: 659
#. type: Plain text
#, no-wrap
msgid "    @component('mail::table')\n"
"    | Laravel       | Table         | Example  |\n"
"    | ------------- |:-------------:| --------:|\n"
"    | Col 2 is      | Centered      | $10      |\n"
"    | Col 3 is      | Right-Aligned | $20      |\n"
"    @endcomponent\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 661
# File: docs/9.x/notifications.md, line: 675
# File: docs/master/notifications.md, line: 675
#. type: Plain text
#, no-wrap
msgid "<a name=\"customizing-the-components\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 661
# File: docs/9.x/notifications.md, line: 675
# File: docs/master/notifications.md, line: 675
#. type: Title ###
#, no-wrap
msgid "Customizing The Components"
msgstr ""

# File: docs/8.x/notifications.md, line: 664
# File: docs/9.x/notifications.md, line: 678
# File: docs/master/notifications.md, line: 678
#. type: Plain text
msgid "You may export all of the Markdown notification components to your own application for customization. To export the components, use the `vendor:publish` Artisan command to publish the `laravel-mail` asset tag:"
msgstr ""

# File: docs/8.x/notifications.md, line: 666
#. type: Plain text
#, no-wrap
msgid "    php artisan vendor:publish --tag=laravel-mail\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 668
# File: docs/9.x/notifications.md, line: 684
# File: docs/master/notifications.md, line: 684
#. type: Plain text
msgid "This command will publish the Markdown mail components to the `resources/views/vendor/mail` directory. The `mail` directory will contain an `html` and a `text` directory, each containing their respective representations of every available component. You are free to customize these components however you like."
msgstr ""

# File: docs/8.x/notifications.md, line: 670
# File: docs/9.x/notifications.md, line: 686
# File: docs/master/notifications.md, line: 686
#. type: Plain text
#, no-wrap
msgid "<a name=\"customizing-the-css\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 670
# File: docs/9.x/notifications.md, line: 686
# File: docs/master/notifications.md, line: 686
#. type: Title ####
#, no-wrap
msgid "Customizing The CSS"
msgstr ""

# File: docs/8.x/notifications.md, line: 673
# File: docs/9.x/notifications.md, line: 689
# File: docs/master/notifications.md, line: 689
#. type: Plain text
msgid "After exporting the components, the `resources/views/vendor/mail/html/themes` directory will contain a `default.css` file. You may customize the CSS in this file and your styles will automatically be in-lined within the HTML representations of your Markdown notifications."
msgstr ""

# File: docs/8.x/notifications.md, line: 675
# File: docs/9.x/notifications.md, line: 691
# File: docs/master/notifications.md, line: 691
#. type: Plain text
msgid "If you would like to build an entirely new theme for Laravel's Markdown components, you may place a CSS file within the `html/themes` directory. After naming and saving your CSS file, update the `theme` option of the `mail` configuration file to match the name of your new theme."
msgstr ""

# File: docs/8.x/notifications.md, line: 677
# File: docs/9.x/notifications.md, line: 693
# File: docs/master/notifications.md, line: 693
#. type: Plain text
msgid "To customize the theme for an individual notification, you may call the `theme` method while building the notification's mail message. The `theme` method accepts the name of the theme that should be used when sending the notification:"
msgstr ""

# File: docs/8.x/notifications.md, line: 691
# File: docs/9.x/notifications.md, line: 707
# File: docs/master/notifications.md, line: 707
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the mail representation of the notification.\n"
"     *\n"
"     * @param  mixed  $notifiable\n"
"     * @return \\Illuminate\\Notifications\\Messages\\MailMessage\n"
"     */\n"
"    public function toMail($notifiable)\n"
"    {\n"
"        return (new MailMessage)\n"
"                    ->theme('invoice')\n"
"                    ->subject('Invoice Paid')\n"
"                    ->markdown('mail.invoice.paid', ['url' => $url]);\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 693
# File: docs/9.x/notifications.md, line: 709
# File: docs/master/notifications.md, line: 709
#. type: Plain text
#, no-wrap
msgid "<a name=\"database-notifications\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 693
# File: docs/9.x/notifications.md, line: 709
# File: docs/master/notifications.md, line: 709
#. type: Title ##
#, no-wrap
msgid "Database Notifications"
msgstr ""

# File: docs/8.x/notifications.md, line: 696
# File: docs/9.x/notifications.md, line: 712
# File: docs/master/notifications.md, line: 712
#. type: Plain text
#, no-wrap
msgid "<a name=\"database-prerequisites\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 696
# File: docs/8.x/notifications.md, line: 780
# File: docs/8.x/notifications.md, line: 873
# File: docs/8.x/notifications.md, line: 1015
# File: docs/9.x/notifications.md, line: 712
# File: docs/9.x/notifications.md, line: 798
# File: docs/9.x/notifications.md, line: 891
# File: docs/9.x/notifications.md, line: 1033
# File: docs/master/notifications.md, line: 712
# File: docs/master/notifications.md, line: 798
# File: docs/master/notifications.md, line: 891
# File: docs/master/notifications.md, line: 1033
#. type: Title ###
#, no-wrap
msgid "Prerequisites"
msgstr ""

# File: docs/8.x/notifications.md, line: 699
# File: docs/9.x/notifications.md, line: 715
# File: docs/master/notifications.md, line: 715
#. type: Plain text
msgid "The `database` notification channel stores the notification information in a database table. This table will contain information such as the notification type as well as a JSON data structure that describes the notification."
msgstr ""

# File: docs/8.x/notifications.md, line: 701
# File: docs/9.x/notifications.md, line: 717
# File: docs/master/notifications.md, line: 717
#. type: Plain text
msgid "You can query the table to display the notifications in your application's user interface. But, before you can do that, you will need to create a database table to hold your notifications. You may use the `notifications:table` command to generate a [migration](/docs/{{version}}/migrations) with the proper table schema:"
msgstr ""

# File: docs/8.x/notifications.md, line: 703
#. type: Plain text
#, no-wrap
msgid "    php artisan notifications:table\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 705
#. type: Plain text
#, no-wrap
msgid "    php artisan migrate\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 707
# File: docs/9.x/notifications.md, line: 725
# File: docs/master/notifications.md, line: 725
#. type: Plain text
#, no-wrap
msgid "<a name=\"formatting-database-notifications\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 707
# File: docs/9.x/notifications.md, line: 725
# File: docs/master/notifications.md, line: 725
#. type: Title ###
#, no-wrap
msgid "Formatting Database Notifications"
msgstr ""

# File: docs/8.x/notifications.md, line: 710
# File: docs/9.x/notifications.md, line: 728
# File: docs/master/notifications.md, line: 728
#. type: Plain text
msgid "If a notification supports being stored in a database table, you should define a `toDatabase` or `toArray` method on the notification class. This method will receive a `$notifiable` entity and should return a plain PHP array. The returned array will be encoded as JSON and stored in the `data` column of your `notifications` table. Let's take a look at an example `toArray` method:"
msgstr ""

# File: docs/8.x/notifications.md, line: 724
# File: docs/9.x/notifications.md, line: 742
# File: docs/master/notifications.md, line: 742
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the array representation of the notification.\n"
"     *\n"
"     * @param  mixed  $notifiable\n"
"     * @return array\n"
"     */\n"
"    public function toArray($notifiable)\n"
"    {\n"
"        return [\n"
"            'invoice_id' => $this->invoice->id,\n"
"            'amount' => $this->invoice->amount,\n"
"        ];\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 726
# File: docs/9.x/notifications.md, line: 744
# File: docs/master/notifications.md, line: 744
#. type: Plain text
#, no-wrap
msgid "<a name=\"todatabase-vs-toarray\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 726
# File: docs/9.x/notifications.md, line: 744
# File: docs/master/notifications.md, line: 744
#. type: Title ####
#, no-wrap
msgid "`toDatabase` Vs. `toArray`"
msgstr ""

# File: docs/8.x/notifications.md, line: 729
# File: docs/9.x/notifications.md, line: 747
# File: docs/master/notifications.md, line: 747
#. type: Plain text
msgid "The `toArray` method is also used by the `broadcast` channel to determine which data to broadcast to your JavaScript powered frontend. If you would like to have two different array representations for the `database` and `broadcast` channels, you should define a `toDatabase` method instead of a `toArray` method."
msgstr ""

# File: docs/8.x/notifications.md, line: 731
# File: docs/9.x/notifications.md, line: 749
# File: docs/master/notifications.md, line: 749
#. type: Plain text
#, no-wrap
msgid "<a name=\"accessing-the-notifications\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 731
# File: docs/9.x/notifications.md, line: 749
# File: docs/master/notifications.md, line: 749
#. type: Title ###
#, no-wrap
msgid "Accessing The Notifications"
msgstr ""

# File: docs/8.x/notifications.md, line: 734
# File: docs/9.x/notifications.md, line: 752
# File: docs/master/notifications.md, line: 752
#. type: Plain text
msgid "Once notifications are stored in the database, you need a convenient way to access them from your notifiable entities. The `Illuminate\\Notifications\\Notifiable` trait, which is included on Laravel's default `App\\Models\\User` model, includes a `notifications` [Eloquent relationship](/docs/{{version}}/eloquent-relationships) that returns the notifications for the entity. To fetch notifications, you may access this method like any other Eloquent relationship. By default, notifications will be sorted by the `created_at` timestamp with the most recent notifications at the beginning of the collection:"
msgstr ""

# File: docs/8.x/notifications.md, line: 736
# File: docs/8.x/notifications.md, line: 744
# File: docs/8.x/notifications.md, line: 757
# File: docs/8.x/notifications.md, line: 769
# File: docs/9.x/notifications.md, line: 754
# File: docs/9.x/notifications.md, line: 762
# File: docs/9.x/notifications.md, line: 775
# File: docs/9.x/notifications.md, line: 787
# File: docs/master/notifications.md, line: 754
# File: docs/master/notifications.md, line: 762
# File: docs/master/notifications.md, line: 775
# File: docs/master/notifications.md, line: 787
#. type: Plain text
#, no-wrap
msgid "    $user = App\\Models\\User::find(1);\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 740
# File: docs/9.x/notifications.md, line: 758
# File: docs/master/notifications.md, line: 758
#. type: Plain text
#, no-wrap
msgid "    foreach ($user->notifications as $notification) {\n"
"        echo $notification->type;\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 742
# File: docs/9.x/notifications.md, line: 760
# File: docs/master/notifications.md, line: 760
#. type: Plain text
msgid "If you want to retrieve only the \"unread\" notifications, you may use the `unreadNotifications` relationship. Again, these notifications will be sorted by the `created_at` timestamp with the most recent notifications at the beginning of the collection:"
msgstr ""

# File: docs/8.x/notifications.md, line: 748
# File: docs/9.x/notifications.md, line: 766
# File: docs/master/notifications.md, line: 766
#. type: Plain text
#, no-wrap
msgid "    foreach ($user->unreadNotifications as $notification) {\n"
"        echo $notification->type;\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 750
# File: docs/9.x/notifications.md, line: 768
# File: docs/master/notifications.md, line: 768
#. type: Plain text
#, no-wrap
msgid "> {tip} To access your notifications from your JavaScript client, you should define a notification controller for your application which returns the notifications for a notifiable entity, such as the current user. You may then make an HTTP request to that controller's URL from your JavaScript client.\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 752
# File: docs/9.x/notifications.md, line: 770
# File: docs/master/notifications.md, line: 770
#. type: Plain text
#, no-wrap
msgid "<a name=\"marking-notifications-as-read\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 752
# File: docs/9.x/notifications.md, line: 770
# File: docs/master/notifications.md, line: 770
#. type: Title ###
#, no-wrap
msgid "Marking Notifications As Read"
msgstr ""

# File: docs/8.x/notifications.md, line: 755
# File: docs/9.x/notifications.md, line: 773
# File: docs/master/notifications.md, line: 773
#. type: Plain text
msgid "Typically, you will want to mark a notification as \"read\" when a user views it. The `Illuminate\\Notifications\\Notifiable` trait provides a `markAsRead` method, which updates the `read_at` column on the notification's database record:"
msgstr ""

# File: docs/8.x/notifications.md, line: 761
# File: docs/9.x/notifications.md, line: 779
# File: docs/master/notifications.md, line: 779
#. type: Plain text
#, no-wrap
msgid "    foreach ($user->unreadNotifications as $notification) {\n"
"        $notification->markAsRead();\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 763
# File: docs/9.x/notifications.md, line: 781
# File: docs/master/notifications.md, line: 781
#. type: Plain text
msgid "However, instead of looping through each notification, you may use the `markAsRead` method directly on a collection of notifications:"
msgstr ""

# File: docs/8.x/notifications.md, line: 765
# File: docs/9.x/notifications.md, line: 783
# File: docs/master/notifications.md, line: 783
#. type: Plain text
#, no-wrap
msgid "    $user->unreadNotifications->markAsRead();\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 767
# File: docs/9.x/notifications.md, line: 785
# File: docs/master/notifications.md, line: 785
#. type: Plain text
msgid "You may also use a mass-update query to mark all of the notifications as read without retrieving them from the database:"
msgstr ""

# File: docs/8.x/notifications.md, line: 771
# File: docs/9.x/notifications.md, line: 789
# File: docs/master/notifications.md, line: 789
#. type: Plain text
#, no-wrap
msgid "    $user->unreadNotifications()->update(['read_at' => now()]);\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 773
# File: docs/9.x/notifications.md, line: 791
# File: docs/master/notifications.md, line: 791
#. type: Plain text
msgid "You may `delete` the notifications to remove them from the table entirely:"
msgstr ""

# File: docs/8.x/notifications.md, line: 775
# File: docs/9.x/notifications.md, line: 793
# File: docs/master/notifications.md, line: 793
#. type: Plain text
#, no-wrap
msgid "    $user->notifications()->delete();\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 777
# File: docs/9.x/notifications.md, line: 795
# File: docs/master/notifications.md, line: 795
#. type: Plain text
#, no-wrap
msgid "<a name=\"broadcast-notifications\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 777
# File: docs/9.x/notifications.md, line: 795
# File: docs/master/notifications.md, line: 795
#. type: Title ##
#, no-wrap
msgid "Broadcast Notifications"
msgstr ""

# File: docs/8.x/notifications.md, line: 780
# File: docs/9.x/notifications.md, line: 798
# File: docs/master/notifications.md, line: 798
#. type: Plain text
#, no-wrap
msgid "<a name=\"broadcast-prerequisites\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 783
# File: docs/9.x/notifications.md, line: 801
# File: docs/master/notifications.md, line: 801
#. type: Plain text
msgid "Before broadcasting notifications, you should configure and be familiar with Laravel's [event broadcasting](/docs/{{version}}/broadcasting) services. Event broadcasting provides a way to react to server-side Laravel events from your JavaScript powered frontend."
msgstr ""

# File: docs/8.x/notifications.md, line: 785
# File: docs/9.x/notifications.md, line: 803
# File: docs/master/notifications.md, line: 803
#. type: Plain text
#, no-wrap
msgid "<a name=\"formatting-broadcast-notifications\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 785
# File: docs/9.x/notifications.md, line: 803
# File: docs/master/notifications.md, line: 803
#. type: Title ###
#, no-wrap
msgid "Formatting Broadcast Notifications"
msgstr ""

# File: docs/8.x/notifications.md, line: 788
# File: docs/9.x/notifications.md, line: 806
# File: docs/master/notifications.md, line: 806
#. type: Plain text
msgid "The `broadcast` channel broadcasts notifications using Laravel's [event broadcasting](/docs/{{version}}/broadcasting) services, allowing your JavaScript powered frontend to catch notifications in realtime. If a notification supports broadcasting, you can define a `toBroadcast` method on the notification class. This method will receive a `$notifiable` entity and should return a `BroadcastMessage` instance. If the `toBroadcast` method does not exist, the `toArray` method will be used to gather the data that should be broadcast. The returned data will be encoded as JSON and broadcast to your JavaScript powered frontend. Let's take a look at an example `toBroadcast` method:"
msgstr ""

# File: docs/8.x/notifications.md, line: 790
# File: docs/8.x/notifications.md, line: 820
# File: docs/9.x/notifications.md, line: 808
# File: docs/9.x/notifications.md, line: 838
# File: docs/master/notifications.md, line: 808
# File: docs/master/notifications.md, line: 838
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Notifications\\Messages\\BroadcastMessage;\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 804
# File: docs/9.x/notifications.md, line: 822
# File: docs/master/notifications.md, line: 822
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the broadcastable representation of the notification.\n"
"     *\n"
"     * @param  mixed  $notifiable\n"
"     * @return BroadcastMessage\n"
"     */\n"
"    public function toBroadcast($notifiable)\n"
"    {\n"
"        return new BroadcastMessage([\n"
"            'invoice_id' => $this->invoice->id,\n"
"            'amount' => $this->invoice->amount,\n"
"        ]);\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 806
# File: docs/9.x/notifications.md, line: 824
# File: docs/master/notifications.md, line: 824
#. type: Plain text
#, no-wrap
msgid "<a name=\"broadcast-queue-configuration\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 806
# File: docs/9.x/notifications.md, line: 824
# File: docs/master/notifications.md, line: 824
#. type: Title ####
#, no-wrap
msgid "Broadcast Queue Configuration"
msgstr ""

# File: docs/8.x/notifications.md, line: 809
# File: docs/9.x/notifications.md, line: 827
# File: docs/master/notifications.md, line: 827
#. type: Plain text
msgid "All broadcast notifications are queued for broadcasting. If you would like to configure the queue connection or queue name that is used to queue the broadcast operation, you may use the `onConnection` and `onQueue` methods of the `BroadcastMessage`:"
msgstr ""

# File: docs/8.x/notifications.md, line: 813
# File: docs/9.x/notifications.md, line: 831
# File: docs/master/notifications.md, line: 831
#. type: Plain text
#, no-wrap
msgid "    return (new BroadcastMessage($data))\n"
"                    ->onConnection('sqs')\n"
"                    ->onQueue('broadcasts');\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 815
# File: docs/9.x/notifications.md, line: 833
# File: docs/master/notifications.md, line: 833
#. type: Plain text
#, no-wrap
msgid "<a name=\"customizing-the-notification-type\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 815
# File: docs/9.x/notifications.md, line: 833
# File: docs/master/notifications.md, line: 833
#. type: Title ####
#, no-wrap
msgid "Customizing The Notification Type"
msgstr ""

# File: docs/8.x/notifications.md, line: 818
# File: docs/9.x/notifications.md, line: 836
# File: docs/master/notifications.md, line: 836
#. type: Plain text
msgid "In addition to the data you specify, all broadcast notifications also have a `type` field containing the full class name of the notification. If you would like to customize the notification `type`, you may define a `broadcastType` method on the notification class:"
msgstr ""

# File: docs/8.x/notifications.md, line: 830
# File: docs/9.x/notifications.md, line: 848
# File: docs/master/notifications.md, line: 848
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the type of the notification being broadcast.\n"
"     *\n"
"     * @return string\n"
"     */\n"
"    public function broadcastType()\n"
"    {\n"
"        return 'broadcast.message';\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 832
# File: docs/9.x/notifications.md, line: 850
# File: docs/master/notifications.md, line: 850
#. type: Plain text
#, no-wrap
msgid "<a name=\"listening-for-notifications\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 832
# File: docs/9.x/notifications.md, line: 850
# File: docs/master/notifications.md, line: 850
#. type: Title ###
#, no-wrap
msgid "Listening For Notifications"
msgstr ""

# File: docs/8.x/notifications.md, line: 835
# File: docs/9.x/notifications.md, line: 853
# File: docs/master/notifications.md, line: 853
#. type: Plain text
msgid "Notifications will broadcast on a private channel formatted using a `{notifiable}.{id}` convention. So, if you are sending a notification to an `App\\Models\\User` instance with an ID of `1`, the notification will be broadcast on the `App.Models.User.1` private channel. When using [Laravel Echo](/docs/{{version}}/broadcasting#client-side-installation), you may easily listen for notifications on a channel using the `notification` method:"
msgstr ""

# File: docs/8.x/notifications.md, line: 840
# File: docs/9.x/notifications.md, line: 858
# File: docs/master/notifications.md, line: 858
#. type: Plain text
#, no-wrap
msgid "    Echo.private('App.Models.User.' + userId)\n"
"        .notification((notification) => {\n"
"            console.log(notification.type);\n"
"        });\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 842
# File: docs/9.x/notifications.md, line: 860
# File: docs/master/notifications.md, line: 860
#. type: Plain text
#, no-wrap
msgid "<a name=\"customizing-the-notification-channel\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 842
# File: docs/9.x/notifications.md, line: 860
# File: docs/master/notifications.md, line: 860
#. type: Title ####
#, no-wrap
msgid "Customizing The Notification Channel"
msgstr ""

# File: docs/8.x/notifications.md, line: 845
# File: docs/9.x/notifications.md, line: 863
# File: docs/master/notifications.md, line: 863
#. type: Plain text
msgid "If you would like to customize which channel that an entity's broadcast notifications are broadcast on, you may define a `receivesBroadcastNotificationsOn` method on the notifiable entity:"
msgstr ""

# File: docs/8.x/notifications.md, line: 853
# File: docs/9.x/notifications.md, line: 871
# File: docs/master/notifications.md, line: 871
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Broadcasting\\PrivateChannel;\n"
"    use Illuminate\\Foundation\\Auth\\User as Authenticatable;\n"
"    use Illuminate\\Notifications\\Notifiable;\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 868
# File: docs/9.x/notifications.md, line: 886
# File: docs/master/notifications.md, line: 886
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * The channels the user receives notification broadcasts on.\n"
"         *\n"
"         * @return string\n"
"         */\n"
"        public function receivesBroadcastNotificationsOn()\n"
"        {\n"
"            return 'users.'.$this->id;\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 870
# File: docs/9.x/notifications.md, line: 888
# File: docs/master/notifications.md, line: 888
#. type: Plain text
#, no-wrap
msgid "<a name=\"sms-notifications\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 870
# File: docs/9.x/notifications.md, line: 888
# File: docs/master/notifications.md, line: 888
#. type: Title ##
#, no-wrap
msgid "SMS Notifications"
msgstr ""

# File: docs/8.x/notifications.md, line: 873
# File: docs/9.x/notifications.md, line: 891
# File: docs/master/notifications.md, line: 891
#. type: Plain text
#, no-wrap
msgid "<a name=\"sms-prerequisites\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 876
# File: docs/9.x/notifications.md, line: 894
# File: docs/master/notifications.md, line: 894
#. type: Plain text
msgid "Sending SMS notifications in Laravel is powered by [Vonage](https://www.vonage.com/) (formerly known as Nexmo). Before you can send notifications via Vonage, you need to install the `laravel/nexmo-notification-channel` and `nexmo/laravel` Composer packages"
msgstr ""

# File: docs/8.x/notifications.md, line: 878
# File: docs/9.x/notifications.md, line: 896
# File: docs/master/notifications.md, line: 896
#. type: Plain text
#, no-wrap
msgid "    composer require laravel/nexmo-notification-channel nexmo/laravel\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 880
# File: docs/9.x/notifications.md, line: 898
# File: docs/master/notifications.md, line: 898
#. type: Plain text
msgid "The `nexmo/laravel` package includes [its own configuration file](https://github.com/Nexmo/nexmo-laravel/blob/master/config/nexmo.php). However, you are not required to export this configuration file to your own application. You can simply use the `NEXMO_KEY` and `NEXMO_SECRET` environment variables to set your Vonage public and secret key."
msgstr ""

# File: docs/8.x/notifications.md, line: 882
# File: docs/9.x/notifications.md, line: 900
# File: docs/master/notifications.md, line: 900
#. type: Plain text
msgid "Next, you will need to add a `nexmo` configuration entry to your `config/services.php` configuration file. You may copy the example configuration below to get started:"
msgstr ""

# File: docs/8.x/notifications.md, line: 886
# File: docs/9.x/notifications.md, line: 904
# File: docs/master/notifications.md, line: 904
#. type: Plain text
#, no-wrap
msgid "    'nexmo' => [\n"
"        'sms_from' => '15556666666',\n"
"    ],\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 888
# File: docs/9.x/notifications.md, line: 906
# File: docs/master/notifications.md, line: 906
#. type: Plain text
msgid "The `sms_from` option is the phone number that your SMS messages will be sent from. You should generate a phone number for your application in the Vonage control panel."
msgstr ""

# File: docs/8.x/notifications.md, line: 890
# File: docs/9.x/notifications.md, line: 908
# File: docs/master/notifications.md, line: 908
#. type: Plain text
#, no-wrap
msgid "<a name=\"formatting-sms-notifications\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 890
# File: docs/9.x/notifications.md, line: 908
# File: docs/master/notifications.md, line: 908
#. type: Title ###
#, no-wrap
msgid "Formatting SMS Notifications"
msgstr ""

# File: docs/8.x/notifications.md, line: 893
# File: docs/9.x/notifications.md, line: 911
# File: docs/master/notifications.md, line: 911
#. type: Plain text
msgid "If a notification supports being sent as an SMS, you should define a `toNexmo` method on the notification class. This method will receive a `$notifiable` entity and should return an `Illuminate\\Notifications\\Messages\\NexmoMessage` instance:"
msgstr ""

# File: docs/8.x/notifications.md, line: 905
# File: docs/9.x/notifications.md, line: 923
# File: docs/master/notifications.md, line: 923
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the Vonage / SMS representation of the notification.\n"
"     *\n"
"     * @param  mixed  $notifiable\n"
"     * @return \\Illuminate\\Notifications\\Messages\\NexmoMessage\n"
"     */\n"
"    public function toNexmo($notifiable)\n"
"    {\n"
"        return (new NexmoMessage)\n"
"                    ->content('Your SMS message content');\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 907
# File: docs/9.x/notifications.md, line: 925
# File: docs/master/notifications.md, line: 925
#. type: Plain text
#, no-wrap
msgid "<a name=\"unicode-content\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 907
# File: docs/9.x/notifications.md, line: 925
# File: docs/master/notifications.md, line: 925
#. type: Title ####
#, no-wrap
msgid "Unicode Content"
msgstr ""

# File: docs/8.x/notifications.md, line: 910
# File: docs/9.x/notifications.md, line: 928
# File: docs/master/notifications.md, line: 928
#. type: Plain text
msgid "If your SMS message will contain unicode characters, you should call the `unicode` method when constructing the `NexmoMessage` instance:"
msgstr ""

# File: docs/8.x/notifications.md, line: 923
# File: docs/9.x/notifications.md, line: 941
# File: docs/master/notifications.md, line: 941
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the Vonage / SMS representation of the notification.\n"
"     *\n"
"     * @param  mixed  $notifiable\n"
"     * @return \\Illuminate\\Notifications\\Messages\\NexmoMessage\n"
"     */\n"
"    public function toNexmo($notifiable)\n"
"    {\n"
"        return (new NexmoMessage)\n"
"                    ->content('Your unicode message')\n"
"                    ->unicode();\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 925
# File: docs/9.x/notifications.md, line: 943
# File: docs/master/notifications.md, line: 943
#. type: Plain text
#, no-wrap
msgid "<a name=\"formatting-shortcode-notifications\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 925
# File: docs/9.x/notifications.md, line: 943
# File: docs/master/notifications.md, line: 943
#. type: Title ###
#, no-wrap
msgid "Formatting Shortcode Notifications"
msgstr ""

# File: docs/8.x/notifications.md, line: 928
# File: docs/9.x/notifications.md, line: 946
# File: docs/master/notifications.md, line: 946
#. type: Plain text
msgid "Laravel also supports sending shortcode notifications, which are pre-defined message templates in your Vonage account. To send a shortcode SMS notification, you should define a `toShortcode` method on your notification class. From within this method, you may return an array specifying the type of notification (`alert`, `2fa`, or `marketing`) as well as the custom values that will populate the template:"
msgstr ""

# File: docs/8.x/notifications.md, line: 944
# File: docs/9.x/notifications.md, line: 962
# File: docs/master/notifications.md, line: 962
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the Vonage / Shortcode representation of the notification.\n"
"     *\n"
"     * @param  mixed  $notifiable\n"
"     * @return array\n"
"     */\n"
"    public function toShortcode($notifiable)\n"
"    {\n"
"        return [\n"
"            'type' => 'alert',\n"
"            'custom' => [\n"
"                'code' => 'ABC123',\n"
"            ],\n"
"        ];\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 946
# File: docs/9.x/notifications.md, line: 964
# File: docs/master/notifications.md, line: 964
#. type: Plain text
#, no-wrap
msgid "> {tip} Like [routing SMS Notifications](#routing-sms-notifications), you should implement the `routeNotificationForShortcode` method on your notifiable model.\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 948
# File: docs/9.x/notifications.md, line: 966
# File: docs/master/notifications.md, line: 966
#. type: Plain text
#, no-wrap
msgid "<a name=\"customizing-the-from-number\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 948
# File: docs/9.x/notifications.md, line: 966
# File: docs/master/notifications.md, line: 966
#. type: Title ###
#, no-wrap
msgid "Customizing The \"From\" Number"
msgstr ""

# File: docs/8.x/notifications.md, line: 951
# File: docs/9.x/notifications.md, line: 969
# File: docs/master/notifications.md, line: 969
#. type: Plain text
msgid "If you would like to send some notifications from a phone number that is different from the phone number specified in your `config/services.php` file, you may call the `from` method on a `NexmoMessage` instance:"
msgstr ""

# File: docs/8.x/notifications.md, line: 964
# File: docs/9.x/notifications.md, line: 982
# File: docs/master/notifications.md, line: 982
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the Vonage / SMS representation of the notification.\n"
"     *\n"
"     * @param  mixed  $notifiable\n"
"     * @return NexmoMessage\n"
"     */\n"
"    public function toNexmo($notifiable)\n"
"    {\n"
"        return (new NexmoMessage)\n"
"                    ->content('Your SMS message content')\n"
"                    ->from('15554443333');\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 966
# File: docs/9.x/notifications.md, line: 984
# File: docs/master/notifications.md, line: 984
#. type: Plain text
#, no-wrap
msgid "<a name=\"adding-a-client-reference\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 966
# File: docs/9.x/notifications.md, line: 984
# File: docs/master/notifications.md, line: 984
#. type: Title ###
#, no-wrap
msgid "Adding a Client Reference"
msgstr ""

# File: docs/8.x/notifications.md, line: 969
# File: docs/9.x/notifications.md, line: 987
# File: docs/master/notifications.md, line: 987
#. type: Plain text
msgid "If you would like to keep track of costs per user, team, or client, you may add a \"client reference\" to the notification. Vonage will allow you to generate reports using this client reference so that you can better understand a particular customer's SMS usage. The client reference can be any string up to 40 characters:"
msgstr ""

# File: docs/8.x/notifications.md, line: 982
# File: docs/9.x/notifications.md, line: 1000
# File: docs/master/notifications.md, line: 1000
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the Vonage / SMS representation of the notification.\n"
"     *\n"
"     * @param  mixed  $notifiable\n"
"     * @return NexmoMessage\n"
"     */\n"
"    public function toNexmo($notifiable)\n"
"    {\n"
"        return (new NexmoMessage)\n"
"                    ->clientReference((string) $notifiable->id)\n"
"                    ->content('Your SMS message content');\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 984
# File: docs/9.x/notifications.md, line: 1002
# File: docs/master/notifications.md, line: 1002
#. type: Plain text
#, no-wrap
msgid "<a name=\"routing-sms-notifications\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 984
# File: docs/9.x/notifications.md, line: 1002
# File: docs/master/notifications.md, line: 1002
#. type: Title ###
#, no-wrap
msgid "Routing SMS Notifications"
msgstr ""

# File: docs/8.x/notifications.md, line: 987
# File: docs/9.x/notifications.md, line: 1005
# File: docs/master/notifications.md, line: 1005
#. type: Plain text
msgid "To route Vonage notifications to the proper phone number, define a `routeNotificationForNexmo` method on your notifiable entity:"
msgstr ""

# File: docs/8.x/notifications.md, line: 1010
# File: docs/9.x/notifications.md, line: 1028
# File: docs/master/notifications.md, line: 1028
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * Route notifications for the Nexmo channel.\n"
"         *\n"
"         * @param  \\Illuminate\\Notifications\\Notification  $notification\n"
"         * @return string\n"
"         */\n"
"        public function routeNotificationForNexmo($notification)\n"
"        {\n"
"            return $this->phone_number;\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1012
# File: docs/9.x/notifications.md, line: 1030
# File: docs/master/notifications.md, line: 1030
#. type: Plain text
#, no-wrap
msgid "<a name=\"slack-notifications\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1012
# File: docs/9.x/notifications.md, line: 1030
# File: docs/master/notifications.md, line: 1030
#. type: Title ##
#, no-wrap
msgid "Slack Notifications"
msgstr ""

# File: docs/8.x/notifications.md, line: 1015
# File: docs/9.x/notifications.md, line: 1033
# File: docs/master/notifications.md, line: 1033
#. type: Plain text
#, no-wrap
msgid "<a name=\"slack-prerequisites\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1018
# File: docs/9.x/notifications.md, line: 1036
# File: docs/master/notifications.md, line: 1036
#. type: Plain text
msgid "Before you can send notifications via Slack, you must install the Slack notification channel via Composer:"
msgstr ""

# File: docs/8.x/notifications.md, line: 1020
#. type: Plain text
#, no-wrap
msgid "    composer require laravel/slack-notification-channel\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1022
# File: docs/9.x/notifications.md, line: 1042
# File: docs/master/notifications.md, line: 1042
#. type: Plain text
msgid "You will also need to create a [Slack App](https://api.slack.com/apps?new_app=1) for your team. After creating the App, you should configure an \"Incoming Webhook\" for the workspace. Slack will then provide you with a webhook URL that you may use when [routing Slack notifications](#routing-slack-notifications)."
msgstr ""

# File: docs/8.x/notifications.md, line: 1024
# File: docs/9.x/notifications.md, line: 1044
# File: docs/master/notifications.md, line: 1044
#. type: Plain text
#, no-wrap
msgid "<a name=\"formatting-slack-notifications\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1024
# File: docs/9.x/notifications.md, line: 1044
# File: docs/master/notifications.md, line: 1044
#. type: Title ###
#, no-wrap
msgid "Formatting Slack Notifications"
msgstr ""

# File: docs/8.x/notifications.md, line: 1027
# File: docs/9.x/notifications.md, line: 1047
# File: docs/master/notifications.md, line: 1047
#. type: Plain text
msgid "If a notification supports being sent as a Slack message, you should define a `toSlack` method on the notification class. This method will receive a `$notifiable` entity and should return an `Illuminate\\Notifications\\Messages\\SlackMessage` instance. Slack messages may contain text content as well as an \"attachment\" that formats additional text or an array of fields. Let's take a look at a basic `toSlack` example:"
msgstr ""

# File: docs/8.x/notifications.md, line: 1039
# File: docs/9.x/notifications.md, line: 1059
# File: docs/master/notifications.md, line: 1059
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the Slack representation of the notification.\n"
"     *\n"
"     * @param  mixed  $notifiable\n"
"     * @return \\Illuminate\\Notifications\\Messages\\SlackMessage\n"
"     */\n"
"    public function toSlack($notifiable)\n"
"    {\n"
"        return (new SlackMessage)\n"
"                    ->content('One of your invoices has been paid!');\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1041
# File: docs/9.x/notifications.md, line: 1061
# File: docs/master/notifications.md, line: 1061
#. type: Plain text
#, no-wrap
msgid "<a name=\"slack-attachments\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1041
# File: docs/9.x/notifications.md, line: 1061
# File: docs/master/notifications.md, line: 1061
#. type: Title ###
#, no-wrap
msgid "Slack Attachments"
msgstr ""

# File: docs/8.x/notifications.md, line: 1044
# File: docs/9.x/notifications.md, line: 1064
# File: docs/master/notifications.md, line: 1064
#. type: Plain text
msgid "You may also add \"attachments\" to Slack messages. Attachments provide richer formatting options than simple text messages. In this example, we will send an error notification about an exception that occurred in an application, including a link to view more details about the exception:"
msgstr ""

# File: docs/8.x/notifications.md, line: 1054
# File: docs/9.x/notifications.md, line: 1074
# File: docs/master/notifications.md, line: 1074
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the Slack representation of the notification.\n"
"     *\n"
"     * @param  mixed  $notifiable\n"
"     * @return \\Illuminate\\Notifications\\Messages\\SlackMessage\n"
"     */\n"
"    public function toSlack($notifiable)\n"
"    {\n"
"        $url = url('/exceptions/'.$this->exception->id);\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1063
# File: docs/9.x/notifications.md, line: 1083
# File: docs/master/notifications.md, line: 1083
#. type: Plain text
#, no-wrap
msgid "        return (new SlackMessage)\n"
"                    ->error()\n"
"                    ->content('Whoops! Something went wrong.')\n"
"                    ->attachment(function ($attachment) use ($url) {\n"
"                        $attachment->title('Exception: File Not Found', $url)\n"
"                                   ->content('File [background.jpg] was not found.');\n"
"                    });\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1065
# File: docs/9.x/notifications.md, line: 1085
# File: docs/master/notifications.md, line: 1085
#. type: Plain text
msgid "Attachments also allow you to specify an array of data that should be presented to the user. The given data will be presented in a table-style format for easy reading:"
msgstr ""

# File: docs/8.x/notifications.md, line: 1075
# File: docs/9.x/notifications.md, line: 1095
# File: docs/master/notifications.md, line: 1095
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the Slack representation of the notification.\n"
"     *\n"
"     * @param  mixed  $notifiable\n"
"     * @return SlackMessage\n"
"     */\n"
"    public function toSlack($notifiable)\n"
"    {\n"
"        $url = url('/invoices/'.$this->invoice->id);\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1089
# File: docs/9.x/notifications.md, line: 1109
# File: docs/master/notifications.md, line: 1109
#. type: Plain text
#, no-wrap
msgid "        return (new SlackMessage)\n"
"                    ->success()\n"
"                    ->content('One of your invoices has been paid!')\n"
"                    ->attachment(function ($attachment) use ($url) {\n"
"                        $attachment->title('Invoice 1322', $url)\n"
"                                   ->fields([\n"
"                                        'Title' => 'Server Expenses',\n"
"                                        'Amount' => '$1,234',\n"
"                                        'Via' => 'American Express',\n"
"                                        'Was Overdue' => ':-1:',\n"
"                                    ]);\n"
"                    });\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1091
# File: docs/9.x/notifications.md, line: 1111
# File: docs/master/notifications.md, line: 1111
#. type: Plain text
#, no-wrap
msgid "<a name=\"markdown-attachment-content\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1091
# File: docs/9.x/notifications.md, line: 1111
# File: docs/master/notifications.md, line: 1111
#. type: Title ####
#, no-wrap
msgid "Markdown Attachment Content"
msgstr ""

# File: docs/8.x/notifications.md, line: 1094
# File: docs/9.x/notifications.md, line: 1114
# File: docs/master/notifications.md, line: 1114
#. type: Plain text
msgid "If some of your attachment fields contain Markdown, you may use the `markdown` method to instruct Slack to parse and display the given attachment fields as Markdown formatted text. The values accepted by this method are: `pretext`, `text`, and / or `fields`. For more information about Slack attachment formatting, check out the [Slack API documentation](https://api.slack.com/docs/message-formatting#message_formatting):"
msgstr ""

# File: docs/8.x/notifications.md, line: 1104
# File: docs/9.x/notifications.md, line: 1124
# File: docs/master/notifications.md, line: 1124
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the Slack representation of the notification.\n"
"     *\n"
"     * @param  mixed  $notifiable\n"
"     * @return SlackMessage\n"
"     */\n"
"    public function toSlack($notifiable)\n"
"    {\n"
"        $url = url('/exceptions/'.$this->exception->id);\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1114
# File: docs/9.x/notifications.md, line: 1134
# File: docs/master/notifications.md, line: 1134
#. type: Plain text
#, no-wrap
msgid "        return (new SlackMessage)\n"
"                    ->error()\n"
"                    ->content('Whoops! Something went wrong.')\n"
"                    ->attachment(function ($attachment) use ($url) {\n"
"                        $attachment->title('Exception: File Not Found', $url)\n"
"                                   ->content('File [background.jpg] was *not found*.')\n"
"                                   ->markdown(['text']);\n"
"                    });\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1116
# File: docs/9.x/notifications.md, line: 1136
# File: docs/master/notifications.md, line: 1136
#. type: Plain text
#, no-wrap
msgid "<a name=\"routing-slack-notifications\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1116
# File: docs/9.x/notifications.md, line: 1136
# File: docs/master/notifications.md, line: 1136
#. type: Title ###
#, no-wrap
msgid "Routing Slack Notifications"
msgstr ""

# File: docs/8.x/notifications.md, line: 1119
# File: docs/9.x/notifications.md, line: 1139
# File: docs/master/notifications.md, line: 1139
#. type: Plain text
msgid "To route Slack notifications to the proper Slack team and channel, define a `routeNotificationForSlack` method on your notifiable entity. This should return the webhook URL to which the notification should be delivered. Webhook URLs may be generated by adding an \"Incoming Webhook\" service to your Slack team:"
msgstr ""

# File: docs/8.x/notifications.md, line: 1142
# File: docs/9.x/notifications.md, line: 1162
# File: docs/master/notifications.md, line: 1162
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * Route notifications for the Slack channel.\n"
"         *\n"
"         * @param  \\Illuminate\\Notifications\\Notification  $notification\n"
"         * @return string\n"
"         */\n"
"        public function routeNotificationForSlack($notification)\n"
"        {\n"
"            return 'https://hooks.slack.com/services/...';\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1144
# File: docs/9.x/notifications.md, line: 1164
# File: docs/master/notifications.md, line: 1164
#. type: Plain text
#, no-wrap
msgid "<a name=\"localizing-notifications\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1144
# File: docs/9.x/notifications.md, line: 1164
# File: docs/master/notifications.md, line: 1164
#. type: Title ##
#, no-wrap
msgid "Localizing Notifications"
msgstr ""

# File: docs/8.x/notifications.md, line: 1147
# File: docs/9.x/notifications.md, line: 1167
# File: docs/master/notifications.md, line: 1167
#. type: Plain text
msgid "Laravel allows you to send notifications in a locale other than the HTTP request's current locale, and will even remember this locale if the notification is queued."
msgstr ""

# File: docs/8.x/notifications.md, line: 1149
# File: docs/9.x/notifications.md, line: 1169
# File: docs/master/notifications.md, line: 1169
#. type: Plain text
msgid "To accomplish this, the `Illuminate\\Notifications\\Notification` class offers a `locale` method to set the desired language. The application will change into this locale when the notification is being evaluated and then revert back to the previous locale when evaluation is complete:"
msgstr ""

# File: docs/8.x/notifications.md, line: 1151
# File: docs/9.x/notifications.md, line: 1171
# File: docs/master/notifications.md, line: 1171
#. type: Plain text
#, no-wrap
msgid "    $user->notify((new InvoicePaid($invoice))->locale('es'));\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1153
# File: docs/9.x/notifications.md, line: 1173
# File: docs/master/notifications.md, line: 1173
#. type: Plain text
msgid "Localization of multiple notifiable entries may also be achieved via the `Notification` facade:"
msgstr ""

# File: docs/8.x/notifications.md, line: 1157
# File: docs/9.x/notifications.md, line: 1177
# File: docs/master/notifications.md, line: 1177
#. type: Plain text
#, no-wrap
msgid "    Notification::locale('es')->send(\n"
"        $users, new InvoicePaid($invoice)\n"
"    );\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1159
# File: docs/9.x/notifications.md, line: 1179
# File: docs/master/notifications.md, line: 1179
#. type: Plain text
#, no-wrap
msgid "<a name=\"user-preferred-locales\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1159
# File: docs/9.x/notifications.md, line: 1179
# File: docs/master/notifications.md, line: 1179
#. type: Title ###
#, no-wrap
msgid "User Preferred Locales"
msgstr ""

# File: docs/8.x/notifications.md, line: 1162
# File: docs/9.x/notifications.md, line: 1182
# File: docs/master/notifications.md, line: 1182
#. type: Plain text
msgid "Sometimes, applications store each user's preferred locale. By implementing the `HasLocalePreference` contract on your notifiable model, you may instruct Laravel to use this stored locale when sending a notification:"
msgstr ""

# File: docs/8.x/notifications.md, line: 1164
# File: docs/9.x/notifications.md, line: 1184
# File: docs/master/notifications.md, line: 1184
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Contracts\\Translation\\HasLocalePreference;\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1177
# File: docs/9.x/notifications.md, line: 1197
# File: docs/master/notifications.md, line: 1197
#. type: Plain text
#, no-wrap
msgid "    class User extends Model implements HasLocalePreference\n"
"    {\n"
"        /**\n"
"         * Get the user's preferred locale.\n"
"         *\n"
"         * @return string\n"
"         */\n"
"        public function preferredLocale()\n"
"        {\n"
"            return $this->locale;\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1179
# File: docs/9.x/notifications.md, line: 1199
# File: docs/master/notifications.md, line: 1199
#. type: Plain text
msgid "Once you have implemented the interface, Laravel will automatically use the preferred locale when sending notifications and mailables to the model. Therefore, there is no need to call the `locale` method when using this interface:"
msgstr ""

# File: docs/8.x/notifications.md, line: 1183
# File: docs/9.x/notifications.md, line: 1203
# File: docs/master/notifications.md, line: 1203
#. type: Plain text
#, no-wrap
msgid "<a name=\"notification-events\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1183
# File: docs/9.x/notifications.md, line: 1203
# File: docs/master/notifications.md, line: 1203
#. type: Title ##
#, no-wrap
msgid "Notification Events"
msgstr ""

# File: docs/8.x/notifications.md, line: 1186
# File: docs/9.x/notifications.md, line: 1206
# File: docs/master/notifications.md, line: 1206
#. type: Plain text
#, no-wrap
msgid "<a name=\"notification-sending-event\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1186
# File: docs/9.x/notifications.md, line: 1206
# File: docs/master/notifications.md, line: 1206
#. type: Title ####
#, no-wrap
msgid "Notification Sending Event"
msgstr ""

# File: docs/8.x/notifications.md, line: 1189
# File: docs/9.x/notifications.md, line: 1209
# File: docs/master/notifications.md, line: 1209
#. type: Plain text
msgid "When a notification is sending, the `Illuminate\\Notifications\\Events\\NotificationSending` [event](/docs/{{version}}/events) is dispatched by the notification system. This contains the \"notifiable\" entity and the notification instance itself. You may register listeners for this event in your application's `EventServiceProvider`:"
msgstr ""

# File: docs/8.x/notifications.md, line: 1200
# File: docs/9.x/notifications.md, line: 1220
# File: docs/master/notifications.md, line: 1220
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * The event listener mappings for the application.\n"
"     *\n"
"     * @var array\n"
"     */\n"
"    protected $listen = [\n"
"        'Illuminate\\Notifications\\Events\\NotificationSending' => [\n"
"            'App\\Listeners\\CheckNotificationStatus',\n"
"        ],\n"
"    ];\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1202
# File: docs/9.x/notifications.md, line: 1222
# File: docs/master/notifications.md, line: 1222
#. type: Plain text
msgid "The notification will not be sent if an event listener for the `NotificationSending` event returns `false` from its `handle` method:"
msgstr ""

# File: docs/8.x/notifications.md, line: 1204
# File: docs/9.x/notifications.md, line: 1224
# File: docs/master/notifications.md, line: 1224
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Notifications\\Events\\NotificationSending;\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1215
# File: docs/9.x/notifications.md, line: 1235
# File: docs/master/notifications.md, line: 1235
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Handle the event.\n"
"     *\n"
"     * @param  \\Illuminate\\Notifications\\Events\\NotificationSending  $event\n"
"     * @return void\n"
"     */\n"
"    public function handle(NotificationSending $event)\n"
"    {\n"
"        return false;\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1217
# File: docs/9.x/notifications.md, line: 1237
# File: docs/master/notifications.md, line: 1237
#. type: Plain text
msgid "Within an event listener, you may access the `notifiable`, `notification`, and `channel` properties on the event to learn more about the notification recipient or the notification itself:"
msgstr ""

# File: docs/8.x/notifications.md, line: 1230
# File: docs/9.x/notifications.md, line: 1250
# File: docs/master/notifications.md, line: 1250
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Handle the event.\n"
"     *\n"
"     * @param  \\Illuminate\\Notifications\\Events\\NotificationSending  $event\n"
"     * @return void\n"
"     */\n"
"    public function handle(NotificationSending $event)\n"
"    {\n"
"        // $event->channel\n"
"        // $event->notifiable\n"
"        // $event->notification\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1232
# File: docs/9.x/notifications.md, line: 1252
# File: docs/master/notifications.md, line: 1252
#. type: Plain text
#, no-wrap
msgid "<a name=\"notification-sent-event\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1232
# File: docs/9.x/notifications.md, line: 1252
# File: docs/master/notifications.md, line: 1252
#. type: Title ####
#, no-wrap
msgid "Notification Sent Event"
msgstr ""

# File: docs/8.x/notifications.md, line: 1235
# File: docs/9.x/notifications.md, line: 1255
# File: docs/master/notifications.md, line: 1255
#. type: Plain text
msgid "When a notification is sent, the `Illuminate\\Notifications\\Events\\NotificationSent` [event](/docs/{{version}}/events) is dispatched by the notification system. This contains the \"notifiable\" entity and the notification instance itself. You may register listeners for this event in your `EventServiceProvider`:"
msgstr ""

# File: docs/8.x/notifications.md, line: 1246
# File: docs/9.x/notifications.md, line: 1266
# File: docs/master/notifications.md, line: 1266
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * The event listener mappings for the application.\n"
"     *\n"
"     * @var array\n"
"     */\n"
"    protected $listen = [\n"
"        'Illuminate\\Notifications\\Events\\NotificationSent' => [\n"
"            'App\\Listeners\\LogNotification',\n"
"        ],\n"
"    ];\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1248
# File: docs/9.x/notifications.md, line: 1268
# File: docs/master/notifications.md, line: 1268
#. type: Plain text
#, no-wrap
msgid "> {tip} After registering listeners in your `EventServiceProvider`, use the `event:generate` Artisan command to quickly generate listener classes.\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1250
# File: docs/9.x/notifications.md, line: 1270
# File: docs/master/notifications.md, line: 1270
#. type: Plain text
msgid "Within an event listener, you may access the `notifiable`, `notification`, `channel`, and `response` properties on the event to learn more about the notification recipient or the notification itself:"
msgstr ""

# File: docs/8.x/notifications.md, line: 1264
# File: docs/9.x/notifications.md, line: 1284
# File: docs/master/notifications.md, line: 1284
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Handle the event.\n"
"     *\n"
"     * @param  \\Illuminate\\Notifications\\Events\\NotificationSent  $event\n"
"     * @return void\n"
"     */\n"
"    public function handle(NotificationSent $event)\n"
"    {\n"
"        // $event->channel\n"
"        // $event->notifiable\n"
"        // $event->notification\n"
"        // $event->response\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1266
# File: docs/9.x/notifications.md, line: 1286
# File: docs/master/notifications.md, line: 1286
#. type: Plain text
#, no-wrap
msgid "<a name=\"custom-channels\"></a>\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1266
# File: docs/9.x/notifications.md, line: 1286
# File: docs/master/notifications.md, line: 1286
#. type: Title ##
#, no-wrap
msgid "Custom Channels"
msgstr ""

# File: docs/8.x/notifications.md, line: 1269
# File: docs/9.x/notifications.md, line: 1289
# File: docs/master/notifications.md, line: 1289
#. type: Plain text
msgid "Laravel ships with a handful of notification channels, but you may want to write your own drivers to deliver notifications via other channels. Laravel makes it simple. To get started, define a class that contains a `send` method. The method should receive two arguments: a `$notifiable` and a `$notification`."
msgstr ""

# File: docs/8.x/notifications.md, line: 1271
# File: docs/9.x/notifications.md, line: 1291
# File: docs/master/notifications.md, line: 1291
#. type: Plain text
msgid "Within the `send` method, you may call methods on the notification to retrieve a message object understood by your channel and then send the notification to the `$notifiable` instance however you wish:"
msgstr ""

# File: docs/8.x/notifications.md, line: 1277
# File: docs/9.x/notifications.md, line: 1297
# File: docs/master/notifications.md, line: 1297
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Notifications\\Notification;\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1290
# File: docs/9.x/notifications.md, line: 1310
# File: docs/master/notifications.md, line: 1310
#. type: Plain text
#, no-wrap
msgid "    class VoiceChannel\n"
"    {\n"
"        /**\n"
"         * Send the given notification.\n"
"         *\n"
"         * @param  mixed  $notifiable\n"
"         * @param  \\Illuminate\\Notifications\\Notification  $notification\n"
"         * @return void\n"
"         */\n"
"        public function send($notifiable, Notification $notification)\n"
"        {\n"
"            $message = $notification->toVoice($notifiable);\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1294
# File: docs/9.x/notifications.md, line: 1314
# File: docs/master/notifications.md, line: 1314
#. type: Plain text
#, no-wrap
msgid "            // Send notification to the $notifiable instance...\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1296
# File: docs/9.x/notifications.md, line: 1316
# File: docs/master/notifications.md, line: 1316
#. type: Plain text
msgid "Once your notification channel class has been defined, you may return the class name from the `via` method of any of your notifications. In this example, the `toVoice` method of your notification can return whatever object you choose to represent voice messages. For example, you might define your own `VoiceMessage` class to represent these messages:"
msgstr ""

# File: docs/8.x/notifications.md, line: 1306
# File: docs/9.x/notifications.md, line: 1326
# File: docs/master/notifications.md, line: 1326
#. type: Plain text
#, no-wrap
msgid "    use App\\Notifications\\Messages\\VoiceMessage;\n"
"    use App\\Notifications\\VoiceChannel;\n"
"    use Illuminate\\Bus\\Queueable;\n"
"    use Illuminate\\Contracts\\Queue\\ShouldQueue;\n"
"    use Illuminate\\Notifications\\Notification;\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1310
# File: docs/9.x/notifications.md, line: 1330
# File: docs/master/notifications.md, line: 1330
#. type: Plain text
#, no-wrap
msgid "    class InvoicePaid extends Notification\n"
"    {\n"
"        use Queueable;\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1321
# File: docs/9.x/notifications.md, line: 1341
# File: docs/master/notifications.md, line: 1341
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * Get the notification channels.\n"
"         *\n"
"         * @param  mixed  $notifiable\n"
"         * @return array|string\n"
"         */\n"
"        public function via($notifiable)\n"
"        {\n"
"            return [VoiceChannel::class];\n"
"        }\n"
msgstr ""

# File: docs/8.x/notifications.md, line: 1332
# File: docs/9.x/notifications.md, line: 1352
# File: docs/master/notifications.md, line: 1352
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * Get the voice representation of the notification.\n"
"         *\n"
"         * @param  mixed  $notifiable\n"
"         * @return VoiceMessage\n"
"         */\n"
"        public function toVoice($notifiable)\n"
"        {\n"
"            // ...\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/9.x/notifications.md, line: 62
# File: docs/9.x/notifications.md, line: 452
# File: docs/9.x/notifications.md, line: 597
# File: docs/9.x/notifications.md, line: 679
# File: docs/9.x/notifications.md, line: 718
# File: docs/9.x/notifications.md, line: 1037
# File: docs/master/notifications.md, line: 62
# File: docs/master/notifications.md, line: 452
# File: docs/master/notifications.md, line: 597
# File: docs/master/notifications.md, line: 679
# File: docs/master/notifications.md, line: 718
# File: docs/master/notifications.md, line: 1037
#. type: Code fence info string
#, no-wrap
msgid "shell"
msgstr ""

# File: docs/9.x/notifications.md, line: 62
# File: docs/master/notifications.md, line: 62
#. type: Plain text
#, no-wrap
msgid "php artisan make:notification InvoicePaid\n"
msgstr ""

# File: docs/9.x/notifications.md, line: 452
# File: docs/master/notifications.md, line: 452
#. type: Plain text
#, no-wrap
msgid "php artisan vendor:publish --tag=laravel-notifications\n"
msgstr ""

# File: docs/9.x/notifications.md, line: 597
# File: docs/master/notifications.md, line: 597
#. type: Plain text
#, no-wrap
msgid "php artisan make:notification InvoicePaid --markdown=mail.invoice.paid\n"
msgstr ""

# File: docs/9.x/notifications.md, line: 623
# File: docs/9.x/notifications.md, line: 643
# File: docs/9.x/notifications.md, line: 654
# File: docs/9.x/notifications.md, line: 665
# File: docs/master/notifications.md, line: 623
# File: docs/master/notifications.md, line: 643
# File: docs/master/notifications.md, line: 654
# File: docs/master/notifications.md, line: 665
#. type: Code fence info string
#, no-wrap
msgid "blade"
msgstr ""

# File: docs/9.x/notifications.md, line: 623
# File: docs/master/notifications.md, line: 623
#. type: Plain text
#, no-wrap
msgid "@component('mail::message')\n"
"# Invoice Paid\n\n"
"Your invoice has been paid!\n\n"
"@component('mail::button', ['url' => $url])\n"
"View Invoice\n"
"@endcomponent\n\n"
"Thanks,<br>\n"
"{{ config('app.name') }}\n"
"@endcomponent\n"
msgstr ""

# File: docs/9.x/notifications.md, line: 643
# File: docs/master/notifications.md, line: 643
#. type: Plain text
#, no-wrap
msgid "@component('mail::button', ['url' => $url, 'color' => 'green'])\n"
"View Invoice\n"
"@endcomponent\n"
msgstr ""

# File: docs/9.x/notifications.md, line: 654
# File: docs/master/notifications.md, line: 654
#. type: Plain text
#, no-wrap
msgid "@component('mail::panel')\n"
"This is the panel content.\n"
"@endcomponent\n"
msgstr ""

# File: docs/9.x/notifications.md, line: 665
# File: docs/master/notifications.md, line: 665
#. type: Plain text
#, no-wrap
msgid "@component('mail::table')\n"
"| Laravel       | Table         | Example  |\n"
"| ------------- |:-------------:| --------:|\n"
"| Col 2 is      | Centered      | $10      |\n"
"| Col 3 is      | Right-Aligned | $20      |\n"
"@endcomponent\n"
msgstr ""

# File: docs/9.x/notifications.md, line: 679
# File: docs/master/notifications.md, line: 679
#. type: Plain text
#, no-wrap
msgid "php artisan vendor:publish --tag=laravel-mail\n"
msgstr ""

# File: docs/9.x/notifications.md, line: 718
# File: docs/master/notifications.md, line: 718
#. type: Plain text
#, no-wrap
msgid "php artisan notifications:table\n\n"
"php artisan migrate\n"
msgstr ""

# File: docs/9.x/notifications.md, line: 1037
# File: docs/master/notifications.md, line: 1037
#. type: Plain text
#, no-wrap
msgid "composer require laravel/slack-notification-channel\n"
msgstr ""

