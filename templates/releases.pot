msgid ""
msgstr ""

# TD
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgid "11"
msgstr ""

# TD
#: ./docs/10.x/releases.md
#: ./docs/master/releases.md
msgid "8.2 - 8.3"
msgstr ""

# TD
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgid "March 12th, 2024"
msgstr ""

# TD
#: ./docs/10.x/releases.md
msgid "August 5th, 2025"
msgstr ""

# TD
#: ./docs/10.x/releases.md
msgid "February 3rd, 2026"
msgstr ""

# TD
#: ./docs/11.x/releases.md
msgid "8.2 - 8.4"
msgstr ""

# TD
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgid "September 3rd, 2025"
msgstr ""

# TD
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgid "March 12th, 2026"
msgstr ""

# TD
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgid "12"
msgstr ""

# TD
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgid "Q1 2025"
msgstr ""

# TD
#: ./docs/11.x/releases.md
msgid "Q3 2026"
msgstr ""

# TD
#: ./docs/11.x/releases.md
msgid "Q1 2027"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgid "Version"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgid "PHP (*)"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgid "Release"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgid "Bug Fixes Until"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgid "Security Fixes Until"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
msgid "6 (LTS)"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
msgid "7.2 - 8.0"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
msgid "September 3rd, 2019"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
msgid "January 25th, 2022"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
msgid "September 6th, 2022"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
msgid "7"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
msgid "March 3rd, 2020"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
msgid "October 6th, 2020"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
msgid "March 3rd, 2021"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
msgid "8"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
msgid "7.3 - 8.1"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
msgid "September 8th, 2020"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
msgid "July 26th, 2022"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
msgid "January 24th, 2023"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgid "9"
msgstr ""

# TD
#: ./docs/8.x/releases.md
msgid "8.0 - 8.1"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgid "February 8th, 2022"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgid "August 8th, 2023"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgid "February 6th, 2024"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgid "10"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgid "8.1 - 8.3"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgid "February 14th, 2023"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgid "August 6th, 2024"
msgstr ""

# TD
#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgid "February 4th, 2025"
msgstr ""

# TD
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgid "8.0 - 8.2"
msgstr ""

# TD
#: ./docs/master/releases.md
msgid "Q3, 2026"
msgstr ""

# TD
#: ./docs/master/releases.md
msgid "Q1, 2027"
msgstr ""

# H1
#: ./docs/8.x/releases.md:1
#: ./docs/9.x/releases.md:1
#: ./docs/10.x/releases.md:1
#: ./docs/11.x/releases.md:1
#: ./docs/master/releases.md:1
msgid "Release Notes"
msgstr ""

# P
#: ./docs/8.x/releases.md:3
#: ./docs/9.x/releases.md:3
#: ./docs/10.x/releases.md:3
#: ./docs/11.x/releases.md:3
#: ./docs/master/releases.md:3
msgid "[Versioning Scheme](#versioning-scheme)"
msgstr ""

# P
#: ./docs/8.x/releases.md:4
msgid "[Exceptions](#exceptions)"
msgstr ""

# P
#: ./docs/10.x/releases.md:5
msgid "[Laravel 10](#laravel-10)"
msgstr ""

# P
#: ./docs/11.x/releases.md:5
msgid "[Laravel 11](#laravel-11)"
msgstr ""

# P
#: ./docs/8.x/releases.md:5
#: ./docs/9.x/releases.md:4
#: ./docs/10.x/releases.md:4
#: ./docs/11.x/releases.md:4
#: ./docs/master/releases.md:4
msgid "[Support Policy](#support-policy)"
msgstr ""

# P
#: ./docs/9.x/releases.md:5
msgid "[Laravel 9](#laravel-9)"
msgstr ""

# P
#: ./docs/master/releases.md:5
msgid "[Laravel 12](#laravel-12)"
msgstr ""

# P
#: ./docs/8.x/releases.md:6
msgid "[Laravel 8](#laravel-8)"
msgstr ""

# P
#: ./docs/8.x/releases.md:8
#: ./docs/9.x/releases.md:7
#: ./docs/10.x/releases.md:7
#: ./docs/11.x/releases.md:7
#: ./docs/master/releases.md:7
#~ msgid "<a name=\"versioning-scheme\"></a>"
#~ msgstr ""

# H2
#: ./docs/8.x/releases.md:9
#: ./docs/9.x/releases.md:8
#: ./docs/10.x/releases.md:8
#: ./docs/11.x/releases.md:8
#: ./docs/master/releases.md:8
msgid "Versioning Scheme"
msgstr ""

# P
#: ./docs/10.x/releases.md:10
#: ./docs/11.x/releases.md:10
#: ./docs/master/releases.md:10
msgid "Laravel and its other first-party packages follow [Semantic Versioning](https://semver.org). Major framework releases are released every year (~Q1), while minor and patch releases may be released as often as every week. Minor and patch releases should **never** contain breaking changes."
msgstr ""

# P
#: ./docs/8.x/releases.md:11
#: ./docs/9.x/releases.md:10
msgid "Laravel and its other first-party packages follow [Semantic Versioning](https://semver.org). Major framework releases are released every year (~February), while minor and patch releases may be released as often as every week. Minor and patch releases should **never** contain breaking changes."
msgstr ""

# P
#: ./docs/10.x/releases.md:12
msgid "When referencing the Laravel framework or its components from your application or package, you should always use a version constraint such as `^10.0`, since major releases of Laravel do include breaking changes. However, we strive to always ensure you may update to a new major release in one day or less."
msgstr ""

# P
#: ./docs/11.x/releases.md:12
#: ./docs/master/releases.md:12
msgid "When referencing the Laravel framework or its components from your application or package, you should always use a version constraint such as `^11.0`, since major releases of Laravel do include breaking changes. However, we strive to always ensure you may update to a new major release in one day or less."
msgstr ""

# P
#: ./docs/9.x/releases.md:12
msgid "When referencing the Laravel framework or its components from your application or package, you should always use a version constraint such as `^9.0`, since major releases of Laravel do include breaking changes. However, we strive to always ensure you may update to a new major release in one day or less."
msgstr ""

# P
#: ./docs/8.x/releases.md:13
msgid "When referencing the Laravel framework or its components from your application or package, you should always use a version constraint such as `^8.0`, since major releases of Laravel do include breaking changes. However, we strive to always ensure you may update to a new major release in one day or less."
msgstr ""

# P
#: ./docs/8.x/releases.md:15
#~ msgid "<a name=\"exceptions\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/releases.md:16
msgid "Exceptions"
msgstr ""

# P
#: ./docs/9.x/releases.md:17
#: ./docs/10.x/releases.md:17
#: ./docs/11.x/releases.md:17
#: ./docs/master/releases.md:17
msgid "[Named arguments](https://www.php.net/manual/en/functions.arguments.php#functions.named-arguments) are not covered by Laravel's backwards compatibility guidelines. We may choose to rename function arguments when necessary in order to improve the Laravel codebase. Therefore, using named arguments when calling Laravel methods should be done cautiously and with the understanding that the parameter names may change in the future."
msgstr ""

# P
#: ./docs/8.x/releases.md:18
#: ./docs/9.x/releases.md:14
#: ./docs/10.x/releases.md:14
#: ./docs/11.x/releases.md:14
#: ./docs/master/releases.md:14
#~ msgid "<a name=\"named-arguments\"></a>"
#~ msgstr ""

# H4
#: ./docs/8.x/releases.md:19
#: ./docs/9.x/releases.md:15
#: ./docs/10.x/releases.md:15
#: ./docs/11.x/releases.md:15
#: ./docs/master/releases.md:15
msgid "Named Arguments"
msgstr ""

# P
#: ./docs/8.x/releases.md:21
msgid "At this time, PHP's [named arguments](https://www.php.net/manual/en/functions.arguments.php#functions.named-arguments) functionality are not covered by Laravel's backwards compatibility guidelines. We may choose to rename function parameters when necessary in order to improve the Laravel codebase. Therefore, using named arguments when calling Laravel methods should be done cautiously and with the understanding that the parameter names may change in the future."
msgstr ""

# P
#: ./docs/8.x/releases.md:23
#: ./docs/9.x/releases.md:19
#: ./docs/10.x/releases.md:19
#: ./docs/11.x/releases.md:19
#: ./docs/master/releases.md:19
#~ msgid "<a name=\"support-policy\"></a>"
#~ msgstr ""

# H2
#: ./docs/8.x/releases.md:24
#: ./docs/9.x/releases.md:20
#: ./docs/10.x/releases.md:20
#: ./docs/11.x/releases.md:20
#: ./docs/master/releases.md:20
msgid "Support Policy"
msgstr ""

# P
#: ./docs/8.x/releases.md:26
#: ./docs/9.x/releases.md:22
#: ./docs/10.x/releases.md:22
#: ./docs/11.x/releases.md:22
#: ./docs/master/releases.md:22
msgid "For all Laravel releases, bug fixes are provided for 18 months and security fixes are provided for 2 years. For all additional libraries, including Lumen, only the latest major release receives bug fixes. In addition, please review the database versions [supported by Laravel](/docs/{{version}}/database#introduction)."
msgstr ""

# P
#: ./docs/9.x/releases.md:45
#~ msgid "<a name=\"laravel-9\"></a>"
#~ msgstr ""

# H2
#: ./docs/9.x/releases.md:46
msgid "Laravel 9"
msgstr ""

# P
#: ./docs/8.x/releases.md:47
#: ./docs/9.x/releases.md:43
#: ./docs/10.x/releases.md:47
#: ./docs/11.x/releases.md:46
#: ./docs/master/releases.md:47
msgid "(*) Supported PHP versions"
msgstr ""

# P
#: ./docs/11.x/releases.md:48
#~ msgid "<a name=\"laravel-11\"></a>"
#~ msgstr ""

# P
#: ./docs/9.x/releases.md:48
msgid "As you may know, Laravel transitioned to yearly releases with the release of Laravel 8. Previously, major versions were released every 6 months. This transition is intended to ease the maintenance burden on the community and challenge our development team to ship amazing, powerful new features without introducing breaking changes. Therefore, we have shipped a variety of robust features to Laravel 8 without breaking backwards compatibility, such as parallel testing support, improved Breeze starter kits, HTTP client improvements, and even new Eloquent relationship types such as \"has one of many\"."
msgstr ""

# P
#: ./docs/10.x/releases.md:49
#~ msgid "<a name=\"laravel-10\"></a>"
#~ msgstr ""

# H2
#: ./docs/11.x/releases.md:49
msgid "Laravel 11"
msgstr ""

# P
#: ./docs/8.x/releases.md:49
#~ msgid "<a name=\"laravel-8\"></a>"
#~ msgstr ""

# P
#: ./docs/master/releases.md:49
#~ msgid "<a name=\"laravel-12\"></a>"
#~ msgstr ""

# H2
#: ./docs/10.x/releases.md:50
msgid "Laravel 10"
msgstr ""

# H2
#: ./docs/8.x/releases.md:50
msgid "Laravel 8"
msgstr ""

# P
#: ./docs/9.x/releases.md:50
#: ./docs/10.x/releases.md:54
msgid "Therefore, this commitment to ship great new features during the current release will likely lead to future \"major\" releases being primarily used for \"maintenance\" tasks such as upgrading upstream dependencies, which can be seen in these release notes."
msgstr ""

# H2
#: ./docs/master/releases.md:50
msgid "Laravel 12"
msgstr ""

# P
#: ./docs/11.x/releases.md:51
msgid "Laravel 11 continues the improvements made in Laravel 10.x by introducing a streamlined application structure, per-second rate limiting, health routing, graceful encryption key rotation, queue testing improvements, [Resend](https://resend.com) mail transport, Prompt validator integration, new Artisan commands, and more. In addition, Laravel Reverb, a first-party, scalable WebSocket server has been introduced to provide robust real-time capabilities to your applications."
msgstr ""

# P
#: ./docs/10.x/releases.md:52
msgid "As you may know, Laravel transitioned to yearly releases with the release of Laravel 8. Previously, major versions were released every 6 months. This transition is intended to ease the maintenance burden on the community and challenge our development team to ship amazing, powerful new features without introducing breaking changes. Therefore, we have shipped a variety of robust features to Laravel 9 without breaking backwards compatibility."
msgstr ""

# P
#: ./docs/8.x/releases.md:52
msgid "Laravel 8 continues the improvements made in Laravel 7.x by introducing Laravel Jetstream, model factory classes, migration squashing, job batching, improved rate limiting, queue improvements, dynamic Blade components, Tailwind pagination views, time testing helpers, improvements to `artisan serve`, event listener improvements, and a variety of other bug fixes and usability improvements."
msgstr ""

# P
#: ./docs/9.x/releases.md:52
msgid "Laravel 9 continues the improvements made in Laravel 8.x by introducing support for Symfony 6.0 components, Symfony Mailer, Flysystem 3.0, improved `route:list` output, a Laravel Scout database driver, new Eloquent accessor / mutator syntax, implicit route bindings via Enums, and a variety of other bug fixes and usability improvements."
msgstr ""

# P
#: ./docs/master/releases.md:52
msgid "TBA..."
msgstr ""

# H3
#: ./docs/11.x/releases.md:54
msgid "PHP 8.2"
msgstr ""

# P
#: ./docs/8.x/releases.md:54
#~ msgid "<a name=\"laravel-jetstream\"></a>"
#~ msgstr ""

# P
#: ./docs/9.x/releases.md:54
#: ./docs/10.x/releases.md:58
#: ./docs/11.x/releases.md:53
#~ msgid "<a name=\"php-8\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/releases.md:55
msgid "Laravel Jetstream"
msgstr ""

# H3
#: ./docs/9.x/releases.md:55
msgid "PHP 8.0"
msgstr ""

# P
#: ./docs/10.x/releases.md:56
msgid "Laravel 10 continues the improvements made in Laravel 9.x by introducing argument and return types to all application skeleton methods, as well as all stub files used to generate classes throughout the framework. In addition, a new, developer-friendly abstraction layer has been introduced for starting and interacting with external processes. Further, Laravel Pennant has been introduced to provide a wonderful approach to managing your application's \"feature flags\"."
msgstr ""

# P
#: ./docs/11.x/releases.md:56
msgid "Laravel 11.x requires a minimum PHP version of 8.2."
msgstr ""

# P
#: ./docs/8.x/releases.md:57
msgid "*Laravel Jetstream was written by [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr ""

# P
#: ./docs/9.x/releases.md:57
msgid "Laravel 9.x requires a minimum PHP version of 8.0."
msgstr ""

# P
#: ./docs/11.x/releases.md:58
#~ msgid "<a name=\"structure\"></a>"
#~ msgstr ""

# H3
#: ./docs/10.x/releases.md:59
msgid "PHP 8.1"
msgstr ""

# H3
#: ./docs/11.x/releases.md:59
msgid "Streamlined Application Structure"
msgstr ""

# P
#: ./docs/8.x/releases.md:59
msgid "[Laravel Jetstream](https://jetstream.laravel.com) is a beautifully designed application scaffolding for Laravel. Jetstream provides the perfect starting point for your next project and includes login, registration, email verification, two-factor authentication, session management, API support via Laravel Sanctum, and optional team management. Laravel Jetstream replaces and improves upon the legacy authentication UI scaffolding available for previous versions of Laravel."
msgstr ""

# P
#: ./docs/9.x/releases.md:59
#~ msgid "<a name=\"symfony-mailer\"></a>"
#~ msgstr ""

# H3
#: ./docs/9.x/releases.md:60
msgid "Symfony Mailer"
msgstr ""

# P
#: ./docs/10.x/releases.md:61
msgid "Laravel 10.x requires a minimum PHP version of 8.1."
msgstr ""

# P
#: ./docs/11.x/releases.md:61
msgid "*Laravel's streamlined application structure was developed by [Taylor Otwell](https://github.com/taylorotwell) and [Nuno Maduro](https://github.com/nunomaduro)*."
msgstr ""

# P
#: ./docs/8.x/releases.md:61
msgid "Jetstream is designed using [Tailwind CSS](https://tailwindcss.com) and offers your choice of [Livewire](https://laravel-livewire.com) or [Inertia](https://inertiajs.com) scaffolding."
msgstr ""

# P
#: ./docs/9.x/releases.md:62
msgid "*Symfony Mailer support was contributed by [Dries Vints](https://github.com/driesvints)*, [James Brooks](https://github.com/jbrooksuk), and [Julius Kiekbusch](https://github.com/Jubeki)."
msgstr ""

# P
#: ./docs/10.x/releases.md:63
#~ msgid "<a name=\"types\"></a>"
#~ msgstr ""

# P
#: ./docs/11.x/releases.md:63
msgid "Laravel 11 introduces a streamlined application structure for **new** Laravel applications, without requiring any changes to existing applications. The new application structure is intended to provide a leaner, more modern experience, while retaining many of the concepts that Laravel developers are already familiar with. Below we will discuss the highlights of Laravel's new application structure."
msgstr ""

# P
#: ./docs/8.x/releases.md:63
#~ msgid "<a name=\"models-directory\"></a>"
#~ msgstr ""

# H3
#: ./docs/10.x/releases.md:64
msgid "Types"
msgstr ""

# H3
#: ./docs/8.x/releases.md:64
msgid "Models Directory"
msgstr ""

# P
#: ./docs/9.x/releases.md:64
msgid "Previous releases of Laravel utilized the [Swift Mailer](https://swiftmailer.symfony.com/docs/introduction.html) library to send outgoing email. However, that library is no longer maintained and has been succeeded by Symfony Mailer."
msgstr ""

# H4
#: ./docs/11.x/releases.md:65
msgid "The Application Bootstrap File"
msgstr ""

# P
#: ./docs/10.x/releases.md:66
msgid "*Application skeleton and stub type-hints were contributed by [Nuno Maduro](https://github.com/nunomaduro)*."
msgstr ""

# P
#: ./docs/8.x/releases.md:66
msgid "By overwhelming community demand, the default Laravel application skeleton now contains an `app/Models` directory. We hope you enjoy this new home for your Eloquent models! All relevant generator commands have been updated to assume models exist within the `app/Models` directory if it exists. If the directory does not exist, the framework will assume your models should be placed within the `app` directory."
msgstr ""

# P
#: ./docs/9.x/releases.md:66
msgid "Please review the [upgrade guide](/docs/{{version}}/upgrade#symfony-mailer) to learn more about ensuring your application is compatible with Symfony Mailer."
msgstr ""

# P
#: ./docs/11.x/releases.md:67
msgid "The `bootstrap/app.php` file has been revitalized as a code-first application configuration file. From this file, you may now customize your application's routing, middleware, service providers, exception handling, and more. This file unifies a variety of high-level application behavior settings that were previously scattered throughout your application's file structure:"
msgstr ""

# P
#: ./docs/10.x/releases.md:68
msgid "On its initial release, Laravel utilized all of the type-hinting features available in PHP at the time. However, many new features have been added to PHP in the subsequent years, including additional primitive type-hints, return types, and union types."
msgstr ""

# P
#: ./docs/8.x/releases.md:68
#~ msgid "<a name=\"model-factory-classes\"></a>"
#~ msgstr ""

# P
#: ./docs/9.x/releases.md:68
#~ msgid "<a name=\"flysystem-3\"></a>"
#~ msgstr ""

# CODE: php
#: ./docs/11.x/releases.md:69
msgid ""
"return Application::configure(basePath: dirname(__DIR__))\n"
"    ->withRouting(\n"
"        web: __DIR__.'/../routes/web.php',\n"
"        commands: __DIR__.'/../routes/console.php',\n"
"        health: '/up',\n"
"    )\n"
"    ->withMiddleware(function (Middleware $middleware) {\n"
"        //\n"
"    })\n"
"    ->withExceptions(function (Exceptions $exceptions) {\n"
"        //\n"
"    })->create();"
msgstr ""

# H3
#: ./docs/8.x/releases.md:69
msgid "Model Factory Classes"
msgstr ""

# H3
#: ./docs/9.x/releases.md:69
msgid "Flysystem 3.x"
msgstr ""

# P
#: ./docs/10.x/releases.md:70
msgid "Laravel 10.x thoroughly updates the application skeleton and all stubs utilized by the framework to introduce argument and return types to all method signatures. In addition, extraneous \"doc block\" type-hint information has been deleted."
msgstr ""

# P
#: ./docs/8.x/releases.md:71
msgid "*Model factory classes were contributed by [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr ""

# P
#: ./docs/9.x/releases.md:71
msgid "*Flysystem 3.x support was contributed by [Dries Vints](https://github.com/driesvints)*."
msgstr ""

# P
#: ./docs/10.x/releases.md:72
msgid "This change is entirely backwards compatible with existing applications. Therefore, existing applications that do not have these type-hints will continue to function normally."
msgstr ""

# P
#: ./docs/8.x/releases.md:73
msgid "Eloquent [model factories](/docs/{{version}}/database-testing#defining-model-factories) have been entirely re-written as class based factories and improved to have first-class relationship support. For example, the `UserFactory` included with Laravel is written like so:"
msgstr ""

# P
#: ./docs/9.x/releases.md:73
msgid "Laravel 9.x upgrades our upstream Flysystem dependency to Flysystem 3.x. Flysystem powers all of filesystem interactions offered by the `Storage` facade."
msgstr ""

# P
#: ./docs/10.x/releases.md:74
#~ msgid "<a name=\"laravel-pennant\"></a>"
#~ msgstr ""

# H3
#: ./docs/10.x/releases.md:75
msgid "Laravel Pennant"
msgstr ""

# CODE
#: ./docs/8.x/releases.md:75
msgid ""
"<?php\n"
"\n"
"namespace Database\\Factories;\n"
"\n"
"use App\\Models\\User;\n"
"use Illuminate\\Database\\Eloquent\\Factories\\Factory;\n"
"use Illuminate\\Support\\Str;\n"
"\n"
"class UserFactory extends Factory\n"
"{\n"
"    /**\n"
"     * The name of the factory's corresponding model.\n"
"     *\n"
"     * @var string\n"
"     */\n"
"    protected $model = User::class;\n"
"\n"
"    /**\n"
"     * Define the model's default state.\n"
"     *\n"
"     * @return array\n"
"     */\n"
"    public function definition()\n"
"    {\n"
"        return [\n"
"            'name' => $this->faker->name(),\n"
"            'email' => $this->faker->unique()->safeEmail(),\n"
"            'email_verified_at' => now(),\n"
"            'password' => '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', // password\n"
"            'remember_token' => Str::random(10),\n"
"        ];\n"
"    }\n"
"}"
msgstr ""

# P
#: ./docs/9.x/releases.md:75
msgid "Please review the [upgrade guide](/docs/{{version}}/upgrade#flysystem-3) to learn more about ensuring your application is compatible with Flysystem 3.x."
msgstr ""

# P
#: ./docs/10.x/releases.md:77
msgid "*Laravel Pennant was developed by [Tim MacDonald](https://github.com/timacdonald)*."
msgstr ""

# P
#: ./docs/9.x/releases.md:77
#~ msgid "<a name=\"eloquent-accessors-and-mutators\"></a>"
#~ msgstr ""

# H3
#: ./docs/9.x/releases.md:78
msgid "Improved Eloquent Accessors / Mutators"
msgstr ""

# P
#: ./docs/10.x/releases.md:79
msgid "A new first-party package, Laravel Pennant, has been released. Laravel Pennant offers a light-weight, streamlined approach to managing your application's feature flags. Out of the box, Pennant includes an in-memory `array` driver and a `database` driver for persistent feature storage."
msgstr ""

# P
#: ./docs/9.x/releases.md:80
msgid "*Improved Eloquent accessors / mutators was contributed by [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr ""

# P
#: ./docs/10.x/releases.md:81
msgid "Features can be easily defined via the `Feature::define` method:"
msgstr ""

# P
#: ./docs/9.x/releases.md:82
msgid "Laravel 9.x offers a new way to define Eloquent [accessors and mutators](/docs/{{version}}/eloquent-mutators#accessors-and-mutators). In previous releases of Laravel, the only way to define accessors and mutators was by defining prefixed methods on your model like so:"
msgstr ""

# CODE: php
#: ./docs/10.x/releases.md:83
msgid ""
"use Laravel\\Pennant\\Feature;\n"
"use Illuminate\\Support\\Lottery;\n"
"\n"
"Feature::define('new-onboarding-flow', function () {\n"
"    return Lottery::odds(1, 10);\n"
"});"
msgstr ""

# P
#: ./docs/11.x/releases.md:84
#~ msgid "<a name=\"service-providers\"></a>"
#~ msgstr ""

# CODE: php
#: ./docs/9.x/releases.md:84
msgid ""
"public function getNameAttribute($value)\n"
"{\n"
"    return strtoupper($value);\n"
"}\n"
"\n"
"public function setNameAttribute($value)\n"
"{\n"
"    $this->attributes['name'] = $value;\n"
"}"
msgstr ""

# H4
#: ./docs/11.x/releases.md:85
msgid "Service Providers"
msgstr ""

# P
#: ./docs/11.x/releases.md:87
msgid "Instead of the default Laravel application structure containing five service providers, Laravel 11 only includes a single `AppServiceProvider`. The functionality of the previous service providers has been incorporated into the `bootstrap/app.php`, is handled automatically by the framework, or may be placed in your application's `AppServiceProvider`."
msgstr ""

# P
#: ./docs/11.x/releases.md:89
msgid "For example, event discovery is now enabled by default, largely eliminating the need for manual registration of events and their listeners. However, if you do need to manually register events, you may simply do so in the `AppServiceProvider`. Similarly, route model bindings or authorization gates you may have previously registered in the `AuthServiceProvider` may also be registered in the `AppServiceProvider`."
msgstr ""

# P
#: ./docs/11.x/releases.md:91
#~ msgid "<a name=\"opt-in-routing\"></a>"
#~ msgstr ""

# P
#: ./docs/10.x/releases.md:92
msgid "Once a feature has been defined, you may easily determine if the current user has access to the given feature:"
msgstr ""

# H4
#: ./docs/11.x/releases.md:92
msgid "Opt-in API and Broadcast Routing"
msgstr ""

# CODE: php
#: ./docs/10.x/releases.md:94
msgid ""
"if (Feature::active('new-onboarding-flow')) {\n"
"    // ...\n"
"}"
msgstr ""

# P
#: ./docs/11.x/releases.md:94
msgid "The `api.php` and `channels.php` route files are no longer present by default, as many applications do not require these files. Instead, they may be created using simple Artisan commands:"
msgstr ""

# CODE: shell
#: ./docs/11.x/releases.md:96
msgid ""
"php artisan install:api\n"
"\n"
"php artisan install:broadcasting"
msgstr ""

# P
#: ./docs/9.x/releases.md:96
msgid "However, in Laravel 9.x you may define an accessor and mutator using a single, non-prefixed method by type-hinting a return type of `Illuminate\\Database\\Eloquent\\Casts\\Attribute`:"
msgstr ""

# CODE: php
#: ./docs/9.x/releases.md:98
msgid ""
"use Illuminate\\Database\\Eloquent\\Casts\\Attribute;\n"
"\n"
"public function name(): Attribute\n"
"{\n"
"    return new Attribute(\n"
"        get: fn ($value) => strtoupper($value),\n"
"        set: fn ($value) => $value,\n"
"    );\n"
"}"
msgstr ""

# P
#: ./docs/10.x/releases.md:100
msgid "Of course, for convenience, Blade directives are also available:"
msgstr ""

# CODE: blade
#: ./docs/10.x/releases.md:102
msgid ""
"@feature('new-onboarding-flow')\n"
"    <div>\n"
"        <!-- ... -->\n"
"    </div>\n"
"@endfeature"
msgstr ""

# P
#: ./docs/11.x/releases.md:102
#~ msgid "<a name=\"middleware\"></a>"
#~ msgstr ""

# H4
#: ./docs/11.x/releases.md:103
msgid "Middleware"
msgstr ""

# P
#: ./docs/11.x/releases.md:105
msgid "Previously, new Laravel applications included nine middleware. These middleware performed a variety of tasks such as authenticating requests, trimming input strings, and validating CSRF tokens."
msgstr ""

# P
#: ./docs/11.x/releases.md:107
msgid "In Laravel 11, these middleware have been moved into the framework itself, so that they do not add bulk to your application's structure. New methods for customizing the behavior of these middleware have been added to the framework and may be invoked from your application's `bootstrap/app.php` file:"
msgstr ""

# CODE: php
#: ./docs/11.x/releases.md:109
msgid ""
"->withMiddleware(function (Middleware $middleware) {\n"
"    $middleware->validateCsrfTokens(\n"
"        except: ['stripe/*']\n"
"    );\n"
"\n"
"    $middleware->web(append: [\n"
"        EnsureUserIsSubscribed::class,\n"
"    ])\n"
"})"
msgstr ""

# P
#: ./docs/8.x/releases.md:109
msgid "Thanks to the new `HasFactory` trait available on generated models, the model factory may be used like so:"
msgstr ""

# P
#: ./docs/10.x/releases.md:110
msgid "Pennant offers a variety of more advanced features and APIs. For more information, please consult the [comprehensive Pennant documentation](/docs/{{version}}/pennant)."
msgstr ""

# P
#: ./docs/9.x/releases.md:110
msgid "In addition, this new approach to defining accessors will cache object values that are returned by the attribute, just like [custom cast classes](/docs/{{version}}/eloquent-mutators#custom-casts):"
msgstr ""

# CODE
#: ./docs/8.x/releases.md:111
msgid ""
"use App\\Models\\User;\n"
"\n"
"User::factory()->count(50)->create();"
msgstr ""

# P
#: ./docs/10.x/releases.md:112
#~ msgid "<a name=\"process\"></a>"
#~ msgstr ""

# CODE: php
#: ./docs/9.x/releases.md:112
msgid ""
"use App\\Support\\Address;\n"
"use Illuminate\\Database\\Eloquent\\Casts\\Attribute;\n"
"\n"
"public function address(): Attribute\n"
"{\n"
"    return new Attribute(\n"
"        get: fn ($value, $attributes) => new Address(\n"
"            $attributes['address_line_one'],\n"
"            $attributes['address_line_two'],\n"
"        ),\n"
"        set: fn (Address $value) => [\n"
"            'address_line_one' => $value->lineOne,\n"
"            'address_line_two' => $value->lineTwo,\n"
"        ],\n"
"    );\n"
"}"
msgstr ""

# H3
#: ./docs/10.x/releases.md:113
msgid "Process Interaction"
msgstr ""

# P
#: ./docs/10.x/releases.md:115
msgid "*The process abstraction layer was contributed by [Nuno Maduro](https://github.com/nunomaduro) and [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr ""

# P
#: ./docs/8.x/releases.md:115
msgid "Since model factories are now simple PHP classes, state transformations may be written as class methods. In addition, you may add any other helper classes to your Eloquent model factory as needed."
msgstr ""

# P
#: ./docs/10.x/releases.md:117
msgid "Laravel 10.x introduces a beautiful abstraction layer for starting and interacting with external processes via a new `Process` facade:"
msgstr ""

# P
#: ./docs/8.x/releases.md:117
msgid "For example, your `User` model might have a `suspended` state that modifies one of its default attribute values. You may define your state transformations using the base factory's `state` method. You may name your state method anything you like. After all, it's just a typical PHP method:"
msgstr ""

# CODE: php
#: ./docs/10.x/releases.md:119
msgid ""
"use Illuminate\\Support\\Facades\\Process;\n"
"\n"
"$result = Process::run('ls -la');\n"
"\n"
"return $result->output();"
msgstr ""

# CODE
#: ./docs/8.x/releases.md:119
msgid ""
"/**\n"
" * Indicate that the user is suspended.\n"
" *\n"
" * @return \\Illuminate\\Database\\Eloquent\\Factories\\Factory\n"
" */\n"
"public function suspended()\n"
"{\n"
"    return $this->state([\n"
"        'account_status' => 'suspended',\n"
"    ]);\n"
"}"
msgstr ""

# P
#: ./docs/11.x/releases.md:121
msgid "Since all middleware can be easily customized via your application's `bootstrap/app.php`, the need for a separate HTTP \"kernel\" class has been eliminated."
msgstr ""

# P
#: ./docs/11.x/releases.md:123
#~ msgid "<a name=\"scheduling\"></a>"
#~ msgstr ""

# H4
#: ./docs/11.x/releases.md:124
msgid "Scheduling"
msgstr ""

# P
#: ./docs/11.x/releases.md:126
msgid "Using a new `Schedule` facade, scheduled tasks may now be defined directly in your application's `routes/console.php` file, eliminating the need for a separate console \"kernel\" class:"
msgstr ""

# P
#: ./docs/10.x/releases.md:127
msgid "Processes may even be started in pools, allowing for the convenient execution and management of concurrent processes:"
msgstr ""

# CODE: php
#: ./docs/11.x/releases.md:128
msgid ""
"use Illuminate\\Support\\Facades\\Schedule;\n"
"\n"
"Schedule::command('emails:send')->daily();"
msgstr ""

# CODE: php
#: ./docs/10.x/releases.md:129
msgid ""
"use Illuminate\\Process\\Pool;\n"
"use Illuminate\\Support\\Facades\\Process;\n"
"\n"
"[$first, $second, $third] = Process::concurrently(function (Pool $pool) {\n"
"    $pool->command('cat first.txt');\n"
"    $pool->command('cat second.txt');\n"
"    $pool->command('cat third.txt');\n"
"});\n"
"\n"
"return $first->output();"
msgstr ""

# P
#: ./docs/8.x/releases.md:131
msgid "After defining the state transformation method, we may use it like so:"
msgstr ""

# P
#: ./docs/9.x/releases.md:131
#~ msgid "<a name=\"enum-casting\"></a>"
#~ msgstr ""

# H3
#: ./docs/9.x/releases.md:132
msgid "Enum Eloquent Attribute Casting"
msgstr ""

# CODE
#: ./docs/8.x/releases.md:133
msgid ""
"use App\\Models\\User;\n"
"\n"
"User::factory()->count(5)->suspended()->create();"
msgstr ""

# P
#: ./docs/11.x/releases.md:134
#~ msgid "<a name=\"exception-handling\"></a>"
#~ msgstr ""

# H4
#: ./docs/11.x/releases.md:135
msgid "Exception Handling"
msgstr ""

# P
#: ./docs/9.x/releases.md:135
msgid "Enum casting is only available for PHP 8.1+."
msgstr ""

# P
#: ./docs/11.x/releases.md:137
msgid "Like routing and middleware, exception handling can now be customized from your application's `bootstrap/app.php` file instead of a separate exception handler class, reducing the overall number of files included in a new Laravel application:"
msgstr ""

# P
#: ./docs/8.x/releases.md:137
msgid "As mentioned, Laravel 8's model factories contain first class support for relationships. So, assuming our `User` model has a `posts` relationship method, we may simply run the following code to generate a user with three posts:"
msgstr ""

# P
#: ./docs/9.x/releases.md:137
msgid "*Enum casting was contributed by [Mohamed Said](https://github.com/themsaid)*."
msgstr ""

# CODE: php
#: ./docs/11.x/releases.md:139
msgid ""
"->withExceptions(function (Exceptions $exceptions) {\n"
"    $exceptions->dontReport(MissedFlightException::class);\n"
"\n"
"    $exceptions->report(function (InvalidOrderException $e) {\n"
"        // ...\n"
"    });\n"
"})"
msgstr ""

# CODE
#: ./docs/8.x/releases.md:139
msgid ""
"$users = User::factory()\n"
"            ->hasPosts(3, [\n"
"                'published' => false,\n"
"            ])\n"
"            ->create();"
msgstr ""

# P
#: ./docs/9.x/releases.md:139
msgid "Eloquent now allows you to cast your attribute values to PHP [\"backed\" Enums](https://www.php.net/manual/en/language.enumerations.backed.php). To accomplish this, you may specify the attribute and enum you wish to cast in your model's `$casts` property array:"
msgstr ""

# CODE
#: ./docs/9.x/releases.md:141
msgid ""
"use App\\Enums\\ServerStatus;\n"
"\n"
"/**\n"
" * The attributes that should be cast.\n"
" *\n"
" * @var array\n"
" */\n"
"protected $casts = [\n"
"    'status' => ServerStatus::class,\n"
"];"
msgstr ""

# P
#: ./docs/10.x/releases.md:142
msgid "In addition, processes may be faked for convenient testing:"
msgstr ""

# CODE: php
#: ./docs/10.x/releases.md:144
msgid ""
"Process::fake();\n"
"\n"
"// ...\n"
"\n"
"Process::assertRan('ls -la');"
msgstr ""

# P
#: ./docs/8.x/releases.md:145
msgid "To ease the upgrade process, the [laravel/legacy-factories](https://github.com/laravel/legacy-factories) package has been released to provide support for the previous iteration of model factories within Laravel 8.x."
msgstr ""

# P
#: ./docs/8.x/releases.md:147
msgid "Laravel's re-written factories contain many more features that we think you will love. To learn more about model factories, please consult the [database testing documentation](/docs/{{version}}/database-testing#defining-model-factories)."
msgstr ""

# P
#: ./docs/11.x/releases.md:149
#~ msgid "<a name=\"base-controller-class\"></a>"
#~ msgstr ""

# P
#: ./docs/8.x/releases.md:149
#~ msgid "<a name=\"migration-squashing\"></a>"
#~ msgstr ""

# H4
#: ./docs/11.x/releases.md:150
msgid "Base `Controller` Class"
msgstr ""

# H3
#: ./docs/8.x/releases.md:150
msgid "Migration Squashing"
msgstr ""

# P
#: ./docs/10.x/releases.md:152
msgid "For more information on interacting with processes, please consult the [comprehensive process documentation](/docs/{{version}}/processes)."
msgstr ""

# P
#: ./docs/11.x/releases.md:152
msgid "The base controller included in new Laravel applications has been simplified. It no longer extends Laravel's internal `Controller` class, and the `AuthorizesRequests` and `ValidatesRequests` traits have been removed, as they may be included in your application's individual controllers if desired:"
msgstr ""

# P
#: ./docs/8.x/releases.md:152
msgid "*Migration squashing was contributed by [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr ""

# P
#: ./docs/9.x/releases.md:152
msgid "Once you have defined the cast on your model, the specified attribute will be automatically cast to and from an enum when you interact with the attribute:"
msgstr ""

# P
#: ./docs/10.x/releases.md:154
#~ msgid "<a name=\"test-profiling\"></a>"
#~ msgstr ""

# CODE
#: ./docs/11.x/releases.md:154
msgid ""
"<?php\n"
"\n"
"namespace App\\Http\\Controllers;\n"
"\n"
"abstract class Controller\n"
"{\n"
"    //\n"
"}"
msgstr ""

# P
#: ./docs/8.x/releases.md:154
msgid "As you build your application, you may accumulate more and more migrations over time. This can lead to your migration directory becoming bloated with potentially hundreds of migrations. If you're using MySQL or PostgreSQL, you may now \"squash\" your migrations into a single SQL file. To get started, execute the `schema:dump` command:"
msgstr ""

# CODE
#: ./docs/9.x/releases.md:154
msgid ""
"if ($server->status == ServerStatus::Provisioned) {\n"
"    $server->status = ServerStatus::Ready;\n"
"\n"
"    $server->save();\n"
"}"
msgstr ""

# H3
#: ./docs/10.x/releases.md:155
msgid "Test Profiling"
msgstr ""

# CODE
#: ./docs/8.x/releases.md:156
msgid ""
"php artisan schema:dump\n"
"\n"
"// Dump the current database schema and prune all existing migrations...\n"
"php artisan schema:dump --prune"
msgstr ""

# P
#: ./docs/10.x/releases.md:157
msgid "*Test profiling was contributed by [Nuno Maduro](https://github.com/nunomaduro)*."
msgstr ""

# P
#: ./docs/10.x/releases.md:159
msgid "The Artisan `test` command has received a new `--profile` option that allows you to easily identify the slowest tests in your application:"
msgstr ""

# P
#: ./docs/9.x/releases.md:160
#~ msgid "<a name=\"implicit-route-bindings-with-enums\"></a>"
#~ msgstr ""

# CODE: shell
#: ./docs/10.x/releases.md:161
msgid "php artisan test --profile"
msgstr ""

# P
#: ./docs/8.x/releases.md:161
msgid "When you execute this command, Laravel will write a \"schema\" file to your `database/schema` directory. Now, when you attempt to migrate your database and no other migrations have been executed, Laravel will execute the schema file's SQL first. After executing the schema file's commands, Laravel will execute any remaining migrations that were not part of the schema dump."
msgstr ""

# H3
#: ./docs/9.x/releases.md:161
msgid "Implicit Route Bindings With Enums"
msgstr ""

# P
#: ./docs/11.x/releases.md:163
#~ msgid "<a name=\"application-defaults\"></a>"
#~ msgstr ""

# P
#: ./docs/8.x/releases.md:163
#~ msgid "<a name=\"job-batching\"></a>"
#~ msgstr ""

# P
#: ./docs/9.x/releases.md:163
msgid "*Implicit Enum bindings was contributed by [Nuno Maduro](https://github.com/nunomaduro)*."
msgstr ""

# H4
#: ./docs/11.x/releases.md:164
msgid "Application Defaults"
msgstr ""

# H3
#: ./docs/8.x/releases.md:164
msgid "Job Batching"
msgstr ""

# P
#: ./docs/10.x/releases.md:165
msgid "For convenience, the slowest tests will be displayed directly within the CLI output:"
msgstr ""

# P
#: ./docs/9.x/releases.md:165
msgid "PHP 8.1 introduces support for [Enums](https://www.php.net/manual/en/language.enumerations.backed.php). Laravel 9.x introduces the ability to type-hint an Enum on your route definition and Laravel will only invoke the route if that route segment is a valid Enum value in the URI. Otherwise, an HTTP 404 response will be returned automatically. For example, given the following Enum:"
msgstr ""

# P
#: ./docs/11.x/releases.md:166
msgid "By default, new Laravel applications use SQLite for database storage, as well as the `database` driver for Laravel's session, cache, and queue. This allows you to begin building your application immediately after creating a new Laravel application, without being required to install additional software or create additional database migrations."
msgstr ""

# P
#: ./docs/8.x/releases.md:166
msgid "*Job batching was contributed by [Taylor Otwell](https://github.com/taylorotwell) & [Mohamed Said](https://github.com/themsaid)*."
msgstr ""

# CODE: php
#: ./docs/9.x/releases.md:167
msgid ""
"enum Category: string\n"
"{\n"
"    case Fruits = 'fruits';\n"
"    case People = 'people';\n"
"}"
msgstr ""

# P
#: ./docs/11.x/releases.md:168
msgid "In addition, over time, the `database` drivers for these Laravel services have become robust enough for production usage in many application contexts; therefore, they provide a sensible, unified choice for both local and production applications."
msgstr ""

# P
#: ./docs/8.x/releases.md:168
msgid "Laravel's job batching feature allows you to easily execute a batch of jobs and then perform some action when the batch of jobs has completed executing."
msgstr ""

# P
#: ./docs/11.x/releases.md:170
#~ msgid "<a name=\"reverb\"></a>"
#~ msgstr ""

# P
#: ./docs/8.x/releases.md:170
msgid "The new `batch` method of the `Bus` facade may be used to dispatch a batch of jobs. Of course, batching is primarily useful when combined with completion callbacks. So, you may use the `then`, `catch`, and `finally` methods to define completion callbacks for the batch. Each of these callbacks will receive an `Illuminate\\Bus\\Batch` instance when they are invoked:"
msgstr ""

# P
#: ./docs/10.x/releases.md:171
#~ msgid "<a name=\"pest-scaffolding\"></a>"
#~ msgstr ""

# H3
#: ./docs/11.x/releases.md:171
msgid "Laravel Reverb"
msgstr ""

# H3
#: ./docs/10.x/releases.md:172
msgid "Pest Scaffolding"
msgstr ""

# CODE
#: ./docs/8.x/releases.md:172
msgid ""
"use App\\Jobs\\ProcessPodcast;\n"
"use App\\Models\\Podcast;\n"
"use Illuminate\\Bus\\Batch;\n"
"use Illuminate\\Support\\Facades\\Bus;\n"
"use Throwable;\n"
"\n"
"$batch = Bus::batch([\n"
"    new ProcessPodcast(Podcast::find(1)),\n"
"    new ProcessPodcast(Podcast::find(2)),\n"
"    new ProcessPodcast(Podcast::find(3)),\n"
"    new ProcessPodcast(Podcast::find(4)),\n"
"    new ProcessPodcast(Podcast::find(5)),\n"
"])->then(function (Batch $batch) {\n"
"    // All jobs completed successfully...\n"
"})->catch(function (Batch $batch, Throwable $e) {\n"
"    // First batch job failure detected...\n"
"})->finally(function (Batch $batch) {\n"
"    // The batch has finished executing...\n"
"})->dispatch();\n"
"\n"
"return $batch->id;"
msgstr ""

# P
#: ./docs/11.x/releases.md:173
msgid "*Laravel Reverb was developed by [Joe Dixon](https://github.com/joedixon)*."
msgstr ""

# P
#: ./docs/10.x/releases.md:174
msgid "New Laravel projects may now be created with Pest test scaffolding by default. To opt-in to this feature, provide the `--pest` flag when creating a new application via the Laravel installer:"
msgstr ""

# P
#: ./docs/11.x/releases.md:175
msgid "[Laravel Reverb](https://reverb.laravel.com) brings blazing-fast and scalable real-time WebSocket communication directly to your Laravel application, and provides seamless integration with Laravel’s existing suite of event broadcasting tools, such as Laravel Echo."
msgstr ""

# P
#: ./docs/9.x/releases.md:175
msgid "You may define a route that will only be invoked if the `{category}` route segment is `fruits` or `people`. Otherwise, an HTTP 404 response will be returned:"
msgstr ""

# CODE: shell
#: ./docs/10.x/releases.md:176
msgid "laravel new example-application --pest"
msgstr ""

# CODE: shell
#: ./docs/11.x/releases.md:177
msgid "php artisan reverb:start"
msgstr ""

# CODE: php
#: ./docs/9.x/releases.md:177
msgid ""
"Route::get('/categories/{category}', function (Category $category) {\n"
"    return $category->value;\n"
"});"
msgstr ""

# P
#: ./docs/10.x/releases.md:180
#~ msgid "<a name=\"generator-cli-prompts\"></a>"
#~ msgstr ""

# H3
#: ./docs/10.x/releases.md:181
msgid "Generator CLI Prompts"
msgstr ""

# P
#: ./docs/11.x/releases.md:181
msgid "In addition, Reverb supports horizontal scaling via Redis's publish / subscribe capabilities, allowing you to distribute your WebSocket traffic across multiple backend Reverb servers all supporting a single, high-demand application."
msgstr ""

# P
#: ./docs/10.x/releases.md:183
msgid "*Generator CLI prompts were contributed by [Jess Archer](https://github.com/jessarcher)*."
msgstr ""

# P
#: ./docs/11.x/releases.md:183
msgid "For more information on Laravel Reverb, please consult the complete [Reverb documentation](/docs/{{version}}/reverb)."
msgstr ""

# P
#: ./docs/9.x/releases.md:183
#~ msgid "<a name=\"forced-scoping-of-route-bindings\"></a>"
#~ msgstr ""

# H3
#: ./docs/9.x/releases.md:184
msgid "Forced Scoping Of Route Bindings"
msgstr ""

# P
#: ./docs/10.x/releases.md:185
msgid "To improve the framework's developer experience, all of Laravel's built-in `make` commands no longer require any input. If the commands are invoked without input, you will be prompted for the required arguments:"
msgstr ""

# P
#: ./docs/11.x/releases.md:185
#~ msgid "<a name=\"rate-limiting\"></a>"
#~ msgstr ""

# H3
#: ./docs/11.x/releases.md:186
msgid "Per-Second Rate Limiting"
msgstr ""

# P
#: ./docs/9.x/releases.md:186
msgid "*Forced scoped bindings was contributed by [Claudio Dekker](https://github.com/claudiodekker)*."
msgstr ""

# CODE: shell
#: ./docs/10.x/releases.md:187
msgid "php artisan make:controller"
msgstr ""

# P
#: ./docs/11.x/releases.md:188
msgid "*Per-second rate limiting was contributed by [Tim MacDonald](https://github.com/timacdonald)*."
msgstr ""

# P
#: ./docs/9.x/releases.md:188
msgid "In previous releases of Laravel, you may wish to scope the second Eloquent model in a route definition such that it must be a child of the previous Eloquent model. For example, consider this route definition that retrieves a blog post by slug for a specific user:"
msgstr ""

# P
#: ./docs/11.x/releases.md:190
msgid "Laravel now supports \"per-second\" rate limiting for all rate limiters, including those for HTTP requests and queued jobs. Previously, Laravel's rate limiters were limited to \"per-minute\" granularity:"
msgstr ""

# CODE
#: ./docs/9.x/releases.md:190
msgid ""
"use App\\Models\\Post;\n"
"use App\\Models\\User;\n"
"\n"
"Route::get('/users/{user}/posts/{post:slug}', function (User $user, Post $post) {\n"
"    return $post;\n"
"});"
msgstr ""

# P
#: ./docs/10.x/releases.md:191
#~ msgid "<a name=\"horizon-telescope-facelift\"></a>"
#~ msgstr ""

# H3
#: ./docs/10.x/releases.md:192
msgid "Horizon / Telescope Facelift"
msgstr ""

# CODE: php
#: ./docs/11.x/releases.md:192
msgid ""
"RateLimiter::for('invoices', function (Request $request) {\n"
"    return Limit::perSecond(1);\n"
"});"
msgstr ""

# P
#: ./docs/10.x/releases.md:194
msgid "[Horizon](/docs/{{version}}/horizon) and [Telescope](/docs/{{version}}/telescope) have been updated with a fresh, modern look including improved typography, spacing, and design:"
msgstr ""

# P
#: ./docs/8.x/releases.md:194
msgid "To learn more about job batching, please consult the [queue documentation](/docs/{{version}}/queues#job-batching)."
msgstr ""

# P
#: ./docs/8.x/releases.md:196
#~ msgid "<a name=\"improved-rate-limiting\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/releases.md:197
msgid "Improved Rate Limiting"
msgstr ""

# P
#: ./docs/9.x/releases.md:197
msgid "When using a custom keyed implicit binding as a nested route parameter, Laravel will automatically scope the query to retrieve the nested model by its parent using conventions to guess the relationship name on the parent. However, this behavior was only previously supported by Laravel when a custom key was used for the child route binding."
msgstr ""

# P
#: ./docs/11.x/releases.md:198
msgid "For more information on rate limiting in Laravel, check out the [rate limiting documentation](/docs/{{version}}/routing#rate-limiting)."
msgstr ""

# P
#: ./docs/8.x/releases.md:199
msgid "*Rate limiting improvements were contributed by [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr ""

# P
#: ./docs/9.x/releases.md:199
msgid "However, in Laravel 9.x, you may now instruct Laravel to scope \"child\" bindings even when a custom key is not provided. To do so, you may invoke the `scopeBindings` method when defining your route:"
msgstr ""

# P
#: ./docs/11.x/releases.md:200
#~ msgid "<a name=\"health\"></a>"
#~ msgstr ""

# H3
#: ./docs/11.x/releases.md:201
msgid "Health Routing"
msgstr ""

# P
#: ./docs/8.x/releases.md:201
msgid "Laravel's request rate limiter feature has been augmented with more flexibility and power, while still maintaining backwards compatibility with previous release's `throttle` middleware API."
msgstr ""

# CODE
#: ./docs/9.x/releases.md:201
msgid ""
"use App\\Models\\Post;\n"
"use App\\Models\\User;\n"
"\n"
"Route::get('/users/{user}/posts/{post}', function (User $user, Post $post) {\n"
"    return $post;\n"
"})->scopeBindings();"
msgstr ""

# P
#: ./docs/11.x/releases.md:203
msgid "*Health routing was contributed by [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr ""

# P
#: ./docs/8.x/releases.md:203
msgid "Rate limiters are defined using the `RateLimiter` facade's `for` method. The `for` method accepts a rate limiter name and a closure that returns the limit configuration that should apply to routes that are assigned this rate limiter:"
msgstr ""

# P
#: ./docs/11.x/releases.md:205
msgid "New Laravel 11 applications include a `health` routing directive, which instructs Laravel to define a simple health-check endpoint that may be invoked by third-party application health monitoring services or orchestration systems like Kubernetes. By default, this route is served at `/up`:"
msgstr ""

# CODE
#: ./docs/8.x/releases.md:205
msgid ""
"use Illuminate\\Cache\\RateLimiting\\Limit;\n"
"use Illuminate\\Support\\Facades\\RateLimiter;\n"
"\n"
"RateLimiter::for('global', function (Request $request) {\n"
"    return Limit::perMinute(1000);\n"
"});"
msgstr ""

# CODE: php
#: ./docs/11.x/releases.md:207
msgid ""
"->withRouting(\n"
"    web: __DIR__.'/../routes/web.php',\n"
"    commands: __DIR__.'/../routes/console.php',\n"
"    health: '/up',\n"
")"
msgstr ""

# P
#: ./docs/9.x/releases.md:208
msgid "Or, you may instruct an entire group of route definitions to use scoped bindings:"
msgstr ""

# CODE
#: ./docs/9.x/releases.md:210
msgid ""
"Route::scopeBindings()->group(function () {\n"
"    Route::get('/users/{user}/posts/{post}', function (User $user, Post $post) {\n"
"        return $post;\n"
"    });\n"
"});"
msgstr ""

# P
#: ./docs/8.x/releases.md:212
msgid "Since rate limiter callbacks receive the incoming HTTP request instance, you may build the appropriate rate limit dynamically based on the incoming request or authenticated user:"
msgstr ""

# CODE
#: ./docs/8.x/releases.md:214
msgid ""
"RateLimiter::for('uploads', function (Request $request) {\n"
"    return $request->user()->vipCustomer()\n"
"                ? Limit::none()\n"
"                : Limit::perMinute(100);\n"
"});"
msgstr ""

# P
#: ./docs/11.x/releases.md:215
msgid "When HTTP requests are made to this route, Laravel will also dispatch a `DiagnosingHealth` event, allowing you to perform additional health checks that are relevant to your application."
msgstr ""

# P
#: ./docs/9.x/releases.md:216
#~ msgid "<a name=\"controller-route-groups\"></a>"
#~ msgstr ""

# P
#: ./docs/11.x/releases.md:217
#~ msgid "<a name=\"encryption\"></a>"
#~ msgstr ""

# H3
#: ./docs/9.x/releases.md:217
msgid "Controller Route Groups"
msgstr ""

# H3
#: ./docs/11.x/releases.md:218
msgid "Graceful Encryption Key Rotation"
msgstr ""

# P
#: ./docs/9.x/releases.md:219
msgid "*Route group improvements were contributed by [Luke Downing](https://github.com/lukeraymonddowning)*."
msgstr ""

# P
#: ./docs/11.x/releases.md:220
msgid "*Graceful encryption key rotation was contributed by [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr ""

# P
#: ./docs/8.x/releases.md:220
msgid "Sometimes you may wish to segment rate limits by some arbitrary value. For example, you may wish to allow users to access a given route 100 times per minute per IP address. To accomplish this, you may use the `by` method when building your rate limit:"
msgstr ""

# P
#: ./docs/9.x/releases.md:221
msgid "You may now use the `controller` method to define the common controller for all of the routes within the group. Then, when defining the routes, you only need to provide the controller method that they invoke:"
msgstr ""

# P
#: ./docs/11.x/releases.md:222
msgid "Since Laravel encrypts all cookies, including your application's session cookie, essentially every request to a Laravel application relies on encryption. However, because of this, rotating your application's encryption key would log all users out of your application. In addition, decrypting data that was encrypted by the previous encryption key becomes impossible."
msgstr ""

# CODE
#: ./docs/8.x/releases.md:222
msgid ""
"RateLimiter::for('uploads', function (Request $request) {\n"
"    return $request->user()->vipCustomer()\n"
"                ? Limit::none()\n"
"                : Limit::perMinute(100)->by($request->ip());\n"
"});"
msgstr ""

# CODE
#: ./docs/9.x/releases.md:223
msgid ""
"use App\\Http\\Controllers\\OrderController;\n"
"\n"
"Route::controller(OrderController::class)->group(function () {\n"
"    Route::get('/orders/{id}', 'show');\n"
"    Route::post('/orders', 'store');\n"
"});"
msgstr ""

# P
#: ./docs/11.x/releases.md:224
msgid "Laravel 11 allows you to define your application's previous encryption keys as a comma-delimited list via the `APP_PREVIOUS_KEYS` environment variable."
msgstr ""

# P
#: ./docs/11.x/releases.md:226
msgid "When encrypting values, Laravel will always use the \"current\" encryption key, which is within the `APP_KEY` environment variable. When decrypting values, Laravel will first try the current key. If decryption fails using the current key, Laravel will try all previous keys until one of the keys is able to decrypt the value."
msgstr ""

# P
#: ./docs/11.x/releases.md:228
msgid "This approach to graceful decryption allows users to keep using your application uninterrupted even if your encryption key is rotated."
msgstr ""

# P
#: ./docs/8.x/releases.md:228
msgid "Rate limiters may be attached to routes or route groups using the `throttle` [middleware](/docs/{{version}}/middleware). The throttle middleware accepts the name of the rate limiter you wish to assign to the route:"
msgstr ""

# P
#: ./docs/11.x/releases.md:230
msgid "For more information on encryption in Laravel, check out the [encryption documentation](/docs/{{version}}/encryption)."
msgstr ""

# CODE
#: ./docs/8.x/releases.md:230
msgid ""
"Route::middleware(['throttle:uploads'])->group(function () {\n"
"    Route::post('/audio', function () {\n"
"        //\n"
"    });\n"
"\n"
"    Route::post('/video', function () {\n"
"        //\n"
"    });\n"
"});"
msgstr ""

# P
#: ./docs/9.x/releases.md:230
#~ msgid "<a name=\"full-text\"></a>"
#~ msgstr ""

# H3
#: ./docs/9.x/releases.md:231
msgid "Full Text Indexes / Where Clauses"
msgstr ""

# P
#: ./docs/11.x/releases.md:232
#~ msgid "<a name=\"automatic-password-rehashing\"></a>"
#~ msgstr ""

# H3
#: ./docs/11.x/releases.md:233
msgid "Automatic Password Rehashing"
msgstr ""

# P
#: ./docs/9.x/releases.md:233
msgid "*Full text indexes and \"where\" clauses were contributed by [Taylor Otwell](https://github.com/taylorotwell) and [Dries Vints](https://github.com/driesvints)*."
msgstr ""

# P
#: ./docs/11.x/releases.md:235
msgid "*Automatic password rehashing was contributed by [Stephen Rees-Carter](https://github.com/valorin)*."
msgstr ""

# P
#: ./docs/9.x/releases.md:235
msgid "When using MySQL or PostgreSQL, the `fullText` method may now be added to column definitions to generate full text indexes:"
msgstr ""

# P
#: ./docs/11.x/releases.md:237
msgid "Laravel's default password hashing algorithm is bcrypt. The \"work factor\" for bcrypt hashes can be adjusted via the `config/hashing.php` configuration file or the `BCRYPT_ROUNDS` environment variable."
msgstr ""

# CODE
#: ./docs/9.x/releases.md:237
msgid "$table->text('bio')->fullText();"
msgstr ""

# P
#: ./docs/11.x/releases.md:239
msgid "Typically, the bcrypt work factor should be increased over time as CPU / GPU processing power increases. If you increase the bcrypt work factor for your application, Laravel will now gracefully and automatically rehash user passwords as users authenticate with your application."
msgstr ""

# P
#: ./docs/9.x/releases.md:239
msgid "In addition, the `whereFullText` and `orWhereFullText` methods may be used to add full text \"where\" clauses to a query for columns that have [full text indexes](/docs/{{version}}/migrations#available-index-types). These methods will be transformed into the appropriate SQL for the underlying database system by Laravel. For example, a `MATCH AGAINST` clause will be generated for applications utilizing MySQL:"
msgstr ""

# P
#: ./docs/8.x/releases.md:240
msgid "To learn more about rate limiting, please consult the [routing documentation](/docs/{{version}}/routing#rate-limiting)."
msgstr ""

# P
#: ./docs/11.x/releases.md:241
#~ msgid "<a name=\"prompt-validation\"></a>"
#~ msgstr ""

# CODE
#: ./docs/9.x/releases.md:241
msgid ""
"$users = DB::table('users')\n"
"           ->whereFullText('bio', 'web developer')\n"
"           ->get();"
msgstr ""

# H3
#: ./docs/11.x/releases.md:242
msgid "Prompt Validation"
msgstr ""

# P
#: ./docs/8.x/releases.md:242
#~ msgid "<a name=\"improved-maintenance-mode\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/releases.md:243
msgid "Improved Maintenance Mode"
msgstr ""

# P
#: ./docs/11.x/releases.md:244
msgid "*Prompt validator integration was contributed by [Andrea Marco Sartori](https://github.com/cerbero90)*."
msgstr ""

# P
#: ./docs/8.x/releases.md:245
msgid "*Maintenance mode improvements were contributed by [Taylor Otwell](https://github.com/taylorotwell) with inspiration from [Spatie](https://spatie.be)*."
msgstr ""

# P
#: ./docs/9.x/releases.md:245
#~ msgid "<a name=\"laravel-scout-database-engine\"></a>"
#~ msgstr ""

# P
#: ./docs/11.x/releases.md:246
msgid "[Laravel Prompts](/docs/{{version}}/prompts) is a PHP package for adding beautiful and user-friendly forms to your command-line applications, with browser-like features including placeholder text and validation."
msgstr ""

# H3
#: ./docs/9.x/releases.md:246
msgid "Laravel Scout Database Engine"
msgstr ""

# P
#: ./docs/8.x/releases.md:247
msgid "In previous releases of Laravel, the `php artisan down` maintenance mode feature may be bypassed using an \"allow list\" of IP addresses that were allowed to access the application. This feature has been removed in favor of a simpler \"secret\" / token solution."
msgstr ""

# P
#: ./docs/11.x/releases.md:248
msgid "Laravel Prompts supports input validation via closures:"
msgstr ""

# P
#: ./docs/9.x/releases.md:248
msgid "*The Laravel Scout database engine was contributed by [Taylor Otwell](https://github.com/taylorotwell) and [Dries Vints](https://github.com/driesvints)*."
msgstr ""

# P
#: ./docs/8.x/releases.md:249
msgid "While in maintenance mode, you may use the `secret` option to specify a maintenance mode bypass token:"
msgstr ""

# CODE: php
#: ./docs/11.x/releases.md:250
msgid ""
"$name = text(\n"
"    label: 'What is your name?',\n"
"    validate: fn (string $value) => match (true) {\n"
"        strlen($value) < 3 => 'The name must be at least 3 characters.',\n"
"        strlen($value) > 255 => 'The name must not exceed 255 characters.',\n"
"        default => null\n"
"    }\n"
");"
msgstr ""

# P
#: ./docs/9.x/releases.md:250
msgid "If your application interacts with small to medium sized databases or has a light workload, you may now use Scout's \"database\" engine instead of a dedicated search service such as Algolia or MeiliSearch. The database engine will use \"where like\" clauses and full text indexes when filtering results from your existing database to determine the applicable search results for your query."
msgstr ""

# CODE
#: ./docs/8.x/releases.md:251
msgid "php artisan down --secret=\"1630542a-246b-4b66-afa1-dd72a4c43515\""
msgstr ""

# P
#: ./docs/9.x/releases.md:252
msgid "To learn more about the Scout database engine, consult the [Scout documentation](/docs/{{version}}/scout)."
msgstr ""

# P
#: ./docs/8.x/releases.md:253
msgid "After placing the application in maintenance mode, you may navigate to the application URL matching this token and Laravel will issue a maintenance mode bypass cookie to your browser:"
msgstr ""

# P
#: ./docs/9.x/releases.md:254
#~ msgid "<a name=\"rendering-inline-blade-templates\"></a>"
#~ msgstr ""

# CODE
#: ./docs/8.x/releases.md:255
msgid "https://example.com/1630542a-246b-4b66-afa1-dd72a4c43515"
msgstr ""

# H3
#: ./docs/9.x/releases.md:255
msgid "Rendering Inline Blade Templates"
msgstr ""

# P
#: ./docs/8.x/releases.md:257
msgid "When accessing this hidden route, you will then be redirected to the `/` route of the application. Once the cookie has been issued to your browser, you will be able to browse the application normally as if it was not in maintenance mode."
msgstr ""

# P
#: ./docs/9.x/releases.md:257
msgid "*Rendering inline Blade templates was contributed by [Jason Beggs](https://github.com/jasonlbeggs). Rendering inline Blade components was contributed by [Toby Zerner](https://github.com/tobyzerner)*."
msgstr ""

# P
#: ./docs/8.x/releases.md:259
#~ msgid "<a name=\"pre-rendering-the-maintenance-mode-view\"></a>"
#~ msgstr ""

# P
#: ./docs/9.x/releases.md:259
msgid "Sometimes you may need to transform a raw Blade template string into valid HTML. You may accomplish this using the `render` method provided by the `Blade` facade. The `render` method accepts the Blade template string and an optional array of data to provide to the template:"
msgstr ""

# H4
#: ./docs/8.x/releases.md:260
msgid "Pre-Rendering The Maintenance Mode View"
msgstr ""

# P
#: ./docs/11.x/releases.md:261
msgid "However, this can become cumbersome when dealing with many inputs or complicated validation scenarios. Therefore, in Laravel 11, you may utilize the full power of Laravel's [validator](/docs/{{version}}/validation) when validating prompt inputs:"
msgstr ""

# CODE: php
#: ./docs/9.x/releases.md:261
msgid ""
"use Illuminate\\Support\\Facades\\Blade;\n"
"\n"
"return Blade::render('Hello, {{ $name }}', ['name' => 'Julian Bashir']);"
msgstr ""

# P
#: ./docs/8.x/releases.md:262
msgid "If you utilize the `php artisan down` command during deployment, your users may still occasionally encounter errors if they access the application while your Composer dependencies or other infrastructure components are updating. This occurs because a significant part of the Laravel framework must boot in order to determine your application is in maintenance mode and render the maintenance mode view using the templating engine."
msgstr ""

# CODE: php
#: ./docs/11.x/releases.md:263
msgid ""
"$name = text('What is your name?', validate: [\n"
"    'name' => 'required|min:3|max:255',\n"
"]);"
msgstr ""

# P
#: ./docs/8.x/releases.md:264
msgid "For this reason, Laravel now allows you to pre-render a maintenance mode view that will be returned at the very beginning of the request cycle. This view is rendered before any of your application's dependencies have loaded. You may pre-render a template of your choice using the `down` command's `render` option:"
msgstr ""

# CODE
#: ./docs/8.x/releases.md:266
msgid "php artisan down --render=\"errors::503\""
msgstr ""

# P
#: ./docs/9.x/releases.md:267
msgid "Similarly, the `renderComponent` method may be used to render a given class component by passing the component instance to the method:"
msgstr ""

# P
#: ./docs/8.x/releases.md:268
#~ msgid "<a name=\"closure-dispatch-chain-catch\"></a>"
#~ msgstr ""

# P
#: ./docs/11.x/releases.md:269
#~ msgid "<a name=\"queue-interaction-testing\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/releases.md:269
msgid "Closure Dispatch / Chain `catch`"
msgstr ""

# CODE: php
#: ./docs/9.x/releases.md:269
msgid ""
"use App\\View\\Components\\HelloComponent;\n"
"\n"
"return Blade::renderComponent(new HelloComponent('Julian Bashir'));"
msgstr ""

# H3
#: ./docs/11.x/releases.md:270
msgid "Queue Interaction Testing"
msgstr ""

# P
#: ./docs/8.x/releases.md:271
msgid "*Catch improvements were contributed by [Mohamed Said](https://github.com/themsaid)*."
msgstr ""

# P
#: ./docs/11.x/releases.md:272
msgid "*Queue interaction testing was contributed by [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr ""

# P
#: ./docs/8.x/releases.md:273
msgid "Using the new `catch` method, you may now provide a closure that should be executed if a queued closure fails to complete successfully after exhausting all of your queue's configured retry attempts:"
msgstr ""

# P
#: ./docs/11.x/releases.md:274
msgid "Previously, attempting to test that a queued job was released, deleted, or manually failed was cumbersome and required the definition of custom queue fakes and stubs. However, in Laravel 11, you may easily test for these queue interactions using the `withFakeQueueInteractions` method:"
msgstr ""

# CODE
#: ./docs/8.x/releases.md:275
msgid ""
"use Throwable;\n"
"\n"
"dispatch(function () use ($podcast) {\n"
"    $podcast->publish();\n"
"})->catch(function (Throwable $e) {\n"
"    // This job has failed...\n"
"});"
msgstr ""

# P
#: ./docs/9.x/releases.md:275
#~ msgid "<a name=\"slot-name-shortcut\"></a>"
#~ msgstr ""

# CODE: php
#: ./docs/11.x/releases.md:276
msgid ""
"use App\\Jobs\\ProcessPodcast;\n"
"\n"
"$job = (new ProcessPodcast)->withFakeQueueInteractions();\n"
"\n"
"$job->handle();\n"
"\n"
"$job->assertReleased(delay: 30);"
msgstr ""

# H3
#: ./docs/9.x/releases.md:276
msgid "Slot Name Shortcut"
msgstr ""

# P
#: ./docs/9.x/releases.md:278
msgid "*Slot name shortcuts were contributed by [Caleb Porzio](https://github.com/calebporzio).*"
msgstr ""

# P
#: ./docs/9.x/releases.md:280
msgid "In previous releases of Laravel, slot names were provided using a `name` attribute on the `x-slot` tag:"
msgstr ""

# CODE: blade
#: ./docs/9.x/releases.md:282
msgid ""
"<x-alert>\n"
"    <x-slot name=\"title\">\n"
"        Server Error\n"
"    </x-slot>\n"
"\n"
"    <strong>Whoops!</strong> Something went wrong!\n"
"</x-alert>"
msgstr ""

# P
#: ./docs/8.x/releases.md:283
#~ msgid "<a name=\"dynamic-blade-components\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/releases.md:284
msgid "Dynamic Blade Components"
msgstr ""

# P
#: ./docs/11.x/releases.md:286
msgid "For more information on testing queued jobs, check out the [queue documentation](/docs/{{version}}/queues#testing)."
msgstr ""

# P
#: ./docs/8.x/releases.md:286
msgid "*Dynamic Blade components were contributed by [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr ""

# P
#: ./docs/11.x/releases.md:288
#~ msgid "<a name=\"new-artisan-commands\"></a>"
#~ msgstr ""

# P
#: ./docs/8.x/releases.md:288
msgid "Sometimes you may need to render a component but not know which component should be rendered until runtime. In this situation, you may now use Laravel's built-in `dynamic-component` component to render the component based on a runtime value or variable:"
msgstr ""

# H3
#: ./docs/11.x/releases.md:289
msgid "New Artisan Commands"
msgstr ""

# CODE
#: ./docs/8.x/releases.md:290
msgid "<x-dynamic-component :component=\"$componentName\" class=\"mt-4\" />"
msgstr ""

# P
#: ./docs/11.x/releases.md:291
msgid "*Class creation Artisan commands were contributed by [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr ""

# P
#: ./docs/8.x/releases.md:292
msgid "To learn more about Blade components, please consult the [Blade documentation](/docs/{{version}}/blade#components)."
msgstr ""

# P
#: ./docs/9.x/releases.md:292
msgid "However, beginning in Laravel 9.x, you may specify the slot's name using a convenient, shorter syntax:"
msgstr ""

# P
#: ./docs/11.x/releases.md:293
msgid "New Artisan commands have been added to allow the quick creation of classes, enums, interfaces, and traits:"
msgstr ""

# P
#: ./docs/8.x/releases.md:294
#~ msgid "<a name=\"event-listener-improvements\"></a>"
#~ msgstr ""

# CODE: xml
#: ./docs/9.x/releases.md:294
msgid ""
"<x-slot:title>\n"
"    Server Error\n"
"</x-slot>"
msgstr ""

# CODE: shell
#: ./docs/11.x/releases.md:295
msgid ""
"php artisan make:class\n"
"php artisan make:enum\n"
"php artisan make:interface\n"
"php artisan make:trait"
msgstr ""

# H3
#: ./docs/8.x/releases.md:295
msgid "Event Listener Improvements"
msgstr ""

# P
#: ./docs/8.x/releases.md:297
msgid "*Event listener improvements were contributed by [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr ""

# P
#: ./docs/8.x/releases.md:299
msgid "Closure based event listeners may now be registered by only passing the closure to the `Event::listen` method. Laravel will inspect the closure to determine which type of event the listener handles:"
msgstr ""

# P
#: ./docs/9.x/releases.md:300
#~ msgid "<a name=\"checked-selected-blade-directives\"></a>"
#~ msgstr ""

# CODE
#: ./docs/8.x/releases.md:301
msgid ""
"use App\\Events\\PodcastProcessed;\n"
"use Illuminate\\Support\\Facades\\Event;\n"
"\n"
"Event::listen(function (PodcastProcessed $event) {\n"
"    //\n"
"});"
msgstr ""

# H3
#: ./docs/9.x/releases.md:301
msgid "Checked / Selected Blade Directives"
msgstr ""

# P
#: ./docs/11.x/releases.md:302
#~ msgid "<a name=\"model-cast-improvements\"></a>"
#~ msgstr ""

# H3
#: ./docs/11.x/releases.md:303
msgid "Model Casts Improvements"
msgstr ""

# P
#: ./docs/9.x/releases.md:303
msgid "*Checked and selected Blade directives were contributed by [Ash Allen](https://github.com/ash-jc-allen) and [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr ""

# P
#: ./docs/11.x/releases.md:305
msgid "*Model casts improvements were contributed by [Nuno Maduro](https://github.com/nunomaduro)*."
msgstr ""

# P
#: ./docs/9.x/releases.md:305
msgid "For convenience, you may now use the `@checked` directive to easily indicate if a given HTML checkbox input is \"checked\". This directive will echo `checked` if the provided condition evaluates to `true`:"
msgstr ""

# P
#: ./docs/11.x/releases.md:307
msgid "Laravel 11 supports defining your model's casts using a method instead of a property. This allows for streamlined, fluent cast definitions, especially when using casts with arguments:"
msgstr ""

# CODE: blade
#: ./docs/9.x/releases.md:307
msgid ""
"<input type=\"checkbox\"\n"
"        name=\"active\"\n"
"        value=\"active\"\n"
"        @checked(old('active', $user->active)) />"
msgstr ""

# P
#: ./docs/8.x/releases.md:308
msgid "In addition, closure based event listeners may now be marked as queueable using the `Illuminate\\Events\\queueable` function:"
msgstr ""

# CODE
#: ./docs/11.x/releases.md:309
msgid ""
"/**\n"
" * Get the attributes that should be cast.\n"
" *\n"
" * @return array<string, string>\n"
" */\n"
"protected function casts(): array\n"
"{\n"
"    return [\n"
"        'options' => AsCollection::using(OptionCollection::class),\n"
"                  // AsEncryptedCollection::using(OptionCollection::class),\n"
"                  // AsEnumArrayObject::using(OptionEnum::class),\n"
"                  // AsEnumCollection::using(OptionEnum::class),\n"
"    ];\n"
"}"
msgstr ""

# CODE
#: ./docs/8.x/releases.md:310
msgid ""
"use App\\Events\\PodcastProcessed;\n"
"use function Illuminate\\Events\\queueable;\n"
"use Illuminate\\Support\\Facades\\Event;\n"
"\n"
"Event::listen(queueable(function (PodcastProcessed $event) {\n"
"    //\n"
"}));"
msgstr ""

# P
#: ./docs/9.x/releases.md:314
msgid "Likewise, the `@selected` directive may be used to indicate if a given select option should be \"selected\":"
msgstr ""

# CODE: blade
#: ./docs/9.x/releases.md:316
msgid ""
"<select name=\"version\">\n"
"    @foreach ($product->versions as $version)\n"
"        <option value=\"{{ $version }}\" @selected(old('version') == $version)>\n"
"            {{ $version }}\n"
"        </option>\n"
"    @endforeach\n"
"</select>"
msgstr ""

# P
#: ./docs/8.x/releases.md:318
msgid "Like queued jobs, you may use the `onConnection`, `onQueue`, and `delay` methods to customize the execution of the queued listener:"
msgstr ""

# CODE
#: ./docs/8.x/releases.md:320
msgid ""
"Event::listen(queueable(function (PodcastProcessed $event) {\n"
"    //\n"
"})->onConnection('redis')->onQueue('podcasts')->delay(now()->addSeconds(10)));"
msgstr ""

# P
#: ./docs/11.x/releases.md:324
msgid "For more information on attribute casting, review the [Eloquent documentation](/docs/{{version}}/eloquent-mutators#attribute-casting)."
msgstr ""

# P
#: ./docs/8.x/releases.md:324
msgid "If you would like to handle anonymous queued listener failures, you may provide a closure to the `catch` method while defining the `queueable` listener:"
msgstr ""

# P
#: ./docs/11.x/releases.md:326
#~ msgid "<a name=\"the-once-function\"></a>"
#~ msgstr ""

# CODE
#: ./docs/8.x/releases.md:326
msgid ""
"use App\\Events\\PodcastProcessed;\n"
"use function Illuminate\\Events\\queueable;\n"
"use Illuminate\\Support\\Facades\\Event;\n"
"use Throwable;\n"
"\n"
"Event::listen(queueable(function (PodcastProcessed $event) {\n"
"    //\n"
"})->catch(function (PodcastProcessed $event, Throwable $e) {\n"
"    // The queued listener failed...\n"
"}));"
msgstr ""

# P
#: ./docs/9.x/releases.md:326
#~ msgid "<a name=\"bootstrap-5-pagination-views\"></a>"
#~ msgstr ""

# H3
#: ./docs/11.x/releases.md:327
msgid "The `once` Function"
msgstr ""

# H3
#: ./docs/9.x/releases.md:327
msgid "Bootstrap 5 Pagination Views"
msgstr ""

# P
#: ./docs/11.x/releases.md:329
msgid "*The `once` helper was contributed by [Taylor Otwell](https://github.com/taylorotwell)* and *[Nuno Maduro](https://github.com/nunomaduro)*."
msgstr ""

# P
#: ./docs/9.x/releases.md:329
msgid "*Bootstrap 5 pagination views were contributed by [Jared Lewis](https://github.com/jrd-lewis)*."
msgstr ""

# P
#: ./docs/11.x/releases.md:331
msgid "The `once` helper function executes the given callback and caches the result in memory for the duration of the request. Any subsequent calls to the `once` function with the same callback will return the previously cached result:"
msgstr ""

# P
#: ./docs/9.x/releases.md:331
msgid "Laravel now includes pagination views built using [Bootstrap 5](https://getbootstrap.com/). To use these views instead of the default Tailwind views, you may call the paginator's `useBootstrapFive` method within the `boot` method of your `App\\Providers\\AppServiceProvider` class:"
msgstr ""

# CODE
#: ./docs/11.x/releases.md:333
msgid ""
"function random(): int\n"
"{\n"
"    return once(function () {\n"
"        return random_int(1, 1000);\n"
"    });\n"
"}\n"
"\n"
"random(); // 123\n"
"random(); // 123 (cached result)\n"
"random(); // 123 (cached result)"
msgstr ""

# CODE
#: ./docs/9.x/releases.md:333
msgid ""
"use Illuminate\\Pagination\\Paginator;\n"
"\n"
"/**\n"
" * Bootstrap any application services.\n"
" *\n"
" * @return void\n"
" */\n"
"public function boot()\n"
"{\n"
"    Paginator::useBootstrapFive();\n"
"}"
msgstr ""

# P
#: ./docs/8.x/releases.md:337
#~ msgid "<a name=\"time-testing-helpers\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/releases.md:338
msgid "Time Testing Helpers"
msgstr ""

# P
#: ./docs/8.x/releases.md:340
msgid "*Time testing helpers were contributed by [Taylor Otwell](https://github.com/taylorotwell) with inspiration from Ruby on Rails*."
msgstr ""

# P
#: ./docs/8.x/releases.md:342
msgid "When testing, you may occasionally need to modify the time returned by helpers such as `now` or `Illuminate\\Support\\Carbon::now()`. Laravel's base feature test class now includes helpers that allow you to manipulate the current time:"
msgstr ""

# P
#: ./docs/11.x/releases.md:344
msgid "For more information on the `once` helper, check out the [helpers documentation](/docs/{{version}}/helpers#method-once)."
msgstr ""

# CODE
#: ./docs/8.x/releases.md:344
msgid ""
"public function testTimeCanBeManipulated()\n"
"{\n"
"    // Travel into the future...\n"
"    $this->travel(5)->milliseconds();\n"
"    $this->travel(5)->seconds();\n"
"    $this->travel(5)->minutes();\n"
"    $this->travel(5)->hours();\n"
"    $this->travel(5)->days();\n"
"    $this->travel(5)->weeks();\n"
"    $this->travel(5)->years();\n"
"\n"
"    // Travel into the past...\n"
"    $this->travel(-5)->hours();\n"
"\n"
"    // Travel to an explicit time...\n"
"    $this->travelTo(now()->subHours(6));\n"
"\n"
"    // Return back to the present time...\n"
"    $this->travelBack();\n"
"}"
msgstr ""

# P
#: ./docs/9.x/releases.md:345
#~ msgid "<a name=\"improved-validation-of-nested-array-data\"></a>"
#~ msgstr ""

# P
#: ./docs/11.x/releases.md:346
#~ msgid "<a name=\"database-performance\"></a>"
#~ msgstr ""

# H3
#: ./docs/9.x/releases.md:346
msgid "Improved Validation Of Nested Array Data"
msgstr ""

# H3
#: ./docs/11.x/releases.md:347
msgid "Improved Performance When Testing With In-Memory Databases"
msgstr ""

# P
#: ./docs/9.x/releases.md:348
msgid "*Improved validation of nested array inputs was contributed by [Steve Bauman](https://github.com/stevebauman)*."
msgstr ""

# P
#: ./docs/11.x/releases.md:349
msgid "*Improved in-memory database testing performance was contributed by [Anders Jenbo](https://github.com/AJenbo)*"
msgstr ""

# P
#: ./docs/9.x/releases.md:350
msgid "Sometimes you may need to access the value for a given nested array element when assigning validation rules to the attribute. You may now accomplish this using the `Rule::forEach` method. The `forEach` method accepts a closure that will be invoked for each iteration of the array attribute under validation and will receive the attribute's value and explicit, fully-expanded attribute name. The closure should return an array of rules to assign to the array element:"
msgstr ""

# P
#: ./docs/11.x/releases.md:351
msgid "Laravel 11 offers a significant speed boost when using the `:memory:` SQLite database during testing. To accomplish this, Laravel now maintains a reference to PHP's PDO object and reuses it across connections, often cutting total test run time in half."
msgstr ""

# CODE
#: ./docs/9.x/releases.md:352
msgid ""
"use App\\Rules\\HasPermission;\n"
"use Illuminate\\Support\\Facades\\Validator;\n"
"use Illuminate\\Validation\\Rule;\n"
"\n"
"$validator = Validator::make($request->all(), [\n"
"    'companies.*.id' => Rule::forEach(function ($value, $attribute) {\n"
"        return [\n"
"            Rule::exists(Company::class, 'id'),\n"
"            new HasPermission('manage-company', $value),\n"
"        ];\n"
"    }),\n"
"]);"
msgstr ""

# P
#: ./docs/11.x/releases.md:353
#~ msgid "<a name=\"mariadb\"></a>"
#~ msgstr ""

# H3
#: ./docs/11.x/releases.md:354
msgid "Improved Support for MariaDB"
msgstr ""

# P
#: ./docs/11.x/releases.md:356
msgid "*Improved support for MariaDB was contributed by [Jonas Staudenmeir](https://github.com/staudenmeir) and [Julius Kiekbusch](https://github.com/Jubeki)*"
msgstr ""

# P
#: ./docs/11.x/releases.md:358
msgid "Laravel 11 includes improved support for MariaDB. In previous Laravel releases, you could use MariaDB via Laravel's MySQL driver. However, Laravel 11 now includes a dedicated MariaDB driver which provides better defaults for this database system."
msgstr ""

# P
#: ./docs/11.x/releases.md:360
msgid "For more information on Laravel's database drivers, check out the [database documentation](/docs/{{version}}/database)."
msgstr ""

# P
#: ./docs/11.x/releases.md:362
#~ msgid "<a name=\"inspecting-database\"></a>"
#~ msgstr ""

# H3
#: ./docs/11.x/releases.md:363
msgid "Inspecting Databases and Improved Schema Operations"
msgstr ""

# P
#: ./docs/11.x/releases.md:365
msgid "*Improved schema operations and database inspection was contributed by [Hafez Divandari](https://github.com/hafezdivandari)*"
msgstr ""

# P
#: ./docs/8.x/releases.md:365
#~ msgid "<a name=\"artisan-serve-improvements\"></a>"
#~ msgstr ""

# P
#: ./docs/9.x/releases.md:365
#~ msgid "<a name=\"laravel-breeze-api\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/releases.md:366
msgid "Artisan `serve` Improvements"
msgstr ""

# H3
#: ./docs/9.x/releases.md:366
msgid "Laravel Breeze API & Next.js"
msgstr ""

# P
#: ./docs/11.x/releases.md:367
msgid "Laravel 11 provides additional database schema operation and inspection methods, including the native modifying, renaming, and dropping of columns. Furthermore, advanced spatial types, non-default schema names, and native schema methods for manipulating tables, views, columns, indexes, and foreign keys are provided:"
msgstr ""

# P
#: ./docs/8.x/releases.md:368
msgid "*Artisan `serve` improvements were contributed by [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr ""

# P
#: ./docs/9.x/releases.md:368
msgid "*The Laravel Breeze API scaffolding and Next.js starter kit was contributed by [Taylor Otwell](https://github.com/taylorotwell) and [Miguel Piedrafita](https://twitter.com/m1guelpf)*."
msgstr ""

# CODE
#: ./docs/11.x/releases.md:369
msgid ""
"use Illuminate\\Support\\Facades\\Schema;\n"
"\n"
"$tables = Schema::getTables();\n"
"$views = Schema::getViews();\n"
"$columns = Schema::getColumns('users');\n"
"$indexes = Schema::getIndexes('users');\n"
"$foreignKeys = Schema::getForeignKeys('users');"
msgstr ""

# P
#: ./docs/8.x/releases.md:370
msgid "The Artisan `serve` command has been improved with automatic reloading when environment variable changes are detected within your local `.env` file. Previously, the command had to be manually stopped and restarted."
msgstr ""

# P
#: ./docs/9.x/releases.md:370
msgid "The [Laravel Breeze](/docs/{{version}}/starter-kits#breeze-and-next) starter kit has received an \"API\" scaffolding mode and complimentary [Next.js](https://nextjs.org) [frontend implementation](https://github.com/laravel/breeze-next). This starter kit scaffolding may be used to jump start your Laravel applications that are serving as a backend, Laravel Sanctum authenticated API for a JavaScript frontend."
msgstr ""

# P
#: ./docs/8.x/releases.md:372
#~ msgid "<a name=\"tailwind-pagination-views\"></a>"
#~ msgstr ""

# P
#: ./docs/9.x/releases.md:372
#~ msgid "<a name=\"exception-page\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/releases.md:373
msgid "Tailwind Pagination Views"
msgstr ""

# H3
#: ./docs/9.x/releases.md:373
msgid "Improved Ignition Exception Page"
msgstr ""

# P
#: ./docs/8.x/releases.md:375
msgid "The Laravel paginator has been updated to use the [Tailwind CSS](https://tailwindcss.com) framework by default. Tailwind CSS is a highly customizable, low-level CSS framework that gives you all of the building blocks you need to build bespoke designs without any annoying opinionated styles you have to fight to override. Of course, Bootstrap 3 and 4 views remain available as well."
msgstr ""

# P
#: ./docs/9.x/releases.md:375
msgid "*Ignition is developed by [Spatie](https://spatie.be/).*"
msgstr ""

# P
#: ./docs/8.x/releases.md:377
#~ msgid "<a name=\"routing-namespace-updates\"></a>"
#~ msgstr ""

# P
#: ./docs/9.x/releases.md:377
msgid "Ignition, the open source exception debug page created by Spatie, has been redesigned from the ground up. The new, improved Ignition ships with Laravel 9.x and includes light / dark themes, customizable \"open in editor\" functionality, and more."
msgstr ""

# H3
#: ./docs/8.x/releases.md:378
msgid "Routing Namespace Updates"
msgstr ""

# P
#: ./docs/8.x/releases.md:380
msgid "In previous releases of Laravel, the `RouteServiceProvider` contained a `$namespace` property. This property's value would automatically be prefixed onto controller route definitions and calls to the `action` helper / `URL::action` method. In Laravel 8.x, this property is `null` by default. This means that no automatic namespace prefixing will be done by Laravel. Therefore, in new Laravel 8.x applications, controller route definitions should be defined using standard PHP callable syntax:"
msgstr ""

# CODE
#: ./docs/8.x/releases.md:382
msgid ""
"use App\\Http\\Controllers\\UserController;\n"
"\n"
"Route::get('/users', [UserController::class, 'index']);"
msgstr ""

# P
#: ./docs/9.x/releases.md:383
#~ msgid "<a name=\"improved-route-list\"></a>"
#~ msgstr ""

# H3
#: ./docs/9.x/releases.md:384
msgid "Improved `route:list` CLI Output"
msgstr ""

# P
#: ./docs/8.x/releases.md:386
msgid "Calls to the `action` related methods should use the same callable syntax:"
msgstr ""

# P
#: ./docs/9.x/releases.md:386
msgid "*Improved `route:list` CLI output was contributed by [Nuno Maduro](https://github.com/nunomaduro)*."
msgstr ""

# CODE
#: ./docs/8.x/releases.md:388
msgid ""
"action([UserController::class, 'index']);\n"
"\n"
"return Redirect::action([UserController::class, 'index']);"
msgstr ""

# P
#: ./docs/9.x/releases.md:388
msgid "The `route:list` CLI output has been significantly improved for the Laravel 9.x release, offering a beautiful new experience when exploring your route definitions."
msgstr ""

# P
#: ./docs/8.x/releases.md:392
msgid "If you prefer Laravel 7.x style controller route prefixing, you may simply add the `$namespace` property into your application's `RouteServiceProvider`."
msgstr ""

# P
#: ./docs/8.x/releases.md:394
msgid "This change only affects new Laravel 8.x applications. Applications upgrading from Laravel 7.x will still have the `$namespace` property in their `RouteServiceProvider`."
msgstr ""

# P
#: ./docs/9.x/releases.md:394
#~ msgid "<a name=\"test-coverage-support-on-artisan-test-Command\"></a>"
#~ msgstr ""

# H3
#: ./docs/9.x/releases.md:395
msgid "Test Coverage Using Artisan `test` Command"
msgstr ""

# P
#: ./docs/9.x/releases.md:397
msgid "*Test coverage when using the Artisan `test` command was contributed by [Nuno Maduro](https://github.com/nunomaduro)*."
msgstr ""

# P
#: ./docs/9.x/releases.md:399
msgid "The Artisan `test` command has received a new `--coverage` option that you may use to explore the amount of code coverage your tests are providing to your application:"
msgstr ""

# CODE: shell
#: ./docs/9.x/releases.md:401
msgid "php artisan test --coverage"
msgstr ""

# P
#: ./docs/9.x/releases.md:405
msgid "The test coverage results will be displayed directly within the CLI output."
msgstr ""

# P
#: ./docs/9.x/releases.md:411
msgid "In addition, if you would like to specify a minimum threshold that your test coverage percentage must meet, you may use the `--min` option. The test suite will fail if the given minimum threshold is not met:"
msgstr ""

# CODE: shell
#: ./docs/9.x/releases.md:413
msgid "php artisan test --coverage --min=80.3"
msgstr ""

# P
#: ./docs/9.x/releases.md:421
#~ msgid "<a name=\"soketi-echo-server\"></a>"
#~ msgstr ""

# H3
#: ./docs/9.x/releases.md:422
msgid "Soketi Echo Server"
msgstr ""

# P
#: ./docs/9.x/releases.md:424
msgid "*The Soketi Echo server was developed by [Alex Renoki](https://github.com/rennokki)*."
msgstr ""

# P
#: ./docs/9.x/releases.md:426
msgid "Although not exclusive to Laravel 9.x, Laravel has recently assisted with the documentation of Soketi, a [Laravel Echo](/docs/{{version}}/broadcasting) compatible Web Socket server written for Node.js. Soketi provides a great, open source alternative to Pusher and Ably for those applications that prefer to manage their own Web Socket server."
msgstr ""

# P
#: ./docs/9.x/releases.md:428
msgid "For more information on using Soketi, please consult the [broadcasting documentation](/docs/{{version}}/broadcasting) and [Soketi documentation](https://docs.soketi.app/)."
msgstr ""

# P
#: ./docs/9.x/releases.md:430
#~ msgid "<a name=\"improved-collections-ide-support\"></a>"
#~ msgstr ""

# H3
#: ./docs/9.x/releases.md:431
msgid "Improved Collections IDE Support"
msgstr ""

# P
#: ./docs/9.x/releases.md:433
msgid "*Improved collections IDE support was contributed by [Nuno Maduro](https://github.com/nunomaduro)*."
msgstr ""

# P
#: ./docs/9.x/releases.md:435
msgid "Laravel 9.x adds improved, \"generic\" style type definitions to the collections component, improving IDE and static analysis support. IDEs such as [PHPStorm](https://blog.jetbrains.com/phpstorm/2021/12/phpstorm-2021-3-release/#support_for_future_laravel_collections) or static analysis tools such as [PHPStan](https://phpstan.org) will now better understand Laravel collections natively."
msgstr ""

# P
#: ./docs/9.x/releases.md:441
#~ msgid "<a name=\"new-helpers\"></a>"
#~ msgstr ""

# H3
#: ./docs/9.x/releases.md:442
msgid "New Helpers"
msgstr ""

# P
#: ./docs/9.x/releases.md:444
msgid "Laravel 9.x introduces two new, convenient helper functions that you may use in your own application."
msgstr ""

# P
#: ./docs/9.x/releases.md:446
#~ msgid "<a name=\"new-helpers-str\"></a>"
#~ msgstr ""

# H4
#: ./docs/9.x/releases.md:447
msgid "`str`"
msgstr ""

# P
#: ./docs/9.x/releases.md:449
msgid "The `str` function returns a new `Illuminate\\Support\\Stringable` instance for the given string. This function is equivalent to the `Str::of` method:"
msgstr ""

# CODE
#: ./docs/9.x/releases.md:451
msgid ""
"$string = str('Taylor')->append(' Otwell');\n"
"\n"
"// 'Taylor Otwell'"
msgstr ""

# P
#: ./docs/9.x/releases.md:455
msgid "If no argument is provided to the `str` function, the function returns an instance of `Illuminate\\Support\\Str`:"
msgstr ""

# CODE
#: ./docs/9.x/releases.md:457
msgid ""
"$snake = str()->snake('LaravelFramework');\n"
"\n"
"// 'laravel_framework'"
msgstr ""

# P
#: ./docs/9.x/releases.md:461
#~ msgid "<a name=\"new-helpers-to-route\"></a>"
#~ msgstr ""

# H4
#: ./docs/9.x/releases.md:462
msgid "`to_route`"
msgstr ""

# P
#: ./docs/9.x/releases.md:464
msgid "The `to_route` function generates a redirect HTTP response for a given named route, providing an expressive way to redirect to named routes from your routes and controllers:"
msgstr ""

# CODE
#: ./docs/9.x/releases.md:466
msgid "return to_route('users.show', ['user' => 1]);"
msgstr ""

# P
#: ./docs/9.x/releases.md:468
msgid "If necessary, you may pass the HTTP status code that should be assigned to the redirect and any additional response headers as the third and fourth arguments to the to_route method:"
msgstr ""

# CODE
#: ./docs/9.x/releases.md:470
msgid "return to_route('users.show', ['user' => 1], 302, ['X-Framework' => 'Laravel']);"
msgstr ""
