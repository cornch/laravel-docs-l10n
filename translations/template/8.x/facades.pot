# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Taylor Otwell
# This file is distributed under the same license as the Laravel Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2021-09-13 05:07+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title #
#: docs/8.x/facades.md:1
#, no-wrap
msgid "Facades"
msgstr ""

#. type: Bullet: '- '
#: docs/8.x/facades.md:10
msgid "[Introduction](#introduction)"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:10
#, no-wrap
msgid ""
"- [When To Use Facades](#when-to-use-facades)\n"
"    - [Facades Vs. Dependency Injection](#facades-vs-dependency-injection)\n"
"    - [Facades Vs. Helper Functions](#facades-vs-helper-functions)\n"
"- [How Facades Work](#how-facades-work)\n"
"- [Real-Time Facades](#real-time-facades)\n"
"- [Facade Class Reference](#facade-class-reference)\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:12
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/facades.md:12
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:15
msgid ""
"Throughout the Laravel documentation, you will see examples of code that "
"interacts with Laravel's features via \"facades\". Facades provide a "
"\"static\" interface to classes that are available in the application's "
"[service container](/docs/{{version}}/container). Laravel ships with many "
"facades which provide access to almost all of Laravel's features."
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:17
msgid ""
"Laravel facades serve as \"static proxies\" to underlying classes in the "
"service container, providing the benefit of a terse, expressive syntax while "
"maintaining more testability and flexibility than traditional static "
"methods. It's perfectly fine if you don't totally understand how facades "
"work under the hood - just go with the flow and continue learning about "
"Laravel."
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:19
msgid ""
"All of Laravel's facades are defined in the `Illuminate\\Support\\Facades` "
"namespace. So, we can easily access a facade like so:"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:22
#, no-wrap
msgid ""
"    use Illuminate\\Support\\Facades\\Cache;\n"
"    use Illuminate\\Support\\Facades\\Route;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:26 docs/8.x/facades.md:69
#, no-wrap
msgid ""
"    Route::get('/cache', function () {\n"
"        return Cache::get('key');\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:28
msgid ""
"Throughout the Laravel documentation, many of the examples will use facades "
"to demonstrate various features of the framework."
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:30
#, no-wrap
msgid "<a name=\"helper-functions\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/facades.md:30
#, no-wrap
msgid "Helper Functions"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:33
msgid ""
"To complement facades, Laravel offers a variety of global \"helper "
"functions\" that make it even easier to interact with common Laravel "
"features. Some of the common helper functions you may interact with are "
"`view`, `response`, `url`, `config`, and more. Each helper function offered "
"by Laravel is documented with their corresponding feature; however, a "
"complete list is available within the dedicated [helper "
"documentation](/docs/{{version}}/helpers)."
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:35
msgid ""
"For example, instead of using the `Illuminate\\Support\\Facades\\Response` "
"facade to generate a JSON response, we may simply use the `response` "
"function. Because helper functions are globally available, you do not need "
"to import any classes in order to use them:"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:37
#, no-wrap
msgid "    use Illuminate\\Support\\Facades\\Response;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:43
#, no-wrap
msgid ""
"    Route::get('/users', function () {\n"
"        return Response::json([\n"
"            // ...\n"
"        ]);\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:49
#, no-wrap
msgid ""
"    Route::get('/users', function () {\n"
"        return response()->json([\n"
"            // ...\n"
"        ]);\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:51
#, no-wrap
msgid "<a name=\"when-to-use-facades\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/facades.md:51
#, no-wrap
msgid "When To Use Facades"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:54
msgid ""
"Facades have many benefits. They provide a terse, memorable syntax that "
"allows you to use Laravel's features without remembering long class names "
"that must be injected or configured manually. Furthermore, because of their "
"unique usage of PHP's dynamic methods, they are easy to test."
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:56
msgid ""
"However, some care must be taken when using facades. The primary danger of "
"facades is class \"scope creep\". Since facades are so easy to use and do "
"not require injection, it can be easy to let your classes continue to grow "
"and use many facades in a single class. Using dependency injection, this "
"potential is mitigated by the visual feedback a large constructor gives you "
"that your class is growing too large. So, when using facades, pay special "
"attention to the size of your class so that its scope of responsibility "
"stays narrow. If your class is getting too large, consider splitting it into "
"multiple smaller classes."
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:58
#, no-wrap
msgid "<a name=\"facades-vs-dependency-injection\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/facades.md:58
#, no-wrap
msgid "Facades Vs. Dependency Injection"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:61
msgid ""
"One of the primary benefits of dependency injection is the ability to swap "
"implementations of the injected class. This is useful during testing since "
"you can inject a mock or stub and assert that various methods were called on "
"the stub."
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:63
msgid ""
"Typically, it would not be possible to mock or stub a truly static class "
"method. However, since facades use dynamic methods to proxy method calls to "
"objects resolved from the service container, we actually can test facades "
"just as we would test an injected class instance. For example, given the "
"following route:"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:65 docs/8.x/facades.md:73 docs/8.x/facades.md:108
#, no-wrap
msgid "    use Illuminate\\Support\\Facades\\Cache;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:71
msgid ""
"Using Laravel's facade testing methods, we can write the following test to "
"verify that the `Cache::get` method was called with the argument we "
"expected:"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:84 docs/8.x/facades.md:119
#, no-wrap
msgid ""
"    /**\n"
"     * A basic functional test example.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function testBasicExample()\n"
"    {\n"
"        Cache::shouldReceive('get')\n"
"             ->with('key')\n"
"             ->andReturn('value');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:86 docs/8.x/facades.md:121
#, no-wrap
msgid "        $response = $this->get('/cache');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:89 docs/8.x/facades.md:124
#, no-wrap
msgid ""
"        $response->assertSee('value');\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:91
#, no-wrap
msgid "<a name=\"facades-vs-helper-functions\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/facades.md:91
#, no-wrap
msgid "Facades Vs. Helper Functions"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:94
msgid ""
"In addition to facades, Laravel includes a variety of \"helper\" functions "
"which can perform common tasks like generating views, firing events, "
"dispatching jobs, or sending HTTP responses. Many of these helper functions "
"perform the same function as a corresponding facade. For example, this "
"facade call and helper call are equivalent:"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:96
#, no-wrap
msgid "    return Illuminate\\Support\\Facades\\View::make('profile');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:98
#, no-wrap
msgid "    return view('profile');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:100
msgid ""
"There is absolutely no practical difference between facades and helper "
"functions. When using helper functions, you may still test them exactly as "
"you would the corresponding facade. For example, given the following route:"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:104
#, no-wrap
msgid ""
"    Route::get('/cache', function () {\n"
"        return cache('key');\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:106
msgid ""
"Under the hood, the `cache` helper is going to call the `get` method on the "
"class underlying the `Cache` facade. So, even though we are using the helper "
"function, we can write the following test to verify that the method was "
"called with the argument we expected:"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:126
#, no-wrap
msgid "<a name=\"how-facades-work\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/facades.md:126
#, no-wrap
msgid "How Facades Work"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:129
msgid ""
"In a Laravel application, a facade is a class that provides access to an "
"object from the container. The machinery that makes this work is in the "
"`Facade` class. Laravel's facades, and any custom facades you create, will "
"extend the base `Illuminate\\Support\\Facades\\Facade` class."
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:131
msgid ""
"The `Facade` base class makes use of the `__callStatic()` magic-method to "
"defer calls from your facade to an object resolved from the container. In "
"the example below, a call is made to the Laravel cache system. By glancing "
"at this code, one might assume that the static `get` method is being called "
"on the `Cache` class:"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:133 docs/8.x/facades.md:177 docs/8.x/facades.md:202 docs/8.x/facades.md:226
#, no-wrap
msgid "    <?php\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:135
#, no-wrap
msgid "    namespace App\\Http\\Controllers;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:138
#, no-wrap
msgid ""
"    use App\\Http\\Controllers\\Controller;\n"
"    use Illuminate\\Support\\Facades\\Cache;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:150
#, no-wrap
msgid ""
"    class UserController extends Controller\n"
"    {\n"
"        /**\n"
"         * Show the profile for the given user.\n"
"         *\n"
"         * @param  int  $id\n"
"         * @return Response\n"
"         */\n"
"        public function showProfile($id)\n"
"        {\n"
"            $user = Cache::get('user:'.$id);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:154
#, no-wrap
msgid ""
"            return view('profile', ['user' => $user]);\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:156
msgid ""
"Notice that near the top of the file we are \"importing\" the `Cache` "
"facade. This facade serves as a proxy for accessing the underlying "
"implementation of the `Illuminate\\Contracts\\Cache\\Factory` interface. Any "
"calls we make using the facade will be passed to the underlying instance of "
"Laravel's cache service."
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:158
msgid ""
"If we look at that `Illuminate\\Support\\Facades\\Cache` class, you'll see "
"that there is no static method `get`:"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:168
#, no-wrap
msgid ""
"    class Cache extends Facade\n"
"    {\n"
"        /**\n"
"         * Get the registered name of the component.\n"
"         *\n"
"         * @return string\n"
"         */\n"
"        protected static function getFacadeAccessor() { return 'cache'; }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:170
msgid ""
"Instead, the `Cache` facade extends the base `Facade` class and defines the "
"method `getFacadeAccessor()`. This method's job is to return the name of a "
"service container binding. When a user references any static method on the "
"`Cache` facade, Laravel resolves the `cache` binding from the [service "
"container](/docs/{{version}}/container) and runs the requested method (in "
"this case, `get`) against that object."
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:172
#, no-wrap
msgid "<a name=\"real-time-facades\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/facades.md:172
#, no-wrap
msgid "Real-Time Facades"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:175
msgid ""
"Using real-time facades, you may treat any class in your application as if "
"it was a facade. To illustrate how this can be used, let's first examine "
"some code that does not use real-time facades. For example, let's assume our "
"`Podcast` model has a `publish` method. However, in order to publish the "
"podcast, we need to inject a `Publisher` instance:"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:179 docs/8.x/facades.md:204
#, no-wrap
msgid "    namespace App\\Models;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:182
#, no-wrap
msgid ""
"    use App\\Contracts\\Publisher;\n"
"    use Illuminate\\Database\\Eloquent\\Model;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:194
#, no-wrap
msgid ""
"    class Podcast extends Model\n"
"    {\n"
"        /**\n"
"         * Publish the podcast.\n"
"         *\n"
"         * @param  Publisher  $publisher\n"
"         * @return void\n"
"         */\n"
"        public function publish(Publisher $publisher)\n"
"        {\n"
"            $this->update(['publishing' => now()]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:198
#, no-wrap
msgid ""
"            $publisher->publish($this);\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:200
msgid ""
"Injecting a publisher implementation into the method allows us to easily "
"test the method in isolation since we can mock the injected "
"publisher. However, it requires us to always pass a publisher instance each "
"time we call the `publish` method. Using real-time facades, we can maintain "
"the same testability while not being required to explicitly pass a "
"`Publisher` instance. To generate a real-time facade, prefix the namespace "
"of the imported class with `Facades`:"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:207
#, no-wrap
msgid ""
"    use Facades\\App\\Contracts\\Publisher;\n"
"    use Illuminate\\Database\\Eloquent\\Model;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:218
#, no-wrap
msgid ""
"    class Podcast extends Model\n"
"    {\n"
"        /**\n"
"         * Publish the podcast.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function publish()\n"
"        {\n"
"            $this->update(['publishing' => now()]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:222
#, no-wrap
msgid ""
"            Publisher::publish($this);\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:224
msgid ""
"When the real-time facade is used, the publisher implementation will be "
"resolved out of the service container using the portion of the interface or "
"class name that appears after the `Facades` prefix. When testing, we can use "
"Laravel's built-in facade testing helpers to mock this method call:"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:228
#, no-wrap
msgid "    namespace Tests\\Feature;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:233
#, no-wrap
msgid ""
"    use App\\Models\\Podcast;\n"
"    use Facades\\App\\Contracts\\Publisher;\n"
"    use Illuminate\\Foundation\\Testing\\RefreshDatabase;\n"
"    use Tests\\TestCase;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:237
#, no-wrap
msgid ""
"    class PodcastTest extends TestCase\n"
"    {\n"
"        use RefreshDatabase;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:246
#, no-wrap
msgid ""
"        /**\n"
"         * A test example.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function test_podcast_can_be_published()\n"
"        {\n"
"            $podcast = Podcast::factory()->create();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:248
#, no-wrap
msgid "            Publisher::shouldReceive('publish')->once()->with($podcast);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:252
#, no-wrap
msgid ""
"            $podcast->publish();\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:254
#, no-wrap
msgid "<a name=\"facade-class-reference\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/facades.md:254
#, no-wrap
msgid "Facade Class Reference"
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:257
msgid ""
"Below you will find every facade and its underlying class. This is a useful "
"tool for quickly digging into the API documentation for a given facade "
"root. The [service container binding](/docs/{{version}}/container) key is "
"also included where applicable."
msgstr ""

#. type: Plain text
#: docs/8.x/facades.md:306
msgid ""
"Facade | Class | Service Container Binding ------------- | ------------- | "
"------------- App | "
"[Illuminate\\Foundation\\Application](https://laravel.com/api/{{version}}/Illuminate/Foundation/Application.html)  "
"| `app` Artisan | "
"[Illuminate\\Contracts\\Console\\Kernel](https://laravel.com/api/{{version}}/Illuminate/Contracts/Console/Kernel.html)  "
"| `artisan` Auth | "
"[Illuminate\\Auth\\AuthManager](https://laravel.com/api/{{version}}/Illuminate/Auth/AuthManager.html)  "
"| `auth` Auth (Instance)  | "
"[Illuminate\\Contracts\\Auth\\Guard](https://laravel.com/api/{{version}}/Illuminate/Contracts/Auth/Guard.html)  "
"| `auth.driver` Blade | "
"[Illuminate\\View\\Compilers\\BladeCompiler](https://laravel.com/api/{{version}}/Illuminate/View/Compilers/BladeCompiler.html)  "
"| `blade.compiler` Broadcast | "
"[Illuminate\\Contracts\\Broadcasting\\Factory](https://laravel.com/api/{{version}}/Illuminate/Contracts/Broadcasting/Factory.html)  "
"| &nbsp; Broadcast (Instance)  | "
"[Illuminate\\Contracts\\Broadcasting\\Broadcaster](https://laravel.com/api/{{version}}/Illuminate/Contracts/Broadcasting/Broadcaster.html)  "
"| &nbsp; Bus | "
"[Illuminate\\Contracts\\Bus\\Dispatcher](https://laravel.com/api/{{version}}/Illuminate/Contracts/Bus/Dispatcher.html)  "
"| &nbsp; Cache | "
"[Illuminate\\Cache\\CacheManager](https://laravel.com/api/{{version}}/Illuminate/Cache/CacheManager.html)  "
"| `cache` Cache (Instance)  | "
"[Illuminate\\Cache\\Repository](https://laravel.com/api/{{version}}/Illuminate/Cache/Repository.html)  "
"| `cache.store` Config | "
"[Illuminate\\Config\\Repository](https://laravel.com/api/{{version}}/Illuminate/Config/Repository.html)  "
"| `config` Cookie | "
"[Illuminate\\Cookie\\CookieJar](https://laravel.com/api/{{version}}/Illuminate/Cookie/CookieJar.html)  "
"| `cookie` Crypt | "
"[Illuminate\\Encryption\\Encrypter](https://laravel.com/api/{{version}}/Illuminate/Encryption/Encrypter.html)  "
"| `encrypter` Date | "
"[Illuminate\\Support\\DateFactory](https://laravel.com/api/{{version}}/Illuminate/Support/DateFactory.html)  "
"| `date` DB | "
"[Illuminate\\Database\\DatabaseManager](https://laravel.com/api/{{version}}/Illuminate/Database/DatabaseManager.html)  "
"| `db` DB (Instance)  | "
"[Illuminate\\Database\\Connection](https://laravel.com/api/{{version}}/Illuminate/Database/Connection.html)  "
"| `db.connection` Event | "
"[Illuminate\\Events\\Dispatcher](https://laravel.com/api/{{version}}/Illuminate/Events/Dispatcher.html)  "
"| `events` File | "
"[Illuminate\\Filesystem\\Filesystem](https://laravel.com/api/{{version}}/Illuminate/Filesystem/Filesystem.html)  "
"| `files` Gate | "
"[Illuminate\\Contracts\\Auth\\Access\\Gate](https://laravel.com/api/{{version}}/Illuminate/Contracts/Auth/Access/Gate.html)  "
"| &nbsp; Hash | "
"[Illuminate\\Contracts\\Hashing\\Hasher](https://laravel.com/api/{{version}}/Illuminate/Contracts/Hashing/Hasher.html)  "
"| `hash` Http | "
"[Illuminate\\Http\\Client\\Factory](https://laravel.com/api/{{version}}/Illuminate/Http/Client/Factory.html)  "
"| &nbsp; Lang | "
"[Illuminate\\Translation\\Translator](https://laravel.com/api/{{version}}/Illuminate/Translation/Translator.html)  "
"| `translator` Log | "
"[Illuminate\\Log\\LogManager](https://laravel.com/api/{{version}}/Illuminate/Log/LogManager.html)  "
"| `log` Mail | "
"[Illuminate\\Mail\\Mailer](https://laravel.com/api/{{version}}/Illuminate/Mail/Mailer.html)  "
"| `mailer` Notification | "
"[Illuminate\\Notifications\\ChannelManager](https://laravel.com/api/{{version}}/Illuminate/Notifications/ChannelManager.html)  "
"| &nbsp; Password | "
"[Illuminate\\Auth\\Passwords\\PasswordBrokerManager](https://laravel.com/api/{{version}}/Illuminate/Auth/Passwords/PasswordBrokerManager.html)  "
"| `auth.password` Password (Instance)  | "
"[Illuminate\\Auth\\Passwords\\PasswordBroker](https://laravel.com/api/{{version}}/Illuminate/Auth/Passwords/PasswordBroker.html)  "
"| `auth.password.broker` Queue | "
"[Illuminate\\Queue\\QueueManager](https://laravel.com/api/{{version}}/Illuminate/Queue/QueueManager.html)  "
"| `queue` Queue (Instance)  | "
"[Illuminate\\Contracts\\Queue\\Queue](https://laravel.com/api/{{version}}/Illuminate/Contracts/Queue/Queue.html)  "
"| `queue.connection` Queue (Base Class)  | "
"[Illuminate\\Queue\\Queue](https://laravel.com/api/{{version}}/Illuminate/Queue/Queue.html)  "
"| &nbsp; Redirect | "
"[Illuminate\\Routing\\Redirector](https://laravel.com/api/{{version}}/Illuminate/Routing/Redirector.html)  "
"| `redirect` Redis | "
"[Illuminate\\Redis\\RedisManager](https://laravel.com/api/{{version}}/Illuminate/Redis/RedisManager.html)  "
"| `redis` Redis (Instance)  | "
"[Illuminate\\Redis\\Connections\\Connection](https://laravel.com/api/{{version}}/Illuminate/Redis/Connections/Connection.html)  "
"| `redis.connection` Request | "
"[Illuminate\\Http\\Request](https://laravel.com/api/{{version}}/Illuminate/Http/Request.html)  "
"| `request` Response | "
"[Illuminate\\Contracts\\Routing\\ResponseFactory](https://laravel.com/api/{{version}}/Illuminate/Contracts/Routing/ResponseFactory.html)  "
"| &nbsp; Response (Instance)  | "
"[Illuminate\\Http\\Response](https://laravel.com/api/{{version}}/Illuminate/Http/Response.html)  "
"| &nbsp; Route | "
"[Illuminate\\Routing\\Router](https://laravel.com/api/{{version}}/Illuminate/Routing/Router.html)  "
"| `router` Schema | "
"[Illuminate\\Database\\Schema\\Builder](https://laravel.com/api/{{version}}/Illuminate/Database/Schema/Builder.html)  "
"| &nbsp; Session | "
"[Illuminate\\Session\\SessionManager](https://laravel.com/api/{{version}}/Illuminate/Session/SessionManager.html)  "
"| `session` Session (Instance)  | "
"[Illuminate\\Session\\Store](https://laravel.com/api/{{version}}/Illuminate/Session/Store.html)  "
"| `session.store` Storage | "
"[Illuminate\\Filesystem\\FilesystemManager](https://laravel.com/api/{{version}}/Illuminate/Filesystem/FilesystemManager.html)  "
"| `filesystem` Storage (Instance)  | "
"[Illuminate\\Contracts\\Filesystem\\Filesystem](https://laravel.com/api/{{version}}/Illuminate/Contracts/Filesystem/Filesystem.html)  "
"| `filesystem.disk` URL | "
"[Illuminate\\Routing\\UrlGenerator](https://laravel.com/api/{{version}}/Illuminate/Routing/UrlGenerator.html)  "
"| `url` Validator | "
"[Illuminate\\Validation\\Factory](https://laravel.com/api/{{version}}/Illuminate/Validation/Factory.html)  "
"| `validator` Validator (Instance)  | "
"[Illuminate\\Validation\\Validator](https://laravel.com/api/{{version}}/Illuminate/Validation/Validator.html)  "
"| &nbsp; View | "
"[Illuminate\\View\\Factory](https://laravel.com/api/{{version}}/Illuminate/View/Factory.html)  "
"| `view` View (Instance)  | "
"[Illuminate\\View\\View](https://laravel.com/api/{{version}}/Illuminate/View/View.html)  "
"| &nbsp;"
msgstr ""
