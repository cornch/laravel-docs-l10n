# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Taylor Otwell
# This file is distributed under the same license as the Laravel Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2022-01-21 20:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title #
#: docs/8.x/deployment.md:1
#, no-wrap
msgid "Deployment"
msgstr ""

#. type: Bullet: '- '
#: docs/8.x/deployment.md:14
msgid "[Introduction](#introduction)"
msgstr ""

#. type: Bullet: '- '
#: docs/8.x/deployment.md:14
msgid "[Server Requirements](#server-requirements)"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:14
#, no-wrap
msgid ""
"- [Server Configuration](#server-configuration)\n"
"    - [Nginx](#nginx)\n"
"- [Optimization](#optimization)\n"
"    - [Autoloader Optimization](#autoloader-optimization)\n"
"    - [Optimizing Configuration "
"Loading](#optimizing-configuration-loading)\n"
"    - [Optimizing Route Loading](#optimizing-route-loading)\n"
"    - [Optimizing View Loading](#optimizing-view-loading)\n"
"- [Debug Mode](#debug-mode)\n"
"- [Deploying With Forge / Vapor](#deploying-with-forge-or-vapor)\n"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:16
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/deployment.md:16
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:19
msgid ""
"When you're ready to deploy your Laravel application to production, there "
"are some important things you can do to make sure your application is "
"running as efficiently as possible. In this document, we'll cover some great "
"starting points for making sure your Laravel application is deployed "
"properly."
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:21
#, no-wrap
msgid "<a name=\"server-requirements\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/deployment.md:21
#, no-wrap
msgid "Server Requirements"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:24
msgid ""
"The Laravel framework has a few system requirements. You should ensure that "
"your web server has the following minimum PHP version and extensions:"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:37
#, no-wrap
msgid ""
"<div class=\"content-list\" markdown=\"1\">\n"
"- PHP >= 7.3\n"
"- BCMath PHP Extension\n"
"- Ctype PHP Extension\n"
"- Fileinfo PHP Extension\n"
"- JSON PHP Extension\n"
"- Mbstring PHP Extension\n"
"- OpenSSL PHP Extension\n"
"- PDO PHP Extension\n"
"- Tokenizer PHP Extension\n"
"- XML PHP Extension\n"
"</div>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:39
#, no-wrap
msgid "<a name=\"server-configuration\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/deployment.md:39
#, no-wrap
msgid "Server Configuration"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:42
#, no-wrap
msgid "<a name=\"nginx\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/deployment.md:42
#, no-wrap
msgid "Nginx"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:45
msgid ""
"If you are deploying your application to a server that is running Nginx, you "
"may use the following configuration file as a starting point for configuring "
"your web server. Most likely, this file will need to be customized depending "
"on your server's configuration. **If you would like assistance in managing "
"your server, consider using a first-party Laravel server management and "
"deployment service such as [Laravel Forge](https://forge.laravel.com).**"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:47
msgid ""
"Please ensure, like the configuration below, your web server directs all "
"requests to your application's `public/index.php` file. You should never "
"attempt to move the `index.php` file to your project's root, as serving the "
"application from the project root will expose many sensitive configuration "
"files to the public Internet:"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:53
#, no-wrap
msgid ""
"    server {\n"
"        listen 80;\n"
"        listen [::]:80;\n"
"        server_name example.com;\n"
"        root /srv/example.com/public;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:56
#, no-wrap
msgid ""
"        add_header X-Frame-Options \"SAMEORIGIN\";\n"
"        add_header X-Content-Type-Options \"nosniff\";\n"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:58
#, no-wrap
msgid "        index index.php;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:60
#, no-wrap
msgid "        charset utf-8;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:64
#, no-wrap
msgid ""
"        location / {\n"
"            try_files $uri $uri/ /index.php?$query_string;\n"
"        }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:67
#, no-wrap
msgid ""
"        location = /favicon.ico { access_log off; log_not_found off; }\n"
"        location = /robots.txt  { access_log off; log_not_found off; }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:69
#, no-wrap
msgid "        error_page 404 /index.php;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:75
#, no-wrap
msgid ""
"        location ~ \\.php$ {\n"
"            fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;\n"
"            fastcgi_param SCRIPT_FILENAME "
"$realpath_root$fastcgi_script_name;\n"
"            include fastcgi_params;\n"
"        }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:80
#, no-wrap
msgid ""
"        location ~ /\\.(?!well-known).* {\n"
"            deny all;\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:82
#, no-wrap
msgid "<a name=\"optimization\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/deployment.md:82
#, no-wrap
msgid "Optimization"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:85
#, no-wrap
msgid "<a name=\"autoloader-optimization\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/deployment.md:85
#, no-wrap
msgid "Autoloader Optimization"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:88
msgid ""
"When deploying to production, make sure that you are optimizing Composer's "
"class autoloader map so Composer can quickly find the proper file to load "
"for a given class:"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:90
#, no-wrap
msgid "    composer install --optimize-autoloader --no-dev\n"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:92
#, no-wrap
msgid ""
"> {tip} In addition to optimizing the autoloader, you should always be sure "
"to include a `composer.lock` file in your project's source control "
"repository. Your project's dependencies can be installed much faster when a "
"`composer.lock` file is present.\n"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:94
#, no-wrap
msgid "<a name=\"optimizing-configuration-loading\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/deployment.md:94
#, no-wrap
msgid "Optimizing Configuration Loading"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:97
msgid ""
"When deploying your application to production, you should make sure that you "
"run the `config:cache` Artisan command during your deployment process:"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:99
#, no-wrap
msgid "    php artisan config:cache\n"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:101
msgid ""
"This command will combine all of Laravel's configuration files into a "
"single, cached file, which greatly reduces the number of trips the framework "
"must make to the filesystem when loading your configuration values."
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:103
#, no-wrap
msgid ""
"> {note} If you execute the `config:cache` command during your deployment "
"process, you should be sure that you are only calling the `env` function "
"from within your configuration files. Once the configuration has been "
"cached, the `.env` file will not be loaded and all calls to the `env` "
"function for `.env` variables will return `null`.\n"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:105
#, no-wrap
msgid "<a name=\"optimizing-route-loading\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/deployment.md:105
#, no-wrap
msgid "Optimizing Route Loading"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:108
msgid ""
"If you are building a large application with many routes, you should make "
"sure that you are running the `route:cache` Artisan command during your "
"deployment process:"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:110
#, no-wrap
msgid "    php artisan route:cache\n"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:112
msgid ""
"This command reduces all of your route registrations into a single method "
"call within a cached file, improving the performance of route registration "
"when registering hundreds of routes."
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:114
#, no-wrap
msgid "<a name=\"optimizing-view-loading\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/deployment.md:114
#, no-wrap
msgid "Optimizing View Loading"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:117
msgid ""
"When deploying your application to production, you should make sure that you "
"run the `view:cache` Artisan command during your deployment process:"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:119
#, no-wrap
msgid "    php artisan view:cache\n"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:121
msgid ""
"This command precompiles all your Blade views so they are not compiled on "
"demand, improving the performance of each request that returns a view."
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:123
#, no-wrap
msgid "<a name=\"debug-mode\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/deployment.md:123
#, no-wrap
msgid "Debug Mode"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:126
msgid ""
"The debug option in your config/app.php configuration file determines how "
"much information about an error is actually displayed to the user. By "
"default, this option is set to respect the value of the APP_DEBUG "
"environment variable, which is stored in your .env file."
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:128
#, no-wrap
msgid ""
"**In your production environment, this value should always be `false`. If "
"the `APP_DEBUG` variable is set to `true` in production, you risk exposing "
"sensitive configuration values to your application's end users.**\n"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:130
#, no-wrap
msgid "<a name=\"deploying-with-forge-or-vapor\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/deployment.md:130
#, no-wrap
msgid "Deploying With Forge / Vapor"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:133
#, no-wrap
msgid "<a name=\"laravel-forge\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/deployment.md:133
#, no-wrap
msgid "Laravel Forge"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:136
msgid ""
"If you aren't quite ready to manage your own server configuration or aren't "
"comfortable configuring all of the various services needed to run a robust "
"Laravel application, [Laravel Forge](https://forge.laravel.com) is a "
"wonderful alternative."
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:138
msgid ""
"Laravel Forge can create servers on various infrastructure providers such as "
"DigitalOcean, Linode, AWS, and more. In addition, Forge installs and manages "
"all of the tools needed to build robust Laravel applications, such as Nginx, "
"MySQL, Redis, Memcached, Beanstalk, and more."
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:140
#, no-wrap
msgid "<a name=\"laravel-vapor\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/deployment.md:140
#, no-wrap
msgid "Laravel Vapor"
msgstr ""

#. type: Plain text
#: docs/8.x/deployment.md:142
msgid ""
"If you would like a totally serverless, auto-scaling deployment platform "
"tuned for Laravel, check out [Laravel "
"Vapor](https://vapor.laravel.com). Laravel Vapor is a serverless deployment "
"platform for Laravel, powered by AWS. Launch your Laravel infrastructure on "
"Vapor and fall in love with the scalable simplicity of serverless. Laravel "
"Vapor is fine-tuned by Laravel's creators to work seamlessly with the "
"framework so you can keep writing your Laravel applications exactly like "
"you're used to."
msgstr ""
