msgid ""
msgstr ""
"Content-Type: text/plain; charset=UTF-8\n"
"Language: zh_TW\n"
"Language-Team: Chinese Traditional\n"
"PO-Revision-Date: 2023-02-11 10:27\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Project-Id-Version: laravel-docs\n"
"X-Crowdin-File: /main/templates/eloquent-collections.pot\n"
"X-Crowdin-File-ID: 51\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"

#: ./docs/8.x/eloquent-collections.md:1
#: ./docs/9.x/eloquent-collections.md:1
#: ./docs/10.x/eloquent-collections.md:1
#: ./docs/11.x/eloquent-collections.md:1
#: ./docs/master/eloquent-collections.md:1
msgctxt "H1"
msgid "Eloquent: Collections"
msgstr "Eloquent：Collection"

#: ./docs/8.x/eloquent-collections.md:3
#: ./docs/9.x/eloquent-collections.md:3
#: ./docs/10.x/eloquent-collections.md:3
#: ./docs/11.x/eloquent-collections.md:3
#: ./docs/master/eloquent-collections.md:3
msgctxt "P"
msgid "[Introduction](#introduction)"
msgstr "[簡介](#introduction)"

#: ./docs/8.x/eloquent-collections.md:4
#: ./docs/9.x/eloquent-collections.md:4
#: ./docs/10.x/eloquent-collections.md:4
#: ./docs/11.x/eloquent-collections.md:4
#: ./docs/master/eloquent-collections.md:4
msgctxt "P"
msgid "[Available Methods](#available-methods)"
msgstr "[可用方法](#available-methods)"

#: ./docs/8.x/eloquent-collections.md:5
#: ./docs/9.x/eloquent-collections.md:5
#: ./docs/10.x/eloquent-collections.md:5
#: ./docs/11.x/eloquent-collections.md:5
#: ./docs/master/eloquent-collections.md:5
msgctxt "P"
msgid "[Custom Collections](#custom-collections)"
msgstr "[自訂 Collections](#custom-collections)"

#: ./docs/8.x/eloquent-collections.md:7
#: ./docs/9.x/eloquent-collections.md:7
#: ./docs/10.x/eloquent-collections.md:7
#: ./docs/11.x/eloquent-collections.md:7
#: ./docs/master/eloquent-collections.md:7
#~ msgctxt "P"
#~ msgid "<a name=\"introduction\"></a>"
#~ msgstr ""

#: ./docs/8.x/eloquent-collections.md:8
#: ./docs/9.x/eloquent-collections.md:8
#: ./docs/10.x/eloquent-collections.md:8
#: ./docs/11.x/eloquent-collections.md:8
#: ./docs/master/eloquent-collections.md:8
msgctxt "H2"
msgid "Introduction"
msgstr "簡介"

#: ./docs/8.x/eloquent-collections.md:10
#: ./docs/9.x/eloquent-collections.md:10
#: ./docs/10.x/eloquent-collections.md:10
#: ./docs/11.x/eloquent-collections.md:10
#: ./docs/master/eloquent-collections.md:10
msgctxt "P"
msgid "All Eloquent methods that return more than one model result will return instances of the `Illuminate\\Database\\Eloquent\\Collection` class, including results retrieved via the `get` method or accessed via a relationship. The Eloquent collection object extends Laravel's [base collection](/docs/{{version}}/collections), so it naturally inherits dozens of methods used to fluently work with the underlying array of Eloquent models. Be sure to review the Laravel collection documentation to learn all about these helpful methods!"
msgstr "Eloquent 中，所有回傳多筆 Model 結果的方法都會回傳 `Illuminate\\Database\\Eloquent\\Collection` 的實體，這些方法包含 `get` 方法或是以關聯進行存取時。Eloquent Collection 物件繼承自 Laravel 的[基礎 Collection](/docs/{{version}}/collections)，因此，這些 Collection 也自然繼承了數十種可用來流暢地操作底層 Eloquent Model 陣列的方法。記得看看 Laravel Collection 說明文件來了解這些實用的方法！"

#: ./docs/8.x/eloquent-collections.md:12
#: ./docs/9.x/eloquent-collections.md:12
#: ./docs/10.x/eloquent-collections.md:12
#: ./docs/11.x/eloquent-collections.md:12
#: ./docs/master/eloquent-collections.md:12
msgctxt "P"
msgid "All collections also serve as iterators, allowing you to loop over them as if they were simple PHP arrays:"
msgstr "所有的 Collection 也可作為迭代器使用，因此你可以很輕鬆地像迭代一般 PHP 陣列一樣迭代這些 Collection："

#: ./docs/8.x/eloquent-collections.md:14
#: ./docs/9.x/eloquent-collections.md:14
#: ./docs/10.x/eloquent-collections.md:14
#: ./docs/11.x/eloquent-collections.md:14
#: ./docs/master/eloquent-collections.md:14
msgctxt "CODE"
msgid ""
"use App\\Models\\User;\n"
"\n"
"$users = User::where('active', 1)->get();\n"
"\n"
"foreach ($users as $user) {\n"
"    echo $user->name;\n"
"}"
msgstr ""

#: ./docs/8.x/eloquent-collections.md:22
#: ./docs/9.x/eloquent-collections.md:22
#: ./docs/10.x/eloquent-collections.md:22
#: ./docs/11.x/eloquent-collections.md:22
#: ./docs/master/eloquent-collections.md:22
msgctxt "P"
msgid "However, as previously mentioned, collections are much more powerful than arrays and expose a variety of map / reduce operations that may be chained using an intuitive interface. For example, we may remove all inactive models and then gather the first name for each remaining user:"
msgstr "不過，剛才也提到過，Collection 比起陣列來說多了很多更強大的功能。而且，Collection 也提供了多種可通過直觀介面串連使用的各個 map / reduce 操作。舉例來說，我們可以將所有非啟用狀態的 Model 移除，並取得剩餘使用者的名字："

#: ./docs/10.x/eloquent-collections.md:24
#: ./docs/11.x/eloquent-collections.md:24
#: ./docs/master/eloquent-collections.md:24
msgctxt "CODE"
msgid ""
"$names = User::all()->reject(function (User $user) {\n"
"    return $user->active === false;\n"
"})->map(function (User $user) {\n"
"    return $user->name;\n"
"});"
msgstr ""

#: ./docs/8.x/eloquent-collections.md:24
#: ./docs/9.x/eloquent-collections.md:24
msgctxt "CODE"
msgid ""
"$names = User::all()->reject(function ($user) {\n"
"    return $user->active === false;\n"
"})->map(function ($user) {\n"
"    return $user->name;\n"
"});"
msgstr ""

#: ./docs/8.x/eloquent-collections.md:30
#: ./docs/9.x/eloquent-collections.md:30
#: ./docs/10.x/eloquent-collections.md:30
#: ./docs/11.x/eloquent-collections.md:30
#: ./docs/master/eloquent-collections.md:30
#~ msgctxt "P"
#~ msgid "<a name=\"eloquent-collection-conversion\"></a>"
#~ msgstr ""

#: ./docs/8.x/eloquent-collections.md:31
#: ./docs/9.x/eloquent-collections.md:31
#: ./docs/10.x/eloquent-collections.md:31
#: ./docs/11.x/eloquent-collections.md:31
#: ./docs/master/eloquent-collections.md:31
msgctxt "H4"
msgid "Eloquent Collection Conversion"
msgstr "Eloquent Collection 轉換"

#: ./docs/8.x/eloquent-collections.md:33
#: ./docs/9.x/eloquent-collections.md:33
#: ./docs/10.x/eloquent-collections.md:33
#: ./docs/11.x/eloquent-collections.md:33
#: ./docs/master/eloquent-collections.md:33
msgctxt "P"
msgid "While most Eloquent collection methods return a new instance of an Eloquent collection, the `collapse`, `flatten`, `flip`, `keys`, `pluck`, and `zip` methods return a [base collection](/docs/{{version}}/collections) instance. Likewise, if a `map` operation returns a collection that does not contain any Eloquent models, it will be converted to a base collection instance."
msgstr "雖然大多數的 Eloquent Collection 方法都會回傳新的 Eloquent Collection 實體，但 `collapse`, `flatten`, `flip`, `keys`, `pluck`, 與 `zip` 方法都會回傳[基礎 collection](/docs/{{version}}/collections)實體。同樣地，若 `map` 操作回傳不包含任何 Eloquent Model 的實體，則會回傳基礎 Collection 實體。"

#: ./docs/8.x/eloquent-collections.md:35
#: ./docs/9.x/eloquent-collections.md:35
#: ./docs/10.x/eloquent-collections.md:35
#: ./docs/11.x/eloquent-collections.md:35
#: ./docs/master/eloquent-collections.md:35
#~ msgctxt "P"
#~ msgid "<a name=\"available-methods\"></a>"
#~ msgstr ""

#: ./docs/8.x/eloquent-collections.md:36
#: ./docs/9.x/eloquent-collections.md:36
#: ./docs/10.x/eloquent-collections.md:36
#: ./docs/11.x/eloquent-collections.md:36
#: ./docs/master/eloquent-collections.md:36
msgctxt "H2"
msgid "Available Methods"
msgstr "可用方法"

#: ./docs/8.x/eloquent-collections.md:38
#: ./docs/9.x/eloquent-collections.md:38
#: ./docs/10.x/eloquent-collections.md:38
#: ./docs/11.x/eloquent-collections.md:38
#: ./docs/master/eloquent-collections.md:38
msgctxt "P"
msgid "All Eloquent collections extend the base [Laravel collection](/docs/{{version}}/collections#available-methods) object; therefore, they inherit all of the powerful methods provided by the base collection class."
msgstr "所有的 Eloquent Collection 都繼承自基礎  [Laravel Collection](/docs/{{version}}/collections#available-methods) 物件。因此，這些 Collection 都繼承了基礎 Collection 類別所提供的所有強大方法。"

#: ./docs/8.x/eloquent-collections.md:40
#: ./docs/9.x/eloquent-collections.md:40
#: ./docs/10.x/eloquent-collections.md:40
#: ./docs/11.x/eloquent-collections.md:40
#: ./docs/master/eloquent-collections.md:40
msgctxt "P"
msgid "In addition, the `Illuminate\\Database\\Eloquent\\Collection` class provides a superset of methods to aid with managing your model collections. Most methods return `Illuminate\\Database\\Eloquent\\Collection` instances; however, some methods, like `modelKeys`, return an `Illuminate\\Support\\Collection` instance."
msgstr "除此之外，`Illuminate\\Database\\Eloquent\\Collection` 類別還提供了一組可用來處理 Model Collection 的方法。大多數的方法都會回傳 `Illuminate\\Database\\Eloquent\\Collection` 實體。不過，有些如 `modelKeys` 之類的方法則會回傳 `Illuminate\\Support\\Collection` 實體。"

#: ./docs/8.x/eloquent-collections.md:63
msgctxt "P"
msgid ""
"[contains](#method-contains)\n"
"[diff](#method-diff)\n"
"[except](#method-except)\n"
"[find](#method-find)\n"
"[fresh](#method-fresh)\n"
"[intersect](#method-intersect)\n"
"[load](#method-load)\n"
"[loadMissing](#method-loadMissing)\n"
"[modelKeys](#method-modelKeys)\n"
"[makeVisible](#method-makeVisible)\n"
"[makeHidden](#method-makeHidden)\n"
"[only](#method-only)\n"
"[toQuery](#method-toquery)\n"
"[unique](#method-unique)"
msgstr ""

#: ./docs/11.x/eloquent-collections.md:65
msgctxt "P"
msgid ""
"[append](#method-append)\n"
"[contains](#method-contains)\n"
"[diff](#method-diff)\n"
"[except](#method-except)\n"
"[find](#method-find)\n"
"[findOrFail](#method-find-or-fail)\n"
"[fresh](#method-fresh)\n"
"[intersect](#method-intersect)\n"
"[load](#method-load)\n"
"[loadMissing](#method-loadMissing)\n"
"[modelKeys](#method-modelKeys)\n"
"[makeVisible](#method-makeVisible)\n"
"[makeHidden](#method-makeHidden)\n"
"[only](#method-only)\n"
"[setVisible](#method-setVisible)\n"
"[setHidden](#method-setHidden)\n"
"[toQuery](#method-toquery)\n"
"[unique](#method-unique)"
msgstr ""

#: ./docs/9.x/eloquent-collections.md:65
#: ./docs/10.x/eloquent-collections.md:65
#: ./docs/master/eloquent-collections.md:65
msgctxt "P"
msgid ""
"[append](#method-append)\n"
"[contains](#method-contains)\n"
"[diff](#method-diff)\n"
"[except](#method-except)\n"
"[find](#method-find)\n"
"[fresh](#method-fresh)\n"
"[intersect](#method-intersect)\n"
"[load](#method-load)\n"
"[loadMissing](#method-loadMissing)\n"
"[modelKeys](#method-modelKeys)\n"
"[makeVisible](#method-makeVisible)\n"
"[makeHidden](#method-makeHidden)\n"
"[only](#method-only)\n"
"[setVisible](#method-setVisible)\n"
"[setHidden](#method-setHidden)\n"
"[toQuery](#method-toquery)\n"
"[unique](#method-unique)"
msgstr ""

#: ./docs/8.x/eloquent-collections.md:80
#: ./docs/9.x/eloquent-collections.md:94
#: ./docs/10.x/eloquent-collections.md:94
#: ./docs/11.x/eloquent-collections.md:95
#: ./docs/master/eloquent-collections.md:94
#~ msgctxt "P"
#~ msgid "<a name=\"method-contains\"></a>"
#~ msgstr ""

#: ./docs/8.x/eloquent-collections.md:81
msgctxt "H4"
msgid "`contains($key, $operator = null, $value = null)` {.collection-method .first-collection-method}"
msgstr "`contains($key, $operator = null, $value = null)` {.collection-method .first-collection-method}"

#: ./docs/8.x/eloquent-collections.md:83
#: ./docs/9.x/eloquent-collections.md:97
#: ./docs/10.x/eloquent-collections.md:97
#: ./docs/11.x/eloquent-collections.md:98
#: ./docs/master/eloquent-collections.md:97
msgctxt "P"
msgid "The `contains` method may be used to determine if a given model instance is contained by the collection. This method accepts a primary key or a model instance:"
msgstr "`contains` 方法可用來判斷給定的 Model 實體是否包含在該 Collection 內。該方法可接受主鍵 (Primary Key) 或 Model 實體："

#: ./docs/8.x/eloquent-collections.md:85
#: ./docs/9.x/eloquent-collections.md:99
#: ./docs/10.x/eloquent-collections.md:99
#: ./docs/11.x/eloquent-collections.md:100
#: ./docs/master/eloquent-collections.md:99
msgctxt "CODE"
msgid ""
"$users->contains(1);\n"
"\n"
"$users->contains(User::find(1));"
msgstr ""

#: ./docs/9.x/eloquent-collections.md:85
#: ./docs/10.x/eloquent-collections.md:85
#: ./docs/11.x/eloquent-collections.md:86
#: ./docs/master/eloquent-collections.md:85
#~ msgctxt "P"
#~ msgid "<a name=\"method-append\"></a>"
#~ msgstr ""

#: ./docs/9.x/eloquent-collections.md:86
#: ./docs/10.x/eloquent-collections.md:86
#: ./docs/11.x/eloquent-collections.md:87
#: ./docs/master/eloquent-collections.md:86
msgctxt "H4"
msgid "`append($attributes)` {.collection-method .first-collection-method}"
msgstr "`append($attributes)` {.collection-method .first-collection-method}"

#: ./docs/9.x/eloquent-collections.md:88
#: ./docs/10.x/eloquent-collections.md:88
#: ./docs/11.x/eloquent-collections.md:89
#: ./docs/master/eloquent-collections.md:88
msgctxt "P"
msgid "The `append` method may be used to indicate that an attribute should be [appended](/docs/{{version}}/eloquent-serialization#appending-values-to-json) for every model in the collection. This method accepts an array of attributes or a single attribute:"
msgstr "`append` 方法可用來表示某個屬性應被[附加](/docs/{{version}}/eloquent-serialization#appending-values-to-json)到該 Collection 中的每個 Model 上。可傳入一組屬性陣列或單一屬性給該方法："

#: ./docs/8.x/eloquent-collections.md:89
#: ./docs/9.x/eloquent-collections.md:103
#: ./docs/10.x/eloquent-collections.md:103
#: ./docs/11.x/eloquent-collections.md:104
#: ./docs/master/eloquent-collections.md:103
#~ msgctxt "P"
#~ msgid "<a name=\"method-diff\"></a>"
#~ msgstr ""

#: ./docs/8.x/eloquent-collections.md:90
#: ./docs/9.x/eloquent-collections.md:104
#: ./docs/10.x/eloquent-collections.md:104
#: ./docs/11.x/eloquent-collections.md:105
#: ./docs/master/eloquent-collections.md:104
msgctxt "H4"
msgid "`diff($items)` {.collection-method}"
msgstr "`diff($items)` {.collection-method}"

#: ./docs/9.x/eloquent-collections.md:90
#: ./docs/10.x/eloquent-collections.md:90
#: ./docs/11.x/eloquent-collections.md:91
#: ./docs/master/eloquent-collections.md:90
msgctxt "CODE"
msgid ""
"$users->append('team');\n"
"\n"
"$users->append(['team', 'is_admin']);"
msgstr ""

#: ./docs/8.x/eloquent-collections.md:92
#: ./docs/9.x/eloquent-collections.md:106
#: ./docs/10.x/eloquent-collections.md:106
#: ./docs/11.x/eloquent-collections.md:107
#: ./docs/master/eloquent-collections.md:106
msgctxt "P"
msgid "The `diff` method returns all of the models that are not present in the given collection:"
msgstr "`diff` 方法會回傳所有不存在給定 Collection 中的所有 Model："

#: ./docs/8.x/eloquent-collections.md:94
#: ./docs/9.x/eloquent-collections.md:108
#: ./docs/10.x/eloquent-collections.md:108
#: ./docs/11.x/eloquent-collections.md:109
#: ./docs/master/eloquent-collections.md:108
msgctxt "CODE"
msgid ""
"use App\\Models\\User;\n"
"\n"
"$users = $users->diff(User::whereIn('id', [1, 2, 3])->get());"
msgstr ""

#: ./docs/9.x/eloquent-collections.md:95
#: ./docs/10.x/eloquent-collections.md:95
#: ./docs/11.x/eloquent-collections.md:96
#: ./docs/master/eloquent-collections.md:95
msgctxt "H4"
msgid "`contains($key, $operator = null, $value = null)` {.collection-method}"
msgstr "`contains($key, $operator = null, $value = null)` {.collection-method}"

#: ./docs/8.x/eloquent-collections.md:98
#: ./docs/9.x/eloquent-collections.md:112
#: ./docs/10.x/eloquent-collections.md:112
#: ./docs/11.x/eloquent-collections.md:113
#: ./docs/master/eloquent-collections.md:112
#~ msgctxt "P"
#~ msgid "<a name=\"method-except\"></a>"
#~ msgstr ""

#: ./docs/8.x/eloquent-collections.md:99
#: ./docs/9.x/eloquent-collections.md:113
#: ./docs/10.x/eloquent-collections.md:113
#: ./docs/11.x/eloquent-collections.md:114
#: ./docs/master/eloquent-collections.md:113
msgctxt "H4"
msgid "`except($keys)` {.collection-method}"
msgstr "`except($keys)` {.collection-method}"

#: ./docs/8.x/eloquent-collections.md:101
#: ./docs/9.x/eloquent-collections.md:115
#: ./docs/10.x/eloquent-collections.md:115
#: ./docs/11.x/eloquent-collections.md:116
#: ./docs/master/eloquent-collections.md:115
msgctxt "P"
msgid "The `except` method returns all of the models that do not have the given primary keys:"
msgstr "`except` 方法會回傳沒有給定主鍵的所有 Model："

#: ./docs/8.x/eloquent-collections.md:103
#: ./docs/9.x/eloquent-collections.md:117
#: ./docs/10.x/eloquent-collections.md:117
#: ./docs/11.x/eloquent-collections.md:118
#: ./docs/master/eloquent-collections.md:117
msgctxt "CODE"
msgid "$users = $users->except([1, 2, 3]);"
msgstr ""

#: ./docs/8.x/eloquent-collections.md:105
#: ./docs/9.x/eloquent-collections.md:119
#: ./docs/10.x/eloquent-collections.md:119
#: ./docs/11.x/eloquent-collections.md:120
#: ./docs/master/eloquent-collections.md:119
#~ msgctxt "P"
#~ msgid "<a name=\"method-find\"></a>"
#~ msgstr ""

#: ./docs/8.x/eloquent-collections.md:106
#: ./docs/9.x/eloquent-collections.md:120
#: ./docs/10.x/eloquent-collections.md:120
#: ./docs/11.x/eloquent-collections.md:121
#: ./docs/master/eloquent-collections.md:120
msgctxt "H4"
msgid "`find($key)` {.collection-method}"
msgstr "`find($key)` {.collection-method}"

#: ./docs/8.x/eloquent-collections.md:108
#: ./docs/9.x/eloquent-collections.md:122
#: ./docs/10.x/eloquent-collections.md:122
#: ./docs/11.x/eloquent-collections.md:123
#: ./docs/master/eloquent-collections.md:122
msgctxt "P"
msgid "The `find` method returns the model that has a primary key matching the given key. If `$key` is a model instance, `find` will attempt to return a model matching the primary key. If `$key` is an array of keys, `find` will return all models which have a primary key in the given array:"
msgstr "`find` 方法會回傳主鍵符合給定索引鍵的 Model。若 `$key` 為 Model 實體，則 `find` 會嘗試回傳符合該主鍵的 Model。若 `$key` 為一組索引鍵的陣列，則 `find` 會回傳所有主鍵包含在給定陣列中的 Model："

#: ./docs/8.x/eloquent-collections.md:110
#: ./docs/9.x/eloquent-collections.md:124
#: ./docs/10.x/eloquent-collections.md:124
#: ./docs/11.x/eloquent-collections.md:125
#: ./docs/master/eloquent-collections.md:124
msgctxt "CODE"
msgid ""
"$users = User::all();\n"
"\n"
"$user = $users->find(1);"
msgstr ""

#: ./docs/8.x/eloquent-collections.md:114
#: ./docs/9.x/eloquent-collections.md:128
#: ./docs/10.x/eloquent-collections.md:128
#: ./docs/11.x/eloquent-collections.md:138
#: ./docs/master/eloquent-collections.md:128
#~ msgctxt "P"
#~ msgid "<a name=\"method-fresh\"></a>"
#~ msgstr ""

#: ./docs/8.x/eloquent-collections.md:115
#: ./docs/9.x/eloquent-collections.md:129
#: ./docs/10.x/eloquent-collections.md:129
#: ./docs/11.x/eloquent-collections.md:139
#: ./docs/master/eloquent-collections.md:129
msgctxt "H4"
msgid "`fresh($with = [])` {.collection-method}"
msgstr "`fresh($with = [])` {.collection-method}"

#: ./docs/8.x/eloquent-collections.md:117
#: ./docs/9.x/eloquent-collections.md:131
#: ./docs/10.x/eloquent-collections.md:131
#: ./docs/11.x/eloquent-collections.md:141
#: ./docs/master/eloquent-collections.md:131
msgctxt "P"
msgid "The `fresh` method retrieves a fresh instance of each model in the collection from the database. In addition, any specified relationships will be eager loaded:"
msgstr "`fresh` 方法會從資料庫中取得該 Collection 中各個 Model 的最新實體 (Fresh Instance)。此外，若有指定關聯，則會積極式載入 (Eager Loading) 這些關聯："

#: ./docs/8.x/eloquent-collections.md:119
#: ./docs/9.x/eloquent-collections.md:133
#: ./docs/10.x/eloquent-collections.md:133
#: ./docs/11.x/eloquent-collections.md:143
#: ./docs/master/eloquent-collections.md:133
msgctxt "CODE"
msgid ""
"$users = $users->fresh();\n"
"\n"
"$users = $users->fresh('comments');"
msgstr ""

#: ./docs/8.x/eloquent-collections.md:123
#: ./docs/9.x/eloquent-collections.md:137
#: ./docs/10.x/eloquent-collections.md:137
#: ./docs/11.x/eloquent-collections.md:147
#: ./docs/master/eloquent-collections.md:137
#~ msgctxt "P"
#~ msgid "<a name=\"method-intersect\"></a>"
#~ msgstr ""

#: ./docs/8.x/eloquent-collections.md:124
#: ./docs/9.x/eloquent-collections.md:138
#: ./docs/10.x/eloquent-collections.md:138
#: ./docs/11.x/eloquent-collections.md:148
#: ./docs/master/eloquent-collections.md:138
msgctxt "H4"
msgid "`intersect($items)` {.collection-method}"
msgstr "`intersect($items)` {.collection-method}"

#: ./docs/8.x/eloquent-collections.md:126
#: ./docs/9.x/eloquent-collections.md:140
#: ./docs/10.x/eloquent-collections.md:140
#: ./docs/11.x/eloquent-collections.md:150
#: ./docs/master/eloquent-collections.md:140
msgctxt "P"
msgid "The `intersect` method returns all of the models that are also present in the given collection:"
msgstr "`diff` 方法會回傳所有同時存在於給定 Collection 中的所有 Model："

#: ./docs/8.x/eloquent-collections.md:128
#: ./docs/9.x/eloquent-collections.md:142
#: ./docs/10.x/eloquent-collections.md:142
#: ./docs/11.x/eloquent-collections.md:152
#: ./docs/master/eloquent-collections.md:142
msgctxt "CODE"
msgid ""
"use App\\Models\\User;\n"
"\n"
"$users = $users->intersect(User::whereIn('id', [1, 2, 3])->get());"
msgstr ""

#: ./docs/11.x/eloquent-collections.md:129
#~ msgctxt "P"
#~ msgid "<a name=\"method-find-or-fail\"></a>"
#~ msgstr ""

#: ./docs/11.x/eloquent-collections.md:130
msgctxt "H4"
msgid "`findOrFail($key)` {.collection-method}"
msgstr ""

#: ./docs/11.x/eloquent-collections.md:132
msgctxt "P"
msgid "The `findOrFail` method returns the model that has a primary key matching the given key or throws an `Illuminate\\Database\\Eloquent\\ModelNotFoundException` exception if no matching model can be found in the collection:"
msgstr ""

#: ./docs/8.x/eloquent-collections.md:132
#: ./docs/9.x/eloquent-collections.md:146
#: ./docs/10.x/eloquent-collections.md:146
#: ./docs/11.x/eloquent-collections.md:156
#: ./docs/master/eloquent-collections.md:146
#~ msgctxt "P"
#~ msgid "<a name=\"method-load\"></a>"
#~ msgstr ""

#: ./docs/8.x/eloquent-collections.md:133
#: ./docs/9.x/eloquent-collections.md:147
#: ./docs/10.x/eloquent-collections.md:147
#: ./docs/11.x/eloquent-collections.md:157
#: ./docs/master/eloquent-collections.md:147
msgctxt "H4"
msgid "`load($relations)` {.collection-method}"
msgstr "`load($relations)` {.collection-method}"

#: ./docs/11.x/eloquent-collections.md:134
msgctxt "CODE"
msgid ""
"$users = User::all();\n"
"\n"
"$user = $users->findOrFail(1);"
msgstr ""

#: ./docs/8.x/eloquent-collections.md:135
#: ./docs/9.x/eloquent-collections.md:149
#: ./docs/10.x/eloquent-collections.md:149
#: ./docs/11.x/eloquent-collections.md:159
#: ./docs/master/eloquent-collections.md:149
msgctxt "P"
msgid "The `load` method eager loads the given relationships for all models in the collection:"
msgstr "`load` 方法會積極式載入 (Eager Loading) Collection 中所有 Model 上的給定關聯："

#: ./docs/8.x/eloquent-collections.md:137
msgctxt "CODE"
msgid ""
"$users->load(['comments', 'posts']);\n"
"\n"
"$users->load('comments.author');"
msgstr ""

#: ./docs/8.x/eloquent-collections.md:141
#: ./docs/9.x/eloquent-collections.md:157
#: ./docs/10.x/eloquent-collections.md:157
#: ./docs/11.x/eloquent-collections.md:167
#: ./docs/master/eloquent-collections.md:157
#~ msgctxt "P"
#~ msgid "<a name=\"method-loadMissing\"></a>"
#~ msgstr ""

#: ./docs/8.x/eloquent-collections.md:142
#: ./docs/9.x/eloquent-collections.md:158
#: ./docs/10.x/eloquent-collections.md:158
#: ./docs/11.x/eloquent-collections.md:168
#: ./docs/master/eloquent-collections.md:158
msgctxt "H4"
msgid "`loadMissing($relations)` {.collection-method}"
msgstr "`loadMissing($relations)` {.collection-method}"

#: ./docs/8.x/eloquent-collections.md:144
#: ./docs/9.x/eloquent-collections.md:160
#: ./docs/10.x/eloquent-collections.md:160
#: ./docs/11.x/eloquent-collections.md:170
#: ./docs/master/eloquent-collections.md:160
msgctxt "P"
msgid "The `loadMissing` method eager loads the given relationships for all models in the collection if the relationships are not already loaded:"
msgstr "`loadMissing` 方法會在該 Collection 中所有 Model 的給定關聯尚未載入時將其積極式載入 (Eager Loading)："

#: ./docs/8.x/eloquent-collections.md:146
msgctxt "CODE"
msgid ""
"$users->loadMissing(['comments', 'posts']);\n"
"\n"
"$users->loadMissing('comments.author');"
msgstr ""

#: ./docs/8.x/eloquent-collections.md:150
#: ./docs/9.x/eloquent-collections.md:168
#: ./docs/10.x/eloquent-collections.md:168
#: ./docs/11.x/eloquent-collections.md:178
#: ./docs/master/eloquent-collections.md:168
#~ msgctxt "P"
#~ msgid "<a name=\"method-modelKeys\"></a>"
#~ msgstr ""

#: ./docs/8.x/eloquent-collections.md:151
#: ./docs/9.x/eloquent-collections.md:169
#: ./docs/10.x/eloquent-collections.md:169
#: ./docs/11.x/eloquent-collections.md:179
#: ./docs/master/eloquent-collections.md:169
msgctxt "H4"
msgid "`modelKeys()` {.collection-method}"
msgstr "`modelKeys()` {.collection-method}"

#: ./docs/9.x/eloquent-collections.md:151
#: ./docs/10.x/eloquent-collections.md:151
#: ./docs/11.x/eloquent-collections.md:161
#: ./docs/master/eloquent-collections.md:151
msgctxt "CODE"
msgid ""
"$users->load(['comments', 'posts']);\n"
"\n"
"$users->load('comments.author');\n"
"\n"
"$users->load(['comments', 'posts' => fn ($query) => $query->where('active', 1)]);"
msgstr ""

#: ./docs/8.x/eloquent-collections.md:153
#: ./docs/9.x/eloquent-collections.md:171
#: ./docs/10.x/eloquent-collections.md:171
#: ./docs/11.x/eloquent-collections.md:181
#: ./docs/master/eloquent-collections.md:171
msgctxt "P"
msgid "The `modelKeys` method returns the primary keys for all models in the collection:"
msgstr "`modelKeys` 方法會回傳該 Collection 中所有方法的主鍵："

#: ./docs/8.x/eloquent-collections.md:155
#: ./docs/9.x/eloquent-collections.md:173
#: ./docs/10.x/eloquent-collections.md:173
#: ./docs/11.x/eloquent-collections.md:183
#: ./docs/master/eloquent-collections.md:173
msgctxt "CODE"
msgid ""
"$users->modelKeys();\n"
"\n"
"// [1, 2, 3, 4, 5]"
msgstr ""

#: ./docs/8.x/eloquent-collections.md:159
#: ./docs/9.x/eloquent-collections.md:177
#: ./docs/10.x/eloquent-collections.md:177
#: ./docs/11.x/eloquent-collections.md:187
#: ./docs/master/eloquent-collections.md:177
#~ msgctxt "P"
#~ msgid "<a name=\"method-makeVisible\"></a>"
#~ msgstr ""

#: ./docs/8.x/eloquent-collections.md:160
#: ./docs/9.x/eloquent-collections.md:178
#: ./docs/10.x/eloquent-collections.md:178
#: ./docs/11.x/eloquent-collections.md:188
#: ./docs/master/eloquent-collections.md:178
msgctxt "H4"
msgid "`makeVisible($attributes)` {.collection-method}"
msgstr "`makeVisible($attributes)` {.collection-method}"

#: ./docs/8.x/eloquent-collections.md:162
#: ./docs/9.x/eloquent-collections.md:180
#: ./docs/10.x/eloquent-collections.md:180
#: ./docs/11.x/eloquent-collections.md:190
#: ./docs/master/eloquent-collections.md:180
msgctxt "P"
msgid "The `makeVisible` method [makes attributes visible](/docs/{{version}}/eloquent-serialization#hiding-attributes-from-json) that are typically \"hidden\" on each model in the collection:"
msgstr "`makeVisible` 方法會將該 Collection 中所有 Model 上通常「隱藏 (Hidden)」的屬性[設為可見](/docs/{{version}}/eloquent-serialization#hiding-attributes-from-json)："

#: ./docs/9.x/eloquent-collections.md:162
#: ./docs/10.x/eloquent-collections.md:162
#: ./docs/11.x/eloquent-collections.md:172
#: ./docs/master/eloquent-collections.md:162
msgctxt "CODE"
msgid ""
"$users->loadMissing(['comments', 'posts']);\n"
"\n"
"$users->loadMissing('comments.author');\n"
"\n"
"$users->loadMissing(['comments', 'posts' => fn ($query) => $query->where('active', 1)]);"
msgstr ""

#: ./docs/8.x/eloquent-collections.md:164
#: ./docs/9.x/eloquent-collections.md:182
#: ./docs/10.x/eloquent-collections.md:182
#: ./docs/11.x/eloquent-collections.md:192
#: ./docs/master/eloquent-collections.md:182
msgctxt "CODE"
msgid "$users = $users->makeVisible(['address', 'phone_number']);"
msgstr ""

#: ./docs/8.x/eloquent-collections.md:166
#: ./docs/9.x/eloquent-collections.md:184
#: ./docs/10.x/eloquent-collections.md:184
#: ./docs/11.x/eloquent-collections.md:194
#: ./docs/master/eloquent-collections.md:184
#~ msgctxt "P"
#~ msgid "<a name=\"method-makeHidden\"></a>"
#~ msgstr ""

#: ./docs/8.x/eloquent-collections.md:167
#: ./docs/9.x/eloquent-collections.md:185
#: ./docs/10.x/eloquent-collections.md:185
#: ./docs/11.x/eloquent-collections.md:195
#: ./docs/master/eloquent-collections.md:185
msgctxt "H4"
msgid "`makeHidden($attributes)` {.collection-method}"
msgstr "`makeHidden($attributes)` {.collection-method}"

#: ./docs/8.x/eloquent-collections.md:169
#: ./docs/9.x/eloquent-collections.md:187
#: ./docs/10.x/eloquent-collections.md:187
#: ./docs/11.x/eloquent-collections.md:197
#: ./docs/master/eloquent-collections.md:187
msgctxt "P"
msgid "The `makeHidden` method [hides attributes](/docs/{{version}}/eloquent-serialization#hiding-attributes-from-json) that are typically \"visible\" on each model in the collection:"
msgstr "`makeHidden` 方法會將該 Collection 中所有 Model 上通常「可見 (Visible)」的屬性[設為隱藏](/docs/{{version}}/eloquent-serialization#hiding-attributes-from-json)："

#: ./docs/8.x/eloquent-collections.md:171
#: ./docs/9.x/eloquent-collections.md:189
#: ./docs/10.x/eloquent-collections.md:189
#: ./docs/11.x/eloquent-collections.md:199
#: ./docs/master/eloquent-collections.md:189
msgctxt "CODE"
msgid "$users = $users->makeHidden(['address', 'phone_number']);"
msgstr ""

#: ./docs/8.x/eloquent-collections.md:173
#: ./docs/9.x/eloquent-collections.md:191
#: ./docs/10.x/eloquent-collections.md:191
#: ./docs/11.x/eloquent-collections.md:201
#: ./docs/master/eloquent-collections.md:191
#~ msgctxt "P"
#~ msgid "<a name=\"method-only\"></a>"
#~ msgstr ""

#: ./docs/8.x/eloquent-collections.md:174
#: ./docs/9.x/eloquent-collections.md:192
#: ./docs/10.x/eloquent-collections.md:192
#: ./docs/11.x/eloquent-collections.md:202
#: ./docs/master/eloquent-collections.md:192
msgctxt "H4"
msgid "`only($keys)` {.collection-method}"
msgstr "`only($keys)` {.collection-method}"

#: ./docs/8.x/eloquent-collections.md:176
#: ./docs/9.x/eloquent-collections.md:194
#: ./docs/10.x/eloquent-collections.md:194
#: ./docs/11.x/eloquent-collections.md:204
#: ./docs/master/eloquent-collections.md:194
msgctxt "P"
msgid "The `only` method returns all of the models that have the given primary keys:"
msgstr "`except` 方法會回傳符合給定主鍵的所有 Model："

#: ./docs/8.x/eloquent-collections.md:178
#: ./docs/9.x/eloquent-collections.md:196
#: ./docs/10.x/eloquent-collections.md:196
#: ./docs/11.x/eloquent-collections.md:206
#: ./docs/master/eloquent-collections.md:196
msgctxt "CODE"
msgid "$users = $users->only([1, 2, 3]);"
msgstr ""

#: ./docs/8.x/eloquent-collections.md:180
#: ./docs/9.x/eloquent-collections.md:212
#: ./docs/10.x/eloquent-collections.md:212
#: ./docs/11.x/eloquent-collections.md:222
#: ./docs/master/eloquent-collections.md:212
#~ msgctxt "P"
#~ msgid "<a name=\"method-toquery\"></a>"
#~ msgstr ""

#: ./docs/8.x/eloquent-collections.md:181
#: ./docs/9.x/eloquent-collections.md:213
#: ./docs/10.x/eloquent-collections.md:213
#: ./docs/11.x/eloquent-collections.md:223
#: ./docs/master/eloquent-collections.md:213
msgctxt "H4"
msgid "`toQuery()` {.collection-method}"
msgstr "`toQuery()` {.collection-method}"

#: ./docs/8.x/eloquent-collections.md:183
#: ./docs/9.x/eloquent-collections.md:215
#: ./docs/10.x/eloquent-collections.md:215
#: ./docs/11.x/eloquent-collections.md:225
#: ./docs/master/eloquent-collections.md:215
msgctxt "P"
msgid "The `toQuery` method returns an Eloquent query builder instance containing a `whereIn` constraint on the collection model's primary keys:"
msgstr "`toQuery` 方法回傳 Eloquent Query Builder 實體，並包含了由該 Collection 中 Model 的主索引鍵所組成的 `whereIn` 限制式："

#: ./docs/8.x/eloquent-collections.md:185
#: ./docs/9.x/eloquent-collections.md:217
#: ./docs/10.x/eloquent-collections.md:217
#: ./docs/11.x/eloquent-collections.md:227
#: ./docs/master/eloquent-collections.md:217
msgctxt "CODE"
msgid ""
"use App\\Models\\User;\n"
"\n"
"$users = User::where('status', 'VIP')->get();\n"
"\n"
"$users->toQuery()->update([\n"
"    'status' => 'Administrator',\n"
"]);"
msgstr ""

#: ./docs/8.x/eloquent-collections.md:193
#: ./docs/9.x/eloquent-collections.md:225
#: ./docs/10.x/eloquent-collections.md:225
#: ./docs/11.x/eloquent-collections.md:235
#: ./docs/master/eloquent-collections.md:225
#~ msgctxt "P"
#~ msgid "<a name=\"method-unique\"></a>"
#~ msgstr ""

#: ./docs/8.x/eloquent-collections.md:194
#: ./docs/9.x/eloquent-collections.md:226
#: ./docs/10.x/eloquent-collections.md:226
#: ./docs/11.x/eloquent-collections.md:236
#: ./docs/master/eloquent-collections.md:226
msgctxt "H4"
msgid "`unique($key = null, $strict = false)` {.collection-method}"
msgstr "`unique($key = null, $strict = false)` {.collection-method}"

#: ./docs/8.x/eloquent-collections.md:196
#: ./docs/9.x/eloquent-collections.md:228
#: ./docs/10.x/eloquent-collections.md:228
#: ./docs/master/eloquent-collections.md:228
msgctxt "P"
msgid "The `unique` method returns all of the unique models in the collection. Any models of the same type with the same primary key as another model in the collection are removed:"
msgstr "`unique` 方法會回傳該 Collection 中所有不重複的 Model。只要某個 Model 在該 Collection 中有另一個具有相同型別與相同主鍵的 Model，就會被移除："

#: ./docs/8.x/eloquent-collections.md:198
#: ./docs/9.x/eloquent-collections.md:230
#: ./docs/10.x/eloquent-collections.md:230
#: ./docs/11.x/eloquent-collections.md:240
#: ./docs/master/eloquent-collections.md:230
msgctxt "CODE"
msgid "$users = $users->unique();"
msgstr ""

#: ./docs/9.x/eloquent-collections.md:198
#: ./docs/10.x/eloquent-collections.md:198
#: ./docs/11.x/eloquent-collections.md:208
#: ./docs/master/eloquent-collections.md:198
#~ msgctxt "P"
#~ msgid "<a name=\"method-setVisible\"></a>"
#~ msgstr ""

#: ./docs/9.x/eloquent-collections.md:199
#: ./docs/10.x/eloquent-collections.md:199
#: ./docs/11.x/eloquent-collections.md:209
#: ./docs/master/eloquent-collections.md:199
msgctxt "H4"
msgid "`setVisible($attributes)` {.collection-method}"
msgstr "`setVisible($attributes)` {.collection-method}"

#: ./docs/8.x/eloquent-collections.md:200
#: ./docs/9.x/eloquent-collections.md:232
#: ./docs/10.x/eloquent-collections.md:232
#: ./docs/11.x/eloquent-collections.md:242
#: ./docs/master/eloquent-collections.md:232
#~ msgctxt "P"
#~ msgid "<a name=\"custom-collections\"></a>"
#~ msgstr ""

#: ./docs/8.x/eloquent-collections.md:201
#: ./docs/9.x/eloquent-collections.md:233
#: ./docs/10.x/eloquent-collections.md:233
#: ./docs/11.x/eloquent-collections.md:243
#: ./docs/master/eloquent-collections.md:233
msgctxt "H2"
msgid "Custom Collections"
msgstr "自訂 Collection"

#: ./docs/9.x/eloquent-collections.md:201
#: ./docs/10.x/eloquent-collections.md:201
#: ./docs/11.x/eloquent-collections.md:211
#: ./docs/master/eloquent-collections.md:201
msgctxt "P"
msgid "The `setVisible` method [temporarily overrides](/docs/{{version}}/eloquent-serialization#temporarily-modifying-attribute-visibility) all of the visible attributes on each model in the collection:"
msgstr "`setVisible` 方法可[暫時複寫掉](/docs/{{version}}/eloquent-serialization#temporarily-modifying-attribute-visibility)該 Collection 中各個 Model 的所有 ^[visible](可見) 屬性："

#: ./docs/8.x/eloquent-collections.md:203
#: ./docs/9.x/eloquent-collections.md:235
#: ./docs/10.x/eloquent-collections.md:235
#: ./docs/master/eloquent-collections.md:235
msgctxt "P"
msgid "If you would like to use a custom `Collection` object when interacting with a given model, you may define a `newCollection` method on your model:"
msgstr "若想在與給定 Model 互動時使用自訂 `Collection` 實體，可在 Model 中定義一個 `newCollection` 方法："

#: ./docs/9.x/eloquent-collections.md:203
#: ./docs/10.x/eloquent-collections.md:203
#: ./docs/11.x/eloquent-collections.md:213
#: ./docs/master/eloquent-collections.md:203
msgctxt "CODE"
msgid "$users = $users->setVisible(['id', 'name']);"
msgstr ""

#: ./docs/8.x/eloquent-collections.md:205
#: ./docs/9.x/eloquent-collections.md:237
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Models;\n"
"\n"
"use App\\Support\\UserCollection;\n"
"use Illuminate\\Database\\Eloquent\\Model;\n"
"\n"
"class User extends Model\n"
"{\n"
"    /**\n"
"     * Create a new Eloquent Collection instance.\n"
"     *\n"
"     * @param  array  $models\n"
"     * @return \\Illuminate\\Database\\Eloquent\\Collection\n"
"     */\n"
"    public function newCollection(array $models = [])\n"
"    {\n"
"        return new UserCollection($models);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/9.x/eloquent-collections.md:205
#: ./docs/10.x/eloquent-collections.md:205
#: ./docs/11.x/eloquent-collections.md:215
#: ./docs/master/eloquent-collections.md:205
#~ msgctxt "P"
#~ msgid "<a name=\"method-setHidden\"></a>"
#~ msgstr ""

#: ./docs/9.x/eloquent-collections.md:206
#: ./docs/10.x/eloquent-collections.md:206
#: ./docs/11.x/eloquent-collections.md:216
#: ./docs/master/eloquent-collections.md:206
msgctxt "H4"
msgid "`setHidden($attributes)` {.collection-method}"
msgstr "`setHidden($attributes)` {.collection-method}"

#: ./docs/9.x/eloquent-collections.md:208
#: ./docs/10.x/eloquent-collections.md:208
#: ./docs/11.x/eloquent-collections.md:218
#: ./docs/master/eloquent-collections.md:208
msgctxt "P"
msgid "The `setHidden` method [temporarily overrides](/docs/{{version}}/eloquent-serialization#temporarily-modifying-attribute-visibility) all of the hidden attributes on each model in the collection:"
msgstr "`setHidden` 方法可[暫時複寫掉](/docs/{{version}}/eloquent-serialization#temporarily-modifying-attribute-visibility)該 Collection 中各個 Model 的所有 ^[hidden](隱藏) 屬性："

#: ./docs/9.x/eloquent-collections.md:210
#: ./docs/10.x/eloquent-collections.md:210
#: ./docs/11.x/eloquent-collections.md:220
#: ./docs/master/eloquent-collections.md:210
msgctxt "CODE"
msgid "$users = $users->setHidden(['email', 'password', 'remember_token']);"
msgstr ""

#: ./docs/8.x/eloquent-collections.md:226
#: ./docs/9.x/eloquent-collections.md:258
#: ./docs/10.x/eloquent-collections.md:259
#: ./docs/master/eloquent-collections.md:259
msgctxt "P"
msgid "Once you have defined a `newCollection` method, you will receive an instance of your custom collection anytime Eloquent would normally return an `Illuminate\\Database\\Eloquent\\Collection` instance. If you would like to use a custom collection for every model in your application, you should define the `newCollection` method on a base model class that is extended by all of your application's models."
msgstr "定義好 `newCollection` 方法後，之後，在 Eloquent 通常會回傳 `Illuminate\\Database\\Eloquent\\Collection` 實體的時候，就會變成你的自訂 Collection 實體。若想在專案中的所有 Model 上都使用某個自訂 Collection，則可在一個基礎 Model 類別上定義 `newCollection` 方法，並讓專案內所有的 Model 都繼承該基礎 Model："

#: ./docs/10.x/eloquent-collections.md:237
#: ./docs/11.x/eloquent-collections.md:263
#: ./docs/master/eloquent-collections.md:237
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Models;\n"
"\n"
"use App\\Support\\UserCollection;\n"
"use Illuminate\\Database\\Eloquent\\Collection;\n"
"use Illuminate\\Database\\Eloquent\\Model;\n"
"\n"
"class User extends Model\n"
"{\n"
"    /**\n"
"     * Create a new Eloquent Collection instance.\n"
"     *\n"
"     * @param  array<int, \\Illuminate\\Database\\Eloquent\\Model>  $models\n"
"     * @return \\Illuminate\\Database\\Eloquent\\Collection<int, \\Illuminate\\Database\\Eloquent\\Model>\n"
"     */\n"
"    public function newCollection(array $models = []): Collection\n"
"    {\n"
"        return new UserCollection($models);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/11.x/eloquent-collections.md:238
msgctxt "P"
msgid "The `unique` method returns all of the unique models in the collection. Any models with the same primary key as another model in the collection are removed:"
msgstr ""

#: ./docs/11.x/eloquent-collections.md:245
msgctxt "P"
msgid "If you would like to use a custom `Collection` object when interacting with a given model, you may add the `CollectedBy` attribute to your model:"
msgstr ""

#: ./docs/11.x/eloquent-collections.md:247
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Models;\n"
"\n"
"use App\\Support\\UserCollection;\n"
"use Illuminate\\Database\\Eloquent\\Attributes\\CollectedBy;\n"
"use Illuminate\\Database\\Eloquent\\Model;\n"
"\n"
"#[CollectedBy(UserCollection::class)]\n"
"class User extends Model\n"
"{\n"
"    // ...\n"
"}"
msgstr ""

#: ./docs/11.x/eloquent-collections.md:261
msgctxt "P"
msgid "Alternatively, you may define a `newCollection` method on your model:"
msgstr ""

#: ./docs/11.x/eloquent-collections.md:285
msgctxt "P"
msgid "Once you have defined a `newCollection` method or added the `CollectedBy` attribute to your model, you will receive an instance of your custom collection anytime Eloquent would normally return an `Illuminate\\Database\\Eloquent\\Collection` instance."
msgstr ""

#: ./docs/11.x/eloquent-collections.md:287
msgctxt "P"
msgid "If you would like to use a custom collection for every model in your application, you should define the `newCollection` method on a base model class that is extended by all of your application's models."
msgstr ""
