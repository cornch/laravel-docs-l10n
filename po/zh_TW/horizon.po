msgid ""
msgstr ""
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/templates/horizon.pot\n"
"X-Crowdin-File-ID: 83\n"
"Project-Id-Version: laravel-docs\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"PO-Revision-Date: 2023-02-22 12:37\n"

#: docs/10.x/horizon.md:block 1 (header)
msgid "Laravel Horizon"
msgstr "Laravel Horizon"

#: docs/10.x/horizon.md:block 2 (unordered list)
msgid "[Introduction](#introduction)"
msgstr "[簡介](#introduction)"

#: docs/10.x/horizon.md:block 2 (unordered list)
msgid "[Installation](#installation)"
msgstr "[安裝](#installation)"

#: docs/10.x/horizon.md:block 2 (unordered list)
msgid "[Configuration](#configuration)"
msgstr "[設定](#configuration)"

#: docs/10.x/horizon.md:block 2 (unordered list)
msgid "[Balancing Strategies](#balancing-strategies)"
msgstr "[負載平衡策略](#balancing-strategies)"

#: docs/10.x/horizon.md:block 2 (unordered list)
msgid "[Dashboard Authorization](#dashboard-authorization)"
msgstr "[主控台的權限控制](#dashboard-authorization)"

#: docs/10.x/horizon.md:block 2 (unordered list)
msgid "[Silenced Jobs](#silenced-jobs)"
msgstr "[靜音的 Job](#silenced-jobs)"

#: docs/10.x/horizon.md:block 2 (unordered list)
msgid "[Upgrading Horizon](#upgrading-horizon)"
msgstr "[升級 Horizon](#upgrading-horizon)"

#: docs/10.x/horizon.md:block 2 (unordered list)
msgid "[Running Horizon](#running-horizon)"
msgstr "[執行 Horizon](#running-horizon)"

#: docs/10.x/horizon.md:block 2 (unordered list)
msgid "[Deploying Horizon](#deploying-horizon)"
msgstr "[部署 Horizon](#deploying-horizon)"

#: docs/10.x/horizon.md:block 2 (unordered list)
msgid "[Tags](#tags)"
msgstr "[Tag](#tags)"

#: docs/10.x/horizon.md:block 2 (unordered list)
msgid "[Notifications](#notifications)"
msgstr "[Notification](#notifications)"

#: docs/10.x/horizon.md:block 2 (unordered list)
msgid "[Metrics](#metrics)"
msgstr "[Metric](#metrics)"

#: docs/10.x/horizon.md:block 2 (unordered list)
msgid "[Deleting Failed Jobs](#deleting-failed-jobs)"
msgstr "[刪除失敗的 Job](#deleting-failed-jobs)"

#: docs/10.x/horizon.md:block 2 (unordered list)
msgid "[Clearing Jobs From Queues](#clearing-jobs-from-queues)"
msgstr "[在佇列中清除 Job](#clearing-jobs-from-queues)"

#: docs/10.x/horizon.md:block 4 (header)
msgid "Introduction"
msgstr "簡介"

#: docs/10.x/horizon.md:block 5 (quote)
msgid "**Note** Before digging into Laravel Horizon, you should familiarize yourself with Laravel's base [queue services](/docs/{{version}}/queues). Horizon augments Laravel's queue with additional features that may be confusing if you are not already familiar with the basic queue features offered by Laravel."
msgstr "**Note** 在開始深入了解 Laravel Horizon 前，請先熟悉一下 Laravel 中基本的 [Queue 服務](/docs/{{version}}/queues)。Horizon 以 Laravel 的 Queue 為基礎，加上了很多新功能。如果你還不熟悉 Laravel 中基本的 Queue 功能，那麼可能會不太好理解 Horizon 的一些概念。"

#: docs/10.x/horizon.md:block 6 (paragraph)
msgid "[Laravel Horizon](https://github.com/laravel/horizon) provides a beautiful dashboard and code-driven configuration for your Laravel powered [Redis queues](/docs/{{version}}/queues). Horizon allows you to easily monitor key metrics of your queue system such as job throughput, runtime, and job failures."
msgstr "[Laravel Horizon](https://github.com/laravel/horizon) 提供了一個功能強大的主控台，並且可使用程式碼來調整 Laravel 驅動的 [Redis Queue](/docs/{{version}}/queues) 的設定。使用 Horizon，就能輕鬆的監控佇列系統上的一些關鍵指標，如 Job 吞吐量、執行時間、失敗的 Job。"

#: docs/10.x/horizon.md:block 7 (paragraph)
msgid "When using Horizon, all of your queue worker configuration is stored in a single, simple configuration file. By defining your application's worker configuration in a version controlled file, you may easily scale or modify your application's queue workers when deploying your application."
msgstr "在使用 Horizon 時，所有 Queue Worker 的設定都保存在簡單且單一的一個設定檔中。只要把專案的 Worker 設定保存在版本控制的檔案中，就能輕鬆地在部署專案時擴增或調整 Queue Worker。"

#: docs/10.x/horizon.md:block 10 (header)
msgid "Installation"
msgstr "安裝"

#: docs/10.x/horizon.md:block 11 (quote)
msgid "**Warning** Laravel Horizon requires that you use [Redis](https://redis.io) to power your queue. Therefore, you should ensure that your queue connection is set to `redis` in your application's `config/queue.php` configuration file."
msgstr "**Warning** 使用 Laravel Horizon 時必須使用 [Redis](https://redis.io) 來驅動 Queue。因此，請確定有在專案的 `config/queue.php` 設定檔中將 Queue 連線設為 `redis`。"

#: docs/10.x/horizon.md:block 12 (paragraph)
msgid "You may install Horizon into your project using the Composer package manager:"
msgstr "可以使用 Composer 套件管理員來將 Horizon 安裝到專案中："

#: docs/10.x/horizon.md:block 13 (code)
msgid "composer require laravel/horizon\n"
msgstr "composer require laravel/horizon\n"

#: docs/10.x/horizon.md:block 14 (paragraph)
msgid "After installing Horizon, publish its assets using the `horizon:install` Artisan command:"
msgstr "安裝好 Horizon 後，使用 `horizon:install` Artisan 指令來安裝 Horizon 的素材："

#: docs/10.x/horizon.md:block 15 (code)
msgid "php artisan horizon:install\n"
msgstr "php artisan horizon:install\n"

#: docs/10.x/horizon.md:block 17 (header)
msgid "Configuration"
msgstr "設定"

#: docs/10.x/horizon.md:block 18 (paragraph)
msgid "After publishing Horizon's assets, its primary configuration file will be located at `config/horizon.php`. This configuration file allows you to configure the queue worker options for your application. Each configuration option includes a description of its purpose, so be sure to thoroughly explore this file."
msgstr "安裝好 Horizon 的素材後，主要設定檔會被放到 `config/horizon.php`。在這個設定檔中，我們可以調整 Queue Worker 的設定。每個設定選項都包含了有關該選項功能的說明，因此建議先仔細看過這個設定檔。"

#: docs/10.x/horizon.md:block 19 (quote)
msgid "**Warning** Horizon uses a Redis connection named `horizon` internally. This Redis connection name is reserved and should not be assigned to another Redis connection in the `database.php` configuration file or as the value of the `use` option in the `horizon.php` configuration file."
msgstr "**Warning** Horizon 會在內部使用到命名為 `horizon` 的 Redis 連線。這個 Redis 連線名稱為保留字，不可在 `databade.php` 設定檔中將該名稱指派給其他連線，或是在 `horizon.php` 設定檔中設為 `use` 選項的值。"

#: docs/10.x/horizon.md:block 21 (header)
msgid "Environments"
msgstr "環境"

#: docs/10.x/horizon.md:block 22 (paragraph)
msgid "After installation, the primary Horizon configuration option that you should familiarize yourself with is the `environments` configuration option. This configuration option is an array of environments that your application runs on and defines the worker process options for each environment. By default, this entry contains a `production` and `local` environment. However, you are free to add more environments as needed:"
msgstr "安裝好後，我們首先要熟悉的 Horizon 設定是 `environments` 選項。這個設定選項是一組環境的陣列，這些環境是專案會執行的。在這個選項中，要為各個環境定義 Worker 處理程序的設定。預設情況下，`environments` 選項中包含了 `production` 與 `local` 兩個環境。不過，可以按照需求任意加上更多的環境："

#: docs/10.x/horizon.md:block 23 (code)
msgid "'environments' => [\n"
"    'production' => [\n"
"        'supervisor-1' => [\n"
"            'maxProcesses' => 10,\n"
"            'balanceMaxShift' => 1,\n"
"            'balanceCooldown' => 3,\n"
"        ],\n"
"    ],\n\n"
"    'local' => [\n"
"        'supervisor-1' => [\n"
"            'maxProcesses' => 3,\n"
"        ],\n"
"    ],\n"
"],\n"
msgstr "'environments' => [\n"
"    'production' => [\n"
"        'supervisor-1' => [\n"
"            'maxProcesses' => 10,\n"
"            'balanceMaxShift' => 1,\n"
"            'balanceCooldown' => 3,\n"
"        ],\n"
"    ],\n\n"
"    'local' => [\n"
"        'supervisor-1' => [\n"
"            'maxProcesses' => 3,\n"
"        ],\n"
"    ],\n"
"],\n"

#: docs/10.x/horizon.md:block 24 (paragraph)
msgid "When you start Horizon, it will use the worker process configuration options for the environment that your application is running on. Typically, the environment is determined by the value of the `APP_ENV` [environment variable](/docs/{{version}}/configuration#determining-the-current-environment). For example, the default `local` Horizon environment is configured to start three worker processes and automatically balance the number of worker processes assigned to each queue. The default `production` environment is configured to start a maximum of 10 worker processes and automatically balance the number of worker processes assigned to each queue."
msgstr "啟動 Horizon 時，Horizon 會使用目前專案所執行的環境所對應的 Worker 設定。一般來說，會從 `APP_ENV` [環境變數](/docs/{{version}}/configuration#determining-the-current-environment)中來判斷專案所在的環境。舉例來說，預設的 `local` Horizon 環境已設定好啟動三個 Worker 處理程序，並且會自動為各個 Queue 負載平衡分配 Worker 處理程序的數量。預設的 `production` 環境設定好啟動 10 個 Worker，並自動負載平衡分配 Worker 數量給各個 Queue。"

#: docs/10.x/horizon.md:block 25 (quote)
msgid "**Warning** You should ensure that the `environments` portion of your `horizon` configuration file contains an entry for each [environment](/docs/{{version}}/configuration#environment-configuration) on which you plan to run Horizon."
msgstr "**Warning** 請確保 `horizon` 設定檔中的 `environments` 內有包含所有會執行 Horizon 的 [環境](/docs/{{version}}/configuration#environment-configuration)。"

#: docs/10.x/horizon.md:block 27 (header)
msgid "Supervisors"
msgstr "Supervisor"

#: docs/10.x/horizon.md:block 28 (paragraph)
msgid "As you can see in Horizon's default configuration file, each environment can contain one or more \"supervisors\". By default, the configuration file defines this supervisor as `supervisor-1`; however, you are free to name your supervisors whatever you want. Each supervisor is essentially responsible for \"supervising\" a group of worker processes and takes care of balancing worker processes across queues."
msgstr "在 Horizon 的預設設定檔中可以看到，每個環境都包含了一個或多個的「Supervisor」。預設情況下，這個設定檔中將其命名為 `supervisor-1`。不過，可以自由依照需求更改其名稱。每個 Supervisor 基本上就是負責「監管 (Supervising)」一組 Worker 處理程序，並負責在 Queue 間協調 Worker 處理程序的負載平衡。"

#: docs/10.x/horizon.md:block 29 (paragraph)
msgid "You may add additional supervisors to a given environment if you would like to define a new group of worker processes that should run in that environment. You may choose to do this if you would like to define a different balancing strategy or worker process count for a given queue used by your application."
msgstr ""

#: docs/10.x/horizon.md:block 31 (header)
msgid "Default Values"
msgstr ""

#: docs/10.x/horizon.md:block 32 (paragraph)
msgid "Within Horizon's default configuration file, you will notice a `defaults` configuration option. This configuration option specifies the default values for your application's [supervisors](#supervisors). The supervisor's default configuration values will be merged into the supervisor's configuration for each environment, allowing you to avoid unnecessary repetition when defining your supervisors."
msgstr ""

#: docs/10.x/horizon.md:block 34 (header)
msgid "Balancing Strategies"
msgstr ""

#: docs/10.x/horizon.md:block 35 (paragraph)
msgid "Unlike Laravel's default queue system, Horizon allows you to choose from three worker balancing strategies: `simple`, `auto`, and `false`. The `simple` strategy, which is the configuration file's default, splits incoming jobs evenly between worker processes:"
msgstr ""

#: docs/10.x/horizon.md:block 36 (code)
msgid "'balance' => 'simple',\n"
msgstr ""

#: docs/10.x/horizon.md:block 37 (paragraph)
msgid "The `auto` strategy adjusts the number of worker processes per queue based on the current workload of the queue. For example, if your `notifications` queue has 1,000 pending jobs while your `render` queue is empty, Horizon will allocate more workers to your `notifications` queue until the queue is empty."
msgstr ""

#: docs/10.x/horizon.md:block 38 (paragraph)
msgid "When using the `auto` strategy, you may define the `minProcesses` and `maxProcesses` configuration options to control the minimum and the maximum number of worker processes Horizon should scale up and down to:"
msgstr ""

#: docs/10.x/horizon.md:block 39 (code)
msgid "'environments' => [\n"
"    'production' => [\n"
"        'supervisor-1' => [\n"
"            'connection' => 'redis',\n"
"            'queue' => ['default'],\n"
"            'balance' => 'auto',\n"
"            'minProcesses' => 1,\n"
"            'maxProcesses' => 10,\n"
"            'balanceMaxShift' => 1,\n"
"            'balanceCooldown' => 3,\n"
"            'tries' => 3,\n"
"        ],\n"
"    ],\n"
"],\n"
msgstr ""

#: docs/10.x/horizon.md:block 40 (paragraph)
msgid "The `balanceMaxShift` and `balanceCooldown` configuration values determine how quickly Horizon will scale to meet worker demand. In the example above, a maximum of one new process will be created or destroyed every three seconds. You are free to tweak these values as necessary based on your application's needs."
msgstr ""

#: docs/10.x/horizon.md:block 41 (paragraph)
msgid "When the `balance` option is set to `false`, the default Laravel behavior will be used, wherein queues are processed in the order they are listed in your configuration."
msgstr ""

#: docs/10.x/horizon.md:block 43 (header)
msgid "Dashboard Authorization"
msgstr ""

#: docs/10.x/horizon.md:block 44 (paragraph)
msgid "Horizon exposes a dashboard at the `/horizon` URI. By default, you will only be able to access this dashboard in the `local` environment. However, within your `app/Providers/HorizonServiceProvider.php` file, there is an [authorization gate](/docs/{{version}}/authorization#gates) definition. This authorization gate controls access to Horizon in **non-local** environments. You are free to modify this gate as needed to restrict access to your Horizon installation:"
msgstr ""

#: docs/10.x/horizon.md:block 45 (code)
msgid "/**\n"
" * Register the Horizon gate.\n"
" *\n"
" * This gate determines who can access Horizon in non-local environments.\n"
" */\n"
"protected function gate(): void\n"
"{\n"
"    Gate::define('viewHorizon', function (User $user) {\n"
"        return in_array($user->email, [\n"
"            'taylor@laravel.com',\n"
"        ]);\n"
"    });\n"
"}\n"
msgstr ""

#: docs/10.x/horizon.md:block 47 (header)
msgid "Alternative Authentication Strategies"
msgstr ""

#: docs/10.x/horizon.md:block 48 (paragraph)
msgid "Remember that Laravel automatically injects the authenticated user into the gate closure. If your application is providing Horizon security via another method, such as IP restrictions, then your Horizon users may not need to \"login\". Therefore, you will need to change `function (User $user)` closure signature above to `function (User $user = null)` in order to force Laravel to not require authentication."
msgstr ""

#: docs/10.x/horizon.md:block 50 (header)
msgid "Silenced Jobs"
msgstr ""

#: docs/10.x/horizon.md:block 51 (paragraph)
msgid "Sometimes, you may not be interested in viewing certain jobs dispatched by your application or third-party packages. Instead of these jobs taking up space in your \"Completed Jobs\" list, you can silence them. To get started, add the job's class name to the `silenced` configuration option in your application's `horizon` configuration file:"
msgstr ""

#: docs/10.x/horizon.md:block 52 (code)
msgid "'silenced' => [\n"
"    App\\Jobs\\ProcessPodcast::class,\n"
"],\n"
msgstr ""

#: docs/10.x/horizon.md:block 53 (paragraph)
msgid "Alternatively, the job you wish to silence can implement the `Laravel\\Horizon\\Contracts\\Silenced` interface. If a job implements this interface, it will automatically be silenced, even if it is not present in the `silenced` configuration array:"
msgstr ""

#: docs/10.x/horizon.md:block 54 (code)
msgid "use Laravel\\Horizon\\Contracts\\Silenced;\n\n"
"class ProcessPodcast implements ShouldQueue, Silenced\n"
"{\n"
"    use Dispatchable, InteractsWithQueue, Queueable, SerializesModels;\n\n"
"    // ...\n"
"}\n"
msgstr ""

#: docs/10.x/horizon.md:block 56 (header)
msgid "Upgrading Horizon"
msgstr ""

#: docs/10.x/horizon.md:block 57 (paragraph)
msgid "When upgrading to a new major version of Horizon, it's important that you carefully review [the upgrade guide](https://github.com/laravel/horizon/blob/master/UPGRADE.md). In addition, when upgrading to any new Horizon version, you should re-publish Horizon's assets:"
msgstr ""

#: docs/10.x/horizon.md:block 58 (code)
msgid "php artisan horizon:publish\n"
msgstr ""

#: docs/10.x/horizon.md:block 59 (paragraph)
msgid "To keep the assets up-to-date and avoid issues in future updates, you may add the `vendor:publish --tag=laravel-assets` command to the `post-update-cmd` scripts in your application's `composer.json` file:"
msgstr ""

#: docs/10.x/horizon.md:block 60 (code)
msgid "{\n"
"    \"scripts\": {\n"
"        \"post-update-cmd\": [\n"
"            \"@php artisan vendor:publish --tag=laravel-assets --ansi --force\"\n"
"        ]\n"
"    }\n"
"}\n"
msgstr ""

#: docs/10.x/horizon.md:block 62 (header)
msgid "Running Horizon"
msgstr ""

#: docs/10.x/horizon.md:block 63 (paragraph)
msgid "Once you have configured your supervisors and workers in your application's `config/horizon.php` configuration file, you may start Horizon using the `horizon` Artisan command. This single command will start all of the configured worker processes for the current environment:"
msgstr ""

#: docs/10.x/horizon.md:block 64 (code)
msgid "php artisan horizon\n"
msgstr ""

#: docs/10.x/horizon.md:block 65 (paragraph)
msgid "You may pause the Horizon process and instruct it to continue processing jobs using the `horizon:pause` and `horizon:continue` Artisan commands:"
msgstr ""

#: docs/10.x/horizon.md:block 66 (code)
msgid "php artisan horizon:pause\n\n"
"php artisan horizon:continue\n"
msgstr ""

#: docs/10.x/horizon.md:block 67 (paragraph)
msgid "You may also pause and continue specific Horizon [supervisors](#supervisors) using the `horizon:pause-supervisor` and `horizon:continue-supervisor` Artisan commands:"
msgstr ""

#: docs/10.x/horizon.md:block 68 (code)
msgid "php artisan horizon:pause-supervisor supervisor-1\n\n"
"php artisan horizon:continue-supervisor supervisor-1\n"
msgstr ""

#: docs/10.x/horizon.md:block 69 (paragraph)
msgid "You may check the current status of the Horizon process using the `horizon:status` Artisan command:"
msgstr ""

#: docs/10.x/horizon.md:block 70 (code)
msgid "php artisan horizon:status\n"
msgstr ""

#: docs/10.x/horizon.md:block 71 (paragraph)
msgid "You may gracefully terminate the Horizon process using the `horizon:terminate` Artisan command. Any jobs that are currently being processed by will be completed and then Horizon will stop executing:"
msgstr ""

#: docs/10.x/horizon.md:block 72 (code)
msgid "php artisan horizon:terminate\n"
msgstr ""

#: docs/10.x/horizon.md:block 74 (header)
msgid "Deploying Horizon"
msgstr ""

#: docs/10.x/horizon.md:block 75 (paragraph)
msgid "When you're ready to deploy Horizon to your application's actual server, you should configure a process monitor to monitor the `php artisan horizon` command and restart it if it exits unexpectedly. Don't worry, we'll discuss how to install a process monitor below."
msgstr ""

#: docs/10.x/horizon.md:block 76 (paragraph)
msgid "During your application's deployment process, you should instruct the Horizon process to terminate so that it will be restarted by your process monitor and receive your code changes:"
msgstr ""

#: docs/10.x/horizon.md:block 79 (header)
msgid "Installing Supervisor"
msgstr ""

#: docs/10.x/horizon.md:block 80 (paragraph)
msgid "Supervisor is a process monitor for the Linux operating system and will automatically restart your `horizon` process if it stops executing. To install Supervisor on Ubuntu, you may use the following command. If you are not using Ubuntu, you can likely install Supervisor using your operating system's package manager:"
msgstr ""

#: docs/10.x/horizon.md:block 81 (code)
msgid "sudo apt-get install supervisor\n"
msgstr ""

#: docs/10.x/horizon.md:block 82 (quote)
msgid "**Note** If configuring Supervisor yourself sounds overwhelming, consider using [Laravel Forge](https://forge.laravel.com), which will automatically install and configure Supervisor for your Laravel projects."
msgstr ""

#: docs/10.x/horizon.md:block 84 (header)
msgid "Supervisor Configuration"
msgstr ""

#: docs/10.x/horizon.md:block 85 (paragraph)
msgid "Supervisor configuration files are typically stored within your server's `/etc/supervisor/conf.d` directory. Within this directory, you may create any number of configuration files that instruct supervisor how your processes should be monitored. For example, let's create a `horizon.conf` file that starts and monitors a `horizon` process:"
msgstr ""

#: docs/10.x/horizon.md:block 86 (code)
msgid "[program:horizon]\n"
"process_name=%(program_name)s\n"
"command=php /home/forge/example.com/artisan horizon\n"
"autostart=true\n"
"autorestart=true\n"
"user=forge\n"
"redirect_stderr=true\n"
"stdout_logfile=/home/forge/example.com/horizon.log\n"
"stopwaitsecs=3600\n"
msgstr ""

#: docs/10.x/horizon.md:block 87 (paragraph)
msgid "When defining your Supervisor configuration, you should ensure that the value of `stopwaitsecs` is greater than the number of seconds consumed by your longest running job. Otherwise, Supervisor may kill the job before it is finished processing."
msgstr ""

#: docs/10.x/horizon.md:block 88 (quote)
msgid "**Warning** While the examples above are valid for Ubuntu based servers, the location and file extension expected of Supervisor configuration files may vary between other server operating systems. Please consult your server's documentation for more information."
msgstr ""

#: docs/10.x/horizon.md:block 90 (header)
msgid "Starting Supervisor"
msgstr ""

#: docs/10.x/horizon.md:block 91 (paragraph)
msgid "Once the configuration file has been created, you may update the Supervisor configuration and start the monitored processes using the following commands:"
msgstr ""

#: docs/10.x/horizon.md:block 92 (code)
msgid "sudo supervisorctl reread\n\n"
"sudo supervisorctl update\n\n"
"sudo supervisorctl start horizon\n"
msgstr ""

#: docs/10.x/horizon.md:block 93 (quote)
msgid "**Note** For more information on running Supervisor, consult the [Supervisor documentation](http://supervisord.org/index.html)."
msgstr ""

#: docs/10.x/horizon.md:block 95 (header)
msgid "Tags"
msgstr ""

#: docs/10.x/horizon.md:block 96 (paragraph)
msgid "Horizon allows you to assign “tags” to jobs, including mailables, broadcast events, notifications, and queued event listeners. In fact, Horizon will intelligently and automatically tag most jobs depending on the Eloquent models that are attached to the job. For example, take a look at the following job:"
msgstr ""

#: docs/10.x/horizon.md:block 97 (code)
msgid "<?php\n\n"
"namespace App\\Jobs;\n\n"
"use App\\Models\\Video;\n"
"use Illuminate\\Bus\\Queueable;\n"
"use Illuminate\\Contracts\\Queue\\ShouldQueue;\n"
"use Illuminate\\Foundation\\Bus\\Dispatchable;\n"
"use Illuminate\\Queue\\InteractsWithQueue;\n"
"use Illuminate\\Queue\\SerializesModels;\n\n"
"class RenderVideo implements ShouldQueue\n"
"{\n"
"    use Dispatchable, InteractsWithQueue, Queueable, SerializesModels;\n\n"
"    /**\n"
"     * Create a new job instance.\n"
"     */\n"
"    public function __construct(\n"
"        public Video $video,\n"
"    ) {}\n\n"
"    /**\n"
"     * Execute the job.\n"
"     */\n"
"    public function handle(): void\n"
"    {\n"
"        // ...\n"
"    }\n"
"}\n"
msgstr ""

#: docs/10.x/horizon.md:block 98 (paragraph)
msgid "If this job is queued with an `App\\Models\\Video` instance that has an `id` attribute of `1`, it will automatically receive the tag `App\\Models\\Video:1`. This is because Horizon will search the job's properties for any Eloquent models. If Eloquent models are found, Horizon will intelligently tag the job using the model's class name and primary key:"
msgstr ""

#: docs/10.x/horizon.md:block 99 (code)
msgid "use App\\Jobs\\RenderVideo;\n"
"use App\\Models\\Video;\n\n"
"$video = Video::find(1);\n\n"
"RenderVideo::dispatch($video);\n"
msgstr ""

#: docs/10.x/horizon.md:block 101 (header)
msgid "Manually Tagging Jobs"
msgstr ""

#: docs/10.x/horizon.md:block 102 (paragraph)
msgid "If you would like to manually define the tags for one of your queueable objects, you may define a `tags` method on the class:"
msgstr ""

#: docs/10.x/horizon.md:block 103 (code)
msgid "class RenderVideo implements ShouldQueue\n"
"{\n"
"    /**\n"
"     * Get the tags that should be assigned to the job.\n"
"     *\n"
"     * @return array<int, string>\n"
"     */\n"
"    public function tags(): array\n"
"    {\n"
"        return ['render', 'video:'.$this->video->id];\n"
"    }\n"
"}\n"
msgstr ""

#: docs/10.x/horizon.md:block 105 (header)
msgid "Notifications"
msgstr ""

#: docs/10.x/horizon.md:block 106 (quote)
msgid "**Warning** When configuring Horizon to send Slack or SMS notifications, you should review the [prerequisites for the relevant notification channel](/docs/{{version}}/notifications)."
msgstr ""

#: docs/10.x/horizon.md:block 107 (paragraph)
msgid "If you would like to be notified when one of your queues has a long wait time, you may use the `Horizon::routeMailNotificationsTo`, `Horizon::routeSlackNotificationsTo`, and `Horizon::routeSmsNotificationsTo` methods. You may call these methods from the `boot` method of your application's `App\\Providers\\HorizonServiceProvider`:"
msgstr ""

#: docs/10.x/horizon.md:block 108 (code)
msgid "/**\n"
" * Bootstrap any application services.\n"
" */\n"
"public function boot(): void\n"
"{\n"
"    parent::boot();\n\n"
"    Horizon::routeSmsNotificationsTo('15556667777');\n"
"    Horizon::routeMailNotificationsTo('example@example.com');\n"
"    Horizon::routeSlackNotificationsTo('slack-webhook-url', '#channel');\n"
"}\n"
msgstr ""

#: docs/10.x/horizon.md:block 110 (header)
msgid "Configuring Notification Wait Time Thresholds"
msgstr ""

#: docs/10.x/horizon.md:block 111 (paragraph)
msgid "You may configure how many seconds are considered a \"long wait\" within your application's `config/horizon.php` configuration file. The `waits` configuration option within this file allows you to control the long wait threshold for each connection / queue combination:"
msgstr ""

#: docs/10.x/horizon.md:block 112 (code)
msgid "'waits' => [\n"
"    'redis:default' => 60,\n"
"    'redis:critical,high' => 90,\n"
"],\n"
msgstr ""

#: docs/10.x/horizon.md:block 114 (header)
msgid "Metrics"
msgstr ""

#: docs/10.x/horizon.md:block 115 (paragraph)
msgid "Horizon includes a metrics dashboard which provides information regarding your job and queue wait times and throughput. In order to populate this dashboard, you should configure Horizon's `snapshot` Artisan command to run every five minutes via your application's [scheduler](/docs/{{version}}/scheduling):"
msgstr ""

#: docs/10.x/horizon.md:block 116 (code)
msgid "/**\n"
" * Define the application's command schedule.\n"
" */\n"
"protected function schedule(Schedule $schedule): void\n"
"{\n"
"    $schedule->command('horizon:snapshot')->everyFiveMinutes();\n"
"}\n"
msgstr ""

#: docs/10.x/horizon.md:block 118 (header)
msgid "Deleting Failed Jobs"
msgstr ""

#: docs/10.x/horizon.md:block 119 (paragraph)
msgid "If you would like to delete a failed job, you may use the `horizon:forget` command. The `horizon:forget` command accepts the ID or UUID of the failed job as its only argument:"
msgstr ""

#: docs/10.x/horizon.md:block 120 (code)
msgid "php artisan horizon:forget 5\n"
msgstr ""

#: docs/10.x/horizon.md:block 122 (header)
msgid "Clearing Jobs From Queues"
msgstr ""

#: docs/10.x/horizon.md:block 123 (paragraph)
msgid "If you would like to delete all jobs from your application's default queue, you may do so using the `horizon:clear` Artisan command:"
msgstr ""

#: docs/10.x/horizon.md:block 124 (code)
msgid "php artisan horizon:clear\n"
msgstr ""

#: docs/10.x/horizon.md:block 125 (paragraph)
msgid "You may provide the `queue` option to delete jobs from a specific queue:"
msgstr ""

#: docs/10.x/horizon.md:block 126 (code)
msgid "php artisan horizon:clear --queue=emails\n"
msgstr ""

#: docs/8.x/horizon.md:block 5 (quote)
msgid "{tip} Before digging into Laravel Horizon, you should familiarize yourself with Laravel's base [queue services](/docs/{{version}}/queues). Horizon augments Laravel's queue with additional features that may be confusing if you are not already familiar with the basic queue features offered by Laravel."
msgstr "{tip} 在開始深入了解 Laravel Horizon 前，請先熟悉一下 Laravel 中基本的 [Queue 服務](/docs/{{version}}/queues)。Horizon 以 Laravel 的 Queue 為基礎，加上了很多新功能。如果你還不熟悉 Laravel 中基本的 Queue 功能，那麼可能會不太好理解 Horizon 的一些概念。"

#: docs/8.x/horizon.md:block 11 (quote)
msgid "{note} Laravel Horizon requires that you use [Redis](https://redis.io) to power your queue. Therefore, you should ensure that your queue connection is set to `redis` in your application's `config/queue.php` configuration file."
msgstr "{note} 使用 Laravel Horizon 時必須使用 [Redis](https://redis.io) 來驅動 Queue。因此，請確定有在專案的 `config/queue.php` 設定檔中將 Queue 連線設為 `redis`。"

#: docs/8.x/horizon.md:block 19 (quote)
msgid "{note} Horizon uses a Redis connection named `horizon` internally. This Redis connection name is reserved and should not be assigned to another Redis connection in the `database.php` configuration file or as the value of the `use` option in the `horizon.php` configuration file."
msgstr "{note} Horizon 會在內部使用到命名為 `horizon` 的 Redis 連線。這個 Redis 連線名稱為保留字，不可在 `databade.php` 設定檔中將該名稱指派給其他連線，或是在 `horizon.php` 設定檔中設為 `use` 選項的值。"

#: docs/8.x/horizon.md:block 25 (quote)
msgid "{note} You should ensure that the `environments` portion of your `horizon` configuration file contains an entry for each [environment](/docs/{{version}}/configuration#environment-configuration) on which you plan to run Horizon."
msgstr "{note} 請確保 `horizon` 設定檔中的 `environments` 內有包含所有會執行 Horizon 的 [環境](/docs/{{version}}/configuration#environment-configuration)。"

#: docs/8.x/horizon.md:block 28 (paragraph)
msgid "As you can see in Horizon's default configuration file. Each environment can contain one or more \"supervisors\". By default, the configuration file defines this supervisor as `supervisor-1`; however, you are free to name your supervisors whatever you want. Each supervisor is essentially responsible for \"supervising\" a group of worker processes and takes care of balancing worker processes across queues."
msgstr ""

#: docs/8.x/horizon.md:block 40 (paragraph)
msgid "The `balanceMaxShift` and `balanceCooldown` configuration values to determine how quickly Horizon will scale to meet worker demand. In the example above, a maximum of one new process will be created or destroyed every three seconds. You are free to tweak these values as necessary based on your application's needs."
msgstr ""

#: docs/8.x/horizon.md:block 41 (paragraph)
msgid "When the `balance` option is set to `false`, the default Laravel behavior will be used, which processes queues in the order they are listed in your configuration."
msgstr ""

#: docs/8.x/horizon.md:block 45 (code)
msgid "/**\n"
" * Register the Horizon gate.\n"
" *\n"
" * This gate determines who can access Horizon in non-local environments.\n"
" *\n"
" * @return void\n"
" */\n"
"protected function gate()\n"
"{\n"
"    Gate::define('viewHorizon', function ($user) {\n"
"        return in_array($user->email, [\n"
"            'taylor@laravel.com',\n"
"        ]);\n"
"    });\n"
"}\n"
msgstr ""

#: docs/8.x/horizon.md:block 48 (paragraph)
msgid "Remember that Laravel automatically injects the authenticated user into the gate closure. If your application is providing Horizon security via another method, such as IP restrictions, then your Horizon users may not need to \"login\". Therefore, you will need to change `function ($user)` closure signature above to `function ($user = null)` in order to force Laravel to not require authentication."
msgstr ""

#: docs/8.x/horizon.md:block 53 (paragraph)
msgid "To keep the assets up-to-date and avoid issues in future updates, you may add the `horizon:publish` command to the `post-update-cmd` scripts in your application's `composer.json` file:"
msgstr ""

#: docs/8.x/horizon.md:block 54 (code)
msgid "{\n"
"    \"scripts\": {\n"
"        \"post-update-cmd\": [\n"
"            \"@php artisan horizon:publish --ansi\"\n"
"        ]\n"
"    }\n"
"}\n"
msgstr ""

#: docs/8.x/horizon.md:block 76 (quote)
msgid "{tip} If configuring Supervisor yourself sounds overwhelming, consider using [Laravel Forge](https://forge.laravel.com), which will automatically install and configure Supervisor for your Laravel projects."
msgstr ""

#: docs/8.x/horizon.md:block 81 (quote)
msgid "{note} You should ensure that the value of `stopwaitsecs` is greater than the number of seconds consumed by your longest running job. Otherwise, Supervisor may kill the job before it is finished processing."
msgstr ""

#: docs/8.x/horizon.md:block 86 (quote)
msgid "{tip} For more information on running Supervisor, consult the [Supervisor documentation](http://supervisord.org/index.html)."
msgstr ""

#: docs/8.x/horizon.md:block 90 (code)
msgid "<?php\n\n"
"namespace App\\Jobs;\n\n"
"use App\\Models\\Video;\n"
"use Illuminate\\Bus\\Queueable;\n"
"use Illuminate\\Contracts\\Queue\\ShouldQueue;\n"
"use Illuminate\\Foundation\\Bus\\Dispatchable;\n"
"use Illuminate\\Queue\\InteractsWithQueue;\n"
"use Illuminate\\Queue\\SerializesModels;\n\n"
"class RenderVideo implements ShouldQueue\n"
"{\n"
"    use Dispatchable, InteractsWithQueue, Queueable, SerializesModels;\n\n"
"    /**\n"
"     * The video instance.\n"
"     *\n"
"     * @var \\App\\Models\\Video\n"
"     */\n"
"    public $video;\n\n"
"    /**\n"
"     * Create a new job instance.\n"
"     *\n"
"     * @param  \\App\\Models\\Video  $video\n"
"     * @return void\n"
"     */\n"
"    public function __construct(Video $video)\n"
"    {\n"
"        $this->video = $video;\n"
"    }\n\n"
"    /**\n"
"     * Execute the job.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function handle()\n"
"    {\n"
"        //\n"
"    }\n"
"}\n"
msgstr ""

#: docs/8.x/horizon.md:block 96 (code)
msgid "class RenderVideo implements ShouldQueue\n"
"{\n"
"    /**\n"
"     * Get the tags that should be assigned to the job.\n"
"     *\n"
"     * @return array\n"
"     */\n"
"    public function tags()\n"
"    {\n"
"        return ['render', 'video:'.$this->video->id];\n"
"    }\n"
"}\n"
msgstr ""

#: docs/8.x/horizon.md:block 99 (quote)
msgid "{note} When configuring Horizon to send Slack or SMS notifications, you should review the [prerequisites for the relevant notification channel](/docs/{{version}}/notifications)."
msgstr ""

#: docs/8.x/horizon.md:block 101 (code)
msgid "/**\n"
" * Bootstrap any application services.\n"
" *\n"
" * @return void\n"
" */\n"
"public function boot()\n"
"{\n"
"    parent::boot();\n\n"
"    Horizon::routeSmsNotificationsTo('15556667777');\n"
"    Horizon::routeMailNotificationsTo('example@example.com');\n"
"    Horizon::routeSlackNotificationsTo('slack-webhook-url', '#channel');\n"
"}\n"
msgstr ""

#: docs/8.x/horizon.md:block 109 (code)
msgid "/**\n"
" * Define the application's command schedule.\n"
" *\n"
" * @param  \\Illuminate\\Console\\Scheduling\\Schedule  $schedule\n"
" * @return void\n"
" */\n"
"protected function schedule(Schedule $schedule)\n"
"{\n"
"    $schedule->command('horizon:snapshot')->everyFiveMinutes();\n"
"}\n"
msgstr ""

#: docs/master/horizon.md:block 97 (code)
msgid "<?php\n\n"
"namespace App\\Jobs;\n\n"
"use App\\Models\\Video;\n"
"use Illuminate\\Bus\\Queueable;\n"
"use Illuminate\\Contracts\\Queue\\ShouldQueue;\n"
"use Illuminate\\Foundation\\Bus\\Dispatchable;\n"
"use Illuminate\\Queue\\InteractsWithQueue;\n"
"use Illuminate\\Queue\\SerializesModels;\n\n"
"class RenderVideo implements ShouldQueue\n"
"{\n"
"    use Dispatchable, InteractsWithQueue, Queueable, SerializesModels;\n\n"
"    /**\n"
"     * The video instance.\n"
"     *\n"
"     * @var \\App\\Models\\Video\n"
"     */\n"
"    public $video;\n\n"
"    /**\n"
"     * Create a new job instance.\n"
"     */\n"
"    public function __construct(Video $video)\n"
"    {\n"
"        $this->video = $video;\n"
"    }\n\n"
"    /**\n"
"     * Execute the job.\n"
"     */\n"
"    public function handle(): void\n"
"    {\n"
"        // ...\n"
"    }\n"
"}\n"
msgstr ""

