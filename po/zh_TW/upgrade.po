msgid ""
msgstr ""
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/templates/upgrade.pot\n"
"X-Crowdin-File-ID: 165\n"
"Project-Id-Version: laravel-docs\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"PO-Revision-Date: 2024-11-30 08:39\n"

# H1
#: ./docs/8.x/upgrade.md:1
#: ./docs/9.x/upgrade.md:1
#: ./docs/10.x/upgrade.md:1
#: ./docs/11.x/upgrade.md:1
#: ./docs/master/upgrade.md:1
msgid "Upgrade Guide"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:3
msgid "[Upgrading to 10.0 from 9.x](#upgrade-10.0)"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:3
msgid "[Upgrading To 11.0 From 10.x](#upgrade-11.0)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:3
msgid "[Upgrading To 8.0 From 7.x](#upgrade-8.0)"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:3
msgid "[Upgrading To 9.0 From 8.x](#upgrade-9.0)"
msgstr ""

# P
#: ./docs/master/upgrade.md:3
msgid "[Upgrading To 12.0 From 11.x](#upgrade-12.0)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:5
#: ./docs/9.x/upgrade.md:5
#: ./docs/10.x/upgrade.md:5
#: ./docs/11.x/upgrade.md:5
#: ./docs/master/upgrade.md:5
#~ msgid "<a name=\"high-impact-changes\"></a>"
#~ msgstr ""

# H2
#: ./docs/8.x/upgrade.md:6
#: ./docs/9.x/upgrade.md:6
#: ./docs/10.x/upgrade.md:6
#: ./docs/11.x/upgrade.md:6
#: ./docs/master/upgrade.md:6
msgid "High Impact Changes"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:10
msgid "[Model Factories](#model-factories)"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:10
#: ./docs/10.x/upgrade.md:10
#: ./docs/11.x/upgrade.md:10
msgid "[Updating Dependencies](#updating-dependencies)"
msgstr ""

# P
#: ./docs/master/upgrade.md:10
#: ./docs/master/upgrade.md:19
#: ./docs/master/upgrade.md:28
msgid "TBD"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:11
msgid "[Updating Minimum Stability](#updating-minimum-stability)"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:11
msgid "[Application Structure](#application-structure)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:11
msgid "[Queue `retryAfter` Method](#queue-retry-after-method)"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:11
msgid "[Flysystem 3.x](#flysystem-3)"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:12
msgid "[Floating-Point Types](#floating-point-types)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:12
msgid "[Queue `timeoutAt` Property](#queue-timeout-at-property)"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:12
msgid "[Symfony Mailer](#symfony-mailer)"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:13
msgid "[Modifying Columns](#modifying-columns)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:13
msgid "[Queue `allOnQueue` and `allOnConnection`](#queue-allOnQueue-allOnConnection)"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:14
msgid "[SQLite Minimum Version](#sqlite-minimum-version)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:14
msgid "[Pagination Defaults](#pagination-defaults)"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:15
msgid "[Updating Sanctum](#updating-sanctum)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:15
msgid "[Seeder & Factory Namespaces](#seeder-factory-namespaces)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:19
#: ./docs/9.x/upgrade.md:16
#: ./docs/10.x/upgrade.md:15
#: ./docs/11.x/upgrade.md:19
#: ./docs/master/upgrade.md:14
#~ msgid "<a name=\"medium-impact-changes\"></a>"
#~ msgstr ""

# P
#: ./docs/10.x/upgrade.md:20
msgid "[Database Expressions](#database-expressions)"
msgstr ""

# H2
#: ./docs/8.x/upgrade.md:20
#: ./docs/9.x/upgrade.md:17
#: ./docs/10.x/upgrade.md:16
#: ./docs/11.x/upgrade.md:20
#: ./docs/master/upgrade.md:15
msgid "Medium Impact Changes"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:21
msgid "[Model \"Dates\" Property](#model-dates-property)"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:21
msgid "[Belongs To Many `firstOrNew`, `firstOrCreate`, and `updateOrCreate` methods](#belongs-to-many-first-or-new)"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:22
msgid "[Monolog 3](#monolog-3)"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:22
msgid "[Custom Casts & `null`](#custom-casts-and-null)"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:23
msgid "[Redis Cache Tags](#redis-cache-tags)"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:23
msgid "[Default HTTP Client Timeout](#http-client-default-timeout)"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:24
msgid "[Service Mocking](#service-mocking)"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:24
msgid "[Carbon 3](#carbon-3)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:24
msgid "[PHP 7.3.0 Required](#php-7.3.0-required)"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:24
msgid "[PHP Return Types](#php-return-types)"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:25
msgid "[The Language Directory](#language-directory)"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:25
msgid "[Password Rehashing](#password-rehashing)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:25
msgid "[Failed Jobs Table Batch Support](#failed-jobs-table-batch-support)"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:25
msgid "[Postgres \"Schema\" Configuration](#postgres-schema-configuration)"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:26
msgid "[Per-Second Rate Limiting](#per-second-rate-limiting)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:26
msgid "[Maintenance Mode Updates](#maintenance-mode-updates)"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:26
msgid "[The `assertDeleted` Method](#the-assert-deleted-method)"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:27
msgid "[Spatie Once Package](#spatie-once-package)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:27
msgid "[The `php artisan down --message` Option](#artisan-down-message)"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:27
msgid "[The `lang` Directory](#the-lang-directory)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:28
msgid "[The `assertExactJson` Method](#assert-exact-json-method)"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:28
msgid "[The `password` Rule](#the-password-rule)"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:29
#: ./docs/11.x/upgrade.md:31
#: ./docs/master/upgrade.md:23
#~ msgid "<a name=\"low-impact-changes\"></a>"
#~ msgstr ""

# P
#: ./docs/9.x/upgrade.md:29
msgid "[The `when` / `unless` Methods](#when-and-unless-methods)"
msgstr ""

# H2
#: ./docs/10.x/upgrade.md:30
#: ./docs/11.x/upgrade.md:32
#: ./docs/master/upgrade.md:24
msgid "Low Impact Changes"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:30
msgid "[Unvalidated Array Keys](#unvalidated-array-keys)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:32
#~ msgid "<a name=\"upgrade-8.0\"></a>"
#~ msgstr ""

# P
#: ./docs/master/upgrade.md:32
#~ msgid "<a name=\"upgrade-12.0\"></a>"
#~ msgstr ""

# H2
#: ./docs/8.x/upgrade.md:33
msgid "Upgrading To 8.0 From 7.x"
msgstr ""

# H2
#: ./docs/master/upgrade.md:33
msgid "Upgrading To 12.0 From 11.x"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:34
msgid "[Closure Validation Rule Messages](#closure-validation-rule-messages)"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:34
#~ msgid "<a name=\"upgrade-9.0\"></a>"
#~ msgstr ""

# P
#: ./docs/10.x/upgrade.md:35
msgid "[Form Request `after` Method](#form-request-after-method)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:35
#~ msgid "<a name=\"estimated-upgrade-time-15-minutes\"></a>"
#~ msgstr ""

# H2
#: ./docs/9.x/upgrade.md:35
msgid "Upgrading To 9.0 From 8.x"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:36
msgid "[Public Path Binding](#public-path-binding)"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:36
msgid "[Doctrine DBAL Removal](#doctrine-dbal-removal)"
msgstr ""

# H4
#: ./docs/8.x/upgrade.md:36
#: ./docs/11.x/upgrade.md:49
msgid "Estimated Upgrade Time: 15 Minutes"
msgstr ""

# H4
#: ./docs/master/upgrade.md:36
msgid "Estimated Upgrade Time: ?? Minutes"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:37
msgid "[Query Exception Constructor](#query-exception-constructor)"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:37
msgid "[Eloquent Model `casts` Method](#eloquent-model-casts-method)"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:37
#~ msgid "<a name=\"estimated-upgrade-time-30-minutes\"></a>"
#~ msgstr ""

# P
#: ./docs/10.x/upgrade.md:38
msgid "[Rate Limiter Return Values](#rate-limiter-return-values)"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:38
msgid "[Spatial Types](#spatial-types)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:38
msgid "We attempt to document every possible breaking change. Since some of these breaking changes are in obscure parts of the framework only a portion of these changes may actually affect your application."
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:38
msgid "Estimated Upgrade Time: 30 Minutes"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:39
msgid "[The `Redirect::home` Method](#redirect-home)"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:39
msgid "[The `Enumerable` Contract](#the-enumerable-contract)"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:40
msgid "[The `Bus::dispatchNow` Method](#dispatch-now)"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:40
msgid "[The `UserProvider` Contract](#the-user-provider-contract)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:40
#~ msgid "<a name=\"php-7.3.0-required\"></a>"
#~ msgstr ""

# P
#: ./docs/10.x/upgrade.md:41
msgid "[The `registerPolicies` Method](#register-policies)"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:41
msgid "[The `Authenticatable` Contract](#the-authenticatable-contract)"
msgstr ""

# H3
#: ./docs/8.x/upgrade.md:41
msgid "PHP 7.3.0 Required"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:41
#: ./docs/10.x/upgrade.md:53
#: ./docs/11.x/upgrade.md:52
#: ./docs/master/upgrade.md:39
msgid "We attempt to document every possible breaking change. Since some of these breaking changes are in obscure parts of the framework only a portion of these changes may actually affect your application. Want to save time? You can use [Laravel Shift](https://laravelshift.com/) to help automate your application upgrades."
msgstr ""

# P
#: ./docs/10.x/upgrade.md:42
msgid "[ULID Columns](#ulid-columns)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:43
#: ./docs/8.x/upgrade.md:204
#: ./docs/8.x/upgrade.md:428
#: ./docs/9.x/upgrade.md:195
#: ./docs/9.x/upgrade.md:211
#: ./docs/9.x/upgrade.md:241
#: ./docs/9.x/upgrade.md:428
#: ./docs/9.x/upgrade.md:457
#: ./docs/9.x/upgrade.md:615
#: ./docs/9.x/upgrade.md:654
#: ./docs/9.x/upgrade.md:702
#: ./docs/9.x/upgrade.md:709
#: ./docs/10.x/upgrade.md:132
#: ./docs/10.x/upgrade.md:141
#: ./docs/10.x/upgrade.md:180
#: ./docs/10.x/upgrade.md:208
#: ./docs/10.x/upgrade.md:268
#: ./docs/11.x/upgrade.md:436
#: ./docs/11.x/upgrade.md:501
#: ./docs/11.x/upgrade.md:628
msgid "**Likelihood Of Impact: Medium**"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:45
#~ msgid "<a name=\"upgrade-11.0\"></a>"
#~ msgstr ""

# P
#: ./docs/8.x/upgrade.md:45
msgid "The new minimum PHP version is now 7.3.0."
msgstr ""

# P
#: ./docs/10.x/upgrade.md:46
#~ msgid "<a name=\"upgrade-10.0\"></a>"
#~ msgstr ""

# H2
#: ./docs/11.x/upgrade.md:46
msgid "Upgrading To 11.0 From 10.x"
msgstr ""

# H2
#: ./docs/10.x/upgrade.md:47
msgid "Upgrading to 10.0 from 9.x"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:47
#: ./docs/9.x/upgrade.md:43
#: ./docs/10.x/upgrade.md:55
#: ./docs/11.x/upgrade.md:54
#: ./docs/master/upgrade.md:41
#~ msgid "<a name=\"updating-dependencies\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/upgrade.md:48
#: ./docs/9.x/upgrade.md:44
#: ./docs/10.x/upgrade.md:56
#: ./docs/11.x/upgrade.md:55
#: ./docs/master/upgrade.md:42
msgid "Updating Dependencies"
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:48
msgid "PHP 8.0.2 Required"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:49
#: ./docs/11.x/upgrade.md:48
#: ./docs/master/upgrade.md:35
#~ msgid "<a name=\"estimated-upgrade-time-??-minutes\"></a>"
#~ msgstr ""

# H4
#: ./docs/10.x/upgrade.md:50
msgid "Estimated Upgrade Time: 10 Minutes"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:50
msgid "Update the following dependencies in your `composer.json` file:"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:50
msgid "Laravel now requires PHP 8.0.2 or greater."
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:52
#: ./docs/10.x/upgrade.md:68
#: ./docs/11.x/upgrade.md:67
#: ./docs/master/upgrade.md:46
msgid "Composer Dependencies"
msgstr ""

# P
#: ./docs/master/upgrade.md:52
msgid "`laravel/framework` to `^12.0`"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:54
msgid "`guzzlehttp/guzzle` to `^7.0.1`"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:54
#: ./docs/10.x/upgrade.md:70
#: ./docs/11.x/upgrade.md:69
#: ./docs/master/upgrade.md:48
msgid "You should update the following dependencies in your application's `composer.json` file:"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:55
msgid "`facade/ignition` to `^2.3.6`"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:56
msgid "`laravel/framework` to `^8.0`"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:57
msgid "`laravel/ui` to `^3.0`"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:58
msgid "`nunomaduro/collision` to `^5.0`"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:58
msgid "`laravel/framework` to `^9.0`"
msgstr ""

# H4
#: ./docs/11.x/upgrade.md:59
msgid "PHP 8.2.0 Required"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:59
msgid "`phpunit/phpunit` to `^9.0`"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:59
msgid "`nunomaduro/collision` to `^6.1`"
msgstr ""

# P
#: ./docs/master/upgrade.md:59
msgid "We also encourage you to view the changes in the `laravel/laravel` [GitHub repository](https://github.com/laravel/laravel). While many of these changes are not required, you may wish to keep these files in sync with your application. Some of these changes will be covered in this upgrade guide, but others, such as changes to configuration files or comments, will not be. You can easily view the changes with the [GitHub comparison tool](https://github.com/laravel/laravel/compare/11.x...master) and choose which updates are important to you."
msgstr ""

# H4
#: ./docs/10.x/upgrade.md:60
msgid "PHP 8.1.0 Required"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:61
msgid "Laravel now requires PHP 8.2.0 or greater."
msgstr ""

# P
#: ./docs/10.x/upgrade.md:62
msgid "Laravel now requires PHP 8.1.0 or greater."
msgstr ""

# H4
#: ./docs/11.x/upgrade.md:63
msgid "curl 7.34.0 Required"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:63
msgid "The following first-party packages have new major releases to support Laravel 8. If applicable, you should read their individual upgrade guides before upgrading:"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:63
msgid "In addition, please replace `facade/ignition` with `\"spatie/laravel-ignition\": \"^1.0\"` and `pusher/pusher-php-server` (if applicable) with `\"pusher/pusher-php-server\": \"^5.0\"` in your application's `composer.json` file."
msgstr ""

# H4
#: ./docs/10.x/upgrade.md:64
msgid "Composer 2.2.0 Required"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:65
msgid "Laravel's HTTP client now requires curl 7.34.0 or greater."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:65
msgid "Furthermore, the following first-party packages have received new major releases to support Laravel 9.x. If applicable, you should read their individual upgrade guides before upgrading:"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:66
msgid "Laravel now requires [Composer](https://getcomposer.org) 2.2.0 or greater."
msgstr ""

# P
#: ./docs/8.x/upgrade.md:67
msgid "[Horizon v5.0](https://github.com/laravel/horizon/blob/master/UPGRADE.md)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:68
msgid "[Passport v10.0](https://github.com/laravel/passport/blob/master/UPGRADE.md)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:69
msgid "[Socialite v5.0](https://github.com/laravel/socialite/blob/master/UPGRADE.md)"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:69
msgid "[Vonage Notification Channel (v3.0)](https://github.com/laravel/vonage-notification-channel/blob/3.x/UPGRADE.md) (Replaces Nexmo)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:70
msgid "[Telescope v4.0](https://github.com/laravel/telescope/blob/master/UPGRADE.md)"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:73
msgid "`laravel/framework` to `^11.0`"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:73
msgid "Finally, examine any other third-party packages consumed by your application and verify you are using the proper version for Laravel 9 support."
msgstr ""

# P
#: ./docs/10.x/upgrade.md:74
msgid "`laravel/framework` to `^10.0`"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:74
msgid "`nunomaduro/collision` to `^8.1`"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:74
msgid "In addition, the Laravel installer has been updated to support `composer create-project` and Laravel Jetstream. Any installer older than 4.0 will cease to work after October 2020. You should upgrade your global installer to `^4.0` as soon as possible."
msgstr ""

# P
#: ./docs/10.x/upgrade.md:75
msgid "`laravel/sanctum` to `^3.2`"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:75
msgid "`laravel/breeze` to `^2.0` (If installed)"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:75
#~ msgid "<a name=\"php-return-types\"></a>"
#~ msgstr ""

# P
#: ./docs/10.x/upgrade.md:76
msgid "`doctrine/dbal` to `^3.0`"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:76
msgid "`laravel/cashier` to `^15.0` (If installed)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:76
msgid "Finally, examine any other third-party packages consumed by your application and verify you are using the proper version for Laravel 8 support."
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:76
msgid "PHP Return Types"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:77
msgid "`spatie/laravel-ignition` to `^2.0`"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:77
msgid "`laravel/dusk` to `^8.0` (If installed)"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:78
msgid "`laravel/passport` to `^11.0` ([Upgrade Guide](https://github.com/laravel/passport/blob/11.x/UPGRADE.md))"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:78
msgid "`laravel/jetstream` to `^5.0` (If installed)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:78
#: ./docs/11.x/upgrade.md:209
#~ msgid "<a name=\"collections\"></a>"
#~ msgstr ""

# P
#: ./docs/9.x/upgrade.md:78
msgid "PHP is beginning to transition to requiring return type definitions on PHP methods such as `offsetGet`, `offsetSet`, etc. In light of this, Laravel 9 has implemented these return types in its code base. Typically, this should not affect user written code; however, if you are overriding one of these methods by extending Laravel's core classes, you will need to add these return types to your own application or package code:"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:79
msgid "`laravel/ui` to `^4.0`"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:79
msgid "`laravel/octane` to `^2.3` (If installed)"
msgstr ""

# H3
#: ./docs/8.x/upgrade.md:79
#: ./docs/9.x/upgrade.md:152
#: ./docs/11.x/upgrade.md:210
msgid "Collections"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:80
msgid "`laravel/passport` to `^12.0` (If installed)"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:81
msgid "`laravel/sanctum` to `^4.0` (If installed)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:81
#~ msgid "<a name=\"the-isset-method\"></a>"
#~ msgstr ""

# P
#: ./docs/11.x/upgrade.md:82
msgid "`laravel/scout` to `^10.0` (If installed)"
msgstr ""

# H4
#: ./docs/8.x/upgrade.md:82
msgid "The `isset` Method"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:82
msgid "`count(): int`"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:83
msgid "If you are upgrading to Sanctum 3.x from the 2.x release series, please consult the [Sanctum upgrade guide](https://github.com/laravel/sanctum/blob/3.x/UPGRADE.md)."
msgstr ""

# P
#: ./docs/11.x/upgrade.md:83
msgid "`laravel/spark-stripe` to `^5.0` (If installed)"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:83
msgid "`getIterator(): Traversable`"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:84
msgid "`laravel/telescope` to `^5.0` (If installed)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:84
#: ./docs/8.x/upgrade.md:153
#: ./docs/8.x/upgrade.md:162
#: ./docs/8.x/upgrade.md:172
#: ./docs/8.x/upgrade.md:179
#: ./docs/8.x/upgrade.md:211
#: ./docs/8.x/upgrade.md:218
#: ./docs/8.x/upgrade.md:225
#: ./docs/8.x/upgrade.md:235
#: ./docs/8.x/upgrade.md:392
#: ./docs/8.x/upgrade.md:402
#: ./docs/8.x/upgrade.md:421
#: ./docs/8.x/upgrade.md:438
#: ./docs/9.x/upgrade.md:112
#: ./docs/9.x/upgrade.md:124
#: ./docs/9.x/upgrade.md:142
#: ./docs/9.x/upgrade.md:148
#: ./docs/9.x/upgrade.md:156
#: ./docs/9.x/upgrade.md:202
#: ./docs/9.x/upgrade.md:265
#: ./docs/9.x/upgrade.md:277
#: ./docs/9.x/upgrade.md:289
#: ./docs/9.x/upgrade.md:309
#: ./docs/9.x/upgrade.md:315
#: ./docs/9.x/upgrade.md:467
#: ./docs/9.x/upgrade.md:473
#: ./docs/9.x/upgrade.md:625
#: ./docs/9.x/upgrade.md:631
#: ./docs/9.x/upgrade.md:643
#: ./docs/9.x/upgrade.md:660
#: ./docs/9.x/upgrade.md:691
#: ./docs/10.x/upgrade.md:110
#: ./docs/10.x/upgrade.md:123
#: ./docs/10.x/upgrade.md:165
#: ./docs/10.x/upgrade.md:219
#: ./docs/10.x/upgrade.md:226
#: ./docs/10.x/upgrade.md:242
#: ./docs/11.x/upgrade.md:129
#: ./docs/11.x/upgrade.md:144
#: ./docs/11.x/upgrade.md:157
#: ./docs/11.x/upgrade.md:215
#: ./docs/11.x/upgrade.md:236
#: ./docs/11.x/upgrade.md:351
#: ./docs/11.x/upgrade.md:372
msgid "**Likelihood Of Impact: Low**"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:84
msgid "`getSize(): int`"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:85
msgid "Furthermore, if you wish to use [PHPUnit 10](https://phpunit.de/announcements/phpunit-10.html), you should delete the `processUncoveredFiles` attribute from the `<coverage>` section of your application's `phpunit.xml` configuration file. Then, update the following dependencies in your application's `composer.json` file:"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:85
msgid "`livewire/livewire` to `^3.4` (If installed)"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:85
msgid "`jsonSerialize(): array`"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:86
msgid "`inertiajs/inertia-laravel` to `^1.0` (If installed)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:86
msgid "To be consistent with typical PHP behavior, the `offsetExists` method of `Illuminate\\Support\\Collection` has been updated to use `isset` instead of `array_key_exists`. This may present a change in behavior when dealing with collection items that have a value of `null`:"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:86
msgid "`offsetExists($key): bool`"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:87
msgid "`offsetGet($key): mixed`"
msgstr ""

# CODE
#: ./docs/8.x/upgrade.md:88
msgid "$collection = collect([null]);\n\n"
"// Laravel 7.x - true\n"
"isset($collection[0]);\n\n"
"// Laravel 8.x - false\n"
"isset($collection[0]);"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:88
msgid "`offsetSet($key, $value): void`"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:89
msgid "`nunomaduro/collision` to `^7.0`"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:89
msgid "`offsetUnset($key): void`"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:90
msgid "`phpunit/phpunit` to `^10.0`"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:90
msgid "If your application is using Laravel Cashier Stripe, Passport, Sanctum, Spark Stripe, or Telescope, you will need to publish their migrations to your application. Cashier Stripe, Passport, Sanctum, Spark Stripe, and Telescope **no longer automatically load migrations from their own migrations** directory. Therefore, you should run the following command to publish their migrations to your application:"
msgstr ""

# CODE: bash
#: ./docs/11.x/upgrade.md:92
msgid "php artisan vendor:publish --tag=cashier-migrations\n"
"php artisan vendor:publish --tag=passport-migrations\n"
"php artisan vendor:publish --tag=sanctum-migrations\n"
"php artisan vendor:publish --tag=spark-migrations\n"
"php artisan vendor:publish --tag=telescope-migrations"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:93
msgid "In addition, return types were added to methods implementing PHP's `SessionHandlerInterface`. Again, it is unlikely that this change affects your own application or package code:"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:94
msgid "Finally, examine any other third-party packages consumed by your application and verify you are using the proper version for Laravel 10 support."
msgstr ""

# P
#: ./docs/10.x/upgrade.md:96
#~ msgid "<a name=\"updating-minimum-stability\"></a>"
#~ msgstr ""

# P
#: ./docs/8.x/upgrade.md:96
#: ./docs/11.x/upgrade.md:223
#~ msgid "<a name=\"database\"></a>"
#~ msgstr ""

# H4
#: ./docs/10.x/upgrade.md:97
msgid "Minimum Stability"
msgstr ""

# H3
#: ./docs/8.x/upgrade.md:97
#: ./docs/9.x/upgrade.md:190
#: ./docs/10.x/upgrade.md:136
#: ./docs/11.x/upgrade.md:224
msgid "Database"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:97
msgid "`open($savePath, $sessionName): bool`"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:98
msgid "`close(): bool`"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:99
msgid "You should update the `minimum-stability` setting in your application's `composer.json` file to `stable`. Or, since the default value of `minimum-stability` is `stable`, you may delete this setting from your application's `composer.json` file:"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:99
#~ msgid "<a name=\"seeder-factory-namespaces\"></a>"
#~ msgstr ""

# P
#: ./docs/9.x/upgrade.md:99
msgid "`read($sessionId): string|false`"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:100
msgid "In addition, you should review the upgrade guides for each of these packages to ensure you are aware of any additional breaking changes:"
msgstr ""

# H4
#: ./docs/8.x/upgrade.md:100
msgid "Seeder & Factory Namespaces"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:100
msgid "`write($sessionId, $data): bool`"
msgstr ""

# CODE: json
#: ./docs/10.x/upgrade.md:101
msgid "\"minimum-stability\": \"stable\","
msgstr ""

# P
#: ./docs/9.x/upgrade.md:101
msgid "`destroy($sessionId): bool`"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:102
msgid "[Laravel Cashier Stripe](#cashier-stripe)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:102
#: ./docs/8.x/upgrade.md:144
#: ./docs/8.x/upgrade.md:245
#: ./docs/8.x/upgrade.md:259
#: ./docs/8.x/upgrade.md:266
#: ./docs/8.x/upgrade.md:273
#: ./docs/9.x/upgrade.md:46
#: ./docs/9.x/upgrade.md:322
#: ./docs/9.x/upgrade.md:480
#: ./docs/10.x/upgrade.md:58
#: ./docs/11.x/upgrade.md:57
#: ./docs/11.x/upgrade.md:229
#: ./docs/11.x/upgrade.md:243
#: ./docs/11.x/upgrade.md:297
#: ./docs/11.x/upgrade.md:532
#: ./docs/11.x/upgrade.md:550
#: ./docs/11.x/upgrade.md:568
#: ./docs/11.x/upgrade.md:591
#: ./docs/11.x/upgrade.md:615
#: ./docs/master/upgrade.md:44
msgid "**Likelihood Of Impact: High**"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:102
msgid "`gc($lifetime): int`"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:103
msgid "[Laravel Passport](#passport)"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:104
msgid "[Laravel Sanctum](#sanctum)"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:104
msgid "Seeders and factories are now namespaced. To accommodate for these changes, add the `Database\\Seeders` namespace to your seeder classes. In addition, the previous `database/seeds` directory should be renamed to `database/seeders`:"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:105
msgid "[Laravel Spark Stripe](#spark-stripe)"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:106
msgid "[Laravel Telescope](#telescope)"
msgstr ""

# CODE
#: ./docs/8.x/upgrade.md:106
msgid "<?php\n\n"
"namespace Database\\Seeders;\n\n"
"use App\\Models\\User;\n"
"use Illuminate\\Database\\Seeder;\n\n"
"class DatabaseSeeder extends Seeder\n"
"{\n"
"    /**\n"
"     * Seed the application's database.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function run()\n"
"    {\n"
"        ...\n"
"    }\n"
"}"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:106
#~ msgid "<a name=\"application\"></a>"
#~ msgstr ""

# P
#: ./docs/10.x/upgrade.md:107
#~ msgid "<a name=\"public-path-binding\"></a>"
#~ msgstr ""

# H3
#: ./docs/9.x/upgrade.md:107
#: ./docs/10.x/upgrade.md:105
msgid "Application"
msgstr ""

# H4
#: ./docs/10.x/upgrade.md:108
msgid "Public Path Binding"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:108
msgid "If you have manually installed the Laravel installer, you should update the installer via Composer:"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:109
#~ msgid "<a name=\"the-application-contract\"></a>"
#~ msgstr ""

# CODE: bash
#: ./docs/11.x/upgrade.md:110
msgid "composer global require laravel/installer:^5.6"
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:110
msgid "The `Application` Contract"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:112
msgid "If your application is customizing its \"public path\" by binding `path.public` into the container, you should instead update your code to invoke the `usePublicPath` method offered by the `Illuminate\\Foundation\\Application` object:"
msgstr ""

# CODE: php
#: ./docs/10.x/upgrade.md:114
msgid "app()->usePublicPath(__DIR__.'/public');"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:114
msgid "Finally, you may remove the `doctrine/dbal` Composer dependency if you have previously added it to your application, as Laravel is no longer dependent on this package."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:114
msgid "The `storagePath` method of the `Illuminate\\Contracts\\Foundation\\Application` interface has been updated to accept a `$path` argument. If you are implementing this interface you should update your implementation accordingly:"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:116
#~ msgid "<a name=\"application-structure\"></a>"
#~ msgstr ""

# CODE
#: ./docs/9.x/upgrade.md:116
msgid "public function storagePath($path = '');"
msgstr ""

# H3
#: ./docs/11.x/upgrade.md:117
msgid "Application Structure"
msgstr ""

# H3
#: ./docs/10.x/upgrade.md:118
msgid "Authorization"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:118
msgid "Similarly, the `langPath` method of the `Illuminate\\Foundation\\Application` class has been updated to accept a `$path` argument:"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:119
msgid "Laravel 11 introduces a new default application structure with fewer default files. Namely, new Laravel applications contain fewer service providers, middleware, and configuration files."
msgstr ""

# P
#: ./docs/10.x/upgrade.md:120
#~ msgid "<a name=\"register-policies\"></a>"
#~ msgstr ""

# CODE
#: ./docs/9.x/upgrade.md:120
msgid "public function langPath($path = '');"
msgstr ""

# H3
#: ./docs/10.x/upgrade.md:121
msgid "The `registerPolicies` Method"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:121
msgid "However, we do **not recommend** that Laravel 10 applications upgrading to Laravel 11 attempt to migrate their application structure, as Laravel 11 has been carefully tuned to also support the Laravel 10 application structure."
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:122
msgid "Exception Handler `ignore` Method"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:123
#~ msgid "<a name=\"authentication\"></a>"
#~ msgstr ""

# H3
#: ./docs/11.x/upgrade.md:124
msgid "Authentication"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:125
msgid "The `registerPolicies` method of the `AuthServiceProvider` is now invoked automatically by the framework. Therefore, you may remove the call to this method from the `boot` method of your application's `AuthServiceProvider`."
msgstr ""

# P
#: ./docs/11.x/upgrade.md:126
#~ msgid "<a name=\"password-rehashing\"></a>"
#~ msgstr ""

# P
#: ./docs/8.x/upgrade.md:126
msgid "If you are choosing to use the `laravel/legacy-factories` package, no changes to your factory classes are required. However, if you are upgrading your factories, you should add the `Database\\Factories` namespace to those classes."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:126
msgid "The exception handler's `ignore` method is now `public` instead of `protected`. This method is not included in the default application skeleton; however, if you have manually defined this method you should update its visibility to `public`:"
msgstr ""

# H3
#: ./docs/10.x/upgrade.md:127
#: ./docs/11.x/upgrade.md:200
msgid "Cache"
msgstr ""

# H4
#: ./docs/11.x/upgrade.md:127
msgid "Password Rehashing"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:128
msgid "Next, in your `composer.json` file, remove `classmap` block from the `autoload` section and add the new namespaced class directory mappings:"
msgstr ""

# CODE: php
#: ./docs/9.x/upgrade.md:128
msgid "public function ignore(string $class);"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:129
#~ msgid "<a name=\"redis-cache-tags\"></a>"
#~ msgstr ""

# H4
#: ./docs/10.x/upgrade.md:130
msgid "Redis Cache Tags"
msgstr ""

# CODE
#: ./docs/8.x/upgrade.md:130
msgid "\"autoload\": {\n"
"    \"psr-4\": {\n"
"        \"App\\\\\": \"app/\",\n"
"        \"Database\\\\Factories\\\\\": \"database/factories/\",\n"
"        \"Database\\\\Seeders\\\\\": \"database/seeders/\"\n"
"    }\n"
"},"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:131
msgid "Laravel 11 will automatically rehash your user's passwords during authentication if your hashing algorithm's \"work factor\" has been updated since the password was last hashed."
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:132
msgid "Exception Handler Contract Binding"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:133
msgid "Typically, this should not disrupt your application; however, if your `User` model's \"password\" field has a name other than `password`, you should specify the field's name via the model's `authPasswordName` property:"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:134
msgid "Usage of `Cache::tags()` is only recommended for applications using Memcached. If you are using Redis as your application's cache driver, you should consider moving to Memcached or using an alternative solution."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:134
#: ./docs/9.x/upgrade.md:176
#: ./docs/9.x/upgrade.md:182
#: ./docs/9.x/upgrade.md:414
#: ./docs/9.x/upgrade.md:421
#: ./docs/10.x/upgrade.md:158
#: ./docs/10.x/upgrade.md:255
#: ./docs/10.x/upgrade.md:279
#: ./docs/10.x/upgrade.md:299
#: ./docs/10.x/upgrade.md:315
#: ./docs/11.x/upgrade.md:175
#: ./docs/11.x/upgrade.md:188
#: ./docs/11.x/upgrade.md:205
#: ./docs/11.x/upgrade.md:324
#: ./docs/11.x/upgrade.md:402
#: ./docs/11.x/upgrade.md:415
#: ./docs/11.x/upgrade.md:422
#: ./docs/11.x/upgrade.md:446
#: ./docs/11.x/upgrade.md:460
#: ./docs/11.x/upgrade.md:478
#: ./docs/11.x/upgrade.md:489
msgid "**Likelihood Of Impact: Very Low**"
msgstr ""

# CODE
#: ./docs/11.x/upgrade.md:135
msgid "protected $authPasswordName = 'custom_password_field';"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:136
msgid "Previously, in order to override the default Laravel exception handler, custom implementations were bound into the service container using the `\\App\\Exceptions\\Handler::class` type. However, you should now bind custom implementations using the `\\Illuminate\\Contracts\\Debug\\ExceptionHandler::class` type."
msgstr ""

# P
#: ./docs/11.x/upgrade.md:137
msgid "Alternatively, you may disable password rehashing by adding the `rehash_on_login` option to your application's `config/hashing.php` configuration file:"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:138
#~ msgid "<a name=\"database-expressions\"></a>"
#~ msgstr ""

# P
#: ./docs/8.x/upgrade.md:138
#~ msgid "<a name=\"eloquent\"></a>"
#~ msgstr ""

# H3
#: ./docs/9.x/upgrade.md:138
msgid "Blade"
msgstr ""

# H4
#: ./docs/10.x/upgrade.md:139
msgid "Database Expressions"
msgstr ""

# CODE
#: ./docs/11.x/upgrade.md:139
msgid "'rehash_on_login' => false,"
msgstr ""

# H3
#: ./docs/8.x/upgrade.md:139
#: ./docs/9.x/upgrade.md:206
#: ./docs/10.x/upgrade.md:175
msgid "Eloquent"
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:140
msgid "Lazy Collections & The `$loop` Variable"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:141
#~ msgid "<a name=\"the-user-provider-contract\"></a>"
#~ msgstr ""

# P
#: ./docs/8.x/upgrade.md:141
#~ msgid "<a name=\"model-factories\"></a>"
#~ msgstr ""

# H4
#: ./docs/11.x/upgrade.md:142
msgid "The `UserProvider` Contract"
msgstr ""

# H4
#: ./docs/8.x/upgrade.md:142
msgid "Model Factories"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:143
msgid "Database \"expressions\" (typically generated via `DB::raw`) have been rewritten in Laravel 10.x to offer additional functionality in the future. Notably, the grammar's raw string value must now be retrieved via the expression's `getValue(Grammar $grammar)` method. Casting an expression to a string using `(string)` is no longer supported."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:144
msgid "When iterating over a `LazyCollection` instance within a Blade template, the `$loop` variable is no longer available, as accessing this variable causes the entire `LazyCollection` to be loaded into memory, thus rendering the usage of lazy collections pointless in this scenario."
msgstr ""

# P
#: ./docs/10.x/upgrade.md:145
msgid "**Typically, this does not affect end-user applications**; however, if your application is manually casting database expressions to strings using `(string)` or invoking the `__toString` method on the expression directly, you should update your code to invoke the `getValue` method instead:"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:146
msgid "The `Illuminate\\Contracts\\Auth\\UserProvider` contract has received a new `rehashPasswordIfRequired` method. This method is responsible for re-hashing and storing the user's password in storage when the application's hashing algorithm work factor has changed."
msgstr ""

# P
#: ./docs/8.x/upgrade.md:146
msgid "Laravel's [model factories](/docs/{{version}}/database-testing#defining-model-factories) feature has been totally rewritten to support classes and is not compatible with Laravel 7.x style factories. However, to ease the upgrade process, a new `laravel/legacy-factories` package has been created to continue using your existing factories with Laravel 8.x. You may install this package via Composer:"
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:146
msgid "Checked / Disabled / Selected Blade Directives"
msgstr ""

# CODE: php
#: ./docs/10.x/upgrade.md:147
msgid "use Illuminate\\Support\\Facades\\DB;\n\n"
"$expression = DB::raw('select 1');\n\n"
"$string = $expression->getValue(DB::connection()->getQueryGrammar());"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:148
msgid "If your application or package defines a class that implements this interface, you should add the new `rehashPasswordIfRequired` method to your implementation. A reference implementation can be found within the `Illuminate\\Auth\\EloquentUserProvider` class:"
msgstr ""

# CODE
#: ./docs/8.x/upgrade.md:148
msgid "composer require laravel/legacy-factories"
msgstr ""

# CODE: php
#: ./docs/11.x/upgrade.md:150
msgid "public function rehashPasswordIfRequired(Authenticatable $user, array $credentials, bool $force = false);"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:150
#~ msgid "<a name=\"the-castable-interface\"></a>"
#~ msgstr ""

# P
#: ./docs/9.x/upgrade.md:150
msgid "The new `@checked`, `@disabled`, and `@selected` Blade directives may conflict with Vue events of the same name. You may use `@@` to escape the directives and avoid this conflict: `@@selected`."
msgstr ""

# H4
#: ./docs/8.x/upgrade.md:151
msgid "The `Castable` Interface"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:154
#~ msgid "<a name=\"the-authenticatable-contract\"></a>"
#~ msgstr ""

# H4
#: ./docs/9.x/upgrade.md:154
#: ./docs/11.x/upgrade.md:213
msgid "The `Enumerable` Contract"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:155
#~ msgid "<a name=\"query-exception-constructor\"></a>"
#~ msgstr ""

# H4
#: ./docs/11.x/upgrade.md:155
msgid "The `Authenticatable` Contract"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:155
msgid "The `castUsing` method of the `Castable` interface has been updated to accept an array of arguments. If you are implementing this interface you should update your implementation accordingly:"
msgstr ""

# H4
#: ./docs/10.x/upgrade.md:156
msgid "Query Exception Constructor"
msgstr ""

# CODE
#: ./docs/8.x/upgrade.md:157
msgid "public static function castUsing(array $arguments);"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:158
msgid "The `Illuminate\\Support\\Enumerable` contract now defines a `sole` method. If you are manually implementing this interface, you should update your implementation to reflect this new method:"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:159
msgid "The `Illuminate\\Contracts\\Auth\\Authenticatable` contract has received a new `getAuthPasswordName` method. This method is responsible for returning the name of your authenticatable entity's password column."
msgstr ""

# P
#: ./docs/8.x/upgrade.md:159
#~ msgid "<a name=\"increment-decrement-events\"></a>"
#~ msgstr ""

# P
#: ./docs/10.x/upgrade.md:160
msgid "The `Illuminate\\Database\\QueryException` constructor now accepts a string connection name as its first argument. If your application is manually throwing this exception, you should adjust your code accordingly."
msgstr ""

# H4
#: ./docs/8.x/upgrade.md:160
msgid "Increment / Decrement Events"
msgstr ""

# CODE: php
#: ./docs/9.x/upgrade.md:160
msgid "public function sole($key = null, $operator = null, $value = null);"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:161
msgid "If your application or package defines a class that implements this interface, you should add the new `getAuthPasswordName` method to your implementation:"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:162
#~ msgid "<a name=\"ulid-columns\"></a>"
#~ msgstr ""

# H4
#: ./docs/10.x/upgrade.md:163
msgid "ULID Columns"
msgstr ""

# CODE: php
#: ./docs/11.x/upgrade.md:163
msgid "public function getAuthPasswordName()\n"
"{\n"
"    return 'password';\n"
"}"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:164
msgid "Proper \"update\" and \"save\" related model events will now be dispatched when executing the `increment` or `decrement` methods on Eloquent model instances."
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:164
msgid "The `reduceWithKeys` Method"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:166
#~ msgid "<a name=\"events\"></a>"
#~ msgstr ""

# P
#: ./docs/9.x/upgrade.md:166
msgid "The `reduceWithKeys` method has been removed as the `reduce` method provides the same functionality. You may simply update your code to call `reduce` instead of `reduceWithKeys`."
msgstr ""

# P
#: ./docs/10.x/upgrade.md:167
msgid "When migrations invoke the `ulid` method without any arguments, the column will now be named `ulid`. In previous releases of Laravel, invoking this method without any arguments created a column erroneously named `uuid`:"
msgstr ""

# H3
#: ./docs/8.x/upgrade.md:167
msgid "Events"
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:168
msgid "The `reduceMany` Method"
msgstr ""

# CODE
#: ./docs/10.x/upgrade.md:169
msgid "$table->ulid();"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:169
#~ msgid "<a name=\"the-event-service-provider-class\"></a>"
#~ msgstr ""

# P
#: ./docs/11.x/upgrade.md:170
msgid "The default `User` model included with Laravel receives this method automatically since the method is included within the `Illuminate\\Auth\\Authenticatable` trait."
msgstr ""

# H4
#: ./docs/8.x/upgrade.md:170
msgid "The `EventServiceProvider` Class"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:170
msgid "The `reduceMany` method has been renamed to `reduceSpread` for naming consistency with other similar methods."
msgstr ""

# P
#: ./docs/10.x/upgrade.md:171
msgid "To explicitly specify a column name when invoking the `ulid` method, you may pass the column name to the method:"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:172
#~ msgid "<a name=\"the-authentication-exception-class\"></a>"
#~ msgstr ""

# H3
#: ./docs/9.x/upgrade.md:172
msgid "Container"
msgstr ""

# CODE
#: ./docs/10.x/upgrade.md:173
msgid "$table->ulid('ulid');"
msgstr ""

# H4
#: ./docs/11.x/upgrade.md:173
msgid "The `AuthenticationException` Class"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:174
msgid "If your `App\\Providers\\EventServiceProvider` class contains a `register` function, you should ensure that you call `parent::register` at the beginning of this method. Otherwise, your application's events will not be registered."
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:174
msgid "The `Container` Contract"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:176
#~ msgid "<a name=\"the-dispatcher-contract\"></a>"
#~ msgstr ""

# P
#: ./docs/10.x/upgrade.md:177
#~ msgid "<a name=\"model-dates-property\"></a>"
#~ msgstr ""

# P
#: ./docs/11.x/upgrade.md:177
msgid "The `redirectTo` method of the `Illuminate\\Auth\\AuthenticationException` class now requires an `Illuminate\\Http\\Request` instance as its first argument. If you are manually catching this exception and calling the `redirectTo` method, you should update your code accordingly:"
msgstr ""

# H4
#: ./docs/8.x/upgrade.md:177
msgid "The `Dispatcher` Contract"
msgstr ""

# H4
#: ./docs/10.x/upgrade.md:178
msgid "Model \"Dates\" Property"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:178
msgid "The `Illuminate\\Contracts\\Container\\Container` contract has received two method definitions: `scoped` and `scopedIf`. If you are manually implementing this contract, you should update your implementation to reflect these new methods."
msgstr ""

# CODE: php
#: ./docs/11.x/upgrade.md:179
msgid "if ($e instanceof AuthenticationException) {\n"
"    $path = $e->redirectTo($request);\n"
"}"
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:180
msgid "The `ContextualBindingBuilder` Contract"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:181
msgid "The `listen` method of the `Illuminate\\Contracts\\Events\\Dispatcher` contract has been updated to make the `$listener` property optional. This change was made to support automatic detection of handled event types via reflection. If you are manually implementing this interface, you should update your implementation accordingly:"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:182
msgid "The Eloquent model's deprecated `$dates` property has been removed. Your application should now use the `$casts` property:"
msgstr ""

# CODE
#: ./docs/8.x/upgrade.md:183
msgid "public function listen($events, $listener = null);"
msgstr ""

# CODE: php
#: ./docs/10.x/upgrade.md:184
msgid "protected $casts = [\n"
"    'deployed_at' => 'datetime',\n"
"];"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:184
msgid "The `Illuminate\\Contracts\\Container\\ContextualBindingBuilder` contract now defines a `giveConfig` method. If you are manually implementing this interface, you should update your implementation to reflect this new method:"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:185
#~ msgid "<a name=\"email-verification-notification-on-registration\"></a>"
#~ msgstr ""

# P
#: ./docs/8.x/upgrade.md:185
#~ msgid "<a name=\"framework\"></a>"
#~ msgstr ""

# H4
#: ./docs/11.x/upgrade.md:186
msgid "Email Verification Notification on Registration"
msgstr ""

# H3
#: ./docs/8.x/upgrade.md:186
msgid "Framework"
msgstr ""

# CODE: php
#: ./docs/9.x/upgrade.md:186
msgid "public function giveConfig($key, $default = null);"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:188
#~ msgid "<a name=\"maintenance-mode-updates\"></a>"
#~ msgstr ""

# H4
#: ./docs/8.x/upgrade.md:189
msgid "Maintenance Mode Updates"
msgstr ""

# H3
#: ./docs/10.x/upgrade.md:190
msgid "Localization"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:190
msgid "The `SendEmailVerificationNotification` listener is now automatically registered for the `Registered` event if it is not already registered by your application's `EventServiceProvider`. If your application's `EventServiceProvider` does not register this listener and you do not want Laravel to automatically register it for you, you should define an empty `configureEmailVerification` method in your application's `EventServiceProvider`:"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:191
#: ./docs/8.x/upgrade.md:287
#: ./docs/8.x/upgrade.md:314
#: ./docs/10.x/upgrade.md:235
msgid "**Likelihood Of Impact: Optional**"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:192
#~ msgid "<a name=\"language-directory\"></a>"
#~ msgstr ""

# CODE: php
#: ./docs/11.x/upgrade.md:192
msgid "protected function configureEmailVerification()\n"
"{\n"
"    // ...\n"
"}"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:192
#~ msgid "<a name=\"postgres-schema-configuration\"></a>"
#~ msgstr ""

# H4
#: ./docs/10.x/upgrade.md:193
msgid "The Language Directory"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:193
msgid "The [maintenance mode](/docs/{{version}}/configuration#maintenance-mode) feature of Laravel has been improved in Laravel 8.x. Pre-rendering the maintenance mode template is now supported and eliminates the chances of end users encountering errors during maintenance mode. However, to support this, the following lines must be added to your `public/index.php` file. These lines should be placed directly under the existing `LARAVEL_START` constant definition:"
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:193
msgid "Postgres \"Schema\" Configuration"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:195
msgid "**Likelihood Of Impact: None**"
msgstr ""

# CODE
#: ./docs/8.x/upgrade.md:195
msgid "define('LARAVEL_START', microtime(true));\n\n"
"if (file_exists($maintenance = __DIR__.'/../storage/framework/maintenance.php')) {\n"
"    require $maintenance;\n"
"}"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:197
msgid "Though not relevant to existing applications, the Laravel application skeleton no longer contains the `lang` directory by default. Instead, when writing new Laravel applications, it may be published using the `lang:publish` Artisan command:"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:197
msgid "The `schema` configuration option used to configure Postgres connection search paths in your application's `config/database.php` configuration file should be renamed to `search_path`."
msgstr ""

# CODE: shell
#: ./docs/10.x/upgrade.md:199
msgid "php artisan lang:publish"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:199
#~ msgid "<a name=\"cache\"></a>"
#~ msgstr ""

# P
#: ./docs/9.x/upgrade.md:199
#~ msgid "<a name=\"schema-builder-doctrine-method\"></a>"
#~ msgstr ""

# H4
#: ./docs/9.x/upgrade.md:200
msgid "Schema Builder `registerCustomDoctrineType` Method"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:201
#~ msgid "<a name=\"artisan-down-message\"></a>"
#~ msgstr ""

# P
#: ./docs/11.x/upgrade.md:202
#~ msgid "<a name=\"cache-key-prefixes\"></a>"
#~ msgstr ""

# H4
#: ./docs/8.x/upgrade.md:202
msgid "The `php artisan down --message` Option"
msgstr ""

# H3
#: ./docs/10.x/upgrade.md:203
msgid "Logging"
msgstr ""

# H4
#: ./docs/11.x/upgrade.md:203
msgid "Cache Key Prefixes"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:204
msgid "The `registerCustomDoctrineType` method has been removed from the `Illuminate\\Database\\Schema\\Builder` class. You may use the `registerDoctrineType` method on the `DB` facade instead, or register custom Doctrine types in the `config/database.php` configuration file."
msgstr ""

# P
#: ./docs/10.x/upgrade.md:205
#~ msgid "<a name=\"monolog-3\"></a>"
#~ msgstr ""

# H4
#: ./docs/10.x/upgrade.md:206
msgid "Monolog 3"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:206
msgid "The `--message` option of the `php artisan down` command has been removed. As an alternative, consider [pre-rendering your maintenance mode views](/docs/{{version}}/configuration#maintenance-mode) with the message of your choice."
msgstr ""

# P
#: ./docs/11.x/upgrade.md:207
msgid "Previously, if a cache key prefix was defined for the DynamoDB, Memcached, or Redis cache stores, Laravel would append a `:` to the prefix. In Laravel 11, the cache key prefix does not receive the `:` suffix. If you would like to maintain the previous prefixing behavior, you can manually add the `:` suffix to your cache key prefix."
msgstr ""

# P
#: ./docs/8.x/upgrade.md:208
#~ msgid "<a name=\"php-artisan-serve-no-reload-option\"></a>"
#~ msgstr ""

# P
#: ./docs/9.x/upgrade.md:208
#~ msgid "<a name=\"custom-casts-and-null\"></a>"
#~ msgstr ""

# H4
#: ./docs/8.x/upgrade.md:209
msgid "The `php artisan serve --no-reload` Option"
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:209
msgid "Custom Casts & `null`"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:210
msgid "Laravel's Monolog dependency has been updated to Monolog 3.x. If you are directly interacting with Monolog within your application, you should review Monolog's [upgrade guide](https://github.com/Seldaek/monolog/blob/main/UPGRADE.md)."
msgstr ""

# P
#: ./docs/10.x/upgrade.md:212
msgid "If you are using third-party logging services such as BugSnag or Rollbar, you may need to upgrade those third-party packages to a version that supports Monolog 3.x and Laravel 10.x."
msgstr ""

# P
#: ./docs/11.x/upgrade.md:212
#~ msgid "<a name=\"the-enumerable-contract\"></a>"
#~ msgstr ""

# P
#: ./docs/8.x/upgrade.md:213
msgid "A `--no-reload` option has been added to the `php artisan serve` command. This will instruct the built-in server to not reload the server when environment file changes are detected. This option is primarily helpful when running Laravel Dusk tests in a CI environment."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:213
msgid "In previous releases of Laravel, the `set` method of custom cast classes was not invoked if the cast attribute was being set to `null`. However, this behavior was inconsistent with the Laravel documentation. In Laravel 9.x, the `set` method of the cast class will be invoked with `null` as the provided `$value` argument. Therefore, you should ensure your custom casts are able to sufficiently handle this scenario:"
msgstr ""

# H3
#: ./docs/10.x/upgrade.md:214
#: ./docs/11.x/upgrade.md:473
msgid "Queues"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:215
#~ msgid "<a name=\"manager-app-property\"></a>"
#~ msgstr ""

# CODE: php
#: ./docs/9.x/upgrade.md:215
msgid "/**\n"
" * Prepare the given value for storage.\n"
" *\n"
" * @param  \\Illuminate\\Database\\Eloquent\\Model  $model\n"
" * @param  string  $key\n"
" * @param  AddressModel  $value\n"
" * @param  array  $attributes\n"
" * @return array\n"
" */\n"
"public function set($model, $key, $value, $attributes)\n"
"{\n"
"    if (! $value instanceof AddressModel) {\n"
"        throw new InvalidArgumentException('The given value is not an Address instance.');\n"
"    }\n\n"
"    return [\n"
"        'address_line_one' => $value->lineOne,\n"
"        'address_line_two' => $value->lineTwo,\n"
"    ];\n"
"}"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:216
#~ msgid "<a name=\"dispatch-now\"></a>"
#~ msgstr ""

# H4
#: ./docs/8.x/upgrade.md:216
msgid "Manager `$app` Property"
msgstr ""

# H4
#: ./docs/10.x/upgrade.md:217
msgid "The `Bus::dispatchNow` Method"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:217
msgid "The `dump` method of the `Illuminate\\Support\\Enumerable` contract has been updated to accept a variadic `...$args` argument. If you are implementing this interface you should update your implementation accordingly:"
msgstr ""

# CODE: php
#: ./docs/11.x/upgrade.md:219
msgid "public function dump(...$args);"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:220
msgid "The previously deprecated `$app` property of the `Illuminate\\Support\\Manager` class has been removed. If you were relying on this property, you should use the `$container` property instead."
msgstr ""

# P
#: ./docs/10.x/upgrade.md:221
msgid "The deprecated `Bus::dispatchNow` and `dispatch_now` methods have been removed. Instead, your application should use the `Bus::dispatchSync` and `dispatch_sync` methods, respectively."
msgstr ""

# P
#: ./docs/8.x/upgrade.md:222
#~ msgid "<a name=\"the-elixir-helper\"></a>"
#~ msgstr ""

# P
#: ./docs/10.x/upgrade.md:223
#~ msgid "<a name=\"dispatch-return\"></a>"
#~ msgstr ""

# H4
#: ./docs/8.x/upgrade.md:223
msgid "The `elixir` Helper"
msgstr ""

# H4
#: ./docs/10.x/upgrade.md:224
msgid "The `dispatch()` Helper Return Value"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:226
#~ msgid "<a name=\"sqlite-minimum-version\"></a>"
#~ msgstr ""

# H4
#: ./docs/11.x/upgrade.md:227
msgid "SQLite 3.26.0+"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:227
msgid "The previously deprecated `elixir` helper has been removed. Applications still using this method are encouraged to upgrade to [Laravel Mix](https://github.com/JeffreyWay/laravel-mix)."
msgstr ""

# P
#: ./docs/10.x/upgrade.md:228
msgid "Invoking `dispatch` with a class that does not implement `Illuminate\\Contracts\\Queue` would previously return the result of the class's `handle` method. However, this will now return an `Illuminate\\Foundation\\Bus\\PendingBatch` instance. You may use `dispatch_sync()` to replicate the previous behavior."
msgstr ""

# P
#: ./docs/8.x/upgrade.md:229
#: ./docs/11.x/upgrade.md:440
#~ msgid "<a name=\"mail\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/upgrade.md:230
#: ./docs/11.x/upgrade.md:441
msgid "Mail"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:231
msgid "If your application is utilizing an SQLite database, SQLite 3.26.0 or greater is required."
msgstr ""

# P
#: ./docs/10.x/upgrade.md:232
#~ msgid "<a name=\"middleware-aliases\"></a>"
#~ msgstr ""

# P
#: ./docs/8.x/upgrade.md:232
#~ msgid "<a name=\"the-sendnow-method\"></a>"
#~ msgstr ""

# H4
#: ./docs/10.x/upgrade.md:233
msgid "Middleware Aliases"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:233
#~ msgid "<a name=\"eloquent-model-casts-method\"></a>"
#~ msgstr ""

# H4
#: ./docs/8.x/upgrade.md:233
msgid "The `sendNow` Method"
msgstr ""

# H4
#: ./docs/11.x/upgrade.md:234
msgid "Eloquent Model `casts` Method"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:237
msgid "In new Laravel applications, the `$routeMiddleware` property of the `App\\Http\\Kernel` class has been renamed to `$middlewareAliases` to better reflect its purpose. You are welcome to rename this property in your existing applications; however, it is not required."
msgstr ""

# P
#: ./docs/8.x/upgrade.md:237
msgid "The previously deprecated `sendNow` method has been removed. Instead, please use the `send` method."
msgstr ""

# P
#: ./docs/11.x/upgrade.md:238
msgid "The base Eloquent model class now defines a `casts` method in order to support the definition of attribute casts. If one of your application's models is defining a `casts` relationship, it may conflict with the `casts` method now present on the base Eloquent model class."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:238
#~ msgid "<a name=\"belongs-to-many-first-or-new\"></a>"
#~ msgstr ""

# P
#: ./docs/10.x/upgrade.md:239
#~ msgid "<a name=\"rate-limiter-return-values\"></a>"
#~ msgstr ""

# P
#: ./docs/8.x/upgrade.md:239
#~ msgid "<a name=\"pagination\"></a>"
#~ msgstr ""

# H4
#: ./docs/9.x/upgrade.md:239
msgid "Belongs To Many `firstOrNew`, `firstOrCreate`, and `updateOrCreate` Methods"
msgstr ""

# H4
#: ./docs/10.x/upgrade.md:240
msgid "Rate Limiter Return Values"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:240
#~ msgid "<a name=\"modifying-columns\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/upgrade.md:240
msgid "Pagination"
msgstr ""

# H4
#: ./docs/11.x/upgrade.md:241
msgid "Modifying Columns"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:242
#~ msgid "<a name=\"pagination-defaults\"></a>"
#~ msgstr ""

# H4
#: ./docs/8.x/upgrade.md:243
msgid "Pagination Defaults"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:243
msgid "The `belongsToMany` relationship's `firstOrNew`, `firstOrCreate`, and `updateOrCreate` methods all accept an array of attributes as their first argument. In previous releases of Laravel, this array of attributes was compared against the \"pivot\" / intermediate table for existing records."
msgstr ""

# P
#: ./docs/10.x/upgrade.md:244
msgid "When invoking the `RateLimiter::attempt` method, the value returned by the provided closure will now be returned by the method. If nothing or `null` is returned, the `attempt` method will return `true`:"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:245
msgid "When modifying a column, you must now explicitly include all the modifiers you want to keep on the column definition after it is changed. Any missing attributes will be dropped. For example, to retain the `unsigned`, `default`, and `comment` attributes, you must call each modifier explicitly when changing the column, even if those attributes have been assigned to the column by a previous migration."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:245
msgid "However, this behavior was unexpected and typically unwanted. Instead, these methods now compare the array of attributes against the table of the related model:"
msgstr ""

# CODE: php
#: ./docs/10.x/upgrade.md:246
msgid "$value = RateLimiter::attempt('key', 10, fn () => ['example'], 1);\n\n"
"$value; // ['example']"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:247
msgid "For example, imagine you have a migration that creates a `votes` column with the `unsigned`, `default`, and `comment` attributes:"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:247
msgid "The paginator now uses the [Tailwind CSS framework](https://tailwindcss.com) for its default styling. In order to keep using Bootstrap, you should add the following method call to the `boot` method of your application's `AppServiceProvider`:"
msgstr ""

# CODE: php
#: ./docs/9.x/upgrade.md:247
msgid "$user->roles()->updateOrCreate([\n"
"    'name' => 'Administrator',\n"
"]);"
msgstr ""

# CODE: php
#: ./docs/11.x/upgrade.md:249
msgid "Schema::create('users', function (Blueprint $table) {\n"
"    $table->integer('votes')->unsigned()->default(1)->comment('The vote count');\n"
"});"
msgstr ""

# CODE
#: ./docs/8.x/upgrade.md:249
msgid "use Illuminate\\Pagination\\Paginator;\n\n"
"Paginator::useBootstrap();"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:252
#~ msgid "<a name=\"redirect-home\"></a>"
#~ msgstr ""

# H4
#: ./docs/10.x/upgrade.md:253
msgid "The `Redirect::home` Method"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:253
#: ./docs/9.x/upgrade.md:619
#~ msgid "<a name=\"queue\"></a>"
#~ msgstr ""

# P
#: ./docs/9.x/upgrade.md:253
msgid "In addition, the `firstOrCreate` method now accepts a `$values` array as its second argument. This array will be merged with the first argument to the method (`$attributes`) when creating the related model if one does not already exist. This change makes this method consistent with the `firstOrCreate` methods offered by other relationship types:"
msgstr ""

# H3
#: ./docs/8.x/upgrade.md:254
#: ./docs/9.x/upgrade.md:620
msgid "Queue"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:255
msgid "Later, you write a migration that changes the column to be `nullable` as well:"
msgstr ""

# CODE: php
#: ./docs/9.x/upgrade.md:255
msgid "$user->roles()->firstOrCreate([\n"
"    'name' => 'Administrator',\n"
"], [\n"
"    'created_by' => $user->id,\n"
"]);"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:256
#~ msgid "<a name=\"queue-retry-after-method\"></a>"
#~ msgstr ""

# P
#: ./docs/10.x/upgrade.md:257
msgid "The deprecated `Redirect::home` method has been removed. Instead, your application should redirect to an explicitly named route:"
msgstr ""

# CODE: php
#: ./docs/11.x/upgrade.md:257
msgid "Schema::table('users', function (Blueprint $table) {\n"
"    $table->integer('votes')->nullable()->change();\n"
"});"
msgstr ""

# H4
#: ./docs/8.x/upgrade.md:257
msgid "The `retryAfter` Method"
msgstr ""

# CODE: php
#: ./docs/10.x/upgrade.md:259
msgid "return Redirect::route('home');"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:261
msgid "For consistency with other features of Laravel, the `retryAfter` method and `retryAfter` property of queued jobs, mailers, notifications, and listeners have been renamed to `backoff`. You should update the name of this method / property in the relevant classes in your application."
msgstr ""

# P
#: ./docs/11.x/upgrade.md:263
msgid "In Laravel 10, this migration would retain the `unsigned`, `default`, and `comment` attributes on the column. However, in Laravel 11, the migration must now also include all of the attributes that were previously defined on the column. Otherwise, they will be dropped:"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:263
#~ msgid "<a name=\"queue-timeout-at-property\"></a>"
#~ msgstr ""

# H4
#: ./docs/9.x/upgrade.md:263
msgid "The `touch` Method"
msgstr ""

# H4
#: ./docs/8.x/upgrade.md:264
msgid "The `timeoutAt` Property"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:265
#~ msgid "<a name=\"service-mocking\"></a>"
#~ msgstr ""

# CODE: php
#: ./docs/11.x/upgrade.md:265
msgid "Schema::table('users', function (Blueprint $table) {\n"
"    $table->integer('votes')\n"
"        ->unsigned()\n"
"        ->default(1)\n"
"        ->comment('The vote count')\n"
"        ->nullable()\n"
"        ->change();\n"
"});"
msgstr ""

# H4
#: ./docs/10.x/upgrade.md:266
msgid "Service Mocking"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:267
msgid "The `touch` method now accepts an attribute to touch. If you were previously overwriting this method, you should update your method signature to reflect this new argument:"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:268
msgid "The `timeoutAt` property of queued jobs, notifications, and listeners has been renamed to `retryUntil`. You should update the name of this property in the relevant classes in your application."
msgstr ""

# CODE: php
#: ./docs/9.x/upgrade.md:269
msgid "public function touch($attribute = null);"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:270
msgid "The deprecated `MocksApplicationServices` trait has been removed from the framework. This trait provided testing methods such as `expectsEvents`, `expectsJobs`, and `expectsNotifications`."
msgstr ""

# P
#: ./docs/8.x/upgrade.md:270
#~ msgid "<a name=\"queue-allOnQueue-allOnConnection\"></a>"
#~ msgstr ""

# H4
#: ./docs/8.x/upgrade.md:271
msgid "The `allOnQueue()` / `allOnConnection()` Methods"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:272
msgid "If your application uses these methods, we recommend you transition to `Event::fake`, `Bus::fake`, and `Notification::fake`, respectively. You can learn more about mocking via fakes in the corresponding documentation for the component you are attempting to fake."
msgstr ""

# H3
#: ./docs/9.x/upgrade.md:273
msgid "Encryption"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:275
msgid "For consistency with other dispatching methods, the `allOnQueue()` and `allOnConnection()` methods used with job chaining have been removed. You may use the `onQueue()` and `onConnection()` methods instead. These methods should be called before calling the `dispatch` method:"
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:275
msgid "The Encrypter Contract"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:276
#~ msgid "<a name=\"closure-validation-rule-messages\"></a>"
#~ msgstr ""

# P
#: ./docs/11.x/upgrade.md:276
msgid "The `change` method does not change the indexes of the column. Therefore, you may use index modifiers to explicitly add or drop an index when modifying the column:"
msgstr ""

# H4
#: ./docs/10.x/upgrade.md:277
msgid "Closure Validation Rule Messages"
msgstr ""

# CODE
#: ./docs/8.x/upgrade.md:277
msgid "ProcessPodcast::withChain([\n"
"    new OptimizePodcast,\n"
"    new ReleasePodcast\n"
"])->onConnection('redis')->onQueue('podcasts')->dispatch();"
msgstr ""

# CODE: php
#: ./docs/11.x/upgrade.md:278
msgid "// Add an index...\n"
"$table->bigIncrements('id')->primary()->change();\n\n"
"// Drop an index...\n"
"$table->char('postal_code', 10)->unique(false)->change();"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:279
msgid "The `Illuminate\\Contracts\\Encryption\\Encrypter` contract now defines a `getKey` method. If you are manually implementing this interface, you should update your implementation accordingly:"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:281
msgid "When writing closure based custom validation rules, invoking the `$fail` callback more than once will now append the messages to an array instead of overwriting the previous message. Typically, this will not affect your application."
msgstr ""

# CODE: php
#: ./docs/9.x/upgrade.md:281
msgid "public function getKey();"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:282
msgid "Note that this change only affects code using the `withChain` method. The `allOnQueue()` and `allOnConnection()` are still available when using the global `dispatch()` helper."
msgstr ""

# P
#: ./docs/10.x/upgrade.md:283
msgid "In addition, the `$fail` callback now returns an object. If you were previously type-hinting the return type of your validation closure, this may require you to update your type-hint:"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:284
#~ msgid "<a name=\"failed-jobs-table-batch-support\"></a>"
#~ msgstr ""

# CODE: php
#: ./docs/10.x/upgrade.md:285
msgid "public function rules()\n"
"{\n"
"    'name' => [\n"
"        function ($attribute, $value, $fail) {\n"
"            $fail('validation.translation.key')->translate();\n"
"        },\n"
"    ],\n"
"}"
msgstr ""

# H4
#: ./docs/8.x/upgrade.md:285
msgid "Failed Jobs Table Batch Support"
msgstr ""

# H3
#: ./docs/9.x/upgrade.md:285
msgid "Facades"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:286
msgid "If you do not want to update all of the existing \"change\" migrations in your application to retain the column's existing attributes, you may simply [squash your migrations](/docs/{{version}}/migrations#squashing-migrations):"
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:287
msgid "The `getFacadeAccessor` Method"
msgstr ""

# CODE: bash
#: ./docs/11.x/upgrade.md:288
msgid "php artisan schema:dump"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:289
msgid "If you plan to use the [job batching](/docs/{{version}}/queues#job-batching) features of Laravel 8.x, your `failed_jobs` database table will need to be updated. First, a new `uuid` column should be added to your table:"
msgstr ""

# CODE
#: ./docs/8.x/upgrade.md:291
msgid "use Illuminate\\Database\\Schema\\Blueprint;\n"
"use Illuminate\\Support\\Facades\\Schema;\n\n"
"Schema::table('failed_jobs', function (Blueprint $table) {\n"
"    $table->string('uuid')->after('id')->nullable()->unique();\n"
"});"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:291
msgid "The `getFacadeAccessor` method must always return a container binding key. In previous releases of Laravel, this method could return an object instance; however, this behavior is no longer supported. If you have written your own facades, you should ensure that this method returns a container binding string:"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:292
msgid "Once your migrations have been squashed, Laravel will \"migrate\" the database using your application's schema file before running any pending migrations."
msgstr ""

# CODE: php
#: ./docs/9.x/upgrade.md:293
msgid "/**\n"
" * Get the registered name of the component.\n"
" *\n"
" * @return string\n"
" */\n"
"protected static function getFacadeAccessor()\n"
"{\n"
"    return Example::class;\n"
"}"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:294
#~ msgid "<a name=\"floating-point-types\"></a>"
#~ msgstr ""

# H4
#: ./docs/11.x/upgrade.md:295
msgid "Floating-Point Types"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:296
#~ msgid "<a name=\"validation-messages-and-closure-rules\"></a>"
#~ msgstr ""

# H4
#: ./docs/10.x/upgrade.md:297
msgid "Validation Messages and Closure Rules"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:298
msgid "Next, the `failed.driver` configuration option within your `queue` configuration file should be updated to `database-uuids`."
msgstr ""

# P
#: ./docs/11.x/upgrade.md:299
msgid "The `double` and `float` migration column types have been rewritten to be consistent across all databases."
msgstr ""

# P
#: ./docs/8.x/upgrade.md:300
msgid "In addition, you may wish to generate UUIDs for your existing failed jobs:"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:301
msgid "Previously, you could assign a failure message to a different key by providing an array to the `$fail` callback injected into Closure based validation rules. However, you should now provide the key as the first argument and the failure message as the second argument:"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:301
msgid "The `double` column type now creates a `DOUBLE` equivalent column without total digits and places (digits after decimal point), which is the standard SQL syntax. Therefore, you may remove the arguments for `$total` and `$places`:"
msgstr ""

# CODE
#: ./docs/8.x/upgrade.md:302
msgid "DB::table('failed_jobs')->whereNull('uuid')->cursor()->each(function ($job) {\n"
"    DB::table('failed_jobs')\n"
"        ->where('id', $job->id)\n"
"        ->update(['uuid' => (string) Illuminate\\Support\\Str::uuid()]);\n"
"});"
msgstr ""

# CODE: php
#: ./docs/10.x/upgrade.md:303
msgid "Validator::make([\n"
"    'foo' => 'string',\n"
"    'bar' => [function ($attribute, $value, $fail) {\n"
"        $fail('foo', 'Something went wrong!');\n"
"    }],\n"
"]);"
msgstr ""

# CODE: php
#: ./docs/11.x/upgrade.md:303
msgid "$table->double('amount');"
msgstr ""

# H3
#: ./docs/9.x/upgrade.md:305
msgid "Filesystem"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:307
msgid "The `float` column type now creates a `FLOAT` equivalent column without total digits and places (digits after decimal point), but with an optional `$precision` specification to determine storage size as a 4-byte single-precision column or an 8-byte double-precision column. Therefore, you may remove the arguments for `$total` and `$places` and specify the optional `$precision` to your desired value and according to your database's documentation:"
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:307
msgid "The `FILESYSTEM_DRIVER` Environment Variable"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:308
#~ msgid "<a name=\"routing\"></a>"
#~ msgstr ""

# CODE: php
#: ./docs/11.x/upgrade.md:309
msgid "$table->float('amount', precision: 53);"
msgstr ""

# H3
#: ./docs/8.x/upgrade.md:309
#: ./docs/10.x/upgrade.md:230
msgid "Routing"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:311
#~ msgid "<a name=\"automatic-controller-namespace-prefixing\"></a>"
#~ msgstr ""

# P
#: ./docs/9.x/upgrade.md:311
msgid "The `FILESYSTEM_DRIVER` environment variable has been renamed to `FILESYSTEM_DISK` to more accurately reflect its usage. This change only affects the application skeleton; however, you are welcome to update your own application's environment variables to reflect this change if you wish."
msgstr ""

# P
#: ./docs/10.x/upgrade.md:312
#~ msgid "<a name=\"form-request-after-method\"></a>"
#~ msgstr ""

# H4
#: ./docs/8.x/upgrade.md:312
msgid "Automatic Controller Namespace Prefixing"
msgstr ""

# H4
#: ./docs/10.x/upgrade.md:313
msgid "Form Request After Method"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:313
msgid "The `unsignedDecimal`, `unsignedDouble`, and `unsignedFloat` methods have been removed, as the unsigned modifier for these column types has been deprecated by MySQL, and was never standardized on other database systems. However, if you wish to continue using the deprecated unsigned attribute for these column types, you may chain the `unsigned` method onto the column's definition:"
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:313
msgid "The \"Cloud\" Disk"
msgstr ""

# CODE: php
#: ./docs/11.x/upgrade.md:315
msgid "$table->decimal('amount', total: 8, places: 2)->unsigned();\n"
"$table->double('amount')->unsigned();\n"
"$table->float('amount', precision: 53)->unsigned();"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:316
msgid "In previous releases of Laravel, the `RouteServiceProvider` class contained a `$namespace` property with a value of `App\\Http\\Controllers`. The value of this property was used to automatically prefix controller route declarations and controller route URL generation such as when calling the `action` helper."
msgstr ""

# P
#: ./docs/10.x/upgrade.md:317
msgid "Within form requests, the `after` method is now [reserved by Laravel](https://github.com/laravel/framework/pull/46757). If your form requests define an `after` method, the method should be renamed or modified to utilize the new \"after validation\" feature of Laravel's form requests."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:317
msgid "The `cloud` disk configuration option was removed from the default application skeleton in November of 2020. This change only affects the application skeleton. If you are using the `cloud` disk within your application, you should leave this configuration value in your own application's skeleton."
msgstr ""

# P
#: ./docs/8.x/upgrade.md:318
msgid "In Laravel 8, this property is set to `null` by default. This allows your controller route declarations to use the standard PHP callable syntax, which provides better support for jumping to the controller class in many IDEs:"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:319
#~ msgid "<a name=\"flysystem-3\"></a>"
#~ msgstr ""

# CODE
#: ./docs/8.x/upgrade.md:320
msgid "use App\\Http\\Controllers\\UserController;\n\n"
"// Using PHP callable syntax...\n"
"Route::get('/users', [UserController::class, 'index']);\n\n"
"// Using string syntax...\n"
"Route::get('/users', 'App\\Http\\Controllers\\UserController@index');"
msgstr ""

# H3
#: ./docs/9.x/upgrade.md:320
msgid "Flysystem 3.x"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:321
#~ msgid "<a name=\"dedicated-mariadb-driver\"></a>"
#~ msgstr ""

# P
#: ./docs/10.x/upgrade.md:322
msgid "We also encourage you to view the changes in the `laravel/laravel` [GitHub repository](https://github.com/laravel/laravel). While many of these changes are not required, you may wish to keep these files in sync with your application. Some of these changes will be covered in this upgrade guide, but others, such as changes to configuration files or comments, will not be."
msgstr ""

# H4
#: ./docs/11.x/upgrade.md:322
msgid "Dedicated MariaDB Driver"
msgstr ""

# P
#: ./docs/10.x/upgrade.md:324
msgid "You can easily view the changes with the [GitHub comparison tool](https://github.com/laravel/laravel/compare/9.x...10.x) and choose which updates are important to you. However, many of the changes shown by the GitHub comparison tool are due to our organization's adoption of PHP native types. These changes are backwards compatible and the adoption of them during the migration to Laravel 10 is optional."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:324
msgid "Laravel 9.x has migrated from [Flysystem](https://flysystem.thephpleague.com/v2/docs/) 1.x to 3.x. Under the hood, Flysystem powers all of the file manipulation methods provided by the `Storage` facade. In light of this, some changes may be required within your application; however, we have tried to make this transition as seamless as possible."
msgstr ""

# P
#: ./docs/11.x/upgrade.md:326
msgid "Instead of always utilizing the MySQL driver when connecting to MariaDB databases, Laravel 11 adds a dedicated database driver for MariaDB."
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:326
#: ./docs/9.x/upgrade.md:484
msgid "Driver Prerequisites"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:328
msgid "If your application connects to a MariaDB database, you may update the connection configuration to the new `mariadb` driver to benefit from MariaDB specific features in the future:"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:328
msgid "In most cases, this won't impact applications that are being upgraded because your `RouteServiceProvider` will still contain the `$namespace` property with its previous value. However, if you upgrade your application by creating a brand new Laravel project, you may encounter this as a breaking change."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:328
msgid "Before using the S3, FTP, or SFTP drivers, you will need to install the appropriate package via the Composer package manager:"
msgstr ""

# CODE
#: ./docs/11.x/upgrade.md:330
msgid "'driver' => 'mariadb',\n"
"'url' => env('DB_URL'),\n"
"'host' => env('DB_HOST', '127.0.0.1'),\n"
"'port' => env('DB_PORT', '3306'),\n"
"// ..."
msgstr ""

# P
#: ./docs/8.x/upgrade.md:330
msgid "If you would like to continue using the original auto-prefixed controller routing, you can simply set the value of the `$namespace` property within your `RouteServiceProvider` and update the route registrations within the `boot` method to use the `$namespace` property:"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:330
msgid "Amazon S3: `composer require -W league/flysystem-aws-s3-v3 \"^3.0\"`"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:331
msgid "FTP: `composer require league/flysystem-ftp \"^3.0\"`"
msgstr ""

# CODE
#: ./docs/8.x/upgrade.md:332
msgid "class RouteServiceProvider extends ServiceProvider\n"
"{\n"
"    /**\n"
"     * The path to the \"home\" route for your application.\n"
"     *\n"
"     * This is used by Laravel authentication to redirect users after login.\n"
"     *\n"
"     * @var string\n"
"     */\n"
"    public const HOME = '/home';\n\n"
"    /**\n"
"     * If specified, this namespace is automatically applied to your controller routes.\n"
"     *\n"
"     * In addition, it is set as the URL generator's root namespace.\n"
"     *\n"
"     * @var string\n"
"     */\n"
"    protected $namespace = 'App\\Http\\Controllers';\n\n"
"    /**\n"
"     * Define your route model bindings, pattern filters, etc.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function boot()\n"
"    {\n"
"        $this->configureRateLimiting();\n\n"
"        $this->routes(function () {\n"
"            Route::middleware('web')\n"
"                ->namespace($this->namespace)\n"
"                ->group(base_path('routes/web.php'));\n\n"
"            Route::prefix('api')\n"
"                ->middleware('api')\n"
"                ->namespace($this->namespace)\n"
"                ->group(base_path('routes/api.php'));\n"
"        });\n"
"    }\n\n"
"    /**\n"
"     * Configure the rate limiters for the application.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    protected function configureRateLimiting()\n"
"    {\n"
"        RateLimiter::for('api', function (Request $request) {\n"
"            return Limit::perMinute(60)->by(optional($request->user())->id ?: $request->ip());\n"
"        });\n"
"    }\n"
"}"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:332
msgid "SFTP: `composer require league/flysystem-sftp-v3 \"^3.0\"`"
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:334
msgid "Overwriting Existing Files"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:336
msgid "Currently, the new MariaDB driver behaves like the current MySQL driver with one exception: the `uuid` schema builder method creates native UUID columns instead of `char(36)` columns."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:336
msgid "Write operations such as `put`, `write`, and `writeStream` now overwrite existing files by default. If you do not want to overwrite existing files, you should manually check for the file's existence before performing the write operation."
msgstr ""

# P
#: ./docs/11.x/upgrade.md:338
msgid "If your existing migrations utilize the `uuid` schema builder method and you choose to use the new `mariadb` database driver, you should update your migration's invocations of the `uuid` method to `char` to avoid breaking changes or unexpected behavior:"
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:338
msgid "Write Exceptions"
msgstr ""

# CODE: php
#: ./docs/11.x/upgrade.md:340
msgid "Schema::table('users', function (Blueprint $table) {\n"
"    $table->char('uuid', 36);\n\n"
"    // ...\n"
"});"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:340
msgid "Write operations such as `put`, `write`, and `writeStream` no longer throw an exception when a write operation fails. Instead, `false` is returned. If you would like to preserve the previous behavior which threw exceptions, you may define the `throw` option within a filesystem disk's configuration array:"
msgstr ""

# CODE: php
#: ./docs/9.x/upgrade.md:342
msgid "'public' => [\n"
"    'driver' => 'local',\n"
"    // ...\n"
"    'throw' => true,\n"
"],"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:348
#~ msgid "<a name=\"spatial-types\"></a>"
#~ msgstr ""

# H4
#: ./docs/11.x/upgrade.md:349
msgid "Spatial Types"
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:350
msgid "Reading Missing Files"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:352
msgid "Attempting to read from a file that does not exist now returns `null`. In previous releases of Laravel, an `Illuminate\\Contracts\\Filesystem\\FileNotFoundException` would have been thrown."
msgstr ""

# P
#: ./docs/11.x/upgrade.md:353
msgid "The spatial column types of database migrations have been rewritten to be consistent across all databases. Therefore, you may remove `point`, `lineString`, `polygon`, `geometryCollection`, `multiPoint`, `multiLineString`, `multiPolygon`, and `multiPolygonZ` methods from your migrations and use `geometry` or `geography` methods instead:"
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:354
msgid "Deleting Missing Files"
msgstr ""

# CODE: php
#: ./docs/11.x/upgrade.md:355
msgid "$table->geometry('shapes');\n"
"$table->geography('coordinates');"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:356
msgid "Attempting to `delete` a file that does not exist now returns `true`."
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:358
msgid "Cached Adapters"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:360
msgid "To explicitly restrict the type or the spatial reference system identifier for values stored in the column on MySQL, MariaDB, and PostgreSQL, you may pass the `subtype` and `srid` to the method:"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:360
msgid "Flysystem no longer supports \"cached adapters\". Thus, they have been removed from Laravel and any relevant configuration (such as the `cache` key within disk configurations) can be removed."
msgstr ""

# CODE: php
#: ./docs/11.x/upgrade.md:362
msgid "$table->geometry('dimension', subtype: 'polygon', srid: 0);\n"
"$table->geography('latitude', subtype: 'point', srid: 4326);"
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:362
msgid "Custom Filesystems"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:364
msgid "Slight changes have been made to the steps required to register custom filesystem drivers. Therefore, if you were defining your own custom filesystem drivers, or using packages that define custom drivers, you should update your code and dependencies."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:366
msgid "For example, in Laravel 8.x, a custom filesystem driver might be registered like so:"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:367
msgid "The `isGeometry` and `projection` column modifiers of the PostgreSQL grammar have been removed accordingly."
msgstr ""

# CODE: php
#: ./docs/9.x/upgrade.md:368
msgid "use Illuminate\\Support\\Facades\\Storage;\n"
"use League\\Flysystem\\Filesystem;\n"
"use Spatie\\Dropbox\\Client as DropboxClient;\n"
"use Spatie\\FlysystemDropbox\\DropboxAdapter;\n\n"
"Storage::extend('dropbox', function ($app, $config) {\n"
"    $client = new DropboxClient(\n"
"        $config['authorization_token']\n"
"    );\n\n"
"    return new Filesystem(new DropboxAdapter($client));\n"
"});"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:369
#~ msgid "<a name=\"doctrine-dbal-removal\"></a>"
#~ msgstr ""

# H4
#: ./docs/11.x/upgrade.md:370
msgid "Doctrine DBAL Removal"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:374
msgid "The following list of Doctrine DBAL related classes and methods have been removed. Laravel is no longer dependent on this package and registering custom Doctrines types is no longer necessary for the proper creation and alteration of various column types that previously required custom types:"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:378
msgid "`Illuminate\\Database\\Schema\\Builder::$alwaysUsesNativeSchemaOperationsIfPossible` class property"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:379
msgid "`Illuminate\\Database\\Schema\\Builder::useNativeSchemaOperationsIfPossible()` method"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:380
msgid "`Illuminate\\Database\\Connection::usingNativeSchemaOperations()` method"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:381
msgid "`Illuminate\\Database\\Connection::isDoctrineAvailable()` method"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:382
msgid "`Illuminate\\Database\\Connection::getDoctrineConnection()` method"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:383
msgid "`Illuminate\\Database\\Connection::getDoctrineSchemaManager()` method"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:383
msgid "However, in Laravel 9.x, the callback given to the `Storage::extend` method should return an instance of `Illuminate\\Filesystem\\FilesystemAdapter` directly:"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:384
msgid "`Illuminate\\Database\\Connection::getDoctrineColumn()` method"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:385
msgid "`Illuminate\\Database\\Connection::registerDoctrineType()` method"
msgstr ""

# CODE: php
#: ./docs/9.x/upgrade.md:385
msgid "use Illuminate\\Filesystem\\FilesystemAdapter;\n"
"use Illuminate\\Support\\Facades\\Storage;\n"
"use League\\Flysystem\\Filesystem;\n"
"use Spatie\\Dropbox\\Client as DropboxClient;\n"
"use Spatie\\FlysystemDropbox\\DropboxAdapter;\n\n"
"Storage::extend('dropbox', function ($app, $config) {\n"
"    $adapter = new DropboxAdapter(\n"
"        new DropboxClient($config['authorization_token'])\n"
"    );\n\n"
"    return new FilesystemAdapter(\n"
"        new Filesystem($adapter, $config),\n"
"        $adapter,\n"
"        $config\n"
"    );\n"
"});"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:386
msgid "`Illuminate\\Database\\DatabaseManager::registerDoctrineType()` method"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:386
#~ msgid "<a name=\"scheduling\"></a>"
#~ msgstr ""

# P
#: ./docs/11.x/upgrade.md:387
msgid "`Illuminate\\Database\\PDO` directory"
msgstr ""

# H3
#: ./docs/8.x/upgrade.md:387
msgid "Scheduling"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:388
msgid "`Illuminate\\Database\\DBAL\\TimestampType` class"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:389
msgid "`Illuminate\\Database\\Schema\\Grammars\\ChangeColumn` class"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:389
#~ msgid "<a name=\"the-cron-expression-library\"></a>"
#~ msgstr ""

# P
#: ./docs/11.x/upgrade.md:390
msgid "`Illuminate\\Database\\Schema\\Grammars\\RenameColumn` class"
msgstr ""

# H4
#: ./docs/8.x/upgrade.md:390
msgid "The `cron-expression` Library"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:391
msgid "`Illuminate\\Database\\Schema\\Grammars\\Grammar::getDoctrineTableDiff()` method"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:394
msgid "Laravel's dependency on `dragonmantank/cron-expression` has been updated from `2.x` to `3.x`. This should not cause any breaking change in your application unless you are interacting with the `cron-expression` library directly. If you are interacting with this library directly, please review its [change log](https://github.com/dragonmantank/cron-expression/blob/master/CHANGELOG.md)."
msgstr ""

# P
#: ./docs/11.x/upgrade.md:395
msgid "In addition, registering custom Doctrine types via `dbal.types` in your application's `database` configuration file is no longer required."
msgstr ""

# P
#: ./docs/8.x/upgrade.md:396
#~ msgid "<a name=\"session\"></a>"
#~ msgstr ""

# P
#: ./docs/11.x/upgrade.md:397
msgid "If you were previously using Doctrine DBAL to inspect your database and its associated tables, you may use Laravel's new native schema methods (`Schema::getTables()`, `Schema::getColumns()`, `Schema::getIndexes()`, `Schema::getForeignKeys()`, etc.) instead."
msgstr ""

# H3
#: ./docs/8.x/upgrade.md:397
#: ./docs/9.x/upgrade.md:639
msgid "Session"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:399
#~ msgid "<a name=\"deprecated-schema-methods\"></a>"
#~ msgstr ""

# P
#: ./docs/8.x/upgrade.md:399
#~ msgid "<a name=\"the-session-contract\"></a>"
#~ msgstr ""

# H4
#: ./docs/11.x/upgrade.md:400
msgid "Deprecated Schema Methods"
msgstr ""

# H4
#: ./docs/8.x/upgrade.md:400
msgid "The `Session` Contract"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:404
msgid "The deprecated, Doctrine based `Schema::getAllTables()`, `Schema::getAllViews()`, and `Schema::getAllTypes()` methods have been removed in favor of new Laravel native `Schema::getTables()`, `Schema::getViews()`, and `Schema::getTypes()` methods."
msgstr ""

# P
#: ./docs/8.x/upgrade.md:404
msgid "The `Illuminate\\Contracts\\Session\\Session` contract has received a new `pull` method. If you are implementing this contract manually, you should update your implementation accordingly:"
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:405
msgid "SFTP Private-Public Key Passphrase"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:406
msgid "When using PostgreSQL and SQL Server, none of the new schema methods will accept a three-part reference (e.g. `database.schema.table`). Therefore, you should use `connection()` to declare the database instead:"
msgstr ""

# CODE
#: ./docs/8.x/upgrade.md:406
msgid "/**\n"
" * Get the value of a given key and then forget it.\n"
" *\n"
" * @param  string  $key\n"
" * @param  mixed  $default\n"
" * @return mixed\n"
" */\n"
"public function pull($key, $default = null);"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:407
msgid "If your application is using Flysystem's SFTP adapter and private-public key authentication, the `password` configuration item that is used to decrypt the private key should be renamed to `passphrase`."
msgstr ""

# CODE: php
#: ./docs/11.x/upgrade.md:408
msgid "Schema::connection('database')->hasTable('schema.table');"
msgstr ""

# H3
#: ./docs/9.x/upgrade.md:409
msgid "Helpers"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:411
#~ msgid "<a name=\"data-get-function\"></a>"
#~ msgstr ""

# P
#: ./docs/11.x/upgrade.md:412
#~ msgid "<a name=\"get-column-types\"></a>"
#~ msgstr ""

# H4
#: ./docs/9.x/upgrade.md:412
msgid "The `data_get` Helper & Iterable Objects"
msgstr ""

# H4
#: ./docs/11.x/upgrade.md:413
msgid "Schema Builder `getColumnType()` Method"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:415
#~ msgid "<a name=\"testing\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/upgrade.md:416
#: ./docs/9.x/upgrade.md:649
#: ./docs/10.x/upgrade.md:263
msgid "Testing"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:416
msgid "Previously, the `data_get` helper could be used to retrieve nested data on arrays and `Collection` instances; however, this helper can now retrieve nested data on all iterable objects."
msgstr ""

# P
#: ./docs/11.x/upgrade.md:417
msgid "The `Schema::getColumnType()` method now always returns actual type of the given column, not the Doctrine DBAL equivalent type."
msgstr ""

# P
#: ./docs/8.x/upgrade.md:418
#~ msgid "<a name=\"decode-response-json-method\"></a>"
#~ msgstr ""

# P
#: ./docs/9.x/upgrade.md:418
#~ msgid "<a name=\"str-function\"></a>"
#~ msgstr ""

# P
#: ./docs/11.x/upgrade.md:419
#~ msgid "<a name=\"database-connection-interface\"></a>"
#~ msgstr ""

# H4
#: ./docs/8.x/upgrade.md:419
msgid "The `decodeResponseJson` Method"
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:419
msgid "The `str` Helper"
msgstr ""

# H4
#: ./docs/11.x/upgrade.md:420
msgid "Database Connection Interface"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:423
msgid "The `decodeResponseJson` method that belongs to the `Illuminate\\Testing\\TestResponse` class no longer accepts any arguments. Please consider using the `json` method instead."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:423
msgid "Laravel 9.x now includes a global `str` [helper function](/docs/{{version}}/helpers#method-str). If you are defining a global `str` helper in your application, you should rename or remove it so that it does not conflict with Laravel's own `str` helper."
msgstr ""

# P
#: ./docs/11.x/upgrade.md:424
msgid "The `Illuminate\\Database\\ConnectionInterface` interface has received a new `scalar` method. If you are defining your own implementation of this interface, you should add the `scalar` method to your implementation:"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:425
#~ msgid "<a name=\"assert-exact-json-method\"></a>"
#~ msgstr ""

# P
#: ./docs/9.x/upgrade.md:425
#~ msgid "<a name=\"when-and-unless-methods\"></a>"
#~ msgstr ""

# CODE: php
#: ./docs/11.x/upgrade.md:426
msgid "public function scalar($query, $bindings = [], $useReadPdo = true);"
msgstr ""

# H4
#: ./docs/8.x/upgrade.md:426
msgid "The `assertExactJson` Method"
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:426
msgid "The `when` / `unless` Methods"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:430
#~ msgid "<a name=\"dates\"></a>"
#~ msgstr ""

# P
#: ./docs/8.x/upgrade.md:430
msgid "The `assertExactJson` method now requires numeric keys of compared arrays to match and be in the same order. If you would like to compare JSON against an array without requiring numerically keyed arrays to have the same order, you may use the `assertSimilarJson` method instead."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:430
msgid "As you may know, `when` and `unless` methods are offered by various classes throughout the framework. These methods can be used to conditionally perform an action if the boolean value of the first argument to the method evaluates to `true` or `false`:"
msgstr ""

# H3
#: ./docs/11.x/upgrade.md:431
msgid "Dates"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:432
#~ msgid "<a name=\"validation\"></a>"
#~ msgstr ""

# CODE: php
#: ./docs/9.x/upgrade.md:432
msgid "$collection->when(true, function ($collection) {\n"
"    $collection->merge([1, 2, 3]);\n"
"});"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:433
#~ msgid "<a name=\"carbon-3\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/upgrade.md:433
#: ./docs/9.x/upgrade.md:687
#: ./docs/10.x/upgrade.md:274
msgid "Validation"
msgstr ""

# H4
#: ./docs/11.x/upgrade.md:434
msgid "Carbon 3"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:435
#~ msgid "<a name=\"database-rule-connections\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/upgrade.md:436
msgid "Database Rule Connections"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:438
msgid "Laravel 11 supports both Carbon 2 and Carbon 3. Carbon is a date manipulation library utilized extensively by Laravel and packages throughout the ecosystem. If you upgrade to Carbon 3, be aware that `diffIn*` methods now return floating-point numbers and may return negative values to indicate time direction, which is a significant change from Carbon 2. Review Carbon's [change log](https://github.com/briannesbitt/Carbon/releases/tag/3.0.0) and [documentation](https://carbon.nesbot.com/docs/#api-carbon-3) for detailed information on how to handle these and other changes."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:438
msgid "Therefore, in previous releases of Laravel, passing a closure to the `when` or `unless` methods meant that the conditional operation would always execute, since a loose comparison against a closure object (or any other object) always evaluates to `true`. This often led to unexpected outcomes because developers expect the **result** of the closure to be used as the boolean value that determines if the conditional action executes."
msgstr ""

# P
#: ./docs/8.x/upgrade.md:440
msgid "The `unique` and `exists` rules will now respect the specified connection name (accessed via the model's `getConnectionName` method) of Eloquent models when performing queries."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:440
msgid "So, in Laravel 9.x, any closures passed to the `when` or `unless` methods will be executed and the value returned by the closure will be considered the boolean value used by the `when` and `unless` methods:"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:442
#: ./docs/9.x/upgrade.md:731
#: ./docs/10.x/upgrade.md:319
#: ./docs/11.x/upgrade.md:632
#: ./docs/master/upgrade.md:56
#~ msgid "<a name=\"miscellaneous\"></a>"
#~ msgstr ""

# CODE: php
#: ./docs/9.x/upgrade.md:442
msgid "$collection->when(function ($collection) {\n"
"    // This closure is executed...\n"
"    return false;\n"
"}, function ($collection) {\n"
"    // Not executed since first closure returned \"false\"...\n"
"    $collection->merge([1, 2, 3]);\n"
"});"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:443
#~ msgid "<a name=\"the-mailer-contract\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/upgrade.md:443
#: ./docs/9.x/upgrade.md:732
#: ./docs/10.x/upgrade.md:320
#: ./docs/11.x/upgrade.md:633
#: ./docs/master/upgrade.md:57
msgid "Miscellaneous"
msgstr ""

# H4
#: ./docs/11.x/upgrade.md:444
msgid "The `Mailer` Contract"
msgstr ""

# P
#: ./docs/8.x/upgrade.md:445
msgid "We also encourage you to view the changes in the `laravel/laravel` [GitHub repository](https://github.com/laravel/laravel). While many of these changes are not required, you may wish to keep these files in sync with your application. Some of these changes will be covered in this upgrade guide, but others, such as changes to configuration files or comments, will not be. You can easily view the changes with the [GitHub comparison tool](https://github.com/laravel/laravel/compare/7.x...8.x) and choose which updates are important to you."
msgstr ""

# P
#: ./docs/11.x/upgrade.md:448
msgid "The `Illuminate\\Contracts\\Mail\\Mailer` contract has received a new `sendNow` method. If your application or package is manually implementing this contract, you should add the new `sendNow` method to your implementation:"
msgstr ""

# CODE: php
#: ./docs/11.x/upgrade.md:450
msgid "public function sendNow($mailable, array $data = [], $callback = null);"
msgstr ""

# H3
#: ./docs/9.x/upgrade.md:452
msgid "HTTP Client"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:454
#~ msgid "<a name=\"packages\"></a>"
#~ msgstr ""

# P
#: ./docs/9.x/upgrade.md:454
#~ msgid "<a name=\"http-client-default-timeout\"></a>"
#~ msgstr ""

# H4
#: ./docs/9.x/upgrade.md:455
msgid "Default Timeout"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:457
#~ msgid "<a name=\"publishing-service-providers\"></a>"
#~ msgstr ""

# H4
#: ./docs/11.x/upgrade.md:458
msgid "Publishing Service Providers to the Application"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:459
msgid "The [HTTP client](/docs/{{version}}/http-client) now has a default timeout of 30 seconds. In other words, if the server does not respond within 30 seconds, an exception will be thrown. Previously, no default timeout length was configured on the HTTP client, causing requests to sometimes \"hang\" indefinitely."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:461
msgid "If you wish to specify a longer timeout for a given request, you may do so using the `timeout` method:"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:462
msgid "If you have written a Laravel package that manually publishes a service provider to the application's `app/Providers` directory and manually modifies the application's `config/app.php` configuration file to register the service provider, you should update your package to utilize the new `ServiceProvider::addProviderToBootstrapFile` method."
msgstr ""

# CODE
#: ./docs/9.x/upgrade.md:463
msgid "$response = Http::timeout(120)->get(/* ... */);"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:464
msgid "The `addProviderToBootstrapFile` method will automatically add the service provider you have published to the application's `bootstrap/providers.php` file, since the `providers` array does not exist within the `config/app.php` configuration file in new Laravel 11 applications."
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:465
msgid "HTTP Fake & Middleware"
msgstr ""

# CODE: php
#: ./docs/11.x/upgrade.md:466
msgid "use Illuminate\\Support\\ServiceProvider;\n\n"
"ServiceProvider::addProviderToBootstrapFile(Provider::class);"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:469
msgid "Previously, Laravel would not execute any provided Guzzle HTTP middleware when the [HTTP client](/docs/{{version}}/http-client) was \"faked\". However, in Laravel 9.x, Guzzle HTTP middleware will be executed even when the HTTP client is faked."
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:471
msgid "HTTP Fake & Dependency Injection"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:472
#~ msgid "<a name=\"queues\"></a>"
#~ msgstr ""

# P
#: ./docs/11.x/upgrade.md:475
#~ msgid "<a name=\"the-batch-repository-interface\"></a>"
#~ msgstr ""

# P
#: ./docs/9.x/upgrade.md:475
msgid "In previous releases of Laravel, invoking the `Http::fake()` method would not affect instances of the `Illuminate\\Http\\Client\\Factory` that were injected into class constructors. However, in Laravel 9.x, `Http::fake()` will ensure fake responses are returned by HTTP clients injected into other services via dependency injection. This behavior is more consistent with the behavior of other facades and fakes."
msgstr ""

# H4
#: ./docs/11.x/upgrade.md:476
msgid "The `BatchRepository` Interface"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:477
#~ msgid "<a name=\"symfony-mailer\"></a>"
#~ msgstr ""

# H3
#: ./docs/9.x/upgrade.md:478
msgid "Symfony Mailer"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:480
msgid "The `Illuminate\\Bus\\BatchRepository` interface has received a new `rollBack` method. If you are implementing this interface within your own package or application, you should add this method to your implementation:"
msgstr ""

# CODE: php
#: ./docs/11.x/upgrade.md:482
msgid "public function rollBack();"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:482
msgid "One of the largest changes in Laravel 9.x is the transition from SwiftMailer, which is no longer maintained as of December 2021, to Symfony Mailer. However, we have tried to make this transition as seamless as possible for your applications. That being said, please thoroughly review the list of changes below to ensure your application is fully compatible."
msgstr ""

# P
#: ./docs/11.x/upgrade.md:486
#~ msgid "<a name=\"synchronous-jobs-in-database-transactions\"></a>"
#~ msgstr ""

# P
#: ./docs/9.x/upgrade.md:486
msgid "To continue using the Mailgun transport, your application should require the `symfony/mailgun-mailer` and `symfony/http-client` Composer packages:"
msgstr ""

# H4
#: ./docs/11.x/upgrade.md:487
msgid "Synchronous Jobs in Database Transactions"
msgstr ""

# CODE: shell
#: ./docs/9.x/upgrade.md:488
msgid "composer require symfony/mailgun-mailer symfony/http-client"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:491
msgid "Previously, synchronous jobs (jobs using the `sync` queue driver) would execute immediately, regardless of whether the `after_commit` configuration option of the queue connection was set to `true` or the `afterCommit` method was invoked on the job."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:492
msgid "The `wildbit/swiftmailer-postmark` Composer package should be removed from your application. Instead, your application should require the `symfony/postmark-mailer` and `symfony/http-client` Composer packages:"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:493
msgid "In Laravel 11, synchronous queue jobs will now respect the \"after commit\" configuration of the queue connection or job."
msgstr ""

# CODE: shell
#: ./docs/9.x/upgrade.md:494
msgid "composer require symfony/postmark-mailer symfony/http-client"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:495
#~ msgid "<a name=\"rate-limiting\"></a>"
#~ msgstr ""

# H3
#: ./docs/11.x/upgrade.md:496
msgid "Rate Limiting"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:498
#~ msgid "<a name=\"per-second-rate-limiting\"></a>"
#~ msgstr ""

# H4
#: ./docs/9.x/upgrade.md:498
msgid "Updated Return Types"
msgstr ""

# H4
#: ./docs/11.x/upgrade.md:499
msgid "Per-Second Rate Limiting"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:500
msgid "The `send`, `html`, `raw`, and `plain` methods on `Illuminate\\Mail\\Mailer` no longer return `void`. Instead, an instance of `Illuminate\\Mail\\SentMessage` is returned. This object contains an instance of `Symfony\\Component\\Mailer\\SentMessage` that is accessible via the `getSymfonySentMessage` method or by dynamically invoking methods on the object."
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:502
msgid "Renamed \"Swift\" Methods"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:503
msgid "Laravel 11 supports per-second rate limiting instead of being limited to per-minute granularity. There are a variety of potential breaking changes you should be aware of related to this change."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:504
msgid "Various SwiftMailer related methods, some of which were undocumented, have been renamed to their Symfony Mailer counterparts. For example, the `withSwiftMessage` method has been renamed to `withSymfonyMessage`:"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:505
msgid "The `GlobalLimit` class constructor now accepts seconds instead of minutes. This class is not documented and would not typically be used by your application:"
msgstr ""

# CODE
#: ./docs/9.x/upgrade.md:506
msgid "// Laravel 8.x...\n"
"$this->withSwiftMessage(function ($message) {\n"
"    $message->getHeaders()->addTextHeader(\n"
"        'Custom-Header', 'Header Value'\n"
"    );\n"
"});\n\n"
"// Laravel 9.x...\n"
"use Symfony\\Component\\Mime\\Email;\n\n"
"$this->withSymfonyMessage(function (Email $message) {\n"
"    $message->getHeaders()->addTextHeader(\n"
"        'Custom-Header', 'Header Value'\n"
"    );\n"
"});"
msgstr ""

# CODE: php
#: ./docs/11.x/upgrade.md:507
msgid "new GlobalLimit($attempts, 2 * 60);"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:511
msgid "The `Limit` class constructor now accepts seconds instead of minutes. All documented usages of this class are limited to static constructors such as `Limit::perMinute` and `Limit::perSecond`. However, if you are instantiating this class manually, you should update your application to provide seconds to the class's constructor:"
msgstr ""

# CODE: php
#: ./docs/11.x/upgrade.md:513
msgid "new Limit($key, $attempts, 2 * 60);"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:517
msgid "The `Limit` class's `decayMinutes` property has been renamed to `decaySeconds` and now contains seconds instead of minutes."
msgstr ""

# P
#: ./docs/11.x/upgrade.md:519
msgid "The `Illuminate\\Queue\\Middleware\\ThrottlesExceptions` and `Illuminate\\Queue\\Middleware\\ThrottlesExceptionsWithRedis` class constructors now accept seconds instead of minutes:"
msgstr ""

# CODE: php
#: ./docs/11.x/upgrade.md:521
msgid "new ThrottlesExceptions($attempts, 2 * 60);\n"
"new ThrottlesExceptionsWithRedis($attempts, 2 * 60);"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:523
msgid "Please thoroughly review the [Symfony Mailer documentation](https://symfony.com/doc/6.0/mailer.html#creating-sending-messages) for all possible interactions with the `Symfony\\Component\\Mime\\Email` object."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:525
msgid "The list below contains a more thorough overview of renamed methods. Many of these methods are low-level methods used to interact with SwiftMailer / Symfony Mailer directly, so may not be commonly used within most Laravel applications:"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:526
#~ msgid "<a name=\"cashier-stripe\"></a>"
#~ msgstr ""

# H3
#: ./docs/11.x/upgrade.md:527
msgid "Cashier Stripe"
msgstr ""

# CODE
#: ./docs/9.x/upgrade.md:527
msgid "Message::getSwiftMessage();\n"
"Message::getSymfonyMessage();\n\n"
"Mailable::withSwiftMessage($callback);\n"
"Mailable::withSymfonyMessage($callback);\n\n"
"MailMessage::withSwiftMessage($callback);\n"
"MailMessage::withSymfonyMessage($callback);\n\n"
"Mailer::getSwiftMailer();\n"
"Mailer::getSymfonyTransport();\n\n"
"Mailer::setSwiftMailer($swift);\n"
"Mailer::setSymfonyTransport(TransportInterface $transport);\n\n"
"MailManager::createTransport($config);\n"
"MailManager::createSymfonyTransport($config);"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:529
#~ msgid "<a name=\"updating-cashier-stripe\"></a>"
#~ msgstr ""

# H4
#: ./docs/11.x/upgrade.md:530
msgid "Updating Cashier Stripe"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:534
msgid "Laravel 11 no longer supports Cashier Stripe 14.x. Therefore, you should update your application's Laravel Cashier Stripe dependency to `^15.0` in your `composer.json` file."
msgstr ""

# P
#: ./docs/11.x/upgrade.md:536
msgid "Cashier Stripe 15.0 no longer automatically loads migrations from its own migrations directory. Instead, you should run the following command to publish Cashier Stripe's migrations to your application:"
msgstr ""

# CODE: shell
#: ./docs/11.x/upgrade.md:538
msgid "php artisan vendor:publish --tag=cashier-migrations"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:542
msgid "Please review the complete [Cashier Stripe upgrade guide](https://github.com/laravel/cashier-stripe/blob/15.x/UPGRADE.md) for additional breaking changes."
msgstr ""

# P
#: ./docs/11.x/upgrade.md:544
#~ msgid "<a name=\"spark-stripe\"></a>"
#~ msgstr ""

# H3
#: ./docs/11.x/upgrade.md:545
msgid "Spark (Stripe)"
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:545
msgid "Proxied `Illuminate\\Mail\\Message` Methods"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:547
#~ msgid "<a name=\"updating-spark-stripe\"></a>"
#~ msgstr ""

# P
#: ./docs/9.x/upgrade.md:547
msgid "The `Illuminate\\Mail\\Message` typically proxied missing methods to the underlying `Swift_Message` instance. However, missing methods are now proxied to an instance of `Symfony\\Component\\Mime\\Email` instead. So, any code that was previously relying on missing methods to be proxied to SwiftMailer should be updated to their corresponding Symfony Mailer counterparts."
msgstr ""

# H4
#: ./docs/11.x/upgrade.md:548
msgid "Updating Spark Stripe"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:549
msgid "Again, many applications may not be interacting with these methods, as they are not documented within the Laravel documentation:"
msgstr ""

# CODE
#: ./docs/9.x/upgrade.md:551
msgid "// Laravel 8.x...\n"
"$message\n"
"    ->setFrom('taylor@laravel.com')\n"
"    ->setTo('example@example.org')\n"
"    ->setSubject('Order Shipped')\n"
"    ->setBody('<h1>HTML</h1>', 'text/html')\n"
"    ->addPart('Plain Text', 'text/plain');\n\n"
"// Laravel 9.x...\n"
"$message\n"
"    ->from('taylor@laravel.com')\n"
"    ->to('example@example.org')\n"
"    ->subject('Order Shipped')\n"
"    ->html('<h1>HTML</h1>')\n"
"    ->text('Plain Text');"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:552
msgid "Laravel 11 no longer supports Laravel Spark Stripe 4.x. Therefore, you should update your application's Laravel Spark Stripe dependency to `^5.0` in your `composer.json` file."
msgstr ""

# P
#: ./docs/11.x/upgrade.md:554
msgid "Spark Stripe 5.0 no longer automatically loads migrations from its own migrations directory. Instead, you should run the following command to publish Spark Stripe's migrations to your application:"
msgstr ""

# CODE: shell
#: ./docs/11.x/upgrade.md:556
msgid "php artisan vendor:publish --tag=spark-migrations"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:560
msgid "Please review the complete [Spark Stripe upgrade guide](https://spark.laravel.com/docs/spark-stripe/upgrade.html) for additional breaking changes."
msgstr ""

# P
#: ./docs/11.x/upgrade.md:562
#~ msgid "<a name=\"passport\"></a>"
#~ msgstr ""

# H3
#: ./docs/11.x/upgrade.md:563
msgid "Passport"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:565
#: ./docs/11.x/upgrade.md:612
#~ msgid "<a name=\"updating-telescope\"></a>"
#~ msgstr ""

# H4
#: ./docs/11.x/upgrade.md:566
msgid "Updating Passport"
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:567
msgid "Generated Messages IDs"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:569
msgid "SwiftMailer offered the ability to define a custom domain to include in generated Message IDs via the `mime.idgenerator.idright` configuration option. This is not supported by Symfony Mailer. Instead, Symfony Mailer will automatically generate a Message ID based on the sender."
msgstr ""

# P
#: ./docs/11.x/upgrade.md:570
msgid "Laravel 11 no longer supports Laravel Passport 11.x. Therefore, you should update your application's Laravel Passport dependency to `^12.0` in your `composer.json` file."
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:571
msgid "`MessageSent` Event Changes"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:572
msgid "Passport 12.0 no longer automatically loads migrations from its own migrations directory. Instead, you should run the following command to publish Passport's migrations to your application:"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:573
msgid "The `message` property of the `Illuminate\\Mail\\Events\\MessageSent` event now contains an instance of `Symfony\\Component\\Mime\\Email` instead of an instance of `Swift_Message`. This message represents the email **before** it is sent."
msgstr ""

# CODE: shell
#: ./docs/11.x/upgrade.md:574
msgid "php artisan vendor:publish --tag=passport-migrations"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:575
msgid "Additionally, a new `sent` property has been added to the `MessageSent` event. This property contains an instance of `Illuminate\\Mail\\SentMessage` and contains information about the sent email, such as the message ID."
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:577
msgid "Forced Reconnections"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:578
msgid "In addition, the password grant type is disabled by default. You may enable it by invoking the `enablePasswordGrant` method in the `boot` method of your application's `AppServiceProvider`:"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:579
msgid "It is no longer possible to force a transport reconnection (for example when the mailer is running via a daemon process). Instead, Symfony Mailer will attempt to reconnect to the transport automatically and throw an exception if the reconnection fails."
msgstr ""

# CODE
#: ./docs/11.x/upgrade.md:580
msgid "public function boot(): void\n"
"{\n"
"    Passport::enablePasswordGrant();\n"
"}"
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:581
msgid "SMTP Stream Options"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:583
msgid "Defining stream options for the SMTP transport is no longer supported. Instead, you must define the relevant options directly within the configuration if they are supported. For example, to disable TLS peer verification:"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:585
#~ msgid "<a name=\"sanctum\"></a>"
#~ msgstr ""

# CODE
#: ./docs/9.x/upgrade.md:585
msgid "'smtp' => [\n"
"    // Laravel 8.x...\n"
"    'stream' => [\n"
"        'ssl' => [\n"
"            'verify_peer' => false,\n"
"        ],\n"
"    ],\n\n"
"    // Laravel 9.x...\n"
"    'verify_peer' => false,\n"
"],"
msgstr ""

# H3
#: ./docs/11.x/upgrade.md:586
msgid "Sanctum"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:588
#~ msgid "<a name=\"updating-sanctum\"></a>"
#~ msgstr ""

# H4
#: ./docs/11.x/upgrade.md:589
msgid "Updating Sanctum"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:593
msgid "Laravel 11 no longer supports Laravel Sanctum 3.x. Therefore, you should update your application's Laravel Sanctum dependency to `^4.0` in your `composer.json` file."
msgstr ""

# P
#: ./docs/11.x/upgrade.md:595
msgid "Sanctum 4.0 no longer automatically loads migrations from its own migrations directory. Instead, you should run the following command to publish Sanctum's migrations to your application:"
msgstr ""

# CODE: shell
#: ./docs/11.x/upgrade.md:597
msgid "php artisan vendor:publish --tag=sanctum-migrations"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:597
msgid "To learn more about the available configuration options, please review the [Symfony Mailer documentation](https://symfony.com/doc/6.0/mailer.html#transport-setup)."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:600
msgid "In spite of the example above, you are not generally advised to disable SSL verification since it introduces the possibility of \"man-in-the-middle\" attacks."
msgstr ""

# P
#: ./docs/11.x/upgrade.md:601
msgid "Then, in your application's `config/sanctum.php` configuration file, you should update the references to the `authenticate_session`, `encrypt_cookies`, and `validate_csrf_token` middleware to the following:"
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:602
msgid "SMTP `auth_mode`"
msgstr ""

# CODE
#: ./docs/11.x/upgrade.md:603
msgid "'middleware' => [\n"
"    'authenticate_session' => Laravel\\Sanctum\\Http\\Middleware\\AuthenticateSession::class,\n"
"    'encrypt_cookies' => Illuminate\\Cookie\\Middleware\\EncryptCookies::class,\n"
"    'validate_csrf_token' => Illuminate\\Foundation\\Http\\Middleware\\ValidateCsrfToken::class,\n"
"],"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:604
msgid "Defining the SMTP `auth_mode` in the `mail` configuration file is no longer required. The authentication mode will be automatically negotiated between Symfony Mailer and the SMTP server."
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:606
msgid "Failed Recipients"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:608
msgid "It is no longer possible to retrieve a list of failed recipients after sending a message. Instead, a `Symfony\\Component\\Mailer\\Exception\\TransportExceptionInterface` exception will be thrown if a message fails to send. Instead of relying on retrieving invalid email addresses after sending a message, we recommend that you validate email addresses before sending the message instead."
msgstr ""

# P
#: ./docs/11.x/upgrade.md:609
#~ msgid "<a name=\"telescope\"></a>"
#~ msgstr ""

# H3
#: ./docs/11.x/upgrade.md:610
msgid "Telescope"
msgstr ""

# H3
#: ./docs/9.x/upgrade.md:610
#: ./docs/11.x/upgrade.md:455
msgid "Packages"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:612
#~ msgid "<a name=\"the-lang-directory\"></a>"
#~ msgstr ""

# H4
#: ./docs/11.x/upgrade.md:613
msgid "Updating Telescope"
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:613
msgid "The `lang` Directory"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:617
msgid "Laravel 11 no longer supports Laravel Telescope 4.x. Therefore, you should update your application's Laravel Telescope dependency to `^5.0` in your `composer.json` file."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:617
msgid "In new Laravel applications, the `resources/lang` directory is now located in the root project directory (`lang`). If your package is publishing language files to this directory, you should ensure that your package is publishing to `app()->langPath()` instead of a hard-coded path."
msgstr ""

# P
#: ./docs/11.x/upgrade.md:619
msgid "Telescope 5.0 no longer automatically loads migrations from its own migrations directory. Instead, you should run the following command to publish Telescope's migrations to your application:"
msgstr ""

# CODE: shell
#: ./docs/11.x/upgrade.md:621
msgid "php artisan vendor:publish --tag=telescope-migrations"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:622
#~ msgid "<a name=\"the-opis-closure-library\"></a>"
#~ msgstr ""

# H4
#: ./docs/9.x/upgrade.md:623
msgid "The `opis/closure` Library"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:625
#~ msgid "<a name=\"spatie-once-package\"></a>"
#~ msgstr ""

# H3
#: ./docs/11.x/upgrade.md:626
msgid "Spatie Once Package"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:627
msgid "Laravel's dependency on `opis/closure` has been replaced by `laravel/serializable-closure`. This should not cause any breaking change in your application unless you are interacting with the `opis/closure` library directly. In addition, the previously deprecated `Illuminate\\Queue\\SerializableClosureFactory` and `Illuminate\\Queue\\SerializableClosure` classes have been removed. If you are interacting with `opis/closure` library directly or using any of the removed classes, you may use [Laravel Serializable Closure](https://github.com/laravel/serializable-closure) instead."
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:629
msgid "The Failed Job Provider `flush` Method"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:630
msgid "Laravel 11 now provides its own [`once` function](/docs/{{version}}/helpers#method-once) to ensure that a given closure is only executed once. Therefore, if your application has a dependency on the `spatie/once` package, you should remove it from your application's `composer.json` file to avoid conflicts."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:633
msgid "The `flush` method defined by the `Illuminate\\Queue\\Failed\\FailedJobProviderInterface` interface now accepts an `$hours` argument which determines how old a failed job must be (in hours) before it is flushed by the `queue:flush` command. If you are manually implementing the `FailedJobProviderInterface` you should ensure that your implementation is updated to reflect this new argument:"
msgstr ""

# P
#: ./docs/11.x/upgrade.md:635
msgid "We also encourage you to view the changes in the `laravel/laravel` [GitHub repository](https://github.com/laravel/laravel). While many of these changes are not required, you may wish to keep these files in sync with your application. Some of these changes will be covered in this upgrade guide, but others, such as changes to configuration files or comments, will not be. You can easily view the changes with the [GitHub comparison tool](https://github.com/laravel/laravel/compare/10.x...11.x) and choose which updates are important to you."
msgstr ""

# CODE: php
#: ./docs/9.x/upgrade.md:635
msgid "public function flush($hours = null);"
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:641
msgid "The `getSession` Method"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:645
msgid "The `Symfony\\Component\\HttpFoundaton\\Request` class that is extended by Laravel's own `Illuminate\\Http\\Request` class offers a `getSession` method to get the current session storage handler. This method is not documented by Laravel as most Laravel applications interact with the session through Laravel's own `session` method."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:647
msgid "The `getSession` method previously returned an instance of `Illuminate\\Session\\Store` or `null`; however, due to the Symfony 6.x release enforcing a return type of `Symfony\\Component\\HttpFoundation\\Session\\SessionInterface`, the `getSession` now correctly returns a `SessionInterface` implementation or throws an `\\Symfony\\Component\\HttpFoundation\\Exception\\SessionNotFoundException` exception when no session is available."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:651
#~ msgid "<a name=\"the-assert-deleted-method\"></a>"
#~ msgstr ""

# H4
#: ./docs/9.x/upgrade.md:652
msgid "The `assertDeleted` Method"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:656
msgid "All calls to the `assertDeleted` method should be updated to `assertModelMissing`."
msgstr ""

# H3
#: ./docs/9.x/upgrade.md:658
msgid "Trusted Proxies"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:662
msgid "If you are upgrading your Laravel 8 project to Laravel 9 by importing your existing application code into a totally new Laravel 9 application skeleton, you may need to update your application's \"trusted proxy\" middleware."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:664
msgid "Within your `app/Http/Middleware/TrustProxies.php` file, update `use Fideloper\\Proxy\\TrustProxies as Middleware` to `use Illuminate\\Http\\Middleware\\TrustProxies as Middleware`."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:666
msgid "Next, within `app/Http/Middleware/TrustProxies.php`, you should update the `$headers` property definition:"
msgstr ""

# CODE: php
#: ./docs/9.x/upgrade.md:668
msgid "// Before...\n"
"protected $headers = Request::HEADER_X_FORWARDED_ALL;\n\n"
"// After...\n"
"protected $headers =\n"
"    Request::HEADER_X_FORWARDED_FOR |\n"
"    Request::HEADER_X_FORWARDED_HOST |\n"
"    Request::HEADER_X_FORWARDED_PORT |\n"
"    Request::HEADER_X_FORWARDED_PROTO |\n"
"    Request::HEADER_X_FORWARDED_AWS_ELB;"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:681
msgid "Finally, you can remove the `fideloper/proxy` Composer dependency from your application:"
msgstr ""

# CODE: shell
#: ./docs/9.x/upgrade.md:683
msgid "composer remove fideloper/proxy"
msgstr ""

# H4
#: ./docs/9.x/upgrade.md:689
msgid "Form Request `validated` Method"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:693
msgid "The `validated` method offered by form requests now accepts `$key` and `$default` arguments. If you are manually overwriting the definition of this method, you should update your method's signature to reflect these new arguments:"
msgstr ""

# CODE: php
#: ./docs/9.x/upgrade.md:695
msgid "public function validated($key = null, $default = null)"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:699
#~ msgid "<a name=\"the-password-rule\"></a>"
#~ msgstr ""

# H4
#: ./docs/9.x/upgrade.md:700
msgid "The `password` Rule"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:704
msgid "The `password` rule, which validates that the given input value matches the authenticated user's current password, has been renamed to `current_password`."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:706
#~ msgid "<a name=\"unvalidated-array-keys\"></a>"
#~ msgstr ""

# H4
#: ./docs/9.x/upgrade.md:707
msgid "Unvalidated Array Keys"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:711
msgid "In previous releases of Laravel, you were required to manually instruct Laravel's validator to exclude unvalidated array keys from the \"validated\" data it returns, especially in combination with an `array` rule that does not specify a list of allowed keys."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:713
msgid "However, in Laravel 9.x, unvalidated array keys are always excluded from the \"validated\" data even when no allowed keys have been specified via the `array` rule. Typically, this behavior is the most expected behavior and the previous `excludeUnvalidatedArrayKeys` method was only added to Laravel 8.x as a temporary measure in order to preserve backwards compatibility."
msgstr ""

# P
#: ./docs/9.x/upgrade.md:715
msgid "Although it is not recommended, you may opt-in to the previous Laravel 8.x behavior by invoking a new `includeUnvalidatedArrayKeys` method within the `boot` method of one of your application's service providers:"
msgstr ""

# CODE: php
#: ./docs/9.x/upgrade.md:717
msgid "use Illuminate\\Support\\Facades\\Validator;\n\n"
"/**\n"
" * Register any application services.\n"
" *\n"
" * @return void\n"
" */\n"
"public function boot()\n"
"{\n"
"    Validator::includeUnvalidatedArrayKeys();\n"
"}"
msgstr ""

# P
#: ./docs/9.x/upgrade.md:734
msgid "We also encourage you to view the changes in the `laravel/laravel` [GitHub repository](https://github.com/laravel/laravel). While many of these changes are not required, you may wish to keep these files in sync with your application. Some of these changes will be covered in this upgrade guide, but others, such as changes to configuration files or comments, will not be. You can easily view the changes with the [GitHub comparison tool](https://github.com/laravel/laravel/compare/8.x...9.x) and choose which updates are important to you."
msgstr ""

