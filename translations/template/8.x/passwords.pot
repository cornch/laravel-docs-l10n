# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Taylor Otwell
# This file is distributed under the same license as the Laravel Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2021-04-05 10:07+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title #
#: docs/8.x/passwords.md:1
#, no-wrap
msgid "Resetting Passwords"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:11
#, no-wrap
msgid ""
"- [Introduction](#introduction)\n"
"    - [Model Preparation](#model-preparation)\n"
"    - [Database Preparation](#database-preparation)\n"
"    - [Configuring Trusted Hosts](#configuring-trusted-hosts)\n"
"- [Routing](#routing)\n"
"    - [Requesting The Password Reset "
"Link](#requesting-the-password-reset-link)\n"
"    - [Resetting The Password](#resetting-the-password)\n"
"- [Customization](#password-customization)\n"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:13
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/passwords.md:13
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:16
msgid ""
"Most web applications provide a way for users to reset their forgotten "
"passwords. Rather than forcing you to re-implement this by hand for every "
"application you create, Laravel provides convenient services for sending "
"password reset links and secure resetting passwords."
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:18
#, no-wrap
msgid ""
"> {tip} Want to get started fast? Install a Laravel [application starter "
"kit](/docs/{{version}}/starter-kits) in a fresh Laravel "
"application. Laravel's starter kits will take care of scaffolding your "
"entire authentication system, including resetting forgotten passwords.\n"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:20
#, no-wrap
msgid "<a name=\"model-preparation\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/passwords.md:20
#, no-wrap
msgid "Model Preparation"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:23
msgid ""
"Before using the password reset features of Laravel, your application's "
"`App\\Models\\User` model must use the "
"`Illuminate\\Notifications\\Notifiable` trait. Typically, this trait is "
"already included on the default `App\\Models\\User` model that is created "
"with new Laravel applications."
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:25
msgid ""
"Next, verify that your `App\\Models\\User` model implements the "
"`Illuminate\\Contracts\\Auth\\CanResetPassword` contract. The "
"`App\\Models\\User` model included with the framework already implements "
"this interface, and uses the `Illuminate\\Auth\\Passwords\\CanResetPassword` "
"trait to include the methods needed to implement the interface."
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:27
#, no-wrap
msgid "<a name=\"database-preparation\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/passwords.md:27
#, no-wrap
msgid "Database Preparation"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:30
msgid ""
"A table must be created to store your application's password reset "
"tokens. The migration for this table is included in the default Laravel "
"application, so you only need to migrate your database to create this table:"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:32
#, no-wrap
msgid "    php artisan migrate\n"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:34
#, no-wrap
msgid "<a name=\"configuring-trusted-hosts\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/passwords.md:34
#, no-wrap
msgid "Configuring Trusted Hosts"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:37
msgid ""
"By default, Laravel will respond to all requests it receives regardless of "
"the content of the HTTP request's `Host` header. In addition, the `Host` "
"header's value will be used when generating absolute URLs to your "
"application during a web request."
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:39
msgid ""
"Typically, you should configure your web server, such as Nginx or Apache, to "
"only send requests to your application that match a given host "
"name. However, if you do not have the ability to customize your web server "
"directly and need to instruct Laravel to only respond to certain host names, "
"you may do so by enabling the `App\\Http\\Middleware\\TrustHosts` middleware "
"for your application. This is particular important when your application "
"offers password reset functionality."
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:41
msgid ""
"To learn more about this middleware, please consult the [`TrustHosts` "
"middleware "
"documentation](/docs/{{version}}/requests#configuring-trusted-hosts)."
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:43
#, no-wrap
msgid "<a name=\"routing\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/passwords.md:43
#, no-wrap
msgid "Routing"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:46
msgid ""
"To properly implement support for allowing users to reset their passwords, "
"we will need to define several routes. First, we will need a pair of routes "
"to handle allowing the user to request a password reset link via their email "
"address. Second, we will need a pair of routes to handle actually resetting "
"the password once the user visits the password reset link that is emailed to "
"them and completes the password reset form."
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:48
#, no-wrap
msgid "<a name=\"requesting-the-password-reset-link\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/passwords.md:48
#, no-wrap
msgid "Requesting The Password Reset Link"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:51
#, no-wrap
msgid "<a name=\"the-password-reset-link-request-form\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/passwords.md:51
#, no-wrap
msgid "The Password Reset Link Request Form"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:54
msgid ""
"First, we will define the routes that are needed to request password reset "
"links. To get started, we will define a route that returns a view with the "
"password reset link request form:"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:58
#, no-wrap
msgid ""
"    Route::get('/forgot-password', function () {\n"
"        return view('auth.forgot-password');\n"
"    })->middleware('guest')->name('password.request');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:60
msgid ""
"The view that is returned by this route should have a form containing an "
"`email` field, which will allow the user to request a password reset link "
"for a given email address."
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:62
#, no-wrap
msgid "<a name=\"password-reset-link-handling-the-form-submission\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/passwords.md:62 docs/8.x/passwords.md:104
#, no-wrap
msgid "Handling The Form Submission"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:65
msgid ""
"Next, we will define a route that handles the form submission request from "
"the \"forgot password\" view. This route will be responsible for validating "
"the email address and sending the password reset request to the "
"corresponding user:"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:68
#, no-wrap
msgid ""
"    use Illuminate\\Http\\Request;\n"
"    use Illuminate\\Support\\Facades\\Password;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:71
#, no-wrap
msgid ""
"    Route::post('/forgot-password', function (Request $request) {\n"
"        $request->validate(['email' => 'required|email']);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:75
#, no-wrap
msgid ""
"        $status = Password::sendResetLink(\n"
"            $request->only('email')\n"
"        );\n"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:80
#, no-wrap
msgid ""
"        return $status === Password::RESET_LINK_SENT\n"
"                    ? back()->with(['status' => __($status)])\n"
"                    : back()->withErrors(['email' => __($status)]);\n"
"    })->middleware('guest')->name('password.email');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:82
msgid ""
"Before moving on, let's examine this route in more detail. First, the "
"request's `email` attribute is validated. Next, we will use Laravel's "
"built-in \"password broker\" (via the `Password` facade) to send a password "
"reset link to the user. The password broker will take care of retrieving the "
"user by the given field (in this case, the email address) and sending the "
"user a password reset link via Laravel's built-in [notification "
"system](/docs/{{version}}/notifications)."
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:84
msgid ""
"The `sendResetLink` method returns a \"status\" slug. This status may be "
"translated using Laravel's [localization](/docs/{{version}}/localization) "
"helpers in order to display a user-friendly message to the user regarding "
"the status of their request. The translation of the password reset status is "
"determined by your application's `resources/lang/{lang}/passwords.php` "
"language file. An entry for each possible value of the status slug is "
"located within the `passwords` language file."
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:86
msgid ""
"You may be wondering how Laravel knows how to retrieve the user record from "
"your application's database when calling the `Password` facade's "
"`sendResetLink` method. The Laravel password broker utilizes your "
"authentication system's \"user providers\" to retrieve database records. The "
"user provider used by the password broker is configured within the "
"`passwords` configuration array of your `config/auth.php` configuration "
"file. To learn more about writing custom user providers, consult the "
"[authentication "
"documentation](/docs/{{version}}/authentication#adding-custom-user-providers)."
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:88
#, no-wrap
msgid ""
"> {tip} When manually implementing password resets, you are required to "
"define the contents of the views and routes yourself. If you would like "
"scaffolding that includes all necessary authentication and verification "
"logic, check out the [Laravel application starter "
"kits](/docs/{{version}}/starter-kits).\n"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:90
#, no-wrap
msgid "<a name=\"resetting-the-password\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/passwords.md:90
#, no-wrap
msgid "Resetting The Password"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:93
#, no-wrap
msgid "<a name=\"the-password-reset-form\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/passwords.md:93
#, no-wrap
msgid "The Password Reset Form"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:96
msgid ""
"Next, we will define the routes necessary to actually reset the password "
"once the user clicks on the password reset link that has been emailed to "
"them and provides a new password. First, let's define the route that will "
"display the reset password form that is displayed when the user clicks the "
"reset password link. This route will receive a `token` parameter that we "
"will use later to verify the password reset request:"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:100
#, no-wrap
msgid ""
"    Route::get('/reset-password/{token}', function ($token) {\n"
"        return view('auth.reset-password', ['token' => $token]);\n"
"    })->middleware('guest')->name('password.reset');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:102
msgid ""
"The view that is returned by this route should display a form containing an "
"`email` field, a `password` field, a `password_confirmation` field, and a "
"hidden `token` field, which should contain the value of the secret `$token` "
"received by our route."
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:104
#, no-wrap
msgid "<a name=\"password-reset-handling-the-form-submission\"></a>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:107
msgid ""
"Of course, we need to define a route to actually handle the password reset "
"form submission. This route will be responsible for validating the incoming "
"request and updating the user's password in the database:"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:113
#, no-wrap
msgid ""
"    use Illuminate\\Auth\\Events\\PasswordReset;\n"
"    use Illuminate\\Http\\Request;\n"
"    use Illuminate\\Support\\Facades\\Hash;\n"
"    use Illuminate\\Support\\Facades\\Password;\n"
"    use Illuminate\\Support\\Str;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:120
#, no-wrap
msgid ""
"    Route::post('/reset-password', function (Request $request) {\n"
"        $request->validate([\n"
"            'token' => 'required',\n"
"            'email' => 'required|email',\n"
"            'password' => 'required|min:8|confirmed',\n"
"        ]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:127
#, no-wrap
msgid ""
"        $status = Password::reset(\n"
"            $request->only('email', 'password', 'password_confirmation', "
"'token'),\n"
"            function ($user, $password) use ($request) {\n"
"                $user->forceFill([\n"
"                    'password' => Hash::make($password)\n"
"                ])->setRememberToken(Str::random(60));\n"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:129
#, no-wrap
msgid "                $user->save();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:133
#, no-wrap
msgid ""
"                event(new PasswordReset($user));\n"
"            }\n"
"        );\n"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:138
#, no-wrap
msgid ""
"        return $status == Password::PASSWORD_RESET\n"
"                    ? redirect()->route('login')->with('status', "
"__($status))\n"
"                    : back()->withErrors(['email' => [__($status)]]);\n"
"    })->middleware('guest')->name('password.update');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:140
msgid ""
"Before moving on, let's examine this route in more detail. First, the "
"request's `token`, `email`, and `password` attributes are validated. Next, "
"we will use Laravel's built-in \"password broker\" (via the `Password` "
"facade) to validate the password reset request credentials."
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:142
msgid ""
"If the token, email address, and password given to the password broker are "
"valid, the closure passed to the `reset` method will be invoked. Within this "
"closure, which receives the user instance and the plain-text password "
"provided to the password reset form, we may update the user's password in "
"the database."
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:144
msgid ""
"The `reset` method returns a \"status\" slug. This status may be translated "
"using Laravel's [localization](/docs/{{version}}/localization) helpers in "
"order to display a user-friendly message to the user regarding the status of "
"their request. The translation of the password reset status is determined by "
"your application's `resources/lang/{lang}/passwords.php` language file. An "
"entry for each possible value of the status slug is located within the "
"`passwords` language file."
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:146
msgid ""
"Before moving on, you may be wondering how Laravel knows how to retrieve the "
"user record from your application's database when calling the `Password` "
"facade's `reset` method. The Laravel password broker utilizes your "
"authentication system's \"user providers\" to retrieve database records. The "
"user provider used by the password broker is configured within the "
"`passwords` configuration array of your `config/auth.php` configuration "
"file. To learn more about writing custom user providers, consult the "
"[authentication "
"documentation](/docs/{{version}}/authentication#adding-custom-user-providers)."
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:148
#, no-wrap
msgid "<a name=\"password-customization\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/passwords.md:148
#, no-wrap
msgid "Customization"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:151
#, no-wrap
msgid "<a name=\"reset-link-customization\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/passwords.md:151
#, no-wrap
msgid "Reset Link Customization"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:154
msgid ""
"You may customize the password reset link URL using the `createUrlUsing` "
"method provided by the `ResetPassword` notification class. This method "
"accepts a closure which receives the user instance that is receiving the "
"notification as well as the password reset link token. Typically, you should "
"call this method from your `App\\Providers\\AuthServiceProvider` service "
"provider's `boot` method:"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:156
#, no-wrap
msgid "    use Illuminate\\Auth\\Notifications\\ResetPassword;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:165
#, no-wrap
msgid ""
"    /**\n"
"     * Register any authentication / authorization services.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function boot()\n"
"    {\n"
"        $this->registerPolicies();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:170
#, no-wrap
msgid ""
"        ResetPassword::createUrlUsing(function ($user, string $token) {\n"
"            return 'https://example.com/reset-password?token='.$token;\n"
"        });\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:172
#, no-wrap
msgid "<a name=\"reset-email-customization\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/passwords.md:172
#, no-wrap
msgid "Reset Email Customization"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:175
msgid ""
"You may easily modify the notification class used to send the password reset "
"link to the user. To get started, override the "
"`sendPasswordResetNotification` method on your `App\\Models\\User` "
"model. Within this method, you may send the notification using any "
"[notification class](/docs/{{version}}/notifications) of your own "
"creation. The password reset `$token` is the first argument received by the "
"method. You may use this `$token` to build the password reset URL of your "
"choice and send your notification to the user:"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:177
#, no-wrap
msgid "    use App\\Notifications\\ResetPasswordNotification;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:187
#, no-wrap
msgid ""
"    /**\n"
"     * Send a password reset notification to the user.\n"
"     *\n"
"     * @param  string  $token\n"
"     * @return void\n"
"     */\n"
"    public function sendPasswordResetNotification($token)\n"
"    {\n"
"        $url = 'https://example.com/reset-password?token='.$token;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/passwords.md:189
#, no-wrap
msgid ""
"        $this->notify(new ResetPasswordNotification($url));\n"
"    }\n"
msgstr ""
