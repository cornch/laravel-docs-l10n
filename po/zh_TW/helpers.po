msgid ""
msgstr ""
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/templates/helpers.pot\n"
"X-Crowdin-File-ID: 79\n"
"Project-Id-Version: laravel-docs\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"PO-Revision-Date: 2022-02-13 13:40\n"

#: docs/8.x/helpers.md:block 1 (header)
msgid "Helpers"
msgstr "輔助函式"

#: docs/8.x/helpers.md:block 2 (unordered list)
msgid "[Introduction](#introduction)"
msgstr "[簡介](#introduction)"

#: docs/8.x/helpers.md:block 2 (unordered list)
msgid "[Available Methods](#available-methods)"
msgstr "[可用方法](#available-methods)"

#: docs/8.x/helpers.md:block 4 (header)
msgid "Introduction"
msgstr "簡介"

#: docs/8.x/helpers.md:block 5 (paragraph)
msgid "Laravel includes a variety of global \"helper\" PHP functions. Many of these functions are used by the framework itself; however, you are free to use them in your own applications if you find them convenient."
msgstr "Laravel 提供了多種全域 PHP「輔助函式」。這些函式中，大部分都是 Laravel 本身有在使用的。不過，若你覺得這些方法很方便的話，也可以在你自己的專案內使用。"

#: docs/8.x/helpers.md:block 7 (header)
msgid "Available Methods"
msgstr "可用的方法"

#: docs/8.x/helpers.md:block 10 (header)
msgid "Arrays & Objects"
msgstr "陣列與物件"

#: docs/8.x/helpers.md:block 12 (paragraph)
msgid "[Arr::accessible](#method-array-accessible) [Arr::add](#method-array-add) [Arr::collapse](#method-array-collapse) [Arr::crossJoin](#method-array-crossjoin) [Arr::divide](#method-array-divide) [Arr::dot](#method-array-dot) [Arr::except](#method-array-except) [Arr::exists](#method-array-exists) [Arr::first](#method-array-first) [Arr::flatten](#method-array-flatten) [Arr::forget](#method-array-forget) [Arr::get](#method-array-get) [Arr::has](#method-array-has) [Arr::hasAny](#method-array-hasany) [Arr::isAssoc](#method-array-isassoc) [Arr::last](#method-array-last) [Arr::only](#method-array-only) [Arr::pluck](#method-array-pluck) [Arr::prepend](#method-array-prepend) [Arr::pull](#method-array-pull) [Arr::query](#method-array-query) [Arr::random](#method-array-random) [Arr::set](#method-array-set) [Arr::shuffle](#method-array-shuffle) [Arr::sort](#method-array-sort) [Arr::sortRecursive](#method-array-sort-recursive) [Arr::toCssClasses](#method-array-to-css-classes) [Arr::undot](#method-array-undot) [Arr::where](#method-array-where) [Arr::whereNotNull](#method-array-where-not-null) [Arr::wrap](#method-array-wrap) [data_fill](#method-data-fill) [data_get](#method-data-get) [data_set](#method-data-set) [head](#method-head) [last](#method-last)"
msgstr "[Arr::accessible](#method-array-accessible) [Arr::add](#method-array-add) [Arr::collapse](#method-array-collapse) [Arr::crossJoin](#method-array-crossjoin) [Arr::divide](#method-array-divide) [Arr::dot](#method-array-dot) [Arr::except](#method-array-except) [Arr::exists](#method-array-exists) [Arr::first](#method-array-first) [Arr::flatten](#method-array-flatten) [Arr::forget](#method-array-forget) [Arr::get](#method-array-get) [Arr::has](#method-array-has) [Arr::hasAny](#method-array-hasany) [Arr::isAssoc](#method-array-isassoc) [Arr::last](#method-array-last) [Arr::only](#method-array-only) [Arr::pluck](#method-array-pluck) [Arr::prepend](#method-array-prepend) [Arr::pull](#method-array-pull) [Arr::query](#method-array-query) [Arr::random](#method-array-random) [Arr::set](#method-array-set) [Arr::shuffle](#method-array-shuffle) [Arr::sort](#method-array-sort) [Arr::sortRecursive](#method-array-sort-recursive) [Arr::toCssClasses](#method-array-to-css-classes) [Arr::undot](#method-array-undot) [Arr::where](#method-array-where) [Arr::whereNotNull](#method-array-where-not-null) [Arr::wrap](#method-array-wrap) [data_fill](#method-data-fill) [data_get](#method-data-get) [data_set](#method-data-set) [head](#method-head) [last](#method-last)"

#: docs/8.x/helpers.md:block 15 (header)
msgid "Paths"
msgstr "路徑"

#: docs/8.x/helpers.md:block 17 (paragraph)
msgid "[app_path](#method-app-path) [base_path](#method-base-path) [config_path](#method-config-path) [database_path](#method-database-path) [mix](#method-mix) [public_path](#method-public-path) [resource_path](#method-resource-path) [storage_path](#method-storage-path)"
msgstr "[app_path](#method-app-path) [base_path](#method-base-path) [config_path](#method-config-path) [database_path](#method-database-path) [mix](#method-mix) [public_path](#method-public-path) [resource_path](#method-resource-path) [storage_path](#method-storage-path)"

#: docs/8.x/helpers.md:block 20 (header)
msgid "Strings"
msgstr "字串"

#: docs/8.x/helpers.md:block 22 (paragraph)
msgid "[__](#method-__) [class_basename](#method-class-basename) [e](#method-e) [preg_replace_array](#method-preg-replace-array) [Str::after](#method-str-after) [Str::afterLast](#method-str-after-last) [Str::ascii](#method-str-ascii) [Str::before](#method-str-before) [Str::beforeLast](#method-str-before-last) [Str::between](#method-str-between) [Str::camel](#method-camel-case) [Str::contains](#method-str-contains) [Str::containsAll](#method-str-contains-all) [Str::endsWith](#method-ends-with) [Str::finish](#method-str-finish) [Str::headline](#method-str-headline) [Str::is](#method-str-is) [Str::isAscii](#method-str-is-ascii) [Str::isUuid](#method-str-is-uuid) [Str::kebab](#method-kebab-case) [Str::length](#method-str-length) [Str::limit](#method-str-limit) [Str::lower](#method-str-lower) [Str::markdown](#method-str-markdown) [Str::mask](#method-str-mask) [Str::orderedUuid](#method-str-ordered-uuid) [Str::padBoth](#method-str-padboth) [Str::padLeft](#method-str-padleft) [Str::padRight](#method-str-padright) [Str::plural](#method-str-plural) [Str::pluralStudly](#method-str-plural-studly) [Str::random](#method-str-random) [Str::remove](#method-str-remove) [Str::replace](#method-str-replace) [Str::replaceArray](#method-str-replace-array) [Str::replaceFirst](#method-str-replace-first) [Str::replaceLast](#method-str-replace-last) [Str::reverse](#method-str-reverse) [Str::singular](#method-str-singular) [Str::slug](#method-str-slug) [Str::snake](#method-snake-case) [Str::start](#method-str-start) [Str::startsWith](#method-starts-with) [Str::studly](#method-studly-case) [Str::substr](#method-str-substr) [Str::substrCount](#method-str-substrcount) [Str::substrReplace](#method-str-substrreplace) [Str::title](#method-title-case) [Str::toHtmlString](#method-str-to-html-string) [Str::ucfirst](#method-str-ucfirst) [Str::upper](#method-str-upper) [Str::uuid](#method-str-uuid) [Str::wordCount](#method-str-word-count) [Str::words](#method-str-words) [trans](#method-trans) [trans_choice](#method-trans-choice)"
msgstr "[__](#method-__) [class_basename](#method-class-basename) [e](#method-e) [preg_replace_array](#method-preg-replace-array) [Str::after](#method-str-after) [Str::afterLast](#method-str-after-last) [Str::ascii](#method-str-ascii) [Str::before](#method-str-before) [Str::beforeLast](#method-str-before-last) [Str::between](#method-str-between) [Str::camel](#method-camel-case) [Str::contains](#method-str-contains) [Str::containsAll](#method-str-contains-all) [Str::endsWith](#method-ends-with) [Str::finish](#method-str-finish) [Str::headline](#method-str-headline) [Str::is](#method-str-is) [Str::isAscii](#method-str-is-ascii) [Str::isUuid](#method-str-is-uuid) [Str::kebab](#method-kebab-case) [Str::length](#method-str-length) [Str::limit](#method-str-limit) [Str::lower](#method-str-lower) [Str::markdown](#method-str-markdown) [Str::mask](#method-str-mask) [Str::orderedUuid](#method-str-ordered-uuid) [Str::padBoth](#method-str-padboth) [Str::padLeft](#method-str-padleft) [Str::padRight](#method-str-padright) [Str::plural](#method-str-plural) [Str::pluralStudly](#method-str-plural-studly) [Str::random](#method-str-random) [Str::remove](#method-str-remove) [Str::replace](#method-str-replace) [Str::replaceArray](#method-str-replace-array) [Str::replaceFirst](#method-str-replace-first) [Str::replaceLast](#method-str-replace-last) [Str::reverse](#method-str-reverse) [Str::singular](#method-str-singular) [Str::slug](#method-str-slug) [Str::snake](#method-snake-case) [Str::start](#method-str-start) [Str::startsWith](#method-starts-with) [Str::studly](#method-studly-case) [Str::substr](#method-str-substr) [Str::substrCount](#method-str-substrcount) [Str::substrReplace](#method-str-substrreplace) [Str::title](#method-title-case) [Str::toHtmlString](#method-str-to-html-string) [Str::ucfirst](#method-str-ucfirst) [Str::upper](#method-str-upper) [Str::uuid](#method-str-uuid) [Str::wordCount](#method-str-word-count) [Str::words](#method-str-words) [trans](#method-trans) [trans_choice](#method-trans-choice)"

#: docs/8.x/helpers.md:block 25 (header)
msgid "Fluent Strings"
msgstr "Fluent 字串"

#: docs/8.x/helpers.md:block 27 (paragraph)
msgid "[after](#method-fluent-str-after) [afterLast](#method-fluent-str-after-last) [append](#method-fluent-str-append) [ascii](#method-fluent-str-ascii) [basename](#method-fluent-str-basename) [before](#method-fluent-str-before) [beforeLast](#method-fluent-str-before-last) [between](#method-fluent-str-between) [camel](#method-fluent-str-camel) [contains](#method-fluent-str-contains) [containsAll](#method-fluent-str-contains-all) [dirname](#method-fluent-str-dirname) [endsWith](#method-fluent-str-ends-with) [exactly](#method-fluent-str-exactly) [explode](#method-fluent-str-explode) [finish](#method-fluent-str-finish) [is](#method-fluent-str-is) [isAscii](#method-fluent-str-is-ascii) [isEmpty](#method-fluent-str-is-empty) [isNotEmpty](#method-fluent-str-is-not-empty) [isUuid](#method-fluent-str-is-uuid) [kebab](#method-fluent-str-kebab) [length](#method-fluent-str-length) [limit](#method-fluent-str-limit) [lower](#method-fluent-str-lower) [ltrim](#method-fluent-str-ltrim) [markdown](#method-fluent-str-markdown) [mask](#method-fluent-str-mask) [match](#method-fluent-str-match) [matchAll](#method-fluent-str-match-all) [padBoth](#method-fluent-str-padboth) [padLeft](#method-fluent-str-padleft) [padRight](#method-fluent-str-padright) [pipe](#method-fluent-str-pipe) [plural](#method-fluent-str-plural) [prepend](#method-fluent-str-prepend) [remove](#method-fluent-str-remove) [replace](#method-fluent-str-replace) [replaceArray](#method-fluent-str-replace-array) [replaceFirst](#method-fluent-str-replace-first) [replaceLast](#method-fluent-str-replace-last) [replaceMatches](#method-fluent-str-replace-matches) [rtrim](#method-fluent-str-rtrim) [scan](#method-fluent-str-scan) [singular](#method-fluent-str-singular) [slug](#method-fluent-str-slug) [snake](#method-fluent-str-snake) [split](#method-fluent-str-split) [start](#method-fluent-str-start) [startsWith](#method-fluent-str-starts-with) [studly](#method-fluent-str-studly) [substr](#method-fluent-str-substr) [substrReplace](#method-fluent-str-substrreplace) [tap](#method-fluent-str-tap) [test](#method-fluent-str-test) [title](#method-fluent-str-title) [trim](#method-fluent-str-trim) [ucfirst](#method-fluent-str-ucfirst) [upper](#method-fluent-str-upper) [when](#method-fluent-str-when) [whenContains](#method-fluent-str-when-contains) [whenContainsAll](#method-fluent-str-when-contains-all) [whenEmpty](#method-fluent-str-when-empty) [whenNotEmpty](#method-fluent-str-when-not-empty) [whenStartsWith](#method-fluent-str-when-starts-with) [whenEndsWith](#method-fluent-str-when-ends-with) [whenExactly](#method-fluent-str-when-exactly) [whenIs](#method-fluent-str-when-is) [whenIsAscii](#method-fluent-str-when-is-ascii) [whenIsUuid](#method-fluent-str-when-is-uuid) [whenTest](#method-fluent-str-when-test) [wordCount](#method-fluent-str-word-count) [words](#method-fluent-str-words)"
msgstr "[after](#method-fluent-str-after) [afterLast](#method-fluent-str-after-last) [append](#method-fluent-str-append) [ascii](#method-fluent-str-ascii) [basename](#method-fluent-str-basename) [before](#method-fluent-str-before) [beforeLast](#method-fluent-str-before-last) [between](#method-fluent-str-between) [camel](#method-fluent-str-camel) [contains](#method-fluent-str-contains) [containsAll](#method-fluent-str-contains-all) [dirname](#method-fluent-str-dirname) [endsWith](#method-fluent-str-ends-with) [exactly](#method-fluent-str-exactly) [explode](#method-fluent-str-explode) [finish](#method-fluent-str-finish) [is](#method-fluent-str-is) [isAscii](#method-fluent-str-is-ascii) [isEmpty](#method-fluent-str-is-empty) [isNotEmpty](#method-fluent-str-is-not-empty) [isUuid](#method-fluent-str-is-uuid) [kebab](#method-fluent-str-kebab) [length](#method-fluent-str-length) [limit](#method-fluent-str-limit) [lower](#method-fluent-str-lower) [ltrim](#method-fluent-str-ltrim) [markdown](#method-fluent-str-markdown) [mask](#method-fluent-str-mask) [match](#method-fluent-str-match) [matchAll](#method-fluent-str-match-all) [padBoth](#method-fluent-str-padboth) [padLeft](#method-fluent-str-padleft) [padRight](#method-fluent-str-padright) [pipe](#method-fluent-str-pipe) [plural](#method-fluent-str-plural) [prepend](#method-fluent-str-prepend) [remove](#method-fluent-str-remove) [replace](#method-fluent-str-replace) [replaceArray](#method-fluent-str-replace-array) [replaceFirst](#method-fluent-str-replace-first) [replaceLast](#method-fluent-str-replace-last) [replaceMatches](#method-fluent-str-replace-matches) [rtrim](#method-fluent-str-rtrim) [scan](#method-fluent-str-scan) [singular](#method-fluent-str-singular) [slug](#method-fluent-str-slug) [snake](#method-fluent-str-snake) [split](#method-fluent-str-split) [start](#method-fluent-str-start) [startsWith](#method-fluent-str-starts-with) [studly](#method-fluent-str-studly) [substr](#method-fluent-str-substr) [substrReplace](#method-fluent-str-substrreplace) [tap](#method-fluent-str-tap) [test](#method-fluent-str-test) [title](#method-fluent-str-title) [trim](#method-fluent-str-trim) [ucfirst](#method-fluent-str-ucfirst) [upper](#method-fluent-str-upper) [when](#method-fluent-str-when) [whenContains](#method-fluent-str-when-contains) [whenContainsAll](#method-fluent-str-when-contains-all) [whenEmpty](#method-fluent-str-when-empty) [whenNotEmpty](#method-fluent-str-when-not-empty) [whenStartsWith](#method-fluent-str-when-starts-with) [whenEndsWith](#method-fluent-str-when-ends-with) [whenExactly](#method-fluent-str-when-exactly) [whenIs](#method-fluent-str-when-is) [whenIsAscii](#method-fluent-str-when-is-ascii) [whenIsUuid](#method-fluent-str-when-is-uuid) [whenTest](#method-fluent-str-when-test) [wordCount](#method-fluent-str-word-count) [words](#method-fluent-str-words)"

#: docs/8.x/helpers.md:block 30 (header)
msgid "URLs"
msgstr "URL"

#: docs/8.x/helpers.md:block 32 (paragraph)
msgid "[action](#method-action) [asset](#method-asset) [route](#method-route) [secure_asset](#method-secure-asset) [secure_url](#method-secure-url) [url](#method-url)"
msgstr "[action](#method-action) [asset](#method-asset) [route](#method-route) [secure_asset](#method-secure-asset) [secure_url](#method-secure-url) [url](#method-url)"

#: docs/8.x/helpers.md:block 35 (header)
msgid "Miscellaneous"
msgstr "其他"

#: docs/8.x/helpers.md:block 37 (paragraph)
msgid "[abort](#method-abort) [abort_if](#method-abort-if) [abort_unless](#method-abort-unless) [app](#method-app) [auth](#method-auth) [back](#method-back) [bcrypt](#method-bcrypt) [blank](#method-blank) [broadcast](#method-broadcast) [cache](#method-cache) [class_uses_recursive](#method-class-uses-recursive) [collect](#method-collect) [config](#method-config) [cookie](#method-cookie) [csrf_field](#method-csrf-field) [csrf_token](#method-csrf-token) [dd](#method-dd) [dispatch](#method-dispatch) [dump](#method-dump) [env](#method-env) [event](#method-event) [filled](#method-filled) [info](#method-info) [logger](#method-logger) [method_field](#method-method-field) [now](#method-now) [old](#method-old) [optional](#method-optional) [policy](#method-policy) [redirect](#method-redirect) [report](#method-report) [request](#method-request) [rescue](#method-rescue) [resolve](#method-resolve) [response](#method-response) [retry](#method-retry) [session](#method-session) [tap](#method-tap) [throw_if](#method-throw-if) [throw_unless](#method-throw-unless) [today](#method-today) [trait_uses_recursive](#method-trait-uses-recursive) [transform](#method-transform) [validator](#method-validator) [value](#method-value) [view](#method-view) [with](#method-with)"
msgstr "[abort](#method-abort) [abort_if](#method-abort-if) [abort_unless](#method-abort-unless) [app](#method-app) [auth](#method-auth) [back](#method-back) [bcrypt](#method-bcrypt) [blank](#method-blank) [broadcast](#method-broadcast) [cache](#method-cache) [class_uses_recursive](#method-class-uses-recursive) [collect](#method-collect) [config](#method-config) [cookie](#method-cookie) [csrf_field](#method-csrf-field) [csrf_token](#method-csrf-token) [dd](#method-dd) [dispatch](#method-dispatch) [dump](#method-dump) [env](#method-env) [event](#method-event) [filled](#method-filled) [info](#method-info) [logger](#method-logger) [method_field](#method-method-field) [now](#method-now) [old](#method-old) [optional](#method-optional) [policy](#method-policy) [redirect](#method-redirect) [report](#method-report) [request](#method-request) [rescue](#method-rescue) [resolve](#method-resolve) [response](#method-response) [retry](#method-retry) [session](#method-session) [tap](#method-tap) [throw_if](#method-throw-if) [throw_unless](#method-throw-unless) [today](#method-today) [trait_uses_recursive](#method-trait-uses-recursive) [transform](#method-transform) [validator](#method-validator) [value](#method-value) [view](#method-view) [with](#method-with)"

#: docs/8.x/helpers.md:block 40 (header)
msgid "Method Listing"
msgstr "方法清單"

#: docs/8.x/helpers.md:block 45 (header)
msgid "`Arr::accessible()` {.collection-method .first-collection-method}"
msgstr "`Arr::accessible()` {.collection-method .first-collection-method}"

#: docs/8.x/helpers.md:block 46 (paragraph)
msgid "The `Arr::accessible` method determines if the given value is array accessible:"
msgstr "`Arr::accessible` 方法判斷給定的值是否能以陣列方式存取："

#: docs/8.x/helpers.md:block 47 (code)
msgid "use Illuminate\\Support\\Arr;\n"
"use Illuminate\\Support\\Collection;\n\n"
"$isAccessible = Arr::accessible(['a' => 1, 'b' => 2]);\n\n"
"// true\n\n"
"$isAccessible = Arr::accessible(new Collection);\n\n"
"// true\n\n"
"$isAccessible = Arr::accessible('abc');\n\n"
"// false\n\n"
"$isAccessible = Arr::accessible(new stdClass);\n\n"
"// false\n"
msgstr "use Illuminate\\Support\\Arr;\n"
"use Illuminate\\Support\\Collection;\n\n"
"$isAccessible = Arr::accessible(['a' => 1, 'b' => 2]);\n\n"
"// true\n\n"
"$isAccessible = Arr::accessible(new Collection);\n\n"
"// true\n\n"
"$isAccessible = Arr::accessible('abc');\n\n"
"// false\n\n"
"$isAccessible = Arr::accessible(new stdClass);\n\n"
"// false\n"

#: docs/8.x/helpers.md:block 49 (header)
msgid "`Arr::add()` {.collection-method}"
msgstr "`Arr::add()` {.collection-method}"

#: docs/8.x/helpers.md:block 50 (paragraph)
msgid "The `Arr::add` method adds a given key / value pair to an array if the given key doesn't already exist in the array or is set to `null`:"
msgstr "`Arr::add` 方法會在給定的索引鍵 / 值配對不存在於給定陣列、或是該索引鍵的值 `null` 時將該配對新增到陣列上："

#: docs/8.x/helpers.md:block 51 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = Arr::add(['name' => 'Desk'], 'price', 100);\n\n"
"// ['name' => 'Desk', 'price' => 100]\n\n"
"$array = Arr::add(['name' => 'Desk', 'price' => null], 'price', 100);\n\n"
"// ['name' => 'Desk', 'price' => 100]\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = Arr::add(['name' => 'Desk'], 'price', 100);\n\n"
"// ['name' => 'Desk', 'price' => 100]\n\n"
"$array = Arr::add(['name' => 'Desk', 'price' => null], 'price', 100);\n\n"
"// ['name' => 'Desk', 'price' => 100]\n"

#: docs/8.x/helpers.md:block 53 (header)
msgid "`Arr::collapse()` {.collection-method}"
msgstr "`Arr::collapse()` {.collection-method}"

#: docs/8.x/helpers.md:block 54 (paragraph)
msgid "The `Arr::collapse` method collapses an array of arrays into a single array:"
msgstr "`Arr::collapse` 方法將一組陣列的陣列^[坍縮](Collapse)成單一陣列："

#: docs/8.x/helpers.md:block 55 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = Arr::collapse([[1, 2, 3], [4, 5, 6], [7, 8, 9]]);\n\n"
"// [1, 2, 3, 4, 5, 6, 7, 8, 9]\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = Arr::collapse([[1, 2, 3], [4, 5, 6], [7, 8, 9]]);\n\n"
"// [1, 2, 3, 4, 5, 6, 7, 8, 9]\n"

#: docs/8.x/helpers.md:block 57 (header)
msgid "`Arr::crossJoin()` {.collection-method}"
msgstr "`Arr::crossJoin()` {.collection-method}"

#: docs/8.x/helpers.md:block 58 (paragraph)
msgid "The `Arr::crossJoin` method cross joins the given arrays, returning a Cartesian product with all possible permutations:"
msgstr "`Arr::crossJoin` 方法^[交叉合併](Cross Join)給定的陣列，產生一個包含所有可能^[排列](Permutation)的^[笛卡兒積](Cartesian Product)："

#: docs/8.x/helpers.md:block 59 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$matrix = Arr::crossJoin([1, 2], ['a', 'b']);\n\n"
"/*\n"
"    [\n"
"        [1, 'a'],\n"
"        [1, 'b'],\n"
"        [2, 'a'],\n"
"        [2, 'b'],\n"
"    ]\n"
"*/\n\n"
"$matrix = Arr::crossJoin([1, 2], ['a', 'b'], ['I', 'II']);\n\n"
"/*\n"
"    [\n"
"        [1, 'a', 'I'],\n"
"        [1, 'a', 'II'],\n"
"        [1, 'b', 'I'],\n"
"        [1, 'b', 'II'],\n"
"        [2, 'a', 'I'],\n"
"        [2, 'a', 'II'],\n"
"        [2, 'b', 'I'],\n"
"        [2, 'b', 'II'],\n"
"    ]\n"
"*/\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$matrix = Arr::crossJoin([1, 2], ['a', 'b']);\n\n"
"/*\n"
"    [\n"
"        [1, 'a'],\n"
"        [1, 'b'],\n"
"        [2, 'a'],\n"
"        [2, 'b'],\n"
"    ]\n"
"*/\n\n"
"$matrix = Arr::crossJoin([1, 2], ['a', 'b'], ['I', 'II']);\n\n"
"/*\n"
"    [\n"
"        [1, 'a', 'I'],\n"
"        [1, 'a', 'II'],\n"
"        [1, 'b', 'I'],\n"
"        [1, 'b', 'II'],\n"
"        [2, 'a', 'I'],\n"
"        [2, 'a', 'II'],\n"
"        [2, 'b', 'I'],\n"
"        [2, 'b', 'II'],\n"
"    ]\n"
"*/\n"

#: docs/8.x/helpers.md:block 61 (header)
msgid "`Arr::divide()` {.collection-method}"
msgstr "`Arr::divide()` {.collection-method}"

#: docs/8.x/helpers.md:block 62 (paragraph)
msgid "The `Arr::divide` method returns two arrays: one containing the keys and the other containing the values of the given array:"
msgstr "`Arr::divide` 方法回傳兩個陣列：一個陣列包含給定陣列的索引鍵，而另一個陣列則包含給定陣列的值："

#: docs/8.x/helpers.md:block 63 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"[$keys, $values] = Arr::divide(['name' => 'Desk']);\n\n"
"// $keys: ['name']\n\n"
"// $values: ['Desk']\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"[$keys, $values] = Arr::divide(['name' => 'Desk']);\n\n"
"// $keys: ['name']\n\n"
"// $values: ['Desk']\n"

#: docs/8.x/helpers.md:block 65 (header)
msgid "`Arr::dot()` {.collection-method}"
msgstr "`Arr::dot()` {.collection-method}"

#: docs/8.x/helpers.md:block 66 (paragraph)
msgid "The `Arr::dot` method flattens a multi-dimensional array into a single level array that uses \"dot\" notation to indicate depth:"
msgstr "`Arr::dot` 方法將多為陣列^[扁平化](Flatten)為一個使用「點 (.)」標記法來表示深度的一維陣列："

#: docs/8.x/helpers.md:block 67 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['products' => ['desk' => ['price' => 100]]];\n\n"
"$flattened = Arr::dot($array);\n\n"
"// ['products.desk.price' => 100]\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = ['products' => ['desk' => ['price' => 100]]];\n\n"
"$flattened = Arr::dot($array);\n\n"
"// ['products.desk.price' => 100]\n"

#: docs/8.x/helpers.md:block 69 (header)
msgid "`Arr::except()` {.collection-method}"
msgstr "`Arr::except()` {.collection-method}"

#: docs/8.x/helpers.md:block 70 (paragraph)
msgid "The `Arr::except` method removes the given key / value pairs from an array:"
msgstr "`Arr::except` 方法從陣列中移除給定的索引鍵 / 值配對："

#: docs/8.x/helpers.md:block 71 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['name' => 'Desk', 'price' => 100];\n\n"
"$filtered = Arr::except($array, ['price']);\n\n"
"// ['name' => 'Desk']\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = ['name' => 'Desk', 'price' => 100];\n\n"
"$filtered = Arr::except($array, ['price']);\n\n"
"// ['name' => 'Desk']\n"

#: docs/8.x/helpers.md:block 73 (header)
msgid "`Arr::exists()` {.collection-method}"
msgstr "`Arr::exists()` {.collection-method}"

#: docs/8.x/helpers.md:block 74 (paragraph)
msgid "The `Arr::exists` method checks that the given key exists in the provided array:"
msgstr "`Arr::exists` 方法會檢查給定的索引鍵是否存在於提供的陣列中："

#: docs/8.x/helpers.md:block 75 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['name' => 'John Doe', 'age' => 17];\n\n"
"$exists = Arr::exists($array, 'name');\n\n"
"// true\n\n"
"$exists = Arr::exists($array, 'salary');\n\n"
"// false\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = ['name' => 'John Doe', 'age' => 17];\n\n"
"$exists = Arr::exists($array, 'name');\n\n"
"// true\n\n"
"$exists = Arr::exists($array, 'salary');\n\n"
"// false\n"

#: docs/8.x/helpers.md:block 77 (header)
msgid "`Arr::first()` {.collection-method}"
msgstr "`Arr::first()` {.collection-method}"

#: docs/8.x/helpers.md:block 78 (paragraph)
msgid "The `Arr::first` method returns the first element of an array passing a given truth test:"
msgstr "`Arr::first` 方法會回傳該陣列中通過給定布林測試的第一個元素："

#: docs/8.x/helpers.md:block 79 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [100, 200, 300];\n\n"
"$first = Arr::first($array, function ($value, $key) {\n"
"    return $value >= 150;\n"
"});\n\n"
"// 200\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = [100, 200, 300];\n\n"
"$first = Arr::first($array, function ($value, $key) {\n"
"    return $value >= 150;\n"
"});\n\n"
"// 200\n"

#: docs/8.x/helpers.md:block 80 (paragraph)
msgid "A default value may also be passed as the third parameter to the method. This value will be returned if no value passes the truth test:"
msgstr "也可以在第三個引數上提供一個預設值給該方法。若沒有任何值通過條件測試，就會回傳這個預設值："

#: docs/8.x/helpers.md:block 81 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$first = Arr::first($array, $callback, $default);\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$first = Arr::first($array, $callback, $default);\n"

#: docs/8.x/helpers.md:block 83 (header)
msgid "`Arr::flatten()` {.collection-method}"
msgstr "`Arr::flatten()` {.collection-method}"

#: docs/8.x/helpers.md:block 84 (paragraph)
msgid "The `Arr::flatten` method flattens a multi-dimensional array into a single level array:"
msgstr "`Arr::flatten` 方法會將一個多維陣列^[扁平化](Flatten)為單一維度："

#: docs/8.x/helpers.md:block 85 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['name' => 'Joe', 'languages' => ['PHP', 'Ruby']];\n\n"
"$flattened = Arr::flatten($array);\n\n"
"// ['Joe', 'PHP', 'Ruby']\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = ['name' => 'Joe', 'languages' => ['PHP', 'Ruby']];\n\n"
"$flattened = Arr::flatten($array);\n\n"
"// ['Joe', 'PHP', 'Ruby']\n"

#: docs/8.x/helpers.md:block 87 (header)
msgid "`Arr::forget()` {.collection-method}"
msgstr "`Arr::forget()` {.collection-method}"

#: docs/8.x/helpers.md:block 88 (paragraph)
msgid "The `Arr::forget` method removes a given key / value pair from a deeply nested array using \"dot\" notation:"
msgstr "`Arr::forget` 方法使用「點 (.)」標記法來在多層巢狀陣列中移除給定的索引鍵 / 值配對："

#: docs/8.x/helpers.md:block 89 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['products' => ['desk' => ['price' => 100]]];\n\n"
"Arr::forget($array, 'products.desk');\n\n"
"// ['products' => []]\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = ['products' => ['desk' => ['price' => 100]]];\n\n"
"Arr::forget($array, 'products.desk');\n\n"
"// ['products' => []]\n"

#: docs/8.x/helpers.md:block 91 (header)
msgid "`Arr::get()` {.collection-method}"
msgstr "`Arr::get()` {.collection-method}"

#: docs/8.x/helpers.md:block 92 (paragraph)
msgid "The `Arr::get` method retrieves a value from a deeply nested array using \"dot\" notation:"
msgstr "`Arr::get` 方法使用「點 (.)」標記法來在多層巢狀陣列中取值："

#: docs/8.x/helpers.md:block 93 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['products' => ['desk' => ['price' => 100]]];\n\n"
"$price = Arr::get($array, 'products.desk.price');\n\n"
"// 100\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = ['products' => ['desk' => ['price' => 100]]];\n\n"
"$price = Arr::get($array, 'products.desk.price');\n\n"
"// 100\n"

#: docs/8.x/helpers.md:block 94 (paragraph)
msgid "The `Arr::get` method also accepts a default value, which will be returned if the specified key is not present in the array:"
msgstr "`Arr::get` 還接受一個預設值。若指定的索引鍵不存在時會回傳該預設值："

#: docs/8.x/helpers.md:block 95 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$discount = Arr::get($array, 'products.desk.discount', 0);\n\n"
"// 0\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$discount = Arr::get($array, 'products.desk.discount', 0);\n\n"
"// 0\n"

#: docs/8.x/helpers.md:block 97 (header)
msgid "`Arr::has()` {.collection-method}"
msgstr "`Arr::has()` {.collection-method}"

#: docs/8.x/helpers.md:block 98 (paragraph)
msgid "The `Arr::has` method checks whether a given item or items exists in an array using \"dot\" notation:"
msgstr "`Arr::has` 方法使用「點 (.)」標記法來檢查給定的一個或多個項目是否存在："

#: docs/8.x/helpers.md:block 99 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['product' => ['name' => 'Desk', 'price' => 100]];\n\n"
"$contains = Arr::has($array, 'product.name');\n\n"
"// true\n\n"
"$contains = Arr::has($array, ['product.price', 'product.discount']);\n\n"
"// false\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = ['product' => ['name' => 'Desk', 'price' => 100]];\n\n"
"$contains = Arr::has($array, 'product.name');\n\n"
"// true\n\n"
"$contains = Arr::has($array, ['product.price', 'product.discount']);\n\n"
"// false\n"

#: docs/8.x/helpers.md:block 101 (header)
msgid "`Arr::hasAny()` {.collection-method}"
msgstr "`Arr::hasAny()` {.collection-method}"

#: docs/8.x/helpers.md:block 102 (paragraph)
msgid "The `Arr::hasAny` method checks whether any item in a given set exists in an array using \"dot\" notation:"
msgstr "`Arr::hasAny` 方法使用「點 (.)」標記法來檢查給定的多個項目中是否只少有一個存在："

#: docs/8.x/helpers.md:block 103 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['product' => ['name' => 'Desk', 'price' => 100]];\n\n"
"$contains = Arr::hasAny($array, 'product.name');\n\n"
"// true\n\n"
"$contains = Arr::hasAny($array, ['product.name', 'product.discount']);\n\n"
"// true\n\n"
"$contains = Arr::hasAny($array, ['category', 'product.discount']);\n\n"
"// false\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = ['product' => ['name' => 'Desk', 'price' => 100]];\n\n"
"$contains = Arr::hasAny($array, 'product.name');\n\n"
"// true\n\n"
"$contains = Arr::hasAny($array, ['product.name', 'product.discount']);\n\n"
"// true\n\n"
"$contains = Arr::hasAny($array, ['category', 'product.discount']);\n\n"
"// false\n"

#: docs/8.x/helpers.md:block 105 (header)
msgid "`Arr::isAssoc()` {.collection-method}"
msgstr "`Arr::isAssoc()` {.collection-method}"

#: docs/8.x/helpers.md:block 106 (paragraph)
msgid "The `Arr::isAssoc` returns `true` if the given array is an associative array. An array is considered \"associative\" if it doesn't have sequential numerical keys beginning with zero:"
msgstr "若給定的陣列為^[關聯式陣列](Associative Array)，`Arr::isAssoc` 回傳 `true`。當某個陣列的索引鍵不是以 0 開始依序排列的數字時，就是「關聯式」的陣列："

#: docs/8.x/helpers.md:block 107 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$isAssoc = Arr::isAssoc(['product' => ['name' => 'Desk', 'price' => 100]]);\n\n"
"// true\n\n"
"$isAssoc = Arr::isAssoc([1, 2, 3]);\n\n"
"// false\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$isAssoc = Arr::isAssoc(['product' => ['name' => 'Desk', 'price' => 100]]);\n\n"
"// true\n\n"
"$isAssoc = Arr::isAssoc([1, 2, 3]);\n\n"
"// false\n"

#: docs/8.x/helpers.md:block 109 (header)
msgid "`Arr::last()` {.collection-method}"
msgstr "`Arr::last()` {.collection-method}"

#: docs/8.x/helpers.md:block 110 (paragraph)
msgid "The `Arr::last` method returns the last element of an array passing a given truth test:"
msgstr "`Arr::last` 方法會回傳該陣列中通過給定布林測試的最後一個元素："

#: docs/8.x/helpers.md:block 111 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [100, 200, 300, 110];\n\n"
"$last = Arr::last($array, function ($value, $key) {\n"
"    return $value >= 150;\n"
"});\n\n"
"// 300\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = [100, 200, 300, 110];\n\n"
"$last = Arr::last($array, function ($value, $key) {\n"
"    return $value >= 150;\n"
"});\n\n"
"// 300\n"

#: docs/8.x/helpers.md:block 112 (paragraph)
msgid "A default value may be passed as the third argument to the method. This value will be returned if no value passes the truth test:"
msgstr "可以在第三個引數上提供一個預設值給該方法。若沒有任何值通過條件測試，就會回傳這個預設值："

#: docs/8.x/helpers.md:block 113 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$last = Arr::last($array, $callback, $default);\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$last = Arr::last($array, $callback, $default);\n"

#: docs/8.x/helpers.md:block 115 (header)
msgid "`Arr::only()` {.collection-method}"
msgstr "`Arr::only()` {.collection-method}"

#: docs/8.x/helpers.md:block 116 (paragraph)
msgid "The `Arr::only` method returns only the specified key / value pairs from the given array:"
msgstr "`Arr::only` 方法回傳給定陣列中特定的索引鍵 / 值配對："

#: docs/8.x/helpers.md:block 117 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['name' => 'Desk', 'price' => 100, 'orders' => 10];\n\n"
"$slice = Arr::only($array, ['name', 'price']);\n\n"
"// ['name' => 'Desk', 'price' => 100]\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = ['name' => 'Desk', 'price' => 100, 'orders' => 10];\n\n"
"$slice = Arr::only($array, ['name', 'price']);\n\n"
"// ['name' => 'Desk', 'price' => 100]\n"

#: docs/8.x/helpers.md:block 119 (header)
msgid "`Arr::pluck()` {.collection-method}"
msgstr "`Arr::pluck()` {.collection-method}"

#: docs/8.x/helpers.md:block 120 (paragraph)
msgid "The `Arr::pluck` method retrieves all of the values for a given key from an array:"
msgstr "`Arr::pluck` 方法可從給定陣列中取得給定索引鍵內的所有值："

#: docs/8.x/helpers.md:block 121 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [\n"
"    ['developer' => ['id' => 1, 'name' => 'Taylor']],\n"
"    ['developer' => ['id' => 2, 'name' => 'Abigail']],\n"
"];\n\n"
"$names = Arr::pluck($array, 'developer.name');\n\n"
"// ['Taylor', 'Abigail']\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = [\n"
"    ['developer' => ['id' => 1, 'name' => 'Taylor']],\n"
"    ['developer' => ['id' => 2, 'name' => 'Abigail']],\n"
"];\n\n"
"$names = Arr::pluck($array, 'developer.name');\n\n"
"// ['Taylor', 'Abigail']\n"

#: docs/8.x/helpers.md:block 122 (paragraph)
msgid "You may also specify how you wish the resulting list to be keyed:"
msgstr "也可以指定產生的清單要如何設定索引鍵："

#: docs/8.x/helpers.md:block 123 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$names = Arr::pluck($array, 'developer.name', 'developer.id');\n\n"
"// [1 => 'Taylor', 2 => 'Abigail']\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$names = Arr::pluck($array, 'developer.name', 'developer.id');\n\n"
"// [1 => 'Taylor', 2 => 'Abigail']\n"

#: docs/8.x/helpers.md:block 125 (header)
msgid "`Arr::prepend()` {.collection-method}"
msgstr "`Arr::prepend()` {.collection-method}"

#: docs/8.x/helpers.md:block 126 (paragraph)
msgid "The `Arr::prepend` method will push an item onto the beginning of an array:"
msgstr "`Arr::prepend` 方法會將某個項目放到該陣列的最前面："

#: docs/8.x/helpers.md:block 127 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['one', 'two', 'three', 'four'];\n\n"
"$array = Arr::prepend($array, 'zero');\n\n"
"// ['zero', 'one', 'two', 'three', 'four']\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = ['one', 'two', 'three', 'four'];\n\n"
"$array = Arr::prepend($array, 'zero');\n\n"
"// ['zero', 'one', 'two', 'three', 'four']\n"

#: docs/8.x/helpers.md:block 128 (paragraph)
msgid "If needed, you may specify the key that should be used for the value:"
msgstr "若有需要，也可以指定該值要使用的索引鍵："

#: docs/8.x/helpers.md:block 129 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['price' => 100];\n\n"
"$array = Arr::prepend($array, 'Desk', 'name');\n\n"
"// ['name' => 'Desk', 'price' => 100]\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = ['price' => 100];\n\n"
"$array = Arr::prepend($array, 'Desk', 'name');\n\n"
"// ['name' => 'Desk', 'price' => 100]\n"

#: docs/8.x/helpers.md:block 131 (header)
msgid "`Arr::pull()` {.collection-method}"
msgstr "`Arr::pull()` {.collection-method}"

#: docs/8.x/helpers.md:block 132 (paragraph)
msgid "The `Arr::pull` method returns and removes a key / value pair from an array:"
msgstr "`Arr::pull` 方法從陣列中移除一組索引鍵 / 值配對："

#: docs/8.x/helpers.md:block 133 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['name' => 'Desk', 'price' => 100];\n\n"
"$name = Arr::pull($array, 'name');\n\n"
"// $name: Desk\n\n"
"// $array: ['price' => 100]\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = ['name' => 'Desk', 'price' => 100];\n\n"
"$name = Arr::pull($array, 'name');\n\n"
"// $name: Desk\n\n"
"// $array: ['price' => 100]\n"

#: docs/8.x/helpers.md:block 134 (paragraph)
msgid "A default value may be passed as the third argument to the method. This value will be returned if the key doesn't exist:"
msgstr "可以在第三個引數上提供一個預設值給該方法。若指定的索引鍵不存在，就會回傳這個預設值："

#: docs/8.x/helpers.md:block 135 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$value = Arr::pull($array, $key, $default);\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$value = Arr::pull($array, $key, $default);\n"

#: docs/8.x/helpers.md:block 137 (header)
msgid "`Arr::query()` {.collection-method}"
msgstr "`Arr::query()` {.collection-method}"

#: docs/8.x/helpers.md:block 138 (paragraph)
msgid "The `Arr::query` method converts the array into a query string:"
msgstr "`Arr::query` 方法將該陣列轉換為^[查詢字串](Query String)："

#: docs/8.x/helpers.md:block 139 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [\n"
"    'name' => 'Taylor',\n"
"    'order' => [\n"
"        'column' => 'created_at',\n"
"        'direction' => 'desc'\n"
"    ]\n"
"];\n\n"
"Arr::query($array);\n\n"
"// name=Taylor&order[column]=created_at&order[direction]=desc\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = [\n"
"    'name' => 'Taylor',\n"
"    'order' => [\n"
"        'column' => 'created_at',\n"
"        'direction' => 'desc'\n"
"    ]\n"
"];\n\n"
"Arr::query($array);\n\n"
"// name=Taylor&order[column]=created_at&order[direction]=desc\n"

#: docs/8.x/helpers.md:block 141 (header)
msgid "`Arr::random()` {.collection-method}"
msgstr "`Arr::random()` {.collection-method}"

#: docs/8.x/helpers.md:block 142 (paragraph)
msgid "The `Arr::random` method returns a random value from an array:"
msgstr "`Arr::random` 方法從陣列中隨機回傳一個值："

#: docs/8.x/helpers.md:block 143 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [1, 2, 3, 4, 5];\n\n"
"$random = Arr::random($array);\n\n"
"// 4 - (retrieved randomly)\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = [1, 2, 3, 4, 5];\n\n"
"$random = Arr::random($array);\n\n"
"// 4 - (隨機取得)\n"

#: docs/8.x/helpers.md:block 144 (paragraph)
msgid "You may also specify the number of items to return as an optional second argument. Note that providing this argument will return an array even if only one item is desired:"
msgstr "也可以在第二個引數上指定要回傳項目的數量。請注意，若有提供第二個引數，就算只要求一個項目，還是會回傳一組陣列："

#: docs/8.x/helpers.md:block 145 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$items = Arr::random($array, 2);\n\n"
"// [2, 5] - (retrieved randomly)\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$items = Arr::random($array, 2);\n\n"
"// [2, 5] - (隨機取得)\n"

#: docs/8.x/helpers.md:block 147 (header)
msgid "`Arr::set()` {.collection-method}"
msgstr "`Arr::set()` {.collection-method}"

#: docs/8.x/helpers.md:block 148 (paragraph)
msgid "The `Arr::set` method sets a value within a deeply nested array using \"dot\" notation:"
msgstr "`Arr::set` 方法可使用「點 (.)」標記法來在多層巢狀陣列中賦值："

#: docs/8.x/helpers.md:block 149 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['products' => ['desk' => ['price' => 100]]];\n\n"
"Arr::set($array, 'products.desk.price', 200);\n\n"
"// ['products' => ['desk' => ['price' => 200]]]\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = ['products' => ['desk' => ['price' => 100]]];\n\n"
"Arr::set($array, 'products.desk.price', 200);\n\n"
"// ['products' => ['desk' => ['price' => 200]]]\n"

#: docs/8.x/helpers.md:block 151 (header)
msgid "`Arr::shuffle()` {.collection-method}"
msgstr "`Arr::shuffle()` {.collection-method}"

#: docs/8.x/helpers.md:block 152 (paragraph)
msgid "The `Arr::shuffle` method randomly shuffles the items in the array:"
msgstr "`Arr::shuffle` 方法會隨機排序該陣列內的項目："

#: docs/8.x/helpers.md:block 153 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = Arr::shuffle([1, 2, 3, 4, 5]);\n\n"
"// [3, 2, 5, 1, 4] - (generated randomly)\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = Arr::shuffle([1, 2, 3, 4, 5]);\n\n"
"// [3, 2, 5, 1, 4] - (隨機產生)\n"

#: docs/8.x/helpers.md:block 155 (header)
msgid "`Arr::sort()` {.collection-method}"
msgstr "`Arr::sort()` {.collection-method}"

#: docs/8.x/helpers.md:block 156 (paragraph)
msgid "The `Arr::sort` method sorts an array by its values:"
msgstr "`Arr::sort` 方法以陣列內的值來排列陣列："

#: docs/8.x/helpers.md:block 157 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['Desk', 'Table', 'Chair'];\n\n"
"$sorted = Arr::sort($array);\n\n"
"// ['Chair', 'Desk', 'Table']\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = ['Desk', 'Table', 'Chair'];\n\n"
"$sorted = Arr::sort($array);\n\n"
"// ['Chair', 'Desk', 'Table']\n"

#: docs/8.x/helpers.md:block 158 (paragraph)
msgid "You may also sort the array by the results of a given closure:"
msgstr "也可以使用給定閉包的執行結果來排序陣列："

#: docs/8.x/helpers.md:block 159 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [\n"
"    ['name' => 'Desk'],\n"
"    ['name' => 'Table'],\n"
"    ['name' => 'Chair'],\n"
"];\n\n"
"$sorted = array_values(Arr::sort($array, function ($value) {\n"
"    return $value['name'];\n"
"}));\n\n"
"/*\n"
"    [\n"
"        ['name' => 'Chair'],\n"
"        ['name' => 'Desk'],\n"
"        ['name' => 'Table'],\n"
"    ]\n"
"*/\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = [\n"
"    ['name' => 'Desk'],\n"
"    ['name' => 'Table'],\n"
"    ['name' => 'Chair'],\n"
"];\n\n"
"$sorted = array_values(Arr::sort($array, function ($value) {\n"
"    return $value['name'];\n"
"}));\n\n"
"/*\n"
"    [\n"
"        ['name' => 'Chair'],\n"
"        ['name' => 'Desk'],\n"
"        ['name' => 'Table'],\n"
"    ]\n"
"*/\n"

#: docs/8.x/helpers.md:block 161 (header)
msgid "`Arr::sortRecursive()` {.collection-method}"
msgstr "`Arr::sortRecursive()` {.collection-method}"

#: docs/8.x/helpers.md:block 162 (paragraph)
msgid "The `Arr::sortRecursive` method recursively sorts an array using the `sort` function for numerically indexed sub-arrays and the `ksort` function for associative sub-arrays:"
msgstr "`Arr::sortRecursive` 方法會遞迴排序陣列。當遇到數字索引鍵的子陣列時，會使用 `sort` 函式；若子陣列為關聯式陣列，則使用 `ksort` 函式："

#: docs/8.x/helpers.md:block 163 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [\n"
"    ['Roman', 'Taylor', 'Li'],\n"
"    ['PHP', 'Ruby', 'JavaScript'],\n"
"    ['one' => 1, 'two' => 2, 'three' => 3],\n"
"];\n\n"
"$sorted = Arr::sortRecursive($array);\n\n"
"/*\n"
"    [\n"
"        ['JavaScript', 'PHP', 'Ruby'],\n"
"        ['one' => 1, 'three' => 3, 'two' => 2],\n"
"        ['Li', 'Roman', 'Taylor'],\n"
"    ]\n"
"*/\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = [\n"
"    ['Roman', 'Taylor', 'Li'],\n"
"    ['PHP', 'Ruby', 'JavaScript'],\n"
"    ['one' => 1, 'two' => 2, 'three' => 3],\n"
"];\n\n"
"$sorted = Arr::sortRecursive($array);\n\n"
"/*\n"
"    [\n"
"        ['JavaScript', 'PHP', 'Ruby'],\n"
"        ['one' => 1, 'three' => 3, 'two' => 2],\n"
"        ['Li', 'Roman', 'Taylor'],\n"
"    ]\n"
"*/\n"

#: docs/8.x/helpers.md:block 165 (header)
msgid "`Arr::toCssClasses()` {.collection-method}"
msgstr "`Arr::toCssClasses()` {.collection-method}"

#: docs/8.x/helpers.md:block 166 (paragraph)
msgid "The `Arr::toCssClasses` conditionally compiles a CSS class string. The method accepts an array of classes where the array key contains the class or classes you wish to add, while the value is a boolean expression. If the array element has a numeric key, it will always be included in the rendered class list:"
msgstr "`Arr::toCssClasses` 可以有條件地編譯 CSS class 字串。該方法接受一組包含 class 的陣列，其中，陣列的索引鍵代表欲新增的 class，陣列值則是一個布林運算式。若陣列的元素有數字索引鍵，則該元素一定會被加到轉譯後的 Class 列表上："

#: docs/8.x/helpers.md:block 167 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$isActive = false;\n"
"$hasError = true;\n\n"
"$array = ['p-4', 'font-bold' => $isActive, 'bg-red' => $hasError];\n\n"
"$classes = Arr::toCssClasses($array);\n\n"
"/*\n"
"    'p-4 bg-red'\n"
"*/\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$isActive = false;\n"
"$hasError = true;\n\n"
"$array = ['p-4', 'font-bold' => $isActive, 'bg-red' => $hasError];\n\n"
"$classes = Arr::toCssClasses($array);\n\n"
"/*\n"
"    'p-4 bg-red'\n"
"*/\n"

#: docs/8.x/helpers.md:block 168 (paragraph)
msgid "This method powers Laravel's functionality allowing [merging classes with a Blade component's attribute bag](/docs/{{version}}/blade#conditionally-merge-classes) as well as the `@class` [Blade directive](/docs/{{version}}/blade#conditional-classes)."
msgstr "該方法用於提供了 Laravel 的「[將 Class 於 Blade 元件的 Attribute Bag 合併](/docs/{{version}}/blade#conditionally-merge-classes)」功能，以及 `@class` [Blade 指示詞](/docs/{{version}}/blade#conditional-classes)。"

#: docs/8.x/helpers.md:block 170 (header)
msgid "`Arr::undot()` {.collection-method}"
msgstr "`Arr::undot()` {.collection-method}"

#: docs/8.x/helpers.md:block 171 (paragraph)
msgid "The `Arr::undot` method expands a single-dimensional array that uses \"dot\" notation into a multi-dimensional array:"
msgstr "`Arr::undot` 方法將一組使用「點 (.)」標記法的一維陣列展開為多維陣列："

#: docs/8.x/helpers.md:block 172 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [\n"
"    'user.name' => 'Kevin Malone',\n"
"    'user.occupation' => 'Accountant',\n"
"];\n\n"
"$array = Arr::undot($array);\n\n"
"// ['user' => ['name' => 'Kevin Malone', 'occupation' => 'Accountant']]\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = [\n"
"    'user.name' => 'Kevin Malone',\n"
"    'user.occupation' => 'Accountant',\n"
"];\n\n"
"$array = Arr::undot($array);\n\n"
"// ['user' => ['name' => 'Kevin Malone', 'occupation' => 'Accountant']]\n"

#: docs/8.x/helpers.md:block 174 (header)
msgid "`Arr::where()` {.collection-method}"
msgstr "`Arr::where()` {.collection-method}"

#: docs/8.x/helpers.md:block 175 (paragraph)
msgid "The `Arr::where` method filters an array using the given closure:"
msgstr "`Arr::where` 方法使用給定的閉包來篩選陣列："

#: docs/8.x/helpers.md:block 176 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [100, '200', 300, '400', 500];\n\n"
"$filtered = Arr::where($array, function ($value, $key) {\n"
"    return is_string($value);\n"
"});\n\n"
"// [1 => '200', 3 => '400']\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = [100, '200', 300, '400', 500];\n\n"
"$filtered = Arr::where($array, function ($value, $key) {\n"
"    return is_string($value);\n"
"});\n\n"
"// [1 => '200', 3 => '400']\n"

#: docs/8.x/helpers.md:block 178 (header)
msgid "`Arr::whereNotNull()` {.collection-method}"
msgstr "`Arr::whereNotNull()` {.collection-method}"

#: docs/8.x/helpers.md:block 179 (paragraph)
msgid "The `Arr::whereNotNull` method removes all `null` values from the given array:"
msgstr "`Arr::whereNotNull` 方法從給定陣列中移除所有 `null` 的值："

#: docs/8.x/helpers.md:block 180 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [0, null];\n\n"
"$filtered = Arr::whereNotNull($array);\n\n"
"// [0 => 0]\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = [0, null];\n\n"
"$filtered = Arr::whereNotNull($array);\n\n"
"// [0 => 0]\n"

#: docs/8.x/helpers.md:block 182 (header)
msgid "`Arr::wrap()` {.collection-method}"
msgstr "`Arr::wrap()` {.collection-method}"

#: docs/8.x/helpers.md:block 183 (paragraph)
msgid "The `Arr::wrap` method wraps the given value in an array. If the given value is already an array it will be returned without modification:"
msgstr "`Arr::wrap` 將給定值^[包裝](Wrap)為陣列。若給定的值已為陣列，則該方法會直接回傳該陣列，不做其他修改："

#: docs/8.x/helpers.md:block 184 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$string = 'Laravel';\n\n"
"$array = Arr::wrap($string);\n\n"
"// ['Laravel']\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$string = 'Laravel';\n\n"
"$array = Arr::wrap($string);\n\n"
"// ['Laravel']\n"

#: docs/8.x/helpers.md:block 185 (paragraph)
msgid "If the given value is `null`, an empty array will be returned:"
msgstr "若給定值為 `null`，則會回傳空陣列："

#: docs/8.x/helpers.md:block 186 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = Arr::wrap(null);\n\n"
"// []\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$array = Arr::wrap(null);\n\n"
"// []\n"

#: docs/8.x/helpers.md:block 188 (header)
msgid "`data_fill()` {.collection-method}"
msgstr "`data_fill()` {.collection-method}"

#: docs/8.x/helpers.md:block 189 (paragraph)
msgid "The `data_fill` function sets a missing value within a nested array or object using \"dot\" notation:"
msgstr "`data_fill` 方法使用「點 (.)」標記法來在巢狀陣列或物件中填上原本不存在的值："

#: docs/8.x/helpers.md:block 190 (code)
msgid "$data = ['products' => ['desk' => ['price' => 100]]];\n\n"
"data_fill($data, 'products.desk.price', 200);\n\n"
"// ['products' => ['desk' => ['price' => 100]]]\n\n"
"data_fill($data, 'products.desk.discount', 10);\n\n"
"// ['products' => ['desk' => ['price' => 100, 'discount' => 10]]]\n"
msgstr "$data = ['products' => ['desk' => ['price' => 100]]];\n\n"
"data_fill($data, 'products.desk.price', 200);\n\n"
"// ['products' => ['desk' => ['price' => 100]]]\n\n"
"data_fill($data, 'products.desk.discount', 10);\n\n"
"// ['products' => ['desk' => ['price' => 100, 'discount' => 10]]]\n"

#: docs/8.x/helpers.md:block 191 (paragraph)
msgid "This function also accepts asterisks as wildcards and will fill the target accordingly:"
msgstr "該方法也支援使用星號作為萬用字元，會填上對應的目標："

#: docs/8.x/helpers.md:block 192 (code)
msgid "$data = [\n"
"    'products' => [\n"
"        ['name' => 'Desk 1', 'price' => 100],\n"
"        ['name' => 'Desk 2'],\n"
"    ],\n"
"];\n\n"
"data_fill($data, 'products.*.price', 200);\n\n"
"/*\n"
"    [\n"
"        'products' => [\n"
"            ['name' => 'Desk 1', 'price' => 100],\n"
"            ['name' => 'Desk 2', 'price' => 200],\n"
"        ],\n"
"    ]\n"
"*/\n"
msgstr "$data = [\n"
"    'products' => [\n"
"        ['name' => 'Desk 1', 'price' => 100],\n"
"        ['name' => 'Desk 2'],\n"
"    ],\n"
"];\n\n"
"data_fill($data, 'products.*.price', 200);\n\n"
"/*\n"
"    [\n"
"        'products' => [\n"
"            ['name' => 'Desk 1', 'price' => 100],\n"
"            ['name' => 'Desk 2', 'price' => 200],\n"
"        ],\n"
"    ]\n"
"*/\n"

#: docs/8.x/helpers.md:block 194 (header)
msgid "`data_get()` {.collection-method}"
msgstr "`data_get()` {.collection-method}"

#: docs/8.x/helpers.md:block 195 (paragraph)
msgid "The `data_get` function retrieves a value from a nested array or object using \"dot\" notation:"
msgstr "`data_get` 方法使用「點 (.)」標記法來從巢狀陣列或物件中取值："

#: docs/8.x/helpers.md:block 196 (code)
msgid "$data = ['products' => ['desk' => ['price' => 100]]];\n\n"
"$price = data_get($data, 'products.desk.price');\n\n"
"// 100\n"
msgstr "$data = ['products' => ['desk' => ['price' => 100]]];\n\n"
"$price = data_get($data, 'products.desk.price');\n\n"
"// 100\n"

#: docs/8.x/helpers.md:block 197 (paragraph)
msgid "The `data_get` function also accepts a default value, which will be returned if the specified key is not found:"
msgstr "`data_get` 還接受一個預設值。若找不到指定的索引鍵時會回傳該預設值："

#: docs/8.x/helpers.md:block 198 (code)
msgid "$discount = data_get($data, 'products.desk.discount', 0);\n\n"
"// 0\n"
msgstr "$discount = data_get($data, 'products.desk.discount', 0);\n\n"
"// 0\n"

#: docs/8.x/helpers.md:block 199 (paragraph)
msgid "The function also accepts wildcards using asterisks, which may target any key of the array or object:"
msgstr "該方法也接受使用星號來作為萬用字元，可以套用到陣列或物件上的任何索引鍵："

#: docs/8.x/helpers.md:block 200 (code)
msgid "$data = [\n"
"    'product-one' => ['name' => 'Desk 1', 'price' => 100],\n"
"    'product-two' => ['name' => 'Desk 2', 'price' => 150],\n"
"];\n\n"
"data_get($data, '*.name');\n\n"
"// ['Desk 1', 'Desk 2'];\n"
msgstr "$data = [\n"
"    'product-one' => ['name' => 'Desk 1', 'price' => 100],\n"
"    'product-two' => ['name' => 'Desk 2', 'price' => 150],\n"
"];\n\n"
"data_get($data, '*.name');\n\n"
"// ['Desk 1', 'Desk 2'];\n"

#: docs/8.x/helpers.md:block 202 (header)
msgid "`data_set()` {.collection-method}"
msgstr "`data_set()` {.collection-method}"

#: docs/8.x/helpers.md:block 203 (paragraph)
msgid "The `data_set` function sets a value within a nested array or object using \"dot\" notation:"
msgstr "`data_set` 函式使用「點 (.)」標記法來在巢狀陣列或物件上賦值："

#: docs/8.x/helpers.md:block 204 (code)
msgid "$data = ['products' => ['desk' => ['price' => 100]]];\n\n"
"data_set($data, 'products.desk.price', 200);\n\n"
"// ['products' => ['desk' => ['price' => 200]]]\n"
msgstr "$data = ['products' => ['desk' => ['price' => 100]]];\n\n"
"data_set($data, 'products.desk.price', 200);\n\n"
"// ['products' => ['desk' => ['price' => 200]]]\n"

#: docs/8.x/helpers.md:block 205 (paragraph)
msgid "This function also accepts wildcards using asterisks and will set values on the target accordingly:"
msgstr "該函式也接受使用星號作為萬用字元，會為設定相應的目標賦值："

#: docs/8.x/helpers.md:block 206 (code)
msgid "$data = [\n"
"    'products' => [\n"
"        ['name' => 'Desk 1', 'price' => 100],\n"
"        ['name' => 'Desk 2', 'price' => 150],\n"
"    ],\n"
"];\n\n"
"data_set($data, 'products.*.price', 200);\n\n"
"/*\n"
"    [\n"
"        'products' => [\n"
"            ['name' => 'Desk 1', 'price' => 200],\n"
"            ['name' => 'Desk 2', 'price' => 200],\n"
"        ],\n"
"    ]\n"
"*/\n"
msgstr "$data = [\n"
"    'products' => [\n"
"        ['name' => 'Desk 1', 'price' => 100],\n"
"        ['name' => 'Desk 2', 'price' => 150],\n"
"    ],\n"
"];\n\n"
"data_set($data, 'products.*.price', 200);\n\n"
"/*\n"
"    [\n"
"        'products' => [\n"
"            ['name' => 'Desk 1', 'price' => 200],\n"
"            ['name' => 'Desk 2', 'price' => 200],\n"
"        ],\n"
"    ]\n"
"*/\n"

#: docs/8.x/helpers.md:block 207 (paragraph)
msgid "By default, any existing values are overwritten. If you wish to only set a value if it doesn't exist, you may pass `false` as the fourth argument to the function:"
msgstr "預設情況下，會複寫現有的值。若只想為不存在的項目賦值，可傳入 `false` 作為第四個引數給該函式："

#: docs/8.x/helpers.md:block 208 (code)
msgid "$data = ['products' => ['desk' => ['price' => 100]]];\n\n"
"data_set($data, 'products.desk.price', 200, $overwrite = false);\n\n"
"// ['products' => ['desk' => ['price' => 100]]]\n"
msgstr "$data = ['products' => ['desk' => ['price' => 100]]];\n\n"
"data_set($data, 'products.desk.price', 200, $overwrite = false);\n\n"
"// ['products' => ['desk' => ['price' => 100]]]\n"

#: docs/8.x/helpers.md:block 210 (header)
msgid "`head()` {.collection-method}"
msgstr "`head()` {.collection-method}"

#: docs/8.x/helpers.md:block 211 (paragraph)
msgid "The `head` function returns the first element in the given array:"
msgstr "`head` 方法回傳給定陣列中的第一個元素："

#: docs/8.x/helpers.md:block 212 (code)
msgid "$array = [100, 200, 300];\n\n"
"$first = head($array);\n\n"
"// 100\n"
msgstr "$array = [100, 200, 300];\n\n"
"$first = head($array);\n\n"
"// 100\n"

#: docs/8.x/helpers.md:block 214 (header)
msgid "`last()` {.collection-method}"
msgstr "`last()` {.collection-method}"

#: docs/8.x/helpers.md:block 215 (paragraph)
msgid "The `last` function returns the last element in the given array:"
msgstr "`last` 方法回傳給定陣列中的最後一個元素："

#: docs/8.x/helpers.md:block 216 (code)
msgid "$array = [100, 200, 300];\n\n"
"$last = last($array);\n\n"
"// 300\n"
msgstr "$array = [100, 200, 300];\n\n"
"$last = last($array);\n\n"
"// 300\n"

#: docs/8.x/helpers.md:block 220 (header)
msgid "`app_path()` {.collection-method}"
msgstr "`app_path()` {.collection-method}"

#: docs/8.x/helpers.md:block 221 (paragraph)
msgid "The `app_path` function returns the fully qualified path to your application's `app` directory. You may also use the `app_path` function to generate a fully qualified path to a file relative to the application directory:"
msgstr "`app_path` 回傳專案 `app` 目錄的完整名稱路徑。也可以使用 `app_path` 函式來為 app 目錄下相對路徑的完整名稱路徑："

#: docs/8.x/helpers.md:block 222 (code)
msgid "$path = app_path();\n\n"
"$path = app_path('Http/Controllers/Controller.php');\n"
msgstr "$path = app_path();\n\n"
"$path = app_path('Http/Controllers/Controller.php');\n"

#: docs/8.x/helpers.md:block 224 (header)
msgid "`base_path()` {.collection-method}"
msgstr "`base_path()` {.collection-method}"

#: docs/8.x/helpers.md:block 225 (paragraph)
msgid "The `base_path` function returns the fully qualified path to your application's root directory. You may also use the `base_path` function to generate a fully qualified path to a given file relative to the project root directory:"
msgstr "`base_path` 函式回傳專案根目錄的完整名稱路徑。也可以使用 `base_path` 來產生相對於根目錄下給定檔案的完整名稱路徑："

#: docs/8.x/helpers.md:block 226 (code)
msgid "$path = base_path();\n\n"
"$path = base_path('vendor/bin');\n"
msgstr "$path = base_path();\n\n"
"$path = base_path('vendor/bin');\n"

#: docs/8.x/helpers.md:block 228 (header)
msgid "`config_path()` {.collection-method}"
msgstr "`config_path()` {.collection-method}"

#: docs/8.x/helpers.md:block 229 (paragraph)
msgid "The `config_path` function returns the fully qualified path to your application's `config` directory. You may also use the `config_path` function to generate a fully qualified path to a given file within the application's configuration directory:"
msgstr "`config_path` 函式回傳專案 `config` 目錄的完整名稱路徑。也可以使用 `config_path` 函式來產生專案 `config` 目錄內給定檔案的完整名稱路徑："

#: docs/8.x/helpers.md:block 230 (code)
msgid "$path = config_path();\n\n"
"$path = config_path('app.php');\n"
msgstr "$path = config_path();\n\n"
"$path = config_path('app.php');\n"

#: docs/8.x/helpers.md:block 232 (header)
msgid "`database_path()` {.collection-method}"
msgstr "`database_path()` {.collection-method}"

#: docs/8.x/helpers.md:block 233 (paragraph)
msgid "The `database_path` function returns the fully qualified path to your application's `database` directory. You may also use the `database_path` function to generate a fully qualified path to a given file within the database directory:"
msgstr "`database_path` 函式回傳專案 `database` 目錄的完整名稱路徑。也可以使用 `database_path` 函式來產生 `database` 目錄下給定檔案的完整名稱路徑："

#: docs/8.x/helpers.md:block 234 (code)
msgid "$path = database_path();\n\n"
"$path = database_path('factories/UserFactory.php');\n"
msgstr "$path = database_path();\n\n"
"$path = database_path('factories/UserFactory.php');\n"

#: docs/8.x/helpers.md:block 236 (header)
msgid "`mix()` {.collection-method}"
msgstr "`mix()` {.collection-method}"

#: docs/8.x/helpers.md:block 237 (paragraph)
msgid "The `mix` function returns the path to a [versioned Mix file](/docs/{{version}}/mix):"
msgstr "`mix` 函式回傳[版本化的 Mix 檔案](/docs/{{version}}/mix)路徑："

#: docs/8.x/helpers.md:block 238 (code)
msgid "$path = mix('css/app.css');\n"
msgstr "$path = mix('css/app.css');\n"

#: docs/8.x/helpers.md:block 240 (header)
msgid "`public_path()` {.collection-method}"
msgstr "`public_path()` {.collection-method}"

#: docs/8.x/helpers.md:block 241 (paragraph)
msgid "The `public_path` function returns the fully qualified path to your application's `public` directory. You may also use the `public_path` function to generate a fully qualified path to a given file within the public directory:"
msgstr "`public_path` 函式回傳專案 `public` 目錄的完整名稱路徑。也可以使用 `public_path` 函式來產生 `public` 目錄下給定檔案的完整名稱路徑："

#: docs/8.x/helpers.md:block 242 (code)
msgid "$path = public_path();\n\n"
"$path = public_path('css/app.css');\n"
msgstr "$path = public_path();\n\n"
"$path = public_path('css/app.css');\n"

#: docs/8.x/helpers.md:block 244 (header)
msgid "`resource_path()` {.collection-method}"
msgstr "`resource_path()` {.collection-method}"

#: docs/8.x/helpers.md:block 245 (paragraph)
msgid "The `resource_path` function returns the fully qualified path to your application's `resources` directory. You may also use the `resource_path` function to generate a fully qualified path to a given file within the resources directory:"
msgstr "`resource_path` 函式回傳專案 `resources` 目錄的完整名稱路徑。也可以使用 `resource_path` 函式來產生 `resources` 目錄下給定檔案的完整名稱路徑："

#: docs/8.x/helpers.md:block 246 (code)
msgid "$path = resource_path();\n\n"
"$path = resource_path('sass/app.scss');\n"
msgstr "$path = resource_path();\n\n"
"$path = resource_path('sass/app.scss');\n"

#: docs/8.x/helpers.md:block 248 (header)
msgid "`storage_path()` {.collection-method}"
msgstr "`storage_path()` {.collection-method}"

#: docs/8.x/helpers.md:block 249 (paragraph)
msgid "The `storage_path` function returns the fully qualified path to your application's `storage` directory. You may also use the `storage_path` function to generate a fully qualified path to a given file within the storage directory:"
msgstr "`storage_path` 函式回傳專案 `storage` 目錄的完整名稱路徑。也可以使用 `storage_path` 函式來產生 `storage` 目錄下給定檔案的完整名稱路徑："

#: docs/8.x/helpers.md:block 250 (code)
msgid "$path = storage_path();\n\n"
"$path = storage_path('app/file.txt');\n"
msgstr "$path = storage_path();\n\n"
"$path = storage_path('app/file.txt');\n"

#: docs/8.x/helpers.md:block 254 (header)
msgid "`__()` {.collection-method}"
msgstr "`__()` {.collection-method}"

#: docs/8.x/helpers.md:block 255 (paragraph)
msgid "The `__` function translates the given translation string or translation key using your [localization files](/docs/{{version}}/localization):"
msgstr "`__` 函式使用[語系檔](/docs/{{version}}/localization)來翻譯給定的翻譯字串或翻譯索引鍵："

#: docs/8.x/helpers.md:block 256 (code)
msgid "echo __('Welcome to our application');\n\n"
"echo __('messages.welcome');\n"
msgstr "echo __('Welcome to our application');\n\n"
"echo __('messages.welcome');\n"

#: docs/8.x/helpers.md:block 257 (paragraph)
msgid "If the specified translation string or key does not exist, the `__` function will return the given value. So, using the example above, the `__` function would return `messages.welcome` if that translation key does not exist."
msgstr "若指定的翻譯字串或翻譯索引鍵不存在時，`__` 函式會回傳給定的值。因此，在上述範例中，若 `messages.welcome` 索引鍵不存在，`__` 函式會回傳 `messages.welcome`。"

#: docs/8.x/helpers.md:block 259 (header)
msgid "`class_basename()` {.collection-method}"
msgstr "`class_basename()` {.collection-method}"

#: docs/8.x/helpers.md:block 260 (paragraph)
msgid "The `class_basename` function returns the class name of the given class with the class's namespace removed:"
msgstr "`class_basename` 函式回傳給定類別在移除類別 Namespace 後的類別名稱："

#: docs/8.x/helpers.md:block 261 (code)
msgid "$class = class_basename('Foo\\Bar\\Baz');\n\n"
"// Baz\n"
msgstr "$class = class_basename('Foo\\Bar\\Baz');\n\n"
"// Baz\n"

#: docs/8.x/helpers.md:block 263 (header)
msgid "`e()` {.collection-method}"
msgstr "`e()` {.collection-method}"

#: docs/8.x/helpers.md:block 264 (paragraph)
msgid "The `e` function runs PHP's `htmlspecialchars` function with the `double_encode` option set to `true` by default:"
msgstr "`e` 函式執行 PHP 的 `htmlspecialchars` 函式，其中 `double_encode` 選項預設為 `true`："

#: docs/8.x/helpers.md:block 265 (code)
msgid "echo e('<html>foo</html>');\n\n"
"// &lt;html&gt;foo&lt;/html&gt;\n"
msgstr "echo e('<html>foo</html>');\n\n"
"// &lt;html&gt;foo&lt;/html&gt;\n"

#: docs/8.x/helpers.md:block 267 (header)
msgid "`preg_replace_array()` {.collection-method}"
msgstr "`preg_replace_array()` {.collection-method}"

#: docs/8.x/helpers.md:block 268 (paragraph)
msgid "The `preg_replace_array` function replaces a given pattern in the string sequentially using an array:"
msgstr "`preg_replace_array` 函式使用陣列來依序在陣列中取代給定的格式："

#: docs/8.x/helpers.md:block 269 (code)
msgid "$string = 'The event will take place between :start and :end';\n\n"
"$replaced = preg_replace_array('/:[a-z_]+/', ['8:30', '9:00'], $string);\n\n"
"// The event will take place between 8:30 and 9:00\n"
msgstr "$string = 'The event will take place between :start and :end';\n\n"
"$replaced = preg_replace_array('/:[a-z_]+/', ['8:30', '9:00'], $string);\n\n"
"// The event will take place between 8:30 and 9:00\n"

#: docs/8.x/helpers.md:block 271 (header)
msgid "`Str::after()` {.collection-method}"
msgstr "`Str::after()` {.collection-method}"

#: docs/8.x/helpers.md:block 272 (paragraph)
msgid "The `Str::after` method returns everything after the given value in a string. The entire string will be returned if the value does not exist within the string:"
msgstr "`Str::after` 方法回傳字串中給定值以後的所有內容。若該字串中找不到給定值，會回傳整個字串："

#: docs/8.x/helpers.md:block 273 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::after('This is my name', 'This is');\n\n"
"// ' my name'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::after('This is my name', 'This is');\n\n"
"// ' my name'\n"

#: docs/8.x/helpers.md:block 275 (header)
msgid "`Str::afterLast()` {.collection-method}"
msgstr "`Str::afterLast()` {.collection-method}"

#: docs/8.x/helpers.md:block 276 (paragraph)
msgid "The `Str::afterLast` method returns everything after the last occurrence of the given value in a string. The entire string will be returned if the value does not exist within the string:"
msgstr "`Str::afterLast` 方法回傳給定字串後最後一個出現給定值之後的所有內容。若找不到該值，會回傳整個字串："

#: docs/8.x/helpers.md:block 277 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::afterLast('App\\Http\\Controllers\\Controller', '\\\\');\n\n"
"// 'Controller'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::afterLast('App\\Http\\Controllers\\Controller', '\\\\');\n\n"
"// 'Controller'\n"

#: docs/8.x/helpers.md:block 279 (header)
msgid "`Str::ascii()` {.collection-method}"
msgstr "`Str::ascii()` {.collection-method}"

#: docs/8.x/helpers.md:block 280 (paragraph)
msgid "The `Str::ascii` method will attempt to transliterate the string into an ASCII value:"
msgstr "`Str::ascii` 方法會嘗試將給定字串翻譯為 ASCII 值："

#: docs/8.x/helpers.md:block 281 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::ascii('û');\n\n"
"// 'u'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::ascii('û');\n\n"
"// 'u'\n"

#: docs/8.x/helpers.md:block 283 (header)
msgid "`Str::before()` {.collection-method}"
msgstr "`Str::before()` {.collection-method}"

#: docs/8.x/helpers.md:block 284 (paragraph)
msgid "The `Str::before` method returns everything before the given value in a string:"
msgstr "`Str::before` 回傳字串在遇到給定值前的所有內容："

#: docs/8.x/helpers.md:block 285 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::before('This is my name', 'my name');\n\n"
"// 'This is '\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::before('This is my name', 'my name');\n\n"
"// 'This is '\n"

#: docs/8.x/helpers.md:block 287 (header)
msgid "`Str::beforeLast()` {.collection-method}"
msgstr "`Str::beforeLast()` {.collection-method}"

#: docs/8.x/helpers.md:block 288 (paragraph)
msgid "The `Str::beforeLast` method returns everything before the last occurrence of the given value in a string:"
msgstr "`Str::beforeLast` 方法回傳字串中最後一次出現給定值以前的所有內容："

#: docs/8.x/helpers.md:block 289 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::beforeLast('This is my name', 'is');\n\n"
"// 'This '\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::beforeLast('This is my name', 'is');\n\n"
"// 'This '\n"

#: docs/8.x/helpers.md:block 291 (header)
msgid "`Str::between()` {.collection-method}"
msgstr "`Str::between()` {.collection-method}"

#: docs/8.x/helpers.md:block 292 (paragraph)
msgid "The `Str::between` method returns the portion of a string between two values:"
msgstr "`Str::between` 方法回傳介於兩個值之間的字串："

#: docs/8.x/helpers.md:block 293 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::between('This is my name', 'This', 'name');\n\n"
"// ' is my '\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::between('This is my name', 'This', 'name');\n\n"
"// ' is my '\n"

#: docs/8.x/helpers.md:block 295 (header)
msgid "`Str::camel()` {.collection-method}"
msgstr "`Str::camel()` {.collection-method}"

#: docs/8.x/helpers.md:block 296 (paragraph)
msgid "The `Str::camel` method converts the given string to `camelCase`:"
msgstr "`Str::camel` 方法將給定字串轉為 `camelCase` —— 駝峰命名法的大小寫："

#: docs/8.x/helpers.md:block 297 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::camel('foo_bar');\n\n"
"// fooBar\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::camel('foo_bar');\n\n"
"// fooBar\n"

#: docs/8.x/helpers.md:block 299 (header)
msgid "`Str::contains()` {.collection-method}"
msgstr "`Str::contains()` {.collection-method}"

#: docs/8.x/helpers.md:block 300 (paragraph)
msgid "The `Str::contains` method determines if the given string contains the given value. This method is case sensitive:"
msgstr "`Str::contains` 方法判斷給定字串是否包含給定值。該方法區分大小寫："

#: docs/8.x/helpers.md:block 301 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$contains = Str::contains('This is my name', 'my');\n\n"
"// true\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$contains = Str::contains('This is my name', 'my');\n\n"
"// true\n"

#: docs/8.x/helpers.md:block 302 (paragraph)
msgid "You may also pass an array of values to determine if the given string contains any of the values in the array:"
msgstr "也可以傳入一組要判斷的陣列值，來判斷給定字串中是否有包含該陣列中任何一個值："

#: docs/8.x/helpers.md:block 303 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$contains = Str::contains('This is my name', ['my', 'foo']);\n\n"
"// true\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$contains = Str::contains('This is my name', ['my', 'foo']);\n\n"
"// true\n"

#: docs/8.x/helpers.md:block 305 (header)
msgid "`Str::containsAll()` {.collection-method}"
msgstr "`Str::containsAll()` {.collection-method}"

#: docs/8.x/helpers.md:block 306 (paragraph)
msgid "The `Str::containsAll` method determines if the given string contains all of the values in a given array:"
msgstr "`Str::containsAll` 判斷給定字串是否有包含給定陣列中的所有值："

#: docs/8.x/helpers.md:block 307 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$containsAll = Str::containsAll('This is my name', ['my', 'name']);\n\n"
"// true\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$containsAll = Str::containsAll('This is my name', ['my', 'name']);\n\n"
"// true\n"

#: docs/8.x/helpers.md:block 309 (header)
msgid "`Str::endsWith()` {.collection-method}"
msgstr "`Str::endsWith()` {.collection-method}"

#: docs/8.x/helpers.md:block 310 (paragraph)
msgid "The `Str::endsWith` method determines if the given string ends with the given value:"
msgstr "Str::endsWith` 方法可判斷給定字串是否以給定值結尾："

#: docs/8.x/helpers.md:block 311 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::endsWith('This is my name', 'name');\n\n"
"// true\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$result = Str::endsWith('This is my name', 'name');\n\n"
"// true\n"

#: docs/8.x/helpers.md:block 312 (paragraph)
msgid "You may also pass an array of values to determine if the given string ends with any of the values in the array:"
msgstr "也可以傳入一組陣列值來判斷給定字串的結尾是否符合該陣列內的其中一項："

#: docs/8.x/helpers.md:block 313 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::endsWith('This is my name', ['name', 'foo']);\n\n"
"// true\n\n"
"$result = Str::endsWith('This is my name', ['this', 'foo']);\n\n"
"// false\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$result = Str::endsWith('This is my name', ['name', 'foo']);\n\n"
"// true\n\n"
"$result = Str::endsWith('This is my name', ['this', 'foo']);\n\n"
"// false\n"

#: docs/8.x/helpers.md:block 315 (header)
msgid "`Str::finish()` {.collection-method}"
msgstr "`Str::finish()` {.collection-method}"

#: docs/8.x/helpers.md:block 316 (paragraph)
msgid "The `Str::finish` method adds a single instance of the given value to a string if it does not already end with that value:"
msgstr "`Str::finish` 方法會在給定字串不是以給定值結尾時，在該字串後方加上這個值："

#: docs/8.x/helpers.md:block 317 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$adjusted = Str::finish('this/string', '/');\n\n"
"// this/string/\n\n"
"$adjusted = Str::finish('this/string/', '/');\n\n"
"// this/string/\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$adjusted = Str::finish('this/string', '/');\n\n"
"// this/string/\n\n"
"$adjusted = Str::finish('this/string/', '/');\n\n"
"// this/string/\n"

#: docs/8.x/helpers.md:block 319 (header)
msgid "`Str::headline()` {.collection-method}"
msgstr "`Str::headline()` {.collection-method}"

#: docs/8.x/helpers.md:block 320 (paragraph)
msgid "The `Str::headline` method will convert strings delimited by casing, hyphens, or underscores into a space delimited string with each word's first letter capitalized:"
msgstr "`Str::headline` 方法將以大小寫、減號、底線等方式區隔的字串轉換為以空格區隔的字串，並將其中每個單詞的首字母都轉為大寫："

#: docs/8.x/helpers.md:block 321 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$headline = Str::headline('steve_jobs');\n\n"
"// Steve Jobs\n\n"
"$headline = Str::headline('EmailNotificationSent');\n\n"
"// Email Notification Sent\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$headline = Str::headline('steve_jobs');\n\n"
"// Steve Jobs\n\n"
"$headline = Str::headline('EmailNotificationSent');\n\n"
"// Email Notification Sent\n"

#: docs/8.x/helpers.md:block 323 (header)
msgid "`Str::is()` {.collection-method}"
msgstr "`Str::is()` {.collection-method}"

#: docs/8.x/helpers.md:block 324 (paragraph)
msgid "The `Str::is` method determines if a given string matches a given pattern. Asterisks may be used as wildcard values:"
msgstr "`Str::is` 判斷給定字串是否符合給定的格式。可使用星號作為萬用字元："

#: docs/8.x/helpers.md:block 325 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$matches = Str::is('foo*', 'foobar');\n\n"
"// true\n\n"
"$matches = Str::is('baz*', 'foobar');\n\n"
"// false\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$matches = Str::is('foo*', 'foobar');\n\n"
"// true\n\n"
"$matches = Str::is('baz*', 'foobar');\n\n"
"// false\n"

#: docs/8.x/helpers.md:block 327 (header)
msgid "`Str::isAscii()` {.collection-method}"
msgstr "`Str::isAscii()` {.collection-method}"

#: docs/8.x/helpers.md:block 328 (paragraph)
msgid "The `Str::isAscii` method determines if a given string is 7 bit ASCII:"
msgstr "`Str::isAscii` 方法判斷給定字串是否為 7 位元 ASCII："

#: docs/8.x/helpers.md:block 329 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$isAscii = Str::isAscii('Taylor');\n\n"
"// true\n\n"
"$isAscii = Str::isAscii('ü');\n\n"
"// false\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$isAscii = Str::isAscii('Taylor');\n\n"
"// true\n\n"
"$isAscii = Str::isAscii('ü');\n\n"
"// false\n"

#: docs/8.x/helpers.md:block 331 (header)
msgid "`Str::isUuid()` {.collection-method}"
msgstr "`Str::isUuid()` {.collection-method}"

#: docs/8.x/helpers.md:block 332 (paragraph)
msgid "The `Str::isUuid` method determines if the given string is a valid UUID:"
msgstr "`Str::isUuid` 方法判斷給定字串是否為有效的 UUID："

#: docs/8.x/helpers.md:block 333 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$isUuid = Str::isUuid('a0a2a2d2-0b87-4a18-83f2-2529882be2de');\n\n"
"// true\n\n"
"$isUuid = Str::isUuid('laravel');\n\n"
"// false\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$isUuid = Str::isUuid('a0a2a2d2-0b87-4a18-83f2-2529882be2de');\n\n"
"// true\n\n"
"$isUuid = Str::isUuid('laravel');\n\n"
"// false\n"

#: docs/8.x/helpers.md:block 335 (header)
msgid "`Str::kebab()` {.collection-method}"
msgstr "`Str::kebab()` {.collection-method}"

#: docs/8.x/helpers.md:block 336 (paragraph)
msgid "The `Str::kebab` method converts the given string to `kebab-case`:"
msgstr "`Str::kebab` 方法將給定字串轉換為 `kebab-case`："

#: docs/8.x/helpers.md:block 337 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::kebab('fooBar');\n\n"
"// foo-bar\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::kebab('fooBar');\n\n"
"// foo-bar\n"

#: docs/8.x/helpers.md:block 339 (header)
msgid "`Str::length()` {.collection-method}"
msgstr "`Str::length()` {.collection-method}"

#: docs/8.x/helpers.md:block 340 (paragraph)
msgid "The `Str::length` method returns the length of the given string:"
msgstr "`Str::length` 方法回傳給定字串的長度："

#: docs/8.x/helpers.md:block 341 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$length = Str::length('Laravel');\n\n"
"// 7\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$length = Str::length('Laravel');\n\n"
"// 7\n"

#: docs/8.x/helpers.md:block 343 (header)
msgid "`Str::limit()` {.collection-method}"
msgstr "`Str::limit()` {.collection-method}"

#: docs/8.x/helpers.md:block 344 (paragraph)
msgid "The `Str::limit` method truncates the given string to the specified length:"
msgstr "`Str::limit` 方法將給定字串截斷成指定長度："

#: docs/8.x/helpers.md:block 345 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$truncated = Str::limit('The quick brown fox jumps over the lazy dog', 20);\n\n"
"// The quick brown fox...\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$truncated = Str::limit('The quick brown fox jumps over the lazy dog', 20);\n\n"
"// The quick brown fox...\n"

#: docs/8.x/helpers.md:block 346 (paragraph)
msgid "You may pass a third argument to the method to change the string that will be appended to the end of the truncated string:"
msgstr "也可以傳入第三個引數給該方法，以更改當字串被截斷時要加在最後方的內容："

#: docs/8.x/helpers.md:block 347 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$truncated = Str::limit('The quick brown fox jumps over the lazy dog', 20, ' (...)');\n\n"
"// The quick brown fox (...)\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$truncated = Str::limit('The quick brown fox jumps over the lazy dog', 20, ' (...)');\n\n"
"// The quick brown fox (...)\n"

#: docs/8.x/helpers.md:block 349 (header)
msgid "`Str::lower()` {.collection-method}"
msgstr "`Str::lower()` {.collection-method}"

#: docs/8.x/helpers.md:block 350 (paragraph)
msgid "The `Str::lower` method converts the given string to lowercase:"
msgstr "`Str::lower` 方法將給定字串轉為小寫："

#: docs/8.x/helpers.md:block 351 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::lower('LARAVEL');\n\n"
"// laravel\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::lower('LARAVEL');\n\n"
"// laravel\n"

#: docs/8.x/helpers.md:block 353 (header)
msgid "`Str::markdown()` {.collection-method}"
msgstr "`Str::markdown()` {.collection-method}"

#: docs/8.x/helpers.md:block 354 (paragraph)
msgid "The `Str::markdown` method converts GitHub flavored Markdown into HTML:"
msgstr "`Str::markdown` 方法可將 GitHub Flavored Markdown 轉位為 HTML："

#: docs/8.x/helpers.md:block 355 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$html = Str::markdown('# Laravel');\n\n"
"// <h1>Laravel</h1>\n\n"
"$html = Str::markdown('# Taylor <b>Otwell</b>', [\n"
"    'html_input' => 'strip',\n"
"]);\n\n"
"// <h1>Taylor Otwell</h1>\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$html = Str::markdown('# Laravel');\n\n"
"// <h1>Laravel</h1>\n\n"
"$html = Str::markdown('# Taylor <b>Otwell</b>', [\n"
"    'html_input' => 'strip',\n"
"]);\n\n"
"// <h1>Taylor Otwell</h1>\n"

#: docs/8.x/helpers.md:block 357 (header)
msgid "`Str::mask()` {.collection-method}"
msgstr "`Str::mask()` {.collection-method}"

#: docs/8.x/helpers.md:block 358 (paragraph)
msgid "The `Str::mask` method masks a portion of a string with a repeated character, and may be used to obfuscate segments of strings such as email addresses and phone numbers:"
msgstr "`Str::mask` 方法將字串中的一部分轉為重複字元，可用來為 E-Mail 位址或電話號碼⋯⋯等字串^[打碼](Obfuscate)："

#: docs/8.x/helpers.md:block 359 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::mask('taylor@example.com', '*', 3);\n\n"
"// tay***************\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::mask('taylor@example.com', '*', 3);\n\n"
"// tay***************\n"

#: docs/8.x/helpers.md:block 360 (paragraph)
msgid "If needed, you provide a negative number as the third argument to the `mask` method, which will instruct the method to begin masking at the given distance from the end of the string:"
msgstr "若有需要，`mask` 方法的第三個引數可提供負數，這樣 `mask` 就會從字串結尾起給定的長度開始打碼："

#: docs/8.x/helpers.md:block 361 (code)
msgid "$string = Str::mask('taylor@example.com', '*', -15, 3);\n\n"
"// tay***@example.com\n"
msgstr "$string = Str::mask('taylor@example.com', '*', -15, 3);\n\n"
"// tay***@example.com\n"

#: docs/8.x/helpers.md:block 363 (header)
msgid "`Str::orderedUuid()` {.collection-method}"
msgstr "`Str::orderedUuid()` {.collection-method}"

#: docs/8.x/helpers.md:block 364 (paragraph)
msgid "The `Str::orderedUuid` method generates a \"timestamp first\" UUID that may be efficiently stored in an indexed database column. Each UUID that is generated using this method will be sorted after UUIDs previously generated using the method:"
msgstr "`Str::orderedUuid` 方法會產生一個「^[時戳優先](Timestamp First)」的 UUID，可用來儲存在有所引的資料庫欄位中。使用本方法產生的 UUID 在排序時會被排到之前使用本方法產生的 UUID 之後："

#: docs/8.x/helpers.md:block 365 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"return (string) Str::orderedUuid();\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"return (string) Str::orderedUuid();\n"

#: docs/8.x/helpers.md:block 367 (header)
msgid "`Str::padBoth()` {.collection-method}"
msgstr "`Str::padBoth()` {.collection-method}"

#: docs/8.x/helpers.md:block 368 (paragraph)
msgid "The `Str::padBoth` method wraps PHP's `str_pad` function, padding both sides of a string with another string until the final string reaches a desired length:"
msgstr "`Str::padBoth` 方法包裝了 PHP 的 `str_path` 方法，會填充字串的兩端，直到字串符合預期的長度："

#: docs/8.x/helpers.md:block 369 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$padded = Str::padBoth('James', 10, '_');\n\n"
"// '__James___'\n\n"
"$padded = Str::padBoth('James', 10);\n\n"
"// '  James   '\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$padded = Str::padBoth('James', 10, '_');\n\n"
"// '__James___'\n\n"
"$padded = Str::padBoth('James', 10);\n\n"
"// '  James   '\n"

#: docs/8.x/helpers.md:block 371 (header)
msgid "`Str::padLeft()` {.collection-method}"
msgstr "`Str::padLeft()` {.collection-method}"

#: docs/8.x/helpers.md:block 372 (paragraph)
msgid "The `Str::padLeft` method wraps PHP's `str_pad` function, padding the left side of a string with another string until the final string reaches a desired length:"
msgstr "`Str::padLeft` 包裝了 PHP 的 `str_pad` 方法，會使用另一個字串填充給定字串的左邊，直到符合預期的長度："

#: docs/8.x/helpers.md:block 373 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$padded = Str::padLeft('James', 10, '-=');\n\n"
"// '-=-=-James'\n\n"
"$padded = Str::padLeft('James', 10);\n\n"
"// '     James'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$padded = Str::padLeft('James', 10, '-=');\n\n"
"// '-=-=-James'\n\n"
"$padded = Str::padLeft('James', 10);\n\n"
"// '     James'\n"

#: docs/8.x/helpers.md:block 375 (header)
msgid "`Str::padRight()` {.collection-method}"
msgstr "`Str::padRight()` {.collection-method}"

#: docs/8.x/helpers.md:block 376 (paragraph)
msgid "The `Str::padRight` method wraps PHP's `str_pad` function, padding the right side of a string with another string until the final string reaches a desired length:"
msgstr "`Str::padRight` 包裝了 PHP 的 `str_pad` 方法，會使用另一個字串填充給定字串的右邊，直到符合預期的長度："

#: docs/8.x/helpers.md:block 377 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$padded = Str::padRight('James', 10, '-');\n\n"
"// 'James-----'\n\n"
"$padded = Str::padRight('James', 10);\n\n"
"// 'James     '\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$padded = Str::padRight('James', 10, '-');\n\n"
"// 'James-----'\n\n"
"$padded = Str::padRight('James', 10);\n\n"
"// 'James     '\n"

#: docs/8.x/helpers.md:block 379 (header)
msgid "`Str::plural()` {.collection-method}"
msgstr "`Str::plural()` {.collection-method}"

#: docs/8.x/helpers.md:block 380 (paragraph)
msgid "The `Str::plural` method converts a singular word string to its plural form. This function currently only supports the English language:"
msgstr "`Str::plural` 方法將單數單詞轉換為其複數型。該函式目前只支援英文："

#: docs/8.x/helpers.md:block 381 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$plural = Str::plural('car');\n\n"
"// cars\n\n"
"$plural = Str::plural('child');\n\n"
"// children\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$plural = Str::plural('car');\n\n"
"// cars\n\n"
"$plural = Str::plural('child');\n\n"
"// children\n"

#: docs/8.x/helpers.md:block 382 (paragraph)
msgid "You may provide an integer as a second argument to the function to retrieve the singular or plural form of the string:"
msgstr "也可以提供一個整數作為該方法的第二個引數，用來判斷要取得該字串的單數或複數型："

#: docs/8.x/helpers.md:block 383 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$plural = Str::plural('child', 2);\n\n"
"// children\n\n"
"$singular = Str::plural('child', 1);\n\n"
"// child\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$plural = Str::plural('child', 2);\n\n"
"// children\n\n"
"$singular = Str::plural('child', 1);\n\n"
"// child\n"

#: docs/8.x/helpers.md:block 385 (header)
msgid "`Str::pluralStudly()` {.collection-method}"
msgstr "`Str::pluralStudly()` {.collection-method}"

#: docs/8.x/helpers.md:block 386 (paragraph)
msgid "The `Str::pluralStudly` method converts a singular word string formatted in studly caps case to its plural form. This function currently only supports the English language:"
msgstr "`Str::pluralStudly` 方法將單數單詞轉換為 Studly 命名法的複數型。該方法目前只支援英文："

#: docs/8.x/helpers.md:block 387 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$plural = Str::pluralStudly('VerifiedHuman');\n\n"
"// VerifiedHumans\n\n"
"$plural = Str::pluralStudly('UserFeedback');\n\n"
"// UserFeedback\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$plural = Str::pluralStudly('VerifiedHuman');\n\n"
"// VerifiedHumans\n\n"
"$plural = Str::pluralStudly('UserFeedback');\n\n"
"// UserFeedback\n"

#: docs/8.x/helpers.md:block 389 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$plural = Str::pluralStudly('VerifiedHuman', 2);\n\n"
"// VerifiedHumans\n\n"
"$singular = Str::pluralStudly('VerifiedHuman', 1);\n\n"
"// VerifiedHuman\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$plural = Str::pluralStudly('VerifiedHuman', 2);\n\n"
"// VerifiedHumans\n\n"
"$singular = Str::pluralStudly('VerifiedHuman', 1);\n\n"
"// VerifiedHuman\n"

#: docs/8.x/helpers.md:block 391 (header)
msgid "`Str::random()` {.collection-method}"
msgstr "`Str::random()` {.collection-method}"

#: docs/8.x/helpers.md:block 392 (paragraph)
msgid "The `Str::random` method generates a random string of the specified length. This function uses PHP's `random_bytes` function:"
msgstr "`Str::random` 方法產生指定長度的隨機字串。該函式使用 PHP 的 `random_bytes` 函式："

#: docs/8.x/helpers.md:block 393 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$random = Str::random(40);\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$random = Str::random(40);\n"

#: docs/8.x/helpers.md:block 395 (header)
msgid "`Str::remove()` {.collection-method}"
msgstr "`Str::remove()` {.collection-method}"

#: docs/8.x/helpers.md:block 396 (paragraph)
msgid "The `Str::remove` method removes the given value or array of values from the string:"
msgstr "`Str::remove` 方法從字串中移除給定的一個或多個值："

#: docs/8.x/helpers.md:block 397 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = 'Peter Piper picked a peck of pickled peppers.';\n\n"
"$removed = Str::remove('e', $string);\n\n"
"// Ptr Pipr pickd a pck of pickld ppprs.\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = 'Peter Piper picked a peck of pickled peppers.';\n\n"
"$removed = Str::remove('e', $string);\n\n"
"// Ptr Pipr pickd a pck of pickld ppprs.\n"

#: docs/8.x/helpers.md:block 398 (paragraph)
msgid "You may also pass `false` as a third argument to the `remove` method to ignore case when removing strings."
msgstr "也可以傳入 `false` 作為第三個引數給 `remove` 方法來在移除字串時忽略大小寫差異："

#: docs/8.x/helpers.md:block 400 (header)
msgid "`Str::replace()` {.collection-method}"
msgstr "`Str::replace()` {.collection-method}"

#: docs/8.x/helpers.md:block 401 (paragraph)
msgid "The `Str::replace` method replaces a given string within the string:"
msgstr "`Str::replace` 方法在字串中取代給定字串："

#: docs/8.x/helpers.md:block 402 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = 'Laravel 8.x';\n\n"
"$replaced = Str::replace('8.x', '9.x', $string);\n\n"
"// Laravel 9.x\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = 'Laravel 8.x';\n\n"
"$replaced = Str::replace('8.x', '9.x', $string);\n\n"
"// Laravel 9.x\n"

#: docs/8.x/helpers.md:block 404 (header)
msgid "`Str::replaceArray()` {.collection-method}"
msgstr "`Str::replaceArray()` {.collection-method}"

#: docs/8.x/helpers.md:block 405 (paragraph)
msgid "The `Str::replaceArray` method replaces a given value in the string sequentially using an array:"
msgstr "`Str::replaceArray` 函式使用陣列來依序在陣列中取代給定的值："

#: docs/8.x/helpers.md:block 406 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = 'The event will take place between ? and ?';\n\n"
"$replaced = Str::replaceArray('?', ['8:30', '9:00'], $string);\n\n"
"// The event will take place between 8:30 and 9:00\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = 'The event will take place between ? and ?';\n\n"
"$replaced = Str::replaceArray('?', ['8:30', '9:00'], $string);\n\n"
"// The event will take place between 8:30 and 9:00\n"

#: docs/8.x/helpers.md:block 408 (header)
msgid "`Str::replaceFirst()` {.collection-method}"
msgstr "`Str::replaceFirst()` {.collection-method}"

#: docs/8.x/helpers.md:block 409 (paragraph)
msgid "The `Str::replaceFirst` method replaces the first occurrence of a given value in a string:"
msgstr "`Str::replaceFirst` 方法取代字串中第一次出現的給定值："

#: docs/8.x/helpers.md:block 410 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$replaced = Str::replaceFirst('the', 'a', 'the quick brown fox jumps over the lazy dog');\n\n"
"// a quick brown fox jumps over the lazy dog\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$replaced = Str::replaceFirst('the', 'a', 'the quick brown fox jumps over the lazy dog');\n\n"
"// a quick brown fox jumps over the lazy dog\n"

#: docs/8.x/helpers.md:block 412 (header)
msgid "`Str::replaceLast()` {.collection-method}"
msgstr "`Str::replaceLast()` {.collection-method}"

#: docs/8.x/helpers.md:block 413 (paragraph)
msgid "The `Str::replaceLast` method replaces the last occurrence of a given value in a string:"
msgstr "`Str::replaceLast` 方法取代字串中最後一次出現的給定值："

#: docs/8.x/helpers.md:block 414 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$replaced = Str::replaceLast('the', 'a', 'the quick brown fox jumps over the lazy dog');\n\n"
"// the quick brown fox jumps over a lazy dog\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$replaced = Str::replaceLast('the', 'a', 'the quick brown fox jumps over the lazy dog');\n\n"
"// the quick brown fox jumps over a lazy dog\n"

#: docs/8.x/helpers.md:block 416 (header)
msgid "`Str::reverse()` {.collection-method}"
msgstr "`Str::reverse()` {.collection-method}"

#: docs/8.x/helpers.md:block 417 (paragraph)
msgid "The `Str::reverse` method reverses the given string:"
msgstr "`Str::reverse` 方法反轉給定的字串："

#: docs/8.x/helpers.md:block 418 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$reversed = Str::reverse('Hello World');\n\n"
"// dlroW olleH\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$reversed = Str::reverse('Hello World');\n\n"
"// dlroW olleH\n"

#: docs/8.x/helpers.md:block 420 (header)
msgid "`Str::singular()` {.collection-method}"
msgstr "`Str::singular()` {.collection-method}"

#: docs/8.x/helpers.md:block 421 (paragraph)
msgid "The `Str::singular` method converts a string to its singular form. This function currently only supports the English language:"
msgstr "`Str::singular` 方法將複數單詞轉換為其單數型。該函式目前只支援英文："

#: docs/8.x/helpers.md:block 422 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$singular = Str::singular('cars');\n\n"
"// car\n\n"
"$singular = Str::singular('children');\n\n"
"// child\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$singular = Str::singular('cars');\n\n"
"// car\n\n"
"$singular = Str::singular('children');\n\n"
"// child\n"

#: docs/8.x/helpers.md:block 424 (header)
msgid "`Str::slug()` {.collection-method}"
msgstr "`Str::slug()` {.collection-method}"

#: docs/8.x/helpers.md:block 425 (paragraph)
msgid "The `Str::slug` method generates a URL friendly \"slug\" from the given string:"
msgstr "`Str::slug` 方法以給定字串產生適合在 URL 中使用的「Slug」格式："

#: docs/8.x/helpers.md:block 426 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$slug = Str::slug('Laravel 5 Framework', '-');\n\n"
"// laravel-5-framework\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$slug = Str::slug('Laravel 5 Framework', '-');\n\n"
"// laravel-5-framework\n"

#: docs/8.x/helpers.md:block 428 (header)
msgid "`Str::snake()` {.collection-method}"
msgstr "`Str::snake()` {.collection-method}"

#: docs/8.x/helpers.md:block 429 (paragraph)
msgid "The `Str::snake` method converts the given string to `snake_case`:"
msgstr "`Str::snake` 方法將給定字串轉為 `snake_case` —— 蛇型命名法的大小寫："

#: docs/8.x/helpers.md:block 430 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::snake('fooBar');\n\n"
"// foo_bar\n\n"
"$converted = Str::snake('fooBar', '-');\n\n"
"// foo-bar\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::snake('fooBar');\n\n"
"// foo_bar\n\n"
"$converted = Str::snake('fooBar', '-');\n\n"
"// foo-bar\n"

#: docs/8.x/helpers.md:block 432 (header)
msgid "`Str::start()` {.collection-method}"
msgstr "`Str::start()` {.collection-method}"

#: docs/8.x/helpers.md:block 433 (paragraph)
msgid "The `Str::start` method adds a single instance of the given value to a string if it does not already start with that value:"
msgstr "`Str::start` 方法會在給定字串不是以給定值起始時，在該字串前方加上這個值："

#: docs/8.x/helpers.md:block 434 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$adjusted = Str::start('this/string', '/');\n\n"
"// /this/string\n\n"
"$adjusted = Str::start('/this/string', '/');\n\n"
"// /this/string\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$adjusted = Str::start('this/string', '/');\n\n"
"// /this/string\n\n"
"$adjusted = Str::start('/this/string', '/');\n\n"
"// /this/string\n"

#: docs/8.x/helpers.md:block 436 (header)
msgid "`Str::startsWith()` {.collection-method}"
msgstr "`Str::startsWith()` {.collection-method}"

#: docs/8.x/helpers.md:block 437 (paragraph)
msgid "The `Str::startsWith` method determines if the given string begins with the given value:"
msgstr "Str::startsWith` 方法可判斷給定字串是否以給定值起始："

#: docs/8.x/helpers.md:block 438 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::startsWith('This is my name', 'This');\n\n"
"// true\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$result = Str::startsWith('This is my name', 'This');\n\n"
"// true\n"

#: docs/8.x/helpers.md:block 439 (paragraph)
msgid "If an array of possible values is passed, the `startsWith` method will return `true` if the string begins with any of the given values:"
msgstr "若傳入一組陣列，當字串以給定值中任何一個值開頭時，`startsWith` 方法會回傳 `true`："

#: docs/8.x/helpers.md:block 440 (code)
msgid "$result = Str::startsWith('This is my name', ['This', 'That', 'There']);\n\n"
"// true\n"
msgstr "$result = Str::startsWith('This is my name', ['This', 'That', 'There']);\n\n"
"// true\n"

#: docs/8.x/helpers.md:block 442 (header)
msgid "`Str::studly()` {.collection-method}"
msgstr "`Str::studly()` {.collection-method}"

#: docs/8.x/helpers.md:block 443 (paragraph)
msgid "The `Str::studly` method converts the given string to `StudlyCase`:"
msgstr "`Str::studly` 方法將給定字串轉為 `StudlyCase` —— Studly 命名法的大小寫："

#: docs/8.x/helpers.md:block 444 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::studly('foo_bar');\n\n"
"// FooBar\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::studly('foo_bar');\n\n"
"// FooBar\n"

#: docs/8.x/helpers.md:block 446 (header)
msgid "`Str::substr()` {.collection-method}"
msgstr "`Str::substr()` {.collection-method}"

#: docs/8.x/helpers.md:block 447 (paragraph)
msgid "The `Str::substr` method returns the portion of string specified by the start and length parameters:"
msgstr "`Str::substr` 方法回傳字串中指定的起始位置開始指定長度的字串："

#: docs/8.x/helpers.md:block 448 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::substr('The Laravel Framework', 4, 7);\n\n"
"// Laravel\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::substr('The Laravel Framework', 4, 7);\n\n"
"// Laravel\n"

#: docs/8.x/helpers.md:block 450 (header)
msgid "`Str::substrCount()` {.collection-method}"
msgstr "`Str::substrCount()` {.collection-method}"

#: docs/8.x/helpers.md:block 451 (paragraph)
msgid "The `Str::substrCount` method returns the number of occurrences of a given value in the given string:"
msgstr "`Str::substrCount` 方法回傳給定值中給定值出現的次數："

#: docs/8.x/helpers.md:block 452 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$count = Str::substrCount('If you like ice cream, you will like snow cones.', 'like');\n\n"
"// 2\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$count = Str::substrCount('If you like ice cream, you will like snow cones.', 'like');\n\n"
"// 2\n"

#: docs/8.x/helpers.md:block 454 (header)
msgid "`Str::substrReplace()` {.collection-method}"
msgstr "`Str::substrReplace()` {.collection-method}"

#: docs/8.x/helpers.md:block 455 (paragraph)
msgid "The `Str::substrReplace` method replaces text within a portion of a string, starting at the position specified by the third argument and replacing the number of characters specified by the fourth argument. Passing `0` to the method's fourth argument will insert the string at the specified position without replacing any of the existing characters in the string:"
msgstr "`Str::substrreplace` 方法在字串中取代其中一段文字，第三個引數指定起始位置，並以第四個引數來指定要取代的字元數。若第四個引數傳入 `0`，則會在指定位置插入字串，而不取代字串中現有的字元："

#: docs/8.x/helpers.md:block 456 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::substrReplace('1300', ':', 2); \n"
"// 13:\n\n"
"$result = Str::substrReplace('1300', ':', 2, 0); \n"
"// 13:00\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$result = Str::substrReplace('1300', ':', 2); \n"
"// 13:\n\n"
"$result = Str::substrReplace('1300', ':', 2, 0); \n"
"// 13:00\n"

#: docs/8.x/helpers.md:block 458 (header)
msgid "`Str::title()` {.collection-method}"
msgstr "`Str::title()` {.collection-method}"

#: docs/8.x/helpers.md:block 459 (paragraph)
msgid "The `Str::title` method converts the given string to `Title Case`:"
msgstr "`Str::title` 方法將給定字串轉為 `Title Case` —— 標題用的大小寫："

#: docs/8.x/helpers.md:block 460 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::title('a nice title uses the correct case');\n\n"
"// A Nice Title Uses The Correct Case\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::title('a nice title uses the correct case');\n\n"
"// A Nice Title Uses The Correct Case\n"

#: docs/8.x/helpers.md:block 462 (header)
msgid "`Str::toHtmlString()` {.collection-method}"
msgstr "`Str::toHtmlString()` {.collection-method}"

#: docs/8.x/helpers.md:block 463 (paragraph)
msgid "The `Str::toHtmlString` method converts the string instance to an instance of `Illuminate\\Support\\HtmlString`, which may be displayed in Blade templates:"
msgstr "`Str::toHtmlString` 方法將字串實體轉換為 `Illuminate\\Support\\HtmlString` 的實體。`HtmlString` 實體可以在 Blade 樣板中顯示："

#: docs/8.x/helpers.md:block 464 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$htmlString = Str::of('Nuno Maduro')->toHtmlString();\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$htmlString = Str::of('Nuno Maduro')->toHtmlString();\n"

#: docs/8.x/helpers.md:block 466 (header)
msgid "`Str::ucfirst()` {.collection-method}"
msgstr "`Str::ucfirst()` {.collection-method}"

#: docs/8.x/helpers.md:block 467 (paragraph)
msgid "The `Str::ucfirst` method returns the given string with the first character capitalized:"
msgstr "`Str::ucfirst` 方法回傳給定字串第一個字元轉為大寫後的字串："

#: docs/8.x/helpers.md:block 468 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::ucfirst('foo bar');\n\n"
"// Foo bar\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::ucfirst('foo bar');\n\n"
"// Foo bar\n"

#: docs/8.x/helpers.md:block 470 (header)
msgid "`Str::upper()` {.collection-method}"
msgstr "`Str::upper()` {.collection-method}"

#: docs/8.x/helpers.md:block 471 (paragraph)
msgid "The `Str::upper` method converts the given string to uppercase:"
msgstr "`Str::upper` 方法將給定字串轉換為大寫："

#: docs/8.x/helpers.md:block 472 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::upper('laravel');\n\n"
"// LARAVEL\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::upper('laravel');\n\n"
"// LARAVEL\n"

#: docs/8.x/helpers.md:block 474 (header)
msgid "`Str::uuid()` {.collection-method}"
msgstr "`Str::uuid()` {.collection-method}"

#: docs/8.x/helpers.md:block 475 (paragraph)
msgid "The `Str::uuid` method generates a UUID (version 4):"
msgstr "`Str::uuid` 方法產生 UUID (第 4 版)："

#: docs/8.x/helpers.md:block 476 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"return (string) Str::uuid();\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"return (string) Str::uuid();\n"

#: docs/8.x/helpers.md:block 478 (header)
msgid "`Str::wordCount()` {.collection-method}"
msgstr "`Str::wordCount()` {.collection-method}"

#: docs/8.x/helpers.md:block 479 (paragraph)
msgid "The `Str::wordCount` method returns the number of words that a string contains:"
msgstr "`Str::wordCount` 方法回傳該字串中所包含的單詞數："

#: docs/8.x/helpers.md:block 480 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"Str::wordCount('Hello, world!'); // 2\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"Str::wordCount('Hello, world!'); // 2\n"

#: docs/8.x/helpers.md:block 482 (header)
msgid "`Str::words()` {.collection-method}"
msgstr "`Str::words()` {.collection-method}"

#: docs/8.x/helpers.md:block 483 (paragraph)
msgid "The `Str::words` method limits the number of words in a string. An additional string may be passed to this method via its third argument to specify which string should be appended to the end of the truncated string:"
msgstr "`Str::words` 方法將字串中的單詞數限制在指定數量內。也可以第三引數來傳入一個額外的字串，用來指定當字串被截斷時要加在最後方的內容："

#: docs/8.x/helpers.md:block 484 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"return Str::words('Perfectly balanced, as all things should be.', 3, ' >>>');\n\n"
"// Perfectly balanced, as >>>\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"return Str::words('Perfectly balanced, as all things should be.', 3, ' >>>');\n\n"
"// Perfectly balanced, as >>>\n"

#: docs/8.x/helpers.md:block 486 (header)
msgid "`trans()` {.collection-method}"
msgstr "`trans()` {.collection-method}"

#: docs/8.x/helpers.md:block 487 (paragraph)
msgid "The `trans` function translates the given translation key using your [localization files](/docs/{{version}}/localization):"
msgstr "`trans` 函式使用[語系檔](/docs/{{version}}/localization)來翻譯給定的翻譯字串或翻譯索引鍵："

#: docs/8.x/helpers.md:block 488 (code)
msgid "echo trans('messages.welcome');\n"
msgstr "echo trans('messages.welcome');\n"

#: docs/8.x/helpers.md:block 489 (paragraph)
msgid "If the specified translation key does not exist, the `trans` function will return the given key. So, using the example above, the `trans` function would return `messages.welcome` if the translation key does not exist."
msgstr "若指定的翻譯字串或翻譯索引鍵不存在時，`trans` 函式會回傳給定的值。因此，在上述範例中，若 `messages.welcome` 索引鍵不存在，`trans` 函式會回傳 `messages.welcome`。"

#: docs/8.x/helpers.md:block 491 (header)
msgid "`trans_choice()` {.collection-method}"
msgstr "`trans_choice()` {.collection-method}"

#: docs/8.x/helpers.md:block 492 (paragraph)
msgid "The `trans_choice` function translates the given translation key with inflection:"
msgstr "`trans_choice` 函式會翻譯有詞形變化的翻譯索引鍵："

#: docs/8.x/helpers.md:block 493 (code)
msgid "echo trans_choice('messages.notifications', $unreadCount);\n"
msgstr "echo trans_choice('messages.notifications', $unreadCount);\n"

#: docs/8.x/helpers.md:block 494 (paragraph)
msgid "If the specified translation key does not exist, the `trans_choice` function will return the given key. So, using the example above, the `trans_choice` function would return `messages.notifications` if the translation key does not exist."
msgstr "若指定的翻譯字串或翻譯索引鍵不存在時，`trans_choice` 函式會回傳給定的值。因此，在上述範例中，若 `messages.notifications` 索引鍵不存在，`trans_choice` 函式會回傳 `messages.welcome`。"

#: docs/8.x/helpers.md:block 497 (paragraph)
msgid "Fluent strings provide a more fluent, object-oriented interface for working with string values, allowing you to chain multiple string operations together using a more readable syntax compared to traditional string operations."
msgstr "Fluent 字串提供處理字串值一個更流暢、物件導向的介面。我們可以串接多個字串操作，得到比起傳統字串操作來說更好閱讀的語法："

#: docs/8.x/helpers.md:block 499 (header)
msgid "`after` {.collection-method}"
msgstr "`after` {.collection-method}"

#: docs/8.x/helpers.md:block 500 (paragraph)
msgid "The `after` method returns everything after the given value in a string. The entire string will be returned if the value does not exist within the string:"
msgstr "`after` 方法回傳字串中給定值以後的所有內容。若該字串中找不到給定值，會回傳整個字串："

#: docs/8.x/helpers.md:block 501 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::of('This is my name')->after('This is');\n\n"
"// ' my name'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::of('This is my name')->after('This is');\n\n"
"// ' my name'\n"

#: docs/8.x/helpers.md:block 503 (header)
msgid "`afterLast` {.collection-method}"
msgstr "`afterLast` {.collection-method}"

#: docs/8.x/helpers.md:block 504 (paragraph)
msgid "The `afterLast` method returns everything after the last occurrence of the given value in a string. The entire string will be returned if the value does not exist within the string:"
msgstr "`afterLast` 方法回傳給定字串後最後一個出現給定值之後的所有內容。若找不到該值，會回傳整個字串："

#: docs/8.x/helpers.md:block 505 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::of('App\\Http\\Controllers\\Controller')->afterLast('\\\\');\n\n"
"// 'Controller'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::of('App\\Http\\Controllers\\Controller')->afterLast('\\\\');\n\n"
"// 'Controller'\n"

#: docs/8.x/helpers.md:block 507 (header)
msgid "`append` {.collection-method}"
msgstr "`append` {.collection-method}"

#: docs/8.x/helpers.md:block 508 (paragraph)
msgid "The `append` method appends the given values to the string:"
msgstr "`append` 方法將給定的值加到字串最後面："

#: docs/8.x/helpers.md:block 509 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Taylor')->append(' Otwell');\n\n"
"// 'Taylor Otwell'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Taylor')->append(' Otwell');\n\n"
"// 'Taylor Otwell'\n"

#: docs/8.x/helpers.md:block 511 (header)
msgid "`ascii` {.collection-method}"
msgstr "`ascii` {.collection-method}"

#: docs/8.x/helpers.md:block 512 (paragraph)
msgid "The `ascii` method will attempt to transliterate the string into an ASCII value:"
msgstr "`ascii` 方法會嘗試將給定字串翻譯為 ASCII 值："

#: docs/8.x/helpers.md:block 513 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('ü')->ascii();\n\n"
"// 'u'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('ü')->ascii();\n\n"
"// 'u'\n"

#: docs/8.x/helpers.md:block 515 (header)
msgid "`basename` {.collection-method}"
msgstr "`basename` {.collection-method}"

#: docs/8.x/helpers.md:block 516 (paragraph)
msgid "The `basename` method will return the trailing name component of the given string:"
msgstr "`basename` 方法回傳給定字串中最後一個名稱部分："

#: docs/8.x/helpers.md:block 517 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('/foo/bar/baz')->basename();\n\n"
"// 'baz'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('/foo/bar/baz')->basename();\n\n"
"// 'baz'\n"

#: docs/8.x/helpers.md:block 518 (paragraph)
msgid "If needed, you may provide an \"extension\" that will be removed from the trailing component:"
msgstr "若有需要，也可以提供要從最後一個元件中移除的「副檔名」："

#: docs/8.x/helpers.md:block 519 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('/foo/bar/baz.jpg')->basename('.jpg');\n\n"
"// 'baz'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('/foo/bar/baz.jpg')->basename('.jpg');\n\n"
"// 'baz'\n"

#: docs/8.x/helpers.md:block 521 (header)
msgid "`before` {.collection-method}"
msgstr "`before` {.collection-method}"

#: docs/8.x/helpers.md:block 522 (paragraph)
msgid "The `before` method returns everything before the given value in a string:"
msgstr "`before` 回傳字串在遇到給定值前的所有內容："

#: docs/8.x/helpers.md:block 523 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::of('This is my name')->before('my name');\n\n"
"// 'This is '\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::of('This is my name')->before('my name');\n\n"
"// 'This is '\n"

#: docs/8.x/helpers.md:block 525 (header)
msgid "`beforeLast` {.collection-method}"
msgstr "`beforeLast` {.collection-method}"

#: docs/8.x/helpers.md:block 526 (paragraph)
msgid "The `beforeLast` method returns everything before the last occurrence of the given value in a string:"
msgstr "`beforeLast` 方法回傳字串中最後一次出現給定值以前的所有內容："

#: docs/8.x/helpers.md:block 527 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::of('This is my name')->beforeLast('is');\n\n"
"// 'This '\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::of('This is my name')->beforeLast('is');\n\n"
"// 'This '\n"

#: docs/8.x/helpers.md:block 529 (header)
msgid "`between` {.collection-method}"
msgstr "`between` {.collection-method}"

#: docs/8.x/helpers.md:block 530 (paragraph)
msgid "The `between` method returns the portion of a string between two values:"
msgstr "`between` 方法回傳介於兩個值之間的字串："

#: docs/8.x/helpers.md:block 531 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::of('This is my name')->between('This', 'name');\n\n"
"// ' is my '\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::of('This is my name')->between('This', 'name');\n\n"
"// ' is my '\n"

#: docs/8.x/helpers.md:block 533 (header)
msgid "`camel` {.collection-method}"
msgstr "`camel` {.collection-method}"

#: docs/8.x/helpers.md:block 534 (paragraph)
msgid "The `camel` method converts the given string to `camelCase`:"
msgstr "`camel` 方法將給定字串轉為 `camelCase` —— 駝峰命名法的大小寫："

#: docs/8.x/helpers.md:block 535 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::of('foo_bar')->camel();\n\n"
"// fooBar\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::of('foo_bar')->camel();\n\n"
"// fooBar\n"

#: docs/8.x/helpers.md:block 537 (header)
msgid "`contains` {.collection-method}"
msgstr "`contains` {.collection-method}"

#: docs/8.x/helpers.md:block 538 (paragraph)
msgid "The `contains` method determines if the given string contains the given value. This method is case sensitive:"
msgstr "`contains` 方法判斷給定字串是否包含給定值。該方法區分大小寫："

#: docs/8.x/helpers.md:block 539 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$contains = Str::of('This is my name')->contains('my');\n\n"
"// true\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$contains = Str::of('This is my name')->contains('my');\n\n"
"// true\n"

#: docs/8.x/helpers.md:block 541 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$contains = Str::of('This is my name')->contains(['my', 'foo']);\n\n"
"// true\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$contains = Str::of('This is my name')->contains(['my', 'foo']);\n\n"
"// true\n"

#: docs/8.x/helpers.md:block 543 (header)
msgid "`containsAll` {.collection-method}"
msgstr "`containsAll` {.collection-method}"

#: docs/8.x/helpers.md:block 544 (paragraph)
msgid "The `containsAll` method determines if the given string contains all of the values in the given array:"
msgstr "`containsAll` 判斷給定字串是否有包含給定陣列中的所有值："

#: docs/8.x/helpers.md:block 545 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$containsAll = Str::of('This is my name')->containsAll(['my', 'name']);\n\n"
"// true\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$containsAll = Str::of('This is my name')->containsAll(['my', 'name']);\n\n"
"// true\n"

#: docs/8.x/helpers.md:block 547 (header)
msgid "`dirname` {.collection-method}"
msgstr "`dirname` {.collection-method}"

#: docs/8.x/helpers.md:block 548 (paragraph)
msgid "The `dirname` method returns the parent directory portion of the given string:"
msgstr "`dirname` 方法回傳給定字串中上層目錄的部分："

#: docs/8.x/helpers.md:block 549 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('/foo/bar/baz')->dirname();\n\n"
"// '/foo/bar'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('/foo/bar/baz')->dirname();\n\n"
"// '/foo/bar'\n"

#: docs/8.x/helpers.md:block 550 (paragraph)
msgid "If necessary, you may specify how many directory levels you wish to trim from the string:"
msgstr "若有需要，也可以指定要去的多少層以上的目錄："

#: docs/8.x/helpers.md:block 551 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('/foo/bar/baz')->dirname(2);\n\n"
"// '/foo'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('/foo/bar/baz')->dirname(2);\n\n"
"// '/foo'\n"

#: docs/8.x/helpers.md:block 553 (header)
msgid "`endsWith` {.collection-method}"
msgstr "`endsWith` {.collection-method}"

#: docs/8.x/helpers.md:block 554 (paragraph)
msgid "The `endsWith` method determines if the given string ends with the given value:"
msgstr "`endsWith` 方法可判斷給定字串是否以給定值結尾："

#: docs/8.x/helpers.md:block 555 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('This is my name')->endsWith('name');\n\n"
"// true\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('This is my name')->endsWith('name');\n\n"
"// true\n"

#: docs/8.x/helpers.md:block 557 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('This is my name')->endsWith(['name', 'foo']);\n\n"
"// true\n\n"
"$result = Str::of('This is my name')->endsWith(['this', 'foo']);\n\n"
"// false\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('This is my name')->endsWith(['name', 'foo']);\n\n"
"// true\n\n"
"$result = Str::of('This is my name')->endsWith(['this', 'foo']);\n\n"
"// false\n"

#: docs/8.x/helpers.md:block 559 (header)
msgid "`exactly` {.collection-method}"
msgstr "`exactly` {.collection-method}"

#: docs/8.x/helpers.md:block 560 (paragraph)
msgid "The `exactly` method determines if the given string is an exact match with another string:"
msgstr "`exactly` 方法判斷給定字串是否完全符合另一個字串："

#: docs/8.x/helpers.md:block 561 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('Laravel')->exactly('Laravel');\n\n"
"// true\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('Laravel')->exactly('Laravel');\n\n"
"// true\n"

#: docs/8.x/helpers.md:block 563 (header)
msgid "`explode` {.collection-method}"
msgstr "`explode` {.collection-method}"

#: docs/8.x/helpers.md:block 564 (paragraph)
msgid "The `explode` method splits the string by the given delimiter and returns a collection containing each section of the split string:"
msgstr "`explode` 方法以給定的分隔符號來拆分字串，並回傳一個包含分割後所有段落的 Collection："

#: docs/8.x/helpers.md:block 565 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$collection = Str::of('foo bar baz')->explode(' ');\n\n"
"// collect(['foo', 'bar', 'baz'])\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$collection = Str::of('foo bar baz')->explode(' ');\n\n"
"// collect(['foo', 'bar', 'baz'])\n"

#: docs/8.x/helpers.md:block 567 (header)
msgid "`finish` {.collection-method}"
msgstr "`finish` {.collection-method}"

#: docs/8.x/helpers.md:block 568 (paragraph)
msgid "The `finish` method adds a single instance of the given value to a string if it does not already end with that value:"
msgstr "`finish` 方法會在給定字串不是以給定值結尾時，在該字串後方加上這個值："

#: docs/8.x/helpers.md:block 569 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$adjusted = Str::of('this/string')->finish('/');\n\n"
"// this/string/\n\n"
"$adjusted = Str::of('this/string/')->finish('/');\n\n"
"// this/string/\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$adjusted = Str::of('this/string')->finish('/');\n\n"
"// this/string/\n\n"
"$adjusted = Str::of('this/string/')->finish('/');\n\n"
"// this/string/\n"

#: docs/8.x/helpers.md:block 571 (header)
msgid "`is` {.collection-method}"
msgstr "`is` {.collection-method}"

#: docs/8.x/helpers.md:block 572 (paragraph)
msgid "The `is` method determines if a given string matches a given pattern. Asterisks may be used as wildcard values"
msgstr "`is` 判斷給定字串是否符合給定的格式。可使用星號作為萬用字元："

#: docs/8.x/helpers.md:block 573 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$matches = Str::of('foobar')->is('foo*');\n\n"
"// true\n\n"
"$matches = Str::of('foobar')->is('baz*');\n\n"
"// false\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$matches = Str::of('foobar')->is('foo*');\n\n"
"// true\n\n"
"$matches = Str::of('foobar')->is('baz*');\n\n"
"// false\n"

#: docs/8.x/helpers.md:block 575 (header)
msgid "`isAscii` {.collection-method}"
msgstr "`isAscii` {.collection-method}"

#: docs/8.x/helpers.md:block 576 (paragraph)
msgid "The `isAscii` method determines if a given string is an ASCII string:"
msgstr "`isAscii` 方法判斷給定字串是否為 ASCII 字串："

#: docs/8.x/helpers.md:block 577 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('Taylor')->isAscii();\n\n"
"// true\n\n"
"$result = Str::of('ü')->isAscii();\n\n"
"// false\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('Taylor')->isAscii();\n\n"
"// true\n\n"
"$result = Str::of('ü')->isAscii();\n\n"
"// false\n"

#: docs/8.x/helpers.md:block 579 (header)
msgid "`isEmpty` {.collection-method}"
msgstr "`isEmpty` {.collection-method}"

#: docs/8.x/helpers.md:block 580 (paragraph)
msgid "The `isEmpty` method determines if the given string is empty:"
msgstr "`isEmpty` 方法判斷給定字串是否為空："

#: docs/8.x/helpers.md:block 581 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('  ')->trim()->isEmpty();\n\n"
"// true\n\n"
"$result = Str::of('Laravel')->trim()->isEmpty();\n\n"
"// false\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('  ')->trim()->isEmpty();\n\n"
"// true\n\n"
"$result = Str::of('Laravel')->trim()->isEmpty();\n\n"
"// false\n"

#: docs/8.x/helpers.md:block 583 (header)
msgid "`isNotEmpty` {.collection-method}"
msgstr "`isNotEmpty` {.collection-method}"

#: docs/8.x/helpers.md:block 584 (paragraph)
msgid "The `isNotEmpty` method determines if the given string is not empty:"
msgstr "`isNotEmpty` 方法判斷給定字串是否不為空："

#: docs/8.x/helpers.md:block 585 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('  ')->trim()->isNotEmpty();\n\n"
"// false\n\n"
"$result = Str::of('Laravel')->trim()->isNotEmpty();\n\n"
"// true\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('  ')->trim()->isNotEmpty();\n\n"
"// false\n\n"
"$result = Str::of('Laravel')->trim()->isNotEmpty();\n\n"
"// true\n"

#: docs/8.x/helpers.md:block 587 (header)
msgid "`isUuid` {.collection-method}"
msgstr "`isUuid` {.collection-method}"

#: docs/8.x/helpers.md:block 588 (paragraph)
msgid "The `isUuid` method determines if a given string is a UUID:"
msgstr "`isUuid` 方法判斷給定字串是否為有效的 UUID："

#: docs/8.x/helpers.md:block 589 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('5ace9ab9-e9cf-4ec6-a19d-5881212a452c')->isUuid();\n\n"
"// true\n\n"
"$result = Str::of('Taylor')->isUuid();\n\n"
"// false\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('5ace9ab9-e9cf-4ec6-a19d-5881212a452c')->isUuid();\n\n"
"// true\n\n"
"$result = Str::of('Taylor')->isUuid();\n\n"
"// false\n"

#: docs/8.x/helpers.md:block 591 (header)
msgid "`kebab` {.collection-method}"
msgstr "`kebab` {.collection-method}"

#: docs/8.x/helpers.md:block 592 (paragraph)
msgid "The `kebab` method converts the given string to `kebab-case`:"
msgstr "`kebab` 方法將給定字串轉換為 `kebab-case` —— Kebab 命名法的大小寫："

#: docs/8.x/helpers.md:block 593 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::of('fooBar')->kebab();\n\n"
"// foo-bar\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::of('fooBar')->kebab();\n\n"
"// foo-bar\n"

#: docs/8.x/helpers.md:block 595 (header)
msgid "`length` {.collection-method}"
msgstr "`length` {.collection-method}"

#: docs/8.x/helpers.md:block 596 (paragraph)
msgid "The `length` method returns the length of the given string:"
msgstr "`length` 方法回傳給定字串的長度："

#: docs/8.x/helpers.md:block 597 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$length = Str::of('Laravel')->length();\n\n"
"// 7\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$length = Str::of('Laravel')->length();\n\n"
"// 7\n"

#: docs/8.x/helpers.md:block 599 (header)
msgid "`limit` {.collection-method}"
msgstr "`limit` {.collection-method}"

#: docs/8.x/helpers.md:block 600 (paragraph)
msgid "The `limit` method truncates the given string to the specified length:"
msgstr "`limit` 方法將給定字串截斷成指定長度："

#: docs/8.x/helpers.md:block 601 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$truncated = Str::of('The quick brown fox jumps over the lazy dog')->limit(20);\n\n"
"// The quick brown fox...\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$truncated = Str::of('The quick brown fox jumps over the lazy dog')->limit(20);\n\n"
"// The quick brown fox...\n"

#: docs/8.x/helpers.md:block 602 (paragraph)
msgid "You may also pass a second argument to change the string that will be appended to the end of the truncated string:"
msgstr "也可以傳入第二個引數，以更改當字串被截斷時要加在最後方的內容："

#: docs/8.x/helpers.md:block 603 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$truncated = Str::of('The quick brown fox jumps over the lazy dog')->limit(20, ' (...)');\n\n"
"// The quick brown fox (...)\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$truncated = Str::of('The quick brown fox jumps over the lazy dog')->limit(20, ' (...)');\n\n"
"// The quick brown fox (...)\n"

#: docs/8.x/helpers.md:block 605 (header)
msgid "`lower` {.collection-method}"
msgstr "`lower` {.collection-method}"

#: docs/8.x/helpers.md:block 606 (paragraph)
msgid "The `lower` method converts the given string to lowercase:"
msgstr "`lower` 方法將給定字串轉為小寫："

#: docs/8.x/helpers.md:block 607 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('LARAVEL')->lower();\n\n"
"// 'laravel'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('LARAVEL')->lower();\n\n"
"// 'laravel'\n"

#: docs/8.x/helpers.md:block 609 (header)
msgid "`ltrim` {.collection-method}"
msgstr "`ltrim` {.collection-method}"

#: docs/8.x/helpers.md:block 610 (paragraph)
msgid "The `ltrim` method trims the left side of the string:"
msgstr "`ltrim` 方法修剪字串左邊的值："

#: docs/8.x/helpers.md:block 611 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('  Laravel  ')->ltrim();\n\n"
"// 'Laravel  '\n\n"
"$string = Str::of('/Laravel/')->ltrim('/');\n\n"
"// 'Laravel/'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('  Laravel  ')->ltrim();\n\n"
"// 'Laravel  '\n\n"
"$string = Str::of('/Laravel/')->ltrim('/');\n\n"
"// 'Laravel/'\n"

#: docs/8.x/helpers.md:block 613 (header)
msgid "`markdown` {.collection-method}"
msgstr "`markdown` {.collection-method}"

#: docs/8.x/helpers.md:block 614 (paragraph)
msgid "The `markdown` method converts GitHub flavored Markdown into HTML:"
msgstr "`markdown` 方法可將 GitHub Flavored Markdown 轉位為 HTML："

#: docs/8.x/helpers.md:block 615 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$html = Str::of('# Laravel')->markdown();\n\n"
"// <h1>Laravel</h1>\n\n"
"$html = Str::of('# Taylor <b>Otwell</b>')->markdown([\n"
"    'html_input' => 'strip',\n"
"]);\n\n"
"// <h1>Taylor Otwell</h1>\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$html = Str::of('# Laravel')->markdown();\n\n"
"// <h1>Laravel</h1>\n\n"
"$html = Str::of('# Taylor <b>Otwell</b>')->markdown([\n"
"    'html_input' => 'strip',\n"
"]);\n\n"
"// <h1>Taylor Otwell</h1>\n"

#: docs/8.x/helpers.md:block 617 (header)
msgid "`mask` {.collection-method}"
msgstr "`mask` {.collection-method}"

#: docs/8.x/helpers.md:block 618 (paragraph)
msgid "The `mask` method masks a portion of a string with a repeated character, and may be used to obfuscate segments of strings such as email addresses and phone numbers:"
msgstr "`mask` 方法將字串中的一部分轉為重複字元，可用來為 E-Mail 位址或電話號碼⋯⋯等字串^[打碼](Obfuscate)："

#: docs/8.x/helpers.md:block 619 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('taylor@example.com')->mask('*', 3);\n\n"
"// tay***************\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('taylor@example.com')->mask('*', 3);\n\n"
"// tay***************\n"

#: docs/8.x/helpers.md:block 621 (code)
msgid "$string = Str::of('taylor@example.com')->mask('*', -15, 3);\n\n"
"// tay***@example.com\n"
msgstr "$string = Str::of('taylor@example.com')->mask('*', -15, 3);\n\n"
"// tay***@example.com\n"

#: docs/8.x/helpers.md:block 623 (header)
msgid "`match` {.collection-method}"
msgstr "`match` {.collection-method}"

#: docs/8.x/helpers.md:block 624 (paragraph)
msgid "The `match` method will return the portion of a string that matches a given regular expression pattern:"
msgstr "`match` 方法回傳字串中符合給定正規表示式格式的部分："

#: docs/8.x/helpers.md:block 625 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('foo bar')->match('/bar/');\n\n"
"// 'bar'\n\n"
"$result = Str::of('foo bar')->match('/foo (.*)/');\n\n"
"// 'bar'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('foo bar')->match('/bar/');\n\n"
"// 'bar'\n\n"
"$result = Str::of('foo bar')->match('/foo (.*)/');\n\n"
"// 'bar'\n"

#: docs/8.x/helpers.md:block 627 (header)
msgid "`matchAll` {.collection-method}"
msgstr "`matchAll` {.collection-method}"

#: docs/8.x/helpers.md:block 628 (paragraph)
msgid "The `matchAll` method will return a collection containing the portions of a string that match a given regular expression pattern:"
msgstr "`matchAll` 方法回傳一組 Collection，其中包含字串中所有符合給定正規表示式格式的部分："

#: docs/8.x/helpers.md:block 629 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('bar foo bar')->matchAll('/bar/');\n\n"
"// collect(['bar', 'bar'])\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('bar foo bar')->matchAll('/bar/');\n\n"
"// collect(['bar', 'bar'])\n"

#: docs/8.x/helpers.md:block 630 (paragraph)
msgid "If you specify a matching group within the expression, Laravel will return a collection of that group's matches:"
msgstr "也可以在正規式中指定^[分組](Matching Group)，Laravel 會回傳一個包含這些分組的 Collection："

#: docs/8.x/helpers.md:block 631 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('bar fun bar fly')->matchAll('/f(\\w*)/');\n\n"
"// collect(['un', 'ly']);\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('bar fun bar fly')->matchAll('/f(\\w*)/');\n\n"
"// collect(['un', 'ly']);\n"

#: docs/8.x/helpers.md:block 632 (paragraph)
msgid "If no matches are found, an empty collection will be returned."
msgstr "若未找到相符合的內容，會回傳空 Collection。"

#: docs/8.x/helpers.md:block 634 (header)
msgid "`padBoth` {.collection-method}"
msgstr "`padBoth` {.collection-method}"

#: docs/8.x/helpers.md:block 635 (paragraph)
msgid "The `padBoth` method wraps PHP's `str_pad` function, padding both sides of a string with another string until the final string reaches the desired length:"
msgstr "`padBoth` 方法包裝了 PHP 的 `str_path` 方法，會填充字串的兩端，直到字串符合預期的長度："

#: docs/8.x/helpers.md:block 636 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$padded = Str::of('James')->padBoth(10, '_');\n\n"
"// '__James___'\n\n"
"$padded = Str::of('James')->padBoth(10);\n\n"
"// '  James   '\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$padded = Str::of('James')->padBoth(10, '_');\n\n"
"// '__James___'\n\n"
"$padded = Str::of('James')->padBoth(10);\n\n"
"// '  James   '\n"

#: docs/8.x/helpers.md:block 638 (header)
msgid "`padLeft` {.collection-method}"
msgstr "`padLeft` {.collection-method}"

#: docs/8.x/helpers.md:block 639 (paragraph)
msgid "The `padLeft` method wraps PHP's `str_pad` function, padding the left side of a string with another string until the final string reaches the desired length:"
msgstr "`padLeft` 包裝了 PHP 的 `str_pad` 方法，會使用另一個字串填充給定字串的左邊，直到符合預期的長度："

#: docs/8.x/helpers.md:block 640 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$padded = Str::of('James')->padLeft(10, '-=');\n\n"
"// '-=-=-James'\n\n"
"$padded = Str::of('James')->padLeft(10);\n\n"
"// '     James'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$padded = Str::of('James')->padLeft(10, '-=');\n\n"
"// '-=-=-James'\n\n"
"$padded = Str::of('James')->padLeft(10);\n\n"
"// '     James'\n"

#: docs/8.x/helpers.md:block 642 (header)
msgid "`padRight` {.collection-method}"
msgstr "`padRight` {.collection-method}"

#: docs/8.x/helpers.md:block 643 (paragraph)
msgid "The `padRight` method wraps PHP's `str_pad` function, padding the right side of a string with another string until the final string reaches the desired length:"
msgstr "`padRight` 包裝了 PHP 的 `str_pad` 方法，會使用另一個字串填充給定字串的右邊，直到符合預期的長度："

#: docs/8.x/helpers.md:block 644 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$padded = Str::of('James')->padRight(10, '-');\n\n"
"// 'James-----'\n\n"
"$padded = Str::of('James')->padRight(10);\n\n"
"// 'James     '\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$padded = Str::of('James')->padRight(10, '-');\n\n"
"// 'James-----'\n\n"
"$padded = Str::of('James')->padRight(10);\n\n"
"// 'James     '\n"

#: docs/8.x/helpers.md:block 646 (header)
msgid "`pipe` {.collection-method}"
msgstr "`pipe` {.collection-method}"

#: docs/8.x/helpers.md:block 647 (paragraph)
msgid "The `pipe` method allows you to transform the string by passing its current value to the given callable:"
msgstr "`pipe` 方法會講目前字串傳入給定的閉包內，來讓我們變換字串："

#: docs/8.x/helpers.md:block 648 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$hash = Str::of('Laravel')->pipe('md5')->prepend('Checksum: ');\n\n"
"// 'Checksum: a5c95b86291ea299fcbe64458ed12702'\n\n"
"$closure = Str::of('foo')->pipe(function ($str) {\n"
"    return 'bar';\n"
"});\n\n"
"// 'bar'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$hash = Str::of('Laravel')->pipe('md5')->prepend('Checksum: ');\n\n"
"// 'Checksum: a5c95b86291ea299fcbe64458ed12702'\n\n"
"$closure = Str::of('foo')->pipe(function ($str) {\n"
"    return 'bar';\n"
"});\n\n"
"// 'bar'\n"

#: docs/8.x/helpers.md:block 650 (header)
msgid "`plural` {.collection-method}"
msgstr "`plural` {.collection-method}"

#: docs/8.x/helpers.md:block 651 (paragraph)
msgid "The `plural` method converts a singular word string to its plural form. This function currently only supports the English language:"
msgstr "`plural` 方法將單數單詞轉換為其複數型。該函式目前只支援英文："

#: docs/8.x/helpers.md:block 652 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$plural = Str::of('car')->plural();\n\n"
"// cars\n\n"
"$plural = Str::of('child')->plural();\n\n"
"// children\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$plural = Str::of('car')->plural();\n\n"
"// cars\n\n"
"$plural = Str::of('child')->plural();\n\n"
"// children\n"

#: docs/8.x/helpers.md:block 654 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$plural = Str::of('child')->plural(2);\n\n"
"// children\n\n"
"$plural = Str::of('child')->plural(1);\n\n"
"// child\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$plural = Str::of('child')->plural(2);\n\n"
"// children\n\n"
"$plural = Str::of('child')->plural(1);\n\n"
"// child\n"

#: docs/8.x/helpers.md:block 656 (header)
msgid "`prepend` {.collection-method}"
msgstr "`prepend` {.collection-method}"

#: docs/8.x/helpers.md:block 657 (paragraph)
msgid "The `prepend` method prepends the given values onto the string:"
msgstr "`prepend` 方法將給定的值加到字串最後面："

#: docs/8.x/helpers.md:block 658 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Framework')->prepend('Laravel ');\n\n"
"// Laravel Framework\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Framework')->prepend('Laravel ');\n\n"
"// Laravel Framework\n"

#: docs/8.x/helpers.md:block 660 (header)
msgid "`remove` {.collection-method}"
msgstr "`remove` {.collection-method}"

#: docs/8.x/helpers.md:block 661 (paragraph)
msgid "The `remove` method removes the given value or array of values from the string:"
msgstr "`remove` 方法從字串中移除給定的一個或多個值："

#: docs/8.x/helpers.md:block 662 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Arkansas is quite beautiful!')->remove('quite');\n\n"
"// Arkansas is beautiful!\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Arkansas is quite beautiful!')->remove('quite');\n\n"
"// Arkansas is beautiful!\n"

#: docs/8.x/helpers.md:block 663 (paragraph)
msgid "You may also pass `false` as a second parameter to ignore case when removing strings."
msgstr "也可以傳入 `false` 作為第二個引數，來在移除字串時忽略大小寫差異："

#: docs/8.x/helpers.md:block 665 (header)
msgid "`replace` {.collection-method}"
msgstr "`replace` {.collection-method}"

#: docs/8.x/helpers.md:block 666 (paragraph)
msgid "The `replace` method replaces a given string within the string:"
msgstr "`replace` 方法在字串中取代給定字串："

#: docs/8.x/helpers.md:block 667 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$replaced = Str::of('Laravel 6.x')->replace('6.x', '7.x');\n\n"
"// Laravel 7.x\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$replaced = Str::of('Laravel 6.x')->replace('6.x', '7.x');\n\n"
"// Laravel 7.x\n"

#: docs/8.x/helpers.md:block 669 (header)
msgid "`replaceArray` {.collection-method}"
msgstr "`replaceArray` {.collection-method}"

#: docs/8.x/helpers.md:block 670 (paragraph)
msgid "The `replaceArray` method replaces a given value in the string sequentially using an array:"
msgstr "`replaceArray` 函式使用陣列來依序在陣列中取代給定的值："

#: docs/8.x/helpers.md:block 671 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = 'The event will take place between ? and ?';\n\n"
"$replaced = Str::of($string)->replaceArray('?', ['8:30', '9:00']);\n\n"
"// The event will take place between 8:30 and 9:00\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = 'The event will take place between ? and ?';\n\n"
"$replaced = Str::of($string)->replaceArray('?', ['8:30', '9:00']);\n\n"
"// The event will take place between 8:30 and 9:00\n"

#: docs/8.x/helpers.md:block 673 (header)
msgid "`replaceFirst` {.collection-method}"
msgstr "`replaceFirst` {.collection-method}"

#: docs/8.x/helpers.md:block 674 (paragraph)
msgid "The `replaceFirst` method replaces the first occurrence of a given value in a string:"
msgstr "`replaceFirst` 方法取代字串中第一次出現的給定值："

#: docs/8.x/helpers.md:block 675 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$replaced = Str::of('the quick brown fox jumps over the lazy dog')->replaceFirst('the', 'a');\n\n"
"// a quick brown fox jumps over the lazy dog\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$replaced = Str::of('the quick brown fox jumps over the lazy dog')->replaceFirst('the', 'a');\n\n"
"// a quick brown fox jumps over the lazy dog\n"

#: docs/8.x/helpers.md:block 677 (header)
msgid "`replaceLast` {.collection-method}"
msgstr "`replaceLast` {.collection-method}"

#: docs/8.x/helpers.md:block 678 (paragraph)
msgid "The `replaceLast` method replaces the last occurrence of a given value in a string:"
msgstr "`replaceLast` 方法取代字串中最後一次出現的給定值："

#: docs/8.x/helpers.md:block 679 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$replaced = Str::of('the quick brown fox jumps over the lazy dog')->replaceLast('the', 'a');\n\n"
"// the quick brown fox jumps over a lazy dog\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$replaced = Str::of('the quick brown fox jumps over the lazy dog')->replaceLast('the', 'a');\n\n"
"// the quick brown fox jumps over a lazy dog\n"

#: docs/8.x/helpers.md:block 681 (header)
msgid "`replaceMatches` {.collection-method}"
msgstr "`replaceMatches` {.collection-method}"

#: docs/8.x/helpers.md:block 682 (paragraph)
msgid "The `replaceMatches` method replaces all portions of a string matching a pattern with the given replacement string:"
msgstr "`replaceMatches` 方法使用給定取代字串來取代字串中所有符合格式的部分："

#: docs/8.x/helpers.md:block 683 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$replaced = Str::of('(+1) 501-555-1000')->replaceMatches('/[^A-Za-z0-9]++/', '')\n\n"
"// '15015551000'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$replaced = Str::of('(+1) 501-555-1000')->replaceMatches('/[^A-Za-z0-9]++/', '')\n\n"
"// '15015551000'\n"

#: docs/8.x/helpers.md:block 684 (paragraph)
msgid "The `replaceMatches` method also accepts a closure that will be invoked with each portion of the string matching the given pattern, allowing you to perform the replacement logic within the closure and return the replaced value:"
msgstr "`replaceMatches` 也接受一個閉包，每當有符合格式的部分時，就會將符合的部分傳給該閉包，讓我們能在閉包內處理取代邏輯，並在閉包內回傳要取代的值："

#: docs/8.x/helpers.md:block 685 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$replaced = Str::of('123')->replaceMatches('/\\d/', function ($match) {\n"
"    return '['.$match[0].']';\n"
"});\n\n"
"// '[1][2][3]'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$replaced = Str::of('123')->replaceMatches('/\\d/', function ($match) {\n"
"    return '['.$match[0].']';\n"
"});\n\n"
"// '[1][2][3]'\n"

#: docs/8.x/helpers.md:block 687 (header)
msgid "`rtrim` {.collection-method}"
msgstr "`rtrim` {.collection-method}"

#: docs/8.x/helpers.md:block 688 (paragraph)
msgid "The `rtrim` method trims the right side of the given string:"
msgstr "`rtrim` 方法修剪字串右邊的值："

#: docs/8.x/helpers.md:block 689 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('  Laravel  ')->rtrim();\n\n"
"// '  Laravel'\n\n"
"$string = Str::of('/Laravel/')->rtrim('/');\n\n"
"// '/Laravel'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('  Laravel  ')->rtrim();\n\n"
"// '  Laravel'\n\n"
"$string = Str::of('/Laravel/')->rtrim('/');\n\n"
"// '/Laravel'\n"

#: docs/8.x/helpers.md:block 691 (header)
msgid "`scan` {.collection-method}"
msgstr "`scan` {.collection-method}"

#: docs/8.x/helpers.md:block 692 (paragraph)
msgid "The `scan` method parses input from a string into a collection according to a format supported by the [`sscanf` PHP function](https://www.php.net/manual/en/function.sscanf.php):"
msgstr "`scan` 方法依照給定的格式來講輸入字串解析為 Collection。給定的格式為 [`sscanf` PHP 函式](https://www.php.net/manual/en/function.sscanf.php)所支援的："

#: docs/8.x/helpers.md:block 693 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$collection = Str::of('filename.jpg')->scan('%[^.].%s');\n\n"
"// collect(['filename', 'jpg'])\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$collection = Str::of('filename.jpg')->scan('%[^.].%s');\n\n"
"// collect(['filename', 'jpg'])\n"

#: docs/8.x/helpers.md:block 695 (header)
msgid "`singular` {.collection-method}"
msgstr "`singular` {.collection-method}"

#: docs/8.x/helpers.md:block 696 (paragraph)
msgid "The `singular` method converts a string to its singular form. This function currently only supports the English language:"
msgstr "`singular` 方法將複數單詞轉換為其單數型。該函式目前只支援英文："

#: docs/8.x/helpers.md:block 697 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$singular = Str::of('cars')->singular();\n\n"
"// car\n\n"
"$singular = Str::of('children')->singular();\n\n"
"// child\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$singular = Str::of('cars')->singular();\n\n"
"// car\n\n"
"$singular = Str::of('children')->singular();\n\n"
"// child\n"

#: docs/8.x/helpers.md:block 699 (header)
msgid "`slug` {.collection-method}"
msgstr "`slug` {.collection-method}"

#: docs/8.x/helpers.md:block 700 (paragraph)
msgid "The `slug` method generates a URL friendly \"slug\" from the given string:"
msgstr "`slug` 方法以給定字串產生適合在 URL 中使用的「Slug」格式："

#: docs/8.x/helpers.md:block 701 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$slug = Str::of('Laravel Framework')->slug('-');\n\n"
"// laravel-framework\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$slug = Str::of('Laravel Framework')->slug('-');\n\n"
"// laravel-framework\n"

#: docs/8.x/helpers.md:block 703 (header)
msgid "`snake` {.collection-method}"
msgstr "`snake` {.collection-method}"

#: docs/8.x/helpers.md:block 704 (paragraph)
msgid "The `snake` method converts the given string to `snake_case`:"
msgstr "`snake` 方法將給定字串轉為 `snake_case` —— 蛇型命名法的大小寫："

#: docs/8.x/helpers.md:block 705 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::of('fooBar')->snake();\n\n"
"// foo_bar\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::of('fooBar')->snake();\n\n"
"// foo_bar\n"

#: docs/8.x/helpers.md:block 707 (header)
msgid "`split` {.collection-method}"
msgstr "`split` {.collection-method}"

#: docs/8.x/helpers.md:block 708 (paragraph)
msgid "The `split` method splits a string into a collection using a regular expression:"
msgstr "`split` 方法使用正規表示式來將字串拆分為 Collection："

#: docs/8.x/helpers.md:block 709 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$segments = Str::of('one, two, three')->split('/[\\s,]+/');\n\n"
"// collect([\"one\", \"two\", \"three\"])\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$segments = Str::of('one, two, three')->split('/[\\s,]+/');\n\n"
"// collect([\"one\", \"two\", \"three\"])\n"

#: docs/8.x/helpers.md:block 711 (header)
msgid "`start` {.collection-method}"
msgstr "`start` {.collection-method}"

#: docs/8.x/helpers.md:block 712 (paragraph)
msgid "The `start` method adds a single instance of the given value to a string if it does not already start with that value:"
msgstr "`start` 方法會在給定字串不是以給定值起始時，在該字串前方加上這個值："

#: docs/8.x/helpers.md:block 713 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$adjusted = Str::of('this/string')->start('/');\n\n"
"// /this/string\n\n"
"$adjusted = Str::of('/this/string')->start('/');\n\n"
"// /this/string\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$adjusted = Str::of('this/string')->start('/');\n\n"
"// /this/string\n\n"
"$adjusted = Str::of('/this/string')->start('/');\n\n"
"// /this/string\n"

#: docs/8.x/helpers.md:block 715 (header)
msgid "`startsWith` {.collection-method}"
msgstr "`startsWith` {.collection-method}"

#: docs/8.x/helpers.md:block 716 (paragraph)
msgid "The `startsWith` method determines if the given string begins with the given value:"
msgstr "startsWith` 方法可判斷給定字串是否以給定值起始："

#: docs/8.x/helpers.md:block 717 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('This is my name')->startsWith('This');\n\n"
"// true\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('This is my name')->startsWith('This');\n\n"
"// true\n"

#: docs/8.x/helpers.md:block 719 (header)
msgid "`studly` {.collection-method}"
msgstr "`studly` {.collection-method}"

#: docs/8.x/helpers.md:block 720 (paragraph)
msgid "The `studly` method converts the given string to `StudlyCase`:"
msgstr "`studly` 方法將給定字串轉為 `StudlyCase` —— Studly 命名法的大小寫："

#: docs/8.x/helpers.md:block 721 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::of('foo_bar')->studly();\n\n"
"// FooBar\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::of('foo_bar')->studly();\n\n"
"// FooBar\n"

#: docs/8.x/helpers.md:block 723 (header)
msgid "`substr` {.collection-method}"
msgstr "`substr` {.collection-method}"

#: docs/8.x/helpers.md:block 724 (paragraph)
msgid "The `substr` method returns the portion of the string specified by the given start and length parameters:"
msgstr "`substr` 方法回傳字串中指定的起始位置開始指定長度的字串："

#: docs/8.x/helpers.md:block 725 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Laravel Framework')->substr(8);\n\n"
"// Framework\n\n"
"$string = Str::of('Laravel Framework')->substr(8, 5);\n\n"
"// Frame\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Laravel Framework')->substr(8);\n\n"
"// Framework\n\n"
"$string = Str::of('Laravel Framework')->substr(8, 5);\n\n"
"// Frame\n"

#: docs/8.x/helpers.md:block 727 (header)
msgid "`substrReplace` {.collection-method}"
msgstr "`substrReplace` {.collection-method}"

#: docs/8.x/helpers.md:block 728 (paragraph)
msgid "The `substrReplace` method replaces text within a portion of a string, starting at the position specified by the third argument and replacing the number of characters specified by the fourth argument. Passing `0` to the method's fourth argument will insert the string at the specified position without replacing any of the existing characters in the string:"
msgstr "`substrReplace` 方法在字串中取代其中一段文字，第二個引數指定起始位置，並以第三個引數來指定要取代的字元數。若第三個引數傳入 `0`，則會在指定位置插入字串，而不取代字串中現有的字元："

#: docs/8.x/helpers.md:block 729 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('1300')->substrReplace(':', 2);\n\n"
"// 13:\n\n"
"$string = Str::of('The Framework')->substrReplace(' Laravel', 3, 0);\n\n"
"// The Laravel Framework\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('1300')->substrReplace(':', 2);\n\n"
"// 13:\n\n"
"$string = Str::of('The Framework')->substrReplace(' Laravel', 3, 0);\n\n"
"// The Laravel Framework\n"

#: docs/8.x/helpers.md:block 731 (header)
msgid "`tap` {.collection-method}"
msgstr "`tap` {.collection-method}"

#: docs/8.x/helpers.md:block 732 (paragraph)
msgid "The `tap` method passes the string to the given closure, allowing you to examine and interact with the string while not affecting the string itself. The original string is returned by the `tap` method regardless of what is returned by the closure:"
msgstr "`tap` 方法將目前字串傳入給定的閉包內，讓我們可以在不影響目前字串的情況下檢視與處理該字串。無論該閉包回傳什麼，`tap` 都會回傳原始字串："

#: docs/8.x/helpers.md:block 733 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Laravel')\n"
"    ->append(' Framework')\n"
"    ->tap(function ($string) {\n"
"        dump('String after append: ' . $string);\n"
"    })\n"
"    ->upper();\n\n"
"// LARAVEL FRAMEWORK\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Laravel')\n"
"    ->append(' Framework')\n"
"    ->tap(function ($string) {\n"
"        dump('String after append: ' . $string);\n"
"    })\n"
"    ->upper();\n\n"
"// LARAVEL FRAMEWORK\n"

#: docs/8.x/helpers.md:block 735 (header)
msgid "`test` {.collection-method}"
msgstr "`test` {.collection-method}"

#: docs/8.x/helpers.md:block 736 (paragraph)
msgid "The `test` method determines if a string matches the given regular expression pattern:"
msgstr "`test` 方法判斷目前字串是否符合給定的正規表示式："

#: docs/8.x/helpers.md:block 737 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('Laravel Framework')->test('/Laravel/');\n\n"
"// true\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('Laravel Framework')->test('/Laravel/');\n\n"
"// true\n"

#: docs/8.x/helpers.md:block 739 (header)
msgid "`title` {.collection-method}"
msgstr "`title` {.collection-method}"

#: docs/8.x/helpers.md:block 740 (paragraph)
msgid "The `title` method converts the given string to `Title Case`:"
msgstr "`title` 方法將給定字串轉為 `Title Case` —— 標題用的大小寫："

#: docs/8.x/helpers.md:block 741 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::of('a nice title uses the correct case')->title();\n\n"
"// A Nice Title Uses The Correct Case\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::of('a nice title uses the correct case')->title();\n\n"
"// A Nice Title Uses The Correct Case\n"

#: docs/8.x/helpers.md:block 743 (header)
msgid "`trim` {.collection-method}"
msgstr "`trim` {.collection-method}"

#: docs/8.x/helpers.md:block 744 (paragraph)
msgid "The `trim` method trims the given string:"
msgstr "`trim` 方法修剪字串值："

#: docs/8.x/helpers.md:block 745 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('  Laravel  ')->trim();\n\n"
"// 'Laravel'\n\n"
"$string = Str::of('/Laravel/')->trim('/');\n\n"
"// 'Laravel'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('  Laravel  ')->trim();\n\n"
"// 'Laravel'\n\n"
"$string = Str::of('/Laravel/')->trim('/');\n\n"
"// 'Laravel'\n"

#: docs/8.x/helpers.md:block 747 (header)
msgid "`ucfirst` {.collection-method}"
msgstr "`ucfirst` {.collection-method}"

#: docs/8.x/helpers.md:block 748 (paragraph)
msgid "The `ucfirst` method returns the given string with the first character capitalized:"
msgstr "`ucfirst` 方法回傳給定字串第一個字元轉為大寫後的字串："

#: docs/8.x/helpers.md:block 749 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('foo bar')->ucfirst();\n\n"
"// Foo bar\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('foo bar')->ucfirst();\n\n"
"// Foo bar\n"

#: docs/8.x/helpers.md:block 751 (header)
msgid "`upper` {.collection-method}"
msgstr "`upper` {.collection-method}"

#: docs/8.x/helpers.md:block 752 (paragraph)
msgid "The `upper` method converts the given string to uppercase:"
msgstr "`upper` 方法將給定字串轉換為大寫："

#: docs/8.x/helpers.md:block 753 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$adjusted = Str::of('laravel')->upper();\n\n"
"// LARAVEL\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$adjusted = Str::of('laravel')->upper();\n\n"
"// LARAVEL\n"

#: docs/8.x/helpers.md:block 755 (header)
msgid "`when` {.collection-method}"
msgstr "`when` {.collection-method}"

#: docs/8.x/helpers.md:block 756 (paragraph)
msgid "The `when` method invokes the given closure if a given condition is `true`. The closure will receive the fluent string instance:"
msgstr "`when` 方法會在給定條件為 `true` 時叫用給定閉包。該閉包會收到 Fluent 字串實體："

#: docs/8.x/helpers.md:block 757 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Taylor')\n"
"                ->when(true, function ($string) {\n"
"                    return $string->append(' Otwell');\n"
"                });\n\n"
"// 'Taylor Otwell'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Taylor')\n"
"                ->when(true, function ($string) {\n"
"                    return $string->append(' Otwell');\n"
"                });\n\n"
"// 'Taylor Otwell'\n"

#: docs/8.x/helpers.md:block 758 (paragraph)
msgid "If necessary, you may pass another closure as the third parameter to the `when` method. This closure will execute if the condition parameter evaluates to `false`."
msgstr "若有需要，也可以傳入另一個閉包作為第三個引數給 `when` 方法。第三個引數上的閉包會在條件參數為 `false` 時被執行。"

#: docs/8.x/helpers.md:block 760 (header)
msgid "`whenContains` {.collection-method}"
msgstr "`whenContains` {.collection-method}"

#: docs/8.x/helpers.md:block 761 (paragraph)
msgid "The `whenContains` method invokes the given closure if the string contains the given value. The closure will receive the fluent string instance:"
msgstr "`whenContains` 方法會在字串包含給定值時叫用給定的閉包。該閉包會收到 Fluent 字串實體："

#: docs/8.x/helpers.md:block 762 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('tony stark')\n"
"            ->whenContains('tony', function ($string) {\n"
"                return $string->title();\n"
"            });\n\n"
"// 'Tony Stark'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('tony stark')\n"
"            ->whenContains('tony', function ($string) {\n"
"                return $string->title();\n"
"            });\n\n"
"// 'Tony Stark'\n"

#: docs/8.x/helpers.md:block 763 (paragraph)
msgid "If necessary, you may pass another closure as the third parameter to the `when` method. This closure will execute if the string does not contain the given value."
msgstr "若有需要，也可以傳入另一個閉包作為第三個引數給 `whenContains` 方法。當字串內未包含給定值時會執行第三個引數上的閉包。"

#: docs/8.x/helpers.md:block 765 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('tony stark')\n"
"            ->whenContains(['tony', 'hulk'], function ($string) {\n"
"                return $string->title();\n"
"            });\n\n"
"// Tony Stark\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('tony stark')\n"
"            ->whenContains(['tony', 'hulk'], function ($string) {\n"
"                return $string->title();\n"
"            });\n\n"
"// Tony Stark\n"

#: docs/8.x/helpers.md:block 767 (header)
msgid "`whenContainsAll` {.collection-method}"
msgstr "`whenContainsAll` {.collection-method}"

#: docs/8.x/helpers.md:block 768 (paragraph)
msgid "The `whenContainsAll` method invokes the given closure if the string contains all of the given sub-strings. The closure will receive the fluent string instance:"
msgstr "`whenContainsAll` 方法會在字串包含所有給定的子字串時叫用給定的閉包。該閉包會收到 Fluent 字串實體："

#: docs/8.x/helpers.md:block 769 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('tony stark')\n"
"                ->whenContainsAll(['tony', 'stark'], function ($string) {\n"
"                    return $string->title();\n"
"                });\n\n"
"// 'Tony Stark'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('tony stark')\n"
"                ->whenContainsAll(['tony', 'stark'], function ($string) {\n"
"                    return $string->title();\n"
"                });\n\n"
"// 'Tony Stark'\n"

#: docs/8.x/helpers.md:block 772 (header)
msgid "`whenEmpty` {.collection-method}"
msgstr "`whenEmpty` {.collection-method}"

#: docs/8.x/helpers.md:block 773 (paragraph)
msgid "The `whenEmpty` method invokes the given closure if the string is empty. If the closure returns a value, that value will also be returned by the `whenEmpty` method. If the closure does not return a value, the fluent string instance will be returned:"
msgstr "`whenEmpty` 方法會在目前字串為空時叫用給定的閉包。若該閉包有回傳值，則 `whenEmpty` 方法會回傳這個值。若該閉包無回傳值，則會回傳 Fluent 字串實體："

#: docs/8.x/helpers.md:block 774 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('  ')->whenEmpty(function ($string) {\n"
"    return $string->trim()->prepend('Laravel');\n"
"});\n\n"
"// 'Laravel'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('  ')->whenEmpty(function ($string) {\n"
"    return $string->trim()->prepend('Laravel');\n"
"});\n\n"
"// 'Laravel'\n"

#: docs/8.x/helpers.md:block 776 (header)
msgid "`whenNotEmpty` {.collection-method}"
msgstr "`whenNotEmpty` {.collection-method}"

#: docs/8.x/helpers.md:block 777 (paragraph)
msgid "The `whenNotEmpty` method invokes the given closure if the string is not empty. If the closure returns a value, that value will also be returned by the `whenNotEmpty` method. If the closure does not return a value, the fluent string instance will be returned:"
msgstr "`whenNotEmpty` 方法會在目前字串不為空時叫用給定的閉包。若該閉包有回傳值，則 `whenNotEmpty` 方法會回傳這個值。若該閉包無回傳值，則會回傳 Fluent 字串實體："

#: docs/8.x/helpers.md:block 778 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Framework')->whenNotEmpty(function ($string) {\n"
"    return $string->prepend('Laravel ');\n"
"});\n\n"
"// 'Laravel Framework'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Framework')->whenNotEmpty(function ($string) {\n"
"    return $string->prepend('Laravel ');\n"
"});\n\n"
"// 'Laravel Framework'\n"

#: docs/8.x/helpers.md:block 780 (header)
msgid "`whenStartsWith` {.collection-method}"
msgstr "`whenStartsWith` {.collection-method}"

#: docs/8.x/helpers.md:block 781 (paragraph)
msgid "The `whenStartsWith` method invokes the given closure if the string starts with the given sub-string. The closure will receive the fluent string instance:"
msgstr "`whenStartsWith` 方法會在字串以給定子字串開頭時叫用給定的閉包。該閉包會收到 Fluent 字串實體："

#: docs/8.x/helpers.md:block 782 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('disney world')->whenStartsWith('disney', function ($string) {\n"
"    return $string->title();\n"
"});\n\n"
"// 'Disney World'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('disney world')->whenStartsWith('disney', function ($string) {\n"
"    return $string->title();\n"
"});\n\n"
"// 'Disney World'\n"

#: docs/8.x/helpers.md:block 784 (header)
msgid "`whenEndsWith` {.collection-method}"
msgstr "`whenEndsWith` {.collection-method}"

#: docs/8.x/helpers.md:block 785 (paragraph)
msgid "The `whenEndsWith` method invokes the given closure if the string ends with the given sub-string. The closure will receive the fluent string instance:"
msgstr "`whenEndsWith` 方法會在字串以給定子字串結尾時叫用給定的閉包。該閉包會收到 Fluent 字串實體："

#: docs/8.x/helpers.md:block 786 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('disney world')->whenEndsWith('world', function ($string) {\n"
"    return $string->title();\n"
"});\n\n"
"// 'Disney World'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('disney world')->whenEndsWith('world', function ($string) {\n"
"    return $string->title();\n"
"});\n\n"
"// 'Disney World'\n"

#: docs/8.x/helpers.md:block 788 (header)
msgid "`whenExactly` {.collection-method}"
msgstr "`whenExactly` {.collection-method}"

#: docs/8.x/helpers.md:block 789 (paragraph)
msgid "The `whenExactly` method invokes the given closure if the string exactly matches the given string. The closure will receive the fluent string instance:"
msgstr "`whenExactly` 方法會在目前字串符合給定字串時叫用給定的閉包。該閉包會收到 Fluent 字串實體："

#: docs/8.x/helpers.md:block 790 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('laravel')->whenExactly('laravel', function ($string) {\n"
"    return $string->title();\n"
"});\n\n"
"// 'Laravel'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('laravel')->whenExactly('laravel', function ($string) {\n"
"    return $string->title();\n"
"});\n\n"
"// 'Laravel'\n"

#: docs/8.x/helpers.md:block 792 (header)
msgid "`whenIs` {.collection-method}"
msgstr "`whenIs` {.collection-method}"

#: docs/8.x/helpers.md:block 793 (paragraph)
msgid "The `whenIs` method invokes the given closure if the string matches a given pattern. Asterisks may be used as wildcard values. The closure will receive the fluent string instance:"
msgstr "`whenIs` 方法會在目前字串符合給定格式時叫用給定的閉包。可使用星號作為萬用字元。該閉包會收到 Fluent 字串實體："

#: docs/8.x/helpers.md:block 794 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('foo/bar')->whenIs('foo/*', function ($string) {\n"
"    return $string->append('/baz');\n"
"});\n\n"
"// 'foo/bar/baz'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('foo/bar')->whenIs('foo/*', function ($string) {\n"
"    return $string->append('/baz');\n"
"});\n\n"
"// 'foo/bar/baz'\n"

#: docs/8.x/helpers.md:block 796 (header)
msgid "`whenIsAscii` {.collection-method}"
msgstr "`whenIsAscii` {.collection-method}"

#: docs/8.x/helpers.md:block 797 (paragraph)
msgid "The `whenIsAscii` method invokes the given closure if the string is 7 bit ASCII. The closure will receive the fluent string instance:"
msgstr "`whenIsAscii` 方法會在目前字串為 7 位元 ASCII 時叫用給定的閉包。該閉包會收到 Fluent 字串實體："

#: docs/8.x/helpers.md:block 798 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('foo/bar')->whenIsAscii('laravel', function ($string) {\n"
"    return $string->title();\n"
"});\n\n"
"// 'Laravel'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('foo/bar')->whenIsAscii('laravel', function ($string) {\n"
"    return $string->title();\n"
"});\n\n"
"// 'Laravel'\n"

#: docs/8.x/helpers.md:block 800 (header)
msgid "`whenIsUuid` {.collection-method}"
msgstr "`whenIsUuid` {.collection-method}"

#: docs/8.x/helpers.md:block 801 (paragraph)
msgid "The `whenIsUuid` method invokes the given closure if the string is a valid UUID. The closure will receive the fluent string instance:"
msgstr "`whenIsUuis` 方法會在目前字串為有效 UUID 時叫用給定的閉包。該閉包會收到 Fluent 字串實體："

#: docs/8.x/helpers.md:block 802 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('foo/bar')->whenIsUuid('a0a2a2d2-0b87-4a18-83f2-2529882be2de', function ($string) {\n"
"    return $string->substr(0, 8);\n"
"});\n\n"
"// 'a0a2a2d2'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('foo/bar')->whenIsUuid('a0a2a2d2-0b87-4a18-83f2-2529882be2de', function ($string) {\n"
"    return $string->substr(0, 8);\n"
"});\n\n"
"// 'a0a2a2d2'\n"

#: docs/8.x/helpers.md:block 804 (header)
msgid "`whenTest` {.collection-method}"
msgstr "`whenTest` {.collection-method}"

#: docs/8.x/helpers.md:block 805 (paragraph)
msgid "The `whenTest` method invokes the given closure if the string matches the given regular expression. The closure will receive the fluent string instance:"
msgstr "`whenTest` 方法會在字串符合給定的正規表示式時叫用給定的閉包。該閉包會收到 Fluent 字串實體："

#: docs/8.x/helpers.md:block 806 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('laravel framework')->whenTest('/laravel/', function ($string) {\n"
"    return $string->title();\n"
"});\n\n"
"// 'Laravel Framework'\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('laravel framework')->whenTest('/laravel/', function ($string) {\n"
"    return $string->title();\n"
"});\n\n"
"// 'Laravel Framework'\n"

#: docs/8.x/helpers.md:block 808 (header)
msgid "`wordCount` {.collection-method}"
msgstr "`wordCount` {.collection-method}"

#: docs/8.x/helpers.md:block 809 (paragraph)
msgid "The `wordCount` method returns the number of words that a string contains:"
msgstr "`wordCount` 方法回傳該字串中所包含的單詞數："

#: docs/8.x/helpers.md:block 810 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"Str::of('Hello, world!')->wordCount(); // 2\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"Str::of('Hello, world!')->wordCount(); // 2\n"

#: docs/8.x/helpers.md:block 812 (header)
msgid "`words` {.collection-method}"
msgstr "`words` {.collection-method}"

#: docs/8.x/helpers.md:block 813 (paragraph)
msgid "The `words` method limits the number of words in a string. If necessary, you may specify an additional string that will be appended to the truncated string:"
msgstr "`words` 方法可限制字串中的單詞數。若有需要，可以指定一個額外的字串來附加到截斷的字串上："

#: docs/8.x/helpers.md:block 814 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Perfectly balanced, as all things should be.')->words(3, ' >>>');\n\n"
"// Perfectly balanced, as >>>\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Perfectly balanced, as all things should be.')->words(3, ' >>>');\n\n"
"// Perfectly balanced, as >>>\n"

#: docs/8.x/helpers.md:block 818 (header)
msgid "`action()` {.collection-method}"
msgstr "`action()` {.collection-method}"

#: docs/8.x/helpers.md:block 819 (paragraph)
msgid "The `action` function generates a URL for the given controller action:"
msgstr "`action` 方法可為給定的 Controller 動作產生 URL："

#: docs/8.x/helpers.md:block 820 (code)
msgid "use App\\Http\\Controllers\\HomeController;\n\n"
"$url = action([HomeController::class, 'index']);\n"
msgstr "use App\\Http\\Controllers\\HomeController;\n\n"
"$url = action([HomeController::class, 'index']);\n"

#: docs/8.x/helpers.md:block 821 (paragraph)
msgid "If the method accepts route parameters, you may pass them as the second argument to the method:"
msgstr "若該方法接受 Route 參數，請將這些 Route 參數作為第二個引數傳給該方法："

#: docs/8.x/helpers.md:block 822 (code)
msgid "$url = action([UserController::class, 'profile'], ['id' => 1]);\n"
msgstr "$url = action([UserController::class, 'profile'], ['id' => 1]);\n"

#: docs/8.x/helpers.md:block 824 (header)
msgid "`asset()` {.collection-method}"
msgstr "`asset()` {.collection-method}"

#: docs/8.x/helpers.md:block 825 (paragraph)
msgid "The `asset` function generates a URL for an asset using the current scheme of the request (HTTP or HTTPS):"
msgstr "`asset` 方法使用目前 Request 的 Scheme (HTTP 或 HTTPS) 來產生素材 URL："

#: docs/8.x/helpers.md:block 826 (code)
msgid "$url = asset('img/photo.jpg');\n"
msgstr "$url = asset('img/photo.jpg');\n"

#: docs/8.x/helpers.md:block 827 (paragraph)
msgid "You can configure the asset URL host by setting the `ASSET_URL` variable in your `.env` file. This can be useful if you host your assets on an external service like Amazon S3 or another CDN:"
msgstr "可以在 `.env` 檔案中設定 `ASSET_URL` 變數來設定素材 URL 的主機名稱。若你將素材放在如 Amazon S3 或其他 CDN 之類的外部服務上，就很適合這樣設定："

#: docs/8.x/helpers.md:block 828 (code)
msgid "// ASSET_URL=http://example.com/assets\n\n"
"$url = asset('img/photo.jpg'); // http://example.com/assets/img/photo.jpg\n"
msgstr "// ASSET_URL=http://example.com/assets\n\n"
"$url = asset('img/photo.jpg'); // http://example.com/assets/img/photo.jpg\n"

#: docs/8.x/helpers.md:block 830 (header)
msgid "`route()` {.collection-method}"
msgstr "`route()` {.collection-method}"

#: docs/8.x/helpers.md:block 831 (paragraph)
msgid "The `route` function generates a URL for a given [named route](/docs/{{version}}/routing#named-routes):"
msgstr "`route` 函式產生給定[命名 Route](/docs/{{version}}/routing#named-routes) 的 URL："

#: docs/8.x/helpers.md:block 832 (code)
msgid "$url = route('route.name');\n"
msgstr "$url = route('route.name');\n"

#: docs/8.x/helpers.md:block 833 (paragraph)
msgid "If the route accepts parameters, you may pass them as the second argument to the function:"
msgstr "若該 Route 接受參數，請將這些參數作為第二個引數傳給該方法："

#: docs/8.x/helpers.md:block 834 (code)
msgid "$url = route('route.name', ['id' => 1]);\n"
msgstr "$url = route('route.name', ['id' => 1]);\n"

#: docs/8.x/helpers.md:block 835 (paragraph)
msgid "By default, the `route` function generates an absolute URL. If you wish to generate a relative URL, you may pass `false` as the third argument to the function:"
msgstr "預設情況下，`route` 函式回傳絕對 URL。若想產生相對 URL，請傳入 `false` 作為第三個引數給該函式："

#: docs/8.x/helpers.md:block 836 (code)
msgid "$url = route('route.name', ['id' => 1], false);\n"
msgstr "$url = route('route.name', ['id' => 1], false);\n"

#: docs/8.x/helpers.md:block 838 (header)
msgid "`secure_asset()` {.collection-method}"
msgstr "`secure_asset()` {.collection-method}"

#: docs/8.x/helpers.md:block 839 (paragraph)
msgid "The `secure_asset` function generates a URL for an asset using HTTPS:"
msgstr "`secure_asset` 函式使用 HTTPS 為素材產生 URL："

#: docs/8.x/helpers.md:block 840 (code)
msgid "$url = secure_asset('img/photo.jpg');\n"
msgstr "$url = secure_asset('img/photo.jpg');\n"

#: docs/8.x/helpers.md:block 842 (header)
msgid "`secure_url()` {.collection-method}"
msgstr "`secure_url()` {.collection-method}"

#: docs/8.x/helpers.md:block 843 (paragraph)
msgid "The `secure_url` function generates a fully qualified HTTPS URL to the given path. Additional URL segments may be passed in the function's second argument:"
msgstr "`secure_url` 函式產生給定路徑上的完整名稱 HTTPS URL。可以傳入額外的 URL 片段給該函式的第二個引數："

#: docs/8.x/helpers.md:block 844 (code)
msgid "$url = secure_url('user/profile');\n\n"
"$url = secure_url('user/profile', [1]);\n"
msgstr "$url = secure_url('user/profile');\n\n"
"$url = secure_url('user/profile', [1]);\n"

#: docs/8.x/helpers.md:block 846 (header)
msgid "`url()` {.collection-method}"
msgstr "`url()` {.collection-method}"

#: docs/8.x/helpers.md:block 847 (paragraph)
msgid "The `url` function generates a fully qualified URL to the given path:"
msgstr "`url` 函式可以產生給定路徑上的完整名稱 URL："

#: docs/8.x/helpers.md:block 848 (code)
msgid "$url = url('user/profile');\n\n"
"$url = url('user/profile', [1]);\n"
msgstr "$url = url('user/profile');\n\n"
"$url = url('user/profile', [1]);\n"

#: docs/8.x/helpers.md:block 849 (paragraph)
msgid "If no path is provided, an `Illuminate\\Routing\\UrlGenerator` instance is returned:"
msgstr "若未提供路徑，則會回傳 `Illuminate\\Routing\\UrlGenerator` 實體："

#: docs/8.x/helpers.md:block 850 (code)
msgid "$current = url()->current();\n\n"
"$full = url()->full();\n\n"
"$previous = url()->previous();\n"
msgstr "$current = url()->current();\n\n"
"$full = url()->full();\n\n"
"$previous = url()->previous();\n"

#: docs/8.x/helpers.md:block 854 (header)
msgid "`abort()` {.collection-method}"
msgstr "`abort()` {.collection-method}"

#: docs/8.x/helpers.md:block 855 (paragraph)
msgid "The `abort` function throws [an HTTP exception](/docs/{{version}}/errors#http-exceptions) which will be rendered by the [exception handler](/docs/{{version}}/errors#the-exception-handler):"
msgstr "`abort` 函式會擲回 [HTTP Exception](/docs/{{version}}/errors#http-exceptions)。HTTP Exception 會被 [^[Exception Handler](例外處理常式)](/docs/{{version}}/errors#the-exception-handler) 轉譯："

#: docs/8.x/helpers.md:block 856 (code)
msgid "abort(403);\n"
msgstr "abort(403);\n"

#: docs/8.x/helpers.md:block 857 (paragraph)
msgid "You may also provide the exception's message and custom HTTP response headers that should be sent to the browser:"
msgstr "也可以提供 Exception 訊息與要傳送給瀏覽器的自訂 HTTP Response 標頭："

#: docs/8.x/helpers.md:block 858 (code)
msgid "abort(403, 'Unauthorized.', $headers);\n"
msgstr "abort(403, 'Unauthorized.', $headers);\n"

#: docs/8.x/helpers.md:block 860 (header)
msgid "`abort_if()` {.collection-method}"
msgstr "`abort_if()` {.collection-method}"

#: docs/8.x/helpers.md:block 861 (paragraph)
msgid "The `abort_if` function throws an HTTP exception if a given boolean expression evaluates to `true`:"
msgstr "`abort_if` 函式會在給定布林運算式取值為 `true` 時擲回一個 HTTP Exception："

#: docs/8.x/helpers.md:block 862 (code)
msgid "abort_if(! Auth::user()->isAdmin(), 403);\n"
msgstr "abort_if(! Auth::user()->isAdmin(), 403);\n"

#: docs/8.x/helpers.md:block 863 (paragraph)
msgid "Like the `abort` method, you may also provide the exception's response text as the third argument and an array of custom response headers as the fourth argument to the function."
msgstr "與 `abort` 方法類似，我們也可以在第三個引數上提供 Exception 的 Response 文字，並在第四個引數上提供一組自訂 Response 標頭陣列。"

#: docs/8.x/helpers.md:block 865 (header)
msgid "`abort_unless()` {.collection-method}"
msgstr "`abort_unless()` {.collection-method}"

#: docs/8.x/helpers.md:block 866 (paragraph)
msgid "The `abort_unless` function throws an HTTP exception if a given boolean expression evaluates to `false`:"
msgstr "`abort_unless` 函式會在給定布林運算式取值為 `false` 時擲回一個 HTTP Exception："

#: docs/8.x/helpers.md:block 867 (code)
msgid "abort_unless(Auth::user()->isAdmin(), 403);\n"
msgstr "abort_unless(Auth::user()->isAdmin(), 403);\n"

#: docs/8.x/helpers.md:block 870 (header)
msgid "`app()` {.collection-method}"
msgstr "`app()` {.collection-method}"

#: docs/8.x/helpers.md:block 871 (paragraph)
msgid "The `app` function returns the [service container](/docs/{{version}}/container) instance:"
msgstr "`app` 函式回傳 [Service Container](/docs/{{version}}/container) 實體："

#: docs/8.x/helpers.md:block 872 (code)
msgid "$container = app();\n"
msgstr "$container = app();\n"

#: docs/8.x/helpers.md:block 873 (paragraph)
msgid "You may pass a class or interface name to resolve it from the container:"
msgstr "也可以傳入一個類別或介面名稱來用 Container 解析："

#: docs/8.x/helpers.md:block 874 (code)
msgid "$api = app('HelpSpot\\API');\n"
msgstr "$api = app('HelpSpot\\API');\n"

#: docs/8.x/helpers.md:block 876 (header)
msgid "`auth()` {.collection-method}"
msgstr "`auth()` {.collection-method}"

#: docs/8.x/helpers.md:block 877 (paragraph)
msgid "The `auth` function returns an [authenticator](/docs/{{version}}/authentication) instance. You may use it as an alternative to the `Auth` facade:"
msgstr "`auth` 函式回傳 [Authenticator](/docs/{{version}}/authentication) 的實體。可以使用 `auth` 函式來作為 `Auth` Facade 的替代："

#: docs/8.x/helpers.md:block 878 (code)
msgid "$user = auth()->user();\n"
msgstr "$user = auth()->user();\n"

#: docs/8.x/helpers.md:block 879 (paragraph)
msgid "If needed, you may specify which guard instance you would like to access:"
msgstr "若有需要，可以指定要存取的 Guard 實體："

#: docs/8.x/helpers.md:block 880 (code)
msgid "$user = auth('admin')->user();\n"
msgstr "$user = auth('admin')->user();\n"

#: docs/8.x/helpers.md:block 882 (header)
msgid "`back()` {.collection-method}"
msgstr "`back()` {.collection-method}"

#: docs/8.x/helpers.md:block 883 (paragraph)
msgid "The `back` function generates a [redirect HTTP response](/docs/{{version}}/responses#redirects) to the user's previous location:"
msgstr "`back` 函式產生一個指向使用者上一個瀏覽位置的[重新導向 HTTP Response]："

#: docs/8.x/helpers.md:block 884 (code)
msgid "return back($status = 302, $headers = [], $fallback = '/');\n\n"
"return back();\n"
msgstr "return back($status = 302, $headers = [], $fallback = '/');\n\n"
"return back();\n"

#: docs/8.x/helpers.md:block 886 (header)
msgid "`bcrypt()` {.collection-method}"
msgstr "`bcrypt()` {.collection-method}"

#: docs/8.x/helpers.md:block 887 (paragraph)
msgid "The `bcrypt` function [hashes](/docs/{{version}}/hashing) the given value using Bcrypt. You may use this function as an alternative to the `Hash` facade:"
msgstr "`bcrypt` 方法使用 Bcrypt 來[雜湊](/docs/{{version}}/hashing)給定的值。也可以使用這個函式來作為 `Hash` Facade 的替代："

#: docs/8.x/helpers.md:block 888 (code)
msgid "$password = bcrypt('my-secret-password');\n"
msgstr "$password = bcrypt('my-secret-password');\n"

#: docs/8.x/helpers.md:block 890 (header)
msgid "`blank()` {.collection-method}"
msgstr "`blank()` {.collection-method}"

#: docs/8.x/helpers.md:block 891 (paragraph)
msgid "The `blank` function determines whether the given value is \"blank\":"
msgstr "`blank` 函式判斷給定值是否為「^[空白](Blank)」："

#: docs/8.x/helpers.md:block 892 (code)
msgid "blank('');\n"
"blank('   ');\n"
"blank(null);\n"
"blank(collect());\n\n"
"// true\n\n"
"blank(0);\n"
"blank(true);\n"
"blank(false);\n\n"
"// false\n"
msgstr "blank('');\n"
"blank('   ');\n"
"blank(null);\n"
"blank(collect());\n\n"
"// true\n\n"
"blank(0);\n"
"blank(true);\n"
"blank(false);\n\n"
"// false\n"

#: docs/8.x/helpers.md:block 893 (paragraph)
msgid "For the inverse of `blank`, see the [`filled`](#method-filled) method."
msgstr "請參考 [`filled`](#method-filled) 方法以瞭解與 `blank` 相反的方法。"

#: docs/8.x/helpers.md:block 895 (header)
msgid "`broadcast()` {.collection-method}"
msgstr "`broadcast()` {.collection-method}"

#: docs/8.x/helpers.md:block 896 (paragraph)
msgid "The `broadcast` function [broadcasts](/docs/{{version}}/broadcasting) the given [event](/docs/{{version}}/events) to its listeners:"
msgstr "`broadcast` 函式會[廣播](/docs/{{version}}/broadcasting)給定的 [Event](/docs/{{version}}/events) 給其 Listener："

#: docs/8.x/helpers.md:block 897 (code)
msgid "broadcast(new UserRegistered($user));\n\n"
"broadcast(new UserRegistered($user))->toOthers();\n"
msgstr "broadcast(new UserRegistered($user));\n\n"
"broadcast(new UserRegistered($user))->toOthers();\n"

#: docs/8.x/helpers.md:block 899 (header)
msgid "`cache()` {.collection-method}"
msgstr "`cache()` {.collection-method}"

#: docs/8.x/helpers.md:block 900 (paragraph)
msgid "The `cache` function may be used to get values from the [cache](/docs/{{version}}/cache). If the given key does not exist in the cache, an optional default value will be returned:"
msgstr "`cache` 函式可用來從[快取](/docs/{{version}}/cache)中取值。若快取中沒有給定的索引鍵，則會回傳可選的預設值："

#: docs/8.x/helpers.md:block 901 (code)
msgid "$value = cache('key');\n\n"
"$value = cache('key', 'default');\n"
msgstr "$value = cache('key');\n\n"
"$value = cache('key', 'default');\n"

#: docs/8.x/helpers.md:block 902 (paragraph)
msgid "You may add items to the cache by passing an array of key / value pairs to the function. You should also pass the number of seconds or duration the cached value should be considered valid:"
msgstr "可以傳入一組索引鍵 / 值配對的陣列給該函式來將項目加入快取中。也請傳入單位為秒的快取值有效期間："

#: docs/8.x/helpers.md:block 903 (code)
msgid "cache(['key' => 'value'], 300);\n\n"
"cache(['key' => 'value'], now()->addSeconds(10));\n"
msgstr "cache(['key' => 'value'], 300);\n\n"
"cache(['key' => 'value'], now()->addSeconds(10));\n"

#: docs/8.x/helpers.md:block 905 (header)
msgid "`class_uses_recursive()` {.collection-method}"
msgstr "`class_uses_recursive()` {.collection-method}"

#: docs/8.x/helpers.md:block 906 (paragraph)
msgid "The `class_uses_recursive` function returns all traits used by a class, including traits used by all of its parent classes:"
msgstr "`class_uses_recursive` 函式回傳某個類別使用的所有 Trait，包含其所有^[上層](Parent)類別使用的 Trait："

#: docs/8.x/helpers.md:block 907 (code)
msgid "$traits = class_uses_recursive(App\\Models\\User::class);\n"
msgstr "$traits = class_uses_recursive(App\\Models\\User::class);\n"

#: docs/8.x/helpers.md:block 909 (header)
msgid "`collect()` {.collection-method}"
msgstr "`collect()` {.collection-method}"

#: docs/8.x/helpers.md:block 910 (paragraph)
msgid "The `collect` function creates a [collection](/docs/{{version}}/collections) instance from the given value:"
msgstr "`collect` 函式使用給定值來建立一個 [Collection](/docs/{{version}}/collections) 實體："

#: docs/8.x/helpers.md:block 911 (code)
msgid "$collection = collect(['taylor', 'abigail']);\n"
msgstr "$collection = collect(['taylor', 'abigail']);\n"

#: docs/8.x/helpers.md:block 913 (header)
msgid "`config()` {.collection-method}"
msgstr "`config()` {.collection-method}"

#: docs/8.x/helpers.md:block 914 (paragraph)
msgid "The `config` function gets the value of a [configuration](/docs/{{version}}/configuration) variable. The configuration values may be accessed using \"dot\" syntax, which includes the name of the file and the option you wish to access. A default value may be specified and is returned if the configuration option does not exist:"
msgstr "`config` 函式可取得[組態設定](/docs/{{version}}/configuration)變數中的值。組態設定值可以通過「點 (.)」語法來存取，即包含設定檔名稱與欲存取的選項名。也可以指定設定選項不存在時要回傳的預設值："

#: docs/8.x/helpers.md:block 915 (code)
msgid "$value = config('app.timezone');\n\n"
"$value = config('app.timezone', $default);\n"
msgstr "$value = config('app.timezone');\n\n"
"$value = config('app.timezone', $default);\n"

#: docs/8.x/helpers.md:block 916 (paragraph)
msgid "You may set configuration variables at runtime by passing an array of key / value pairs. However, note that this function only affects the configuration value for the current request and does not update your actual configuration values:"
msgstr "也可以在執行階段傳入一組索引鍵 / 值配對的陣列來設定組態設定值。不過，請注意，該函式只會影響目前 Request 的設定值，並不會實際更新組態設定："

#: docs/8.x/helpers.md:block 917 (code)
msgid "config(['app.debug' => true]);\n"
msgstr "config(['app.debug' => true]);\n"

#: docs/8.x/helpers.md:block 919 (header)
msgid "`cookie()` {.collection-method}"
msgstr "`cookie()` {.collection-method}"

#: docs/8.x/helpers.md:block 920 (paragraph)
msgid "The `cookie` function creates a new [cookie](/docs/{{version}}/requests#cookies) instance:"
msgstr "`cookie` 函式建立一個新的 [Cookie](/docs/{{version}}/requests#cookies) 實體："

#: docs/8.x/helpers.md:block 921 (code)
msgid "$cookie = cookie('name', 'value', $minutes);\n"
msgstr "$cookie = cookie('name', 'value', $minutes);\n"

#: docs/8.x/helpers.md:block 923 (header)
msgid "`csrf_field()` {.collection-method}"
msgstr "`csrf_field()` {.collection-method}"

#: docs/8.x/helpers.md:block 924 (paragraph)
msgid "The `csrf_field` function generates an HTML `hidden` input field containing the value of the CSRF token. For example, using [Blade syntax](/docs/{{version}}/blade):"
msgstr "`csrf_field` 函式產生一個包含 CSRF Token 的 HTML `hidden` 輸入欄位。舉例來說，在 [Blade 語法](/docs/{{version}}/blade)中可這樣使用："

#: docs/8.x/helpers.md:block 925 (code)
msgid "{{ csrf_field() }}\n"
msgstr "{{ csrf_field() }}\n"

#: docs/8.x/helpers.md:block 927 (header)
msgid "`csrf_token()` {.collection-method}"
msgstr "`csrf_token()` {.collection-method}"

#: docs/8.x/helpers.md:block 928 (paragraph)
msgid "The `csrf_token` function retrieves the value of the current CSRF token:"
msgstr "`csrf_token` 函式可取得目前 CSRF Token 的值："

#: docs/8.x/helpers.md:block 929 (code)
msgid "$token = csrf_token();\n"
msgstr "$token = csrf_token();\n"

#: docs/8.x/helpers.md:block 931 (header)
msgid "`dd()` {.collection-method}"
msgstr "`dd()` {.collection-method}"

#: docs/8.x/helpers.md:block 932 (paragraph)
msgid "The `dd` function dumps the given variables and ends execution of the script:"
msgstr "`dd` 函式可傾印給定變數，並結束目前的指令碼執行："

#: docs/8.x/helpers.md:block 933 (code)
msgid "dd($value);\n\n"
"dd($value1, $value2, $value3, ...);\n"
msgstr "dd($value);\n\n"
"dd($value1, $value2, $value3, ...);\n"

#: docs/8.x/helpers.md:block 934 (paragraph)
msgid "If you do not want to halt the execution of your script, use the [`dump`](#method-dump) function instead."
msgstr "若不想結束目前的指令碼執行，請改為使用 [`dump`](#method-dump) 方法。"

#: docs/8.x/helpers.md:block 936 (header)
msgid "`dispatch()` {.collection-method}"
msgstr "`dispatch()` {.collection-method}"

#: docs/8.x/helpers.md:block 937 (paragraph)
msgid "The `dispatch` function pushes the given [job](/docs/{{version}}/queues#creating-jobs) onto the Laravel [job queue](/docs/{{version}}/queues):"
msgstr "`dispatch` 方法將給定 [Job](/docs/{{version}}/queues#creating-jobs) 推入 Laravel 的 [Job 佇列](/docs/{{version}}/queues) 中："

#: docs/8.x/helpers.md:block 938 (code)
msgid "dispatch(new App\\Jobs\\SendEmails);\n"
msgstr "dispatch(new App\\Jobs\\SendEmails);\n"

#: docs/8.x/helpers.md:block 940 (header)
msgid "`dump()` {.collection-method}"
msgstr "`dump()` {.collection-method}"

#: docs/8.x/helpers.md:block 941 (paragraph)
msgid "The `dump` function dumps the given variables:"
msgstr "`dump` 函式傾印給定的變數："

#: docs/8.x/helpers.md:block 942 (code)
msgid "dump($value);\n\n"
"dump($value1, $value2, $value3, ...);\n"
msgstr "dump($value);\n\n"
"dump($value1, $value2, $value3, ...);\n"

#: docs/8.x/helpers.md:block 943 (paragraph)
msgid "If you want to stop executing the script after dumping the variables, use the [`dd`](#method-dd) function instead."
msgstr "若想在傾印變數後停止執行指令碼，請使用 [`dd`](#method-dd) 函式來代替。"

#: docs/8.x/helpers.md:block 945 (header)
msgid "`env()` {.collection-method}"
msgstr "`env()` {.collection-method}"

#: docs/8.x/helpers.md:block 946 (paragraph)
msgid "The `env` function retrieves the value of an [environment variable](/docs/{{version}}/configuration#environment-configuration) or returns a default value:"
msgstr "`env` 函式可取得[環境變數](/docs/{{version}}/configuration#environment-configuration)的值，或是回傳預設值："

#: docs/8.x/helpers.md:block 947 (code)
msgid "$env = env('APP_ENV');\n\n"
"$env = env('APP_ENV', 'production');\n"
msgstr "$env = env('APP_ENV');\n\n"
"$env = env('APP_ENV', 'production');\n"

#: docs/8.x/helpers.md:block 948 (quote)
msgid "{note} If you execute the `config:cache` command during your deployment process, you should be sure that you are only calling the `env` function from within your configuration files. Once the configuration has been cached, the `.env` file will not be loaded and all calls to the `env` function will return `null`."
msgstr "{note} 若在部署流程中執行了 `config:cache` 指令，應確保只有在組態設定檔中呼叫 `env` 函式。設定檔被快取後，就不會再載入 `.env` 檔了。所有 `env` 函式查詢 `.env` 變數的呼叫都會回傳 `null`。"

#: docs/8.x/helpers.md:block 950 (header)
msgid "`event()` {.collection-method}"
msgstr "`event()` {.collection-method}"

#: docs/8.x/helpers.md:block 951 (paragraph)
msgid "The `event` function dispatches the given [event](/docs/{{version}}/events) to its listeners:"
msgstr "`event` 函式將給定 [Event](/docs/{{version}}/events) ^[分派](Dispatch)給其 Listener："

#: docs/8.x/helpers.md:block 952 (code)
msgid "event(new UserRegistered($user));\n"
msgstr "event(new UserRegistered($user));\n"

#: docs/8.x/helpers.md:block 954 (header)
msgid "`filled()` {.collection-method}"
msgstr "`filled()` {.collection-method}"

#: docs/8.x/helpers.md:block 955 (paragraph)
msgid "The `filled` function determines whether the given value is not \"blank\":"
msgstr "`filled` 函式判斷給定值是否不為「^[空白](Blank)」："

#: docs/8.x/helpers.md:block 956 (code)
msgid "filled(0);\n"
"filled(true);\n"
"filled(false);\n\n"
"// true\n\n"
"filled('');\n"
"filled('   ');\n"
"filled(null);\n"
"filled(collect());\n\n"
"// false\n"
msgstr "filled(0);\n"
"filled(true);\n"
"filled(false);\n\n"
"// true\n\n"
"filled('');\n"
"filled('   ');\n"
"filled(null);\n"
"filled(collect());\n\n"
"// false\n"

#: docs/8.x/helpers.md:block 957 (paragraph)
msgid "For the inverse of `filled`, see the [`blank`](#method-blank) method."
msgstr "請參考 [blank](#method-blank) 方法以瞭解與 `filled` 相反的方法。"

#: docs/8.x/helpers.md:block 959 (header)
msgid "`info()` {.collection-method}"
msgstr "`info()` {.collection-method}"

#: docs/8.x/helpers.md:block 960 (paragraph)
msgid "The `info` function will write information to your application's [log](/docs/{{version}}/logging):"
msgstr "`info` 函式寫入 info 等級的資訊至程式的 [日誌](/docs/{{version}}/logging) 中："

#: docs/8.x/helpers.md:block 961 (code)
msgid "info('Some helpful information!');\n"
msgstr "info('Some helpful information!');\n"

#: docs/8.x/helpers.md:block 962 (paragraph)
msgid "An array of contextual data may also be passed to the function:"
msgstr "也可以傳入一組包含上下文資料的陣列給該函式："

#: docs/8.x/helpers.md:block 963 (code)
msgid "info('User login attempt failed.', ['id' => $user->id]);\n"
msgstr "info('User login attempt failed.', ['id' => $user->id]);\n"

#: docs/8.x/helpers.md:block 965 (header)
msgid "`logger()` {.collection-method}"
msgstr "`logger()` {.collection-method}"

#: docs/8.x/helpers.md:block 966 (paragraph)
msgid "The `logger` function can be used to write a `debug` level message to the [log](/docs/{{version}}/logging):"
msgstr "`logger` 函式可用來寫入 `debug` 等級的訊息至[日誌](/docs/{{version}}/logging)中："

#: docs/8.x/helpers.md:block 967 (code)
msgid "logger('Debug message');\n"
msgstr "logger('Debug message');\n"

#: docs/8.x/helpers.md:block 969 (code)
msgid "logger('User has logged in.', ['id' => $user->id]);\n"
msgstr "logger('User has logged in.', ['id' => $user->id]);\n"

#: docs/8.x/helpers.md:block 970 (paragraph)
msgid "A [logger](/docs/{{version}}/errors#logging) instance will be returned if no value is passed to the function:"
msgstr "若未傳入任何值給該方法，則會回傳 [Logger](/docs/{{version}}/errors#logging) 實體："

#: docs/8.x/helpers.md:block 971 (code)
msgid "logger()->error('You are not allowed here.');\n"
msgstr "logger()->error('You are not allowed here.');\n"

#: docs/8.x/helpers.md:block 973 (header)
msgid "`method_field()` {.collection-method}"
msgstr "`method_field()` {.collection-method}"

#: docs/8.x/helpers.md:block 974 (paragraph)
msgid "The `method_field` function generates an HTML `hidden` input field containing the spoofed value of the form's HTTP verb. For example, using [Blade syntax](/docs/{{version}}/blade):"
msgstr "`method_field` 函式產生一個用於模擬表單 HTTP 動詞的 HTML `hidden` 輸入欄位。舉例來說，在 [Blade 語法](/docs/{{version}}/blade)中可這樣使用："

#: docs/8.x/helpers.md:block 975 (code)
msgid "<form method=\"POST\">\n"
"    {{ method_field('DELETE') }}\n"
"</form>\n"
msgstr "<form method=\"POST\">\n"
"    {{ method_field('DELETE') }}\n"
"</form>\n"

#: docs/8.x/helpers.md:block 977 (header)
msgid "`now()` {.collection-method}"
msgstr "`now()` {.collection-method}"

#: docs/8.x/helpers.md:block 978 (paragraph)
msgid "The `now` function creates a new `Illuminate\\Support\\Carbon` instance for the current time:"
msgstr "`now` 函式建立一個目前時間的新 `Illuminate\\Support\\Carbon` 實體："

#: docs/8.x/helpers.md:block 979 (code)
msgid "$now = now();\n"
msgstr "$now = now();\n"

#: docs/8.x/helpers.md:block 981 (header)
msgid "`old()` {.collection-method}"
msgstr "`old()` {.collection-method}"

#: docs/8.x/helpers.md:block 982 (paragraph)
msgid "The `old` function [retrieves](/docs/{{version}}/requests#retrieving-input) an [old input](/docs/{{version}}/requests#old-input) value flashed into the session:"
msgstr "`old` 函式[取得](/docs/{{version}}/requests#retrieving-input)快閃存入 Session 的[舊輸入](/docs/{{version}}/requests#old-input)值："

#: docs/8.x/helpers.md:block 983 (code)
msgid "$value = old('value');\n\n"
"$value = old('value', 'default');\n"
msgstr "$value = old('value');\n\n"
"$value = old('value', 'default');\n"

#: docs/8.x/helpers.md:block 985 (header)
msgid "`optional()` {.collection-method}"
msgstr "`optional()` {.collection-method}"

#: docs/8.x/helpers.md:block 986 (paragraph)
msgid "The `optional` function accepts any argument and allows you to access properties or call methods on that object. If the given object is `null`, properties and methods will return `null` instead of causing an error:"
msgstr "`optional` 函式接受任何的引數，並可讓你存取該物件上的屬性或呼叫該物件上的方法。若給定的物件為 `null`，存取屬性和方法時會回傳 `null` 而不是發生錯誤："

#: docs/8.x/helpers.md:block 987 (code)
msgid "return optional($user->address)->street;\n\n"
"{!! old('name', optional($user)->name) !!}\n"
msgstr "return optional($user->address)->street;\n\n"
"{!! old('name', optional($user)->name) !!}\n"

#: docs/8.x/helpers.md:block 988 (paragraph)
msgid "The `optional` function also accepts a closure as its second argument. The closure will be invoked if the value provided as the first argument is not null:"
msgstr "`optional` 函式也接受閉包作為其第二個引數。若第一個引數傳入的值不是 null 時會叫用該閉包："

#: docs/8.x/helpers.md:block 989 (code)
msgid "return optional(User::find($id), function ($user) {\n"
"    return $user->name;\n"
"});\n"
msgstr "return optional(User::find($id), function ($user) {\n"
"    return $user->name;\n"
"});\n"

#: docs/8.x/helpers.md:block 991 (header)
msgid "`policy()` {.collection-method}"
msgstr "`policy()` {.collection-method}"

#: docs/8.x/helpers.md:block 992 (paragraph)
msgid "The `policy` method retrieves a [policy](/docs/{{version}}/authorization#creating-policies) instance for a given class:"
msgstr "`policy` 方法取得給定類別的 [Policy](/docs/{{version}}/authorization#creating-policies) 實體："

#: docs/8.x/helpers.md:block 993 (code)
msgid "$policy = policy(App\\Models\\User::class);\n"
msgstr "$policy = policy(App\\Models\\User::class);\n"

#: docs/8.x/helpers.md:block 995 (header)
msgid "`redirect()` {.collection-method}"
msgstr "`redirect()` {.collection-method}"

#: docs/8.x/helpers.md:block 996 (paragraph)
msgid "The `redirect` function returns a [redirect HTTP response](/docs/{{version}}/responses#redirects), or returns the redirector instance if called with no arguments:"
msgstr "`redirect` 函式回傳一個[重新導向的 HTTP Response](/docs/{{version}}/responses#redirects)。若呼叫時未提供任何引數，則回傳 Redirector 實體："

#: docs/8.x/helpers.md:block 997 (code)
msgid "return redirect($to = null, $status = 302, $headers = [], $https = null);\n\n"
"return redirect('/home');\n\n"
"return redirect()->route('route.name');\n"
msgstr "return redirect($to = null, $status = 302, $headers = [], $https = null);\n\n"
"return redirect('/home');\n\n"
"return redirect()->route('route.name');\n"

#: docs/8.x/helpers.md:block 999 (header)
msgid "`report()` {.collection-method}"
msgstr "`report()` {.collection-method}"

#: docs/8.x/helpers.md:block 1000 (paragraph)
msgid "The `report` function will report an exception using your [exception handler](/docs/{{version}}/errors#the-exception-handler):"
msgstr "`report` 函式會使用 [Exception Handler](/docs/{{version}}/errors#the-exception-handler) 來回報 Exception："

#: docs/8.x/helpers.md:block 1001 (code)
msgid "report($e);\n"
msgstr "report($e);\n"

#: docs/8.x/helpers.md:block 1002 (paragraph)
msgid "The `report` function also accepts a string as an argument. When a string is given to the function, the function will create an exception with the given string as its message:"
msgstr "`report` 函式也接受一個字串作為其引數。若傳入字串給該函式時，`report` 會使用給定的字串作為訊息來建立 Exception："

#: docs/8.x/helpers.md:block 1003 (code)
msgid "report('Something went wrong.');\n"
msgstr "report('Something went wrong.');\n"

#: docs/8.x/helpers.md:block 1005 (header)
msgid "`request()` {.collection-method}"
msgstr "`request()` {.collection-method}"

#: docs/8.x/helpers.md:block 1006 (paragraph)
msgid "The `request` function returns the current [request](/docs/{{version}}/requests) instance or obtains an input field's value from the current request:"
msgstr "`request` 函式回傳目前的 [Request](/docs/{{version}}/requests) 實體，或是從目前 Request 中取得輸入欄位的值："

#: docs/8.x/helpers.md:block 1007 (code)
msgid "$request = request();\n\n"
"$value = request('key', $default);\n"
msgstr "$request = request();\n\n"
"$value = request('key', $default);\n"

#: docs/8.x/helpers.md:block 1009 (header)
msgid "`rescue()` {.collection-method}"
msgstr "`rescue()` {.collection-method}"

#: docs/8.x/helpers.md:block 1010 (paragraph)
msgid "The `rescue` function executes the given closure and catches any exceptions that occur during its execution. All exceptions that are caught will be sent to your [exception handler](/docs/{{version}}/errors#the-exception-handler); however, the request will continue processing:"
msgstr "`rescue` 函式會執行給定的閉包，並 Catch 在執行時發生的所有 Exception。被 Catch 到的 Exception 會被送到 [Exception Handler](/docs/{{version}}/errors#the-exception-handler)，不過，Request 會繼續執行："

#: docs/8.x/helpers.md:block 1011 (code)
msgid "return rescue(function () {\n"
"    return $this->method();\n"
"});\n"
msgstr "return rescue(function () {\n"
"    return $this->method();\n"
"});\n"

#: docs/8.x/helpers.md:block 1012 (paragraph)
msgid "You may also pass a second argument to the `rescue` function. This argument will be the \"default\" value that should be returned if an exception occurs while executing the closure:"
msgstr "也可以傳入第二個引數給 `rescue` 函式。執行閉包時若有發生 Exception，就會使用這個引數來當作回傳的「預設」值："

#: docs/8.x/helpers.md:block 1013 (code)
msgid "return rescue(function () {\n"
"    return $this->method();\n"
"}, false);\n\n"
"return rescue(function () {\n"
"    return $this->method();\n"
"}, function () {\n"
"    return $this->failure();\n"
"});\n"
msgstr "return rescue(function () {\n"
"    return $this->method();\n"
"}, false);\n\n"
"return rescue(function () {\n"
"    return $this->method();\n"
"}, function () {\n"
"    return $this->failure();\n"
"});\n"

#: docs/8.x/helpers.md:block 1015 (header)
msgid "`resolve()` {.collection-method}"
msgstr "`resolve()` {.collection-method}"

#: docs/8.x/helpers.md:block 1016 (paragraph)
msgid "The `resolve` function resolves a given class or interface name to an instance using the [service container](/docs/{{version}}/container):"
msgstr "`resolve` 函式使用 [Service Container](/docs/{{version}}/container) 來將給定的類別或介面名稱解析為實體："

#: docs/8.x/helpers.md:block 1017 (code)
msgid "$api = resolve('HelpSpot\\API');\n"
msgstr "$api = resolve('HelpSpot\\API');\n"

#: docs/8.x/helpers.md:block 1019 (header)
msgid "`response()` {.collection-method}"
msgstr "`response()` {.collection-method}"

#: docs/8.x/helpers.md:block 1020 (paragraph)
msgid "The `response` function creates a [response](/docs/{{version}}/responses) instance or obtains an instance of the response factory:"
msgstr "`response` 函式建立一個 [Response](/docs/{{version}}/responses) 實體，或是取得 Response Factory 的實體："

#: docs/8.x/helpers.md:block 1021 (code)
msgid "return response('Hello World', 200, $headers);\n\n"
"return response()->json(['foo' => 'bar'], 200, $headers);\n"
msgstr "return response('Hello World', 200, $headers);\n\n"
"return response()->json(['foo' => 'bar'], 200, $headers);\n"

#: docs/8.x/helpers.md:block 1023 (header)
msgid "`retry()` {.collection-method}"
msgstr "`retry()` {.collection-method}"

#: docs/8.x/helpers.md:block 1024 (paragraph)
msgid "The `retry` function attempts to execute the given callback until the given maximum attempt threshold is met. If the callback does not throw an exception, its return value will be returned. If the callback throws an exception, it will automatically be retried. If the maximum attempt count is exceeded, the exception will be thrown:"
msgstr "`retry` 函式會嘗試執行給定的閉包，直到達到最大嘗試次數限制。若該回呼未^[擲回](Throw) Exception，則會回傳該回呼的回傳值。若回呼擲回 Exception，就會自動嘗試重新執行回呼。達到最大嘗試次數後，就會擲回 Exception："

#: docs/8.x/helpers.md:block 1025 (code)
msgid "return retry(5, function () {\n"
"    // Attempt 5 times while resting 100ms in between attempts...\n"
"}, 100);\n"
msgstr "return retry(5, function () {\n"
"    // 嘗試 5 次，每次嘗試間暫停 100ms...\n"
"}, 100);\n"

#: docs/8.x/helpers.md:block 1026 (paragraph)
msgid "If you would like to manually calculate the number of milliseconds to sleep in between attempts, you may pass a closure as the third argument to the `retry` function:"
msgstr "若想自動手動計算每次長時間要暫停的毫秒數，可傳入閉包作為第三個引數給 `retry` 函式："

#: docs/8.x/helpers.md:block 1027 (code)
msgid "return retry(5, function () {\n"
"    // ...\n"
"}, function ($attempt) {\n"
"    return $attempt * 100;\n"
"});\n"
msgstr "return retry(5, function () {\n"
"    // ...\n"
"}, function ($attempt) {\n"
"    return $attempt * 100;\n"
"});\n"

#: docs/8.x/helpers.md:block 1028 (paragraph)
msgid "To only retry under specific conditions, you may pass a closure as the fourth argument to the `retry` function:"
msgstr "若只想在特定條件下重試，可傳入一個閉包作為第四個引數給 `retry` 函式："

#: docs/8.x/helpers.md:block 1029 (code)
msgid "return retry(5, function () {\n"
"    // ...\n"
"}, 100, function ($exception) {\n"
"    return $exception instanceof RetryException;\n"
"});\n"
msgstr "return retry(5, function () {\n"
"    // ...\n"
"}, 100, function ($exception) {\n"
"    return $exception instanceof RetryException;\n"
"});\n"

#: docs/8.x/helpers.md:block 1031 (header)
msgid "`session()` {.collection-method}"
msgstr "`session()` {.collection-method}"

#: docs/8.x/helpers.md:block 1032 (paragraph)
msgid "The `session` function may be used to get or set [session](/docs/{{version}}/session) values:"
msgstr "`session` 函式可用來取得或設定 [Session](/docs/{{version}}/session) 值："

#: docs/8.x/helpers.md:block 1033 (code)
msgid "$value = session('key');\n"
msgstr "$value = session('key');\n"

#: docs/8.x/helpers.md:block 1034 (paragraph)
msgid "You may set values by passing an array of key / value pairs to the function:"
msgstr "可以傳入一組索引鍵 / 值配對的陣列給該函式來賦值："

#: docs/8.x/helpers.md:block 1035 (code)
msgid "session(['chairs' => 7, 'instruments' => 3]);\n"
msgstr "session(['chairs' => 7, 'instruments' => 3]);\n"

#: docs/8.x/helpers.md:block 1036 (paragraph)
msgid "The session store will be returned if no value is passed to the function:"
msgstr "若未傳入任何值給該方法，則會回傳 Session Store 實體："

#: docs/8.x/helpers.md:block 1037 (code)
msgid "$value = session()->get('key');\n\n"
"session()->put('key', $value);\n"
msgstr "$value = session()->get('key');\n\n"
"session()->put('key', $value);\n"

#: docs/8.x/helpers.md:block 1039 (header)
msgid "`tap()` {.collection-method}"
msgstr "`tap()` {.collection-method}"

#: docs/8.x/helpers.md:block 1040 (paragraph)
msgid "The `tap` function accepts two arguments: an arbitrary `$value` and a closure. The `$value` will be passed to the closure and then be returned by the `tap` function. The return value of the closure is irrelevant:"
msgstr "`tap` 方法接受兩個引數：任意值 `$value`、以及一個閉包。`$value` 會被傳入閉包中，然後 `tap` 方法會回傳 `$value` 的值。閉包的回傳值沒有任何影響："

#: docs/8.x/helpers.md:block 1041 (code)
msgid "$user = tap(User::first(), function ($user) {\n"
"    $user->name = 'taylor';\n\n"
"    $user->save();\n"
"});\n"
msgstr "$user = tap(User::first(), function ($user) {\n"
"    $user->name = 'taylor';\n\n"
"    $user->save();\n"
"});\n"

#: docs/8.x/helpers.md:block 1042 (paragraph)
msgid "If no closure is passed to the `tap` function, you may call any method on the given `$value`. The return value of the method you call will always be `$value`, regardless of what the method actually returns in its definition. For example, the Eloquent `update` method typically returns an integer. However, we can force the method to return the model itself by chaining the `update` method call through the `tap` function:"
msgstr "若未傳入閉包給 `tap` 函式，則可呼叫任何給定 `$value` 上的方法。無論呼叫的方法回傳什麼值，在此處都會回傳 `$value`。舉例來說，Eloquent `update` 方法一般會回傳整數。不過，若我們可以將 `update` 方法的呼叫串在 `tap` 函式後方，來強制把該方法的回傳值改為 Model 實體："

#: docs/8.x/helpers.md:block 1043 (code)
msgid "$user = tap($user)->update([\n"
"    'name' => $name,\n"
"    'email' => $email,\n"
"]);\n"
msgstr "$user = tap($user)->update([\n"
"    'name' => $name,\n"
"    'email' => $email,\n"
"]);\n"

#: docs/8.x/helpers.md:block 1044 (paragraph)
msgid "To add a `tap` method to a class, you may add the `Illuminate\\Support\\Traits\\Tappable` trait to the class. The `tap` method of this trait accepts a Closure as its only argument. The object instance itself will be passed to the Closure and then be returned by the `tap` method:"
msgstr "若要將 `tap` 方法加到類別上，可以將 `Illuminate\\Support\\Traits\\Tappable` Trait 加到類別中。該 Trait 的 `tap` 方法接受一個閉包作為其唯一的引數。物件實體本身會被傳入該閉包中，並由 `tap` 方法回傳："

#: docs/8.x/helpers.md:block 1045 (code)
msgid "return $user->tap(function ($user) {\n"
"    //\n"
"});\n"
msgstr "return $user->tap(function ($user) {\n"
"    //\n"
"});\n"

#: docs/8.x/helpers.md:block 1047 (header)
msgid "`throw_if()` {.collection-method}"
msgstr "`throw_if()` {.collection-method}"

#: docs/8.x/helpers.md:block 1048 (paragraph)
msgid "The `throw_if` function throws the given exception if a given boolean expression evaluates to `true`:"
msgstr "`throw_if` 函式會在給定布林運算式取值為 `true` 時擲回一個 Exception："

#: docs/8.x/helpers.md:block 1049 (code)
msgid "throw_if(! Auth::user()->isAdmin(), AuthorizationException::class);\n\n"
"throw_if(\n"
"    ! Auth::user()->isAdmin(),\n"
"    AuthorizationException::class,\n"
"    'You are not allowed to access this page.'\n"
");\n"
msgstr "throw_if(! Auth::user()->isAdmin(), AuthorizationException::class);\n\n"
"throw_if(\n"
"    ! Auth::user()->isAdmin(),\n"
"    AuthorizationException::class,\n"
"    'You are not allowed to access this page.'\n"
");\n"

#: docs/8.x/helpers.md:block 1051 (header)
msgid "`throw_unless()` {.collection-method}"
msgstr "`throw_unless()` {.collection-method}"

#: docs/8.x/helpers.md:block 1052 (paragraph)
msgid "The `throw_unless` function throws the given exception if a given boolean expression evaluates to `false`:"
msgstr "`throw_unless` 函式會在給定布林運算式取值為 `false` 時擲回一個 Exception："

#: docs/8.x/helpers.md:block 1053 (code)
msgid "throw_unless(Auth::user()->isAdmin(), AuthorizationException::class);\n\n"
"throw_unless(\n"
"    Auth::user()->isAdmin(),\n"
"    AuthorizationException::class,\n"
"    'You are not allowed to access this page.'\n"
");\n"
msgstr "throw_unless(Auth::user()->isAdmin(), AuthorizationException::class);\n\n"
"throw_unless(\n"
"    Auth::user()->isAdmin(),\n"
"    AuthorizationException::class,\n"
"    'You are not allowed to access this page.'\n"
");\n"

#: docs/8.x/helpers.md:block 1055 (header)
msgid "`today()` {.collection-method}"
msgstr "`today()` {.collection-method}"

#: docs/8.x/helpers.md:block 1056 (paragraph)
msgid "The `today` function creates a new `Illuminate\\Support\\Carbon` instance for the current date:"
msgstr "`today` 函式建立一個目前日期的新 `Illuminate\\Support\\Carbon` 實體："

#: docs/8.x/helpers.md:block 1057 (code)
msgid "$today = today();\n"
msgstr "$today = today();\n"

#: docs/8.x/helpers.md:block 1059 (header)
msgid "`trait_uses_recursive()` {.collection-method}"
msgstr "`trait_uses_recursive()` {.collection-method}"

#: docs/8.x/helpers.md:block 1060 (paragraph)
msgid "The `trait_uses_recursive` function returns all traits used by a trait:"
msgstr "`trait_uses_recursive` 函式回傳該 Trait 使用的所有 Trait："

#: docs/8.x/helpers.md:block 1061 (code)
msgid "$traits = trait_uses_recursive(\\Illuminate\\Notifications\\Notifiable::class);\n"
msgstr "$traits = trait_uses_recursive(\\Illuminate\\Notifications\\Notifiable::class);\n"

#: docs/8.x/helpers.md:block 1063 (header)
msgid "`transform()` {.collection-method}"
msgstr "`transform()` {.collection-method}"

#: docs/8.x/helpers.md:block 1064 (paragraph)
msgid "The `transform` function executes a closure on a given value if the value is not [blank](#method-blank) and then returns the return value of the closure:"
msgstr "`transform` 函式會在給定值不為[^[空白](Blank)](#method-blank)時執行閉包，並回傳該閉包的回傳值："

#: docs/8.x/helpers.md:block 1065 (code)
msgid "$callback = function ($value) {\n"
"    return $value * 2;\n"
"};\n\n"
"$result = transform(5, $callback);\n\n"
"// 10\n"
msgstr "$callback = function ($value) {\n"
"    return $value * 2;\n"
"};\n\n"
"$result = transform(5, $callback);\n\n"
"// 10\n"

#: docs/8.x/helpers.md:block 1066 (paragraph)
msgid "A default value or closure may be passed as the third argument to the function. This value will be returned if the given value is blank:"
msgstr "可傳入預設值或閉包作為第三個引數給該函式。若給定值為空白時，會回傳這個值："

#: docs/8.x/helpers.md:block 1067 (code)
msgid "$result = transform(null, $callback, 'The value is blank');\n\n"
"// The value is blank\n"
msgstr "$result = transform(null, $callback, 'The value is blank');\n\n"
"// The value is blank\n"

#: docs/8.x/helpers.md:block 1069 (header)
msgid "`validator()` {.collection-method}"
msgstr "`validator()` {.collection-method}"

#: docs/8.x/helpers.md:block 1070 (paragraph)
msgid "The `validator` function creates a new [validator](/docs/{{version}}/validation) instance with the given arguments. You may use it as an alternative to the `Validator` facade:"
msgstr "`validator` 函式使用給定的引數來建立一個新的 [Validator](/docs/{{version}}/validation) 實體。可以用來當作是 `Validator` Facade 的替代："

#: docs/8.x/helpers.md:block 1071 (code)
msgid "$validator = validator($data, $rules, $messages);\n"
msgstr "$validator = validator($data, $rules, $messages);\n"

#: docs/8.x/helpers.md:block 1073 (header)
msgid "`value()` {.collection-method}"
msgstr "`value()` {.collection-method}"

#: docs/8.x/helpers.md:block 1074 (paragraph)
msgid "The `value` function returns the value it is given. However, if you pass a closure to the function, the closure will be executed and its returned value will be returned:"
msgstr "`value` 函式會回傳給定的值。不過，若傳入閉包給該函式，會執行該閉包並回傳該閉包的值："

#: docs/8.x/helpers.md:block 1075 (code)
msgid "$result = value(true);\n\n"
"// true\n\n"
"$result = value(function () {\n"
"    return false;\n"
"});\n\n"
"// false\n"
msgstr "$result = value(true);\n\n"
"// true\n\n"
"$result = value(function () {\n"
"    return false;\n"
"});\n\n"
"// false\n"

#: docs/8.x/helpers.md:block 1077 (header)
msgid "`view()` {.collection-method}"
msgstr "`view()` {.collection-method}"

#: docs/8.x/helpers.md:block 1078 (paragraph)
msgid "The `view` function retrieves a [view](/docs/{{version}}/views) instance:"
msgstr "`view` 函式可取得一個 [View](/docs/{{version}}/views) 實體："

#: docs/8.x/helpers.md:block 1079 (code)
msgid "return view('auth.login');\n"
msgstr "return view('auth.login');\n"

#: docs/8.x/helpers.md:block 1081 (header)
msgid "`with()` {.collection-method}"
msgstr "`with()` {.collection-method}"

#: docs/8.x/helpers.md:block 1082 (paragraph)
msgid "The `with` function returns the value it is given. If a closure is passed as the second argument to the function, the closure will be executed and its returned value will be returned:"
msgstr "`with` 函式會回傳給定的值。若有傳入閉包作為第二個引數該函式，會執行該閉包並回傳該閉包的回傳值："

#: docs/8.x/helpers.md:block 1083 (code)
msgid "$callback = function ($value) {\n"
"    return is_numeric($value) ? $value * 2 : 0;\n"
"};\n\n"
"$result = with(5, $callback);\n\n"
"// 10\n\n"
"$result = with(null, $callback);\n\n"
"// 0\n\n"
"$result = with(5, null);\n\n"
"// 5\n"
msgstr "$callback = function ($value) {\n"
"    return is_numeric($value) ? $value * 2 : 0;\n"
"};\n\n"
"$result = with(5, $callback);\n\n"
"// 10\n\n"
"$result = with(null, $callback);\n\n"
"// 0\n\n"
"$result = with(5, null);\n\n"
"// 5\n"

#: docs/9.x/helpers.md:block 12 (paragraph)
msgid "[Arr::accessible](#method-array-accessible) [Arr::add](#method-array-add) [Arr::collapse](#method-array-collapse) [Arr::crossJoin](#method-array-crossjoin) [Arr::divide](#method-array-divide) [Arr::dot](#method-array-dot) [Arr::except](#method-array-except) [Arr::exists](#method-array-exists) [Arr::first](#method-array-first) [Arr::flatten](#method-array-flatten) [Arr::forget](#method-array-forget) [Arr::get](#method-array-get) [Arr::has](#method-array-has) [Arr::hasAny](#method-array-hasany) [Arr::isAssoc](#method-array-isassoc) [Arr::isList](#method-array-islist) [Arr::last](#method-array-last) [Arr::only](#method-array-only) [Arr::pluck](#method-array-pluck) [Arr::prepend](#method-array-prepend) [Arr::pull](#method-array-pull) [Arr::query](#method-array-query) [Arr::random](#method-array-random) [Arr::set](#method-array-set) [Arr::shuffle](#method-array-shuffle) [Arr::sort](#method-array-sort) [Arr::sortRecursive](#method-array-sort-recursive) [Arr::toCssClasses](#method-array-to-css-classes) [Arr::undot](#method-array-undot) [Arr::where](#method-array-where) [Arr::whereNotNull](#method-array-where-not-null) [Arr::wrap](#method-array-wrap) [data_fill](#method-data-fill) [data_get](#method-data-get) [data_set](#method-data-set) [head](#method-head) [last](#method-last)"
msgstr "[Arr::accessible](#method-array-accessible) [Arr::add](#method-array-add) [Arr::collapse](#method-array-collapse) [Arr::crossJoin](#method-array-crossjoin) [Arr::divide](#method-array-divide) [Arr::dot](#method-array-dot) [Arr::except](#method-array-except) [Arr::exists](#method-array-exists) [Arr::first](#method-array-first) [Arr::flatten](#method-array-flatten) [Arr::forget](#method-array-forget) [Arr::get](#method-array-get) [Arr::has](#method-array-has) [Arr::hasAny](#method-array-hasany) [Arr::isAssoc](#method-array-isassoc) [Arr::isList](#method-array-islist) [Arr::last](#method-array-last) [Arr::only](#method-array-only) [Arr::pluck](#method-array-pluck) [Arr::prepend](#method-array-prepend) [Arr::pull](#method-array-pull) [Arr::query](#method-array-query) [Arr::random](#method-array-random) [Arr::set](#method-array-set) [Arr::shuffle](#method-array-shuffle) [Arr::sort](#method-array-sort) [Arr::sortRecursive](#method-array-sort-recursive) [Arr::toCssClasses](#method-array-to-css-classes) [Arr::undot](#method-array-undot) [Arr::where](#method-array-where) [Arr::whereNotNull](#method-array-where-not-null) [Arr::wrap](#method-array-wrap) [data_fill](#method-data-fill) [data_get](#method-data-get) [data_set](#method-data-set) [head](#method-head) [last](#method-last)"

#: docs/9.x/helpers.md:block 22 (paragraph)
msgid "[__](#method-__) [class_basename](#method-class-basename) [e](#method-e) [preg_replace_array](#method-preg-replace-array) [Str::after](#method-str-after) [Str::afterLast](#method-str-after-last) [Str::ascii](#method-str-ascii) [Str::before](#method-str-before) [Str::beforeLast](#method-str-before-last) [Str::between](#method-str-between) [Str::camel](#method-camel-case) [Str::contains](#method-str-contains) [Str::containsAll](#method-str-contains-all) [Str::endsWith](#method-ends-with) [Str::finish](#method-str-finish) [Str::headline](#method-str-headline) [Str::is](#method-str-is) [Str::isAscii](#method-str-is-ascii) [Str::isUuid](#method-str-is-uuid) [Str::kebab](#method-kebab-case) [Str::length](#method-str-length) [Str::limit](#method-str-limit) [Str::lower](#method-str-lower) [Str::markdown](#method-str-markdown) [Str::mask](#method-str-mask) [Str::orderedUuid](#method-str-ordered-uuid) [Str::padBoth](#method-str-padboth) [Str::padLeft](#method-str-padleft) [Str::padRight](#method-str-padright) [Str::plural](#method-str-plural) [Str::pluralStudly](#method-str-plural-studly) [Str::random](#method-str-random) [Str::remove](#method-str-remove) [Str::replace](#method-str-replace) [Str::replaceArray](#method-str-replace-array) [Str::replaceFirst](#method-str-replace-first) [Str::replaceLast](#method-str-replace-last) [Str::reverse](#method-str-reverse) [Str::singular](#method-str-singular) [Str::slug](#method-str-slug) [Str::snake](#method-snake-case) [Str::start](#method-str-start) [Str::startsWith](#method-starts-with) [Str::studly](#method-studly-case) [Str::substr](#method-str-substr) [Str::substrCount](#method-str-substrcount) [Str::substrReplace](#method-str-substrreplace) [Str::swap](#method-str-swap) [Str::title](#method-title-case) [Str::toHtmlString](#method-str-to-html-string) [Str::ucfirst](#method-str-ucfirst) [Str::upper](#method-str-upper) [Str::uuid](#method-str-uuid) [Str::wordCount](#method-str-word-count) [Str::words](#method-str-words) [str](#method-str) [trans](#method-trans) [trans_choice](#method-trans-choice)"
msgstr "[__](#method-__) [class_basename](#method-class-basename) [e](#method-e) [preg_replace_array](#method-preg-replace-array) [Str::after](#method-str-after) [Str::afterLast](#method-str-after-last) [Str::ascii](#method-str-ascii) [Str::before](#method-str-before) [Str::beforeLast](#method-str-before-last) [Str::between](#method-str-between) [Str::camel](#method-camel-case) [Str::contains](#method-str-contains) [Str::containsAll](#method-str-contains-all) [Str::endsWith](#method-ends-with) [Str::finish](#method-str-finish) [Str::headline](#method-str-headline) [Str::is](#method-str-is) [Str::isAscii](#method-str-is-ascii) [Str::isUuid](#method-str-is-uuid) [Str::kebab](#method-kebab-case) [Str::length](#method-str-length) [Str::limit](#method-str-limit) [Str::lower](#method-str-lower) [Str::markdown](#method-str-markdown) [Str::mask](#method-str-mask) [Str::orderedUuid](#method-str-ordered-uuid) [Str::padBoth](#method-str-padboth) [Str::padLeft](#method-str-padleft) [Str::padRight](#method-str-padright) [Str::plural](#method-str-plural) [Str::pluralStudly](#method-str-plural-studly) [Str::random](#method-str-random) [Str::remove](#method-str-remove) [Str::replace](#method-str-replace) [Str::replaceArray](#method-str-replace-array) [Str::replaceFirst](#method-str-replace-first) [Str::replaceLast](#method-str-replace-last) [Str::reverse](#method-str-reverse) [Str::singular](#method-str-singular) [Str::slug](#method-str-slug) [Str::snake](#method-snake-case) [Str::start](#method-str-start) [Str::startsWith](#method-starts-with) [Str::studly](#method-studly-case) [Str::substr](#method-str-substr) [Str::substrCount](#method-str-substrcount) [Str::substrReplace](#method-str-substrreplace) [Str::swap](#method-str-swap) [Str::title](#method-title-case) [Str::toHtmlString](#method-str-to-html-string) [Str::ucfirst](#method-str-ucfirst) [Str::upper](#method-str-upper) [Str::uuid](#method-str-uuid) [Str::wordCount](#method-str-word-count) [Str::words](#method-str-words) [str](#method-str) [trans](#method-trans) [trans_choice](#method-trans-choice)"

#: docs/9.x/helpers.md:block 27 (paragraph)
msgid "[after](#method-fluent-str-after) [afterLast](#method-fluent-str-after-last) [append](#method-fluent-str-append) [ascii](#method-fluent-str-ascii) [basename](#method-fluent-str-basename) [before](#method-fluent-str-before) [beforeLast](#method-fluent-str-before-last) [between](#method-fluent-str-between) [camel](#method-fluent-str-camel) [contains](#method-fluent-str-contains) [containsAll](#method-fluent-str-contains-all) [dirname](#method-fluent-str-dirname) [endsWith](#method-fluent-str-ends-with) [exactly](#method-fluent-str-exactly) [explode](#method-fluent-str-explode) [finish](#method-fluent-str-finish) [is](#method-fluent-str-is) [isAscii](#method-fluent-str-is-ascii) [isEmpty](#method-fluent-str-is-empty) [isNotEmpty](#method-fluent-str-is-not-empty) [isUuid](#method-fluent-str-is-uuid) [kebab](#method-fluent-str-kebab) [length](#method-fluent-str-length) [limit](#method-fluent-str-limit) [lower](#method-fluent-str-lower) [ltrim](#method-fluent-str-ltrim) [markdown](#method-fluent-str-markdown) [mask](#method-fluent-str-mask) [match](#method-fluent-str-match) [matchAll](#method-fluent-str-match-all) [padBoth](#method-fluent-str-padboth) [padLeft](#method-fluent-str-padleft) [padRight](#method-fluent-str-padright) [pipe](#method-fluent-str-pipe) [plural](#method-fluent-str-plural) [prepend](#method-fluent-str-prepend) [remove](#method-fluent-str-remove) [replace](#method-fluent-str-replace) [replaceArray](#method-fluent-str-replace-array) [replaceFirst](#method-fluent-str-replace-first) [replaceLast](#method-fluent-str-replace-last) [replaceMatches](#method-fluent-str-replace-matches) [rtrim](#method-fluent-str-rtrim) [scan](#method-fluent-str-scan) [singular](#method-fluent-str-singular) [slug](#method-fluent-str-slug) [snake](#method-fluent-str-snake) [split](#method-fluent-str-split) [start](#method-fluent-str-start) [startsWith](#method-fluent-str-starts-with) [studly](#method-fluent-str-studly) [substr](#method-fluent-str-substr) [substrReplace](#method-fluent-str-substrreplace) [swap](#method-fluent-str-swap) [tap](#method-fluent-str-tap) [test](#method-fluent-str-test) [title](#method-fluent-str-title) [trim](#method-fluent-str-trim) [ucfirst](#method-fluent-str-ucfirst) [upper](#method-fluent-str-upper) [when](#method-fluent-str-when) [whenContains](#method-fluent-str-when-contains) [whenContainsAll](#method-fluent-str-when-contains-all) [whenEmpty](#method-fluent-str-when-empty) [whenNotEmpty](#method-fluent-str-when-not-empty) [whenStartsWith](#method-fluent-str-when-starts-with) [whenEndsWith](#method-fluent-str-when-ends-with) [whenExactly](#method-fluent-str-when-exactly) [whenIs](#method-fluent-str-when-is) [whenIsAscii](#method-fluent-str-when-is-ascii) [whenIsUuid](#method-fluent-str-when-is-uuid) [whenTest](#method-fluent-str-when-test) [wordCount](#method-fluent-str-word-count) [words](#method-fluent-str-words)"
msgstr "[after](#method-fluent-str-after) [afterLast](#method-fluent-str-after-last) [append](#method-fluent-str-append) [ascii](#method-fluent-str-ascii) [basename](#method-fluent-str-basename) [before](#method-fluent-str-before) [beforeLast](#method-fluent-str-before-last) [between](#method-fluent-str-between) [camel](#method-fluent-str-camel) [contains](#method-fluent-str-contains) [containsAll](#method-fluent-str-contains-all) [dirname](#method-fluent-str-dirname) [endsWith](#method-fluent-str-ends-with) [exactly](#method-fluent-str-exactly) [explode](#method-fluent-str-explode) [finish](#method-fluent-str-finish) [is](#method-fluent-str-is) [isAscii](#method-fluent-str-is-ascii) [isEmpty](#method-fluent-str-is-empty) [isNotEmpty](#method-fluent-str-is-not-empty) [isUuid](#method-fluent-str-is-uuid) [kebab](#method-fluent-str-kebab) [length](#method-fluent-str-length) [limit](#method-fluent-str-limit) [lower](#method-fluent-str-lower) [ltrim](#method-fluent-str-ltrim) [markdown](#method-fluent-str-markdown) [mask](#method-fluent-str-mask) [match](#method-fluent-str-match) [matchAll](#method-fluent-str-match-all) [padBoth](#method-fluent-str-padboth) [padLeft](#method-fluent-str-padleft) [padRight](#method-fluent-str-padright) [pipe](#method-fluent-str-pipe) [plural](#method-fluent-str-plural) [prepend](#method-fluent-str-prepend) [remove](#method-fluent-str-remove) [replace](#method-fluent-str-replace) [replaceArray](#method-fluent-str-replace-array) [replaceFirst](#method-fluent-str-replace-first) [replaceLast](#method-fluent-str-replace-last) [replaceMatches](#method-fluent-str-replace-matches) [rtrim](#method-fluent-str-rtrim) [scan](#method-fluent-str-scan) [singular](#method-fluent-str-singular) [slug](#method-fluent-str-slug) [snake](#method-fluent-str-snake) [split](#method-fluent-str-split) [start](#method-fluent-str-start) [startsWith](#method-fluent-str-starts-with) [studly](#method-fluent-str-studly) [substr](#method-fluent-str-substr) [substrReplace](#method-fluent-str-substrreplace) [swap](#method-fluent-str-swap) [tap](#method-fluent-str-tap) [test](#method-fluent-str-test) [title](#method-fluent-str-title) [trim](#method-fluent-str-trim) [ucfirst](#method-fluent-str-ucfirst) [upper](#method-fluent-str-upper) [when](#method-fluent-str-when) [whenContains](#method-fluent-str-when-contains) [whenContainsAll](#method-fluent-str-when-contains-all) [whenEmpty](#method-fluent-str-when-empty) [whenNotEmpty](#method-fluent-str-when-not-empty) [whenStartsWith](#method-fluent-str-when-starts-with) [whenEndsWith](#method-fluent-str-when-ends-with) [whenExactly](#method-fluent-str-when-exactly) [whenIs](#method-fluent-str-when-is) [whenIsAscii](#method-fluent-str-when-is-ascii) [whenIsUuid](#method-fluent-str-when-is-uuid) [whenTest](#method-fluent-str-when-test) [wordCount](#method-fluent-str-word-count) [words](#method-fluent-str-words)"

#: docs/9.x/helpers.md:block 32 (paragraph)
msgid "[action](#method-action) [asset](#method-asset) [route](#method-route) [secure_asset](#method-secure-asset) [secure_url](#method-secure-url) [to_route](#method-to-route) [url](#method-url)"
msgstr "[action](#method-action) [asset](#method-asset) [route](#method-route) [secure_asset](#method-secure-asset) [secure_url](#method-secure-url) [to_route](#method-to-route) [url](#method-url)"

#: docs/9.x/helpers.md:block 37 (paragraph)
msgid "[abort](#method-abort) [abort_if](#method-abort-if) [abort_unless](#method-abort-unless) [app](#method-app) [auth](#method-auth) [back](#method-back) [bcrypt](#method-bcrypt) [blank](#method-blank) [broadcast](#method-broadcast) [cache](#method-cache) [class_uses_recursive](#method-class-uses-recursive) [collect](#method-collect) [config](#method-config) [cookie](#method-cookie) [csrf_field](#method-csrf-field) [csrf_token](#method-csrf-token) [decrypt](#method-decrypt) [dd](#method-dd) [dispatch](#method-dispatch) [dump](#method-dump) [encrypt](#method-encrypt) [env](#method-env) [event](#method-event) [filled](#method-filled) [info](#method-info) [logger](#method-logger) [method_field](#method-method-field) [now](#method-now) [old](#method-old) [optional](#method-optional) [policy](#method-policy) [redirect](#method-redirect) [report](#method-report) [request](#method-request) [rescue](#method-rescue) [resolve](#method-resolve) [response](#method-response) [retry](#method-retry) [session](#method-session) [tap](#method-tap) [throw_if](#method-throw-if) [throw_unless](#method-throw-unless) [today](#method-today) [trait_uses_recursive](#method-trait-uses-recursive) [transform](#method-transform) [validator](#method-validator) [value](#method-value) [view](#method-view) [with](#method-with)"
msgstr "[abort](#method-abort) [abort_if](#method-abort-if) [abort_unless](#method-abort-unless) [app](#method-app) [auth](#method-auth) [back](#method-back) [bcrypt](#method-bcrypt) [blank](#method-blank) [broadcast](#method-broadcast) [cache](#method-cache) [class_uses_recursive](#method-class-uses-recursive) [collect](#method-collect) [config](#method-config) [cookie](#method-cookie) [csrf_field](#method-csrf-field) [csrf_token](#method-csrf-token) [decrypt](#method-decrypt) [dd](#method-dd) [dispatch](#method-dispatch) [dump](#method-dump) [encrypt](#method-encrypt) [env](#method-env) [event](#method-event) [filled](#method-filled) [info](#method-info) [logger](#method-logger) [method_field](#method-method-field) [now](#method-now) [old](#method-old) [optional](#method-optional) [policy](#method-policy) [redirect](#method-redirect) [report](#method-report) [request](#method-request) [rescue](#method-rescue) [resolve](#method-resolve) [response](#method-response) [retry](#method-retry) [session](#method-session) [tap](#method-tap) [throw_if](#method-throw-if) [throw_unless](#method-throw-unless) [today](#method-today) [trait_uses_recursive](#method-trait-uses-recursive) [transform](#method-transform) [validator](#method-validator) [value](#method-value) [view](#method-view) [with](#method-with)"

#: docs/9.x/helpers.md:block 106 (paragraph)
msgid "The `Arr::isAssoc` method returns `true` if the given array is an associative array. An array is considered \"associative\" if it doesn't have sequential numerical keys beginning with zero:"
msgstr "若給定的陣列為^[關聯式陣列](Associative Array)，`Arr::isAssoc` 方法會回傳 `true`。當某個陣列的索引鍵不是以 0 開始依序排列的數字時，就是「關聯式」的陣列："

#: docs/9.x/helpers.md:block 109 (header)
msgid "`Arr::isList()` {.collection-method}"
msgstr "`Arr::isList()` {.collection-method}"

#: docs/9.x/helpers.md:block 110 (paragraph)
msgid "The `Arr::isList` method returns `true` if the given array's keys are sequential integers beginning from zero:"
msgstr "若給定陣列的索引鍵是從 0 開始的有序整數的話，`Arr::isList` 方法會回傳 `true`："

#: docs/9.x/helpers.md:block 111 (code)
msgid "use Illuminate\\Support\\Arr;\n\n"
"$isAssoc = Arr::isList(['foo', 'bar', 'baz']);\n\n"
"// true\n\n"
"$isAssoc = Arr::isList(['product' => ['name' => 'Desk', 'price' => 100]]);\n\n"
"// false\n"
msgstr "use Illuminate\\Support\\Arr;\n\n"
"$isAssoc = Arr::isList(['foo', 'bar', 'baz']);\n\n"
"// true\n\n"
"$isAssoc = Arr::isList(['product' => ['name' => 'Desk', 'price' => 100]]);\n\n"
"// false\n"

#: docs/9.x/helpers.md:block 462 (header)
msgid "`Str::swap()` {.collection-method}"
msgstr "`Str::swap()` {.collection-method}"

#: docs/9.x/helpers.md:block 463 (paragraph)
msgid "The `Str::swap` method replaces multiple values in the given string using PHP's `strtr` function:"
msgstr "`Str::swap` 方法使用 PHP 的 `strtr` 函式來取代給定字串中的多個值："

#: docs/9.x/helpers.md:block 464 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::swap([\n"
"    'Tacos' => 'Burritos',\n"
"    'great' => 'fantastic',\n"
"], 'Tacos are great!');\n\n"
"// Burritos are fantastic!\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::swap([\n"
"    'Tacos' => 'Burritos',\n"
"    'great' => 'fantastic',\n"
"], 'Tacos are great!');\n\n"
"// Burritos are fantastic!\n"

#: docs/9.x/helpers.md:block 494 (header)
msgid "`str()` {.collection-method}"
msgstr "`str()` {.collection-method}"

#: docs/9.x/helpers.md:block 495 (paragraph)
msgid "The `str` function returns a new `Illuminate\\Support\\Stringable` instance of the given string. This function is equivalent to the `Str::of` method:"
msgstr "`str` 會回傳給定字串的 `Illuminate\\Support\\Stringable` 實體。這個函式與 `Str::of` 方法等價："

#: docs/9.x/helpers.md:block 496 (code)
msgid "$string = str('Taylor')->append(' Otwell');\n\n"
"// 'Taylor Otwell'\n"
msgstr "$string = str('Taylor')->append(' Otwell');\n\n"
"// 'Taylor Otwell'\n"

#: docs/9.x/helpers.md:block 497 (paragraph)
msgid "If no argument is provided to the `str` function, the function returns an instance of `Illuminate\\Support\\Str`:"
msgstr "若沒有提供引數給 `str` 函式，則 `str` 會回傳一個 `Illuminate\\Support\\Str` 的實體："

#: docs/9.x/helpers.md:block 498 (code)
msgid "$snake = str()->snake('FooBar');\n\n"
"// 'foo_bar'\n"
msgstr "$snake = str()->snake('FooBar');\n\n"
"// 'foo_bar'\n"

#: docs/9.x/helpers.md:block 742 (paragraph)
msgid "The `substrReplace` method replaces text within a portion of a string, starting at the position specified by the second argument and replacing the number of characters specified by the third argument. Passing `0` to the method's third argument will insert the string at the specified position without replacing any of the existing characters in the string:"
msgstr "`substrReplace` 方法在字串中取代其中一段文字，第二個引數指定起始位置，並以第三個引數來指定要取代的字元數。若第三個引數傳入 `0`，則會在指定位置插入字串，而不取代字串中現有的字元："

#: docs/9.x/helpers.md:block 745 (header)
msgid "`swap` {.collection-method}"
msgstr "`swap` {.collection-method}"

#: docs/9.x/helpers.md:block 746 (paragraph)
msgid "The `swap` method replaces multiple values in the string using PHP's `strtr` function:"
msgstr "`swap` 方法使用 PHP 的 `strtr` 函式來取代給定字串中的多個值："

#: docs/9.x/helpers.md:block 747 (code)
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Tacos are great!')\n"
"    ->swap([\n"
"        'Tacos' => 'Burritos',\n"
"        'great' => 'fantastic',\n"
"    ]);\n\n"
"// Burritos are fantastic!\n"
msgstr "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Tacos are great!')\n"
"    ->swap([\n"
"        'Tacos' => 'Burritos',\n"
"        'great' => 'fantastic',\n"
"    ]);\n\n"
"// Burritos are fantastic!\n"

#: docs/9.x/helpers.md:block 864 (header)
msgid "`to_route()` {.collection-method}"
msgstr "`to_route()` {.collection-method}"

#: docs/9.x/helpers.md:block 865 (paragraph)
msgid "The `to_route` function generates a [redirect HTTP response](/docs/{{version}}/responses#redirects) for a given [named route](/docs/{{version}}/routing#named-routes):"
msgstr "`to_route` 函式為給定的[命名 Route](/docs/{{version}}/routing#named-routes) 產生一個[重新導向的 HTTP Response](/docs/{{version}}/responses#redirects)："

#: docs/9.x/helpers.md:block 866 (code)
msgid "return to_route('users.show', ['user' => 1]);\n"
msgstr "return to_route('users.show', ['user' => 1]);\n"

#: docs/9.x/helpers.md:block 867 (paragraph)
msgid "If necessary, you may pass the HTTP status code that should be assigned to the redirect and any additional response headers as the third and fourth arguments to the `to_route` method:"
msgstr "若有需要，也可以傳入一個用於跳轉的 HTTP 狀態碼以及一些額外的回應標頭作為 `to_route` 方法的第三與第四個引數："

#: docs/9.x/helpers.md:block 868 (code)
msgid "return to_route('users.show', ['user' => 1], 302, ['X-Framework' => 'Laravel']);\n"
msgstr "return to_route('users.show', ['user' => 1], 302, ['X-Framework' => 'Laravel']);\n"

#: docs/9.x/helpers.md:block 955 (header)
msgid "`decrypt()` {.collection-method}"
msgstr "`decrypt()` {.collection-method}"

#: docs/9.x/helpers.md:block 956 (paragraph)
msgid "The `decrypt` function [decrypts](/docs/{{version}}/encryption) the given value. You may use this function as an alternative to the `Crypt` facade:"
msgstr "`decrypt` 函式會[解密](/docs/{{version}}/encryption)給定的值。可使用這個方法作為 `Crypt` Facade 的替代。"

#: docs/9.x/helpers.md:block 957 (code)
msgid "$password = decrypt($value);\n"
msgstr "$password = decrypt($value);\n"

#: docs/9.x/helpers.md:block 973 (header)
msgid "`encrypt()` {.collection-method}"
msgstr "`encrypt()` {.collection-method}"

#: docs/9.x/helpers.md:block 974 (paragraph)
msgid "The `encrypt` function [encrypts](/docs/{{version}}/encryption) the given value. You may use this function as an alternative to the `Crypt` facade:"
msgstr "`encrypt` 函式會[加密](/docs/{{version}}/encryption)給定的值。可使用這個方法作為 `Crypt` Facade 的替代："

#: docs/9.x/helpers.md:block 975 (code)
msgid "$secret = encrypt('my-secret-value');\n"
msgstr "$secret = encrypt('my-secret-value');\n"

#: docs/9.x/helpers.md:block 1057 (code)
msgid "return retry(5, function () {\n"
"    // Attempt 5 times while resting 100ms between attempts...\n"
"}, 100);\n"
msgstr "return retry(5, function () {\n"
"    // 嘗試 5 次，每次嘗試間暫停 100ms...\n"
"}, 100);\n"

#: docs/9.x/helpers.md:block 1058 (paragraph)
msgid "If you would like to manually calculate the number of milliseconds to sleep between attempts, you may pass a closure as the third argument to the `retry` function:"
msgstr "若想自動手動計算每次長時間要暫停的毫秒數，可傳入閉包作為第三個引數給 `retry` 函式："

#: docs/9.x/helpers.md:block 1060 (paragraph)
msgid "For convenience, you may provide an array as the first argument to the `retry` function. This array will be used to determine how many milliseconds to sleep between subsequent attempts:"
msgstr "為了方便起見，也可以提供陣列作為 `retry` 函式的第一個引數。會使用這個真累來判斷每次嘗試間要暫停多久："

#: docs/9.x/helpers.md:block 1061 (code)
msgid "return retry([100, 200] function () {\n"
"    // Sleep for 100ms on first retry, 200ms on second retry...\n"
"});\n"
msgstr "return retry([100, 200] function () {\n"
"    // 第一次嘗試時休息 100ms，第二次嘗試時休息 200ms...\n"
"});\n"

#: docs/master/helpers.md:block 22 (paragraph)
msgid "[__](#method-__) [class_basename](#method-class-basename) [e](#method-e) [preg_replace_array](#method-preg-replace-array) [Str::after](#method-str-after) [Str::afterLast](#method-str-after-last) [Str::ascii](#method-str-ascii) [Str::before](#method-str-before) [Str::beforeLast](#method-str-before-last) [Str::between](#method-str-between) [Str::camel](#method-camel-case) [Str::contains](#method-str-contains) [Str::containsAll](#method-str-contains-all) [Str::endsWith](#method-ends-with) [Str::finish](#method-str-finish) [Str::headline](#method-str-headline) [Str::is](#method-str-is) [Str::isAscii](#method-str-is-ascii) [Str::isUuid](#method-str-is-uuid) [Str::kebab](#method-kebab-case) [Str::length](#method-str-length) [Str::limit](#method-str-limit) [Str::lower](#method-str-lower) [Str::markdown](#method-str-markdown) [Str::mask](#method-str-mask) [Str::orderedUuid](#method-str-ordered-uuid) [Str::padBoth](#method-str-padboth) [Str::padLeft](#method-str-padleft) [Str::padRight](#method-str-padright) [Str::plural](#method-str-plural) [Str::pluralStudly](#method-str-plural-studly) [Str::random](#method-str-random) [Str::remove](#method-str-remove) [Str::replace](#method-str-replace) [Str::replaceArray](#method-str-replace-array) [Str::replaceFirst](#method-str-replace-first) [Str::replaceLast](#method-str-replace-last) [Str::reverse](#method-str-reverse) [Str::singular](#method-str-singular) [Str::slug](#method-str-slug) [Str::snake](#method-snake-case) [Str::start](#method-str-start) [Str::startsWith](#method-starts-with) [Str::studly](#method-studly-case) [Str::substr](#method-str-substr) [Str::substrCount](#method-str-substrcount) [Str::substrReplace](#method-str-substrreplace) [Str::title](#method-title-case) [Str::toHtmlString](#method-str-to-html-string) [Str::ucfirst](#method-str-ucfirst) [Str::upper](#method-str-upper) [Str::uuid](#method-str-uuid) [Str::wordCount](#method-str-word-count) [Str::words](#method-str-words) [str](#method-str) [trans](#method-trans) [trans_choice](#method-trans-choice)"
msgstr "[__](#method-__) [class_basename](#method-class-basename) [e](#method-e) [preg_replace_array](#method-preg-replace-array) [Str::after](#method-str-after) [Str::afterLast](#method-str-after-last) [Str::ascii](#method-str-ascii) [Str::before](#method-str-before) [Str::beforeLast](#method-str-before-last) [Str::between](#method-str-between) [Str::camel](#method-camel-case) [Str::contains](#method-str-contains) [Str::containsAll](#method-str-contains-all) [Str::endsWith](#method-ends-with) [Str::finish](#method-str-finish) [Str::headline](#method-str-headline) [Str::is](#method-str-is) [Str::isAscii](#method-str-is-ascii) [Str::isUuid](#method-str-is-uuid) [Str::kebab](#method-kebab-case) [Str::length](#method-str-length) [Str::limit](#method-str-limit) [Str::lower](#method-str-lower) [Str::markdown](#method-str-markdown) [Str::mask](#method-str-mask) [Str::orderedUuid](#method-str-ordered-uuid) [Str::padBoth](#method-str-padboth) [Str::padLeft](#method-str-padleft) [Str::padRight](#method-str-padright) [Str::plural](#method-str-plural) [Str::pluralStudly](#method-str-plural-studly) [Str::random](#method-str-random) [Str::remove](#method-str-remove) [Str::replace](#method-str-replace) [Str::replaceArray](#method-str-replace-array) [Str::replaceFirst](#method-str-replace-first) [Str::replaceLast](#method-str-replace-last) [Str::reverse](#method-str-reverse) [Str::singular](#method-str-singular) [Str::slug](#method-str-slug) [Str::snake](#method-snake-case) [Str::start](#method-str-start) [Str::startsWith](#method-starts-with) [Str::studly](#method-studly-case) [Str::substr](#method-str-substr) [Str::substrCount](#method-str-substrcount) [Str::substrReplace](#method-str-substrreplace) [Str::title](#method-title-case) [Str::toHtmlString](#method-str-to-html-string) [Str::ucfirst](#method-str-ucfirst) [Str::upper](#method-str-upper) [Str::uuid](#method-str-uuid) [Str::wordCount](#method-str-word-count) [Str::words](#method-str-words) [str](#method-str) [trans](#method-trans) [trans_choice](#method-trans-choice)"

