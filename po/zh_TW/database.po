msgid ""
msgstr ""
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/templates/database.pot\n"
"X-Crowdin-File-ID: 43\n"
"Project-Id-Version: laravel-docs\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"PO-Revision-Date: 2024-11-30 06:47\n"

#: ./docs/8.x/database.md:1
#: ./docs/9.x/database.md:1
#: ./docs/10.x/database.md:1
#: ./docs/11.x/database.md:1
#: ./docs/master/database.md:1
msgctxt "H1"
msgid "Database: Getting Started"
msgstr ""

#: ./docs/8.x/database.md:3
#: ./docs/9.x/database.md:3
#: ./docs/10.x/database.md:3
#: ./docs/11.x/database.md:3
#: ./docs/master/database.md:3
msgctxt "P"
msgid "[Introduction](#introduction)"
msgstr ""

#: ./docs/8.x/database.md:4
#: ./docs/9.x/database.md:4
#: ./docs/10.x/database.md:4
#: ./docs/11.x/database.md:4
#: ./docs/master/database.md:4
msgctxt "P"
msgid "[Configuration](#configuration)"
msgstr ""

#: ./docs/10.x/database.md:5
#: ./docs/11.x/database.md:5
#: ./docs/master/database.md:5
msgctxt "P"
msgid "[Read and Write Connections](#read-and-write-connections)"
msgstr ""

#: ./docs/8.x/database.md:5
#: ./docs/9.x/database.md:5
msgctxt "P"
msgid "[Read & Write Connections](#read-and-write-connections)"
msgstr ""

#: ./docs/8.x/database.md:6
#: ./docs/9.x/database.md:6
#: ./docs/10.x/database.md:6
#: ./docs/11.x/database.md:6
#: ./docs/master/database.md:6
msgctxt "P"
msgid "[Running SQL Queries](#running-queries)"
msgstr ""

#: ./docs/8.x/database.md:7
#: ./docs/9.x/database.md:7
#: ./docs/10.x/database.md:7
#: ./docs/11.x/database.md:7
#: ./docs/master/database.md:7
msgctxt "P"
msgid "[Using Multiple Database Connections](#using-multiple-database-connections)"
msgstr ""

#: ./docs/10.x/database.md:8
#: ./docs/11.x/database.md:8
#: ./docs/master/database.md:8
msgctxt "P"
msgid "[Listening for Query Events](#listening-for-query-events)"
msgstr ""

#: ./docs/8.x/database.md:8
#: ./docs/9.x/database.md:8
msgctxt "P"
msgid "[Listening For Query Events](#listening-for-query-events)"
msgstr ""

#: ./docs/8.x/database.md:9
#: ./docs/9.x/database.md:10
#: ./docs/10.x/database.md:10
#: ./docs/11.x/database.md:10
#: ./docs/master/database.md:10
msgctxt "P"
msgid "[Database Transactions](#database-transactions)"
msgstr ""

#: ./docs/9.x/database.md:9
#: ./docs/10.x/database.md:9
#: ./docs/11.x/database.md:9
#: ./docs/master/database.md:9
msgctxt "P"
msgid "[Monitoring Cumulative Query Time](#monitoring-cumulative-query-time)"
msgstr ""

#: ./docs/8.x/database.md:10
#: ./docs/9.x/database.md:11
msgctxt "P"
msgid "[Connecting To The Database CLI](#connecting-to-the-database-cli)"
msgstr ""

#: ./docs/10.x/database.md:11
#: ./docs/11.x/database.md:11
#: ./docs/master/database.md:11
msgctxt "P"
msgid "[Connecting to the Database CLI](#connecting-to-the-database-cli)"
msgstr ""

#: ./docs/8.x/database.md:12
#: ./docs/9.x/database.md:15
#: ./docs/10.x/database.md:15
#: ./docs/11.x/database.md:15
#: ./docs/master/database.md:15
#~ msgctxt "P"
#~ msgid "<a name=\"introduction\"></a>"
#~ msgstr ""

#: ./docs/9.x/database.md:12
#: ./docs/10.x/database.md:12
#: ./docs/11.x/database.md:12
#: ./docs/master/database.md:12
msgctxt "P"
msgid "[Inspecting Your Databases](#inspecting-your-databases)"
msgstr ""

#: ./docs/8.x/database.md:13
#: ./docs/9.x/database.md:16
#: ./docs/10.x/database.md:16
#: ./docs/11.x/database.md:16
#: ./docs/master/database.md:16
msgctxt "H2"
msgid "Introduction"
msgstr ""

#: ./docs/9.x/database.md:13
#: ./docs/10.x/database.md:13
#: ./docs/11.x/database.md:13
#: ./docs/master/database.md:13
msgctxt "P"
msgid "[Monitoring Your Databases](#monitoring-your-databases)"
msgstr ""

#: ./docs/8.x/database.md:15
#: ./docs/9.x/database.md:18
#: ./docs/10.x/database.md:18
#: ./docs/11.x/database.md:18
#: ./docs/master/database.md:18
msgctxt "P"
msgid "Almost every modern web application interacts with a database. Laravel makes interacting with databases extremely simple across a variety of supported databases using raw SQL, a [fluent query builder](/docs/{{version}}/queries), and the [Eloquent ORM](/docs/{{version}}/eloquent). Currently, Laravel provides first-party support for five databases:"
msgstr ""

#: ./docs/8.x/database.md:19
msgctxt "P"
msgid "MariaDB 10.2+ ([Version Policy](https://mariadb.org/about/#maintenance-policy))"
msgstr ""

#: ./docs/8.x/database.md:20
#: ./docs/9.x/database.md:23
#: ./docs/10.x/database.md:23
#: ./docs/11.x/database.md:23
#: ./docs/master/database.md:23
msgctxt "P"
msgid "MySQL 5.7+ ([Version Policy](https://en.wikipedia.org/wiki/MySQL#Release_history))"
msgstr ""

#: ./docs/8.x/database.md:21
msgctxt "P"
msgid "PostgreSQL 9.6+ ([Version Policy](https://www.postgresql.org/support/versioning/))"
msgstr ""

#: ./docs/10.x/database.md:22
msgctxt "P"
msgid "MariaDB 10.10+ ([Version Policy](https://mariadb.org/about/#maintenance-policy))"
msgstr ""

#: ./docs/8.x/database.md:22
#: ./docs/9.x/database.md:25
#: ./docs/10.x/database.md:25
msgctxt "P"
msgid "SQLite 3.8.8+"
msgstr ""

#: ./docs/9.x/database.md:22
#: ./docs/11.x/database.md:22
#: ./docs/master/database.md:22
msgctxt "P"
msgid "MariaDB 10.3+ ([Version Policy](https://mariadb.org/about/#maintenance-policy))"
msgstr ""

#: ./docs/8.x/database.md:23
#: ./docs/9.x/database.md:26
#: ./docs/10.x/database.md:26
#: ./docs/11.x/database.md:26
#: ./docs/master/database.md:26
msgctxt "P"
msgid "SQL Server 2017+ ([Version Policy](https://docs.microsoft.com/en-us/lifecycle/products/?products=sql-server))"
msgstr ""

#: ./docs/10.x/database.md:24
msgctxt "P"
msgid "PostgreSQL 11.0+ ([Version Policy](https://www.postgresql.org/support/versioning/))"
msgstr ""

#: ./docs/9.x/database.md:24
#: ./docs/11.x/database.md:24
#: ./docs/master/database.md:24
msgctxt "P"
msgid "PostgreSQL 10.0+ ([Version Policy](https://www.postgresql.org/support/versioning/))"
msgstr ""

#: ./docs/11.x/database.md:25
msgctxt "P"
msgid "SQLite 3.26.0+"
msgstr ""

#: ./docs/master/database.md:25
msgctxt "P"
msgid "SQLite 3.35.0+"
msgstr ""

#: ./docs/8.x/database.md:27
#: ./docs/9.x/database.md:30
#: ./docs/10.x/database.md:30
#: ./docs/11.x/database.md:32
#: ./docs/master/database.md:30
#~ msgctxt "P"
#~ msgid "<a name=\"configuration\"></a>"
#~ msgstr ""

#: ./docs/8.x/database.md:28
#: ./docs/9.x/database.md:31
#: ./docs/10.x/database.md:31
#: ./docs/11.x/database.md:33
#: ./docs/master/database.md:31
msgctxt "H3"
msgid "Configuration"
msgstr ""

#: ./docs/11.x/database.md:30
msgctxt "P"
msgid "Additionally, MongoDB is supported via the `mongodb/laravel-mongodb` package, which is officially maintained by MongoDB. Check out the [Laravel MongoDB](https://www.mongodb.com/docs/drivers/php/laravel-mongodb/) documentation for more information."
msgstr ""

#: ./docs/8.x/database.md:30
#: ./docs/9.x/database.md:33
#: ./docs/10.x/database.md:33
#: ./docs/11.x/database.md:35
#: ./docs/master/database.md:33
msgctxt "P"
msgid "The configuration for Laravel's database services is located in your application's `config/database.php` configuration file. In this file, you may define all of your database connections, as well as specify which connection should be used by default. Most of the configuration options within this file are driven by the values of your application's environment variables. Examples for most of Laravel's supported database systems are provided in this file."
msgstr ""

#: ./docs/8.x/database.md:32
#: ./docs/9.x/database.md:35
#: ./docs/10.x/database.md:35
#: ./docs/11.x/database.md:37
#: ./docs/master/database.md:35
msgctxt "P"
msgid "By default, Laravel's sample [environment configuration](/docs/{{version}}/configuration#environment-configuration) is ready to use with [Laravel Sail](/docs/{{version}}/sail), which is a Docker configuration for developing Laravel applications on your local machine. However, you are free to modify your database configuration as needed for your local database."
msgstr ""

#: ./docs/8.x/database.md:34
#: ./docs/9.x/database.md:37
#: ./docs/10.x/database.md:37
#: ./docs/11.x/database.md:39
#: ./docs/master/database.md:37
#~ msgctxt "P"
#~ msgid "<a name=\"sqlite-configuration\"></a>"
#~ msgstr ""

#: ./docs/8.x/database.md:35
#: ./docs/9.x/database.md:38
#: ./docs/10.x/database.md:38
#: ./docs/11.x/database.md:40
#: ./docs/master/database.md:38
msgctxt "H4"
msgid "SQLite Configuration"
msgstr ""

#: ./docs/8.x/database.md:37
#: ./docs/9.x/database.md:40
#: ./docs/10.x/database.md:40
#: ./docs/11.x/database.md:42
#: ./docs/master/database.md:40
msgctxt "P"
msgid "SQLite databases are contained within a single file on your filesystem. You can create a new SQLite database using the `touch` command in your terminal: `touch database/database.sqlite`. After the database has been created, you may easily configure your environment variables to point to this database by placing the absolute path to the database in the `DB_DATABASE` environment variable:"
msgstr ""

#: ./docs/8.x/database.md:39
#: ./docs/9.x/database.md:42
#: ./docs/10.x/database.md:42
#: ./docs/11.x/database.md:44
#: ./docs/master/database.md:42
msgctxt "CODE"
msgid "DB_CONNECTION=sqlite\n"
"DB_DATABASE=/absolute/path/to/database.sqlite"
msgstr ""

#: ./docs/8.x/database.md:42
#: ./docs/9.x/database.md:47
#: ./docs/10.x/database.md:47
msgctxt "P"
msgid "To enable foreign key constraints for SQLite connections, you should set the `DB_FOREIGN_KEYS` environment variable to `true`:"
msgstr ""

#: ./docs/8.x/database.md:44
#: ./docs/9.x/database.md:49
#: ./docs/10.x/database.md:49
msgctxt "CODE"
msgid "DB_FOREIGN_KEYS=true"
msgstr ""

#: ./docs/8.x/database.md:46
#: ./docs/9.x/database.md:53
#: ./docs/10.x/database.md:53
#: ./docs/11.x/database.md:58
#: ./docs/master/database.md:56
#~ msgctxt "P"
#~ msgid "<a name=\"mssql-configuration\"></a>"
#~ msgstr ""

#: ./docs/8.x/database.md:47
#: ./docs/9.x/database.md:54
#: ./docs/10.x/database.md:54
#: ./docs/11.x/database.md:59
#: ./docs/master/database.md:57
msgctxt "H4"
msgid "Microsoft SQL Server Configuration"
msgstr ""

#: ./docs/11.x/database.md:49
#: ./docs/master/database.md:47
msgctxt "P"
msgid "By default, foreign key constraints are enabled for SQLite connections. If you would like to disable them, you should set the `DB_FOREIGN_KEYS` environment variable to `false`:"
msgstr ""

#: ./docs/8.x/database.md:49
#: ./docs/9.x/database.md:56
#: ./docs/10.x/database.md:56
#: ./docs/11.x/database.md:61
#: ./docs/master/database.md:59
msgctxt "P"
msgid "To use a Microsoft SQL Server database, you should ensure that you have the `sqlsrv` and `pdo_sqlsrv` PHP extensions installed as well as any dependencies they may require such as the Microsoft SQL ODBC driver."
msgstr ""

#: ./docs/11.x/database.md:51
#: ./docs/master/database.md:49
msgctxt "CODE: ini"
msgid "DB_FOREIGN_KEYS=false"
msgstr ""

#: ./docs/8.x/database.md:51
#: ./docs/9.x/database.md:58
#: ./docs/10.x/database.md:58
#: ./docs/11.x/database.md:63
#: ./docs/master/database.md:61
#~ msgctxt "P"
#~ msgid "<a name=\"configuration-using-urls\"></a>"
#~ msgstr ""

#: ./docs/8.x/database.md:52
#: ./docs/9.x/database.md:59
#: ./docs/10.x/database.md:59
#: ./docs/11.x/database.md:64
#: ./docs/master/database.md:62
msgctxt "H4"
msgid "Configuration Using URLs"
msgstr ""

#: ./docs/8.x/database.md:54
#: ./docs/9.x/database.md:61
#: ./docs/10.x/database.md:61
#: ./docs/11.x/database.md:66
#: ./docs/master/database.md:64
msgctxt "P"
msgid "Typically, database connections are configured using multiple configuration values such as `host`, `database`, `username`, `password`, etc. Each of these configuration values has its own corresponding environment variable. This means that when configuring your database connection information on a production server, you need to manage several environment variables."
msgstr ""

#: ./docs/11.x/database.md:56
#: ./docs/master/database.md:54
msgctxt "P"
msgid "If you use the [Laravel installer](/docs/{{version}}/installation#creating-a-laravel-project) to create your Laravel application and select SQLite as your database, Laravel will automatically create a `database/database.sqlite` file and run the default [database migrations](/docs/{{version}}/migrations) for you."
msgstr ""

#: ./docs/8.x/database.md:56
#: ./docs/9.x/database.md:63
#: ./docs/10.x/database.md:63
#: ./docs/11.x/database.md:68
#: ./docs/master/database.md:66
msgctxt "P"
msgid "Some managed database providers such as AWS and Heroku provide a single database \"URL\" that contains all of the connection information for the database in a single string. An example database URL may look something like the following:"
msgstr ""

#: ./docs/8.x/database.md:58
#: ./docs/9.x/database.md:65
#: ./docs/10.x/database.md:65
#: ./docs/11.x/database.md:70
#: ./docs/master/database.md:68
msgctxt "CODE: html"
msgid "mysql://root:password@127.0.0.1/forge?charset=UTF-8"
msgstr ""

#: ./docs/8.x/database.md:62
#: ./docs/9.x/database.md:69
#: ./docs/10.x/database.md:69
#: ./docs/11.x/database.md:74
#: ./docs/master/database.md:72
msgctxt "P"
msgid "These URLs typically follow a standard schema convention:"
msgstr ""

#: ./docs/8.x/database.md:64
#: ./docs/9.x/database.md:71
#: ./docs/10.x/database.md:71
#: ./docs/11.x/database.md:76
#: ./docs/master/database.md:74
msgctxt "CODE: html"
msgid "driver://username:password@host:port/database?options"
msgstr ""

#: ./docs/8.x/database.md:68
#: ./docs/9.x/database.md:75
#: ./docs/10.x/database.md:75
#: ./docs/master/database.md:78
msgctxt "P"
msgid "For convenience, Laravel supports these URLs as an alternative to configuring your database with multiple configuration options. If the `url` (or corresponding `DATABASE_URL` environment variable) configuration option is present, it will be used to extract the database connection and credential information."
msgstr ""

#: ./docs/8.x/database.md:70
#: ./docs/9.x/database.md:77
#: ./docs/10.x/database.md:77
#: ./docs/11.x/database.md:82
#: ./docs/master/database.md:80
#~ msgctxt "P"
#~ msgid "<a name=\"read-and-write-connections\"></a>"
#~ msgstr ""

#: ./docs/8.x/database.md:71
#: ./docs/9.x/database.md:78
msgctxt "H3"
msgid "Read & Write Connections"
msgstr ""

#: ./docs/8.x/database.md:73
#: ./docs/9.x/database.md:80
#: ./docs/10.x/database.md:80
#: ./docs/11.x/database.md:85
#: ./docs/master/database.md:83
msgctxt "P"
msgid "Sometimes you may wish to use one database connection for SELECT statements, and another for INSERT, UPDATE, and DELETE statements. Laravel makes this a breeze, and the proper connections will always be used whether you are using raw queries, the query builder, or the Eloquent ORM."
msgstr ""

#: ./docs/8.x/database.md:75
#: ./docs/9.x/database.md:82
#: ./docs/10.x/database.md:82
#: ./docs/11.x/database.md:87
#: ./docs/master/database.md:85
msgctxt "P"
msgid "To see how read / write connections should be configured, let's look at this example:"
msgstr ""

#: ./docs/8.x/database.md:77
#: ./docs/9.x/database.md:84
#: ./docs/10.x/database.md:84
msgctxt "CODE"
msgid "'mysql' => [\n"
"    'read' => [\n"
"        'host' => [\n"
"            '192.168.1.1',\n"
"            '196.168.1.2',\n"
"        ],\n"
"    ],\n"
"    'write' => [\n"
"        'host' => [\n"
"            '196.168.1.3',\n"
"        ],\n"
"    ],\n"
"    'sticky' => true,\n"
"    'driver' => 'mysql',\n"
"    'database' => 'database',\n"
"    'username' => 'root',\n"
"    'password' => '',\n"
"    'charset' => 'utf8mb4',\n"
"    'collation' => 'utf8mb4_unicode_ci',\n"
"    'prefix' => '',\n"
"],"
msgstr ""

#: ./docs/10.x/database.md:78
#: ./docs/11.x/database.md:83
#: ./docs/master/database.md:81
msgctxt "H3"
msgid "Read and Write Connections"
msgstr ""

#: ./docs/11.x/database.md:80
msgctxt "P"
msgid "For convenience, Laravel supports these URLs as an alternative to configuring your database with multiple configuration options. If the `url` (or corresponding `DB_URL` environment variable) configuration option is present, it will be used to extract the database connection and credential information."
msgstr ""

#: ./docs/master/database.md:87
msgctxt "CODE"
msgid "'mysql' => [\n"
"    'read' => [\n"
"        'host' => [\n"
"            '192.168.1.1',\n"
"            '196.168.1.2',\n"
"        ],\n"
"    ],\n"
"    'write' => [\n"
"        'host' => [\n"
"            '196.168.1.3',\n"
"        ],\n"
"    ],\n"
"    'sticky' => true,\n\n"
"    'database' => env('DB_DATABASE', 'laravel'),\n"
"    'username' => env('DB_USERNAME', 'root'),\n"
"    'password' => env('DB_PASSWORD', ''),\n"
"    'unix_socket' => env('DB_SOCKET', ''),\n"
"    'charset' => env('DB_CHARSET', 'utf8mb4'),\n"
"    'collation' => env('DB_COLLATION', 'utf8mb4_0900_ai_ci'),\n"
"    'prefix' => '',\n"
"    'prefix_indexes' => true,\n"
"    'strict' => true,\n"
"    'engine' => null,\n"
"    'options' => extension_loaded('pdo_mysql') ? array_filter([\n"
"        PDO::MYSQL_ATTR_SSL_CA => env('MYSQL_ATTR_SSL_CA'),\n"
"    ]) : [],\n"
"],"
msgstr ""

#: ./docs/11.x/database.md:89
msgctxt "CODE"
msgid "'mysql' => [\n"
"    'read' => [\n"
"        'host' => [\n"
"            '192.168.1.1',\n"
"            '196.168.1.2',\n"
"        ],\n"
"    ],\n"
"    'write' => [\n"
"        'host' => [\n"
"            '196.168.1.3',\n"
"        ],\n"
"    ],\n"
"    'sticky' => true,\n\n"
"    'database' => env('DB_DATABASE', 'laravel'),\n"
"    'username' => env('DB_USERNAME', 'root'),\n"
"    'password' => env('DB_PASSWORD', ''),\n"
"    'unix_socket' => env('DB_SOCKET', ''),\n"
"    'charset' => env('DB_CHARSET', 'utf8mb4'),\n"
"    'collation' => env('DB_COLLATION', 'utf8mb4_unicode_ci'),\n"
"    'prefix' => '',\n"
"    'prefix_indexes' => true,\n"
"    'strict' => true,\n"
"    'engine' => null,\n"
"    'options' => extension_loaded('pdo_mysql') ? array_filter([\n"
"        PDO::MYSQL_ATTR_SSL_CA => env('MYSQL_ATTR_SSL_CA'),\n"
"    ]) : [],\n"
"],"
msgstr ""

#: ./docs/8.x/database.md:99
#: ./docs/9.x/database.md:106
#: ./docs/10.x/database.md:106
#: ./docs/11.x/database.md:118
#: ./docs/master/database.md:116
msgctxt "P"
msgid "Note that three keys have been added to the configuration array: `read`, `write` and `sticky`. The `read` and `write` keys have array values containing a single key: `host`. The rest of the database options for the `read` and `write` connections will be merged from the main `mysql` configuration array."
msgstr ""

#: ./docs/8.x/database.md:101
#: ./docs/9.x/database.md:108
#: ./docs/10.x/database.md:108
#: ./docs/11.x/database.md:120
#: ./docs/master/database.md:118
msgctxt "P"
msgid "You only need to place items in the `read` and `write` arrays if you wish to override the values from the main `mysql` array. So, in this case, `192.168.1.1` will be used as the host for the \"read\" connection, while `192.168.1.3` will be used for the \"write\" connection. The database credentials, prefix, character set, and all other options in the main `mysql` array will be shared across both connections. When multiple values exist in the `host` configuration array, a database host will be randomly chosen for each request."
msgstr ""

#: ./docs/8.x/database.md:103
#: ./docs/9.x/database.md:110
#: ./docs/10.x/database.md:110
#: ./docs/11.x/database.md:122
#: ./docs/master/database.md:120
#~ msgctxt "P"
#~ msgid "<a name=\"the-sticky-option\"></a>"
#~ msgstr ""

#: ./docs/8.x/database.md:104
#: ./docs/9.x/database.md:111
#: ./docs/10.x/database.md:111
#: ./docs/11.x/database.md:123
#: ./docs/master/database.md:121
msgctxt "H4"
msgid "The `sticky` Option"
msgstr ""

#: ./docs/8.x/database.md:106
#: ./docs/9.x/database.md:113
#: ./docs/10.x/database.md:113
#: ./docs/11.x/database.md:125
#: ./docs/master/database.md:123
msgctxt "P"
msgid "The `sticky` option is an *optional* value that can be used to allow the immediate reading of records that have been written to the database during the current request cycle. If the `sticky` option is enabled and a \"write\" operation has been performed against the database during the current request cycle, any further \"read\" operations will use the \"write\" connection. This ensures that any data written during the request cycle can be immediately read back from the database during that same request. It is up to you to decide if this is the desired behavior for your application."
msgstr ""

#: ./docs/8.x/database.md:108
#: ./docs/9.x/database.md:115
#: ./docs/10.x/database.md:115
#: ./docs/11.x/database.md:127
#: ./docs/master/database.md:125
#~ msgctxt "P"
#~ msgid "<a name=\"running-queries\"></a>"
#~ msgstr ""

#: ./docs/8.x/database.md:109
#: ./docs/9.x/database.md:116
#: ./docs/10.x/database.md:116
#: ./docs/11.x/database.md:128
#: ./docs/master/database.md:126
msgctxt "H2"
msgid "Running SQL Queries"
msgstr ""

#: ./docs/8.x/database.md:111
#: ./docs/9.x/database.md:118
#: ./docs/10.x/database.md:118
#: ./docs/11.x/database.md:130
#: ./docs/master/database.md:128
msgctxt "P"
msgid "Once you have configured your database connection, you may run queries using the `DB` facade. The `DB` facade provides methods for each type of query: `select`, `update`, `insert`, `delete`, and `statement`."
msgstr ""

#: ./docs/8.x/database.md:113
#: ./docs/9.x/database.md:120
#: ./docs/10.x/database.md:120
#: ./docs/11.x/database.md:132
#: ./docs/master/database.md:130
#~ msgctxt "P"
#~ msgid "<a name=\"running-a-select-query\"></a>"
#~ msgstr ""

#: ./docs/8.x/database.md:114
#: ./docs/9.x/database.md:121
msgctxt "H4"
msgid "Running A Select Query"
msgstr ""

#: ./docs/8.x/database.md:116
#: ./docs/9.x/database.md:123
#: ./docs/10.x/database.md:123
#: ./docs/11.x/database.md:135
#: ./docs/master/database.md:133
msgctxt "P"
msgid "To run a basic SELECT query, you may use the `select` method on the `DB` facade:"
msgstr ""

#: ./docs/8.x/database.md:118
#: ./docs/9.x/database.md:125
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Http\\Controllers;\n\n"
"use App\\Http\\Controllers\\Controller;\n"
"use Illuminate\\Support\\Facades\\DB;\n\n"
"class UserController extends Controller\n"
"{\n"
"    /**\n"
"     * Show a list of all of the application's users.\n"
"     *\n"
"     * @return \\Illuminate\\Http\\Response\n"
"     */\n"
"    public function index()\n"
"    {\n"
"        $users = DB::select('select * from users where active = ?', [1]);\n\n"
"        return view('user.index', ['users' => $users]);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/10.x/database.md:121
#: ./docs/11.x/database.md:133
#: ./docs/master/database.md:131
msgctxt "H4"
msgid "Running a Select Query"
msgstr ""

#: ./docs/10.x/database.md:125
#: ./docs/11.x/database.md:137
#: ./docs/master/database.md:135
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Http\\Controllers;\n\n"
"use App\\Http\\Controllers\\Controller;\n"
"use Illuminate\\Support\\Facades\\DB;\n"
"use Illuminate\\View\\View;\n\n"
"class UserController extends Controller\n"
"{\n"
"    /**\n"
"     * Show a list of all of the application's users.\n"
"     */\n"
"    public function index(): View\n"
"    {\n"
"        $users = DB::select('select * from users where active = ?', [1]);\n\n"
"        return view('user.index', ['users' => $users]);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/8.x/database.md:140
#: ./docs/9.x/database.md:147
#: ./docs/10.x/database.md:146
#: ./docs/11.x/database.md:158
#: ./docs/master/database.md:156
msgctxt "P"
msgid "The first argument passed to the `select` method is the SQL query, while the second argument is any parameter bindings that need to be bound to the query. Typically, these are the values of the `where` clause constraints. Parameter binding provides protection against SQL injection."
msgstr ""

#: ./docs/8.x/database.md:142
#: ./docs/9.x/database.md:149
#: ./docs/10.x/database.md:148
#: ./docs/11.x/database.md:160
#: ./docs/master/database.md:158
msgctxt "P"
msgid "The `select` method will always return an `array` of results. Each result within the array will be a PHP `stdClass` object representing a record from the database:"
msgstr ""

#: ./docs/8.x/database.md:144
#: ./docs/9.x/database.md:151
#: ./docs/10.x/database.md:150
#: ./docs/11.x/database.md:162
#: ./docs/master/database.md:160
msgctxt "CODE"
msgid "use Illuminate\\Support\\Facades\\DB;\n\n"
"$users = DB::select('select * from users');\n\n"
"foreach ($users as $user) {\n"
"    echo $user->name;\n"
"}"
msgstr ""

#: ./docs/8.x/database.md:152
#: ./docs/9.x/database.md:168
#: ./docs/10.x/database.md:176
#: ./docs/11.x/database.md:188
#: ./docs/master/database.md:186
#~ msgctxt "P"
#~ msgid "<a name=\"using-named-bindings\"></a>"
#~ msgstr ""

#: ./docs/8.x/database.md:153
#: ./docs/9.x/database.md:169
#: ./docs/10.x/database.md:177
#: ./docs/11.x/database.md:189
#: ./docs/master/database.md:187
msgctxt "H4"
msgid "Using Named Bindings"
msgstr ""

#: ./docs/8.x/database.md:155
#: ./docs/9.x/database.md:171
#: ./docs/10.x/database.md:179
#: ./docs/11.x/database.md:191
#: ./docs/master/database.md:189
msgctxt "P"
msgid "Instead of using `?` to represent your parameter bindings, you may execute a query using named bindings:"
msgstr ""

#: ./docs/8.x/database.md:157
#: ./docs/9.x/database.md:173
#: ./docs/10.x/database.md:181
#: ./docs/11.x/database.md:193
#: ./docs/master/database.md:191
msgctxt "CODE"
msgid "$results = DB::select('select * from users where id = :id', ['id' => 1]);"
msgstr ""

#: ./docs/8.x/database.md:159
#: ./docs/9.x/database.md:175
#: ./docs/10.x/database.md:183
#: ./docs/11.x/database.md:195
#: ./docs/master/database.md:193
#~ msgctxt "P"
#~ msgid "<a name=\"running-an-insert-statement\"></a>"
#~ msgstr ""

#: ./docs/9.x/database.md:159
#: ./docs/10.x/database.md:158
#: ./docs/11.x/database.md:170
#: ./docs/master/database.md:168
#~ msgctxt "P"
#~ msgid "<a name=\"selecting-scalar-values\"></a>"
#~ msgstr ""

#: ./docs/8.x/database.md:160
#: ./docs/9.x/database.md:176
msgctxt "H4"
msgid "Running An Insert Statement"
msgstr ""

#: ./docs/9.x/database.md:160
#: ./docs/10.x/database.md:159
#: ./docs/11.x/database.md:171
#: ./docs/master/database.md:169
msgctxt "H4"
msgid "Selecting Scalar Values"
msgstr ""

#: ./docs/8.x/database.md:162
#: ./docs/9.x/database.md:178
#: ./docs/10.x/database.md:186
#: ./docs/11.x/database.md:198
#: ./docs/master/database.md:196
msgctxt "P"
msgid "To execute an `insert` statement, you may use the `insert` method on the `DB` facade. Like `select`, this method accepts the SQL query as its first argument and bindings as its second argument:"
msgstr ""

#: ./docs/9.x/database.md:162
#: ./docs/10.x/database.md:161
#: ./docs/11.x/database.md:173
#: ./docs/master/database.md:171
msgctxt "P"
msgid "Sometimes your database query may result in a single, scalar value. Instead of being required to retrieve the query's scalar result from a record object, Laravel allows you to retrieve this value directly using the `scalar` method:"
msgstr ""

#: ./docs/8.x/database.md:164
#: ./docs/9.x/database.md:180
#: ./docs/10.x/database.md:188
#: ./docs/11.x/database.md:200
#: ./docs/master/database.md:198
msgctxt "CODE"
msgid "use Illuminate\\Support\\Facades\\DB;\n\n"
"DB::insert('insert into users (id, name) values (?, ?)', [1, 'Marc']);"
msgstr ""

#: ./docs/9.x/database.md:164
#: ./docs/10.x/database.md:163
#: ./docs/11.x/database.md:175
#: ./docs/master/database.md:173
msgctxt "CODE"
msgid "$burgers = DB::scalar(\n"
"    \"select count(case when food = 'burger' then 1 end) as burgers from menu\"\n"
");"
msgstr ""

#: ./docs/10.x/database.md:167
#: ./docs/11.x/database.md:179
#: ./docs/master/database.md:177
#~ msgctxt "P"
#~ msgid "<a name=\"selecting-multiple-result-sets\"></a>"
#~ msgstr ""

#: ./docs/10.x/database.md:168
#: ./docs/11.x/database.md:180
#: ./docs/master/database.md:178
msgctxt "H4"
msgid "Selecting Multiple Result Sets"
msgstr ""

#: ./docs/8.x/database.md:168
#: ./docs/9.x/database.md:184
#: ./docs/10.x/database.md:192
#: ./docs/11.x/database.md:204
#: ./docs/master/database.md:202
#~ msgctxt "P"
#~ msgid "<a name=\"running-an-update-statement\"></a>"
#~ msgstr ""

#: ./docs/8.x/database.md:169
#: ./docs/9.x/database.md:185
msgctxt "H4"
msgid "Running An Update Statement"
msgstr ""

#: ./docs/10.x/database.md:170
#: ./docs/11.x/database.md:182
#: ./docs/master/database.md:180
msgctxt "P"
msgid "If your application calls stored procedures that return multiple result sets, you may use the `selectResultSets` method to retrieve all of the result sets returned by the stored procedure:"
msgstr ""

#: ./docs/8.x/database.md:171
#: ./docs/9.x/database.md:187
#: ./docs/10.x/database.md:195
#: ./docs/11.x/database.md:207
#: ./docs/master/database.md:205
msgctxt "P"
msgid "The `update` method should be used to update existing records in the database. The number of rows affected by the statement is returned by the method:"
msgstr ""

#: ./docs/10.x/database.md:172
#: ./docs/11.x/database.md:184
#: ./docs/master/database.md:182
msgctxt "CODE"
msgid "[$options, $notifications] = DB::selectResultSets(\n"
"    \"CALL get_user_options_and_notifications(?)\", $request->user()->id\n"
");"
msgstr ""

#: ./docs/8.x/database.md:173
#: ./docs/9.x/database.md:189
#: ./docs/10.x/database.md:197
#: ./docs/11.x/database.md:209
#: ./docs/master/database.md:207
msgctxt "CODE"
msgid "use Illuminate\\Support\\Facades\\DB;\n\n"
"$affected = DB::update(\n"
"    'update users set votes = 100 where name = ?',\n"
"    ['Anita']\n"
");"
msgstr ""

#: ./docs/8.x/database.md:180
#: ./docs/9.x/database.md:196
#: ./docs/10.x/database.md:204
#: ./docs/11.x/database.md:216
#: ./docs/master/database.md:214
#~ msgctxt "P"
#~ msgid "<a name=\"running-a-delete-statement\"></a>"
#~ msgstr ""

#: ./docs/8.x/database.md:181
#: ./docs/9.x/database.md:197
msgctxt "H4"
msgid "Running A Delete Statement"
msgstr ""

#: ./docs/8.x/database.md:183
#: ./docs/9.x/database.md:199
#: ./docs/10.x/database.md:207
#: ./docs/11.x/database.md:219
#: ./docs/master/database.md:217
msgctxt "P"
msgid "The `delete` method should be used to delete records from the database. Like `update`, the number of rows affected will be returned by the method:"
msgstr ""

#: ./docs/10.x/database.md:184
#: ./docs/11.x/database.md:196
#: ./docs/master/database.md:194
msgctxt "H4"
msgid "Running an Insert Statement"
msgstr ""

#: ./docs/8.x/database.md:185
#: ./docs/9.x/database.md:201
#: ./docs/10.x/database.md:209
#: ./docs/11.x/database.md:221
#: ./docs/master/database.md:219
msgctxt "CODE"
msgid "use Illuminate\\Support\\Facades\\DB;\n\n"
"$deleted = DB::delete('delete from users');"
msgstr ""

#: ./docs/8.x/database.md:189
#: ./docs/9.x/database.md:205
#: ./docs/10.x/database.md:213
#: ./docs/11.x/database.md:225
#: ./docs/master/database.md:223
#~ msgctxt "P"
#~ msgid "<a name=\"running-a-general-statement\"></a>"
#~ msgstr ""

#: ./docs/8.x/database.md:190
#: ./docs/9.x/database.md:206
msgctxt "H4"
msgid "Running A General Statement"
msgstr ""

#: ./docs/8.x/database.md:192
#: ./docs/9.x/database.md:208
#: ./docs/10.x/database.md:216
#: ./docs/11.x/database.md:228
#: ./docs/master/database.md:226
msgctxt "P"
msgid "Some database statements do not return any value. For these types of operations, you may use the `statement` method on the `DB` facade:"
msgstr ""

#: ./docs/10.x/database.md:193
#: ./docs/11.x/database.md:205
#: ./docs/master/database.md:203
msgctxt "H4"
msgid "Running an Update Statement"
msgstr ""

#: ./docs/8.x/database.md:194
#: ./docs/9.x/database.md:210
#: ./docs/10.x/database.md:218
#: ./docs/11.x/database.md:230
#: ./docs/master/database.md:228
msgctxt "CODE"
msgid "DB::statement('drop table users');"
msgstr ""

#: ./docs/8.x/database.md:196
#: ./docs/9.x/database.md:212
#: ./docs/10.x/database.md:220
#: ./docs/11.x/database.md:232
#: ./docs/master/database.md:230
#~ msgctxt "P"
#~ msgid "<a name=\"running-an-unprepared-statement\"></a>"
#~ msgstr ""

#: ./docs/8.x/database.md:197
#: ./docs/9.x/database.md:213
msgctxt "H4"
msgid "Running An Unprepared Statement"
msgstr ""

#: ./docs/8.x/database.md:199
#: ./docs/9.x/database.md:215
#: ./docs/10.x/database.md:223
#: ./docs/11.x/database.md:235
#: ./docs/master/database.md:233
msgctxt "P"
msgid "Sometimes you may want to execute an SQL statement without binding any values. You may use the `DB` facade's `unprepared` method to accomplish this:"
msgstr ""

#: ./docs/8.x/database.md:201
#: ./docs/9.x/database.md:217
#: ./docs/10.x/database.md:225
#: ./docs/11.x/database.md:237
#: ./docs/master/database.md:235
msgctxt "CODE"
msgid "DB::unprepared('update users set votes = 100 where name = \"Dries\"');"
msgstr ""

#: ./docs/8.x/database.md:203
#: ./docs/9.x/database.md:220
#: ./docs/10.x/database.md:228
#: ./docs/11.x/database.md:240
#: ./docs/master/database.md:238
msgctxt "P"
msgid "Since unprepared statements do not bind parameters, they may be vulnerable to SQL injection. You should never allow user controlled values within an unprepared statement."
msgstr ""

#: ./docs/10.x/database.md:205
#: ./docs/11.x/database.md:217
#: ./docs/master/database.md:215
msgctxt "H4"
msgid "Running a Delete Statement"
msgstr ""

#: ./docs/8.x/database.md:205
#: ./docs/9.x/database.md:222
#: ./docs/10.x/database.md:230
#: ./docs/11.x/database.md:242
#: ./docs/master/database.md:240
#~ msgctxt "P"
#~ msgid "<a name=\"implicit-commits-in-transactions\"></a>"
#~ msgstr ""

#: ./docs/8.x/database.md:206
#: ./docs/9.x/database.md:223
#: ./docs/10.x/database.md:231
#: ./docs/11.x/database.md:243
#: ./docs/master/database.md:241
msgctxt "H4"
msgid "Implicit Commits"
msgstr ""

#: ./docs/8.x/database.md:208
#: ./docs/9.x/database.md:225
#: ./docs/10.x/database.md:233
#: ./docs/11.x/database.md:245
#: ./docs/master/database.md:243
msgctxt "P"
msgid "When using the `DB` facade's `statement` and `unprepared` methods within transactions you must be careful to avoid statements that cause [implicit commits](https://dev.mysql.com/doc/refman/8.0/en/implicit-commit.html). These statements will cause the database engine to indirectly commit the entire transaction, leaving Laravel unaware of the database's transaction level. An example of such a statement is creating a database table:"
msgstr ""

#: ./docs/8.x/database.md:210
#: ./docs/9.x/database.md:227
#: ./docs/10.x/database.md:235
#: ./docs/11.x/database.md:247
#: ./docs/master/database.md:245
msgctxt "CODE"
msgid "DB::unprepared('create table a (col varchar(1) null)');"
msgstr ""

#: ./docs/8.x/database.md:212
#: ./docs/9.x/database.md:229
#: ./docs/10.x/database.md:237
#: ./docs/11.x/database.md:249
#: ./docs/master/database.md:247
msgctxt "P"
msgid "Please refer to the MySQL manual for [a list of all statements](https://dev.mysql.com/doc/refman/8.0/en/implicit-commit.html) that trigger implicit commits."
msgstr ""

#: ./docs/10.x/database.md:214
#: ./docs/11.x/database.md:226
#: ./docs/master/database.md:224
msgctxt "H4"
msgid "Running a General Statement"
msgstr ""

#: ./docs/8.x/database.md:214
#: ./docs/9.x/database.md:231
#: ./docs/10.x/database.md:239
#: ./docs/11.x/database.md:251
#: ./docs/master/database.md:249
#~ msgctxt "P"
#~ msgid "<a name=\"using-multiple-database-connections\"></a>"
#~ msgstr ""

#: ./docs/8.x/database.md:215
#: ./docs/9.x/database.md:232
#: ./docs/10.x/database.md:240
#: ./docs/11.x/database.md:252
#: ./docs/master/database.md:250
msgctxt "H3"
msgid "Using Multiple Database Connections"
msgstr ""

#: ./docs/8.x/database.md:217
#: ./docs/9.x/database.md:234
#: ./docs/10.x/database.md:242
#: ./docs/11.x/database.md:254
#: ./docs/master/database.md:252
msgctxt "P"
msgid "If your application defines multiple connections in your `config/database.php` configuration file, you may access each connection via the `connection` method provided by the `DB` facade. The connection name passed to the `connection` method should correspond to one of the connections listed in your `config/database.php` configuration file or configured at runtime using the `config` helper:"
msgstr ""

#: ./docs/8.x/database.md:219
msgctxt "CODE"
msgid "use Illuminate\\Support\\Facades\\DB;\n\n"
"$users = DB::connection('sqlite')->select(...);"
msgstr ""

#: ./docs/10.x/database.md:221
#: ./docs/11.x/database.md:233
#: ./docs/master/database.md:231
msgctxt "H4"
msgid "Running an Unprepared Statement"
msgstr ""

#: ./docs/8.x/database.md:223
#: ./docs/9.x/database.md:240
#: ./docs/10.x/database.md:248
#: ./docs/11.x/database.md:260
#: ./docs/master/database.md:258
msgctxt "P"
msgid "You may access the raw, underlying PDO instance of a connection using the `getPdo` method on a connection instance:"
msgstr ""

#: ./docs/8.x/database.md:225
#: ./docs/9.x/database.md:242
#: ./docs/10.x/database.md:250
#: ./docs/11.x/database.md:262
#: ./docs/master/database.md:260
msgctxt "CODE"
msgid "$pdo = DB::connection()->getPdo();"
msgstr ""

#: ./docs/8.x/database.md:227
#: ./docs/9.x/database.md:244
#: ./docs/10.x/database.md:252
#: ./docs/11.x/database.md:264
#: ./docs/master/database.md:262
#~ msgctxt "P"
#~ msgid "<a name=\"listening-for-query-events\"></a>"
#~ msgstr ""

#: ./docs/8.x/database.md:228
#: ./docs/9.x/database.md:245
msgctxt "H3"
msgid "Listening For Query Events"
msgstr ""

#: ./docs/8.x/database.md:230
#: ./docs/9.x/database.md:247
#: ./docs/10.x/database.md:255
#: ./docs/11.x/database.md:267
#: ./docs/master/database.md:265
msgctxt "P"
msgid "If you would like to specify a closure that is invoked for each SQL query executed by your application, you may use the `DB` facade's `listen` method. This method can be useful for logging queries or debugging. You may register your query listener closure in the `boot` method of a [service provider](/docs/{{version}}/providers):"
msgstr ""

#: ./docs/8.x/database.md:232
#: ./docs/9.x/database.md:249
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Providers;\n\n"
"use Illuminate\\Support\\Facades\\DB;\n"
"use Illuminate\\Support\\ServiceProvider;\n\n"
"class AppServiceProvider extends ServiceProvider\n"
"{\n"
"    /**\n"
"     * Register any application services.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function register()\n"
"    {\n"
"        //\n"
"    }\n\n"
"    /**\n"
"     * Bootstrap any application services.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function boot()\n"
"    {\n"
"        DB::listen(function ($query) {\n"
"            // $query->sql;\n"
"            // $query->bindings;\n"
"            // $query->time;\n"
"        });\n"
"    }\n"
"}"
msgstr ""

#: ./docs/9.x/database.md:236
#: ./docs/10.x/database.md:244
#: ./docs/11.x/database.md:256
#: ./docs/master/database.md:254
msgctxt "CODE"
msgid "use Illuminate\\Support\\Facades\\DB;\n\n"
"$users = DB::connection('sqlite')->select(/* ... */);"
msgstr ""

#: ./docs/10.x/database.md:253
#: ./docs/11.x/database.md:265
#: ./docs/master/database.md:263
msgctxt "H3"
msgid "Listening for Query Events"
msgstr ""

#: ./docs/10.x/database.md:257
#: ./docs/master/database.md:267
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Providers;\n\n"
"use Illuminate\\Database\\Events\\QueryExecuted;\n"
"use Illuminate\\Support\\Facades\\DB;\n"
"use Illuminate\\Support\\ServiceProvider;\n\n"
"class AppServiceProvider extends ServiceProvider\n"
"{\n"
"    /**\n"
"     * Register any application services.\n"
"     */\n"
"    public function register(): void\n"
"    {\n"
"        // ...\n"
"    }\n\n"
"    /**\n"
"     * Bootstrap any application services.\n"
"     */\n"
"    public function boot(): void\n"
"    {\n"
"        DB::listen(function (QueryExecuted $query) {\n"
"            // $query->sql;\n"
"            // $query->bindings;\n"
"            // $query->time;\n"
"        });\n"
"    }\n"
"}"
msgstr ""

#: ./docs/8.x/database.md:266
#: ./docs/9.x/database.md:322
#: ./docs/10.x/database.md:323
#: ./docs/11.x/database.md:336
#: ./docs/master/database.md:333
#~ msgctxt "P"
#~ msgid "<a name=\"database-transactions\"></a>"
#~ msgstr ""

#: ./docs/8.x/database.md:267
#: ./docs/9.x/database.md:323
#: ./docs/10.x/database.md:324
#: ./docs/11.x/database.md:337
#: ./docs/master/database.md:334
msgctxt "H2"
msgid "Database Transactions"
msgstr ""

#: ./docs/11.x/database.md:269
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Providers;\n\n"
"use Illuminate\\Database\\Events\\QueryExecuted;\n"
"use Illuminate\\Support\\Facades\\DB;\n"
"use Illuminate\\Support\\ServiceProvider;\n\n"
"class AppServiceProvider extends ServiceProvider\n"
"{\n"
"    /**\n"
"     * Register any application services.\n"
"     */\n"
"    public function register(): void\n"
"    {\n"
"        // ...\n"
"    }\n\n"
"    /**\n"
"     * Bootstrap any application services.\n"
"     */\n"
"    public function boot(): void\n"
"    {\n"
"        DB::listen(function (QueryExecuted $query) {\n"
"            // $query->sql;\n"
"            // $query->bindings;\n"
"            // $query->time;\n"
"            // $query->toRawSql();\n"
"        });\n"
"    }\n"
"}"
msgstr ""

#: ./docs/8.x/database.md:269
#: ./docs/9.x/database.md:325
#: ./docs/10.x/database.md:326
#: ./docs/11.x/database.md:339
#: ./docs/master/database.md:336
msgctxt "P"
msgid "You may use the `transaction` method provided by the `DB` facade to run a set of operations within a database transaction. If an exception is thrown within the transaction closure, the transaction will automatically be rolled back and the exception is re-thrown. If the closure executes successfully, the transaction will automatically be committed. You don't need to worry about manually rolling back or committing while using the `transaction` method:"
msgstr ""

#: ./docs/8.x/database.md:271
#: ./docs/9.x/database.md:327
#: ./docs/10.x/database.md:328
#: ./docs/11.x/database.md:341
#: ./docs/master/database.md:338
msgctxt "CODE"
msgid "use Illuminate\\Support\\Facades\\DB;\n\n"
"DB::transaction(function () {\n"
"    DB::update('update users set votes = 1');\n\n"
"    DB::delete('delete from posts');\n"
"});"
msgstr ""

#: ./docs/8.x/database.md:279
#: ./docs/9.x/database.md:335
#: ./docs/10.x/database.md:336
#: ./docs/11.x/database.md:349
#: ./docs/master/database.md:346
#~ msgctxt "P"
#~ msgid "<a name=\"handling-deadlocks\"></a>"
#~ msgstr ""

#: ./docs/8.x/database.md:280
#: ./docs/9.x/database.md:336
#: ./docs/10.x/database.md:337
#: ./docs/11.x/database.md:350
#: ./docs/master/database.md:347
msgctxt "H4"
msgid "Handling Deadlocks"
msgstr ""

#: ./docs/8.x/database.md:282
#: ./docs/9.x/database.md:338
#: ./docs/10.x/database.md:339
#: ./docs/11.x/database.md:352
#: ./docs/master/database.md:349
msgctxt "P"
msgid "The `transaction` method accepts an optional second argument which defines the number of times a transaction should be retried when a deadlock occurs. Once these attempts have been exhausted, an exception will be thrown:"
msgstr ""

#: ./docs/9.x/database.md:283
#: ./docs/10.x/database.md:288
#: ./docs/11.x/database.md:301
#: ./docs/master/database.md:298
#~ msgctxt "P"
#~ msgid "<a name=\"monitoring-cumulative-query-time\"></a>"
#~ msgstr ""

#: ./docs/8.x/database.md:284
#: ./docs/9.x/database.md:340
#: ./docs/10.x/database.md:341
#: ./docs/11.x/database.md:354
#: ./docs/master/database.md:351
msgctxt "CODE"
msgid "use Illuminate\\Support\\Facades\\DB;\n\n"
"DB::transaction(function () {\n"
"    DB::update('update users set votes = 1');\n\n"
"    DB::delete('delete from posts');\n"
"}, 5);"
msgstr ""

#: ./docs/9.x/database.md:284
#: ./docs/10.x/database.md:289
#: ./docs/11.x/database.md:302
#: ./docs/master/database.md:299
msgctxt "H3"
msgid "Monitoring Cumulative Query Time"
msgstr ""

#: ./docs/9.x/database.md:286
#: ./docs/10.x/database.md:291
#: ./docs/11.x/database.md:304
#: ./docs/master/database.md:301
msgctxt "P"
msgid "A common performance bottleneck of modern web applications is the amount of time they spend querying databases. Thankfully, Laravel can invoke a closure or callback of your choice when it spends too much time querying the database during a single request. To get started, provide a query time threshold (in milliseconds) and closure to the `whenQueryingForLongerThan` method. You may invoke this method in the `boot` method of a [service provider](/docs/{{version}}/providers):"
msgstr ""

#: ./docs/9.x/database.md:288
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Providers;\n\n"
"use Illuminate\\Database\\Connection;\n"
"use Illuminate\\Support\\Facades\\DB;\n"
"use Illuminate\\Support\\ServiceProvider;\n"
"use Illuminate\\Database\\Events\\QueryExecuted;\n\n"
"class AppServiceProvider extends ServiceProvider\n"
"{\n"
"    /**\n"
"     * Register any application services.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function register()\n"
"    {\n"
"        //\n"
"    }\n\n"
"    /**\n"
"     * Bootstrap any application services.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function boot()\n"
"    {\n"
"        DB::whenQueryingForLongerThan(500, function (Connection $connection, QueryExecuted $event) {\n"
"            // Notify development team...\n"
"        });\n"
"    }\n"
"}"
msgstr ""

#: ./docs/8.x/database.md:292
#: ./docs/9.x/database.md:348
#: ./docs/10.x/database.md:349
#: ./docs/11.x/database.md:362
#: ./docs/master/database.md:359
#~ msgctxt "P"
#~ msgid "<a name=\"manually-using-transactions\"></a>"
#~ msgstr ""

#: ./docs/10.x/database.md:293
#: ./docs/11.x/database.md:306
#: ./docs/master/database.md:303
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Providers;\n\n"
"use Illuminate\\Database\\Connection;\n"
"use Illuminate\\Support\\Facades\\DB;\n"
"use Illuminate\\Support\\ServiceProvider;\n"
"use Illuminate\\Database\\Events\\QueryExecuted;\n\n"
"class AppServiceProvider extends ServiceProvider\n"
"{\n"
"    /**\n"
"     * Register any application services.\n"
"     */\n"
"    public function register(): void\n"
"    {\n"
"        // ...\n"
"    }\n\n"
"    /**\n"
"     * Bootstrap any application services.\n"
"     */\n"
"    public function boot(): void\n"
"    {\n"
"        DB::whenQueryingForLongerThan(500, function (Connection $connection, QueryExecuted $event) {\n"
"            // Notify development team...\n"
"        });\n"
"    }\n"
"}"
msgstr ""

#: ./docs/8.x/database.md:293
#: ./docs/9.x/database.md:349
#: ./docs/10.x/database.md:350
#: ./docs/11.x/database.md:363
#: ./docs/master/database.md:360
msgctxt "H4"
msgid "Manually Using Transactions"
msgstr ""

#: ./docs/8.x/database.md:295
#: ./docs/9.x/database.md:351
#: ./docs/10.x/database.md:352
#: ./docs/11.x/database.md:365
#: ./docs/master/database.md:362
msgctxt "P"
msgid "If you would like to begin a transaction manually and have complete control over rollbacks and commits, you may use the `beginTransaction` method provided by the `DB` facade:"
msgstr ""

#: ./docs/8.x/database.md:297
#: ./docs/9.x/database.md:353
#: ./docs/10.x/database.md:354
#: ./docs/11.x/database.md:367
#: ./docs/master/database.md:364
msgctxt "CODE"
msgid "use Illuminate\\Support\\Facades\\DB;\n\n"
"DB::beginTransaction();"
msgstr ""

#: ./docs/8.x/database.md:301
#: ./docs/9.x/database.md:357
#: ./docs/10.x/database.md:358
#: ./docs/11.x/database.md:371
#: ./docs/master/database.md:368
msgctxt "P"
msgid "You can rollback the transaction via the `rollBack` method:"
msgstr ""

#: ./docs/8.x/database.md:303
#: ./docs/9.x/database.md:359
#: ./docs/10.x/database.md:360
#: ./docs/11.x/database.md:373
#: ./docs/master/database.md:370
msgctxt "CODE"
msgid "DB::rollBack();"
msgstr ""

#: ./docs/8.x/database.md:305
#: ./docs/9.x/database.md:361
#: ./docs/10.x/database.md:362
#: ./docs/11.x/database.md:375
#: ./docs/master/database.md:372
msgctxt "P"
msgid "Lastly, you can commit a transaction via the `commit` method:"
msgstr ""

#: ./docs/8.x/database.md:307
#: ./docs/9.x/database.md:363
#: ./docs/10.x/database.md:364
#: ./docs/11.x/database.md:377
#: ./docs/master/database.md:374
msgctxt "CODE"
msgid "DB::commit();"
msgstr ""

#: ./docs/8.x/database.md:309
#: ./docs/9.x/database.md:366
#: ./docs/10.x/database.md:367
#: ./docs/11.x/database.md:380
#: ./docs/master/database.md:377
msgctxt "P"
msgid "The `DB` facade's transaction methods control the transactions for both the [query builder](/docs/{{version}}/queries) and [Eloquent ORM](/docs/{{version}}/eloquent)."
msgstr ""

#: ./docs/8.x/database.md:311
#: ./docs/9.x/database.md:368
#: ./docs/10.x/database.md:369
#: ./docs/11.x/database.md:382
#: ./docs/master/database.md:379
#~ msgctxt "P"
#~ msgid "<a name=\"connecting-to-the-database-cli\"></a>"
#~ msgstr ""

#: ./docs/8.x/database.md:312
#: ./docs/9.x/database.md:369
msgctxt "H2"
msgid "Connecting To The Database CLI"
msgstr ""

#: ./docs/8.x/database.md:314
#: ./docs/9.x/database.md:371
#: ./docs/10.x/database.md:372
#: ./docs/11.x/database.md:385
#: ./docs/master/database.md:382
msgctxt "P"
msgid "If you would like to connect to your database's CLI, you may use the `db` Artisan command:"
msgstr ""

#: ./docs/8.x/database.md:316
#: ./docs/9.x/database.md:373
#: ./docs/10.x/database.md:374
#: ./docs/11.x/database.md:387
#: ./docs/master/database.md:384
msgctxt "CODE"
msgid "php artisan db"
msgstr ""

#: ./docs/8.x/database.md:318
#: ./docs/9.x/database.md:377
#: ./docs/10.x/database.md:378
#: ./docs/11.x/database.md:391
#: ./docs/master/database.md:388
msgctxt "P"
msgid "If needed, you may specify a database connection name to connect to a database connection that is not the default connection:"
msgstr ""

#: ./docs/8.x/database.md:320
#: ./docs/9.x/database.md:379
#: ./docs/10.x/database.md:380
#: ./docs/11.x/database.md:393
#: ./docs/master/database.md:390
msgctxt "CODE"
msgid "php artisan db mysql"
msgstr ""

#: ./docs/10.x/database.md:370
#: ./docs/11.x/database.md:383
#: ./docs/master/database.md:380
msgctxt "H2"
msgid "Connecting to the Database CLI"
msgstr ""

#: ./docs/9.x/database.md:383
#: ./docs/10.x/database.md:384
#: ./docs/11.x/database.md:397
#: ./docs/master/database.md:394
#~ msgctxt "P"
#~ msgid "<a name=\"inspecting-your-databases\"></a>"
#~ msgstr ""

#: ./docs/9.x/database.md:384
#: ./docs/10.x/database.md:385
#: ./docs/11.x/database.md:398
#: ./docs/master/database.md:395
msgctxt "H2"
msgid "Inspecting Your Databases"
msgstr ""

#: ./docs/9.x/database.md:386
#: ./docs/10.x/database.md:387
#: ./docs/11.x/database.md:400
#: ./docs/master/database.md:397
msgctxt "P"
msgid "Using the `db:show` and `db:table` Artisan commands, you can get valuable insight into your database and its associated tables. To see an overview of your database, including its size, type, number of open connections, and a summary of its tables, you may use the `db:show` command:"
msgstr ""

#: ./docs/9.x/database.md:388
#: ./docs/10.x/database.md:389
#: ./docs/11.x/database.md:402
#: ./docs/master/database.md:399
msgctxt "CODE: shell"
msgid "php artisan db:show"
msgstr ""

#: ./docs/9.x/database.md:392
#: ./docs/10.x/database.md:393
#: ./docs/11.x/database.md:406
#: ./docs/master/database.md:403
msgctxt "P"
msgid "You may specify which database connection should be inspected by providing the database connection name to the command via the `--database` option:"
msgstr ""

#: ./docs/9.x/database.md:394
#: ./docs/10.x/database.md:395
#: ./docs/11.x/database.md:408
#: ./docs/master/database.md:405
msgctxt "CODE: shell"
msgid "php artisan db:show --database=pgsql"
msgstr ""

#: ./docs/9.x/database.md:398
#: ./docs/10.x/database.md:399
#: ./docs/11.x/database.md:412
#: ./docs/master/database.md:409
msgctxt "P"
msgid "If you would like to include table row counts and database view details within the output of the command, you may provide the `--counts` and `--views` options, respectively. On large databases, retrieving row counts and view details can be slow:"
msgstr ""

#: ./docs/9.x/database.md:400
#: ./docs/10.x/database.md:401
#: ./docs/11.x/database.md:414
#: ./docs/master/database.md:411
msgctxt "CODE: shell"
msgid "php artisan db:show --counts --views"
msgstr ""

#: ./docs/9.x/database.md:404
#: ./docs/10.x/database.md:405
#: ./docs/11.x/database.md:432
#: ./docs/master/database.md:429
#~ msgctxt "P"
#~ msgid "<a name=\"table-overview\"></a>"
#~ msgstr ""

#: ./docs/9.x/database.md:405
#: ./docs/10.x/database.md:406
#: ./docs/11.x/database.md:433
#: ./docs/master/database.md:430
msgctxt "H4"
msgid "Table Overview"
msgstr ""

#: ./docs/9.x/database.md:407
#: ./docs/10.x/database.md:408
#: ./docs/11.x/database.md:435
#: ./docs/master/database.md:432
msgctxt "P"
msgid "If you would like to get an overview of an individual table within your database, you may execute the `db:table` Artisan command. This command provides a general overview of a database table, including its columns, types, attributes, keys, and indexes:"
msgstr ""

#: ./docs/9.x/database.md:409
#: ./docs/10.x/database.md:410
#: ./docs/11.x/database.md:437
#: ./docs/master/database.md:434
msgctxt "CODE: shell"
msgid "php artisan db:table users"
msgstr ""

#: ./docs/9.x/database.md:413
#: ./docs/10.x/database.md:414
#: ./docs/11.x/database.md:441
#: ./docs/master/database.md:438
#~ msgctxt "P"
#~ msgid "<a name=\"monitoring-your-databases\"></a>"
#~ msgstr ""

#: ./docs/9.x/database.md:414
#: ./docs/10.x/database.md:415
#: ./docs/11.x/database.md:442
#: ./docs/master/database.md:439
msgctxt "H2"
msgid "Monitoring Your Databases"
msgstr ""

#: ./docs/9.x/database.md:416
#: ./docs/10.x/database.md:417
#: ./docs/11.x/database.md:444
#: ./docs/master/database.md:441
msgctxt "P"
msgid "Using the `db:monitor` Artisan command, you can instruct Laravel to dispatch an `Illuminate\\Database\\Events\\DatabaseBusy` event if your database is managing more than a specified number of open connections."
msgstr ""

#: ./docs/11.x/database.md:418
#: ./docs/master/database.md:415
msgctxt "P"
msgid "In addition, you may use the following `Schema` methods to inspect your database:"
msgstr ""

#: ./docs/9.x/database.md:418
#: ./docs/10.x/database.md:419
#: ./docs/11.x/database.md:446
#: ./docs/master/database.md:443
msgctxt "P"
msgid "To get started, you should schedule the `db:monitor` command to [run every minute](/docs/{{version}}/scheduling). The command accepts the names of the database connection configurations that you wish to monitor as well as the maximum number of open connections that should be tolerated before dispatching an event:"
msgstr ""

#: ./docs/11.x/database.md:420
#: ./docs/master/database.md:417
msgctxt "CODE"
msgid "use Illuminate\\Support\\Facades\\Schema;\n\n"
"$tables = Schema::getTables();\n"
"$views = Schema::getViews();\n"
"$columns = Schema::getColumns('users');\n"
"$indexes = Schema::getIndexes('users');\n"
"$foreignKeys = Schema::getForeignKeys('users');"
msgstr ""

#: ./docs/9.x/database.md:420
#: ./docs/10.x/database.md:421
#: ./docs/11.x/database.md:448
#: ./docs/master/database.md:445
msgctxt "CODE: shell"
msgid "php artisan db:monitor --databases=mysql,pgsql --max=100"
msgstr ""

#: ./docs/9.x/database.md:424
#: ./docs/10.x/database.md:425
msgctxt "P"
msgid "Scheduling this command alone is not enough to trigger a notification alerting you of the number of open connections. When the command encounters a database that has an open connection count that exceeds your threshold, a `DatabaseBusy` event will be dispatched. You should listen for this event within your application's `EventServiceProvider` in order to send a notification to you or your development team:"
msgstr ""

#: ./docs/9.x/database.md:426
msgctxt "CODE: php"
msgid "use App\\Notifications\\DatabaseApproachingMaxConnections;\n"
"use Illuminate\\Database\\Events\\DatabaseBusy;\n"
"use Illuminate\\Support\\Facades\\Event;\n"
"use Illuminate\\Support\\Facades\\Notification;\n\n"
"/**\n"
" * Register any other events for your application.\n"
" *\n"
" * @return void\n"
" */\n"
"public function boot()\n"
"{\n"
"    Event::listen(function (DatabaseBusy $event) {\n"
"        Notification::route('mail', 'dev@example.com')\n"
"                ->notify(new DatabaseApproachingMaxConnections(\n"
"                    $event->connectionName,\n"
"                    $event->connections\n"
"                ));\n"
"    });\n"
"}"
msgstr ""

#: ./docs/10.x/database.md:427
msgctxt "CODE: php"
msgid "use App\\Notifications\\DatabaseApproachingMaxConnections;\n"
"use Illuminate\\Database\\Events\\DatabaseBusy;\n"
"use Illuminate\\Support\\Facades\\Event;\n"
"use Illuminate\\Support\\Facades\\Notification;\n\n"
"/**\n"
" * Register any other events for your application.\n"
" */\n"
"public function boot(): void\n"
"{\n"
"    Event::listen(function (DatabaseBusy $event) {\n"
"        Notification::route('mail', 'dev@example.com')\n"
"                ->notify(new DatabaseApproachingMaxConnections(\n"
"                    $event->connectionName,\n"
"                    $event->connections\n"
"                ));\n"
"    });\n"
"}"
msgstr ""

#: ./docs/11.x/database.md:428
#: ./docs/master/database.md:425
msgctxt "P"
msgid "If you would like to inspect a database connection that is not your application's default connection, you may use the `connection` method:"
msgstr ""

#: ./docs/11.x/database.md:430
#: ./docs/master/database.md:427
msgctxt "CODE"
msgid "$columns = Schema::connection('sqlite')->getColumns('users');"
msgstr ""

#: ./docs/11.x/database.md:452
#: ./docs/master/database.md:449
msgctxt "P"
msgid "Scheduling this command alone is not enough to trigger a notification alerting you of the number of open connections. When the command encounters a database that has an open connection count that exceeds your threshold, a `DatabaseBusy` event will be dispatched. You should listen for this event within your application's `AppServiceProvider` in order to send a notification to you or your development team:"
msgstr ""

#: ./docs/11.x/database.md:454
#: ./docs/master/database.md:451
msgctxt "CODE: php"
msgid "use App\\Notifications\\DatabaseApproachingMaxConnections;\n"
"use Illuminate\\Database\\Events\\DatabaseBusy;\n"
"use Illuminate\\Support\\Facades\\Event;\n"
"use Illuminate\\Support\\Facades\\Notification;\n\n"
"/**\n"
" * Bootstrap any application services.\n"
" */\n"
"public function boot(): void\n"
"{\n"
"    Event::listen(function (DatabaseBusy $event) {\n"
"        Notification::route('mail', 'dev@example.com')\n"
"                ->notify(new DatabaseApproachingMaxConnections(\n"
"                    $event->connectionName,\n"
"                    $event->connections\n"
"                ));\n"
"    });\n"
"}"
msgstr ""

