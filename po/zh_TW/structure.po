msgid ""
msgstr ""
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/templates/structure.pot\n"
"X-Crowdin-File-ID: 159\n"
"Project-Id-Version: laravel-docs\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"PO-Revision-Date: 2022-09-09 05:22\n"

#: docs/8.x/structure.md:block 1 (header)
msgid "Directory Structure"
msgstr "目錄結構"

#: docs/8.x/structure.md:block 2 (unordered list)
msgid "[Introduction](#introduction)"
msgstr "[簡介](#introduction)"

#: docs/8.x/structure.md:block 2 (unordered list)
msgid "[The Root Directory](#the-root-directory)"
msgstr "[Root 目錄](#the-root-directory)"

#: docs/8.x/structure.md:block 2 (unordered list)
msgid "[The `app` Directory](#the-root-app-directory)"
msgstr "[`app` 目錄](#the-root-app-directory)"

#: docs/8.x/structure.md:block 2 (unordered list)
msgid "[The `bootstrap` Directory](#the-bootstrap-directory)"
msgstr "[`bootstrap` 目錄](#the-bootstrap-directory)"

#: docs/8.x/structure.md:block 2 (unordered list)
msgid "[The `config` Directory](#the-config-directory)"
msgstr "[`config` 目錄](#the-config-directory)"

#: docs/8.x/structure.md:block 2 (unordered list)
msgid "[The `database` Directory](#the-database-directory)"
msgstr "[`database` 目錄](#the-database-directory)"

#: docs/8.x/structure.md:block 2 (unordered list)
msgid "[The `public` Directory](#the-public-directory)"
msgstr "[`public` 目錄](#the-public-directory)"

#: docs/8.x/structure.md:block 2 (unordered list)
msgid "[The `resources` Directory](#the-resources-directory)"
msgstr "[`resources` 目錄](#the-resources-directory)"

#: docs/8.x/structure.md:block 2 (unordered list)
msgid "[The `routes` Directory](#the-routes-directory)"
msgstr "[`routes` 目錄](#the-routes-directory)"

#: docs/8.x/structure.md:block 2 (unordered list)
msgid "[The `storage` Directory](#the-storage-directory)"
msgstr "[`storage` 目錄](#the-storage-directory)"

#: docs/8.x/structure.md:block 2 (unordered list)
msgid "[The `tests` Directory](#the-tests-directory)"
msgstr "[`tests` 目錄](#the-tests-directory)"

#: docs/8.x/structure.md:block 2 (unordered list)
msgid "[The `vendor` Directory](#the-vendor-directory)"
msgstr "[`vendor` 目錄](#the-vendor-directory)"

#: docs/8.x/structure.md:block 2 (unordered list)
msgid "[The App Directory](#the-app-directory)"
msgstr "[App 目錄](#the-app-directory)"

#: docs/8.x/structure.md:block 2 (unordered list)
msgid "[The `Broadcasting` Directory](#the-broadcasting-directory)"
msgstr "[`Broadcasting` 目錄](#the-broadcasting-directory)"

#: docs/8.x/structure.md:block 2 (unordered list)
msgid "[The `Console` Directory](#the-console-directory)"
msgstr "[`Console` 目錄](#the-console-directory)"

#: docs/8.x/structure.md:block 2 (unordered list)
msgid "[The `Events` Directory](#the-events-directory)"
msgstr "[`Events` 目錄](#the-events-directory)"

#: docs/8.x/structure.md:block 2 (unordered list)
msgid "[The `Exceptions` Directory](#the-exceptions-directory)"
msgstr "[`Exceptions` 目錄](#the-exceptions-directory)"

#: docs/8.x/structure.md:block 2 (unordered list)
msgid "[The `Http` Directory](#the-http-directory)"
msgstr "[`Http` 目錄](#the-http-directory)"

#: docs/8.x/structure.md:block 2 (unordered list)
msgid "[The `Jobs` Directory](#the-jobs-directory)"
msgstr "[`Jobs` 目錄](#the-jobs-directory)"

#: docs/8.x/structure.md:block 2 (unordered list)
msgid "[The `Listeners` Directory](#the-listeners-directory)"
msgstr "[`Listeners` 目錄](#the-listeners-directory)"

#: docs/8.x/structure.md:block 2 (unordered list)
msgid "[The `Mail` Directory](#the-mail-directory)"
msgstr "[`Mail` 目錄](#the-mail-directory)"

#: docs/8.x/structure.md:block 2 (unordered list)
msgid "[The `Models` Directory](#the-models-directory)"
msgstr "[`Models` 目錄](#the-models-directory)"

#: docs/8.x/structure.md:block 2 (unordered list)
msgid "[The `Notifications` Directory](#the-notifications-directory)"
msgstr "[`Notifications` 目錄](#the-notifications-directory)"

#: docs/8.x/structure.md:block 2 (unordered list)
msgid "[The `Policies` Directory](#the-policies-directory)"
msgstr "[`Policies` 目錄](#the-policies-directory)"

#: docs/8.x/structure.md:block 2 (unordered list)
msgid "[The `Providers` Directory](#the-providers-directory)"
msgstr "[`Providers` 目錄](#the-providers-directory)"

#: docs/8.x/structure.md:block 2 (unordered list)
msgid "[The `Rules` Directory](#the-rules-directory)"
msgstr "[`Rules` 目錄](#the-rules-directory)"

#: docs/8.x/structure.md:block 4 (header)
msgid "Introduction"
msgstr "簡介"

#: docs/8.x/structure.md:block 5 (paragraph)
msgid "The default Laravel application structure is intended to provide a great starting point for both large and small applications. But you are free to organize your application however you like. Laravel imposes almost no restrictions on where any given class is located - as long as Composer can autoload the class."
msgstr "不論專案大小，Laravel 預設的目錄結構都可提供一個不錯的起始點。不過，你也可以隨意調整要如何整理你的專案。Laravel 幾乎不限制 Class 要放在哪裡 —— 只要 Composer 可以自動載入 (Autoload) 該 Class 即可。"

#: docs/8.x/structure.md:block 7 (header)
msgid "The Root Directory"
msgstr "根目錄"

#: docs/8.x/structure.md:block 9 (header)
msgid "The App Directory"
msgstr "App 目錄"

#: docs/8.x/structure.md:block 10 (paragraph)
msgid "The `app` directory contains the core code of your application. We'll explore this directory in more detail soon; however, almost all of the classes in your application will be in this directory."
msgstr "`app` 目錄包含了專案的核心程式碼。我們稍後會更詳細瞭解這個資料夾。不過，專案中幾乎所有的類別都會被放在這個目錄中。"

#: docs/8.x/structure.md:block 12 (header)
msgid "The Bootstrap Directory"
msgstr "Bootstrap 目錄"

#: docs/8.x/structure.md:block 13 (paragraph)
msgid "The `bootstrap` directory contains the `app.php` file which bootstraps the framework. This directory also houses a `cache` directory which contains framework generated files for performance optimization such as the route and services cache files. You should not typically need to modify any files within this directory."
msgstr "`bootstrap` 目錄中包含了啟動框架所需要的 `app.php` 檔案。這個資料夾中也會有一個 `cache` 目錄，該目錄中會包含 Laravel 為了最佳化效能而產生的檔案，如路由與服務的快取檔案。通常來說，不應該去修改這個資料夾中的任何檔案。"

#: docs/8.x/structure.md:block 15 (header)
msgid "The Config Directory"
msgstr "Config 目錄"

#: docs/8.x/structure.md:block 16 (paragraph)
msgid "The `config` directory, as the name implies, contains all of your application's configuration files. It's a great idea to read through all of these files and familiarize yourself with all of the options available to you."
msgstr "`config` 目錄，如同目錄名字所示，包含了專案的所有設定檔。最好可以閱讀一下這些檔案，並熟悉一下有什麼選項可以設定。"

#: docs/8.x/structure.md:block 18 (header)
msgid "The Database Directory"
msgstr "Database 目錄"

#: docs/8.x/structure.md:block 19 (paragraph)
msgid "The `database` directory contains your database migrations, model factories, and seeds. If you wish, you may also use this directory to hold an SQLite database."
msgstr "`database` 目錄中包含了所有的資料庫遷移檔 (Migration)、Model Factory、以及 Seed。若你想的話，也可以使用這個目錄來存放 SQLite 資料庫。"

#: docs/8.x/structure.md:block 21 (header)
msgid "The Public Directory"
msgstr "Public 目錄"

#: docs/8.x/structure.md:block 22 (paragraph)
msgid "The `public` directory contains the `index.php` file, which is the entry point for all requests entering your application and configures autoloading. This directory also houses your assets such as images, JavaScript, and CSS."
msgstr "`public` 目錄包含了 `index.php` 檔案。該檔案是所有請求進入專案時的進入點，也設定了 Autoload。該目錄中也用來放置所有素材，如圖片、JavaScript、與 CSS。"

#: docs/8.x/structure.md:block 24 (header)
msgid "The Resources Directory"
msgstr "Resources 目錄"

#: docs/8.x/structure.md:block 25 (paragraph)
msgid "The `resources` directory contains your [views](/docs/{{version}}/views) as well as your raw, un-compiled assets such as CSS or JavaScript. This directory also houses all of your language files."
msgstr "`resources` 目錄中包含了 [View](/docs/{{version}}/views) 以及原始未編譯的素材，如 CSS 或 JavaScript。該目錄中也儲存了所有的語系檔。"

#: docs/8.x/structure.md:block 27 (header)
msgid "The Routes Directory"
msgstr "Routes 目錄"

#: docs/8.x/structure.md:block 28 (paragraph)
msgid "The `routes` directory contains all of the route definitions for your application. By default, several route files are included with Laravel: `web.php`, `api.php`, `console.php`, and `channels.php`."
msgstr "`routes` 目錄包含了專案的所有路由定義。預設情況下，Laravel 包含了幾個路由檔：`web.php`, `api.php`, `console.php`, 與 `channels.php`。"

#: docs/8.x/structure.md:block 29 (paragraph)
msgid "The `web.php` file contains routes that the `RouteServiceProvider` places in the `web` middleware group, which provides session state, CSRF protection, and cookie encryption. If your application does not offer a stateless, RESTful API then it is likely that all of your routes will most likely be defined in the `web.php` file."
msgstr "`RouteServiceProvider` 會將 `web.php` 中的路由放在 `web` Middleware 群組中。`web` Middleware 群組提供了如 Session 狀態、CSRF 保護、以及 Cookie 加密等功能。若你的專案不使用 stateless (無狀態) 的 RESTful API，則一般來說所有的路由都會放在 `web.php` 檔案中。"

#: docs/8.x/structure.md:block 30 (paragraph)
msgid "The `api.php` file contains routes that the `RouteServiceProvider` places in the `api` middleware group. These routes are intended to be stateless, so requests entering the application through these routes are intended to be authenticated [via tokens](/docs/{{version}}/sanctum) and will not have access to session state."
msgstr "`RouteServiceProvider` 會將 `api.php` 中的路由放在 `api` Middleware 群組中。這些路由是給 Stateless 的請求用的，所以通過這些路由進入網站的請求應[使用 Token](/docs/{{version}}/sanctum)來進行登入認證，且將無法存取 Session 狀態。"

#: docs/8.x/structure.md:block 31 (paragraph)
msgid "The `console.php` file is where you may define all of your closure based console commands. Each closure is bound to a command instance allowing a simple approach to interacting with each command's IO methods. Even though this file does not define HTTP routes, it defines console based entry points (routes) into your application."
msgstr "`console.php` 檔案用來定義所有基於閉包的主控台指令。所有的閉包都有繫結一個指令實體，使用這個指令實體就能輕鬆地與各個指令的 IO 方法互動。雖然這個檔案並不是定義 HTTP 路由，不過它定義了以主控台作為進入點進入專案的路由。"

#: docs/8.x/structure.md:block 32 (paragraph)
msgid "The `channels.php` file is where you may register all of the [event broadcasting](/docs/{{version}}/broadcasting) channels that your application supports."
msgstr "`channels.php` 檔案用來註冊所有專案要使用的[事件廣播](/docs/{{version}}/broadcasting)頻道。"

#: docs/8.x/structure.md:block 34 (header)
msgid "The Storage Directory"
msgstr "Storage 目錄"

#: docs/8.x/structure.md:block 35 (paragraph)
msgid "The `storage` directory contains your logs, compiled Blade templates, file based sessions, file caches, and other files generated by the framework. This directory is segregated into `app`, `framework`, and `logs` directories. The `app` directory may be used to store any files generated by your application. The `framework` directory is used to store framework generated files and caches. Finally, the `logs` directory contains your application's log files."
msgstr "`storage` 目錄包含了日誌檔、編譯過的 Blade 樣板、基於檔案的 Session、檔案快取、以及其他由 Laravel 所產生的檔案。該目錄還進一步地分成 `app`, `framework`, 以及 `logs` 目錄。`app` 目錄可用來保存所有由網站產生的檔案。`framework` 目錄用來儲存由 Laravel 產生的檔案與快取檔。最後，`logs` 目錄包含了專案的所有日誌檔。"

#: docs/8.x/structure.md:block 36 (paragraph)
msgid "The `storage/app/public` directory may be used to store user-generated files, such as profile avatars, that should be publicly accessible. You should create a symbolic link at `public/storage` which points to this directory. You may create the link using the `php artisan storage:link` Artisan command."
msgstr "`storage/app/public` 目錄可用來儲存使用者產生的檔案，如個人資料頭像等應可公開存取的檔案。開發人員應建立一個 `public/storage` 符號連結 (Symbolic Link) 連結到這個目錄。可以使用 `php artisan storage:link` Artisan 指令來建立這個連結。"

#: docs/8.x/structure.md:block 38 (header)
msgid "The Tests Directory"
msgstr "Tests 目錄"

#: docs/8.x/structure.md:block 39 (paragraph)
msgid "The `tests` directory contains your automated tests. Example [PHPUnit](https://phpunit.de/) unit tests and feature tests are provided out of the box. Each test class should be suffixed with the word `Test`. You may run your tests using the `phpunit` or `php vendor/bin/phpunit` commands. Or, if you would like a more detailed and beautiful representation of your test results, you may run your tests using the `php artisan test` Artisan command."
msgstr "`tests` 目錄包含了自動化測試。Laravel 預設包含了範例的 [PHPUnit](https://phpunit.de/) 單元測試與功能測試。每個測試類別都應以 `Test` 結尾。可以使用 `phpunit` 或 `php vendor/bin/phpunit` 指令來執行測試。或者，若想使用更詳細且好看的測試結果輸出，可以使用 `php artisan test` Artisan 指令。"

#: docs/8.x/structure.md:block 41 (header)
msgid "The Vendor Directory"
msgstr "Vendor 目錄"

#: docs/8.x/structure.md:block 42 (paragraph)
msgid "The `vendor` directory contains your [Composer](https://getcomposer.org) dependencies."
msgstr "`vendor` 目錄包含了 [Composer](https://getcomposer.org) 相依性套件。"

#: docs/8.x/structure.md:block 45 (paragraph)
msgid "The majority of your application is housed in the `app` directory. By default, this directory is namespaced under `App` and is autoloaded by Composer using the [PSR-4 autoloading standard](https://www.php-fig.org/psr/psr-4/)."
msgstr "在你的專案中，大多數的程式碼都會放在 `app` 資料夾中。預設情況下，該資料夾是放在 `App` Namespace 下的，且會由 Composer 依照 [PSR-4 Autoloading 標準] Autoload。"

#: docs/8.x/structure.md:block 46 (paragraph)
msgid "The `app` directory contains a variety of additional directories such as `Console`, `Http`, and `Providers`. Think of the `Console` and `Http` directories as providing an API into the core of your application. The HTTP protocol and CLI are both mechanisms to interact with your application, but do not actually contain application logic. In other words, they are two ways of issuing commands to your application. The `Console` directory contains all of your Artisan commands, while the `Http` directory contains your controllers, middleware, and requests."
msgstr "`app` 目錄中包含了多個額外的目錄，如 `Console`, `Http`, 與 `Providers`。可以將 `Console` 與 `Http` 目錄想成是用來進入專案核心的 API。HTTP 協定與 CLI 是兩種與專案互動的機制，而這種機制本身則不包含應用上的邏輯。換句話說，你的專案有兩種操作方法。`Console` 目錄包含了所有 Artisan 指令，而 `Http` 目錄則包含了 Controller、Middleware、以及 Request。"

#: docs/8.x/structure.md:block 47 (paragraph)
msgid "A variety of other directories will be generated inside the `app` directory as you use the `make` Artisan commands to generate classes. So, for example, the `app/Jobs` directory will not exist until you execute the `make:job` Artisan command to generate a job class."
msgstr "其他的資料夾則會在使用 `make` Artisan 指令產生類別時產生在 `app` 目錄下。舉例來說，執行了 `make:job` Artisan 指令來產生 Job 類別後，才會產生 `app/Jobs` 目錄。"

#: docs/8.x/structure.md:block 48 (quote)
msgid "{tip} Many of the classes in the `app` directory can be generated by Artisan via commands. To review the available commands, run the `php artisan list make` command in your terminal."
msgstr "{tip} `app` 目錄內的許多類別都可以通過指令來由 Artisan 產生。若要檢視所有可用的指令，請在終端機中執行 `php artisan list make` 指令。"

#: docs/8.x/structure.md:block 50 (header)
msgid "The Broadcasting Directory"
msgstr "Broadcasting 目錄"

#: docs/8.x/structure.md:block 51 (paragraph)
msgid "The `Broadcasting` directory contains all of the broadcast channel classes for your application. These classes are generated using the `make:channel` command. This directory does not exist by default, but will be created for you when you create your first channel. To learn more about channels, check out the documentation on [event broadcasting](/docs/{{version}}/broadcasting)."
msgstr "`Broadcasting` 目錄包含了所有專案使用的廣播頻道類別。這些類別是使用 `make:channel` 指令產生的。預設情況下不會有這個目錄，不過在你產生第一個頻道後會自動建立。要瞭解更多有關頻道的資訊，請參考有關[事件廣播](/docs/{{version}}/broadcasting)的說明文件。"

#: docs/8.x/structure.md:block 53 (header)
msgid "The Console Directory"
msgstr "Console 目錄"

#: docs/8.x/structure.md:block 54 (paragraph)
msgid "The `Console` directory contains all of the custom Artisan commands for your application. These commands may be generated using the `make:command` command. This directory also houses your console kernel, which is where your custom Artisan commands are registered and your [scheduled tasks](/docs/{{version}}/scheduling) are defined."
msgstr "`Console` 目錄包含所有專案使用的自訂 Artisan 指令。這些指令可以通過 `make:command` 指令來產生。這個資料夾中也包含了主控台核心 (Kernel)，主控台核心可用來註冊自訂 Artisan指令，並定義[排程任務](/docs/{{version}}/scheduling)。"

#: docs/8.x/structure.md:block 56 (header)
msgid "The Events Directory"
msgstr "Events 目錄"

#: docs/8.x/structure.md:block 57 (paragraph)
msgid "This directory does not exist by default, but will be created for you by the `event:generate` and `make:event` Artisan commands. The `Events` directory houses [event classes](/docs/{{version}}/events). Events may be used to alert other parts of your application that a given action has occurred, providing a great deal of flexibility and decoupling."
msgstr "預設情況下不會有這個資料夾，不過在使用 `event:generate` 與 `make:event` Artisan 指令就會幫你建立。`Events` 目錄內存放了 [Event 類別](/docs/{{version}}/events)。可使用 Event 來告知專案中的其他部分：「某個動作發生了」；使用 Event 也提供了不錯的延展性與解耦合。"

#: docs/8.x/structure.md:block 59 (header)
msgid "The Exceptions Directory"
msgstr "Exceptions 目錄"

#: docs/8.x/structure.md:block 60 (paragraph)
msgid "The `Exceptions` directory contains your application's exception handler and is also a good place to place any exceptions thrown by your application. If you would like to customize how your exceptions are logged or rendered, you should modify the `Handler` class in this directory."
msgstr "`Exceptions` 目錄包含了專案的例外處理常式 (Exception Handler)，這個目錄也適合用來放置所有專案中會擲回的例外。若想客製化例外被紀錄在日誌中的方式、或是客製化例外轉譯的方式，可修改該目錄中的 `Handler` 類別。"

#: docs/8.x/structure.md:block 62 (header)
msgid "The Http Directory"
msgstr "Http 目錄"

#: docs/8.x/structure.md:block 63 (paragraph)
msgid "The `Http` directory contains your controllers, middleware, and form requests. Almost all of the logic to handle requests entering your application will be placed in this directory."
msgstr "`Http` 目錄包含了 Controller, Middleware, 以及 Form Request。幾乎所有用來處理請求進入專案的邏輯都會放在這個資料夾內。"

#: docs/8.x/structure.md:block 65 (header)
msgid "The Jobs Directory"
msgstr "Jobs 目錄"

#: docs/8.x/structure.md:block 66 (paragraph)
msgid "This directory does not exist by default, but will be created for you if you execute the `make:job` Artisan command. The `Jobs` directory houses the [queueable jobs](/docs/{{version}}/queues) for your application. Jobs may be queued by your application or run synchronously within the current request lifecycle. Jobs that run synchronously during the current request are sometimes referred to as \"commands\" since they are an implementation of the [command pattern](https://en.wikipedia.org/wiki/Command_pattern)."
msgstr "預設情況下不會有這個目錄，不會在執行 `make:job` Artisan 指令後會自動建立。`Jobs` 目錄用來存放所有專案的[可佇列任務](/docs/{{version}}/queues)。「任務 (Job)」可以由專案放入佇列，或是在目前的請求生命週期中同步執行。在目前請求中同步執行的任務有時候也稱為「指令 (Command)」，因為這種作法是一種[命令模式](https://zh.wikipedia.org/zh-tw/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F)的實作。"

#: docs/8.x/structure.md:block 68 (header)
msgid "The Listeners Directory"
msgstr "Listeners 目錄"

#: docs/8.x/structure.md:block 69 (paragraph)
msgid "This directory does not exist by default, but will be created for you if you execute the `event:generate` or `make:listener` Artisan commands. The `Listeners` directory contains the classes that handle your [events](/docs/{{version}}/events). Event listeners receive an event instance and perform logic in response to the event being fired. For example, a `UserRegistered` event might be handled by a `SendWelcomeEmail` listener."
msgstr "預設情況下不會有這個目錄，不過會在執行 `event:generate` 或 `make:listener` Artisan 指令後自動建立。`Listeners` 目錄中包含了用來處理[事件](/docs/{{version}}/events)的類別。事件監聽程式 (Event Listener) 會接收事件實體並執行一段邏輯，以回應發出的事件。舉例來說，`UserRegistered` 事件可能會由一個 `SendWelcomeEmail` 監聽程式進行處理。"

#: docs/8.x/structure.md:block 71 (header)
msgid "The Mail Directory"
msgstr "Mail 目錄"

#: docs/8.x/structure.md:block 72 (paragraph)
msgid "This directory does not exist by default, but will be created for you if you execute the `make:mail` Artisan command. The `Mail` directory contains all of your [classes that represent emails](/docs/{{version}}/mail) sent by your application. Mail objects allow you to encapsulate all of the logic of building an email in a single, simple class that may be sent using the `Mail::send` method."
msgstr "預設情況下沒有這個目錄，不過，在執行 `make:mail` Artisan 指令後會自動建立。`Mail` 目錄包含了所有[代表了 E-Mail 的類別](/docs/{{version}}/mail)，專案可以寄出這些 E-Mail。使用 Mail 物件就可以將所有建立 E-Mail 的邏輯封裝到單一、簡單的類別，然後用 `Mail::send` 方法就可以寄出。"

#: docs/8.x/structure.md:block 74 (header)
msgid "The Models Directory"
msgstr "Models 目錄"

#: docs/8.x/structure.md:block 75 (paragraph)
msgid "The `Models` directory contains all of your [Eloquent model classes](/docs/{{version}}/eloquent). The Eloquent ORM included with Laravel provides a beautiful, simple ActiveRecord implementation for working with your database. Each database table has a corresponding \"Model\" which is used to interact with that table. Models allow you to query for data in your tables, as well as insert new records into the table."
msgstr "`Models` 目錄包含了所有的 [Eloquent Model 類別](/docs/{{version}}/eloquent)。Laravel 中內建的 Eloquent ORM 提供了一個美觀、簡易的 ActiveRecord 實作，可用來操作資料庫。資料庫中每個資料表都有一個對應的「Model」，可用來與這個資料表互動。使用 Model 就可以從資料表中取得資料，以及可將新資料插入到資料表中。"

#: docs/8.x/structure.md:block 77 (header)
msgid "The Notifications Directory"
msgstr "Notifications 目錄"

#: docs/8.x/structure.md:block 78 (paragraph)
msgid "This directory does not exist by default, but will be created for you if you execute the `make:notification` Artisan command. The `Notifications` directory contains all of the \"transactional\" [notifications](/docs/{{version}}/notifications) that are sent by your application, such as simple notifications about events that happen within your application. Laravel's notification feature abstracts sending notifications over a variety of drivers such as email, Slack, SMS, or stored in a database."
msgstr "預設情況下沒有這個目錄，不過會在執行 `make:notification` Artisan 指令後自動建立。`Notifications` 目錄包含了所有由專案寄出的「交易式 (Transactional)」[通知](/docs/{{version}}/notifications)，如：在專案中發生事件的簡易通知。Laravel 的通知功能抽象化了各種不同後端的寄送功能，如：E-Mail、Slack、簡訊、或是儲存在資料庫中。"

#: docs/8.x/structure.md:block 80 (header)
msgid "The Policies Directory"
msgstr "Policies 目錄"

#: docs/8.x/structure.md:block 81 (paragraph)
msgid "This directory does not exist by default, but will be created for you if you execute the `make:policy` Artisan command. The `Policies` directory contains the [authorization policy classes](/docs/{{version}}/authorization) for your application. Policies are used to determine if a user can perform a given action against a resource."
msgstr "預設情況下不會有這個目錄，不過會在執行 `make:policy` Artisan 指令後自動建立。`Policies` 目錄包含了用於專案的[授權原則類別](/docs/{{version}}/authorization)。原則 (Policy) 可用來判斷某個使用者是否能對特定資源進行給定的動作。"

#: docs/8.x/structure.md:block 83 (header)
msgid "The Providers Directory"
msgstr "Providers 目錄"

#: docs/8.x/structure.md:block 84 (paragraph)
msgid "The `Providers` directory contains all of the [service providers](/docs/{{version}}/providers) for your application. Service providers bootstrap your application by binding services in the service container, registering events, or performing any other tasks to prepare your application for incoming requests."
msgstr "`Providers` 目錄包含了專案中的所有 [Service Providers](/docs/{{version}}/providers)。Service Provider 會向 Service Container 繫結服務、註冊事件、或是進行其他任何行為來為專案準備連入請求⋯⋯等，以啟動專案。"

#: docs/8.x/structure.md:block 85 (paragraph)
msgid "In a fresh Laravel application, this directory will already contain several providers. You are free to add your own providers to this directory as needed."
msgstr "在全新安裝的 Laravel 專案中，這個目錄內已經包含了數個 Provider。你可以依照需求隨意在這個目錄內新增你自己的 Provider。"

#: docs/8.x/structure.md:block 87 (header)
msgid "The Rules Directory"
msgstr "Rules 目錄"

#: docs/8.x/structure.md:block 88 (paragraph)
msgid "This directory does not exist by default, but will be created for you if you execute the `make:rule` Artisan command. The `Rules` directory contains the custom validation rule objects for your application. Rules are used to encapsulate complicated validation logic in a simple object. For more information, check out the [validation documentation](/docs/{{version}}/validation)."
msgstr "預設情況下不會有這個目錄，不過在執行 `make:rule` Artisan 指令後會自動建立。`Rules` 目錄包含了用於專案的自訂驗證規則。Rule 是用來將複雜的驗證邏輯封裝在一個簡單的物件中的。有關更多資訊，請參考[表單驗證說明文件](/docs/{{version}}/validation)。"

#: docs/9.x/structure.md:block 2 (unordered list)
msgid "[The `lang` Directory](#the-lang-directory)"
msgstr "[`lang` 目錄](#the-lang-directory)"

#: docs/9.x/structure.md:block 21 (header)
msgid "The Lang Directory"
msgstr "Lang 目錄"

#: docs/9.x/structure.md:block 22 (paragraph)
msgid "The `lang` directory houses all of your application's language files."
msgstr "`lang` 目錄用來存放專案的語系檔。"

#: docs/9.x/structure.md:block 28 (paragraph)
msgid "The `resources` directory contains your [views](/docs/{{version}}/views) as well as your raw, un-compiled assets such as CSS or JavaScript."
msgstr "`resources` 目錄中包含了 [View](/docs/{{version}}/views) 以及原始未編譯的素材，如 CSS 或 JavaScript。"

#: docs/9.x/structure.md:block 51 (quote)
msgid "**Note** Many of the classes in the `app` directory can be generated by Artisan via commands. To review the available commands, run the `php artisan list make` command in your terminal."
msgstr "**Note** `app` 目錄內的許多類別都可以通過指令來由 Artisan 產生。若要檢視所有可用的指令，請在終端機中執行 `php artisan list make` 指令。"

