msgid ""
msgstr ""
"Project-Id-Version: laravel-docs\n"
"POT-Creation-Date: 2022-01-29 05:35+0000\n"
"PO-Revision-Date: 2022-01-29 05:45\n"
"Last-Translator: \n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/templates/eloquent-serialization.pot\n"
"X-Crowdin-File-ID: 59\n"

# File: docs/8.x/eloquent-serialization.md, line: 1
# File: docs/master/eloquent-serialization.md, line: 1
#. type: Title #
#, no-wrap
msgid "Eloquent: Serialization"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 10
# File: docs/master/eloquent-serialization.md, line: 10
#. type: Bullet: '- '
msgid "[Introduction](#introduction)"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 10
# File: docs/master/eloquent-serialization.md, line: 10
#. type: Plain text
#, no-wrap
msgid "- [Serializing Models & Collections](#serializing-models-and-collections)\n"
"    - [Serializing To Arrays](#serializing-to-arrays)\n"
"    - [Serializing To JSON](#serializing-to-json)\n"
"- [Hiding Attributes From JSON](#hiding-attributes-from-json)\n"
"- [Appending Values To JSON](#appending-values-to-json)\n"
"- [Date Serialization](#date-serialization)\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 12
# File: docs/master/eloquent-serialization.md, line: 12
#. type: Plain text
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 12
# File: docs/master/eloquent-serialization.md, line: 12
#. type: Title ##
#, no-wrap
msgid "Introduction"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 15
# File: docs/master/eloquent-serialization.md, line: 15
#. type: Plain text
msgid "When building APIs using Laravel, you will often need to convert your models and relationships to arrays or JSON. Eloquent includes convenient methods for making these conversions, as well as controlling which attributes are included in the serialized representation of your models."
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 17
# File: docs/master/eloquent-serialization.md, line: 17
#. type: Plain text
#, no-wrap
msgid "> {tip} For an even more robust way of handling Eloquent model and collection JSON serialization, check out the documentation on [Eloquent API resources](/docs/{{version}}/eloquent-resources).\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 19
# File: docs/master/eloquent-serialization.md, line: 19
#. type: Plain text
#, no-wrap
msgid "<a name=\"serializing-models-and-collections\"></a>\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 19
# File: docs/master/eloquent-serialization.md, line: 19
#. type: Title ##
#, no-wrap
msgid "Serializing Models & Collections"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 22
# File: docs/master/eloquent-serialization.md, line: 22
#. type: Plain text
#, no-wrap
msgid "<a name=\"serializing-to-arrays\"></a>\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 22
# File: docs/master/eloquent-serialization.md, line: 22
#. type: Title ###
#, no-wrap
msgid "Serializing To Arrays"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 25
# File: docs/master/eloquent-serialization.md, line: 25
#. type: Plain text
msgid "To convert a model and its loaded [relationships](/docs/{{version}}/eloquent-relationships) to an array, you should use the `toArray` method. This method is recursive, so all attributes and all relations (including the relations of relations) will be converted to arrays:"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 27
# File: docs/8.x/eloquent-serialization.md, line: 50
# File: docs/master/eloquent-serialization.md, line: 27
# File: docs/master/eloquent-serialization.md, line: 50
#. type: Plain text
#, no-wrap
msgid "    use App\\Models\\User;\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 29
# File: docs/master/eloquent-serialization.md, line: 29
#. type: Plain text
#, no-wrap
msgid "    $user = User::with('roles')->first();\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 31
# File: docs/master/eloquent-serialization.md, line: 31
#. type: Plain text
#, no-wrap
msgid "    return $user->toArray();\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 33
# File: docs/master/eloquent-serialization.md, line: 33
#. type: Plain text
msgid "The `attributesToArray` method may be used to convert a model's attributes to an array but not its relationships:"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 35
# File: docs/master/eloquent-serialization.md, line: 35
#. type: Plain text
#, no-wrap
msgid "    $user = User::first();\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 37
# File: docs/master/eloquent-serialization.md, line: 37
#. type: Plain text
#, no-wrap
msgid "    return $user->attributesToArray();\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 39
# File: docs/master/eloquent-serialization.md, line: 39
#. type: Plain text
msgid "You may also convert entire [collections](/docs/{{version}}/eloquent-collections) of models to arrays by calling the `toArray` method on the collection instance:"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 41
# File: docs/master/eloquent-serialization.md, line: 41
#. type: Plain text
#, no-wrap
msgid "    $users = User::all();\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 43
# File: docs/master/eloquent-serialization.md, line: 43
#. type: Plain text
#, no-wrap
msgid "    return $users->toArray();\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 45
# File: docs/master/eloquent-serialization.md, line: 45
#. type: Plain text
#, no-wrap
msgid "<a name=\"serializing-to-json\"></a>\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 45
# File: docs/master/eloquent-serialization.md, line: 45
#. type: Title ###
#, no-wrap
msgid "Serializing To JSON"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 48
# File: docs/master/eloquent-serialization.md, line: 48
#. type: Plain text
msgid "To convert a model to JSON, you should use the `toJson` method. Like `toArray`, the `toJson` method is recursive, so all attributes and relations will be converted to JSON. You may also specify any JSON encoding options that are [supported by PHP](https://secure.php.net/manual/en/function.json-encode.php):"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 52
# File: docs/master/eloquent-serialization.md, line: 52
#. type: Plain text
#, no-wrap
msgid "    $user = User::find(1);\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 54
# File: docs/master/eloquent-serialization.md, line: 54
#. type: Plain text
#, no-wrap
msgid "    return $user->toJson();\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 56
# File: docs/master/eloquent-serialization.md, line: 56
#. type: Plain text
#, no-wrap
msgid "    return $user->toJson(JSON_PRETTY_PRINT);\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 58
# File: docs/master/eloquent-serialization.md, line: 58
#. type: Plain text
msgid "Alternatively, you may cast a model or collection to a string, which will automatically call the `toJson` method on the model or collection:"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 60
# File: docs/master/eloquent-serialization.md, line: 60
#. type: Plain text
#, no-wrap
msgid "    return (string) User::find(1);\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 62
# File: docs/master/eloquent-serialization.md, line: 62
#. type: Plain text
msgid "Since models and collections are converted to JSON when cast to a string, you can return Eloquent objects directly from your application's routes or controllers. Laravel will automatically serialize your Eloquent models and collections to JSON when they are returned from routes or controllers:"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 66
# File: docs/master/eloquent-serialization.md, line: 66
#. type: Plain text
#, no-wrap
msgid "    Route::get('users', function () {\n"
"        return User::all();\n"
"    });\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 68
# File: docs/master/eloquent-serialization.md, line: 68
#. type: Plain text
#, no-wrap
msgid "<a name=\"relationships\"></a>\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 68
# File: docs/master/eloquent-serialization.md, line: 68
#. type: Title ####
#, no-wrap
msgid "Relationships"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 71
# File: docs/master/eloquent-serialization.md, line: 71
#. type: Plain text
msgid "When an Eloquent model is converted to JSON, its loaded relationships will automatically be included as attributes on the JSON object. Also, though Eloquent relationship methods are defined using \"camel case\" method names, a relationship's JSON attribute will be \"snake case\"."
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 73
# File: docs/master/eloquent-serialization.md, line: 73
#. type: Plain text
#, no-wrap
msgid "<a name=\"hiding-attributes-from-json\"></a>\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 73
# File: docs/master/eloquent-serialization.md, line: 73
#. type: Title ##
#, no-wrap
msgid "Hiding Attributes From JSON"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 76
# File: docs/master/eloquent-serialization.md, line: 76
#. type: Plain text
msgid "Sometimes you may wish to limit the attributes, such as passwords, that are included in your model's array or JSON representation. To do so, add a `$hidden` property to your model. In attributes that are listed in the `$hidden` property's array will not be included in the serialized representation of your model:"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 78
# File: docs/8.x/eloquent-serialization.md, line: 98
# File: docs/8.x/eloquent-serialization.md, line: 130
# File: docs/8.x/eloquent-serialization.md, line: 151
# File: docs/master/eloquent-serialization.md, line: 78
# File: docs/master/eloquent-serialization.md, line: 98
# File: docs/master/eloquent-serialization.md, line: 130
# File: docs/master/eloquent-serialization.md, line: 154
#. type: Plain text
#, no-wrap
msgid "    <?php\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 80
# File: docs/8.x/eloquent-serialization.md, line: 100
# File: docs/8.x/eloquent-serialization.md, line: 132
# File: docs/8.x/eloquent-serialization.md, line: 153
# File: docs/master/eloquent-serialization.md, line: 80
# File: docs/master/eloquent-serialization.md, line: 100
# File: docs/master/eloquent-serialization.md, line: 132
# File: docs/master/eloquent-serialization.md, line: 156
#. type: Plain text
#, no-wrap
msgid "    namespace App\\Models;\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 82
# File: docs/8.x/eloquent-serialization.md, line: 102
# File: docs/8.x/eloquent-serialization.md, line: 134
# File: docs/8.x/eloquent-serialization.md, line: 155
# File: docs/master/eloquent-serialization.md, line: 82
# File: docs/master/eloquent-serialization.md, line: 102
# File: docs/master/eloquent-serialization.md, line: 158
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Database\\Eloquent\\Model;\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 92
# File: docs/master/eloquent-serialization.md, line: 92
#. type: Plain text
#, no-wrap
msgid "    class User extends Model\n"
"    {\n"
"        /**\n"
"         * The attributes that should be hidden for arrays.\n"
"         *\n"
"         * @var array\n"
"         */\n"
"        protected $hidden = ['password'];\n"
"    }\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 94
# File: docs/master/eloquent-serialization.md, line: 94
#. type: Plain text
#, no-wrap
msgid "> {tip} To hide relationships, add the relationship's method name to your Eloquent model's `$hidden` property.\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 96
# File: docs/master/eloquent-serialization.md, line: 96
#. type: Plain text
msgid "Alternatively, you may use the `visible` property to define an \"allow list\" of attributes that should be included in your model's array and JSON representation. All attributes that are not present in the `$visible` array will be hidden when the model is converted to an array or JSON:"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 112
# File: docs/master/eloquent-serialization.md, line: 112
#. type: Plain text
#, no-wrap
msgid "    class User extends Model\n"
"    {\n"
"        /**\n"
"         * The attributes that should be visible in arrays.\n"
"         *\n"
"         * @var array\n"
"         */\n"
"        protected $visible = ['first_name', 'last_name'];\n"
"    }\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 114
# File: docs/master/eloquent-serialization.md, line: 114
#. type: Plain text
#, no-wrap
msgid "<a name=\"temporarily-modifying-attribute-visibility\"></a>\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 114
# File: docs/master/eloquent-serialization.md, line: 114
#. type: Title ####
#, no-wrap
msgid "Temporarily Modifying Attribute Visibility"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 117
# File: docs/master/eloquent-serialization.md, line: 117
#. type: Plain text
msgid "If you would like to make some typically hidden attributes visible on a given model instance, you may use the `makeVisible` method. The `makeVisible` method returns the model instance:"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 119
# File: docs/master/eloquent-serialization.md, line: 119
#. type: Plain text
#, no-wrap
msgid "    return $user->makeVisible('attribute')->toArray();\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 121
# File: docs/master/eloquent-serialization.md, line: 121
#. type: Plain text
msgid "Likewise, if you would like to hide some attributes that are typically visible, you may use the `makeHidden` method."
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 123
# File: docs/master/eloquent-serialization.md, line: 123
#. type: Plain text
#, no-wrap
msgid "    return $user->makeHidden('attribute')->toArray();\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 125
# File: docs/master/eloquent-serialization.md, line: 125
#. type: Plain text
#, no-wrap
msgid "<a name=\"appending-values-to-json\"></a>\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 125
# File: docs/master/eloquent-serialization.md, line: 125
#. type: Title ##
#, no-wrap
msgid "Appending Values To JSON"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 128
# File: docs/master/eloquent-serialization.md, line: 128
#. type: Plain text
msgid "Occasionally, when converting models to arrays or JSON, you may wish to add attributes that do not have a corresponding column in your database. To do so, first define an [accessor](/docs/{{version}}/eloquent-mutators) for the value:"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 147
#. type: Plain text
#, no-wrap
msgid "    class User extends Model\n"
"    {\n"
"        /**\n"
"         * Determine if the user is an administrator.\n"
"         *\n"
"         * @return bool\n"
"         */\n"
"        public function getIsAdminAttribute()\n"
"        {\n"
"            return $this->attributes['admin'] === 'yes';\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 149
# File: docs/master/eloquent-serialization.md, line: 152
#. type: Plain text
msgid "After creating the accessor, add the attribute name to the `appends` property of your model. Note that attribute names are typically referenced using their \"snake case\" serialized representation, even though the accessor's PHP method is defined using \"camel case\":"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 165
# File: docs/master/eloquent-serialization.md, line: 168
#. type: Plain text
#, no-wrap
msgid "    class User extends Model\n"
"    {\n"
"        /**\n"
"         * The accessors to append to the model's array form.\n"
"         *\n"
"         * @var array\n"
"         */\n"
"        protected $appends = ['is_admin'];\n"
"    }\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 167
# File: docs/master/eloquent-serialization.md, line: 170
#. type: Plain text
msgid "Once the attribute has been added to the `appends` list, it will be included in both the model's array and JSON representations. Attributes in the `appends` array will also respect the `visible` and `hidden` settings configured on the model."
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 169
# File: docs/master/eloquent-serialization.md, line: 172
#. type: Plain text
#, no-wrap
msgid "<a name=\"appending-at-run-time\"></a>\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 169
# File: docs/master/eloquent-serialization.md, line: 172
#. type: Title ####
#, no-wrap
msgid "Appending At Run Time"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 172
# File: docs/master/eloquent-serialization.md, line: 175
#. type: Plain text
msgid "At runtime, you may instruct a model instance to append additional attributes using the `append` method. Or, you may use the `setAppends` method to override the entire array of appended properties for a given model instance:"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 174
# File: docs/master/eloquent-serialization.md, line: 177
#. type: Plain text
#, no-wrap
msgid "    return $user->append('is_admin')->toArray();\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 176
# File: docs/master/eloquent-serialization.md, line: 179
#. type: Plain text
#, no-wrap
msgid "    return $user->setAppends(['is_admin'])->toArray();\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 178
# File: docs/master/eloquent-serialization.md, line: 181
#. type: Plain text
#, no-wrap
msgid "<a name=\"date-serialization\"></a>\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 178
# File: docs/master/eloquent-serialization.md, line: 181
#. type: Title ##
#, no-wrap
msgid "Date Serialization"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 181
# File: docs/master/eloquent-serialization.md, line: 184
#. type: Plain text
#, no-wrap
msgid "<a name=\"customizing-the-default-date-format\"></a>\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 181
# File: docs/master/eloquent-serialization.md, line: 184
#. type: Title ####
#, no-wrap
msgid "Customizing The Default Date Format"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 184
# File: docs/master/eloquent-serialization.md, line: 187
#. type: Plain text
msgid "You may customize the default serialization format by overriding the `serializeDate` method. This method does not affect how your dates are formatted for storage in the database:"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 195
# File: docs/master/eloquent-serialization.md, line: 198
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Prepare a date for array / JSON serialization.\n"
"     *\n"
"     * @param  \\DateTimeInterface  $date\n"
"     * @return string\n"
"     */\n"
"    protected function serializeDate(DateTimeInterface $date)\n"
"    {\n"
"        return $date->format('Y-m-d');\n"
"    }\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 197
# File: docs/master/eloquent-serialization.md, line: 200
#. type: Plain text
#, no-wrap
msgid "<a name=\"customizing-the-date-format-per-attribute\"></a>\n"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 197
# File: docs/master/eloquent-serialization.md, line: 200
#. type: Title ####
#, no-wrap
msgid "Customizing The Date Format Per Attribute"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 200
# File: docs/master/eloquent-serialization.md, line: 203
#. type: Plain text
msgid "You may customize the serialization format of individual Eloquent date attributes by specifying the date format in the model's [cast declarations](/docs/{{version}}/eloquent-mutators#attribute-casting):"
msgstr ""

# File: docs/8.x/eloquent-serialization.md, line: 204
# File: docs/master/eloquent-serialization.md, line: 207
#. type: Plain text
#, no-wrap
msgid "    protected $casts = [\n"
"        'birthday' => 'date:Y-m-d',\n"
"        'joined_at' => 'datetime:Y-m-d H:00',\n"
"    ];\n"
msgstr ""

# File: docs/master/eloquent-serialization.md, line: 135
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Database\\Eloquent\\Casts\\Attribute;\n"
"    use Illuminate\\Database\\Eloquent\\Model;\n"
msgstr ""

# File: docs/master/eloquent-serialization.md, line: 150
#. type: Plain text
#, no-wrap
msgid "    class User extends Model\n"
"    {\n"
"        /**\n"
"         * Determine if the user is an administrator.\n"
"         *\n"
"         * @return \\Illuminate\\Database\\Eloquent\\Casts\\Attribute\n"
"         */\n"
"        protected function isAdmin(): Attribute\n"
"        {\n"
"            return new Attribute(\n"
"                get: fn () => 'yes';\n"
"            );\n"
"        }\n"
"    }\n"
msgstr ""

