# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Taylor Otwell
# This file is distributed under the same license as the Laravel Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2022-01-21 20:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title #
#: docs/master/socialite.md:1
#, no-wrap
msgid "Laravel Socialite"
msgstr ""

#. type: Bullet: '- '
#: docs/master/socialite.md:13
msgid "[Introduction](#introduction)"
msgstr ""

#. type: Bullet: '- '
#: docs/master/socialite.md:13
msgid "[Installation](#installation)"
msgstr ""

#. type: Bullet: '- '
#: docs/master/socialite.md:13
msgid "[Upgrading Socialite](#upgrading-socialite)"
msgstr ""

#. type: Bullet: '- '
#: docs/master/socialite.md:13
msgid "[Configuration](#configuration)"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:13
#, no-wrap
msgid ""
"- [Authentication](#authentication)\n"
"    - [Routing](#routing)\n"
"    - [Authentication & Storage](#authentication-and-storage)\n"
"    - [Access Scopes](#access-scopes)\n"
"    - [Optional Parameters](#optional-parameters)\n"
"- [Retrieving User Details](#retrieving-user-details)\n"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:15
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/socialite.md:15
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:18
msgid ""
"In addition to typical, form based authentication, Laravel also provides a "
"simple, convenient way to authenticate with OAuth providers using [Laravel "
"Socialite](https://github.com/laravel/socialite). Socialite currently "
"supports authentication with Facebook, Twitter, LinkedIn, Google, GitHub, "
"GitLab, and Bitbucket."
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:20
#, no-wrap
msgid ""
"> {tip} Adapters for other platforms are listed at the community driven "
"[Socialite Providers](https://socialiteproviders.com/) website.\n"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:22
#, no-wrap
msgid "<a name=\"installation\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/socialite.md:22
#, no-wrap
msgid "Installation"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:25
msgid ""
"To get started with Socialite, use the Composer package manager to add the "
"package to your project's dependencies:"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:27
#, no-wrap
msgid "    composer require laravel/socialite\n"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:29
#, no-wrap
msgid "<a name=\"upgrading-socialite\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/socialite.md:29
#, no-wrap
msgid "Upgrading Socialite"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:32
msgid ""
"When upgrading to a new major version of Socialite, it's important that you "
"carefully review [the upgrade "
"guide](https://github.com/laravel/socialite/blob/master/UPGRADE.md)."
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:34
#, no-wrap
msgid "<a name=\"configuration\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/socialite.md:34
#, no-wrap
msgid "Configuration"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:37
msgid ""
"Before using Socialite, you will need to add credentials for the OAuth "
"providers your application utilizes. These credentials should be placed in "
"your application's `config/services.php` configuration file, and should use "
"the key `facebook`, `twitter`, `linkedin`, `google`, `github`, `gitlab`, or "
"`bitbucket`, depending on the providers your application requires:"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:43
#, no-wrap
msgid ""
"    'github' => [\n"
"        'client_id' => env('GITHUB_CLIENT_ID'),\n"
"        'client_secret' => env('GITHUB_CLIENT_SECRET'),\n"
"        'redirect' => 'http://example.com/callback-url',\n"
"    ],\n"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:45
#, no-wrap
msgid ""
"> {tip} If the `redirect` option contains a relative path, it will "
"automatically be resolved to a fully qualified URL.\n"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:47
#, no-wrap
msgid "<a name=\"authentication\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/socialite.md:47
#, no-wrap
msgid "Authentication"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:50
#, no-wrap
msgid "<a name=\"routing\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/socialite.md:50
#, no-wrap
msgid "Routing"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:53
msgid ""
"To authenticate users using an OAuth provider, you will need two routes: one "
"for redirecting the user to the OAuth provider, and another for receiving "
"the callback from the provider after authentication. The example controller "
"below demonstrates the implementation of both routes:"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:55 docs/master/socialite.md:110 docs/master/socialite.md:127 docs/master/socialite.md:140 docs/master/socialite.md:167 docs/master/socialite.md:176 docs/master/socialite.md:185
#, no-wrap
msgid "    use Laravel\\Socialite\\Facades\\Socialite;\n"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:59
#, no-wrap
msgid ""
"    Route::get('/auth/redirect', function () {\n"
"        return Socialite::driver('github')->redirect();\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:62 docs/master/socialite.md:143
#, no-wrap
msgid ""
"    Route::get('/auth/callback', function () {\n"
"        $user = Socialite::driver('github')->user();\n"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:65
#, no-wrap
msgid ""
"        // $user->token\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:67
msgid ""
"The `redirect` method provided by the `Socialite` facade takes care of "
"redirecting the user to the OAuth provider, while the `user` method will "
"read the incoming request and retrieve the user's information from the "
"provider after they are authenticated."
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:69
#, no-wrap
msgid "<a name=\"authentication-and-storage\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/socialite.md:69
#, no-wrap
msgid "Authentication & Storage"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:72
msgid ""
"Once the user has been retrieved from the OAuth provider, you may determine "
"if the user exists in your application's database and [authenticate the "
"user](/docs/{{version}}/authentication#authenticate-a-user-instance). If the "
"user does not exist in your application's database, you will typically "
"create a new record in your database to represent the user:"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:76
#, no-wrap
msgid ""
"    use App\\Models\\User;\n"
"    use Illuminate\\Support\\Facades\\Auth;\n"
"    use Laravel\\Socialite\\Facades\\Socialite;\n"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:79
#, no-wrap
msgid ""
"    Route::get('/auth/callback', function () {\n"
"        $githubUser = Socialite::driver('github')->user();\n"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:81
#, no-wrap
msgid "        $user = User::where('github_id', $githubUser->id)->first();\n"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:96
#, no-wrap
msgid ""
"        if ($user) {\n"
"            $user->update([\n"
"                'github_token' => $githubUser->token,\n"
"                'github_refresh_token' => $githubUser->refreshToken,\n"
"            ]);\n"
"        } else {\n"
"            $user = User::create([\n"
"                'name' => $githubUser->name,\n"
"                'email' => $githubUser->email,\n"
"                'github_id' => $githubUser->id,\n"
"                'github_token' => $githubUser->token,\n"
"                'github_refresh_token' => $githubUser->refreshToken,\n"
"            ]);\n"
"        }\n"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:98
#, no-wrap
msgid "        Auth::login($user);\n"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:101
#, no-wrap
msgid ""
"        return redirect('/dashboard');\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:103
#, no-wrap
msgid ""
"> {tip} For more information regarding what user information is available "
"from specific OAuth providers, please consult the documentation on "
"[retrieving user details](#retrieving-user-details).\n"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:105
#, no-wrap
msgid "<a name=\"access-scopes\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/socialite.md:105
#, no-wrap
msgid "Access Scopes"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:108
msgid ""
"Before redirecting the user, you may also add additional \"scopes\" to the "
"authentication request using the `scopes` method. This method will merge all "
"existing scopes with the scopes that you supply:"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:114
#, no-wrap
msgid ""
"    return Socialite::driver('github')\n"
"        ->scopes(['read:user', 'public_repo'])\n"
"        ->redirect();\n"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:116
msgid ""
"You can overwrite all existing scopes on the authentication request using "
"the `setScopes` method:"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:120
#, no-wrap
msgid ""
"    return Socialite::driver('github')\n"
"        ->setScopes(['read:user', 'public_repo'])\n"
"        ->redirect();\n"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:122
#, no-wrap
msgid "<a name=\"optional-parameters\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/socialite.md:122
#, no-wrap
msgid "Optional Parameters"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:125
msgid ""
"A number of OAuth providers support optional parameters in the redirect "
"request. To include any optional parameters in the request, call the `with` "
"method with an associative array:"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:131
#, no-wrap
msgid ""
"    return Socialite::driver('google')\n"
"        ->with(['hd' => 'example.com'])\n"
"        ->redirect();\n"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:133
#, no-wrap
msgid ""
"> {note} When using the `with` method, be careful not to pass any reserved "
"keywords such as `state` or `response_type`.\n"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:135
#, no-wrap
msgid "<a name=\"retrieving-user-details\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/socialite.md:135
#, no-wrap
msgid "Retrieving User Details"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:138
msgid ""
"After the user is redirected back to your authentication callback route, you "
"may retrieve the user's details using Socialite's `user` method. The user "
"object returned by the `user` method provides a variety of properties and "
"methods you may use to store information about the user in your own "
"database. Different properties and methods may be available depending on "
"whether the OAuth provider you are authenticating with supports OAuth 1.0 or "
"OAuth 2.0:"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:148
#, no-wrap
msgid ""
"        // OAuth 2.0 providers...\n"
"        $token = $user->token;\n"
"        $refreshToken = $user->refreshToken;\n"
"        $expiresIn = $user->expiresIn;\n"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:152
#, no-wrap
msgid ""
"        // OAuth 1.0 providers...\n"
"        $token = $user->token;\n"
"        $tokenSecret = $user->tokenSecret;\n"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:160
#, no-wrap
msgid ""
"        // All providers...\n"
"        $user->getId();\n"
"        $user->getNickname();\n"
"        $user->getName();\n"
"        $user->getEmail();\n"
"        $user->getAvatar();\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:162
#, no-wrap
msgid "<a name=\"retrieving-user-details-from-a-token-oauth2\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/socialite.md:162
#, no-wrap
msgid "Retrieving User Details From A Token (OAuth2)"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:165
msgid ""
"If you already have a valid access token for a user, you can retrieve their "
"details using Socialite's `userFromToken` method:"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:169
#, no-wrap
msgid "    $user = Socialite::driver('github')->userFromToken($token);\n"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:171
#, no-wrap
msgid "<a name=\"retrieving-user-details-from-a-token-and-secret-oauth1\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/socialite.md:171
#, no-wrap
msgid "Retrieving User Details From A Token And Secret (OAuth1)"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:174
msgid ""
"If you already have a valid token and secret for a user, you can retrieve "
"their details using Socialite's `userFromTokenAndSecret` method:"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:178
#, no-wrap
msgid ""
"    $user = Socialite::driver('twitter')->userFromTokenAndSecret($token, "
"$secret);\n"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:180
#, no-wrap
msgid "<a name=\"stateless-authentication\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/socialite.md:180
#, no-wrap
msgid "Stateless Authentication"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:183
msgid ""
"The `stateless` method may be used to disable session state "
"verification. This is useful when adding social authentication to an API:"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:187
#, no-wrap
msgid "    return Socialite::driver('google')->stateless()->user();\n"
msgstr ""

#. type: Plain text
#: docs/master/socialite.md:188
#, no-wrap
msgid ""
"> {note} Stateless authentication is not available for the Twitter driver, "
"which uses OAuth 1.0 for authentication.\n"
msgstr ""
