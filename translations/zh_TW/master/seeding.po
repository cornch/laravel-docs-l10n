# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-03-23 04:12+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Cornch <cornch@cornch.dev>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.4.2\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Title #
#: docs/master/seeding.md:1
#, no-wrap
msgid "Database: Seeding"
msgstr ""

#. type: Bullet: '- '
#: docs/master/seeding.md:8
msgid "[Introduction](#introduction)"
msgstr ""

#. type: Bullet: '- '
#: docs/master/seeding.md:8
msgid "[Writing Seeders](#writing-seeders)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/seeding.md:8
msgid "[Using Model Factories](#using-model-factories)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/seeding.md:8
msgid "[Calling Additional Seeders](#calling-additional-seeders)"
msgstr ""

#. type: Bullet: '- '
#: docs/master/seeding.md:8
msgid "[Running Seeders](#running-seeders)"
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:10
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/seeding.md:10
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:13
msgid ""
"Laravel includes the ability to seed your database with test data using seed "
"classes. All seed classes are stored in the `database/seeders` directory. By "
"default, a `DatabaseSeeder` class is defined for you. From this class, you "
"may use the `call` method to run other seed classes, allowing you to control "
"the seeding order."
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:15
#, no-wrap
msgid "> {tip} [Mass assignment protection](/docs/{{version}}/eloquent#mass-assignment) is automatically disabled during database seeding.\n"
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:17
#, no-wrap
msgid "<a name=\"writing-seeders\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/seeding.md:17
#, no-wrap
msgid "Writing Seeders"
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:20
msgid ""
"To generate a seeder, execute the `make:seeder` [Artisan command](/docs/"
"{{version}}/artisan). All seeders generated by the framework will be placed "
"in the `database/seeders` directory:"
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:22
#, no-wrap
msgid "    php artisan make:seeder UserSeeder\n"
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:24
msgid ""
"A seeder class only contains one method by default: `run`. This method is "
"called when the `db:seed` [Artisan command](/docs/{{version}}/artisan) is "
"executed. Within the `run` method, you may insert data into your database "
"however you wish. You may use the [query builder](/docs/{{version}}/queries) "
"to manually insert data or you may use [Eloquent model factories](/docs/"
"{{version}}/database-testing#defining-model-factories)."
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:26
msgid ""
"As an example, let's modify the default `DatabaseSeeder` class and add a "
"database insert statement to the `run` method:"
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:28
#, no-wrap
msgid "    <?php\n"
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:30
#, no-wrap
msgid "    namespace Database\\Seeders;\n"
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:35
#, no-wrap
msgid ""
"    use Illuminate\\Database\\Seeder;\n"
"    use Illuminate\\Support\\Facades\\DB;\n"
"    use Illuminate\\Support\\Facades\\Hash;\n"
"    use Illuminate\\Support\\Str;\n"
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:52
#, no-wrap
msgid ""
"    class DatabaseSeeder extends Seeder\n"
"    {\n"
"        /**\n"
"         * Run the database seeders.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function run()\n"
"        {\n"
"            DB::table('users')->insert([\n"
"                'name' => Str::random(10),\n"
"                'email' => Str::random(10).'@gmail.com',\n"
"                'password' => Hash::make('password'),\n"
"            ]);\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:54
#, no-wrap
msgid "> {tip} You may type-hint any dependencies you need within the `run` method's signature. They will automatically be resolved via the Laravel [service container](/docs/{{version}}/container).\n"
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:56
#, no-wrap
msgid "<a name=\"using-model-factories\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/seeding.md:56
#, no-wrap
msgid "Using Model Factories"
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:59
msgid ""
"Of course, manually specifying the attributes for each model seed is "
"cumbersome. Instead, you can use [model factories](/docs/{{version}}/"
"database-testing#defining-model-factories) to conveniently generate large "
"amounts of database records. First, review the [model factory documentation]"
"(/docs/{{version}}/database-testing#defining-model-factories) to learn how "
"to define your factories."
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:61
msgid "For example, let's create 50 users that each has one related post:"
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:63
#, no-wrap
msgid "    use App\\Models\\User;\n"
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:76
#, no-wrap
msgid ""
"    /**\n"
"     * Run the database seeders.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function run()\n"
"    {\n"
"        User::factory()\n"
"                ->count(50)\n"
"                ->hasPosts(1)\n"
"                ->create();\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:78
#, no-wrap
msgid "<a name=\"calling-additional-seeders\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/seeding.md:78
#, no-wrap
msgid "Calling Additional Seeders"
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:81
msgid ""
"Within the `DatabaseSeeder` class, you may use the `call` method to execute "
"additional seed classes. Using the `call` method allows you to break up your "
"database seeding into multiple files so that no single seeder class becomes "
"too large. The `call` method accepts an array of seeder classes that should "
"be executed:"
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:95
#, no-wrap
msgid ""
"    /**\n"
"     * Run the database seeders.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function run()\n"
"    {\n"
"        $this->call([\n"
"            UserSeeder::class,\n"
"            PostSeeder::class,\n"
"            CommentSeeder::class,\n"
"        ]);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:97
#, no-wrap
msgid "<a name=\"running-seeders\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/seeding.md:97
#, no-wrap
msgid "Running Seeders"
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:100
msgid ""
"You may execute the `db:seed` Artisan command to seed your database. By "
"default, the `db:seed` command runs the `Database\\Seeders\\DatabaseSeeder` "
"class, which may in turn invoke other seed classes. However, you may use the "
"`--class` option to specify a specific seeder class to run individually:"
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:102
#, no-wrap
msgid "    php artisan db:seed\n"
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:104
#, no-wrap
msgid "    php artisan db:seed --class=UserSeeder\n"
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:106
msgid ""
"You may also seed your database using the `migrate:fresh` command in "
"combination with the `--seed` option, which will drop all tables and re-run "
"all of your migrations. This command is useful for completely re-building "
"your database:"
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:108
#, no-wrap
msgid "    php artisan migrate:fresh --seed\n"
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:110
#, no-wrap
msgid "<a name=\"forcing-seeding-production\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/seeding.md:110
#, no-wrap
msgid "Forcing Seeders To Run In Production"
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:113
msgid ""
"Some seeding operations may cause you to alter or lose data. In order to "
"protect you from running seeding commands against your production database, "
"you will be prompted for confirmation before the seeders are executed in the "
"`production` environment. To force the seeders to run without a prompt, use "
"the `--force` flag:"
msgstr ""

#. type: Plain text
#: docs/master/seeding.md:114
#, no-wrap
msgid "    php artisan db:seed --force\n"
msgstr ""

#, no-wrap
#~ msgid "Laravel Fortify"
#~ msgstr "Laravel Fortify"

#~ msgid "[What Is Fortify?](#what-is-fortify)"
#~ msgstr "[什麼是 Fortify？](#what-is-fortify)"

#~ msgid "[When Should I Use Fortify?](#when-should-i-use-fortify)"
#~ msgstr "[什麼時候該用 Fortify？](#when-should-i-use-fortify)"
