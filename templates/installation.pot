#
msgid ""
msgstr ""

#: docs/8.x/installation.md:block 1 (header)
msgid "Installation"
msgstr ""

#: docs/8.x/installation.md:block 2 (unordered list)
msgid "[Meet Laravel](#meet-laravel)"
msgstr ""

#: docs/8.x/installation.md:block 2 (unordered list)
msgid "[Why Laravel?](#why-laravel)"
msgstr ""

#: docs/8.x/installation.md:block 2 (unordered list)
msgid "[Your First Laravel Project](#your-first-laravel-project)"
msgstr ""

#: docs/8.x/installation.md:block 2 (unordered list)
msgid "[Getting Started On macOS](#getting-started-on-macos)"
msgstr ""

#: docs/8.x/installation.md:block 2 (unordered list)
msgid "[Getting Started On Windows](#getting-started-on-windows)"
msgstr ""

#: docs/8.x/installation.md:block 2 (unordered list)
msgid "[Getting Started On Linux](#getting-started-on-linux)"
msgstr ""

#: docs/8.x/installation.md:block 2 (unordered list)
msgid "[Choosing Your Sail Services](#choosing-your-sail-services)"
msgstr ""

#: docs/8.x/installation.md:block 2 (unordered list)
msgid "[Installation Via Composer](#installation-via-composer)"
msgstr ""

#: docs/8.x/installation.md:block 2 (unordered list)
msgid "[Initial Configuration](#initial-configuration)"
msgstr ""

#: docs/8.x/installation.md:block 2 (unordered list)
msgid "[Environment Based Configuration](#environment-based-configuration)"
msgstr ""

#: docs/8.x/installation.md:block 2 (unordered list)
msgid "[Directory Configuration](#directory-configuration)"
msgstr ""

#: docs/8.x/installation.md:block 2 (unordered list)
msgid "[Next Steps](#next-steps)"
msgstr ""

#: docs/8.x/installation.md:block 2 (unordered list)
msgid "[Laravel The Full Stack Framework](#laravel-the-fullstack-framework)"
msgstr ""

#: docs/8.x/installation.md:block 2 (unordered list)
msgid "[Laravel The API Backend](#laravel-the-api-backend)"
msgstr ""

#: docs/8.x/installation.md:block 4 (header)
msgid "Meet Laravel"
msgstr ""

#: docs/8.x/installation.md:block 5 (paragraph)
msgid "Laravel is a web application framework with expressive, elegant syntax. A web framework provides a structure and starting point for creating your application, allowing you to focus on creating something amazing while we sweat the details."
msgstr ""

#: docs/8.x/installation.md:block 6 (paragraph)
msgid "Laravel strives to provide an amazing developer experience while providing powerful features such as thorough dependency injection, an expressive database abstraction layer, queues and scheduled jobs, unit and integration testing, and more."
msgstr ""

#: docs/8.x/installation.md:block 7 (paragraph)
msgid "Whether you are new to PHP or web frameworks or have years of experience, Laravel is a framework that can grow with you. We'll help you take your first steps as a web developer or give you a boost as you take your expertise to the next level. We can't wait to see what you build."
msgstr ""

#: docs/8.x/installation.md:block 9 (header)
msgid "Why Laravel?"
msgstr ""

#: docs/8.x/installation.md:block 10 (paragraph)
msgid "There are a variety of tools and frameworks available to you when building a web application. However, we believe Laravel is the best choice for building modern, full-stack web applications."
msgstr ""

#: docs/8.x/installation.md:block 11 (header)
msgid "A Progressive Framework"
msgstr ""

#: docs/8.x/installation.md:block 12 (paragraph)
msgid "We like to call Laravel a \"progressive\" framework. By that, we mean that Laravel grows with you. If you're just taking your first steps into web development, Laravel's vast library of documentation, guides, and [video tutorials](https://laracasts.com) will help you learn the ropes without becoming overwhelmed."
msgstr ""

#: docs/8.x/installation.md:block 13 (paragraph)
msgid "If you're a senior developer, Laravel gives you robust tools for [dependency injection](/docs/{{version}}/container), [unit testing](/docs/{{version}}/testing), [queues](/docs/{{version}}/queues), [real-time events](/docs/{{version}}/broadcasting), and more. Laravel is fine-tuned for building professional web applications and ready to handle enterprise work loads."
msgstr ""

#: docs/8.x/installation.md:block 14 (header)
msgid "A Scalable Framework"
msgstr ""

#: docs/8.x/installation.md:block 15 (paragraph)
msgid "Laravel is incredibly scalable. Thanks to the scaling-friendly nature of PHP and Laravel's built-in support for fast, distributed cache systems like Redis, horizontal scaling with Laravel is a breeze. In fact, Laravel applications have been easily scaled to handle hundreds of millions of requests per month."
msgstr ""

#: docs/8.x/installation.md:block 16 (paragraph)
msgid "Need extreme scaling? Platforms like [Laravel Vapor](https://vapor.laravel.com) allow you to run your Laravel application at nearly limitless scale on AWS's latest serverless technology."
msgstr ""

#: docs/8.x/installation.md:block 17 (header)
msgid "A Community Framework"
msgstr ""

#: docs/8.x/installation.md:block 18 (paragraph)
msgid "Laravel combines the best packages in the PHP ecosystem to offer the most robust and developer friendly framework available. In addition, thousands of talented developers from around the world have [contributed to the framework](https://github.com/laravel/framework). Who knows, maybe you'll even become a Laravel contributor."
msgstr ""

#: docs/8.x/installation.md:block 20 (header)
msgid "Your First Laravel Project"
msgstr ""

#: docs/8.x/installation.md:block 21 (paragraph)
msgid "We want it to be as easy as possible to get started with Laravel. There are a variety of options for developing and running a Laravel project on your own computer. While you may wish to explore these options at a later time, Laravel provides [Sail](/docs/{{version}}/sail), a built-in solution for running your Laravel project using [Docker](https://www.docker.com)."
msgstr ""

#: docs/8.x/installation.md:block 22 (paragraph)
msgid "Docker is a tool for running applications and services in small, light-weight \"containers\" which do not interfere with your local computer's installed software or configuration. This means you don't have to worry about configuring or setting up complicated development tools such as web servers and databases on your personal computer. To get started, you only need to install [Docker Desktop](https://www.docker.com/products/docker-desktop)."
msgstr ""

#: docs/8.x/installation.md:block 23 (paragraph)
msgid "Laravel Sail is a light-weight command-line interface for interacting with Laravel's default Docker configuration. Sail provides a great starting point for building a Laravel application using PHP, MySQL, and Redis without requiring prior Docker experience."
msgstr ""

#: docs/8.x/installation.md:block 24 (quote)
msgid "{tip} Already a Docker expert? Don't worry! Everything about Sail can be customized using the `docker-compose.yml` file included with Laravel."
msgstr ""

#: docs/8.x/installation.md:block 26 (header)
msgid "Getting Started On macOS"
msgstr ""

#: docs/8.x/installation.md:block 27 (paragraph)
msgid "If you're developing on a Mac and [Docker Desktop](https://www.docker.com/products/docker-desktop) is already installed, you can use a simple terminal command to create a new Laravel project. For example, to create a new Laravel application in a directory named \"example-app\", you may run the following command in your terminal:"
msgstr ""

#: docs/8.x/installation.md:block 28 (code)
msgid "curl -s \"https://laravel.build/example-app\" | bash\n"
msgstr ""

#: docs/8.x/installation.md:block 29 (paragraph)
msgid "Of course, you can change \"example-app\" in this URL to anything you like. The Laravel application's directory will be created within the directory you execute the command from."
msgstr ""

#: docs/8.x/installation.md:block 30 (paragraph)
msgid "After the project has been created, you can navigate to the application directory and start Laravel Sail. Laravel Sail provides a simple command-line interface for interacting with Laravel's default Docker configuration:"
msgstr ""

#: docs/8.x/installation.md:block 31 (code)
msgid ""
"cd example-app\n"
"\n"
"./vendor/bin/sail up\n"
msgstr ""

#: docs/8.x/installation.md:block 32 (paragraph)
msgid "The first time you run the Sail `up` command, Sail's application containers will be built on your machine. This could take several minutes. **Don't worry, subsequent attempts to start Sail will be much faster.**"
msgstr ""

#: docs/8.x/installation.md:block 33 (paragraph)
msgid "Once the application's Docker containers have been started, you can access the application in your web browser at: http://localhost."
msgstr ""

#: docs/8.x/installation.md:block 34 (quote)
msgid "{tip} To continue learning more about Laravel Sail, review its [complete documentation](/docs/{{version}}/sail)."
msgstr ""

#: docs/8.x/installation.md:block 36 (header)
msgid "Getting Started On Windows"
msgstr ""

#: docs/8.x/installation.md:block 37 (paragraph)
msgid "Before we create a new Laravel application on your Windows machine, make sure to install [Docker Desktop](https://www.docker.com/products/docker-desktop). Next, you should ensure that Windows Subsystem for Linux 2 (WSL2) is installed and enabled. WSL allows you to run Linux binary executables natively on Windows 10. Information on how to install and enable WSL2 can be found within Microsoft's [developer environment documentation](https://docs.microsoft.com/en-us/windows/wsl/install-win10)."
msgstr ""

#: docs/8.x/installation.md:block 38 (quote)
msgid "{tip} After installing and enabling WSL2, you should ensure that Docker Desktop is [configured to use the WSL2 backend](https://docs.docker.com/docker-for-windows/wsl/)."
msgstr ""

#: docs/8.x/installation.md:block 39 (paragraph)
msgid "Next, you are ready to create your first Laravel project. Launch [Windows Terminal](https://www.microsoft.com/en-us/p/windows-terminal/9n0dx20hk701?rtc=1&activetab=pivot:overviewtab) and begin a new terminal session for your WSL2 Linux operating system. Next, you can use a simple terminal command to create a new Laravel project. For example, to create a new Laravel application in a directory named \"example-app\", you may run the following command in your terminal:"
msgstr ""

#: docs/8.x/installation.md:block 40 (code)
msgid "curl -s https://laravel.build/example-app | bash\n"
msgstr ""

#: docs/8.x/installation.md:block 47 (header)
msgid "Developing Within WSL2"
msgstr ""

#: docs/8.x/installation.md:block 48 (paragraph)
msgid "Of course, you will need to be able to modify the Laravel application files that were created within your WSL2 installation. To accomplish this, we recommend using Microsoft's [Visual Studio Code](https://code.visualstudio.com) editor and their first-party extension for [Remote Development](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack)."
msgstr ""

#: docs/8.x/installation.md:block 49 (paragraph)
msgid "Once these tools are installed, you may open any Laravel project by executing the `code .` command from your application's root directory using Windows Terminal."
msgstr ""

#: docs/8.x/installation.md:block 51 (header)
msgid "Getting Started On Linux"
msgstr ""

#: docs/8.x/installation.md:block 52 (paragraph)
msgid "If you're developing on Linux and [Docker Compose](https://docs.docker.com/compose/install/) is already installed, you can use a simple terminal command to create a new Laravel project. For example, to create a new Laravel application in a directory named \"example-app\", you may run the following command in your terminal:"
msgstr ""

#: docs/8.x/installation.md:block 61 (header)
msgid "Choosing Your Sail Services"
msgstr ""

#: docs/8.x/installation.md:block 62 (paragraph)
msgid "When creating a new Laravel application via Sail, you may use the `with` query string variable to choose which services should be configured in your new application's `docker-compose.yml` file. Available services include `mysql`, `pgsql`, `mariadb`, `redis`, `memcached`, `meilisearch`, `minio`, `selenium`, and `mailhog`:"
msgstr ""

#: docs/8.x/installation.md:block 63 (code)
msgid "curl -s \"https://laravel.build/example-app?with=mysql,redis\" | bash\n"
msgstr ""

#: docs/8.x/installation.md:block 64 (paragraph)
msgid "If you do not specify which services you would like configured, a default stack of `mysql`, `redis`, `meilisearch`, `mailhog`, and `selenium` will be configured."
msgstr ""

#: docs/8.x/installation.md:block 66 (header)
msgid "Installation Via Composer"
msgstr ""

#: docs/8.x/installation.md:block 67 (paragraph)
msgid "If your computer already has PHP and Composer installed, you may create a new Laravel project by using Composer directly. After the application has been created, you may start Laravel's local development server using the Artisan CLI's `serve` command:"
msgstr ""

#: docs/8.x/installation.md:block 68 (code)
msgid ""
"composer create-project laravel/laravel:^8.0 example-app\n"
"\n"
"cd example-app\n"
"\n"
"php artisan serve\n"
msgstr ""

#: docs/8.x/installation.md:block 70 (header)
msgid "The Laravel Installer"
msgstr ""

#: docs/8.x/installation.md:block 71 (paragraph)
msgid "Or, you may install the Laravel Installer as a global Composer dependency:"
msgstr ""

#: docs/8.x/installation.md:block 72 (code)
msgid ""
"composer global require laravel/installer\n"
"\n"
"laravel new example-app\n"
"\n"
"cd example-app\n"
"\n"
"php artisan serve\n"
msgstr ""

#: docs/8.x/installation.md:block 73 (paragraph)
msgid "Make sure to place Composer's system-wide vendor bin directory in your `$PATH` so the `laravel` executable can be located by your system. This directory exists in different locations based on your operating system; however, some common locations include:"
msgstr ""

#: docs/8.x/installation.md:block 75 (unordered list)
msgid "macOS: `$HOME/.composer/vendor/bin`"
msgstr ""

#: docs/8.x/installation.md:block 75 (unordered list)
msgid "Windows: `%USERPROFILE%\\AppData\\Roaming\\Composer\\vendor\\bin`"
msgstr ""

#: docs/8.x/installation.md:block 75 (unordered list)
msgid "GNU / Linux Distributions: `$HOME/.config/composer/vendor/bin` or `$HOME/.composer/vendor/bin`"
msgstr ""

#: docs/8.x/installation.md:block 77 (paragraph)
msgid "For convenience, the Laravel installer can also create a Git repository for your new project. To indicate that you want a Git repository to be created, pass the `--git` flag when creating a new project:"
msgstr ""

#: docs/8.x/installation.md:block 78 (code)
msgid "laravel new example-app --git\n"
msgstr ""

#: docs/8.x/installation.md:block 79 (paragraph)
msgid "This command will initialize a new Git repository for your project and automatically commit the base Laravel skeleton. The `git` flag assumes you have properly installed and configured Git. You can also use the `--branch` flag to set the initial branch name:"
msgstr ""

#: docs/8.x/installation.md:block 80 (code)
msgid "laravel new example-app --git --branch=\"main\"\n"
msgstr ""

#: docs/8.x/installation.md:block 81 (paragraph)
msgid "Instead of using the `--git` flag, you may also use the `--github` flag to create a Git repository and also create a corresponding private repository on GitHub:"
msgstr ""

#: docs/8.x/installation.md:block 82 (code)
msgid "laravel new example-app --github\n"
msgstr ""

#: docs/8.x/installation.md:block 83 (paragraph)
msgid "The created repository will then be available at `https://github.com/<your-account>/example-app`. The `github` flag assumes you have properly installed the [GitHub CLI](https://cli.github.com) and are authenticated with GitHub. Additionally, you should have `git` installed and properly configured. If needed, you can pass additional flags that are supported by the GitHub CLI:"
msgstr ""

#: docs/8.x/installation.md:block 84 (code)
msgid "laravel new example-app --github=\"--public\"\n"
msgstr ""

#: docs/8.x/installation.md:block 85 (paragraph)
msgid "You may use the `--organization` flag to create the repository under a specific GitHub organization:"
msgstr ""

#: docs/8.x/installation.md:block 86 (code)
msgid "laravel new example-app --github=\"--public\" --organization=\"laravel\"\n"
msgstr ""

#: docs/8.x/installation.md:block 88 (header)
msgid "Initial Configuration"
msgstr ""

#: docs/8.x/installation.md:block 89 (paragraph)
msgid "All of the configuration files for the Laravel framework are stored in the `config` directory. Each option is documented, so feel free to look through the files and get familiar with the options available to you."
msgstr ""

#: docs/8.x/installation.md:block 90 (paragraph)
msgid "Laravel needs almost no additional configuration out of the box. You are free to get started developing! However, you may wish to review the `config/app.php` file and its documentation. It contains several options such as `timezone` and `locale` that you may wish to change according to your application."
msgstr ""

#: docs/8.x/installation.md:block 92 (header)
msgid "Environment Based Configuration"
msgstr ""

#: docs/8.x/installation.md:block 93 (paragraph)
msgid "Since many of Laravel's configuration option values may vary depending on whether your application is running on your local computer or on a production web server, many important configuration values are defined using the `.env` file that exists at the root of your application."
msgstr ""

#: docs/8.x/installation.md:block 94 (paragraph)
msgid "Your `.env` file should not be committed to your application's source control, since each developer / server using your application could require a different environment configuration. Furthermore, this would be a security risk in the event an intruder gains access to your source control repository, since any sensitive credentials would get exposed."
msgstr ""

#: docs/8.x/installation.md:block 95 (quote)
msgid "{tip} For more information about the `.env` file and environment based configuration, check out the full [configuration documentation](/docs/{{version}}/configuration#environment-configuration)."
msgstr ""

#: docs/8.x/installation.md:block 97 (header)
msgid "Directory Configuration"
msgstr ""

#: docs/8.x/installation.md:block 98 (paragraph)
msgid "Laravel should always be served out of the root of the \"web directory\" configured for your web server. You should not attempt to serve a Laravel application out of a subdirectory of the \"web directory\". Attempting to do so could expose sensitive files that exist within your application."
msgstr ""

#: docs/8.x/installation.md:block 100 (header)
msgid "Next Steps"
msgstr ""

#: docs/8.x/installation.md:block 101 (paragraph)
msgid "Now that you have created your Laravel project, you may be wondering what to learn next. First, we strongly recommend becoming familiar with how Laravel works by reading the following documentation:"
msgstr ""

#: docs/8.x/installation.md:block 103 (unordered list)
msgid "[Request Lifecycle](/docs/{{version}}/lifecycle)"
msgstr ""

#: docs/8.x/installation.md:block 103 (unordered list)
msgid "[Configuration](/docs/{{version}}/configuration)"
msgstr ""

#: docs/8.x/installation.md:block 103 (unordered list)
msgid "[Directory Structure](/docs/{{version}}/structure)"
msgstr ""

#: docs/8.x/installation.md:block 103 (unordered list)
msgid "[Service Container](/docs/{{version}}/container)"
msgstr ""

#: docs/8.x/installation.md:block 103 (unordered list)
msgid "[Facades](/docs/{{version}}/facades)"
msgstr ""

#: docs/8.x/installation.md:block 105 (paragraph)
msgid "How you want to use Laravel will also dictate the next steps on your journey. There are a variety of ways to use Laravel, and we'll explore two primary use cases for the framework below."
msgstr ""

#: docs/8.x/installation.md:block 107 (header)
msgid "Laravel The Full Stack Framework"
msgstr ""

#: docs/8.x/installation.md:block 108 (paragraph)
msgid "Laravel may serve as a full stack framework. By \"full stack\" framework we mean that you are going to use Laravel to route requests to your application and render your frontend via [Blade templates](/docs/{{version}}/blade) or using a single-page application hybrid technology like [Inertia.js](https://inertiajs.com). This is the most common way to use the Laravel framework."
msgstr ""

#: docs/8.x/installation.md:block 109 (paragraph)
msgid "If this is how you plan to use Laravel, you may want to check out our documentation on [routing](/docs/{{version}}/routing), [views](/docs/{{version}}/views), or the [Eloquent ORM](/docs/{{version}}/eloquent). In addition, you might be interested in learning about community packages like [Livewire](https://laravel-livewire.com) and [Inertia.js](https://inertiajs.com). These packages allow you to use Laravel as a full-stack framework while enjoying many of the UI benefits provided by single-page JavaScript applications."
msgstr ""

#: docs/8.x/installation.md:block 110 (paragraph)
msgid "If you are using Laravel as a full stack framework, we also strongly encourage you to learn how to compile your application's CSS and JavaScript using [Laravel Mix](/docs/{{version}}/mix)."
msgstr ""

#: docs/8.x/installation.md:block 111 (quote)
msgid "{tip} If you want to get a head start building your application, check out one of our official [application starter kits](/docs/{{version}}/starter-kits)."
msgstr ""

#: docs/8.x/installation.md:block 113 (header)
msgid "Laravel The API Backend"
msgstr ""

#: docs/8.x/installation.md:block 114 (paragraph)
msgid "Laravel may also serve as an API backend to a JavaScript single-page application or mobile application. For example, you might use Laravel as an API backend for your [Next.js](https://nextjs.org) application. In this context, you may use Laravel to provide [authentication](/docs/{{version}}/sanctum) and data storage / retrieval for your application, while also taking advantage of Laravel's powerful services such as queues, emails, notifications, and more."
msgstr ""

#: docs/8.x/installation.md:block 115 (paragraph)
msgid "If this is how you plan to use Laravel, you may want to check out our documentation on [routing](/docs/{{version}}/routing), [Laravel Sanctum](/docs/{{version}}/sanctum), and the [Eloquent ORM](/docs/{{version}}/eloquent)."
msgstr ""

#: docs/8.x/installation.md:block 116 (quote)
msgid "{tip} Need a head start scaffolding your Laravel backend and Next.js frontend? Laravel Breeze offers an [API stack](/docs/{{version}}/starter-kits#breeze-and-next) as well as a [Next.js frontend implementation](https://github.com/laravel/breeze-next) so you can get started in minutes."
msgstr ""

#: docs/9.x/installation.md:block 2 (unordered list)
msgid "[Laravel & Docker](#laravel-and-docker)"
msgstr ""

#: docs/9.x/installation.md:block 2 (unordered list)
msgid "[Databases & Migrations](#databases-and-migrations)"
msgstr ""

#: docs/9.x/installation.md:block 7 (paragraph)
msgid "Whether you are new to PHP web frameworks or have years of experience, Laravel is a framework that can grow with you. We'll help you take your first steps as a web developer or give you a boost as you take your expertise to the next level. We can't wait to see what you build."
msgstr ""

#: docs/9.x/installation.md:block 8 (quote)
msgid "**Note** New to Laravel? Check out the [Laravel Bootcamp](https://bootcamp.laravel.com) for a hands-on tour of the framework while we walk you through building your first Laravel application."
msgstr ""

#: docs/9.x/installation.md:block 22 (paragraph)
msgid "Before creating your first Laravel project, you should ensure that your local machine has PHP and [Composer](https://getcomposer.org) installed. If you are developing on macOS, PHP and Composer can be installed via [Homebrew](https://brew.sh/). In addition, we recommend [installing Node and NPM](https://nodejs.org)."
msgstr ""

#: docs/9.x/installation.md:block 23 (paragraph)
msgid "After you have installed PHP and Composer, you may create a new Laravel project via the Composer `create-project` command:"
msgstr ""

#: docs/9.x/installation.md:block 24 (code)
msgid "composer create-project laravel/laravel example-app\n"
msgstr ""

#: docs/9.x/installation.md:block 25 (paragraph)
msgid "Or, you may create new Laravel projects by globally installing the Laravel installer via Composer:"
msgstr ""

#: docs/9.x/installation.md:block 26 (code)
msgid ""
"composer global require laravel/installer\n"
"\n"
"laravel new example-app\n"
msgstr ""

#: docs/9.x/installation.md:block 27 (paragraph)
msgid "After the project has been created, start Laravel's local development server using the Laravel's Artisan CLI `serve` command:"
msgstr ""

#: docs/9.x/installation.md:block 28 (code)
msgid ""
"cd example-app\n"
"\n"
"php artisan serve\n"
msgstr ""

#: docs/9.x/installation.md:block 29 (paragraph)
msgid "Once you have started the Artisan development server, your application will be accessible in your web browser at `http://localhost:8000`. Next, you're ready to [start taking your next steps into the Laravel ecosystem](#next-steps). Of course, you may also want to [configure a database](#databases-and-migrations)."
msgstr ""

#: docs/9.x/installation.md:block 30 (quote)
msgid "**Note** If you would like a head start when developing your Laravel application, consider using one of our [starter kits](/docs/{{version}}/starter-kits). Laravel's starter kits provide backend and frontend authentication scaffolding for your new Laravel application."
msgstr ""

#: docs/9.x/installation.md:block 32 (header)
msgid "Laravel & Docker"
msgstr ""

#: docs/9.x/installation.md:block 33 (paragraph)
msgid "We want it to be as easy as possible to get started with Laravel regardless of your preferred operating system. So, there are a variety of options for developing and running a Laravel project on your local machine. While you may wish to explore these options at a later time, Laravel provides [Sail](/docs/{{version}}/sail), a built-in solution for running your Laravel project using [Docker](https://www.docker.com)."
msgstr ""

#: docs/9.x/installation.md:block 34 (paragraph)
msgid "Docker is a tool for running applications and services in small, light-weight \"containers\" which do not interfere with your local machine's installed software or configuration. This means you don't have to worry about configuring or setting up complicated development tools such as web servers and databases on your local machine. To get started, you only need to install [Docker Desktop](https://www.docker.com/products/docker-desktop)."
msgstr ""

#: docs/9.x/installation.md:block 36 (quote)
msgid "**Note** Already a Docker expert? Don't worry! Everything about Sail can be customized using the `docker-compose.yml` file included with Laravel."
msgstr ""

#: docs/9.x/installation.md:block 41 (paragraph)
msgid "Of course, you can change \"example-app\" in this URL to anything you like - just make sure the application name only contains alpha-numeric characters, dashes, and underscores. The Laravel application's directory will be created within the directory you execute the command from."
msgstr ""

#: docs/9.x/installation.md:block 42 (paragraph)
msgid "Sail installation may take several minutes while Sail's application containers are built on your local machine."
msgstr ""

#: docs/9.x/installation.md:block 46 (quote)
msgid "**Note** To continue learning more about Laravel Sail, review its [complete documentation](/docs/{{version}}/sail)."
msgstr ""

#: docs/9.x/installation.md:block 50 (quote)
msgid "**Note** After installing and enabling WSL2, you should ensure that Docker Desktop is [configured to use the WSL2 backend](https://docs.docker.com/docker-for-windows/wsl/)."
msgstr ""

#: docs/9.x/installation.md:block 74 (paragraph)
msgid "When creating a new Laravel application via Sail, you may use the `with` query string variable to choose which services should be configured in your new application's `docker-compose.yml` file. Available services include `mysql`, `pgsql`, `mariadb`, `redis`, `memcached`, `meilisearch`, `minio`, `selenium`, and `mailpit`:"
msgstr ""

#: docs/9.x/installation.md:block 76 (paragraph)
msgid "If you do not specify which services you would like configured, a default stack of `mysql`, `redis`, `meilisearch`, `mailpit`, and `selenium` will be configured."
msgstr ""

#: docs/9.x/installation.md:block 77 (paragraph)
msgid "You may instruct Sail to install a default [Devcontainer](/docs/{{version}}/sail#using-devcontainers) by adding the `devcontainer` parameter to the URL:"
msgstr ""

#: docs/9.x/installation.md:block 78 (code)
msgid "curl -s \"https://laravel.build/example-app?with=mysql,redis&devcontainer\" | bash\n"
msgstr ""

#: docs/9.x/installation.md:block 85 (paragraph)
msgid "Since many of Laravel's configuration option values may vary depending on whether your application is running on your local machine or on a production web server, many important configuration values are defined using the `.env` file that exists at the root of your application."
msgstr ""

#: docs/9.x/installation.md:block 87 (quote)
msgid "**Note** For more information about the `.env` file and environment based configuration, check out the full [configuration documentation](/docs/{{version}}/configuration#environment-configuration)."
msgstr ""

#: docs/9.x/installation.md:block 89 (header)
msgid "Databases & Migrations"
msgstr ""

#: docs/9.x/installation.md:block 90 (paragraph)
msgid "Now that you have created your Laravel application, you probably want to store some data in a database. By default, your application's `.env` configuration file specifies that Laravel will be interacting with a MySQL database and will access the database at `127.0.0.1`. If you are developing on macOS and need to install MySQL, Postgres, or Redis locally, you may find it convenient to utilize [DBngin](https://dbngin.com/)."
msgstr ""

#: docs/9.x/installation.md:block 91 (paragraph)
msgid "If you do not want to install MySQL or Postgres on your local machine, you can always use a [SQLite](https://www.sqlite.org/index.html) database. SQLite is a small, fast, self-contained database engine. To get started, create a SQLite database by creating an empty SQLite file. Typically, this file will exist within the `database` directory of your Laravel application:"
msgstr ""

#: docs/9.x/installation.md:block 92 (code)
msgid "touch database/database.sqlite\n"
msgstr ""

#: docs/9.x/installation.md:block 93 (paragraph)
msgid "Next, update your `.env` configuration file to use Laravel's `sqlite` database driver. You may remove the other database configuration options:"
msgstr ""

#: docs/9.x/installation.md:block 94 (code)
msgid ""
"DB_CONNECTION=sqlite # [tl! add]\n"
"DB_CONNECTION=mysql # [tl! remove]\n"
"DB_HOST=127.0.0.1 # [tl! remove]\n"
"DB_PORT=3306 # [tl! remove]\n"
"DB_DATABASE=laravel # [tl! remove]\n"
"DB_USERNAME=root # [tl! remove]\n"
"DB_PASSWORD= # [tl! remove]\n"
msgstr ""

#: docs/9.x/installation.md:block 95 (paragraph)
msgid "Once you have configured your SQLite database, you may run your application's [database migrations](/docs/{{version}}/migrations), which will create your application's database tables:"
msgstr ""

#: docs/9.x/installation.md:block 96 (code)
msgid "php artisan migrate\n"
msgstr ""

#: docs/9.x/installation.md:block 101 (unordered list)
msgid "[Frontend](/docs/{{version}}/frontend)"
msgstr ""

#: docs/9.x/installation.md:block 107 (paragraph)
msgid "Laravel may serve as a full stack framework. By \"full stack\" framework we mean that you are going to use Laravel to route requests to your application and render your frontend via [Blade templates](/docs/{{version}}/blade) or a single-page application hybrid technology like [Inertia](https://inertiajs.com). This is the most common way to use the Laravel framework, and, in our opinion, the most productive way to use Laravel."
msgstr ""

#: docs/9.x/installation.md:block 108 (paragraph)
msgid "If this is how you plan to use Laravel, you may want to check out our documentation on [frontend development](/docs/{{version}}/frontend), [routing](/docs/{{version}}/routing), [views](/docs/{{version}}/views), or the [Eloquent ORM](/docs/{{version}}/eloquent). In addition, you might be interested in learning about community packages like [Livewire](https://laravel-livewire.com) and [Inertia](https://inertiajs.com). These packages allow you to use Laravel as a full-stack framework while enjoying many of the UI benefits provided by single-page JavaScript applications."
msgstr ""

#: docs/9.x/installation.md:block 109 (paragraph)
msgid "If you are using Laravel as a full stack framework, we also strongly encourage you to learn how to compile your application's CSS and JavaScript using [Vite](/docs/{{version}}/vite)."
msgstr ""

#: docs/9.x/installation.md:block 110 (quote)
msgid "**Note** If you want to get a head start building your application, check out one of our official [application starter kits](/docs/{{version}}/starter-kits)."
msgstr ""

#: docs/9.x/installation.md:block 115 (quote)
msgid "**Note** Need a head start scaffolding your Laravel backend and Next.js frontend? Laravel Breeze offers an [API stack](/docs/{{version}}/starter-kits#breeze-and-next) as well as a [Next.js frontend implementation](https://github.com/laravel/breeze-next) so you can get started in minutes."
msgstr ""
