# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Taylor Otwell
# This file is distributed under the same license as the Laravel Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2021-03-30 14:06+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title #
#: docs/8.x/eloquent-serialization.md:1
#, markdown-text, no-wrap
msgid "Eloquent: Serialization"
msgstr ""

#. type: Bullet: '- '
#: docs/8.x/eloquent-serialization.md:10
#, markdown-text
msgid "[Introduction](#introduction)"
msgstr ""

#. type: Bullet: '- '
#: docs/8.x/eloquent-serialization.md:10
#, markdown-text
msgid "[Serializing Models & Collections](#serializing-models-and-collections)"
msgstr ""

#. type: Bullet: '    - '
#: docs/8.x/eloquent-serialization.md:10
#, markdown-text
msgid "[Serializing To Arrays](#serializing-to-arrays)"
msgstr ""

#. type: Bullet: '    - '
#: docs/8.x/eloquent-serialization.md:10
#, markdown-text
msgid "[Serializing To JSON](#serializing-to-json)"
msgstr ""

#. type: Bullet: '- '
#: docs/8.x/eloquent-serialization.md:10
#, markdown-text
msgid "[Hiding Attributes From JSON](#hiding-attributes-from-json)"
msgstr ""

#. type: Bullet: '- '
#: docs/8.x/eloquent-serialization.md:10
#, markdown-text
msgid "[Appending Values To JSON](#appending-values-to-json)"
msgstr ""

#. type: Bullet: '- '
#: docs/8.x/eloquent-serialization.md:10
#, markdown-text
msgid "[Date Serialization](#date-serialization)"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:12
#, markdown-text, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/eloquent-serialization.md:12
#, markdown-text, no-wrap
msgid "Introduction"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:15
#, markdown-text
msgid ""
"When building APIs using Laravel, you will often need to convert your models "
"and relationships to arrays or JSON. Eloquent includes convenient methods "
"for making these conversions, as well as controlling which attributes are "
"included in the serialized representation of your models."
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:17
#, markdown-text, no-wrap
msgid ""
"> {tip} For an even more robust way of handling Eloquent model and "
"collection JSON serialization, check out the documentation on [Eloquent API "
"resources](/docs/{{version}}/eloquent-resources).\n"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:19
#, markdown-text, no-wrap
msgid "<a name=\"serializing-models-and-collections\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/eloquent-serialization.md:19
#, markdown-text, no-wrap
msgid "Serializing Models & Collections"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:22
#, markdown-text, no-wrap
msgid "<a name=\"serializing-to-arrays\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/eloquent-serialization.md:22
#, markdown-text, no-wrap
msgid "Serializing To Arrays"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:25
#, markdown-text
msgid ""
"To convert a model and its loaded "
"[relationships](/docs/{{version}}/eloquent-relationships) to an array, you "
"should use the `toArray` method. This method is recursive, so all attributes "
"and all relations (including the relations of relations) will be converted "
"to arrays:"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:27 docs/8.x/eloquent-serialization.md:50
#, markdown-text, no-wrap
msgid "    use App\\Models\\User;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:29
#, markdown-text, no-wrap
msgid "    $user = User::with('roles')->first();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:31
#, markdown-text, no-wrap
msgid "    return $user->toArray();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:33
#, markdown-text
msgid ""
"The `attributesToArray` method may be used to convert a model's attributes "
"to an array but not its relationships:"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:35
#, markdown-text, no-wrap
msgid "    $user = User::first();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:37
#, markdown-text, no-wrap
msgid "    return $user->attributesToArray();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:39
#, markdown-text
msgid ""
"You may also convert entire "
"[collections](/docs/{{version}}/eloquent-collections) of models to arrays by "
"calling the `toArray` method on the collection instance:"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:41
#, markdown-text, no-wrap
msgid "    $users = User::all();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:43
#, markdown-text, no-wrap
msgid "    return $users->toArray();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:45
#, markdown-text, no-wrap
msgid "<a name=\"serializing-to-json\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/eloquent-serialization.md:45
#, markdown-text, no-wrap
msgid "Serializing To JSON"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:48
#, markdown-text
msgid ""
"To convert a model to JSON, you should use the `toJson` method. Like "
"`toArray`, the `toJson` method is recursive, so all attributes and relations "
"will be converted to JSON. You may also specify any JSON encoding options "
"that are [supported by "
"PHP](https://secure.php.net/manual/en/function.json-encode.php):"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:52
#, markdown-text, no-wrap
msgid "    $user = User::find(1);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:54
#, markdown-text, no-wrap
msgid "    return $user->toJson();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:56
#, markdown-text, no-wrap
msgid "    return $user->toJson(JSON_PRETTY_PRINT);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:58
#, markdown-text
msgid ""
"Alternatively, you may cast a model or collection to a string, which will "
"automatically call the `toJson` method on the model or collection:"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:60
#, markdown-text, no-wrap
msgid "    return (string) User::find(1);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:62
#, markdown-text
msgid ""
"Since models and collections are converted to JSON when cast to a string, "
"you can return Eloquent objects directly from your application's routes or "
"controllers. Laravel will automatically serialize your Eloquent models and "
"collections to JSON when they are returned from routes or controllers:"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:66
#, markdown-text, no-wrap
msgid ""
"    Route::get('users', function () {\n"
"        return User::all();\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:68
#, markdown-text, no-wrap
msgid "<a name=\"relationships\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/eloquent-serialization.md:68
#, markdown-text, no-wrap
msgid "Relationships"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:71
#, markdown-text
msgid ""
"When an Eloquent model is converted to JSON, its loaded relationships will "
"automatically be included as attributes on the JSON object. Also, though "
"Eloquent relationship methods are defined using \"camel case\" method names, "
"a relationship's JSON attribute will be \"snake case\"."
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:73
#, markdown-text, no-wrap
msgid "<a name=\"hiding-attributes-from-json\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/eloquent-serialization.md:73
#, markdown-text, no-wrap
msgid "Hiding Attributes From JSON"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:76
#, markdown-text
msgid ""
"Sometimes you may wish to limit the attributes, such as passwords, that are "
"included in your model's array or JSON representation. To do so, add a "
"`$hidden` property to your model. In attributes that are listed in the "
"`$hidden` property's array will not be included in the serialized "
"representation of your model:"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:78 docs/8.x/eloquent-serialization.md:98
#: docs/8.x/eloquent-serialization.md:130
#: docs/8.x/eloquent-serialization.md:151
#, markdown-text, no-wrap
msgid "    <?php\n"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:80 docs/8.x/eloquent-serialization.md:100
#: docs/8.x/eloquent-serialization.md:132
#: docs/8.x/eloquent-serialization.md:153
#, markdown-text, no-wrap
msgid "    namespace App\\Models;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:82 docs/8.x/eloquent-serialization.md:102
#: docs/8.x/eloquent-serialization.md:134
#: docs/8.x/eloquent-serialization.md:155
#, markdown-text, no-wrap
msgid "    use Illuminate\\Database\\Eloquent\\Model;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:92
#, markdown-text, no-wrap
msgid ""
"    class User extends Model\n"
"    {\n"
"        /**\n"
"         * The attributes that should be hidden for arrays.\n"
"         *\n"
"         * @var array\n"
"         */\n"
"        protected $hidden = ['password'];\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:94
#, markdown-text, no-wrap
msgid ""
"> {tip} To hide relationships, add the relationship's method name to your "
"Eloquent model's `$hidden` property.\n"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:96
#, markdown-text
msgid ""
"Alternatively, you may use the `visible` property to define an \"allow "
"list\" of attributes that should be included in your model's array and JSON "
"representation. All attributes that are not present in the `$visible` array "
"will be hidden when the model is converted to an array or JSON:"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:112
#, markdown-text, no-wrap
msgid ""
"    class User extends Model\n"
"    {\n"
"        /**\n"
"         * The attributes that should be visible in arrays.\n"
"         *\n"
"         * @var array\n"
"         */\n"
"        protected $visible = ['first_name', 'last_name'];\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:114
#, markdown-text, no-wrap
msgid "<a name=\"temporarily-modifying-attribute-visibility\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/eloquent-serialization.md:114
#, markdown-text, no-wrap
msgid "Temporarily Modifying Attribute Visibility"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:117
#, markdown-text
msgid ""
"If you would like to make some typically hidden attributes visible on a "
"given model instance, you may use the `makeVisible` method. The "
"`makeVisible` method returns the model instance:"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:119
#, markdown-text, no-wrap
msgid "    return $user->makeVisible('attribute')->toArray();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:121
#, markdown-text
msgid ""
"Likewise, if you would like to hide some attributes that are typically "
"visible, you may use the `makeHidden` method."
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:123
#, markdown-text, no-wrap
msgid "    return $user->makeHidden('attribute')->toArray();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:125
#, markdown-text, no-wrap
msgid "<a name=\"appending-values-to-json\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/eloquent-serialization.md:125
#, markdown-text, no-wrap
msgid "Appending Values To JSON"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:128
#, markdown-text
msgid ""
"Occasionally, when converting models to arrays or JSON, you may wish to add "
"attributes that do not have a corresponding column in your database. To do "
"so, first define an [accessor](/docs/{{version}}/eloquent-mutators) for the "
"value:"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:147
#, markdown-text, no-wrap
msgid ""
"    class User extends Model\n"
"    {\n"
"        /**\n"
"         * Determine if the user is an administrator.\n"
"         *\n"
"         * @return bool\n"
"         */\n"
"        public function getIsAdminAttribute()\n"
"        {\n"
"            return $this->attributes['admin'] === 'yes';\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:149
#, markdown-text
msgid ""
"After creating the accessor, add the attribute name to the `appends` "
"property of your model. Note that attribute names are typically referenced "
"using their \"snake case\" serialized representation, even though the "
"accessor's PHP method is defined using \"camel case\":"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:165
#, markdown-text, no-wrap
msgid ""
"    class User extends Model\n"
"    {\n"
"        /**\n"
"         * The accessors to append to the model's array form.\n"
"         *\n"
"         * @var array\n"
"         */\n"
"        protected $appends = ['is_admin'];\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:167
#, markdown-text
msgid ""
"Once the attribute has been added to the `appends` list, it will be included "
"in both the model's array and JSON representations. Attributes in the "
"`appends` array will also respect the `visible` and `hidden` settings "
"configured on the model."
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:169
#, markdown-text, no-wrap
msgid "<a name=\"appending-at-run-time\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/eloquent-serialization.md:169
#, markdown-text, no-wrap
msgid "Appending At Run Time"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:172
#, markdown-text
msgid ""
"At runtime, you may instruct a model instance to append additional "
"attributes using the `append` method. Or, you may use the `setAppends` "
"method to override the entire array of appended properties for a given model "
"instance:"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:174
#, markdown-text, no-wrap
msgid "    return $user->append('is_admin')->toArray();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:176
#, markdown-text, no-wrap
msgid "    return $user->setAppends(['is_admin'])->toArray();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:178
#, markdown-text, no-wrap
msgid "<a name=\"date-serialization\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/eloquent-serialization.md:178
#, markdown-text, no-wrap
msgid "Date Serialization"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:181
#, markdown-text, no-wrap
msgid "<a name=\"customizing-the-default-date-format\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/eloquent-serialization.md:181
#, markdown-text, no-wrap
msgid "Customizing The Default Date Format"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:184
#, markdown-text
msgid ""
"You may customize the default serialization format by overriding the "
"`serializeDate` method. This method does not affect how your dates are "
"formatted for storage in the database:"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:195
#, markdown-text, no-wrap
msgid ""
"    /**\n"
"     * Prepare a date for array / JSON serialization.\n"
"     *\n"
"     * @param  \\DateTimeInterface  $date\n"
"     * @return string\n"
"     */\n"
"    protected function serializeDate(DateTimeInterface $date)\n"
"    {\n"
"        return $date->format('Y-m-d');\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:197
#, markdown-text, no-wrap
msgid "<a name=\"customizing-the-date-format-per-attribute\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/eloquent-serialization.md:197
#, markdown-text, no-wrap
msgid "Customizing The Date Format Per Attribute"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:200
#, markdown-text
msgid ""
"You may customize the serialization format of individual Eloquent date "
"attributes by specifying the date format in the model's [cast "
"declarations](/docs/{{version}}/eloquent-mutators#attribute-casting):"
msgstr ""

#. type: Plain text
#: docs/8.x/eloquent-serialization.md:204
#, markdown-text, no-wrap
msgid ""
"    protected $casts = [\n"
"        'birthday' => 'date:Y-m-d',\n"
"        'joined_at' => 'datetime:Y-m-d H:00',\n"
"    ];\n"
msgstr ""
