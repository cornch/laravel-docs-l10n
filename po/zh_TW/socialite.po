msgid ""
msgstr ""
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/templates/socialite.pot\n"
"X-Crowdin-File-ID: 155\n"
"Project-Id-Version: laravel-docs\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"PO-Revision-Date: 2022-04-18 09:23\n"

#: docs/8.x/socialite.md:block 1 (header)
msgid "Laravel Socialite"
msgstr ""

#: docs/8.x/socialite.md:block 2 (unordered list)
msgid "[Introduction](#introduction)"
msgstr ""

#: docs/8.x/socialite.md:block 2 (unordered list)
msgid "[Installation](#installation)"
msgstr ""

#: docs/8.x/socialite.md:block 2 (unordered list)
msgid "[Upgrading Socialite](#upgrading-socialite)"
msgstr ""

#: docs/8.x/socialite.md:block 2 (unordered list)
msgid "[Configuration](#configuration)"
msgstr ""

#: docs/8.x/socialite.md:block 2 (unordered list)
msgid "[Authentication](#authentication)"
msgstr ""

#: docs/8.x/socialite.md:block 2 (unordered list)
msgid "[Routing](#routing)"
msgstr ""

#: docs/8.x/socialite.md:block 2 (unordered list)
msgid "[Authentication & Storage](#authentication-and-storage)"
msgstr ""

#: docs/8.x/socialite.md:block 2 (unordered list)
msgid "[Access Scopes](#access-scopes)"
msgstr ""

#: docs/8.x/socialite.md:block 2 (unordered list)
msgid "[Optional Parameters](#optional-parameters)"
msgstr ""

#: docs/8.x/socialite.md:block 2 (unordered list)
msgid "[Retrieving User Details](#retrieving-user-details)"
msgstr ""

#: docs/8.x/socialite.md:block 4 (header)
msgid "Introduction"
msgstr ""

#: docs/8.x/socialite.md:block 5 (paragraph)
msgid "In addition to typical, form based authentication, Laravel also provides a simple, convenient way to authenticate with OAuth providers using [Laravel Socialite](https://github.com/laravel/socialite). Socialite currently supports authentication with Facebook, Twitter, LinkedIn, Google, GitHub, GitLab, and Bitbucket."
msgstr ""

#: docs/8.x/socialite.md:block 6 (quote)
msgid "{tip} Adapters for other platforms are listed at the community driven [Socialite Providers](https://socialiteproviders.com/) website."
msgstr ""

#: docs/8.x/socialite.md:block 8 (header)
msgid "Installation"
msgstr ""

#: docs/8.x/socialite.md:block 9 (paragraph)
msgid "To get started with Socialite, use the Composer package manager to add the package to your project's dependencies:"
msgstr ""

#: docs/8.x/socialite.md:block 10 (code)
msgid "composer require laravel/socialite\n"
msgstr ""

#: docs/8.x/socialite.md:block 12 (header)
msgid "Upgrading Socialite"
msgstr ""

#: docs/8.x/socialite.md:block 13 (paragraph)
msgid "When upgrading to a new major version of Socialite, it's important that you carefully review [the upgrade guide](https://github.com/laravel/socialite/blob/master/UPGRADE.md)."
msgstr ""

#: docs/8.x/socialite.md:block 15 (header)
msgid "Configuration"
msgstr ""

#: docs/8.x/socialite.md:block 16 (paragraph)
msgid "Before using Socialite, you will need to add credentials for the OAuth providers your application utilizes. These credentials should be placed in your application's `config/services.php` configuration file, and should use the key `facebook`, `twitter`, `linkedin`, `google`, `github`, `gitlab`, or `bitbucket`, depending on the providers your application requires:"
msgstr ""

#: docs/8.x/socialite.md:block 17 (code)
msgid "'github' => [\n"
"    'client_id' => env('GITHUB_CLIENT_ID'),\n"
"    'client_secret' => env('GITHUB_CLIENT_SECRET'),\n"
"    'redirect' => 'http://example.com/callback-url',\n"
"],\n"
msgstr ""

#: docs/8.x/socialite.md:block 18 (quote)
msgid "{tip} If the `redirect` option contains a relative path, it will automatically be resolved to a fully qualified URL."
msgstr ""

#: docs/8.x/socialite.md:block 20 (header)
msgid "Authentication"
msgstr ""

#: docs/8.x/socialite.md:block 22 (header)
msgid "Routing"
msgstr ""

#: docs/8.x/socialite.md:block 23 (paragraph)
msgid "To authenticate users using an OAuth provider, you will need two routes: one for redirecting the user to the OAuth provider, and another for receiving the callback from the provider after authentication. The example controller below demonstrates the implementation of both routes:"
msgstr ""

#: docs/8.x/socialite.md:block 24 (code)
msgid "use Laravel\\Socialite\\Facades\\Socialite;\n\n"
"Route::get('/auth/redirect', function () {\n"
"    return Socialite::driver('github')->redirect();\n"
"});\n\n"
"Route::get('/auth/callback', function () {\n"
"    $user = Socialite::driver('github')->user();\n\n"
"    // $user->token\n"
"});\n"
msgstr ""

#: docs/8.x/socialite.md:block 25 (paragraph)
msgid "The `redirect` method provided by the `Socialite` facade takes care of redirecting the user to the OAuth provider, while the `user` method will read the incoming request and retrieve the user's information from the provider after they are authenticated."
msgstr ""

#: docs/8.x/socialite.md:block 27 (header)
msgid "Authentication & Storage"
msgstr ""

#: docs/8.x/socialite.md:block 28 (paragraph)
msgid "Once the user has been retrieved from the OAuth provider, you may determine if the user exists in your application's database and [authenticate the user](/docs/{{version}}/authentication#authenticate-a-user-instance). If the user does not exist in your application's database, you will typically create a new record in your database to represent the user:"
msgstr ""

#: docs/8.x/socialite.md:block 29 (code)
msgid "use App\\Models\\User;\n"
"use Illuminate\\Support\\Facades\\Auth;\n"
"use Laravel\\Socialite\\Facades\\Socialite;\n\n"
"Route::get('/auth/callback', function () {\n"
"    $githubUser = Socialite::driver('github')->user();\n\n"
"    $user = User::where('github_id', $githubUser->id)->first();\n\n"
"    if ($user) {\n"
"        $user->update([\n"
"            'github_token' => $githubUser->token,\n"
"            'github_refresh_token' => $githubUser->refreshToken,\n"
"        ]);\n"
"    } else {\n"
"        $user = User::create([\n"
"            'name' => $githubUser->name,\n"
"            'email' => $githubUser->email,\n"
"            'github_id' => $githubUser->id,\n"
"            'github_token' => $githubUser->token,\n"
"            'github_refresh_token' => $githubUser->refreshToken,\n"
"        ]);\n"
"    }\n\n"
"    Auth::login($user);\n\n"
"    return redirect('/dashboard');\n"
"});\n"
msgstr ""

#: docs/8.x/socialite.md:block 30 (quote)
msgid "{tip} For more information regarding what user information is available from specific OAuth providers, please consult the documentation on [retrieving user details](#retrieving-user-details)."
msgstr ""

#: docs/8.x/socialite.md:block 32 (header)
msgid "Access Scopes"
msgstr ""

#: docs/8.x/socialite.md:block 33 (paragraph)
msgid "Before redirecting the user, you may also add additional \"scopes\" to the authentication request using the `scopes` method. This method will merge all existing scopes with the scopes that you supply:"
msgstr ""

#: docs/8.x/socialite.md:block 34 (code)
msgid "use Laravel\\Socialite\\Facades\\Socialite;\n\n"
"return Socialite::driver('github')\n"
"    ->scopes(['read:user', 'public_repo'])\n"
"    ->redirect();\n"
msgstr ""

#: docs/8.x/socialite.md:block 35 (paragraph)
msgid "You can overwrite all existing scopes on the authentication request using the `setScopes` method:"
msgstr ""

#: docs/8.x/socialite.md:block 36 (code)
msgid "return Socialite::driver('github')\n"
"    ->setScopes(['read:user', 'public_repo'])\n"
"    ->redirect();\n"
msgstr ""

#: docs/8.x/socialite.md:block 38 (header)
msgid "Optional Parameters"
msgstr ""

#: docs/8.x/socialite.md:block 39 (paragraph)
msgid "A number of OAuth providers support optional parameters in the redirect request. To include any optional parameters in the request, call the `with` method with an associative array:"
msgstr ""

#: docs/8.x/socialite.md:block 40 (code)
msgid "use Laravel\\Socialite\\Facades\\Socialite;\n\n"
"return Socialite::driver('google')\n"
"    ->with(['hd' => 'example.com'])\n"
"    ->redirect();\n"
msgstr ""

#: docs/8.x/socialite.md:block 41 (quote)
msgid "{note} When using the `with` method, be careful not to pass any reserved keywords such as `state` or `response_type`."
msgstr ""

#: docs/8.x/socialite.md:block 43 (header)
msgid "Retrieving User Details"
msgstr ""

#: docs/8.x/socialite.md:block 44 (paragraph)
msgid "After the user is redirected back to your authentication callback route, you may retrieve the user's details using Socialite's `user` method. The user object returned by the `user` method provides a variety of properties and methods you may use to store information about the user in your own database. Different properties and methods may be available depending on whether the OAuth provider you are authenticating with supports OAuth 1.0 or OAuth 2.0:"
msgstr ""

#: docs/8.x/socialite.md:block 45 (code)
msgid "use Laravel\\Socialite\\Facades\\Socialite;\n\n"
"Route::get('/auth/callback', function () {\n"
"    $user = Socialite::driver('github')->user();\n\n"
"    // OAuth 2.0 providers...\n"
"    $token = $user->token;\n"
"    $refreshToken = $user->refreshToken;\n"
"    $expiresIn = $user->expiresIn;\n\n"
"    // OAuth 1.0 providers...\n"
"    $token = $user->token;\n"
"    $tokenSecret = $user->tokenSecret;\n\n"
"    // All providers...\n"
"    $user->getId();\n"
"    $user->getNickname();\n"
"    $user->getName();\n"
"    $user->getEmail();\n"
"    $user->getAvatar();\n"
"});\n"
msgstr ""

#: docs/8.x/socialite.md:block 47 (header)
msgid "Retrieving User Details From A Token (OAuth2)"
msgstr ""

#: docs/8.x/socialite.md:block 48 (paragraph)
msgid "If you already have a valid access token for a user, you can retrieve their details using Socialite's `userFromToken` method:"
msgstr ""

#: docs/8.x/socialite.md:block 49 (code)
msgid "use Laravel\\Socialite\\Facades\\Socialite;\n\n"
"$user = Socialite::driver('github')->userFromToken($token);\n"
msgstr ""

#: docs/8.x/socialite.md:block 51 (header)
msgid "Retrieving User Details From A Token And Secret (OAuth1)"
msgstr ""

#: docs/8.x/socialite.md:block 52 (paragraph)
msgid "If you already have a valid token and secret for a user, you can retrieve their details using Socialite's `userFromTokenAndSecret` method:"
msgstr ""

#: docs/8.x/socialite.md:block 53 (code)
msgid "use Laravel\\Socialite\\Facades\\Socialite;\n\n"
"$user = Socialite::driver('twitter')->userFromTokenAndSecret($token, $secret);\n"
msgstr ""

#: docs/8.x/socialite.md:block 55 (header)
msgid "Stateless Authentication"
msgstr ""

#: docs/8.x/socialite.md:block 56 (paragraph)
msgid "The `stateless` method may be used to disable session state verification. This is useful when adding social authentication to an API:"
msgstr ""

#: docs/8.x/socialite.md:block 57 (code)
msgid "use Laravel\\Socialite\\Facades\\Socialite;\n\n"
"return Socialite::driver('google')->stateless()->user();\n"
msgstr ""

#: docs/8.x/socialite.md:block 58 (quote)
msgid "{note} Stateless authentication is not available for the Twitter driver, which uses OAuth 1.0 for authentication."
msgstr ""

#: docs/9.x/socialite.md:block 5 (paragraph)
msgid "In addition to typical, form based authentication, Laravel also provides a simple, convenient way to authenticate with OAuth providers using [Laravel Socialite](https://github.com/laravel/socialite). Socialite currently supports authentication via Facebook, Twitter, LinkedIn, Google, GitHub, GitLab, and Bitbucket."
msgstr ""

#: docs/9.x/socialite.md:block 6 (quote)
msgid "{tip} Adapters for other platforms are available via the community driven [Socialite Providers](https://socialiteproviders.com/) website."
msgstr ""

#: docs/9.x/socialite.md:block 16 (paragraph)
msgid "Before using Socialite, you will need to add credentials for the OAuth providers your application utilizes. Typically, these credentials may be retrieved by creating a \"developer application\" within the dashboard of the service you will be authenticating with."
msgstr ""

#: docs/9.x/socialite.md:block 17 (paragraph)
msgid "These credentials should be placed in your application's `config/services.php` configuration file, and should use the key `facebook`, `twitter` (OAuth 1.0), `twitter-oauth-2` (OAuth 2.0), `linkedin`, `google`, `github`, `gitlab`, or `bitbucket`, depending on the providers your application requires:"
msgstr ""

#: docs/9.x/socialite.md:block 24 (paragraph)
msgid "To authenticate users using an OAuth provider, you will need two routes: one for redirecting the user to the OAuth provider, and another for receiving the callback from the provider after authentication. The example routes below demonstrate the implementation of both routes:"
msgstr ""

#: docs/9.x/socialite.md:block 26 (paragraph)
msgid "The `redirect` method provided by the `Socialite` facade takes care of redirecting the user to the OAuth provider, while the `user` method will examine the incoming request and retrieve the user's information from the provider after they have approved the authentication request."
msgstr ""

#: docs/9.x/socialite.md:block 30 (code)
msgid "use App\\Models\\User;\n"
"use Illuminate\\Support\\Facades\\Auth;\n"
"use Laravel\\Socialite\\Facades\\Socialite;\n\n"
"Route::get('/auth/callback', function () {\n"
"    $githubUser = Socialite::driver('github')->user();\n\n"
"    $user = User::updateOrCreate([\n"
"        'github_id' => $githubUser->id,\n"
"    ], [\n"
"        'name' => $githubUser->name,\n"
"        'email' => $githubUser->email,\n"
"        'github_token' => $githubUser->token,\n"
"        'github_refresh_token' => $githubUser->refreshToken,\n"
"    ]);\n\n"
"    Auth::login($user);\n\n"
"    return redirect('/dashboard');\n"
"});\n"
msgstr ""

#: docs/9.x/socialite.md:block 34 (paragraph)
msgid "Before redirecting the user, you may use the `scopes` method to specify the \"scopes\" that should be included in the authentication request. This method will merge all previously specified scopes with the scopes that you specify:"
msgstr ""

#: docs/9.x/socialite.md:block 40 (paragraph)
msgid "A number of OAuth providers support other optional parameters on the redirect request. To include any optional parameters in the request, call the `with` method with an associative array:"
msgstr ""

#: docs/9.x/socialite.md:block 45 (paragraph)
msgid "After the user is redirected back to your application's authentication callback route, you may retrieve the user's details using Socialite's `user` method. The user object returned by the `user` method provides a variety of properties and methods you may use to store information about the user in your own database."
msgstr ""

#: docs/9.x/socialite.md:block 46 (paragraph)
msgid "Differing properties and methods may be available on this object depending on whether the OAuth provider you are authenticating with supports OAuth 1.0 or OAuth 2.0:"
msgstr ""

#: docs/9.x/socialite.md:block 50 (paragraph)
msgid "If you already have a valid access token for a user, you can retrieve their user details using Socialite's `userFromToken` method:"
msgstr ""

#: docs/9.x/socialite.md:block 54 (paragraph)
msgid "If you already have a valid token and secret for a user, you can retrieve their user details using Socialite's `userFromTokenAndSecret` method:"
msgstr ""

#: docs/9.x/socialite.md:block 58 (paragraph)
msgid "The `stateless` method may be used to disable session state verification. This is useful when adding social authentication to a stateless API that does not utilize cookie based sessions:"
msgstr ""

#: docs/9.x/socialite.md:block 60 (quote)
msgid "{note} Stateless authentication is not available for the Twitter OAuth 1.0 driver."
msgstr ""

