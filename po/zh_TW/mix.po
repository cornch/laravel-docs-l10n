msgid ""
msgstr ""
"Project-Id-Version: laravel-docs\n"
"POT-Creation-Date: 2022-01-29 05:35+0000\n"
"PO-Revision-Date: 2022-02-07 12:19\n"
"Last-Translator: \n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/templates/mix.pot\n"
"X-Crowdin-File-ID: 105\n"

# File: docs/8.x/mix.md, line: 1
# File: docs/master/mix.md, line: 1
#. type: Title #
#, no-wrap
msgid "Compiling Assets (Mix)"
msgstr "編譯資源 (Mix)"

# File: docs/8.x/mix.md, line: 21
# File: docs/master/mix.md, line: 21
#. type: Bullet: '- '
msgid "[Introduction](#introduction)"
msgstr "[簡介](#introduction)"

# File: docs/8.x/mix.md, line: 21
# File: docs/master/mix.md, line: 21
#. type: Bullet: '- '
msgid "[Installation & Setup](#installation)"
msgstr "[安裝與設定](#installation)"

# File: docs/8.x/mix.md, line: 21
# File: docs/master/mix.md, line: 21
#. type: Bullet: '- '
msgid "[Running Mix](#running-mix)"
msgstr "[執行 Mix](#running-mix)"

# File: docs/8.x/mix.md, line: 21
# File: docs/master/mix.md, line: 21
#. type: Plain text
#, no-wrap
msgid "- [Working With Stylesheets](#working-with-stylesheets)\n"
"    - [Tailwind CSS](#tailwindcss)\n"
"    - [PostCSS](#postcss)\n"
"    - [Sass](#sass)\n"
"    - [URL Processing](#url-processing)\n"
"    - [Source Maps](#css-source-maps)\n"
"- [Working With JavaScript](#working-with-scripts)\n"
"    - [Vue](#vue)\n"
"    - [React](#react)\n"
"    - [Vendor Extraction](#vendor-extraction)\n"
"    - [Custom Webpack Configuration](#custom-webpack-configuration)\n"
"- [Versioning / Cache Busting](#versioning-and-cache-busting)\n"
"- [Browsersync Reloading](#browsersync-reloading)\n"
"- [Environment Variables](#environment-variables)\n"
"- [Notifications](#notifications)\n"
msgstr "- [處理樣式表](#working-with-stylesheets)\n"
"    - [Tailwind CSS](#tailwindcss)\n"
"    - [PostCSS](#postcss)\n"
"    - [Sass](#sass)\n"
"    - [URL 的處理](#url-processing)\n"
"    - [Source Map](#css-source-maps)\n"
"- [處理 JavaScript](#working-with-scripts)\n"
"    - [Vue](#vue)\n"
"    - [React](#react)\n"
"    - [拆分出第三方函式庫](#vendor-extraction)\n"
"    - [自訂 Webpack 設定](#custom-webpack-configuration)\n"
"- [版本化 / 避免快取](#versioning-and-cache-busting)\n"
"- [Browsersync 重新載入](#browsersync-reloading)\n"
"- [環境變數](#environment-variables)\n"
"- [通知](#notifications)\n"

# File: docs/8.x/mix.md, line: 23
# File: docs/master/mix.md, line: 23
#. type: Plain text
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr "<a name=\"introduction\"></a>\n"

# File: docs/8.x/mix.md, line: 23
# File: docs/master/mix.md, line: 23
#. type: Title ##
#, no-wrap
msgid "Introduction"
msgstr "簡介"

# File: docs/8.x/mix.md, line: 26
#. type: Plain text
msgid "[Laravel Mix](https://github.com/JeffreyWay/laravel-mix), a package developed by [Laracasts](https://laracasts.com) creator Jeffrey Way, provides a fluent API for defining [webpack](https://webpack.js.org) build steps for your Laravel application using several common CSS and JavaScript pre-processors."
msgstr "[Laravel Mix](https://github.com/JeffreyWay/laravel-mix) 是一個由 [Laracasts](https://laracasts.com) 作者 Jeffrey Way 開發的套件，該套件使用了各種常見的 CSS 與 JavaScript ^[預處理器](Pre-Processor)，可在 Laravel 專案上使用 Fluent API 來定義 [Webpack](https://webpack.js.org) 建置步驟。"

# File: docs/8.x/mix.md, line: 28
# File: docs/master/mix.md, line: 28
#. type: Plain text
msgid "In other words, Mix makes it a cinch to compile and minify your application's CSS and JavaScript files. Through simple method chaining, you can fluently define your asset pipeline. For example:"
msgstr "換句話說，使用 Mix 就可以輕鬆地編譯並 ^[Minify](最小化 / 壓縮) 專案的 CSS 與 JavaScript 檔案。只要簡單地串接幾個方法，就可以流暢的定義^[素材管道](Asset Pipeline)。例如："

# File: docs/8.x/mix.md, line: 31
# File: docs/master/mix.md, line: 31
#. type: Plain text
#, no-wrap
msgid "    mix.js('resources/js/app.js', 'public/js')\n"
"        .postCss('resources/css/app.css', 'public/css');\n"
msgstr "    mix.js('resources/js/app.js', 'public/js')\n"
"        .postCss('resources/css/app.css', 'public/css');\n"

# File: docs/8.x/mix.md, line: 33
# File: docs/master/mix.md, line: 33
#. type: Plain text
msgid "If you've ever been confused and overwhelmed about getting started with webpack and asset compilation, you will love Laravel Mix. However, you are not required to use it while developing your application; you are free to use any asset pipeline tool you wish, or even none at all."
msgstr "若你搞不懂怎麼用 Webpack 與編輯素材、或是覺得很複雜的話，你一定會喜歡 Laravel Mix 的。不過，不一定要使用 Laravel Mix 也能開發你的網站。你可以自由決定要使用哪個素材管道工具，甚至也可以不使用任何工具。"

# File: docs/8.x/mix.md, line: 35
# File: docs/master/mix.md, line: 35
#. type: Plain text
#, no-wrap
msgid "> {tip} If you need a head start building your application with Laravel and [Tailwind CSS](https://tailwindcss.com), check out one of our [application starter kits](/docs/{{version}}/starter-kits).\n"
msgstr "> {tip} 若想使用 Laravel 與 [Tailwind CSS](https://tailwindcss.com) 來製作網站且想要有個起始點的話，請參考看看我們的[專案入門套件](/docs/{{version}}/starter-kits)。\n"

# File: docs/8.x/mix.md, line: 37
# File: docs/master/mix.md, line: 37
#. type: Plain text
#, no-wrap
msgid "<a name=\"installation\"></a>\n"
msgstr "<a name=\"installation\"></a>\n"

# File: docs/8.x/mix.md, line: 37
# File: docs/master/mix.md, line: 37
#. type: Title ##
#, no-wrap
msgid "Installation & Setup"
msgstr "安裝與設定"

# File: docs/8.x/mix.md, line: 40
# File: docs/master/mix.md, line: 40
#. type: Plain text
#, no-wrap
msgid "<a name=\"installing-node\"></a>\n"
msgstr "<a name=\"installing-node\"></a>\n"

# File: docs/8.x/mix.md, line: 40
# File: docs/master/mix.md, line: 40
#. type: Title ####
#, no-wrap
msgid "Installing Node"
msgstr "安裝 Node"

# File: docs/8.x/mix.md, line: 43
# File: docs/master/mix.md, line: 43
#. type: Plain text
msgid "Before running Mix, you must first ensure that Node.js and NPM are installed on your machine:"
msgstr "在執行 Mix 前，請先確保你的電腦上已安裝 Node.js 與 NPM："

# File: docs/8.x/mix.md, line: 46
# File: docs/master/mix.md, line: 46
#. type: Plain text
#, no-wrap
msgid "    node -v\n"
"    npm -v\n"
msgstr "    node -v\n"
"    npm -v\n"

# File: docs/8.x/mix.md, line: 48
# File: docs/master/mix.md, line: 48
#. type: Plain text
msgid "You can easily install the latest version of Node and NPM using simple graphical installers from [the official Node website](https://nodejs.org/en/download/). Or, if you are using [Laravel Sail](/docs/{{version}}/sail), you may invoke Node and NPM through Sail:"
msgstr "可以從 [Node 官方網站]中取得圖形界面安裝程式來輕鬆地安裝最新版的 Node 與 NPM。或者，如果你用的是 [Laravel Sail](/docs/{{version}}/sail)，可以像這樣在 Sail 上叫用 Node 與 NPM："

# File: docs/8.x/mix.md, line: 51
# File: docs/master/mix.md, line: 51
#. type: Plain text
#, no-wrap
msgid "    ./sail node -v\n"
"    ./sail npm -v\n"
msgstr "    ./sail node -v\n"
"    ./sail npm -v\n"

# File: docs/8.x/mix.md, line: 53
# File: docs/master/mix.md, line: 53
#. type: Plain text
#, no-wrap
msgid "<a name=\"installing-laravel-mix\"></a>\n"
msgstr "<a name=\"installing-laravel-mix\"></a>\n"

# File: docs/8.x/mix.md, line: 53
# File: docs/master/mix.md, line: 53
#. type: Title ####
#, no-wrap
msgid "Installing Laravel Mix"
msgstr "安裝 Laravel Mix"

# File: docs/8.x/mix.md, line: 56
# File: docs/master/mix.md, line: 56
#. type: Plain text
msgid "The only remaining step is to install Laravel Mix. Within a fresh installation of Laravel, you'll find a `package.json` file in the root of your directory structure. The default `package.json` file already includes everything you need to get started using Laravel Mix. Think of this file like your `composer.json` file, except it defines Node dependencies instead of PHP dependencies. You may install the dependencies it references by running:"
msgstr "剩下的步驟就是安裝 Laravel Mix 了。在新安裝的 Laravel 專案中，可以在專案根目錄上看到一個 `package.json` 檔案。使用預設的 `package.json` 檔就可以直接開始使用 Laravel Mix 了。可以把這個檔案像成跟 `composer.json` 檔一樣，只不過 `package.json` 定義的是不是 PHP 的相依性套件而是 Node 的相依性套件。可以像這樣安裝 `package.json` 中參照的相依性套件："

# File: docs/8.x/mix.md, line: 58
# File: docs/8.x/mix.md, line: 92
# File: docs/master/mix.md, line: 58
# File: docs/master/mix.md, line: 92
#. type: Plain text
#, no-wrap
msgid "    npm install\n"
msgstr "    npm install\n"

# File: docs/8.x/mix.md, line: 60
# File: docs/master/mix.md, line: 60
#. type: Plain text
#, no-wrap
msgid "<a name=\"running-mix\"></a>\n"
msgstr "<a name=\"running-mix\"></a>\n"

# File: docs/8.x/mix.md, line: 60
# File: docs/master/mix.md, line: 60
#. type: Title ##
#, no-wrap
msgid "Running Mix"
msgstr ""

# File: docs/8.x/mix.md, line: 63
# File: docs/master/mix.md, line: 63
#. type: Plain text
msgid "Mix is a configuration layer on top of [webpack](https://webpack.js.org), so to run your Mix tasks you only need to execute one of the NPM scripts that are included in the default Laravel `package.json` file. When you run the `dev` or `production` scripts, all of your application's CSS and JavaScript assets will be compiled and placed in your application's `public` directory:"
msgstr ""

# File: docs/8.x/mix.md, line: 66
# File: docs/master/mix.md, line: 66
#. type: Plain text
#, no-wrap
msgid "    // Run all Mix tasks...\n"
"    npm run dev\n"
msgstr ""

# File: docs/8.x/mix.md, line: 69
# File: docs/master/mix.md, line: 69
#. type: Plain text
#, no-wrap
msgid "    // Run all Mix tasks and minify output...\n"
"    npm run prod\n"
msgstr ""

# File: docs/8.x/mix.md, line: 71
# File: docs/master/mix.md, line: 71
#. type: Plain text
#, no-wrap
msgid "<a name=\"watching-assets-for-changes\"></a>\n"
msgstr ""

# File: docs/8.x/mix.md, line: 71
# File: docs/master/mix.md, line: 71
#. type: Title ####
#, no-wrap
msgid "Watching Assets For Changes"
msgstr ""

# File: docs/8.x/mix.md, line: 74
# File: docs/master/mix.md, line: 74
#. type: Plain text
msgid "The `npm run watch` command will continue running in your terminal and watch all relevant CSS and JavaScript files for changes. Webpack will automatically recompile your assets when it detects a change to one of these files:"
msgstr ""

# File: docs/8.x/mix.md, line: 76
# File: docs/master/mix.md, line: 76
#. type: Plain text
#, no-wrap
msgid "    npm run watch\n"
msgstr ""

# File: docs/8.x/mix.md, line: 78
# File: docs/master/mix.md, line: 78
#. type: Plain text
msgid "Webpack may not be able to detect your file changes in certain local development environments. If this is the case on your system, consider using the `watch-poll` command:"
msgstr ""

# File: docs/8.x/mix.md, line: 80
# File: docs/master/mix.md, line: 80
#. type: Plain text
#, no-wrap
msgid "    npm run watch-poll\n"
msgstr ""

# File: docs/8.x/mix.md, line: 82
# File: docs/master/mix.md, line: 82
#. type: Plain text
#, no-wrap
msgid "<a name=\"working-with-stylesheets\"></a>\n"
msgstr ""

# File: docs/8.x/mix.md, line: 82
# File: docs/master/mix.md, line: 82
#. type: Title ##
#, no-wrap
msgid "Working With Stylesheets"
msgstr ""

# File: docs/8.x/mix.md, line: 85
# File: docs/master/mix.md, line: 85
#. type: Plain text
msgid "Your application's `webpack.mix.js` file is your entry point for all asset compilation. Think of it as a light configuration wrapper around [webpack](https://webpack.js.org). Mix tasks can be chained together to define exactly how your assets should be compiled."
msgstr ""

# File: docs/8.x/mix.md, line: 87
# File: docs/master/mix.md, line: 87
#. type: Plain text
#, no-wrap
msgid "<a name=\"tailwindcss\"></a>\n"
msgstr ""

# File: docs/8.x/mix.md, line: 87
# File: docs/master/mix.md, line: 87
#. type: Title ###
#, no-wrap
msgid "Tailwind CSS"
msgstr ""

# File: docs/8.x/mix.md, line: 90
# File: docs/master/mix.md, line: 90
#. type: Plain text
msgid "[Tailwind CSS](https://tailwindcss.com) is a modern, utility-first framework for building amazing sites without ever leaving your HTML. Let's dig into how to start using it in a Laravel project with Laravel Mix. First, we should install Tailwind using NPM and generate our Tailwind configuration file:"
msgstr ""

# File: docs/8.x/mix.md, line: 94
# File: docs/master/mix.md, line: 94
#. type: Plain text
#, no-wrap
msgid "    npm install -D tailwindcss\n"
msgstr ""

# File: docs/8.x/mix.md, line: 96
# File: docs/master/mix.md, line: 96
#. type: Plain text
#, no-wrap
msgid "    npx tailwindcss init\n"
msgstr ""

# File: docs/8.x/mix.md, line: 98
# File: docs/master/mix.md, line: 98
#. type: Plain text
msgid "The `init` command will generate a `tailwind.config.js` file. The `content` section of this file allows you to configure the paths to all of your HTML templates, JavaScript components, and any other source files that contain Tailwind class names so that any CSS classes that are not used within these files will be purged from your production CSS build:"
msgstr ""

# File: docs/8.x/mix.md, line: 99
# File: docs/8.x/mix.md, line: 118
# File: docs/8.x/mix.md, line: 339
# File: docs/8.x/mix.md, line: 345
# File: docs/master/mix.md, line: 99
# File: docs/master/mix.md, line: 118
# File: docs/master/mix.md, line: 339
# File: docs/master/mix.md, line: 345
#. type: Code fence info string
#, no-wrap
msgid "js"
msgstr ""

# File: docs/8.x/mix.md, line: 99
# File: docs/master/mix.md, line: 99
#. type: Plain text
#, no-wrap
msgid "content: [\n"
"    './storage/framework/views/*.php',\n"
"    './resources/**/*.blade.php',\n"
"    './resources/**/*.js',\n"
"    './resources/**/*.vue',\n"
"],\n"
msgstr ""

# File: docs/8.x/mix.md, line: 109
# File: docs/master/mix.md, line: 109
#. type: Plain text
msgid "Next, you should add each of Tailwind's \"layers\" to your application's `resources/css/app.css` file:"
msgstr ""

# File: docs/8.x/mix.md, line: 110
# File: docs/master/mix.md, line: 110
#. type: Code fence info string
#, no-wrap
msgid "css"
msgstr ""

# File: docs/8.x/mix.md, line: 110
# File: docs/master/mix.md, line: 110
#. type: Plain text
#, no-wrap
msgid "@tailwind base;\n"
"@tailwind components;\n"
"@tailwind utilities;\n"
msgstr ""

# File: docs/8.x/mix.md, line: 117
# File: docs/master/mix.md, line: 117
#. type: Plain text
msgid "Once you have configured Tailwind's layers, you are ready to update your application's `webpack.mix.js` file to compile your Tailwind powered CSS:"
msgstr ""

# File: docs/8.x/mix.md, line: 118
# File: docs/master/mix.md, line: 118
#. type: Plain text
#, no-wrap
msgid "mix.js('resources/js/app.js', 'public/js')\n"
"    .postCss('resources/css/app.css', 'public/css', [\n"
"        require('tailwindcss'),\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/mix.md, line: 126
# File: docs/master/mix.md, line: 126
#. type: Plain text
msgid "Finally, you should reference your stylesheet in your application's primary layout template. Many applications choose to store this template at `resources/views/layouts/app.blade.php`. In addition, ensure you add the responsive viewport `meta` tag if it's not already present:"
msgstr ""

# File: docs/8.x/mix.md, line: 127
# File: docs/8.x/mix.md, line: 234
# File: docs/8.x/mix.md, line: 252
# File: docs/master/mix.md, line: 127
# File: docs/master/mix.md, line: 234
# File: docs/master/mix.md, line: 252
#. type: Code fence info string
#, no-wrap
msgid "html"
msgstr ""

# File: docs/8.x/mix.md, line: 127
# File: docs/master/mix.md, line: 127
#. type: Plain text
#, no-wrap
msgid "<head>\n"
"    <meta charset=\"UTF-8\" />\n"
"    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n"
"    <link href=\"/css/app.css\" rel=\"stylesheet\">\n"
"</head>\n"
msgstr ""

# File: docs/8.x/mix.md, line: 136
# File: docs/master/mix.md, line: 136
#. type: Plain text
#, no-wrap
msgid "<a name=\"postcss\"></a>\n"
msgstr ""

# File: docs/8.x/mix.md, line: 136
# File: docs/master/mix.md, line: 136
#. type: Title ###
#, no-wrap
msgid "PostCSS"
msgstr ""

# File: docs/8.x/mix.md, line: 139
# File: docs/master/mix.md, line: 139
#. type: Plain text
msgid "[PostCSS](https://postcss.org/), a powerful tool for transforming your CSS, is included with Laravel Mix out of the box. By default, Mix leverages the popular [Autoprefixer](https://github.com/postcss/autoprefixer) plugin to automatically apply all necessary CSS3 vendor prefixes. However, you're free to add any additional plugins that are appropriate for your application."
msgstr ""

# File: docs/8.x/mix.md, line: 141
# File: docs/master/mix.md, line: 141
#. type: Plain text
msgid "First, install the desired plugin through NPM and include it in your array of plugins when calling Mix's `postCss` method. The `postCss` method accepts the path to your CSS file as its first argument and the directory where the compiled file should be placed as its second argument:"
msgstr ""

# File: docs/8.x/mix.md, line: 145
# File: docs/master/mix.md, line: 145
#. type: Plain text
#, no-wrap
msgid "    mix.postCss('resources/css/app.css', 'public/css', [\n"
"        require('postcss-custom-properties')\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/mix.md, line: 147
# File: docs/master/mix.md, line: 147
#. type: Plain text
msgid "Or, you may execute `postCss` with no additional plugins in order to achieve simple CSS compilation and minification:"
msgstr ""

# File: docs/8.x/mix.md, line: 149
# File: docs/master/mix.md, line: 149
#. type: Plain text
#, no-wrap
msgid "    mix.postCss('resources/css/app.css', 'public/css');\n"
msgstr ""

# File: docs/8.x/mix.md, line: 151
# File: docs/master/mix.md, line: 151
#. type: Plain text
#, no-wrap
msgid "<a name=\"sass\"></a>\n"
msgstr ""

# File: docs/8.x/mix.md, line: 151
# File: docs/master/mix.md, line: 151
#. type: Title ###
#, no-wrap
msgid "Sass"
msgstr ""

# File: docs/8.x/mix.md, line: 154
# File: docs/master/mix.md, line: 154
#. type: Plain text
msgid "The `sass` method allows you to compile [Sass](https://sass-lang.com/) into CSS that can be understood by web browsers. The `sass` method accepts the path to your Sass file as its first argument and the directory where the compiled file should be placed as its second argument:"
msgstr ""

# File: docs/8.x/mix.md, line: 156
# File: docs/master/mix.md, line: 156
#. type: Plain text
#, no-wrap
msgid "    mix.sass('resources/sass/app.scss', 'public/css');\n"
msgstr ""

# File: docs/8.x/mix.md, line: 158
# File: docs/master/mix.md, line: 158
#. type: Plain text
msgid "You may compile multiple Sass files into their own respective CSS files and even customize the output directory of the resulting CSS by calling the `sass` method multiple times:"
msgstr ""

# File: docs/8.x/mix.md, line: 161
# File: docs/master/mix.md, line: 161
#. type: Plain text
#, no-wrap
msgid "    mix.sass('resources/sass/app.sass', 'public/css')\n"
"        .sass('resources/sass/admin.sass', 'public/css/admin');\n"
msgstr ""

# File: docs/8.x/mix.md, line: 163
# File: docs/master/mix.md, line: 163
#. type: Plain text
#, no-wrap
msgid "<a name=\"url-processing\"></a>\n"
msgstr ""

# File: docs/8.x/mix.md, line: 163
# File: docs/master/mix.md, line: 163
#. type: Title ###
#, no-wrap
msgid "URL Processing"
msgstr ""

# File: docs/8.x/mix.md, line: 166
# File: docs/master/mix.md, line: 166
#. type: Plain text
msgid "Because Laravel Mix is built on top of webpack, it's important to understand a few webpack concepts. For CSS compilation, webpack will rewrite and optimize any `url()` calls within your stylesheets. While this might initially sound strange, it's an incredibly powerful piece of functionality. Imagine that we want to compile Sass that includes a relative URL to an image:"
msgstr ""

# File: docs/8.x/mix.md, line: 170
# File: docs/master/mix.md, line: 170
#. type: Plain text
#, no-wrap
msgid "    .example {\n"
"        background: url('../images/example.png');\n"
"    }\n"
msgstr ""

# File: docs/8.x/mix.md, line: 172
# File: docs/master/mix.md, line: 172
#. type: Plain text
#, no-wrap
msgid "> {note} Absolute paths for any given `url()` will be excluded from URL-rewriting. For example, `url('/images/thing.png')` or `url('http://example.com/images/thing.png')` won't be modified.\n"
msgstr ""

# File: docs/8.x/mix.md, line: 174
# File: docs/master/mix.md, line: 174
#. type: Plain text
msgid "By default, Laravel Mix and webpack will find `example.png`, copy it to your `public/images` folder, and then rewrite the `url()` within your generated stylesheet. As such, your compiled CSS will be:"
msgstr ""

# File: docs/8.x/mix.md, line: 178
# File: docs/master/mix.md, line: 178
#. type: Plain text
#, no-wrap
msgid "    .example {\n"
"        background: url(/images/example.png?d41d8cd98f00b204e9800998ecf8427e);\n"
"    }\n"
msgstr ""

# File: docs/8.x/mix.md, line: 180
# File: docs/master/mix.md, line: 180
#. type: Plain text
msgid "As useful as this feature may be, your existing folder structure may already be configured in a way you like. If this is the case, you may disable `url()` rewriting like so:"
msgstr ""

# File: docs/8.x/mix.md, line: 184
# File: docs/master/mix.md, line: 184
#. type: Plain text
#, no-wrap
msgid "    mix.sass('resources/sass/app.scss', 'public/css').options({\n"
"        processCssUrls: false\n"
"    });\n"
msgstr ""

# File: docs/8.x/mix.md, line: 186
# File: docs/master/mix.md, line: 186
#. type: Plain text
msgid "With this addition to your `webpack.mix.js` file, Mix will no longer match any `url()` or copy assets to your public directory. In other words, the compiled CSS will look just like how you originally typed it:"
msgstr ""

# File: docs/8.x/mix.md, line: 190
# File: docs/master/mix.md, line: 190
#. type: Plain text
#, no-wrap
msgid "    .example {\n"
"        background: url(\"../images/thing.png\");\n"
"    }\n"
msgstr ""

# File: docs/8.x/mix.md, line: 192
# File: docs/master/mix.md, line: 192
#. type: Plain text
#, no-wrap
msgid "<a name=\"css-source-maps\"></a>\n"
msgstr ""

# File: docs/8.x/mix.md, line: 192
# File: docs/master/mix.md, line: 192
#. type: Title ###
#, no-wrap
msgid "Source Maps"
msgstr ""

# File: docs/8.x/mix.md, line: 195
# File: docs/master/mix.md, line: 195
#. type: Plain text
msgid "Though disabled by default, source maps may be activated by calling the `mix.sourceMaps()` method in your `webpack.mix.js` file. Though it comes with a compile/performance cost, this will provide extra debugging information to your browser's developer tools when using compiled assets:"
msgstr ""

# File: docs/8.x/mix.md, line: 198
# File: docs/master/mix.md, line: 198
#. type: Plain text
#, no-wrap
msgid "    mix.js('resources/js/app.js', 'public/js')\n"
"        .sourceMaps();\n"
msgstr ""

# File: docs/8.x/mix.md, line: 200
# File: docs/master/mix.md, line: 200
#. type: Plain text
#, no-wrap
msgid "<a name=\"style-of-source-mapping\"></a>\n"
msgstr ""

# File: docs/8.x/mix.md, line: 200
# File: docs/master/mix.md, line: 200
#. type: Title ####
#, no-wrap
msgid "Style Of Source Mapping"
msgstr ""

# File: docs/8.x/mix.md, line: 203
# File: docs/master/mix.md, line: 203
#. type: Plain text
msgid "Webpack offers a variety of [source mapping styles](https://webpack.js.org/configuration/devtool/#devtool). By default, Mix's source mapping style is set to `eval-source-map`, which provides a fast rebuild time. If you want to change the mapping style, you may do so using the `sourceMaps` method:"
msgstr ""

# File: docs/8.x/mix.md, line: 205
# File: docs/master/mix.md, line: 205
#. type: Plain text
#, no-wrap
msgid "    let productionSourceMaps = false;\n"
msgstr ""

# File: docs/8.x/mix.md, line: 208
# File: docs/master/mix.md, line: 208
#. type: Plain text
#, no-wrap
msgid "    mix.js('resources/js/app.js', 'public/js')\n"
"        .sourceMaps(productionSourceMaps, 'source-map');\n"
msgstr ""

# File: docs/8.x/mix.md, line: 210
# File: docs/master/mix.md, line: 210
#. type: Plain text
#, no-wrap
msgid "<a name=\"working-with-scripts\"></a>\n"
msgstr ""

# File: docs/8.x/mix.md, line: 210
# File: docs/master/mix.md, line: 210
#. type: Title ##
#, no-wrap
msgid "Working With JavaScript"
msgstr ""

# File: docs/8.x/mix.md, line: 213
# File: docs/master/mix.md, line: 213
#. type: Plain text
msgid "Mix provides several features to help you work with your JavaScript files, such as compiling modern ECMAScript, module bundling, minification, and concatenating plain JavaScript files. Even better, this all works seamlessly, without requiring an ounce of custom configuration:"
msgstr ""

# File: docs/8.x/mix.md, line: 215
# File: docs/8.x/mix.md, line: 316
# File: docs/master/mix.md, line: 215
# File: docs/master/mix.md, line: 316
#. type: Plain text
#, no-wrap
msgid "    mix.js('resources/js/app.js', 'public/js');\n"
msgstr ""

# File: docs/8.x/mix.md, line: 217
# File: docs/master/mix.md, line: 217
#. type: Plain text
msgid "With this single line of code, you may now take advantage of:"
msgstr ""

# File: docs/8.x/mix.md, line: 223
# File: docs/master/mix.md, line: 223
#. type: Plain text
#, no-wrap
msgid "<div class=\"content-list\" markdown=\"1\">\n"
"- The latest EcmaScript syntax.\n"
"- Modules\n"
"- Minification for production environments.\n"
"</div>\n"
msgstr ""

# File: docs/8.x/mix.md, line: 225
# File: docs/master/mix.md, line: 225
#. type: Plain text
#, no-wrap
msgid "<a name=\"vue\"></a>\n"
msgstr ""

# File: docs/8.x/mix.md, line: 225
# File: docs/master/mix.md, line: 225
#. type: Title ###
#, no-wrap
msgid "Vue"
msgstr ""

# File: docs/8.x/mix.md, line: 228
# File: docs/master/mix.md, line: 228
#. type: Plain text
msgid "Mix will automatically install the Babel plugins necessary for Vue single-file component compilation support when using the `vue` method. No further configuration is required:"
msgstr ""

# File: docs/8.x/mix.md, line: 231
# File: docs/master/mix.md, line: 231
#. type: Plain text
#, no-wrap
msgid "    mix.js('resources/js/app.js', 'public/js')\n"
"       .vue();\n"
msgstr ""

# File: docs/8.x/mix.md, line: 233
# File: docs/master/mix.md, line: 233
#. type: Plain text
msgid "Once your JavaScript has been compiled, you can reference it in your application:"
msgstr ""

# File: docs/8.x/mix.md, line: 234
# File: docs/8.x/mix.md, line: 252
# File: docs/master/mix.md, line: 234
# File: docs/master/mix.md, line: 252
#. type: Plain text
#, no-wrap
msgid "<head>\n"
"    <!-- ... -->\n\n"
"    <script src=\"/js/app.js\"></script>\n"
"</head>\n"
msgstr ""

# File: docs/8.x/mix.md, line: 243
# File: docs/master/mix.md, line: 243
#. type: Plain text
#, no-wrap
msgid "<a name=\"react\"></a>\n"
msgstr ""

# File: docs/8.x/mix.md, line: 243
# File: docs/master/mix.md, line: 243
#. type: Title ###
#, no-wrap
msgid "React"
msgstr ""

# File: docs/8.x/mix.md, line: 246
# File: docs/master/mix.md, line: 246
#. type: Plain text
msgid "Mix can automatically install the Babel plugins necessary for React support. To get started, add a call to the `react` method:"
msgstr ""

# File: docs/8.x/mix.md, line: 249
# File: docs/master/mix.md, line: 249
#. type: Plain text
#, no-wrap
msgid "    mix.js('resources/js/app.jsx', 'public/js')\n"
"       .react();\n"
msgstr ""

# File: docs/8.x/mix.md, line: 251
# File: docs/master/mix.md, line: 251
#. type: Plain text
msgid "Behind the scenes, Mix will download and include the appropriate `babel-preset-react` Babel plugin. Once your JavaScript has been compiled, you can reference it in your application:"
msgstr ""

# File: docs/8.x/mix.md, line: 261
# File: docs/master/mix.md, line: 261
#. type: Plain text
#, no-wrap
msgid "<a name=\"vendor-extraction\"></a>\n"
msgstr ""

# File: docs/8.x/mix.md, line: 261
# File: docs/master/mix.md, line: 261
#. type: Title ###
#, no-wrap
msgid "Vendor Extraction"
msgstr ""

# File: docs/8.x/mix.md, line: 264
# File: docs/master/mix.md, line: 264
#. type: Plain text
msgid "One potential downside to bundling all of your application-specific JavaScript with your vendor libraries such as React and Vue is that it makes long-term caching more difficult. For example, a single update to your application code will force the browser to re-download all of your vendor libraries even if they haven't changed."
msgstr ""

# File: docs/8.x/mix.md, line: 266
# File: docs/master/mix.md, line: 266
#. type: Plain text
msgid "If you intend to make frequent updates to your application's JavaScript, you should consider extracting all of your vendor libraries into their own file. This way, a change to your application code will not affect the caching of your large `vendor.js` file. Mix's `extract` method makes this a breeze:"
msgstr ""

# File: docs/8.x/mix.md, line: 269
# File: docs/master/mix.md, line: 269
#. type: Plain text
#, no-wrap
msgid "    mix.js('resources/js/app.js', 'public/js')\n"
"        .extract(['vue'])\n"
msgstr ""

# File: docs/8.x/mix.md, line: 271
# File: docs/master/mix.md, line: 271
#. type: Plain text
msgid "The `extract` method accepts an array of all libraries or modules that you wish to extract into a `vendor.js` file. Using the snippet above as an example, Mix will generate the following files:"
msgstr ""

# File: docs/8.x/mix.md, line: 277
# File: docs/master/mix.md, line: 277
#. type: Plain text
#, no-wrap
msgid "<div class=\"content-list\" markdown=\"1\">\n"
"- `public/js/manifest.js`: *The Webpack manifest runtime*\n"
"- `public/js/vendor.js`: *Your vendor libraries*\n"
"- `public/js/app.js`: *Your application code*\n"
"</div>\n"
msgstr ""

# File: docs/8.x/mix.md, line: 279
# File: docs/master/mix.md, line: 279
#. type: Plain text
msgid "To avoid JavaScript errors, be sure to load these files in the proper order:"
msgstr ""

# File: docs/8.x/mix.md, line: 283
# File: docs/master/mix.md, line: 283
#. type: Plain text
#, no-wrap
msgid "    <script src=\"/js/manifest.js\"></script>\n"
"    <script src=\"/js/vendor.js\"></script>\n"
"    <script src=\"/js/app.js\"></script>\n"
msgstr ""

# File: docs/8.x/mix.md, line: 285
# File: docs/master/mix.md, line: 285
#. type: Plain text
#, no-wrap
msgid "<a name=\"custom-webpack-configuration\"></a>\n"
msgstr ""

# File: docs/8.x/mix.md, line: 285
# File: docs/master/mix.md, line: 285
#. type: Title ###
#, no-wrap
msgid "Custom Webpack Configuration"
msgstr ""

# File: docs/8.x/mix.md, line: 288
# File: docs/master/mix.md, line: 288
#. type: Plain text
msgid "Occasionally, you may need to manually modify the underlying Webpack configuration. For example, you might have a special loader or plugin that needs to be referenced."
msgstr ""

# File: docs/8.x/mix.md, line: 290
# File: docs/master/mix.md, line: 290
#. type: Plain text
msgid "Mix provides a useful `webpackConfig` method that allows you to merge any short Webpack configuration overrides. This is particularly appealing, as it doesn't require you to copy and maintain your own copy of the `webpack.config.js` file. The `webpackConfig` method accepts an object, which should contain any [Webpack-specific configuration](https://webpack.js.org/configuration/) that you wish to apply."
msgstr ""

# File: docs/8.x/mix.md, line: 298
# File: docs/master/mix.md, line: 298
#. type: Plain text
#, no-wrap
msgid "    mix.webpackConfig({\n"
"        resolve: {\n"
"            modules: [\n"
"                path.resolve(__dirname, 'vendor/laravel/spark/resources/assets/js')\n"
"            ]\n"
"        }\n"
"    });\n"
msgstr ""

# File: docs/8.x/mix.md, line: 300
# File: docs/master/mix.md, line: 300
#. type: Plain text
#, no-wrap
msgid "<a name=\"versioning-and-cache-busting\"></a>\n"
msgstr ""

# File: docs/8.x/mix.md, line: 300
# File: docs/master/mix.md, line: 300
#. type: Title ##
#, no-wrap
msgid "Versioning / Cache Busting"
msgstr ""

# File: docs/8.x/mix.md, line: 303
# File: docs/master/mix.md, line: 303
#. type: Plain text
msgid "Many developers suffix their compiled assets with a timestamp or unique token to force browsers to load the fresh assets instead of serving stale copies of the code. Mix can automatically handle this for you using the `version` method."
msgstr ""

# File: docs/8.x/mix.md, line: 305
# File: docs/master/mix.md, line: 305
#. type: Plain text
msgid "The `version` method will append a unique hash to the filenames of all compiled files, allowing for more convenient cache busting:"
msgstr ""

# File: docs/8.x/mix.md, line: 308
# File: docs/master/mix.md, line: 308
#. type: Plain text
#, no-wrap
msgid "    mix.js('resources/js/app.js', 'public/js')\n"
"        .version();\n"
msgstr ""

# File: docs/8.x/mix.md, line: 310
# File: docs/master/mix.md, line: 310
#. type: Plain text
msgid "After generating the versioned file, you won't know the exact filename. So, you should use Laravel's global `mix` function within your [views](/docs/{{version}}/views) to load the appropriately hashed asset. The `mix` function will automatically determine the current name of the hashed file:"
msgstr ""

# File: docs/8.x/mix.md, line: 312
# File: docs/master/mix.md, line: 312
#. type: Plain text
#, no-wrap
msgid "    <script src=\"{{ mix('/js/app.js') }}\"></script>\n"
msgstr ""

# File: docs/8.x/mix.md, line: 314
# File: docs/master/mix.md, line: 314
#. type: Plain text
msgid "Because versioned files are usually unnecessary in development, you may instruct the versioning process to only run during `npm run prod`:"
msgstr ""

# File: docs/8.x/mix.md, line: 320
# File: docs/master/mix.md, line: 320
#. type: Plain text
#, no-wrap
msgid "    if (mix.inProduction()) {\n"
"        mix.version();\n"
"    }\n"
msgstr ""

# File: docs/8.x/mix.md, line: 322
# File: docs/master/mix.md, line: 322
#. type: Plain text
#, no-wrap
msgid "<a name=\"custom-mix-base-urls\"></a>\n"
msgstr ""

# File: docs/8.x/mix.md, line: 322
# File: docs/master/mix.md, line: 322
#. type: Title ####
#, no-wrap
msgid "Custom Mix Base URLs"
msgstr ""

# File: docs/8.x/mix.md, line: 325
# File: docs/master/mix.md, line: 325
#. type: Plain text
msgid "If your Mix compiled assets are deployed to a CDN separate from your application, you will need to change the base URL generated by the `mix` function. You may do so by adding a `mix_url` configuration option to your application's `config/app.php` configuration file:"
msgstr ""

# File: docs/8.x/mix.md, line: 327
# File: docs/master/mix.md, line: 327
#. type: Plain text
#, no-wrap
msgid "    'mix_url' => env('MIX_ASSET_URL', null)\n"
msgstr ""

# File: docs/8.x/mix.md, line: 329
# File: docs/master/mix.md, line: 329
#. type: Plain text
msgid "After configuring the Mix URL, The `mix` function will prefix the configured URL when generating URLs to assets:"
msgstr ""

# File: docs/8.x/mix.md, line: 330
# File: docs/master/mix.md, line: 330
#. type: Code fence info string
#, no-wrap
msgid "bash"
msgstr ""

# File: docs/8.x/mix.md, line: 330
# File: docs/master/mix.md, line: 330
#. type: Plain text
#, no-wrap
msgid "https://cdn.example.com/js/app.js?id=1964becbdd96414518cd\n"
msgstr ""

# File: docs/8.x/mix.md, line: 335
# File: docs/master/mix.md, line: 335
#. type: Plain text
#, no-wrap
msgid "<a name=\"browsersync-reloading\"></a>\n"
msgstr ""

# File: docs/8.x/mix.md, line: 335
# File: docs/master/mix.md, line: 335
#. type: Title ##
#, no-wrap
msgid "Browsersync Reloading"
msgstr ""

# File: docs/8.x/mix.md, line: 338
# File: docs/master/mix.md, line: 338
#. type: Plain text
msgid "[BrowserSync](https://browsersync.io/) can automatically monitor your files for changes, and inject your changes into the browser without requiring a manual refresh. You may enable support for this by calling the `mix.browserSync()` method:"
msgstr ""

# File: docs/8.x/mix.md, line: 339
# File: docs/master/mix.md, line: 339
#. type: Plain text
#, no-wrap
msgid "mix.browserSync('laravel.test');\n"
msgstr ""

# File: docs/8.x/mix.md, line: 344
# File: docs/master/mix.md, line: 344
#. type: Plain text
msgid "[BrowserSync options](https://browsersync.io/docs/options) may be specified by passing a JavaScript object to the `browserSync` method:"
msgstr ""

# File: docs/8.x/mix.md, line: 345
# File: docs/master/mix.md, line: 345
#. type: Plain text
#, no-wrap
msgid "mix.browserSync({\n"
"    proxy: 'laravel.test'\n"
"});\n"
msgstr ""

# File: docs/8.x/mix.md, line: 352
# File: docs/master/mix.md, line: 352
#. type: Plain text
msgid "Next, start webpack's development server using the `npm run watch` command. Now, when you modify a script or PHP file you can watch as the browser instantly refreshes the page to reflect your changes."
msgstr ""

# File: docs/8.x/mix.md, line: 354
# File: docs/master/mix.md, line: 354
#. type: Plain text
#, no-wrap
msgid "<a name=\"environment-variables\"></a>\n"
msgstr ""

# File: docs/8.x/mix.md, line: 354
# File: docs/master/mix.md, line: 354
#. type: Title ##
#, no-wrap
msgid "Environment Variables"
msgstr ""

# File: docs/8.x/mix.md, line: 357
# File: docs/master/mix.md, line: 357
#. type: Plain text
msgid "You may inject environment variables into your `webpack.mix.js` script by prefixing one of the environment variables in your `.env` file with `MIX_`:"
msgstr ""

# File: docs/8.x/mix.md, line: 359
# File: docs/master/mix.md, line: 359
#. type: Plain text
#, no-wrap
msgid "    MIX_SENTRY_DSN_PUBLIC=http://example.com\n"
msgstr ""

# File: docs/8.x/mix.md, line: 361
# File: docs/master/mix.md, line: 361
#. type: Plain text
msgid "After the variable has been defined in your `.env` file, you may access it via the `process.env` object. However, you will need to restart the task if the environment variable's value changes while the task is running:"
msgstr ""

# File: docs/8.x/mix.md, line: 363
# File: docs/master/mix.md, line: 363
#. type: Plain text
#, no-wrap
msgid "    process.env.MIX_SENTRY_DSN_PUBLIC\n"
msgstr ""

# File: docs/8.x/mix.md, line: 365
# File: docs/master/mix.md, line: 365
#. type: Plain text
#, no-wrap
msgid "<a name=\"notifications\"></a>\n"
msgstr ""

# File: docs/8.x/mix.md, line: 365
# File: docs/master/mix.md, line: 365
#. type: Title ##
#, no-wrap
msgid "Notifications"
msgstr ""

# File: docs/8.x/mix.md, line: 368
# File: docs/master/mix.md, line: 368
#. type: Plain text
msgid "When available, Mix will automatically display OS notifications when compiling, giving you instant feedback as to whether the compilation was successful or not. However, there may be instances when you would prefer to disable these notifications. One such example might be triggering Mix on your production server. Notifications may be deactivated using the `disableNotifications` method:"
msgstr ""

# File: docs/8.x/mix.md, line: 369
# File: docs/master/mix.md, line: 369
#. type: Plain text
#, no-wrap
msgid "    mix.disableNotifications();\n"
msgstr ""

# File: docs/master/mix.md, line: 26
#. type: Plain text
msgid "[Laravel Mix](https://github.com/laravel-mix/laravel-mix), a package developed by [Laracasts](https://laracasts.com) creator Jeffrey Way, provides a fluent API for defining [webpack](https://webpack.js.org) build steps for your Laravel application using several common CSS and JavaScript pre-processors."
msgstr ""

