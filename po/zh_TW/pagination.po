msgid ""
msgstr ""
"Project-Id-Version: laravel-docs\n"
"POT-Creation-Date: 2022-02-08 06:32+0000\n"
"PO-Revision-Date: 2022-02-08 06:39\n"
"Last-Translator: \n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2022-02-08 06:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: \n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2022-02-08 06:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: \n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/templates/pagination.pot\n"
"X-Crowdin-File-ID: 115\n"

# File: docs/8.x/pagination.md, line: 1
# File: docs/9.x/pagination.md, line: 1
# File: docs/master/pagination.md, line: 1
#. type: Title #
#, no-wrap
msgid "Database: Pagination"
msgstr ""

# File: docs/8.x/pagination.md, line: 17
# File: docs/9.x/pagination.md, line: 17
# File: docs/master/pagination.md, line: 17
#. type: Bullet: '- '
msgid "[Introduction](#introduction)"
msgstr ""

# File: docs/8.x/pagination.md, line: 17
# File: docs/9.x/pagination.md, line: 17
# File: docs/master/pagination.md, line: 17
#. type: Plain text
#, no-wrap
msgid "- [Basic Usage](#basic-usage)\n"
"    - [Paginating Query Builder Results](#paginating-query-builder-results)\n"
"    - [Paginating Eloquent Results](#paginating-eloquent-results)\n"
"    - [Cursor Pagination](#cursor-pagination)\n"
"    - [Manually Creating A Paginator](#manually-creating-a-paginator)\n"
"    - [Customizing Pagination URLs](#customizing-pagination-urls)\n"
"- [Displaying Pagination Results](#displaying-pagination-results)\n"
"    - [Adjusting The Pagination Link Window](#adjusting-the-pagination-link-window)\n"
"    - [Converting Results To JSON](#converting-results-to-json)\n"
"- [Customizing The Pagination View](#customizing-the-pagination-view)\n"
"    - [Using Bootstrap](#using-bootstrap)\n"
"- [Paginator and LengthAwarePaginator Instance Methods](#paginator-instance-methods)\n"
"- [Cursor Paginator Instance Methods](#cursor-paginator-instance-methods)\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 19
# File: docs/9.x/pagination.md, line: 19
# File: docs/master/pagination.md, line: 19
#. type: Plain text
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 19
# File: docs/9.x/pagination.md, line: 19
# File: docs/master/pagination.md, line: 19
#. type: Title ##
#, no-wrap
msgid "Introduction"
msgstr ""

# File: docs/8.x/pagination.md, line: 22
# File: docs/9.x/pagination.md, line: 22
# File: docs/master/pagination.md, line: 22
#. type: Plain text
msgid "In other frameworks, pagination can be very painful. We hope Laravel's approach to pagination will be a breath of fresh air. Laravel's paginator is integrated with the [query builder](/docs/{{version}}/queries) and [Eloquent ORM](/docs/{{version}}/eloquent) and provides convenient, easy-to-use pagination of database records with zero configuration."
msgstr ""

# File: docs/8.x/pagination.md, line: 24
# File: docs/9.x/pagination.md, line: 24
# File: docs/master/pagination.md, line: 24
#. type: Plain text
msgid "By default, the HTML generated by the paginator is compatible with the [Tailwind CSS framework](https://tailwindcss.com/); however, Bootstrap pagination support is also available."
msgstr ""

# File: docs/8.x/pagination.md, line: 26
# File: docs/9.x/pagination.md, line: 26
# File: docs/master/pagination.md, line: 26
#. type: Plain text
#, no-wrap
msgid "<a name=\"tailwind-jit\"></a>\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 26
# File: docs/9.x/pagination.md, line: 26
# File: docs/master/pagination.md, line: 26
#. type: Title ####
#, no-wrap
msgid "Tailwind JIT"
msgstr ""

# File: docs/8.x/pagination.md, line: 29
# File: docs/9.x/pagination.md, line: 29
# File: docs/master/pagination.md, line: 29
#. type: Plain text
msgid "If you are using Laravel's default Tailwind pagination views and the Tailwind JIT engine, you should ensure your application's `tailwind.config.js` file's `content` key references Laravel's pagination views so that their Tailwind classes are not purged:"
msgstr ""

# File: docs/8.x/pagination.md, line: 30
# File: docs/9.x/pagination.md, line: 30
# File: docs/master/pagination.md, line: 30
#. type: Code fence info string
#, no-wrap
msgid "js"
msgstr ""

# File: docs/8.x/pagination.md, line: 30
# File: docs/9.x/pagination.md, line: 30
# File: docs/master/pagination.md, line: 30
#. type: Plain text
#, no-wrap
msgid "content: [\n"
"    './resources/**/*.blade.php',\n"
"    './resources/**/*.js',\n"
"    './resources/**/*.vue',\n"
"    './vendor/laravel/framework/src/Illuminate/Pagination/resources/views/*.blade.php',\n"
"],\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 40
# File: docs/9.x/pagination.md, line: 40
# File: docs/master/pagination.md, line: 40
#. type: Plain text
#, no-wrap
msgid "<a name=\"basic-usage\"></a>\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 40
# File: docs/9.x/pagination.md, line: 40
# File: docs/master/pagination.md, line: 40
#. type: Title ##
#, no-wrap
msgid "Basic Usage"
msgstr ""

# File: docs/8.x/pagination.md, line: 43
# File: docs/9.x/pagination.md, line: 43
# File: docs/master/pagination.md, line: 43
#. type: Plain text
#, no-wrap
msgid "<a name=\"paginating-query-builder-results\"></a>\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 43
# File: docs/9.x/pagination.md, line: 43
# File: docs/master/pagination.md, line: 43
#. type: Title ###
#, no-wrap
msgid "Paginating Query Builder Results"
msgstr ""

# File: docs/8.x/pagination.md, line: 46
# File: docs/9.x/pagination.md, line: 46
# File: docs/master/pagination.md, line: 46
#. type: Plain text
msgid "There are several ways to paginate items. The simplest is by using the `paginate` method on the [query builder](/docs/{{version}}/queries) or an [Eloquent query](/docs/{{version}}/eloquent). The `paginate` method automatically takes care of setting the query's \"limit\" and \"offset\" based on the current page being viewed by the user. By default, the current page is detected by the value of the `page` query string argument on the HTTP request. This value is automatically detected by Laravel, and is also automatically inserted into links generated by the paginator."
msgstr ""

# File: docs/8.x/pagination.md, line: 48
# File: docs/9.x/pagination.md, line: 48
# File: docs/master/pagination.md, line: 48
#. type: Plain text
msgid "In this example, the only argument passed to the `paginate` method is the number of items you would like displayed \"per page\". In this case, let's specify that we would like to display `15` items per page:"
msgstr ""

# File: docs/8.x/pagination.md, line: 50
# File: docs/8.x/pagination.md, line: 287
# File: docs/9.x/pagination.md, line: 50
# File: docs/9.x/pagination.md, line: 293
# File: docs/master/pagination.md, line: 50
# File: docs/master/pagination.md, line: 293
#. type: Plain text
#, no-wrap
msgid "    <?php\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 52
# File: docs/9.x/pagination.md, line: 52
# File: docs/master/pagination.md, line: 52
#. type: Plain text
#, no-wrap
msgid "    namespace App\\Http\\Controllers;\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 55
# File: docs/9.x/pagination.md, line: 55
# File: docs/master/pagination.md, line: 55
#. type: Plain text
#, no-wrap
msgid "    use App\\Http\\Controllers\\Controller;\n"
"    use Illuminate\\Support\\Facades\\DB;\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 70
# File: docs/9.x/pagination.md, line: 70
# File: docs/master/pagination.md, line: 70
#. type: Plain text
#, no-wrap
msgid "    class UserController extends Controller\n"
"    {\n"
"        /**\n"
"         * Show all application users.\n"
"         *\n"
"         * @return \\Illuminate\\Http\\Response\n"
"         */\n"
"        public function index()\n"
"        {\n"
"            return view('user.index', [\n"
"                'users' => DB::table('users')->paginate(15)\n"
"            ]);\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 72
# File: docs/9.x/pagination.md, line: 72
# File: docs/master/pagination.md, line: 72
#. type: Plain text
#, no-wrap
msgid "<a name=\"simple-pagination\"></a>\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 72
# File: docs/9.x/pagination.md, line: 72
# File: docs/master/pagination.md, line: 72
#. type: Title ####
#, no-wrap
msgid "Simple Pagination"
msgstr ""

# File: docs/8.x/pagination.md, line: 75
# File: docs/9.x/pagination.md, line: 75
# File: docs/master/pagination.md, line: 75
#. type: Plain text
msgid "The `paginate` method counts the total number of records matched by the query before retrieving the records from the database. This is done so that the paginator knows how many pages of records there are in total. However, if you do not plan to show the total number of pages in your application's UI then the record count query is unnecessary."
msgstr ""

# File: docs/8.x/pagination.md, line: 77
# File: docs/9.x/pagination.md, line: 77
# File: docs/master/pagination.md, line: 77
#. type: Plain text
msgid "Therefore, if you only need to display simple \"Next\" and \"Previous\" links in your application's UI, you may use the `simplePaginate` method to perform a single, efficient query:"
msgstr ""

# File: docs/8.x/pagination.md, line: 79
# File: docs/9.x/pagination.md, line: 79
# File: docs/master/pagination.md, line: 79
#. type: Plain text
#, no-wrap
msgid "    $users = DB::table('users')->simplePaginate(15);\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 81
# File: docs/9.x/pagination.md, line: 81
# File: docs/master/pagination.md, line: 81
#. type: Plain text
#, no-wrap
msgid "<a name=\"paginating-eloquent-results\"></a>\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 81
# File: docs/9.x/pagination.md, line: 81
# File: docs/master/pagination.md, line: 81
#. type: Title ###
#, no-wrap
msgid "Paginating Eloquent Results"
msgstr ""

# File: docs/8.x/pagination.md, line: 84
# File: docs/9.x/pagination.md, line: 84
# File: docs/master/pagination.md, line: 84
#. type: Plain text
msgid "You may also paginate [Eloquent](/docs/{{version}}/eloquent) queries. In this example, we will paginate the `App\\Models\\User` model and indicate that we plan to display 15 records per page. As you can see, the syntax is nearly identical to paginating query builder results:"
msgstr ""

# File: docs/8.x/pagination.md, line: 86
# File: docs/8.x/pagination.md, line: 107
# File: docs/8.x/pagination.md, line: 172
# File: docs/8.x/pagination.md, line: 187
# File: docs/8.x/pagination.md, line: 239
# File: docs/9.x/pagination.md, line: 86
# File: docs/9.x/pagination.md, line: 107
# File: docs/9.x/pagination.md, line: 172
# File: docs/9.x/pagination.md, line: 187
# File: docs/9.x/pagination.md, line: 241
# File: docs/master/pagination.md, line: 86
# File: docs/master/pagination.md, line: 107
# File: docs/master/pagination.md, line: 172
# File: docs/master/pagination.md, line: 187
# File: docs/master/pagination.md, line: 241
#. type: Plain text
#, no-wrap
msgid "    use App\\Models\\User;\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 88
# File: docs/9.x/pagination.md, line: 88
# File: docs/master/pagination.md, line: 88
#. type: Plain text
#, no-wrap
msgid "    $users = User::paginate(15);\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 90
# File: docs/9.x/pagination.md, line: 90
# File: docs/master/pagination.md, line: 90
#. type: Plain text
msgid "Of course, you may call the `paginate` method after setting other constraints on the query, such as `where` clauses:"
msgstr ""

# File: docs/8.x/pagination.md, line: 92
# File: docs/9.x/pagination.md, line: 92
# File: docs/master/pagination.md, line: 92
#. type: Plain text
#, no-wrap
msgid "    $users = User::where('votes', '>', 100)->paginate(15);\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 94
# File: docs/9.x/pagination.md, line: 94
# File: docs/master/pagination.md, line: 94
#. type: Plain text
msgid "You may also use the `simplePaginate` method when paginating Eloquent models:"
msgstr ""

# File: docs/8.x/pagination.md, line: 96
# File: docs/9.x/pagination.md, line: 96
# File: docs/master/pagination.md, line: 96
#. type: Plain text
#, no-wrap
msgid "    $users = User::where('votes', '>', 100)->simplePaginate(15);\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 98
# File: docs/9.x/pagination.md, line: 98
# File: docs/master/pagination.md, line: 98
#. type: Plain text
msgid "Similarly, you may use the `cursorPaginate` method to cursor paginate Eloquent models:"
msgstr ""

# File: docs/8.x/pagination.md, line: 100
# File: docs/9.x/pagination.md, line: 100
# File: docs/master/pagination.md, line: 100
#. type: Plain text
#, no-wrap
msgid "    $users = User::where('votes', '>', 100)->cursorPaginate(15);\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 102
# File: docs/9.x/pagination.md, line: 102
# File: docs/master/pagination.md, line: 102
#. type: Plain text
#, no-wrap
msgid "<a name=\"multiple-paginator-instances-per-page\"></a>\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 102
# File: docs/9.x/pagination.md, line: 102
# File: docs/master/pagination.md, line: 102
#. type: Title ####
#, no-wrap
msgid "Multiple Paginator Instances Per Page"
msgstr ""

# File: docs/8.x/pagination.md, line: 105
# File: docs/9.x/pagination.md, line: 105
# File: docs/master/pagination.md, line: 105
#. type: Plain text
msgid "Sometimes you may need to render two separate paginators on a single screen that is rendered by your application. However, if both paginator instances use the `page` query string parameter to store the current page, the two paginator's will conflict. To resolve this conflict, you may pass the name of the query string parameter you wish to use to store the paginator's current page via the third argument provided to the `paginate`, `simplePaginate`, and `cursorPaginate` methods:"
msgstr ""

# File: docs/8.x/pagination.md, line: 111
# File: docs/9.x/pagination.md, line: 111
# File: docs/master/pagination.md, line: 111
#. type: Plain text
#, no-wrap
msgid "    $users = User::where('votes', '>', 100)->paginate(\n"
"        $perPage = 15, $columns = ['*'], $pageName = 'users'\n"
"    );\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 113
# File: docs/9.x/pagination.md, line: 113
# File: docs/master/pagination.md, line: 113
#. type: Plain text
#, no-wrap
msgid "<a name=\"cursor-pagination\"></a>\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 113
# File: docs/9.x/pagination.md, line: 113
# File: docs/master/pagination.md, line: 113
#. type: Title ###
#, no-wrap
msgid "Cursor Pagination"
msgstr ""

# File: docs/8.x/pagination.md, line: 116
# File: docs/9.x/pagination.md, line: 116
# File: docs/master/pagination.md, line: 116
#. type: Plain text
msgid "While `paginate` and `simplePaginate` create queries using the SQL \"offset\" clause, cursor pagination works by constructing \"where\" clauses that compare the values of the ordered columns contained in the query, providing the most efficient database performance available amongst all of Laravel's pagination methods. This method of pagination is particularly well-suited for large data-sets and \"infinite\" scrolling user interfaces."
msgstr ""

# File: docs/8.x/pagination.md, line: 118
# File: docs/9.x/pagination.md, line: 118
# File: docs/master/pagination.md, line: 118
#. type: Plain text
msgid "Unlike offset based pagination, which includes a page number in the query string of the URLs generated by the paginator, cursor based pagination places a \"cursor\" string in the query string. The cursor is an encoded string containing the location that the next paginated query should start paginating and the direction that it should paginate:"
msgstr ""

# File: docs/8.x/pagination.md, line: 119
# File: docs/9.x/pagination.md, line: 119
# File: docs/master/pagination.md, line: 119
#. type: Code fence info string
#, no-wrap
msgid "nothing"
msgstr ""

# File: docs/8.x/pagination.md, line: 119
# File: docs/9.x/pagination.md, line: 119
# File: docs/master/pagination.md, line: 119
#. type: Plain text
#, no-wrap
msgid "http://localhost/users?cursor=eyJpZCI6MTUsIl9wb2ludHNUb05leHRJdGVtcyI6dHJ1ZX0\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 124
# File: docs/9.x/pagination.md, line: 124
# File: docs/master/pagination.md, line: 124
#. type: Plain text
msgid "You may create a cursor based paginator instance via the `cursorPaginate` method offered by the query builder. This method returns an instance of `Illuminate\\Pagination\\CursorPaginator`:"
msgstr ""

# File: docs/8.x/pagination.md, line: 126
# File: docs/9.x/pagination.md, line: 126
# File: docs/master/pagination.md, line: 126
#. type: Plain text
#, no-wrap
msgid "    $users = DB::table('users')->orderBy('id')->cursorPaginate(15);\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 128
# File: docs/9.x/pagination.md, line: 128
# File: docs/master/pagination.md, line: 128
#. type: Plain text
msgid "Once you have retrieved a cursor paginator instance, you may [display the pagination results](#displaying-pagination-results) as you typically would when using the `paginate` and `simplePaginate` methods. For more information on the instance methods offered by the cursor paginator, please consult the [cursor paginator instance method documentation](#cursor-paginator-instance-methods)."
msgstr ""

# File: docs/8.x/pagination.md, line: 130
# File: docs/9.x/pagination.md, line: 130
# File: docs/master/pagination.md, line: 130
#. type: Plain text
#, no-wrap
msgid "> {note} Your query must contain an \"order by\" clause in order to take advantage of cursor pagination.\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 132
# File: docs/9.x/pagination.md, line: 132
# File: docs/master/pagination.md, line: 132
#. type: Plain text
#, no-wrap
msgid "<a name=\"cursor-vs-offset-pagination\"></a>\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 132
# File: docs/9.x/pagination.md, line: 132
# File: docs/master/pagination.md, line: 132
#. type: Title ####
#, no-wrap
msgid "Cursor vs. Offset Pagination"
msgstr ""

# File: docs/8.x/pagination.md, line: 135
# File: docs/9.x/pagination.md, line: 135
# File: docs/master/pagination.md, line: 135
#. type: Plain text
msgid "To illustrate the differences between offset pagination and cursor pagination, let's examine some example SQL queries. Both of the following queries will both display the \"second page\" of results for a `users` table ordered by `id`:"
msgstr ""

# File: docs/8.x/pagination.md, line: 136
# File: docs/9.x/pagination.md, line: 136
# File: docs/master/pagination.md, line: 136
#. type: Code fence info string
#, no-wrap
msgid "sql"
msgstr ""

# File: docs/8.x/pagination.md, line: 136
# File: docs/9.x/pagination.md, line: 136
# File: docs/master/pagination.md, line: 136
#. type: Plain text
#, no-wrap
msgid "# Offset Pagination...\n"
"select * from users order by id asc limit 15 offset 15;\n\n"
"# Cursor Pagination...\n"
"select * from users where id > 15 order by id asc limit 15;\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 145
# File: docs/9.x/pagination.md, line: 145
# File: docs/master/pagination.md, line: 145
#. type: Plain text
msgid "The cursor pagination query offers the following advantages over offset pagination:"
msgstr ""

# File: docs/8.x/pagination.md, line: 148
# File: docs/9.x/pagination.md, line: 148
# File: docs/master/pagination.md, line: 148
#. type: Plain text
msgid "- For large data-sets, cursor pagination will offer better performance if the \"order by\" columns are indexed. This is because the \"offset\" clause scans through all previously matched data.  - For data-sets with frequent writes, offset pagination may skip records or show duplicates if results have been recently added to or deleted from the page a user is currently viewing."
msgstr ""

# File: docs/8.x/pagination.md, line: 150
# File: docs/9.x/pagination.md, line: 150
# File: docs/master/pagination.md, line: 150
#. type: Plain text
msgid "However, cursor pagination has the following limitations:"
msgstr ""

# File: docs/8.x/pagination.md, line: 154
# File: docs/9.x/pagination.md, line: 154
# File: docs/master/pagination.md, line: 154
#. type: Plain text
msgid "- Like `simplePaginate`, cursor pagination can only be used to display \"Next\" and \"Previous\" links and does not support generating links with page numbers.  - It requires that the ordering is based on at least one unique column or a combination of columns that are unique. Columns with `null` values are not supported.  - Query expressions in \"order by\" clauses are supported only if they are aliased and added to the \"select\" clause as well."
msgstr ""

# File: docs/8.x/pagination.md, line: 156
# File: docs/9.x/pagination.md, line: 156
# File: docs/master/pagination.md, line: 156
#. type: Plain text
#, no-wrap
msgid "<a name=\"manually-creating-a-paginator\"></a>\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 156
# File: docs/9.x/pagination.md, line: 156
# File: docs/master/pagination.md, line: 156
#. type: Title ###
#, no-wrap
msgid "Manually Creating A Paginator"
msgstr ""

# File: docs/8.x/pagination.md, line: 159
# File: docs/9.x/pagination.md, line: 159
# File: docs/master/pagination.md, line: 159
#. type: Plain text
msgid "Sometimes you may wish to create a pagination instance manually, passing it an array of items that you already have in memory. You may do so by creating either an `Illuminate\\Pagination\\Paginator`, `Illuminate\\Pagination\\LengthAwarePaginator` or `Illuminate\\Pagination\\CursorPaginator` instance, depending on your needs."
msgstr ""

# File: docs/8.x/pagination.md, line: 161
# File: docs/9.x/pagination.md, line: 161
# File: docs/master/pagination.md, line: 161
#. type: Plain text
msgid "The `Paginator` and `CursorPaginator` classes do not need to know the total number of items in the result set; however, because of this, these classes do not have methods for retrieving the index of the last page. The `LengthAwarePaginator` accepts almost the same arguments as the `Paginator`; however, it requires a count of the total number of items in the result set."
msgstr ""

# File: docs/8.x/pagination.md, line: 163
# File: docs/9.x/pagination.md, line: 163
# File: docs/master/pagination.md, line: 163
#. type: Plain text
msgid "In other words, the `Paginator` corresponds to the `simplePaginate` method on the query builder, the `CursorPaginator` corresponds to the `cursorPaginate` method, and the `LengthAwarePaginator` corresponds to the `paginate` method."
msgstr ""

# File: docs/8.x/pagination.md, line: 165
# File: docs/9.x/pagination.md, line: 165
# File: docs/master/pagination.md, line: 165
#. type: Plain text
#, no-wrap
msgid "> {note} When manually creating a paginator instance, you should manually \"slice\" the array of results you pass to the paginator. If you're unsure how to do this, check out the [array_slice](https://secure.php.net/manual/en/function.array-slice.php) PHP function.\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 167
# File: docs/9.x/pagination.md, line: 167
# File: docs/master/pagination.md, line: 167
#. type: Plain text
#, no-wrap
msgid "<a name=\"customizing-pagination-urls\"></a>\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 167
# File: docs/9.x/pagination.md, line: 167
# File: docs/master/pagination.md, line: 167
#. type: Title ###
#, no-wrap
msgid "Customizing Pagination URLs"
msgstr ""

# File: docs/8.x/pagination.md, line: 170
# File: docs/9.x/pagination.md, line: 170
# File: docs/master/pagination.md, line: 170
#. type: Plain text
msgid "By default, links generated by the paginator will match the current request's URI. However, the paginator's `withPath` method allows you to customize the URI used by the paginator when generating links. For example, if you want the paginator to generate links like `http://example.com/admin/users?page=N`, you should pass `/admin/users` to the `withPath` method:"
msgstr ""

# File: docs/8.x/pagination.md, line: 175
# File: docs/8.x/pagination.md, line: 190
# File: docs/9.x/pagination.md, line: 175
# File: docs/9.x/pagination.md, line: 190
# File: docs/master/pagination.md, line: 175
# File: docs/master/pagination.md, line: 190
#. type: Plain text
#, no-wrap
msgid "    Route::get('/users', function () {\n"
"        $users = User::paginate(15);\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 177
# File: docs/9.x/pagination.md, line: 177
# File: docs/master/pagination.md, line: 177
#. type: Plain text
#, no-wrap
msgid "        $users->withPath('/admin/users');\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 180
# File: docs/8.x/pagination.md, line: 195
# File: docs/9.x/pagination.md, line: 180
# File: docs/9.x/pagination.md, line: 195
# File: docs/master/pagination.md, line: 180
# File: docs/master/pagination.md, line: 195
#. type: Plain text
#, no-wrap
msgid "        //\n"
"    });\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 182
# File: docs/9.x/pagination.md, line: 182
# File: docs/master/pagination.md, line: 182
#. type: Plain text
#, no-wrap
msgid "<a name=\"appending-query-string-values\"></a>\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 182
# File: docs/9.x/pagination.md, line: 182
# File: docs/master/pagination.md, line: 182
#. type: Title ####
#, no-wrap
msgid "Appending Query String Values"
msgstr ""

# File: docs/8.x/pagination.md, line: 185
# File: docs/9.x/pagination.md, line: 185
# File: docs/master/pagination.md, line: 185
#. type: Plain text
msgid "You may append to the query string of pagination links using the `appends` method. For example, to append `sort=votes` to each pagination link, you should make the following call to `appends`:"
msgstr ""

# File: docs/8.x/pagination.md, line: 192
# File: docs/9.x/pagination.md, line: 192
# File: docs/master/pagination.md, line: 192
#. type: Plain text
#, no-wrap
msgid "        $users->appends(['sort' => 'votes']);\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 197
# File: docs/9.x/pagination.md, line: 197
# File: docs/master/pagination.md, line: 197
#. type: Plain text
msgid "You may use the `withQueryString` method if you would like to append all of the current request's query string values to the pagination links:"
msgstr ""

# File: docs/8.x/pagination.md, line: 199
# File: docs/9.x/pagination.md, line: 199
# File: docs/master/pagination.md, line: 199
#. type: Plain text
#, no-wrap
msgid "    $users = User::paginate(15)->withQueryString();\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 201
# File: docs/9.x/pagination.md, line: 201
# File: docs/master/pagination.md, line: 201
#. type: Plain text
#, no-wrap
msgid "<a name=\"appending-hash-fragments\"></a>\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 201
# File: docs/9.x/pagination.md, line: 201
# File: docs/master/pagination.md, line: 201
#. type: Title ####
#, no-wrap
msgid "Appending Hash Fragments"
msgstr ""

# File: docs/8.x/pagination.md, line: 204
# File: docs/9.x/pagination.md, line: 204
# File: docs/master/pagination.md, line: 204
#. type: Plain text
msgid "If you need to append a \"hash fragment\" to URLs generated by the paginator, you may use the `fragment` method. For example, to append `#users` to the end of each pagination link, you should invoke the `fragment` method like so:"
msgstr ""

# File: docs/8.x/pagination.md, line: 206
# File: docs/9.x/pagination.md, line: 206
# File: docs/master/pagination.md, line: 206
#. type: Plain text
#, no-wrap
msgid "    $users = User::paginate(15)->fragment('users');\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 208
# File: docs/9.x/pagination.md, line: 208
# File: docs/master/pagination.md, line: 208
#. type: Plain text
#, no-wrap
msgid "<a name=\"displaying-pagination-results\"></a>\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 208
# File: docs/9.x/pagination.md, line: 208
# File: docs/master/pagination.md, line: 208
#. type: Title ##
#, no-wrap
msgid "Displaying Pagination Results"
msgstr ""

# File: docs/8.x/pagination.md, line: 211
# File: docs/9.x/pagination.md, line: 211
# File: docs/master/pagination.md, line: 211
#. type: Plain text
msgid "When calling the `paginate` method, you will receive an instance of `Illuminate\\Pagination\\LengthAwarePaginator`, while calling the `simplePaginate` method returns an instance of `Illuminate\\Pagination\\Paginator`. And, finally, calling the `cursorPaginate` method returns an instance of `Illuminate\\Pagination\\CursorPaginator`."
msgstr ""

# File: docs/8.x/pagination.md, line: 213
# File: docs/9.x/pagination.md, line: 213
# File: docs/master/pagination.md, line: 213
#. type: Plain text
msgid "These objects provide several methods that describe the result set. In addition to these helpers methods, the paginator instances are iterators and may be looped as an array. So, once you have retrieved the results, you may display the results and render the page links using [Blade](/docs/{{version}}/blade):"
msgstr ""

# File: docs/8.x/pagination.md, line: 214
#. type: Code fence info string
#, no-wrap
msgid "html"
msgstr ""

# File: docs/8.x/pagination.md, line: 214
# File: docs/9.x/pagination.md, line: 214
# File: docs/master/pagination.md, line: 214
#. type: Plain text
#, no-wrap
msgid "<div class=\"container\">\n"
"    @foreach ($users as $user)\n"
"        {{ $user->name }}\n"
"    @endforeach\n"
"</div>\n\n"
"{{ $users->links() }}\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 225
# File: docs/9.x/pagination.md, line: 225
# File: docs/master/pagination.md, line: 225
#. type: Plain text
msgid "The `links` method will render the links to the rest of the pages in the result set. Each of these links will already contain the proper `page` query string variable. Remember, the HTML generated by the `links` method is compatible with the [Tailwind CSS framework](https://tailwindcss.com)."
msgstr ""

# File: docs/8.x/pagination.md, line: 227
# File: docs/9.x/pagination.md, line: 227
# File: docs/master/pagination.md, line: 227
#. type: Plain text
#, no-wrap
msgid "<a name=\"adjusting-the-pagination-link-window\"></a>\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 227
# File: docs/9.x/pagination.md, line: 227
# File: docs/master/pagination.md, line: 227
#. type: Title ###
#, no-wrap
msgid "Adjusting The Pagination Link Window"
msgstr ""

# File: docs/8.x/pagination.md, line: 230
# File: docs/9.x/pagination.md, line: 230
# File: docs/master/pagination.md, line: 230
#. type: Plain text
msgid "When the paginator displays pagination links, the current page number is displayed as well as links for the three pages before and after the current page. Using the `onEachSide` method, you may control how many additional links are displayed on each side of the current page within the middle, sliding window of links generated by the paginator:"
msgstr ""

# File: docs/8.x/pagination.md, line: 232
#. type: Plain text
#, no-wrap
msgid "    {{ $users->onEachSide(5)->links() }}\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 234
# File: docs/9.x/pagination.md, line: 236
# File: docs/master/pagination.md, line: 236
#. type: Plain text
#, no-wrap
msgid "<a name=\"converting-results-to-json\"></a>\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 234
# File: docs/9.x/pagination.md, line: 236
# File: docs/master/pagination.md, line: 236
#. type: Title ###
#, no-wrap
msgid "Converting Results To JSON"
msgstr ""

# File: docs/8.x/pagination.md, line: 237
# File: docs/9.x/pagination.md, line: 239
# File: docs/master/pagination.md, line: 239
#. type: Plain text
msgid "The Laravel paginator classes implement the `Illuminate\\Contracts\\Support\\Jsonable` Interface contract and expose the `toJson` method, so it's very easy to convert your pagination results to JSON. You may also convert a paginator instance to JSON by returning it from a route or controller action:"
msgstr ""

# File: docs/8.x/pagination.md, line: 243
# File: docs/9.x/pagination.md, line: 245
# File: docs/master/pagination.md, line: 245
#. type: Plain text
#, no-wrap
msgid "    Route::get('/users', function () {\n"
"        return User::paginate();\n"
"    });\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 245
# File: docs/9.x/pagination.md, line: 247
# File: docs/master/pagination.md, line: 247
#. type: Plain text
msgid "The JSON from the paginator will include meta information such as `total`, `current_page`, `last_page`, and more. The result records are available via the `data` key in the JSON array. Here is an example of the JSON created by returning a paginator instance from a route:"
msgstr ""

# File: docs/8.x/pagination.md, line: 267
# File: docs/9.x/pagination.md, line: 269
# File: docs/master/pagination.md, line: 269
#. type: Plain text
#, no-wrap
msgid "    {\n"
"       \"total\": 50,\n"
"       \"per_page\": 15,\n"
"       \"current_page\": 1,\n"
"       \"last_page\": 4,\n"
"       \"first_page_url\": \"http://laravel.app?page=1\",\n"
"       \"last_page_url\": \"http://laravel.app?page=4\",\n"
"       \"next_page_url\": \"http://laravel.app?page=2\",\n"
"       \"prev_page_url\": null,\n"
"       \"path\": \"http://laravel.app\",\n"
"       \"from\": 1,\n"
"       \"to\": 15,\n"
"       \"data\":[\n"
"            {\n"
"                // Record...\n"
"            },\n"
"            {\n"
"                // Record...\n"
"            }\n"
"       ]\n"
"    }\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 269
# File: docs/9.x/pagination.md, line: 271
# File: docs/master/pagination.md, line: 271
#. type: Plain text
#, no-wrap
msgid "<a name=\"customizing-the-pagination-view\"></a>\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 269
# File: docs/9.x/pagination.md, line: 271
# File: docs/master/pagination.md, line: 271
#. type: Title ##
#, no-wrap
msgid "Customizing The Pagination View"
msgstr ""

# File: docs/8.x/pagination.md, line: 272
# File: docs/9.x/pagination.md, line: 274
# File: docs/master/pagination.md, line: 274
#. type: Plain text
msgid "By default, the views rendered to display the pagination links are compatible with the [Tailwind CSS](https://tailwindcss.com) framework. However, if you are not using Tailwind, you are free to define your own views to render these links. When calling the `links` method on a paginator instance, you may pass the view name as the first argument to the method:"
msgstr ""

# File: docs/8.x/pagination.md, line: 274
#. type: Plain text
#, no-wrap
msgid "    {{ $paginator->links('view.name') }}\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 277
#. type: Plain text
#, no-wrap
msgid "    // Passing additional data to the view...\n"
"    {{ $paginator->links('view.name', ['foo' => 'bar']) }}\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 279
# File: docs/9.x/pagination.md, line: 283
# File: docs/master/pagination.md, line: 283
#. type: Plain text
msgid "However, the easiest way to customize the pagination views is by exporting them to your `resources/views/vendor` directory using the `vendor:publish` command:"
msgstr ""

# File: docs/8.x/pagination.md, line: 281
#. type: Plain text
#, no-wrap
msgid "    php artisan vendor:publish --tag=laravel-pagination\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 283
# File: docs/9.x/pagination.md, line: 289
# File: docs/master/pagination.md, line: 289
#. type: Plain text
msgid "This command will place the views in your application's `resources/views/vendor/pagination` directory. The `tailwind.blade.php` file within this directory corresponds to the default pagination view. You may edit this file to modify the pagination HTML."
msgstr ""

# File: docs/8.x/pagination.md, line: 285
# File: docs/9.x/pagination.md, line: 291
# File: docs/master/pagination.md, line: 291
#. type: Plain text
msgid "If you would like to designate a different file as the default pagination view, you may invoke the paginator's `defaultView` and `defaultSimpleView` methods within the `boot` method of your `App\\Providers\\AppServiceProvider` class:"
msgstr ""

# File: docs/8.x/pagination.md, line: 289
# File: docs/9.x/pagination.md, line: 295
# File: docs/master/pagination.md, line: 295
#. type: Plain text
#, no-wrap
msgid "    namespace App\\Providers;\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 293
# File: docs/9.x/pagination.md, line: 299
# File: docs/master/pagination.md, line: 299
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Pagination\\Paginator;\n"
"    use Illuminate\\Support\\Facades\\Blade;\n"
"    use Illuminate\\Support\\ServiceProvider;\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 304
# File: docs/9.x/pagination.md, line: 310
# File: docs/master/pagination.md, line: 310
#. type: Plain text
#, no-wrap
msgid "    class AppServiceProvider extends ServiceProvider\n"
"    {\n"
"        /**\n"
"         * Bootstrap any application services.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function boot()\n"
"        {\n"
"            Paginator::defaultView('view-name');\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 308
# File: docs/9.x/pagination.md, line: 314
# File: docs/master/pagination.md, line: 314
#. type: Plain text
#, no-wrap
msgid "            Paginator::defaultSimpleView('view-name');\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 310
# File: docs/9.x/pagination.md, line: 316
# File: docs/master/pagination.md, line: 316
#. type: Plain text
#, no-wrap
msgid "<a name=\"using-bootstrap\"></a>\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 310
# File: docs/9.x/pagination.md, line: 316
# File: docs/master/pagination.md, line: 316
#. type: Title ###
#, no-wrap
msgid "Using Bootstrap"
msgstr ""

# File: docs/8.x/pagination.md, line: 313
#. type: Plain text
msgid "Laravel includes pagination views built using [Bootstrap CSS](https://getbootstrap.com/). To use these views instead of the default Tailwind views, you may call the paginator's `useBootstrap` method within the `boot` method of your `App\\Providers\\AppServiceProvider` class:"
msgstr ""

# File: docs/8.x/pagination.md, line: 315
# File: docs/9.x/pagination.md, line: 321
# File: docs/master/pagination.md, line: 321
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Pagination\\Paginator;\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 325
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Bootstrap any application services.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function boot()\n"
"    {\n"
"        Paginator::useBootstrap();\n"
"    }\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 327
# File: docs/9.x/pagination.md, line: 334
# File: docs/master/pagination.md, line: 334
#. type: Plain text
#, no-wrap
msgid "<a name=\"paginator-instance-methods\"></a>\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 327
# File: docs/9.x/pagination.md, line: 334
# File: docs/master/pagination.md, line: 334
#. type: Title ##
#, no-wrap
msgid "Paginator / LengthAwarePaginator Instance Methods"
msgstr ""

# File: docs/8.x/pagination.md, line: 330
# File: docs/9.x/pagination.md, line: 337
# File: docs/master/pagination.md, line: 337
#. type: Plain text
msgid "Each paginator instance provides additional pagination information via the following methods:"
msgstr ""

# File: docs/8.x/pagination.md, line: 351
# File: docs/9.x/pagination.md, line: 358
# File: docs/master/pagination.md, line: 358
#. type: Plain text
#, no-wrap
msgid "Method  |  Description\n"
"-------  |  -----------\n"
"`$paginator->count()`  |  Get the number of items for the current page.\n"
"`$paginator->currentPage()`  |  Get the current page number.\n"
"`$paginator->firstItem()`  |  Get the result number of the first item in the results.\n"
"`$paginator->getOptions()`  |  Get the paginator options.\n"
"`$paginator->getUrlRange($start, $end)`  |  Create a range of pagination URLs.\n"
"`$paginator->hasPages()`  |  Determine if there are enough items to split into multiple pages.\n"
"`$paginator->hasMorePages()`  |  Determine if there are more items in the data store.\n"
"`$paginator->items()`  |  Get the items for the current page.\n"
"`$paginator->lastItem()`  |  Get the result number of the last item in the results.\n"
"`$paginator->lastPage()`  |  Get the page number of the last available page. (Not available when using `simplePaginate`).\n"
"`$paginator->nextPageUrl()`  |  Get the URL for the next page.\n"
"`$paginator->onFirstPage()`  |  Determine if the paginator is on the first page.\n"
"`$paginator->perPage()`  |  The number of items to be shown per page.\n"
"`$paginator->previousPageUrl()`  |  Get the URL for the previous page.\n"
"`$paginator->total()`  |  Determine the total number of matching items in the data store. (Not available when using `simplePaginate`).\n"
"`$paginator->url($page)`  |  Get the URL for a given page number.\n"
"`$paginator->getPageName()`  |  Get the query string variable used to store the page.\n"
"`$paginator->setPageName($name)`  |  Set the query string variable used to store the page.\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 353
# File: docs/9.x/pagination.md, line: 360
# File: docs/master/pagination.md, line: 360
#. type: Plain text
#, no-wrap
msgid "<a name=\"cursor-paginator-instance-methods\"></a>\n"
msgstr ""

# File: docs/8.x/pagination.md, line: 353
# File: docs/9.x/pagination.md, line: 360
# File: docs/master/pagination.md, line: 360
#. type: Title ##
#, no-wrap
msgid "Cursor Paginator Instance Methods"
msgstr ""

# File: docs/8.x/pagination.md, line: 356
# File: docs/9.x/pagination.md, line: 363
# File: docs/master/pagination.md, line: 363
#. type: Plain text
msgid "Each cursor paginator instance provides additional pagination information via the following methods:"
msgstr ""

# File: docs/8.x/pagination.md, line: 373
# File: docs/9.x/pagination.md, line: 380
# File: docs/master/pagination.md, line: 380
#. type: Plain text
#, no-wrap
msgid "Method  |  Description\n"
"-------  |  -----------\n"
"`$paginator->count()`  |  Get the number of items for the current page.\n"
"`$paginator->cursor()`  |  Get the current cursor instance.\n"
"`$paginator->getOptions()`  |  Get the paginator options.\n"
"`$paginator->hasPages()`  |  Determine if there are enough items to split into multiple pages.\n"
"`$paginator->hasMorePages()`  |  Determine if there are more items in the data store.\n"
"`$paginator->getCursorName()`  |  Get the query string variable used to store the cursor.\n"
"`$paginator->items()`  |  Get the items for the current page.\n"
"`$paginator->nextCursor()`  |  Get the cursor instance for the next set of items.\n"
"`$paginator->nextPageUrl()`  |  Get the URL for the next page.\n"
"`$paginator->onFirstPage()`  |  Determine if the paginator is on the first page.\n"
"`$paginator->perPage()`  |  The number of items to be shown per page.\n"
"`$paginator->previousCursor()`  |  Get the cursor instance for the previous set of items.\n"
"`$paginator->previousPageUrl()`  |  Get the URL for the previous page.\n"
"`$paginator->setCursorName()`  |  Set the query string variable used to store the cursor.\n"
"`$paginator->url($cursor)`  |  Get the URL for a given cursor instance.\n"
msgstr ""

# File: docs/9.x/pagination.md, line: 214
# File: docs/9.x/pagination.md, line: 231
# File: docs/9.x/pagination.md, line: 275
# File: docs/master/pagination.md, line: 214
# File: docs/master/pagination.md, line: 231
# File: docs/master/pagination.md, line: 275
#. type: Code fence info string
#, no-wrap
msgid "blade"
msgstr ""

# File: docs/9.x/pagination.md, line: 231
# File: docs/master/pagination.md, line: 231
#. type: Plain text
#, no-wrap
msgid "{{ $users->onEachSide(5)->links() }}\n"
msgstr ""

# File: docs/9.x/pagination.md, line: 275
# File: docs/master/pagination.md, line: 275
#. type: Plain text
#, no-wrap
msgid "{{ $paginator->links('view.name') }}\n\n"
"<!-- Passing additional data to the view... -->\n"
"{{ $paginator->links('view.name', ['foo' => 'bar']) }}\n"
msgstr ""

# File: docs/9.x/pagination.md, line: 284
# File: docs/master/pagination.md, line: 284
#. type: Code fence info string
#, no-wrap
msgid "shell"
msgstr ""

# File: docs/9.x/pagination.md, line: 284
# File: docs/master/pagination.md, line: 284
#. type: Plain text
#, no-wrap
msgid "php artisan vendor:publish --tag=laravel-pagination\n"
msgstr ""

# File: docs/9.x/pagination.md, line: 319
# File: docs/master/pagination.md, line: 319
#. type: Plain text
msgid "Laravel includes pagination views built using [Bootstrap CSS](https://getbootstrap.com/). To use these views instead of the default Tailwind views, you may call the paginator's `useBootstrapFour` or `useBootstrapFive` methods within the `boot` method of your `App\\Providers\\AppServiceProvider` class:"
msgstr ""

# File: docs/9.x/pagination.md, line: 332
# File: docs/master/pagination.md, line: 332
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Bootstrap any application services.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function boot()\n"
"    {\n"
"        Paginator::useBootstrapFive();\n"
"        Paginator::useBootstrapFour();\n"
"    }\n"
msgstr ""

