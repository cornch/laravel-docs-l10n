msgid ""
msgstr ""
"Project-Id-Version: laravel-docs\n"
"POT-Creation-Date: 2022-02-08 06:32+0000\n"
"PO-Revision-Date: 2022-02-08 06:38\n"
"Last-Translator: \n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2022-02-08 06:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: \n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2022-02-08 06:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: \n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/templates/eloquent-serialization.pot\n"
"X-Crowdin-File-ID: 59\n"

# File: docs/8.x/eloquent-serialization.md, line: 1
# File: docs/9.x/eloquent-serialization.md, line: 1
# File: docs/master/eloquent-serialization.md, line: 1
#. type: Title #
#, no-wrap
msgid "Eloquent: Serialization"
msgstr "Eloquent：序列化"

# File: docs/8.x/eloquent-serialization.md, line: 10
# File: docs/9.x/eloquent-serialization.md, line: 10
# File: docs/master/eloquent-serialization.md, line: 10
#. type: Bullet: '- '
msgid "[Introduction](#introduction)"
msgstr "[簡介](#introduction)"

# File: docs/8.x/eloquent-serialization.md, line: 10
# File: docs/9.x/eloquent-serialization.md, line: 10
# File: docs/master/eloquent-serialization.md, line: 10
#. type: Plain text
#, no-wrap
msgid "- [Serializing Models & Collections](#serializing-models-and-collections)\n"
"    - [Serializing To Arrays](#serializing-to-arrays)\n"
"    - [Serializing To JSON](#serializing-to-json)\n"
"- [Hiding Attributes From JSON](#hiding-attributes-from-json)\n"
"- [Appending Values To JSON](#appending-values-to-json)\n"
"- [Date Serialization](#date-serialization)\n"
msgstr "- [序列化 Model 與 Collection](#serializing-models-and-collections)\n"
"    - [序列化為陣列](#serializing-to-arrays)\n"
"    - [序列化為 JSON](#serializing-to-json)\n"
"- [從 JSON 中隱藏屬性](#hiding-attributes-from-json)\n"
"- [將值附加到 JSON](#appending-values-to-json)\n"
"- [日期的序列化](#date-serialization)\n"

# File: docs/8.x/eloquent-serialization.md, line: 12
# File: docs/9.x/eloquent-serialization.md, line: 12
# File: docs/master/eloquent-serialization.md, line: 12
#. type: Plain text
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr "<a name=\"introduction\"></a>\n"

# File: docs/8.x/eloquent-serialization.md, line: 12
# File: docs/9.x/eloquent-serialization.md, line: 12
# File: docs/master/eloquent-serialization.md, line: 12
#. type: Title ##
#, no-wrap
msgid "Introduction"
msgstr "簡介"

# File: docs/8.x/eloquent-serialization.md, line: 15
# File: docs/9.x/eloquent-serialization.md, line: 15
# File: docs/master/eloquent-serialization.md, line: 15
#. type: Plain text
msgid "When building APIs using Laravel, you will often need to convert your models and relationships to arrays or JSON. Eloquent includes convenient methods for making these conversions, as well as controlling which attributes are included in the serialized representation of your models."
msgstr "在使用 Laravel 製作 API 時，我們常常會需要將 Model 於關聯轉換為陣列或 JSON。Eloquent 中包含了一些用來進行這些轉換的方便方法，我們也能控制哪些屬性要被包含在 Model 序列化呈現中。"

# File: docs/8.x/eloquent-serialization.md, line: 17
# File: docs/9.x/eloquent-serialization.md, line: 17
# File: docs/master/eloquent-serialization.md, line: 17
#. type: Plain text
#, no-wrap
msgid "> {tip} For an even more robust way of handling Eloquent model and collection JSON serialization, check out the documentation on [Eloquent API resources](/docs/{{version}}/eloquent-resources).\n"
msgstr "> {tip} 若想瞭解有關控制 Eloquent Model 與 JSON 序列化更強健的方法，請參考 [Eloquent API 資源](/docs/{{version}}/eloquent-resources)說明文件。\n"

# File: docs/8.x/eloquent-serialization.md, line: 19
# File: docs/9.x/eloquent-serialization.md, line: 19
# File: docs/master/eloquent-serialization.md, line: 19
#. type: Plain text
#, no-wrap
msgid "<a name=\"serializing-models-and-collections\"></a>\n"
msgstr "<a name=\"serializing-models-and-collections\"></a>\n"

# File: docs/8.x/eloquent-serialization.md, line: 19
# File: docs/9.x/eloquent-serialization.md, line: 19
# File: docs/master/eloquent-serialization.md, line: 19
#. type: Title ##
#, no-wrap
msgid "Serializing Models & Collections"
msgstr "序列化 Model 與 Collection"

# File: docs/8.x/eloquent-serialization.md, line: 22
# File: docs/9.x/eloquent-serialization.md, line: 22
# File: docs/master/eloquent-serialization.md, line: 22
#. type: Plain text
#, no-wrap
msgid "<a name=\"serializing-to-arrays\"></a>\n"
msgstr "<a name=\"serializing-to-arrays\"></a>\n"

# File: docs/8.x/eloquent-serialization.md, line: 22
# File: docs/9.x/eloquent-serialization.md, line: 22
# File: docs/master/eloquent-serialization.md, line: 22
#. type: Title ###
#, no-wrap
msgid "Serializing To Arrays"
msgstr "序列化為陣列"

# File: docs/8.x/eloquent-serialization.md, line: 25
# File: docs/9.x/eloquent-serialization.md, line: 25
# File: docs/master/eloquent-serialization.md, line: 25
#. type: Plain text
msgid "To convert a model and its loaded [relationships](/docs/{{version}}/eloquent-relationships) to an array, you should use the `toArray` method. This method is recursive, so all attributes and all relations (including the relations of relations) will be converted to arrays:"
msgstr "若要將 Model 與其已載入的[關聯](/docs/{{version}}/eloquent-relationships)轉換為陣列，可使用 `toArray` 方法。該方法是遞歸的，因此所有的屬性與所有的關聯（還有關聯的關聯）都會被轉換為陣列："

# File: docs/8.x/eloquent-serialization.md, line: 27
# File: docs/8.x/eloquent-serialization.md, line: 50
# File: docs/9.x/eloquent-serialization.md, line: 27
# File: docs/9.x/eloquent-serialization.md, line: 50
# File: docs/master/eloquent-serialization.md, line: 27
# File: docs/master/eloquent-serialization.md, line: 50
#. type: Plain text
#, no-wrap
msgid "    use App\\Models\\User;\n"
msgstr "    use App\\Models\\User;\n"

# File: docs/8.x/eloquent-serialization.md, line: 29
# File: docs/9.x/eloquent-serialization.md, line: 29
# File: docs/master/eloquent-serialization.md, line: 29
#. type: Plain text
#, no-wrap
msgid "    $user = User::with('roles')->first();\n"
msgstr "    $user = User::with('roles')->first();\n"

# File: docs/8.x/eloquent-serialization.md, line: 31
# File: docs/9.x/eloquent-serialization.md, line: 31
# File: docs/master/eloquent-serialization.md, line: 31
#. type: Plain text
#, no-wrap
msgid "    return $user->toArray();\n"
msgstr "    return $user->toArray();\n"

# File: docs/8.x/eloquent-serialization.md, line: 33
# File: docs/9.x/eloquent-serialization.md, line: 33
# File: docs/master/eloquent-serialization.md, line: 33
#. type: Plain text
msgid "The `attributesToArray` method may be used to convert a model's attributes to an array but not its relationships:"
msgstr "`attributesToArray` 方法可用來將 Model 的屬性轉換為陣列，但不轉換關聯："

# File: docs/8.x/eloquent-serialization.md, line: 35
# File: docs/9.x/eloquent-serialization.md, line: 35
# File: docs/master/eloquent-serialization.md, line: 35
#. type: Plain text
#, no-wrap
msgid "    $user = User::first();\n"
msgstr "    $user = User::first();\n"

# File: docs/8.x/eloquent-serialization.md, line: 37
# File: docs/9.x/eloquent-serialization.md, line: 37
# File: docs/master/eloquent-serialization.md, line: 37
#. type: Plain text
#, no-wrap
msgid "    return $user->attributesToArray();\n"
msgstr "    return $user->attributesToArray();\n"

# File: docs/8.x/eloquent-serialization.md, line: 39
# File: docs/9.x/eloquent-serialization.md, line: 39
# File: docs/master/eloquent-serialization.md, line: 39
#. type: Plain text
msgid "You may also convert entire [collections](/docs/{{version}}/eloquent-collections) of models to arrays by calling the `toArray` method on the collection instance:"
msgstr "也可以使用 Collection 實體上的 `toArray` 方法來將整個包含 Model 的 [Collection](/docs/{{version}}/eloquent-collections) 都轉換為陣列："

# File: docs/8.x/eloquent-serialization.md, line: 41
# File: docs/9.x/eloquent-serialization.md, line: 41
# File: docs/master/eloquent-serialization.md, line: 41
#. type: Plain text
#, no-wrap
msgid "    $users = User::all();\n"
msgstr "    $users = User::all();\n"

# File: docs/8.x/eloquent-serialization.md, line: 43
# File: docs/9.x/eloquent-serialization.md, line: 43
# File: docs/master/eloquent-serialization.md, line: 43
#. type: Plain text
#, no-wrap
msgid "    return $users->toArray();\n"
msgstr "    return $users->toArray();\n"

# File: docs/8.x/eloquent-serialization.md, line: 45
# File: docs/9.x/eloquent-serialization.md, line: 45
# File: docs/master/eloquent-serialization.md, line: 45
#. type: Plain text
#, no-wrap
msgid "<a name=\"serializing-to-json\"></a>\n"
msgstr "<a name=\"serializing-to-json\"></a>\n"

# File: docs/8.x/eloquent-serialization.md, line: 45
# File: docs/9.x/eloquent-serialization.md, line: 45
# File: docs/master/eloquent-serialization.md, line: 45
#. type: Title ###
#, no-wrap
msgid "Serializing To JSON"
msgstr "序列化為 JSON"

# File: docs/8.x/eloquent-serialization.md, line: 48
# File: docs/9.x/eloquent-serialization.md, line: 48
# File: docs/master/eloquent-serialization.md, line: 48
#. type: Plain text
msgid "To convert a model to JSON, you should use the `toJson` method. Like `toArray`, the `toJson` method is recursive, so all attributes and relations will be converted to JSON. You may also specify any JSON encoding options that are [supported by PHP](https://secure.php.net/manual/en/function.json-encode.php):"
msgstr "若要將 Model 轉換為 JSON，請使用 `toJson` 方法。與 `toArray` 方法類似，`toJson` 方法是遞歸的，因此所有屬性與關聯都會被轉換為 JSON。我們還能指定任何 [PHP 支援的](https://secure.php.net/manual/en/function.json-encode.php)任何 JSON 編碼選項："

# File: docs/8.x/eloquent-serialization.md, line: 52
# File: docs/9.x/eloquent-serialization.md, line: 52
# File: docs/master/eloquent-serialization.md, line: 52
#. type: Plain text
#, no-wrap
msgid "    $user = User::find(1);\n"
msgstr "    $user = User::find(1);\n"

# File: docs/8.x/eloquent-serialization.md, line: 54
# File: docs/9.x/eloquent-serialization.md, line: 54
# File: docs/master/eloquent-serialization.md, line: 54
#. type: Plain text
#, no-wrap
msgid "    return $user->toJson();\n"
msgstr "    return $user->toJson();\n"

# File: docs/8.x/eloquent-serialization.md, line: 56
# File: docs/9.x/eloquent-serialization.md, line: 56
# File: docs/master/eloquent-serialization.md, line: 56
#. type: Plain text
#, no-wrap
msgid "    return $user->toJson(JSON_PRETTY_PRINT);\n"
msgstr "    return $user->toJson(JSON_PRETTY_PRINT);\n"

# File: docs/8.x/eloquent-serialization.md, line: 58
# File: docs/9.x/eloquent-serialization.md, line: 58
# File: docs/master/eloquent-serialization.md, line: 58
#. type: Plain text
msgid "Alternatively, you may cast a model or collection to a string, which will automatically call the `toJson` method on the model or collection:"
msgstr "或者，我們也可以將 Model 或 Collection 型別轉換成字串，這麼做會自動呼叫 Model 或 Collection 上的 `toJson` 方法："

# File: docs/8.x/eloquent-serialization.md, line: 60
# File: docs/9.x/eloquent-serialization.md, line: 60
# File: docs/master/eloquent-serialization.md, line: 60
#. type: Plain text
#, no-wrap
msgid "    return (string) User::find(1);\n"
msgstr "    return (string) User::find(1);\n"

# File: docs/8.x/eloquent-serialization.md, line: 62
# File: docs/9.x/eloquent-serialization.md, line: 62
# File: docs/master/eloquent-serialization.md, line: 62
#. type: Plain text
msgid "Since models and collections are converted to JSON when cast to a string, you can return Eloquent objects directly from your application's routes or controllers. Laravel will automatically serialize your Eloquent models and collections to JSON when they are returned from routes or controllers:"
msgstr "由於 Model 與 Collection 在轉換為字串時會被轉換成 JSON，因此，我們可以直接在路由或 Controller 內回傳 Eloquent 物件。當這些 Eloquent Model 與 Collection 被從路由或 Controller 回傳時，Laravel 會自動將他們序列化成 JSON："

# File: docs/8.x/eloquent-serialization.md, line: 66
# File: docs/9.x/eloquent-serialization.md, line: 66
# File: docs/master/eloquent-serialization.md, line: 66
#. type: Plain text
#, no-wrap
msgid "    Route::get('users', function () {\n"
"        return User::all();\n"
"    });\n"
msgstr "    Route::get('users', function () {\n"
"        return User::all();\n"
"    });\n"

# File: docs/8.x/eloquent-serialization.md, line: 68
# File: docs/9.x/eloquent-serialization.md, line: 68
# File: docs/master/eloquent-serialization.md, line: 68
#. type: Plain text
#, no-wrap
msgid "<a name=\"relationships\"></a>\n"
msgstr "<a name=\"relationships\"></a>\n"

# File: docs/8.x/eloquent-serialization.md, line: 68
# File: docs/9.x/eloquent-serialization.md, line: 68
# File: docs/master/eloquent-serialization.md, line: 68
#. type: Title ####
#, no-wrap
msgid "Relationships"
msgstr "關聯"

# File: docs/8.x/eloquent-serialization.md, line: 71
# File: docs/9.x/eloquent-serialization.md, line: 71
# File: docs/master/eloquent-serialization.md, line: 71
#. type: Plain text
msgid "When an Eloquent model is converted to JSON, its loaded relationships will automatically be included as attributes on the JSON object. Also, though Eloquent relationship methods are defined using \"camel case\" method names, a relationship's JSON attribute will be \"snake case\"."
msgstr "當 Eloquent Model 被轉換為 JSON 時，Eloquent 會自動將所有已載入的關聯以屬性的方式包含在 JSON 內。此外，雖然 Eloquent 屬性是使用「駝峰命名法 (camelCase)」作為方法名稱定義的，但關聯的 JSON 屬性會是「蛇形命名法 (snake_case)」。"

# File: docs/8.x/eloquent-serialization.md, line: 73
# File: docs/9.x/eloquent-serialization.md, line: 73
# File: docs/master/eloquent-serialization.md, line: 73
#. type: Plain text
#, no-wrap
msgid "<a name=\"hiding-attributes-from-json\"></a>\n"
msgstr "<a name=\"hiding-attributes-from-json\"></a>\n"

# File: docs/8.x/eloquent-serialization.md, line: 73
# File: docs/9.x/eloquent-serialization.md, line: 73
# File: docs/master/eloquent-serialization.md, line: 73
#. type: Title ##
#, no-wrap
msgid "Hiding Attributes From JSON"
msgstr "從 JSON 中隱藏屬性"

# File: docs/8.x/eloquent-serialization.md, line: 76
# File: docs/9.x/eloquent-serialization.md, line: 76
# File: docs/master/eloquent-serialization.md, line: 76
#. type: Plain text
msgid "Sometimes you may wish to limit the attributes, such as passwords, that are included in your model's array or JSON representation. To do so, add a `$hidden` property to your model. In attributes that are listed in the `$hidden` property's array will not be included in the serialized representation of your model:"
msgstr "有時候，我們可能會讓如密碼等屬性不要被包含在 Model 的陣列或 JSON 呈現上。為此，請在 Model 中加上一個 `$hidden` 屬性。列在 `$hidden` 屬性陣列中的屬性將不會被包含在 Model 的序列化呈現中："

# File: docs/8.x/eloquent-serialization.md, line: 78
# File: docs/8.x/eloquent-serialization.md, line: 98
# File: docs/8.x/eloquent-serialization.md, line: 130
# File: docs/8.x/eloquent-serialization.md, line: 151
# File: docs/9.x/eloquent-serialization.md, line: 78
# File: docs/9.x/eloquent-serialization.md, line: 98
# File: docs/9.x/eloquent-serialization.md, line: 130
# File: docs/9.x/eloquent-serialization.md, line: 154
# File: docs/master/eloquent-serialization.md, line: 78
# File: docs/master/eloquent-serialization.md, line: 98
# File: docs/master/eloquent-serialization.md, line: 130
# File: docs/master/eloquent-serialization.md, line: 154
#. type: Plain text
#, no-wrap
msgid "    <?php\n"
msgstr "    <?php\n"

# File: docs/8.x/eloquent-serialization.md, line: 80
# File: docs/8.x/eloquent-serialization.md, line: 100
# File: docs/8.x/eloquent-serialization.md, line: 132
# File: docs/8.x/eloquent-serialization.md, line: 153
# File: docs/9.x/eloquent-serialization.md, line: 80
# File: docs/9.x/eloquent-serialization.md, line: 100
# File: docs/9.x/eloquent-serialization.md, line: 132
# File: docs/9.x/eloquent-serialization.md, line: 156
# File: docs/master/eloquent-serialization.md, line: 80
# File: docs/master/eloquent-serialization.md, line: 100
# File: docs/master/eloquent-serialization.md, line: 132
# File: docs/master/eloquent-serialization.md, line: 156
#. type: Plain text
#, no-wrap
msgid "    namespace App\\Models;\n"
msgstr "    namespace App\\Models;\n"

# File: docs/8.x/eloquent-serialization.md, line: 82
# File: docs/8.x/eloquent-serialization.md, line: 102
# File: docs/8.x/eloquent-serialization.md, line: 134
# File: docs/8.x/eloquent-serialization.md, line: 155
# File: docs/9.x/eloquent-serialization.md, line: 82
# File: docs/9.x/eloquent-serialization.md, line: 102
# File: docs/9.x/eloquent-serialization.md, line: 158
# File: docs/master/eloquent-serialization.md, line: 82
# File: docs/master/eloquent-serialization.md, line: 102
# File: docs/master/eloquent-serialization.md, line: 158
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Database\\Eloquent\\Model;\n"
msgstr "    use Illuminate\\Database\\Eloquent\\Model;\n"

# File: docs/8.x/eloquent-serialization.md, line: 92
# File: docs/9.x/eloquent-serialization.md, line: 92
# File: docs/master/eloquent-serialization.md, line: 92
#. type: Plain text
#, no-wrap
msgid "    class User extends Model\n"
"    {\n"
"        /**\n"
"         * The attributes that should be hidden for arrays.\n"
"         *\n"
"         * @var array\n"
"         */\n"
"        protected $hidden = ['password'];\n"
"    }\n"
msgstr "    class User extends Model\n"
"    {\n"
"        /**\n"
"         * The attributes that should be hidden for arrays.\n"
"         *\n"
"         * @var array\n"
"         */\n"
"        protected $hidden = ['password'];\n"
"    }\n"

# File: docs/8.x/eloquent-serialization.md, line: 94
# File: docs/9.x/eloquent-serialization.md, line: 94
# File: docs/master/eloquent-serialization.md, line: 94
#. type: Plain text
#, no-wrap
msgid "> {tip} To hide relationships, add the relationship's method name to your Eloquent model's `$hidden` property.\n"
msgstr "> {tip} 若要隱藏關聯，請將關聯的方法名稱加到 Eloquent Model 的 `$hidden` 屬性內。\n"

# File: docs/8.x/eloquent-serialization.md, line: 96
# File: docs/9.x/eloquent-serialization.md, line: 96
# File: docs/master/eloquent-serialization.md, line: 96
#. type: Plain text
msgid "Alternatively, you may use the `visible` property to define an \"allow list\" of attributes that should be included in your model's array and JSON representation. All attributes that are not present in the `$visible` array will be hidden when the model is converted to an array or JSON:"
msgstr "或者，我們也可以使用 `visible` 屬性來定義一個「允許列表」，代表要被包含在 Model 之陣列與 JSON 呈現的屬性。當 Model 被轉換為陣列或 JSON 時，所有不在 `$visible` 陣列內的屬性都會被隱藏："

# File: docs/8.x/eloquent-serialization.md, line: 112
# File: docs/9.x/eloquent-serialization.md, line: 112
# File: docs/master/eloquent-serialization.md, line: 112
#. type: Plain text
#, no-wrap
msgid "    class User extends Model\n"
"    {\n"
"        /**\n"
"         * The attributes that should be visible in arrays.\n"
"         *\n"
"         * @var array\n"
"         */\n"
"        protected $visible = ['first_name', 'last_name'];\n"
"    }\n"
msgstr "    class User extends Model\n"
"    {\n"
"        /**\n"
"         * The attributes that should be visible in arrays.\n"
"         *\n"
"         * @var array\n"
"         */\n"
"        protected $visible = ['first_name', 'last_name'];\n"
"    }\n"

# File: docs/8.x/eloquent-serialization.md, line: 114
# File: docs/9.x/eloquent-serialization.md, line: 114
# File: docs/master/eloquent-serialization.md, line: 114
#. type: Plain text
#, no-wrap
msgid "<a name=\"temporarily-modifying-attribute-visibility\"></a>\n"
msgstr "<a name=\"temporarily-modifying-attribute-visibility\"></a>\n"

# File: docs/8.x/eloquent-serialization.md, line: 114
# File: docs/9.x/eloquent-serialization.md, line: 114
# File: docs/master/eloquent-serialization.md, line: 114
#. type: Title ####
#, no-wrap
msgid "Temporarily Modifying Attribute Visibility"
msgstr "暫時修改屬性的能見度"

# File: docs/8.x/eloquent-serialization.md, line: 117
# File: docs/9.x/eloquent-serialization.md, line: 117
# File: docs/master/eloquent-serialization.md, line: 117
#. type: Plain text
msgid "If you would like to make some typically hidden attributes visible on a given model instance, you may use the `makeVisible` method. The `makeVisible` method returns the model instance:"
msgstr "對於某個 Model 實體，若我們想讓一些平常都是隱藏的屬性顯示出來，可以使用 `makeVisible` 方法。`makeVisible` 方法會回傳 Model 的實體："

# File: docs/8.x/eloquent-serialization.md, line: 119
# File: docs/9.x/eloquent-serialization.md, line: 119
# File: docs/master/eloquent-serialization.md, line: 119
#. type: Plain text
#, no-wrap
msgid "    return $user->makeVisible('attribute')->toArray();\n"
msgstr "    return $user->makeVisible('attribute')->toArray();\n"

# File: docs/8.x/eloquent-serialization.md, line: 121
# File: docs/9.x/eloquent-serialization.md, line: 121
# File: docs/master/eloquent-serialization.md, line: 121
#. type: Plain text
msgid "Likewise, if you would like to hide some attributes that are typically visible, you may use the `makeHidden` method."
msgstr "同樣的，若想隱藏一些平常顯示的屬性，可以使用 `makeHidden` 方法。"

# File: docs/8.x/eloquent-serialization.md, line: 123
# File: docs/9.x/eloquent-serialization.md, line: 123
# File: docs/master/eloquent-serialization.md, line: 123
#. type: Plain text
#, no-wrap
msgid "    return $user->makeHidden('attribute')->toArray();\n"
msgstr "    return $user->makeHidden('attribute')->toArray();\n"

# File: docs/8.x/eloquent-serialization.md, line: 125
# File: docs/9.x/eloquent-serialization.md, line: 125
# File: docs/master/eloquent-serialization.md, line: 125
#. type: Plain text
#, no-wrap
msgid "<a name=\"appending-values-to-json\"></a>\n"
msgstr "<a name=\"appending-values-to-json\"></a>\n"

# File: docs/8.x/eloquent-serialization.md, line: 125
# File: docs/9.x/eloquent-serialization.md, line: 125
# File: docs/master/eloquent-serialization.md, line: 125
#. type: Title ##
#, no-wrap
msgid "Appending Values To JSON"
msgstr "將值附加到 JSON"

# File: docs/8.x/eloquent-serialization.md, line: 128
# File: docs/9.x/eloquent-serialization.md, line: 128
# File: docs/master/eloquent-serialization.md, line: 128
#. type: Plain text
msgid "Occasionally, when converting models to arrays or JSON, you may wish to add attributes that do not have a corresponding column in your database. To do so, first define an [accessor](/docs/{{version}}/eloquent-mutators) for the value:"
msgstr "有時候，在將 Model 轉換為陣列或 JSON 時，我們可能會想新增一些資料庫中沒有對應欄位的屬性。為此，請先為該值定義一個 [Accessor](/docs/{{version}}/eloquent-mutators)："

# File: docs/8.x/eloquent-serialization.md, line: 147
#. type: Plain text
#, no-wrap
msgid "    class User extends Model\n"
"    {\n"
"        /**\n"
"         * Determine if the user is an administrator.\n"
"         *\n"
"         * @return bool\n"
"         */\n"
"        public function getIsAdminAttribute()\n"
"        {\n"
"            return $this->attributes['admin'] === 'yes';\n"
"        }\n"
"    }\n"
msgstr "    class User extends Model\n"
"    {\n"
"        /**\n"
"         * Determine if the user is an administrator.\n"
"         *\n"
"         * @return bool\n"
"         */\n"
"        public function getIsAdminAttribute()\n"
"        {\n"
"            return $this->attributes['admin'] === 'yes';\n"
"        }\n"
"    }\n"

# File: docs/8.x/eloquent-serialization.md, line: 149
# File: docs/9.x/eloquent-serialization.md, line: 152
# File: docs/master/eloquent-serialization.md, line: 152
#. type: Plain text
msgid "After creating the accessor, add the attribute name to the `appends` property of your model. Note that attribute names are typically referenced using their \"snake case\" serialized representation, even though the accessor's PHP method is defined using \"camel case\":"
msgstr "建立好 Accessor 後，請將屬性名稱加到 Model 中的 `appends` 屬性。請注意，屬性名稱一般在序列化呈現中都使用「蛇形命名法 (snake_case)」，但 Accessor 的 PHP 方法是使用「駝峰命名法 (camelCase)」定義的："

# File: docs/8.x/eloquent-serialization.md, line: 165
# File: docs/9.x/eloquent-serialization.md, line: 168
# File: docs/master/eloquent-serialization.md, line: 168
#. type: Plain text
#, no-wrap
msgid "    class User extends Model\n"
"    {\n"
"        /**\n"
"         * The accessors to append to the model's array form.\n"
"         *\n"
"         * @var array\n"
"         */\n"
"        protected $appends = ['is_admin'];\n"
"    }\n"
msgstr "    class User extends Model\n"
"    {\n"
"        /**\n"
"         * The accessors to append to the model's array form.\n"
"         *\n"
"         * @var array\n"
"         */\n"
"        protected $appends = ['is_admin'];\n"
"    }\n"

# File: docs/8.x/eloquent-serialization.md, line: 167
# File: docs/9.x/eloquent-serialization.md, line: 170
# File: docs/master/eloquent-serialization.md, line: 170
#. type: Plain text
msgid "Once the attribute has been added to the `appends` list, it will be included in both the model's array and JSON representations. Attributes in the `appends` array will also respect the `visible` and `hidden` settings configured on the model."
msgstr "將屬性加到 `appends` 列表後，該屬性就會被加到 Model 的陣列與 JSON 呈現中。在 `appends` 陣列中的屬性也會尊重 Model 上的 `visible` 與 `hidden` 設定。"

# File: docs/8.x/eloquent-serialization.md, line: 169
# File: docs/9.x/eloquent-serialization.md, line: 172
# File: docs/master/eloquent-serialization.md, line: 172
#. type: Plain text
#, no-wrap
msgid "<a name=\"appending-at-run-time\"></a>\n"
msgstr "<a name=\"appending-at-run-time\"></a>\n"

# File: docs/8.x/eloquent-serialization.md, line: 169
# File: docs/9.x/eloquent-serialization.md, line: 172
# File: docs/master/eloquent-serialization.md, line: 172
#. type: Title ####
#, no-wrap
msgid "Appending At Run Time"
msgstr "在執行階段附加"

# File: docs/8.x/eloquent-serialization.md, line: 172
# File: docs/9.x/eloquent-serialization.md, line: 175
# File: docs/master/eloquent-serialization.md, line: 175
#. type: Plain text
msgid "At runtime, you may instruct a model instance to append additional attributes using the `append` method. Or, you may use the `setAppends` method to override the entire array of appended properties for a given model instance:"
msgstr "在執行階段時，我們可以使用 `append` 方法來讓 Model 實體附加額外的屬性。或者，我們也可以使用 `setAppends` 方法來複寫給定 Model 實體上的整個附加屬性陣列："

# File: docs/8.x/eloquent-serialization.md, line: 174
# File: docs/9.x/eloquent-serialization.md, line: 177
# File: docs/master/eloquent-serialization.md, line: 177
#. type: Plain text
#, no-wrap
msgid "    return $user->append('is_admin')->toArray();\n"
msgstr "    return $user->append('is_admin')->toArray();\n"

# File: docs/8.x/eloquent-serialization.md, line: 176
# File: docs/9.x/eloquent-serialization.md, line: 179
# File: docs/master/eloquent-serialization.md, line: 179
#. type: Plain text
#, no-wrap
msgid "    return $user->setAppends(['is_admin'])->toArray();\n"
msgstr "    return $user->setAppends(['is_admin'])->toArray();\n"

# File: docs/8.x/eloquent-serialization.md, line: 178
# File: docs/9.x/eloquent-serialization.md, line: 181
# File: docs/master/eloquent-serialization.md, line: 181
#. type: Plain text
#, no-wrap
msgid "<a name=\"date-serialization\"></a>\n"
msgstr "<a name=\"date-serialization\"></a>\n"

# File: docs/8.x/eloquent-serialization.md, line: 178
# File: docs/9.x/eloquent-serialization.md, line: 181
# File: docs/master/eloquent-serialization.md, line: 181
#. type: Title ##
#, no-wrap
msgid "Date Serialization"
msgstr "日期的序列化"

# File: docs/8.x/eloquent-serialization.md, line: 181
# File: docs/9.x/eloquent-serialization.md, line: 184
# File: docs/master/eloquent-serialization.md, line: 184
#. type: Plain text
#, no-wrap
msgid "<a name=\"customizing-the-default-date-format\"></a>\n"
msgstr "<a name=\"customizing-the-default-date-format\"></a>\n"

# File: docs/8.x/eloquent-serialization.md, line: 181
# File: docs/9.x/eloquent-serialization.md, line: 184
# File: docs/master/eloquent-serialization.md, line: 184
#. type: Title ####
#, no-wrap
msgid "Customizing The Default Date Format"
msgstr "自訂預設的日期格式"

# File: docs/8.x/eloquent-serialization.md, line: 184
# File: docs/9.x/eloquent-serialization.md, line: 187
# File: docs/master/eloquent-serialization.md, line: 187
#. type: Plain text
msgid "You may customize the default serialization format by overriding the `serializeDate` method. This method does not affect how your dates are formatted for storage in the database:"
msgstr "複寫 `serializeDate` 方法即可定義預設的序列化方法。該方法並不會影響日期儲存到資料庫時的格式化方法："

# File: docs/8.x/eloquent-serialization.md, line: 195
# File: docs/9.x/eloquent-serialization.md, line: 198
# File: docs/master/eloquent-serialization.md, line: 198
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Prepare a date for array / JSON serialization.\n"
"     *\n"
"     * @param  \\DateTimeInterface  $date\n"
"     * @return string\n"
"     */\n"
"    protected function serializeDate(DateTimeInterface $date)\n"
"    {\n"
"        return $date->format('Y-m-d');\n"
"    }\n"
msgstr "    /**\n"
"     * Prepare a date for array / JSON serialization.\n"
"     *\n"
"     * @param  \\DateTimeInterface  $date\n"
"     * @return string\n"
"     */\n"
"    protected function serializeDate(DateTimeInterface $date)\n"
"    {\n"
"        return $date->format('Y-m-d');\n"
"    }\n"

# File: docs/8.x/eloquent-serialization.md, line: 197
# File: docs/9.x/eloquent-serialization.md, line: 200
# File: docs/master/eloquent-serialization.md, line: 200
#. type: Plain text
#, no-wrap
msgid "<a name=\"customizing-the-date-format-per-attribute\"></a>\n"
msgstr "<a name=\"customizing-the-date-format-per-attribute\"></a>\n"

# File: docs/8.x/eloquent-serialization.md, line: 197
# File: docs/9.x/eloquent-serialization.md, line: 200
# File: docs/master/eloquent-serialization.md, line: 200
#. type: Title ####
#, no-wrap
msgid "Customizing The Date Format Per Attribute"
msgstr "為個別屬性自訂日期格式"

# File: docs/8.x/eloquent-serialization.md, line: 200
# File: docs/9.x/eloquent-serialization.md, line: 203
# File: docs/master/eloquent-serialization.md, line: 203
#. type: Plain text
msgid "You may customize the serialization format of individual Eloquent date attributes by specifying the date format in the model's [cast declarations](/docs/{{version}}/eloquent-mutators#attribute-casting):"
msgstr "可以在 Model 的[型別轉換宣告](/docs/{{version}}/eloquent-mutators#attribute-casting)中指定日期格式，來為個別 Eloquent 日期屬性自訂序列化格式："

# File: docs/8.x/eloquent-serialization.md, line: 204
# File: docs/9.x/eloquent-serialization.md, line: 207
# File: docs/master/eloquent-serialization.md, line: 207
#. type: Plain text
#, no-wrap
msgid "    protected $casts = [\n"
"        'birthday' => 'date:Y-m-d',\n"
"        'joined_at' => 'datetime:Y-m-d H:00',\n"
"    ];\n"
msgstr "    protected $casts = [\n"
"        'birthday' => 'date:Y-m-d',\n"
"        'joined_at' => 'datetime:Y-m-d H:00',\n"
"    ];\n"

# File: docs/9.x/eloquent-serialization.md, line: 135
# File: docs/master/eloquent-serialization.md, line: 135
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Database\\Eloquent\\Casts\\Attribute;\n"
"    use Illuminate\\Database\\Eloquent\\Model;\n"
msgstr "    use Illuminate\\Database\\Eloquent\\Casts\\Attribute;\n"
"    use Illuminate\\Database\\Eloquent\\Model;\n"

# File: docs/9.x/eloquent-serialization.md, line: 150
# File: docs/master/eloquent-serialization.md, line: 150
#. type: Plain text
#, no-wrap
msgid "    class User extends Model\n"
"    {\n"
"        /**\n"
"         * Determine if the user is an administrator.\n"
"         *\n"
"         * @return \\Illuminate\\Database\\Eloquent\\Casts\\Attribute\n"
"         */\n"
"        protected function isAdmin(): Attribute\n"
"        {\n"
"            return new Attribute(\n"
"                get: fn () => 'yes';\n"
"            );\n"
"        }\n"
"    }\n"
msgstr "    class User extends Model\n"
"    {\n"
"        /**\n"
"         * Determine if the user is an administrator.\n"
"         *\n"
"         * @return \\Illuminate\\Database\\Eloquent\\Casts\\Attribute\n"
"         */\n"
"        protected function isAdmin(): Attribute\n"
"        {\n"
"            return new Attribute(\n"
"                get: fn () => 'yes';\n"
"            );\n"
"        }\n"
"    }\n"

