msgid ""
msgstr ""
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/templates/vite.pot\n"
"X-Crowdin-File-ID: 180\n"
"Project-Id-Version: laravel-docs\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"PO-Revision-Date: 2024-11-30 05:58\n"

#: ./docs/9.x/vite.md:1
#: ./docs/10.x/vite.md:1
#: ./docs/11.x/vite.md:1
#: ./docs/master/vite.md:1
msgid "Asset Bundling (Vite)"
msgstr ""

#: ./docs/9.x/vite.md:3
#: ./docs/10.x/vite.md:3
#: ./docs/11.x/vite.md:3
#: ./docs/master/vite.md:3
msgid "[Introduction](#introduction)"
msgstr ""

#: ./docs/9.x/vite.md:4
#: ./docs/10.x/vite.md:4
#: ./docs/11.x/vite.md:4
#: ./docs/master/vite.md:4
msgid "[Installation & Setup](#installation)"
msgstr ""

#: ./docs/9.x/vite.md:5
#: ./docs/10.x/vite.md:5
#: ./docs/11.x/vite.md:5
#: ./docs/master/vite.md:5
msgid "[Installing Node](#installing-node)"
msgstr ""

#: ./docs/10.x/vite.md:6
#: ./docs/11.x/vite.md:6
#: ./docs/master/vite.md:6
msgid "[Installing Vite and the Laravel Plugin](#installing-vite-and-laravel-plugin)"
msgstr ""

#: ./docs/9.x/vite.md:6
msgid "[Installing Vite And The Laravel Plugin](#installing-vite-and-laravel-plugin)"
msgstr ""

#: ./docs/9.x/vite.md:7
#: ./docs/10.x/vite.md:7
#: ./docs/11.x/vite.md:7
#: ./docs/master/vite.md:7
msgid "[Configuring Vite](#configuring-vite)"
msgstr ""

#: ./docs/10.x/vite.md:8
#: ./docs/11.x/vite.md:8
#: ./docs/master/vite.md:8
msgid "[Loading Your Scripts and Styles](#loading-your-scripts-and-styles)"
msgstr ""

#: ./docs/9.x/vite.md:8
msgid "[Loading Your Scripts And Styles](#loading-your-scripts-and-styles)"
msgstr ""

#: ./docs/9.x/vite.md:9
#: ./docs/10.x/vite.md:9
#: ./docs/11.x/vite.md:9
#: ./docs/master/vite.md:9
msgid "[Running Vite](#running-vite)"
msgstr ""

#: ./docs/9.x/vite.md:10
#: ./docs/10.x/vite.md:10
#: ./docs/11.x/vite.md:10
#: ./docs/master/vite.md:10
msgid "[Working With JavaScript](#working-with-scripts)"
msgstr ""

#: ./docs/9.x/vite.md:11
#: ./docs/10.x/vite.md:11
#: ./docs/11.x/vite.md:11
#: ./docs/master/vite.md:11
msgid "[Aliases](#aliases)"
msgstr ""

#: ./docs/9.x/vite.md:12
#: ./docs/10.x/vite.md:12
#: ./docs/11.x/vite.md:12
#: ./docs/master/vite.md:12
msgid "[Vue](#vue)"
msgstr ""

#: ./docs/9.x/vite.md:13
#: ./docs/10.x/vite.md:13
#: ./docs/11.x/vite.md:13
#: ./docs/master/vite.md:13
msgid "[React](#react)"
msgstr ""

#: ./docs/9.x/vite.md:14
#: ./docs/10.x/vite.md:14
#: ./docs/11.x/vite.md:14
#: ./docs/master/vite.md:14
msgid "[Inertia](#inertia)"
msgstr ""

#: ./docs/9.x/vite.md:15
#: ./docs/10.x/vite.md:15
#: ./docs/11.x/vite.md:15
#: ./docs/master/vite.md:15
msgid "[URL Processing](#url-processing)"
msgstr ""

#: ./docs/9.x/vite.md:16
#: ./docs/10.x/vite.md:16
#: ./docs/11.x/vite.md:16
#: ./docs/master/vite.md:16
msgid "[Working With Stylesheets](#working-with-stylesheets)"
msgstr ""

#: ./docs/10.x/vite.md:17
#: ./docs/11.x/vite.md:17
#: ./docs/master/vite.md:17
msgid "[Working With Blade and Routes](#working-with-blade-and-routes)"
msgstr ""

#: ./docs/9.x/vite.md:17
msgid "[Working With Blade & Routes](#working-with-blade-and-routes)"
msgstr ""

#: ./docs/9.x/vite.md:18
#: ./docs/10.x/vite.md:18
#: ./docs/11.x/vite.md:18
#: ./docs/master/vite.md:18
msgid "[Processing Static Assets With Vite](#blade-processing-static-assets)"
msgstr ""

#: ./docs/10.x/vite.md:19
#: ./docs/11.x/vite.md:19
#: ./docs/master/vite.md:19
msgid "[Refreshing on Save](#blade-refreshing-on-save)"
msgstr ""

#: ./docs/9.x/vite.md:19
msgid "[Refreshing On Save](#blade-refreshing-on-save)"
msgstr ""

#: ./docs/9.x/vite.md:20
#: ./docs/10.x/vite.md:20
#: ./docs/11.x/vite.md:20
#: ./docs/master/vite.md:20
msgid "[Aliases](#blade-aliases)"
msgstr ""

#: ./docs/11.x/vite.md:21
msgid "[Asset Prefetching](#asset-prefetching)"
msgstr ""

#: ./docs/9.x/vite.md:21
#: ./docs/10.x/vite.md:21
#: ./docs/11.x/vite.md:22
#: ./docs/master/vite.md:21
msgid "[Custom Base URLs](#custom-base-urls)"
msgstr ""

#: ./docs/9.x/vite.md:22
#: ./docs/10.x/vite.md:22
#: ./docs/11.x/vite.md:23
#: ./docs/master/vite.md:22
msgid "[Environment Variables](#environment-variables)"
msgstr ""

#: ./docs/10.x/vite.md:23
#: ./docs/11.x/vite.md:24
#: ./docs/master/vite.md:23
msgid "[Disabling Vite in Tests](#disabling-vite-in-tests)"
msgstr ""

#: ./docs/9.x/vite.md:23
msgid "[Disabling Vite In Tests](#disabling-vite-in-tests)"
msgstr ""

#: ./docs/9.x/vite.md:24
#: ./docs/10.x/vite.md:24
#: ./docs/11.x/vite.md:25
#: ./docs/master/vite.md:24
msgid "[Server-Side Rendering (SSR)](#ssr)"
msgstr ""

#: ./docs/10.x/vite.md:25
#: ./docs/11.x/vite.md:26
#: ./docs/master/vite.md:25
msgid "[Script and Style Tag Attributes](#script-and-style-attributes)"
msgstr ""

#: ./docs/9.x/vite.md:25
msgid "[Script & Style Tag Attributes](#script-and-style-attributes)"
msgstr ""

#: ./docs/9.x/vite.md:26
#: ./docs/10.x/vite.md:26
#: ./docs/11.x/vite.md:27
#: ./docs/master/vite.md:26
msgid "[Content Security Policy (CSP) Nonce](#content-security-policy-csp-nonce)"
msgstr ""

#: ./docs/9.x/vite.md:27
#: ./docs/10.x/vite.md:27
#: ./docs/11.x/vite.md:28
#: ./docs/master/vite.md:27
msgid "[Subresource Integrity (SRI)](#subresource-integrity-sri)"
msgstr ""

#: ./docs/9.x/vite.md:28
#: ./docs/10.x/vite.md:28
#: ./docs/11.x/vite.md:29
#: ./docs/master/vite.md:28
msgid "[Arbitrary Attributes](#arbitrary-attributes)"
msgstr ""

#: ./docs/9.x/vite.md:29
#: ./docs/10.x/vite.md:29
#: ./docs/11.x/vite.md:30
#: ./docs/master/vite.md:29
msgid "[Advanced Customization](#advanced-customization)"
msgstr ""

#: ./docs/9.x/vite.md:30
#: ./docs/10.x/vite.md:30
#: ./docs/11.x/vite.md:31
#: ./docs/master/vite.md:30
msgid "[Correcting Dev Server URLs](#correcting-dev-server-urls)"
msgstr ""

#: ./docs/9.x/vite.md:32
#: ./docs/10.x/vite.md:32
#: ./docs/11.x/vite.md:33
#: ./docs/master/vite.md:32
#~ msgctxt "P"
#~ msgid "<a name=\"introduction\"></a>"
#~ msgstr ""

#: ./docs/9.x/vite.md:33
#: ./docs/10.x/vite.md:33
#: ./docs/11.x/vite.md:34
#: ./docs/master/vite.md:33
msgid "Introduction"
msgstr ""

#: ./docs/9.x/vite.md:35
#: ./docs/10.x/vite.md:35
#: ./docs/11.x/vite.md:36
#: ./docs/master/vite.md:35
msgid "[Vite](https://vitejs.dev) is a modern frontend build tool that provides an extremely fast development environment and bundles your code for production. When building applications with Laravel, you will typically use Vite to bundle your application's CSS and JavaScript files into production ready assets."
msgstr ""

#: ./docs/9.x/vite.md:37
#: ./docs/10.x/vite.md:37
#: ./docs/11.x/vite.md:38
#: ./docs/master/vite.md:37
msgid "Laravel integrates seamlessly with Vite by providing an official plugin and Blade directive to load your assets for development and production."
msgstr ""

#: ./docs/9.x/vite.md:40
#: ./docs/10.x/vite.md:40
#: ./docs/11.x/vite.md:41
#: ./docs/master/vite.md:40
msgid "Are you running Laravel Mix? Vite has replaced Laravel Mix in new Laravel installations. For Mix documentation, please visit the [Laravel Mix](https://laravel-mix.com/) website. If you would like to switch to Vite, please see our [migration guide](https://github.com/laravel/vite-plugin/blob/main/UPGRADE.md#migrating-from-laravel-mix-to-vite)."
msgstr ""

#: ./docs/9.x/vite.md:42
#: ./docs/10.x/vite.md:42
#: ./docs/11.x/vite.md:43
#: ./docs/master/vite.md:42
#~ msgctxt "P"
#~ msgid "<a name=\"vite-or-mix\"></a>"
#~ msgstr ""

#: ./docs/10.x/vite.md:43
#: ./docs/11.x/vite.md:44
#: ./docs/master/vite.md:43
msgid "Choosing Between Vite and Laravel Mix"
msgstr ""

#: ./docs/9.x/vite.md:43
msgid "Choosing Between Vite And Laravel Mix"
msgstr ""

#: ./docs/9.x/vite.md:45
#: ./docs/10.x/vite.md:45
#: ./docs/11.x/vite.md:46
#: ./docs/master/vite.md:45
msgid "Before transitioning to Vite, new Laravel applications utilized [Mix](https://laravel-mix.com/), which is powered by [webpack](https://webpack.js.org/), when bundling assets. Vite focuses on providing a faster and more productive experience when building rich JavaScript applications. If you are developing a Single Page Application (SPA), including those developed with tools like [Inertia](https://inertiajs.com), Vite will be the perfect fit."
msgstr ""

#: ./docs/10.x/vite.md:47
#: ./docs/11.x/vite.md:48
#: ./docs/master/vite.md:47
msgid "Vite also works well with traditional server-side rendered applications with JavaScript \"sprinkles\", including those using [Livewire](https://livewire.laravel.com). However, it lacks some features that Laravel Mix supports, such as the ability to copy arbitrary assets into the build that are not referenced directly in your JavaScript application."
msgstr ""

#: ./docs/9.x/vite.md:47
msgid "Vite also works well with traditional server-side rendered applications with JavaScript \"sprinkles\", including those using [Livewire](https://laravel-livewire.com). However, it lacks some features that Laravel Mix supports, such as the ability to copy arbitrary assets into the build that are not referenced directly in your JavaScript application."
msgstr ""

#: ./docs/9.x/vite.md:49
#: ./docs/10.x/vite.md:49
#: ./docs/11.x/vite.md:50
#: ./docs/master/vite.md:49
#~ msgctxt "P"
#~ msgid "<a name=\"migrating-back-to-mix\"></a>"
#~ msgstr ""

#: ./docs/10.x/vite.md:50
#: ./docs/11.x/vite.md:51
#: ./docs/master/vite.md:50
msgid "Migrating Back to Mix"
msgstr ""

#: ./docs/9.x/vite.md:50
msgid "Migrating Back To Mix"
msgstr ""

#: ./docs/9.x/vite.md:52
#: ./docs/10.x/vite.md:52
#: ./docs/11.x/vite.md:53
#: ./docs/master/vite.md:52
msgid "Have you started a new Laravel application using our Vite scaffolding but need to move back to Laravel Mix and webpack? No problem. Please consult our [official guide on migrating from Vite to Mix](https://github.com/laravel/vite-plugin/blob/main/UPGRADE.md#migrating-from-vite-to-laravel-mix)."
msgstr ""

#: ./docs/9.x/vite.md:54
#: ./docs/10.x/vite.md:54
#: ./docs/11.x/vite.md:55
#: ./docs/master/vite.md:54
#~ msgctxt "P"
#~ msgid "<a name=\"installation\"></a>"
#~ msgstr ""

#: ./docs/9.x/vite.md:55
#: ./docs/10.x/vite.md:55
#: ./docs/11.x/vite.md:56
#: ./docs/master/vite.md:55
msgid "Installation & Setup"
msgstr ""

#: ./docs/9.x/vite.md:58
#: ./docs/10.x/vite.md:58
#: ./docs/11.x/vite.md:59
#: ./docs/master/vite.md:58
msgid "The following documentation discusses how to manually install and configure the Laravel Vite plugin. However, Laravel's [starter kits](/docs/{{version}}/starter-kits) already include all of this scaffolding and are the fastest way to get started with Laravel and Vite."
msgstr ""

#: ./docs/9.x/vite.md:60
#: ./docs/10.x/vite.md:60
#: ./docs/11.x/vite.md:61
#: ./docs/master/vite.md:60
#~ msgctxt "P"
#~ msgid "<a name=\"installing-node\"></a>"
#~ msgstr ""

#: ./docs/9.x/vite.md:61
#: ./docs/10.x/vite.md:61
#: ./docs/11.x/vite.md:62
#: ./docs/master/vite.md:61
msgid "Installing Node"
msgstr ""

#: ./docs/9.x/vite.md:63
#: ./docs/10.x/vite.md:63
#: ./docs/11.x/vite.md:64
#: ./docs/master/vite.md:63
msgid "You must ensure that Node.js (16+) and NPM are installed before running Vite and the Laravel plugin:"
msgstr ""

#: ./docs/9.x/vite.md:65
#: ./docs/10.x/vite.md:65
#: ./docs/11.x/vite.md:66
#: ./docs/master/vite.md:65
msgid "node -v\n"
"npm -v"
msgstr ""

#: ./docs/9.x/vite.md:70
#: ./docs/10.x/vite.md:70
#: ./docs/11.x/vite.md:71
#: ./docs/master/vite.md:70
msgid "You can easily install the latest version of Node and NPM using simple graphical installers from [the official Node website](https://nodejs.org/en/download/). Or, if you are using [Laravel Sail](https://laravel.com/docs/{{version}}/sail), you may invoke Node and NPM through Sail:"
msgstr ""

#: ./docs/9.x/vite.md:72
#: ./docs/10.x/vite.md:72
#: ./docs/11.x/vite.md:73
#: ./docs/master/vite.md:72
msgid "./vendor/bin/sail node -v\n"
"./vendor/bin/sail npm -v"
msgstr ""

#: ./docs/9.x/vite.md:77
#: ./docs/10.x/vite.md:77
#: ./docs/11.x/vite.md:78
#: ./docs/master/vite.md:77
#~ msgctxt "P"
#~ msgid "<a name=\"installing-vite-and-laravel-plugin\"></a>"
#~ msgstr ""

#: ./docs/10.x/vite.md:78
#: ./docs/11.x/vite.md:79
#: ./docs/master/vite.md:78
msgid "Installing Vite and the Laravel Plugin"
msgstr ""

#: ./docs/9.x/vite.md:78
msgid "Installing Vite And The Laravel Plugin"
msgstr ""

#: ./docs/9.x/vite.md:80
#: ./docs/10.x/vite.md:80
#: ./docs/11.x/vite.md:81
#: ./docs/master/vite.md:80
msgid "Within a fresh installation of Laravel, you will find a `package.json` file in the root of your application's directory structure. The default `package.json` file already includes everything you need to get started using Vite and the Laravel plugin. You may install your application's frontend dependencies via NPM:"
msgstr ""

#: ./docs/9.x/vite.md:82
#: ./docs/10.x/vite.md:82
#: ./docs/11.x/vite.md:83
#: ./docs/master/vite.md:82
msgid "npm install"
msgstr ""

#: ./docs/9.x/vite.md:86
#: ./docs/10.x/vite.md:86
#: ./docs/11.x/vite.md:87
#: ./docs/master/vite.md:86
#~ msgctxt "P"
#~ msgid "<a name=\"configuring-vite\"></a>"
#~ msgstr ""

#: ./docs/9.x/vite.md:87
#: ./docs/10.x/vite.md:87
#: ./docs/11.x/vite.md:88
#: ./docs/master/vite.md:87
msgid "Configuring Vite"
msgstr ""

#: ./docs/9.x/vite.md:89
#: ./docs/10.x/vite.md:89
#: ./docs/11.x/vite.md:90
#: ./docs/master/vite.md:89
msgid "Vite is configured via a `vite.config.js` file in the root of your project. You are free to customize this file based on your needs, and you may also install any other plugins your application requires, such as `@vitejs/plugin-vue` or `@vitejs/plugin-react`."
msgstr ""

#: ./docs/9.x/vite.md:91
#: ./docs/10.x/vite.md:91
#: ./docs/11.x/vite.md:92
#: ./docs/master/vite.md:91
msgid "The Laravel Vite plugin requires you to specify the entry points for your application. These may be JavaScript or CSS files, and include preprocessed languages such as TypeScript, JSX, TSX, and Sass."
msgstr ""

#: ./docs/9.x/vite.md:93
#: ./docs/10.x/vite.md:93
#: ./docs/11.x/vite.md:94
#: ./docs/master/vite.md:93
msgid "import { defineConfig } from 'vite';\n"
"import laravel from 'laravel-vite-plugin';\n\n"
"export default defineConfig({\n"
"    plugins: [\n"
"        laravel([\n"
"            'resources/css/app.css',\n"
"            'resources/js/app.js',\n"
"        ]),\n"
"    ],\n"
"});"
msgstr ""

#: ./docs/9.x/vite.md:107
#: ./docs/10.x/vite.md:107
#: ./docs/11.x/vite.md:108
#: ./docs/master/vite.md:107
msgid "If you are building an SPA, including applications built using Inertia, Vite works best without CSS entry points:"
msgstr ""

#: ./docs/9.x/vite.md:109
#: ./docs/10.x/vite.md:109
#: ./docs/11.x/vite.md:110
#: ./docs/master/vite.md:109
msgid "import { defineConfig } from 'vite';\n"
"import laravel from 'laravel-vite-plugin';\n\n"
"export default defineConfig({\n"
"    plugins: [\n"
"        laravel([\n"
"            'resources/css/app.css', // [tl! remove]\n"
"            'resources/js/app.js',\n"
"        ]),\n"
"    ],\n"
"});"
msgstr ""

#: ./docs/9.x/vite.md:123
#: ./docs/10.x/vite.md:123
#: ./docs/11.x/vite.md:124
#: ./docs/master/vite.md:123
msgid "Instead, you should import your CSS via JavaScript. Typically, this would be done in your application's `resources/js/app.js` file:"
msgstr ""

#: ./docs/9.x/vite.md:125
#: ./docs/10.x/vite.md:125
#: ./docs/11.x/vite.md:126
#: ./docs/master/vite.md:125
msgid "import './bootstrap';\n"
"import '../css/app.css'; // [tl! add]"
msgstr ""

#: ./docs/9.x/vite.md:130
#: ./docs/10.x/vite.md:130
#: ./docs/11.x/vite.md:131
#: ./docs/master/vite.md:130
msgid "The Laravel plugin also supports multiple entry points and advanced configuration options such as [SSR entry points](#ssr)."
msgstr ""

#: ./docs/9.x/vite.md:132
#: ./docs/10.x/vite.md:132
#: ./docs/11.x/vite.md:133
#: ./docs/master/vite.md:132
#~ msgctxt "P"
#~ msgid "<a name=\"working-with-a-secure-development-server\"></a>"
#~ msgstr ""

#: ./docs/10.x/vite.md:133
#: ./docs/11.x/vite.md:134
#: ./docs/master/vite.md:133
msgid "Working With a Secure Development Server"
msgstr ""

#: ./docs/9.x/vite.md:133
msgid "Working With A Secure Development Server"
msgstr ""

#: ./docs/9.x/vite.md:135
#: ./docs/10.x/vite.md:135
#: ./docs/11.x/vite.md:136
#: ./docs/master/vite.md:135
msgid "If your local development web server is serving your application via HTTPS, you may run into issues connecting to the Vite development server."
msgstr ""

#: ./docs/10.x/vite.md:137
#: ./docs/11.x/vite.md:138
#: ./docs/master/vite.md:137
msgid "If you are using [Laravel Herd](https://herd.laravel.com) and have secured the site or you are using [Laravel Valet](/docs/{{version}}/valet) and have run the [secure command](/docs/{{version}}/valet#securing-sites) against your application, the Laravel Vite plugin will automatically detect and use the generated TLS certificate for you."
msgstr ""

#: ./docs/9.x/vite.md:137
msgid "If you are using [Laravel Valet](/docs/{{version}}/valet) for local development and have run the [secure command](/docs/{{version}}/valet#securing-sites) against your application, you may configure the Vite development server to automatically use Valet's generated TLS certificates:"
msgstr ""

#: ./docs/10.x/vite.md:139
#: ./docs/11.x/vite.md:140
#: ./docs/master/vite.md:139
msgid "If you secured the site using a host that does not match the application's directory name, you may manually specify the host in your application's `vite.config.js` file:"
msgstr ""

#: ./docs/9.x/vite.md:139
msgid "import { defineConfig } from 'vite';\n"
"import laravel from 'laravel-vite-plugin';\n\n"
"export default defineConfig({\n"
"    plugins: [\n"
"        laravel({\n"
"            // ...\n"
"            valetTls: 'my-app.test', // [tl! add]\n"
"        }),\n"
"    ],\n"
"});"
msgstr ""

#: ./docs/10.x/vite.md:141
#: ./docs/11.x/vite.md:142
#: ./docs/master/vite.md:141
msgid "import { defineConfig } from 'vite';\n"
"import laravel from 'laravel-vite-plugin';\n\n"
"export default defineConfig({\n"
"    plugins: [\n"
"        laravel({\n"
"            // ...\n"
"            detectTls: 'my-app.test', // [tl! add]\n"
"        }),\n"
"    ],\n"
"});"
msgstr ""

#: ./docs/9.x/vite.md:153
#: ./docs/10.x/vite.md:155
#: ./docs/11.x/vite.md:156
#: ./docs/master/vite.md:155
msgid "When using another web server, you should generate a trusted certificate and manually configure Vite to use the generated certificates:"
msgstr ""

#: ./docs/9.x/vite.md:155
#: ./docs/10.x/vite.md:157
#: ./docs/11.x/vite.md:158
#: ./docs/master/vite.md:157
msgid "// ...\n"
"import fs from 'fs'; // [tl! add]\n\n"
"const host = 'my-app.test'; // [tl! add]\n\n"
"export default defineConfig({\n"
"    // ...\n"
"    server: { // [tl! add]\n"
"        host, // [tl! add]\n"
"        hmr: { host }, // [tl! add]\n"
"        https: { // [tl! add]\n"
"            key: fs.readFileSync(`/path/to/${host}.key`), // [tl! add]\n"
"            cert: fs.readFileSync(`/path/to/${host}.crt`), // [tl! add]\n"
"        }, // [tl! add]\n"
"    }, // [tl! add]\n"
"});"
msgstr ""

#: ./docs/9.x/vite.md:174
#: ./docs/10.x/vite.md:176
#: ./docs/11.x/vite.md:177
#: ./docs/master/vite.md:176
msgid "If you are unable to generate a trusted certificate for your system, you may install and configure the [`@vitejs/plugin-basic-ssl` plugin](https://github.com/vitejs/vite-plugin-basic-ssl). When using untrusted certificates, you will need to accept the certificate warning for Vite's development server in your browser by following the \"Local\" link in your console when running the `npm run dev` command."
msgstr ""

#: ./docs/9.x/vite.md:176
#: ./docs/10.x/vite.md:198
#: ./docs/11.x/vite.md:199
#: ./docs/master/vite.md:198
#~ msgctxt "P"
#~ msgid "<a name=\"loading-your-scripts-and-styles\"></a>"
#~ msgstr ""

#: ./docs/9.x/vite.md:177
msgid "Loading Your Scripts And Styles"
msgstr ""

#: ./docs/10.x/vite.md:178
#: ./docs/11.x/vite.md:179
#: ./docs/master/vite.md:178
#~ msgctxt "P"
#~ msgid "<a name=\"configuring-hmr-in-sail-on-wsl2\"></a>"
#~ msgstr ""

#: ./docs/10.x/vite.md:179
#: ./docs/11.x/vite.md:180
#: ./docs/master/vite.md:179
msgid "Running the Development Server in Sail on WSL2"
msgstr ""

#: ./docs/9.x/vite.md:179
msgid "With your Vite entry points configured, you only need reference them in a `@vite()` Blade directive that you add to the `<head>` of your application's root template:"
msgstr ""

#: ./docs/10.x/vite.md:181
#: ./docs/11.x/vite.md:182
#: ./docs/master/vite.md:181
msgid "When running the Vite development server within [Laravel Sail](/docs/{{version}}/sail) on Windows Subsystem for Linux 2 (WSL2), you should add the following configuration to your `vite.config.js` file to ensure the browser can communicate with the development server:"
msgstr ""

#: ./docs/9.x/vite.md:181
#: ./docs/10.x/vite.md:203
#: ./docs/master/vite.md:203
msgid "<!doctype html>\n"
"<head>\n"
"    {{-- ... --}}\n\n"
"    @vite(['resources/css/app.css', 'resources/js/app.js'])\n"
"</head>"
msgstr ""

#: ./docs/10.x/vite.md:183
#: ./docs/11.x/vite.md:184
#: ./docs/master/vite.md:183
msgid "// ...\n\n"
"export default defineConfig({\n"
"    // ...\n"
"    server: { // [tl! add:start]\n"
"        hmr: {\n"
"            host: 'localhost',\n"
"        },\n"
"    }, // [tl! add:end]\n"
"});"
msgstr ""

#: ./docs/9.x/vite.md:190
#: ./docs/10.x/vite.md:212
#: ./docs/11.x/vite.md:213
#: ./docs/master/vite.md:212
msgid "If you're importing your CSS via JavaScript, you only need to include the JavaScript entry point:"
msgstr ""

#: ./docs/9.x/vite.md:192
#: ./docs/10.x/vite.md:214
#: ./docs/master/vite.md:214
msgid "<!doctype html>\n"
"<head>\n"
"    {{-- ... --}}\n\n"
"    @vite('resources/js/app.js')\n"
"</head>"
msgstr ""

#: ./docs/10.x/vite.md:196
#: ./docs/11.x/vite.md:197
#: ./docs/master/vite.md:196
msgid "If your file changes are not being reflected in the browser while the development server is running, you may also need to configure Vite's [`server.watch.usePolling` option](https://vitejs.dev/config/server-options.html#server-watch)."
msgstr ""

#: ./docs/10.x/vite.md:199
#: ./docs/11.x/vite.md:200
#: ./docs/master/vite.md:199
msgid "Loading Your Scripts and Styles"
msgstr ""

#: ./docs/10.x/vite.md:201
#: ./docs/11.x/vite.md:202
#: ./docs/master/vite.md:201
msgid "With your Vite entry points configured, you may now reference them in a `@vite()` Blade directive that you add to the `<head>` of your application's root template:"
msgstr ""

#: ./docs/9.x/vite.md:201
#: ./docs/10.x/vite.md:223
#: ./docs/11.x/vite.md:224
#: ./docs/master/vite.md:223
msgid "The `@vite` directive will automatically detect the Vite development server and inject the Vite client to enable Hot Module Replacement. In build mode, the directive will load your compiled and versioned assets, including any imported CSS."
msgstr ""

#: ./docs/9.x/vite.md:203
#: ./docs/10.x/vite.md:225
#: ./docs/11.x/vite.md:226
#: ./docs/master/vite.md:225
msgid "If needed, you may also specify the build path of your compiled assets when invoking the `@vite` directive:"
msgstr ""

#: ./docs/11.x/vite.md:204
msgid "<!DOCTYPE html>\n"
"<head>\n"
"    {{-- ... --}}\n\n"
"    @vite(['resources/css/app.css', 'resources/js/app.js'])\n"
"</head>"
msgstr ""

#: ./docs/9.x/vite.md:205
#: ./docs/10.x/vite.md:227
#: ./docs/11.x/vite.md:228
#: ./docs/master/vite.md:227
msgid "<!doctype html>\n"
"<head>\n"
"    {{-- Given build path is relative to public path. --}}\n\n"
"    @vite('resources/js/app.js', 'vendor/courier/build')\n"
"</head>"
msgstr ""

#: ./docs/9.x/vite.md:214
#: ./docs/10.x/vite.md:259
#: ./docs/11.x/vite.md:258
#: ./docs/master/vite.md:259
#~ msgctxt "P"
#~ msgid "<a name=\"running-vite\"></a>"
#~ msgstr ""

#: ./docs/11.x/vite.md:215
msgid "<!DOCTYPE html>\n"
"<head>\n"
"    {{-- ... --}}\n\n"
"    @vite('resources/js/app.js')\n"
"</head>"
msgstr ""

#: ./docs/9.x/vite.md:215
#: ./docs/10.x/vite.md:260
#: ./docs/11.x/vite.md:259
#: ./docs/master/vite.md:260
msgid "Running Vite"
msgstr ""

#: ./docs/9.x/vite.md:217
#: ./docs/10.x/vite.md:262
#: ./docs/11.x/vite.md:261
#: ./docs/master/vite.md:262
msgid "There are two ways you can run Vite. You may run the development server via the `dev` command, which is useful while developing locally. The development server will automatically detect changes to your files and instantly reflect them in any open browser windows."
msgstr ""

#: ./docs/9.x/vite.md:219
#: ./docs/10.x/vite.md:264
#: ./docs/11.x/vite.md:263
#: ./docs/master/vite.md:264
msgid "Or, running the `build` command will version and bundle your application's assets and get them ready for you to deploy to production:"
msgstr ""

#: ./docs/9.x/vite.md:221
#: ./docs/10.x/vite.md:266
#: ./docs/11.x/vite.md:265
#: ./docs/master/vite.md:266
msgid "# Run the Vite development server...\n"
"npm run dev\n\n"
"# Build and version the assets for production...\n"
"npm run build"
msgstr ""

#: ./docs/9.x/vite.md:229
#: ./docs/10.x/vite.md:276
#: ./docs/11.x/vite.md:275
#: ./docs/master/vite.md:276
#~ msgctxt "P"
#~ msgid "<a name=\"working-with-scripts\"></a>"
#~ msgstr ""

#: ./docs/9.x/vite.md:230
#: ./docs/10.x/vite.md:277
#: ./docs/11.x/vite.md:276
#: ./docs/master/vite.md:277
msgid "Working With JavaScript"
msgstr ""

#: ./docs/9.x/vite.md:232
#: ./docs/10.x/vite.md:279
#: ./docs/11.x/vite.md:278
#: ./docs/master/vite.md:279
#~ msgctxt "P"
#~ msgid "<a name=\"aliases\"></a>"
#~ msgstr ""

#: ./docs/9.x/vite.md:233
#: ./docs/9.x/vite.md:498
#: ./docs/10.x/vite.md:280
#: ./docs/10.x/vite.md:548
#: ./docs/11.x/vite.md:279
#: ./docs/11.x/vite.md:550
#: ./docs/master/vite.md:280
#: ./docs/master/vite.md:548
msgid "Aliases"
msgstr ""

#: ./docs/9.x/vite.md:235
#: ./docs/10.x/vite.md:282
#: ./docs/11.x/vite.md:281
#: ./docs/master/vite.md:282
msgid "By default, The Laravel plugin provides a common alias to help you hit the ground running and conveniently import your application's assets:"
msgstr ""

#: ./docs/10.x/vite.md:236
#: ./docs/11.x/vite.md:237
#: ./docs/master/vite.md:236
#~ msgctxt "P"
#~ msgid "<a name=\"inline-assets\"></a>"
#~ msgstr ""

#: ./docs/10.x/vite.md:237
#: ./docs/11.x/vite.md:238
#: ./docs/master/vite.md:237
msgid "Inline Assets"
msgstr ""

#: ./docs/9.x/vite.md:237
#: ./docs/10.x/vite.md:284
#: ./docs/11.x/vite.md:283
#: ./docs/master/vite.md:284
msgid "{\n"
"    '@' => '/resources/js'\n"
"}"
msgstr ""

#: ./docs/10.x/vite.md:239
#: ./docs/11.x/vite.md:240
#: ./docs/master/vite.md:239
msgid "Sometimes it may be necessary to include the raw content of assets rather than linking to the versioned URL of the asset. For example, you may need to include asset content directly into your page when passing HTML content to a PDF generator. You may output the content of Vite assets using the `content` method provided by the `Vite` facade:"
msgstr ""

#: ./docs/10.x/vite.md:241
#: ./docs/master/vite.md:241
msgid "@php\n"
"use Illuminate\\Support\\Facades\\Vite;\n"
"@endphp\n\n"
"<!doctype html>\n"
"<head>\n"
"    {{-- ... --}}\n\n"
"    <style>\n"
"        {!! Vite::content('resources/css/app.css') !!}\n"
"    </style>\n"
"    <script>\n"
"        {!! Vite::content('resources/js/app.js') !!}\n"
"    </script>\n"
"</head>"
msgstr ""

#: ./docs/11.x/vite.md:242
msgid "@use('Illuminate\\Support\\Facades\\Vite')\n\n"
"<!doctype html>\n"
"<head>\n"
"    {{-- ... --}}\n\n"
"    <style>\n"
"        {!! Vite::content('resources/css/app.css') !!}\n"
"    </style>\n"
"    <script>\n"
"        {!! Vite::content('resources/js/app.js') !!}\n"
"    </script>\n"
"</head>"
msgstr ""

#: ./docs/9.x/vite.md:243
#: ./docs/10.x/vite.md:290
#: ./docs/11.x/vite.md:289
#: ./docs/master/vite.md:290
msgid "You may overwrite the `'@'` alias by adding your own to the `vite.config.js` configuration file:"
msgstr ""

#: ./docs/9.x/vite.md:245
#: ./docs/10.x/vite.md:292
#: ./docs/11.x/vite.md:291
#: ./docs/master/vite.md:292
msgid "import { defineConfig } from 'vite';\n"
"import laravel from 'laravel-vite-plugin';\n\n"
"export default defineConfig({\n"
"    plugins: [\n"
"        laravel(['resources/ts/app.tsx']),\n"
"    ],\n"
"    resolve: {\n"
"        alias: {\n"
"            '@': '/resources/ts',\n"
"        },\n"
"    },\n"
"});"
msgstr ""

#: ./docs/9.x/vite.md:261
#: ./docs/10.x/vite.md:308
#: ./docs/11.x/vite.md:307
#: ./docs/master/vite.md:308
#~ msgctxt "P"
#~ msgid "<a name=\"vue\"></a>"
#~ msgstr ""

#: ./docs/9.x/vite.md:262
#: ./docs/10.x/vite.md:309
#: ./docs/11.x/vite.md:308
#: ./docs/master/vite.md:309
msgid "Vue"
msgstr ""

#: ./docs/9.x/vite.md:264
msgid "If you would like to build your front-end using the [Vue](https://vuejs.org/) framework, then you will also need to install the `@vitejs/plugin-vue` plugin:"
msgstr ""

#: ./docs/9.x/vite.md:266
#: ./docs/10.x/vite.md:313
#: ./docs/11.x/vite.md:312
#: ./docs/master/vite.md:313
msgid "npm install --save-dev @vitejs/plugin-vue"
msgstr ""

#: ./docs/9.x/vite.md:270
#: ./docs/10.x/vite.md:317
#: ./docs/11.x/vite.md:316
#: ./docs/master/vite.md:317
msgid "You may then include the plugin in your `vite.config.js` configuration file. There are a few additional options you will need when using the Vue plugin with Laravel:"
msgstr ""

#: ./docs/9.x/vite.md:272
#: ./docs/10.x/vite.md:319
#: ./docs/11.x/vite.md:318
#: ./docs/master/vite.md:319
msgid "import { defineConfig } from 'vite';\n"
"import laravel from 'laravel-vite-plugin';\n"
"import vue from '@vitejs/plugin-vue';\n\n"
"export default defineConfig({\n"
"    plugins: [\n"
"        laravel(['resources/js/app.js']),\n"
"        vue({\n"
"            template: {\n"
"                transformAssetUrls: {\n"
"                    // The Vue plugin will re-write asset URLs, when referenced\n"
"                    // in Single File Components, to point to the Laravel web\n"
"                    // server. Setting this to `null` allows the Laravel plugin\n"
"                    // to instead re-write asset URLs to point to the Vite\n"
"                    // server instead.\n"
"                    base: null,\n\n"
"                    // The Vue plugin will parse absolute URLs and treat them\n"
"                    // as absolute paths to files on disk. Setting this to\n"
"                    // `false` will leave absolute URLs un-touched so they can\n"
"                    // reference assets in the public directory as expected.\n"
"                    includeAbsolute: false,\n"
"                },\n"
"            },\n"
"        }),\n"
"    ],\n"
"});"
msgstr ""

#: ./docs/10.x/vite.md:274
#: ./docs/11.x/vite.md:273
#: ./docs/master/vite.md:274
msgid "If you are running the development server in [Sail](/docs/{{version}}/sail) on WSL2, you may need some [additional configuration](#configuring-hmr-in-sail-on-wsl2) options."
msgstr ""

#: ./docs/9.x/vite.md:303
#: ./docs/10.x/vite.md:350
#: ./docs/11.x/vite.md:349
#: ./docs/master/vite.md:350
msgid "Laravel's [starter kits](/docs/{{version}}/starter-kits) already include the proper Laravel, Vue, and Vite configuration. Check out [Laravel Breeze](/docs/{{version}}/starter-kits#breeze-and-inertia) for the fastest way to get started with Laravel, Vue, and Vite."
msgstr ""

#: ./docs/9.x/vite.md:305
#: ./docs/10.x/vite.md:352
#: ./docs/11.x/vite.md:351
#: ./docs/master/vite.md:352
#~ msgctxt "P"
#~ msgid "<a name=\"react\"></a>"
#~ msgstr ""

#: ./docs/9.x/vite.md:306
#: ./docs/10.x/vite.md:353
#: ./docs/11.x/vite.md:352
#: ./docs/master/vite.md:353
msgid "React"
msgstr ""

#: ./docs/9.x/vite.md:308
msgid "If you would like to build your front-end using the [React](https://reactjs.org/) framework, then you will also need to install the `@vitejs/plugin-react` plugin:"
msgstr ""

#: ./docs/9.x/vite.md:310
#: ./docs/10.x/vite.md:357
#: ./docs/11.x/vite.md:356
#: ./docs/master/vite.md:357
msgid "npm install --save-dev @vitejs/plugin-react"
msgstr ""

#: ./docs/10.x/vite.md:311
#: ./docs/11.x/vite.md:310
#: ./docs/master/vite.md:311
msgid "If you would like to build your frontend using the [Vue](https://vuejs.org/) framework, then you will also need to install the `@vitejs/plugin-vue` plugin:"
msgstr ""

#: ./docs/9.x/vite.md:314
#: ./docs/10.x/vite.md:361
#: ./docs/11.x/vite.md:360
#: ./docs/master/vite.md:361
msgid "You may then include the plugin in your `vite.config.js` configuration file:"
msgstr ""

#: ./docs/9.x/vite.md:316
#: ./docs/10.x/vite.md:363
#: ./docs/11.x/vite.md:362
#: ./docs/master/vite.md:363
msgid "import { defineConfig } from 'vite';\n"
"import laravel from 'laravel-vite-plugin';\n"
"import react from '@vitejs/plugin-react';\n\n"
"export default defineConfig({\n"
"    plugins: [\n"
"        laravel(['resources/js/app.jsx']),\n"
"        react(),\n"
"    ],\n"
"});"
msgstr ""

#: ./docs/9.x/vite.md:329
#: ./docs/10.x/vite.md:376
#: ./docs/11.x/vite.md:375
#: ./docs/master/vite.md:376
msgid "You will need to ensure that any files containing JSX have a `.jsx` or `.tsx` extension, remembering to update your entry point, if required, as [shown above](#configuring-vite)."
msgstr ""

#: ./docs/9.x/vite.md:331
#: ./docs/10.x/vite.md:378
#: ./docs/11.x/vite.md:377
#: ./docs/master/vite.md:378
msgid "You will also need to include the additional `@viteReactRefresh` Blade directive alongside your existing `@vite` directive."
msgstr ""

#: ./docs/9.x/vite.md:333
#: ./docs/10.x/vite.md:380
#: ./docs/11.x/vite.md:379
#: ./docs/master/vite.md:380
msgid "@viteReactRefresh\n"
"@vite('resources/js/app.jsx')"
msgstr ""

#: ./docs/9.x/vite.md:338
#: ./docs/10.x/vite.md:385
#: ./docs/11.x/vite.md:384
#: ./docs/master/vite.md:385
msgid "The `@viteReactRefresh` directive must be called before the `@vite` directive."
msgstr ""

#: ./docs/9.x/vite.md:341
#: ./docs/10.x/vite.md:388
#: ./docs/11.x/vite.md:387
#: ./docs/master/vite.md:388
msgid "Laravel's [starter kits](/docs/{{version}}/starter-kits) already include the proper Laravel, React, and Vite configuration. Check out [Laravel Breeze](/docs/{{version}}/starter-kits#breeze-and-inertia) for the fastest way to get started with Laravel, React, and Vite."
msgstr ""

#: ./docs/9.x/vite.md:343
#: ./docs/10.x/vite.md:390
#: ./docs/11.x/vite.md:389
#: ./docs/master/vite.md:390
#~ msgctxt "P"
#~ msgid "<a name=\"inertia\"></a>"
#~ msgstr ""

#: ./docs/9.x/vite.md:344
#: ./docs/10.x/vite.md:391
#: ./docs/11.x/vite.md:390
#: ./docs/master/vite.md:391
msgid "Inertia"
msgstr ""

#: ./docs/9.x/vite.md:346
#: ./docs/10.x/vite.md:393
#: ./docs/11.x/vite.md:392
#: ./docs/master/vite.md:393
msgid "The Laravel Vite plugin provides a convenient `resolvePageComponent` function to help you resolve your Inertia page components. Below is an example of the helper in use with Vue 3; however, you may also utilize the function in other frameworks such as React:"
msgstr ""

#: ./docs/9.x/vite.md:348
#: ./docs/10.x/vite.md:395
#: ./docs/master/vite.md:395
msgid "import { createApp, h } from 'vue';\n"
"import { createInertiaApp } from '@inertiajs/vue3';\n"
"import { resolvePageComponent } from 'laravel-vite-plugin/inertia-helpers';\n\n"
"createInertiaApp({\n"
"  resolve: (name) => resolvePageComponent(`./Pages/${name}.vue`, import.meta.glob('./Pages/**/*.vue')),\n"
"  setup({ el, App, props, plugin }) {\n"
"    return createApp({ render: () => h(App, props) })\n"
"      .use(plugin)\n"
"      .mount(el)\n"
"  },\n"
"});"
msgstr ""

#: ./docs/10.x/vite.md:355
#: ./docs/11.x/vite.md:354
#: ./docs/master/vite.md:355
msgid "If you would like to build your frontend using the [React](https://reactjs.org/) framework, then you will also need to install the `@vitejs/plugin-react` plugin:"
msgstr ""

#: ./docs/9.x/vite.md:364
#: ./docs/10.x/vite.md:411
#: ./docs/11.x/vite.md:412
#: ./docs/master/vite.md:411
msgid "Laravel's [starter kits](/docs/{{version}}/starter-kits) already include the proper Laravel, Inertia, and Vite configuration. Check out [Laravel Breeze](/docs/{{version}}/starter-kits#breeze-and-inertia) for the fastest way to get started with Laravel, Inertia, and Vite."
msgstr ""

#: ./docs/9.x/vite.md:366
#: ./docs/10.x/vite.md:413
#: ./docs/11.x/vite.md:414
#: ./docs/master/vite.md:413
#~ msgctxt "P"
#~ msgid "<a name=\"url-processing\"></a>"
#~ msgstr ""

#: ./docs/9.x/vite.md:367
#: ./docs/10.x/vite.md:414
#: ./docs/11.x/vite.md:415
#: ./docs/master/vite.md:414
msgid "URL Processing"
msgstr ""

#: ./docs/9.x/vite.md:369
#: ./docs/10.x/vite.md:416
#: ./docs/master/vite.md:416
msgid "When using Vite and referencing assets in your application's HTML, CSS, or JS, there are a couple of caveats to consider. First, if you reference assets with an absolute path, Vite will not include the asset in the build; therefore, you should ensure that the asset is available in your public directory."
msgstr ""

#: ./docs/9.x/vite.md:371
#: ./docs/10.x/vite.md:418
#: ./docs/11.x/vite.md:419
#: ./docs/master/vite.md:418
msgid "When referencing relative asset paths, you should remember that the paths are relative to the file where they are referenced. Any assets referenced via a relative path will be re-written, versioned, and bundled by Vite."
msgstr ""

#: ./docs/9.x/vite.md:373
#: ./docs/10.x/vite.md:420
#: ./docs/11.x/vite.md:421
#: ./docs/master/vite.md:420
msgid "Consider the following project structure:"
msgstr ""

#: ./docs/9.x/vite.md:375
#: ./docs/10.x/vite.md:422
#: ./docs/11.x/vite.md:423
#: ./docs/master/vite.md:422
msgid "public/\n"
"  taylor.png\n"
"resources/\n"
"  js/\n"
"    Pages/\n"
"      Welcome.vue\n"
"  images/\n"
"    abigail.png"
msgstr ""

#: ./docs/9.x/vite.md:386
#: ./docs/10.x/vite.md:433
#: ./docs/11.x/vite.md:434
#: ./docs/master/vite.md:433
msgid "The following example demonstrates how Vite will treat relative and absolute URLs:"
msgstr ""

#: ./docs/9.x/vite.md:388
#: ./docs/10.x/vite.md:435
#: ./docs/11.x/vite.md:436
#: ./docs/master/vite.md:435
msgid "<!-- This asset is not handled by Vite and will not be included in the build -->\n"
"<img src=\"/taylor.png\">\n\n"
"<!-- This asset will be re-written, versioned, and bundled by Vite -->\n"
"<img src=\"../../images/abigail.png\">"
msgstr ""

#: ./docs/11.x/vite.md:394
msgid "import { createApp, h } from 'vue';\n"
"import { createInertiaApp } from '@inertiajs/vue3';\n"
"import { resolvePageComponent } from 'laravel-vite-plugin/inertia-helpers';\n\n"
"createInertiaApp({\n"
"  resolve: (name) => resolvePageComponent(`./Pages/${name}.vue`, import.meta.glob('./Pages/**/*.vue')),\n"
"  setup({ el, App, props, plugin }) {\n"
"    createApp({ render: () => h(App, props) })\n"
"      .use(plugin)\n"
"      .mount(el)\n"
"  },\n"
"});"
msgstr ""

#: ./docs/9.x/vite.md:396
#: ./docs/10.x/vite.md:443
#: ./docs/11.x/vite.md:444
#: ./docs/master/vite.md:443
#~ msgctxt "P"
#~ msgid "<a name=\"working-with-stylesheets\"></a>"
#~ msgstr ""

#: ./docs/9.x/vite.md:397
#: ./docs/10.x/vite.md:444
#: ./docs/11.x/vite.md:445
#: ./docs/master/vite.md:444
msgid "Working With Stylesheets"
msgstr ""

#: ./docs/9.x/vite.md:399
#: ./docs/10.x/vite.md:446
#: ./docs/11.x/vite.md:447
#: ./docs/master/vite.md:446
msgid "You can learn more about Vite's CSS support within the [Vite documentation](https://vitejs.dev/guide/features.html#css). If you are using PostCSS plugins such as [Tailwind](https://tailwindcss.com), you may create a `postcss.config.js` file in the root of your project and Vite will automatically apply it:"
msgstr ""

#: ./docs/9.x/vite.md:401
msgid "module.exports = {\n"
"    plugins: {\n"
"        tailwindcss: {},\n"
"        autoprefixer: {},\n"
"    },\n"
"};"
msgstr ""

#: ./docs/11.x/vite.md:409
msgid "If you are using Vite's code splitting feature with Inertia, we recommend configuring [asset prefetching](#asset-prefetching)."
msgstr ""

#: ./docs/9.x/vite.md:410
#: ./docs/10.x/vite.md:460
#: ./docs/11.x/vite.md:461
#: ./docs/master/vite.md:460
#~ msgctxt "P"
#~ msgid "<a name=\"working-with-blade-and-routes\"></a>"
#~ msgstr ""

#: ./docs/9.x/vite.md:411
msgid "Working With Blade & Routes"
msgstr ""

#: ./docs/9.x/vite.md:413
#: ./docs/10.x/vite.md:463
#: ./docs/11.x/vite.md:464
#: ./docs/master/vite.md:463
#~ msgctxt "P"
#~ msgid "<a name=\"blade-processing-static-assets\"></a>"
#~ msgstr ""

#: ./docs/9.x/vite.md:414
#: ./docs/10.x/vite.md:464
#: ./docs/11.x/vite.md:465
#: ./docs/master/vite.md:464
msgid "Processing Static Assets With Vite"
msgstr ""

#: ./docs/9.x/vite.md:416
#: ./docs/10.x/vite.md:466
#: ./docs/11.x/vite.md:467
#: ./docs/master/vite.md:466
msgid "When referencing assets in your JavaScript or CSS, Vite automatically processes and versions them. In addition, when building Blade based applications, Vite can also process and version static assets that you reference solely in Blade templates."
msgstr ""

#: ./docs/11.x/vite.md:417
msgid "When using Vite and referencing assets in your application's HTML, CSS, or JS, there are a couple of caveats to consider. First, if you reference assets with an absolute path, Vite will not include the asset in the build; therefore, you should ensure that the asset is available in your public directory. You should avoid using absolute paths when using a [dedicated CSS entrypoint](#configuring-vite) because, during development, browsers will try to load these paths from the Vite development server, where the CSS is hosted, rather than from your public directory."
msgstr ""

#: ./docs/9.x/vite.md:418
#: ./docs/10.x/vite.md:468
#: ./docs/11.x/vite.md:469
#: ./docs/master/vite.md:468
msgid "However, in order to accomplish this, you need to make Vite aware of your assets by importing the static assets into the application's entry point. For example, if you want to process and version all images stored in `resources/images` and all fonts stored in `resources/fonts`, you should add the following in your application's `resources/js/app.js` entry point:"
msgstr ""

#: ./docs/9.x/vite.md:420
#: ./docs/10.x/vite.md:470
#: ./docs/11.x/vite.md:471
#: ./docs/master/vite.md:470
msgid "import.meta.glob([\n"
"  '../images/**',\n"
"  '../fonts/**',\n"
"]);"
msgstr ""

#: ./docs/9.x/vite.md:427
#: ./docs/10.x/vite.md:477
#: ./docs/11.x/vite.md:478
#: ./docs/master/vite.md:477
msgid "These assets will now be processed by Vite when running `npm run build`. You can then reference these assets in Blade templates using the `Vite::asset` method, which will return the versioned URL for a given asset:"
msgstr ""

#: ./docs/9.x/vite.md:429
#: ./docs/10.x/vite.md:479
#: ./docs/11.x/vite.md:480
#: ./docs/master/vite.md:479
msgid "<img src=\"{{ Vite::asset('resources/images/logo.png') }}\">"
msgstr ""

#: ./docs/9.x/vite.md:433
#: ./docs/10.x/vite.md:483
#: ./docs/11.x/vite.md:484
#: ./docs/master/vite.md:483
#~ msgctxt "P"
#~ msgid "<a name=\"blade-refreshing-on-save\"></a>"
#~ msgstr ""

#: ./docs/9.x/vite.md:434
msgid "Refreshing On Save"
msgstr ""

#: ./docs/9.x/vite.md:436
#: ./docs/10.x/vite.md:486
#: ./docs/11.x/vite.md:487
#: ./docs/master/vite.md:486
msgid "When your application is built using traditional server-side rendering with Blade, Vite can improve your development workflow by automatically refreshing the browser when you make changes to view files in your application. To get started, you can simply specify the `refresh` option as `true`."
msgstr ""

#: ./docs/9.x/vite.md:438
#: ./docs/10.x/vite.md:488
#: ./docs/11.x/vite.md:489
#: ./docs/master/vite.md:488
msgid "import { defineConfig } from 'vite';\n"
"import laravel from 'laravel-vite-plugin';\n\n"
"export default defineConfig({\n"
"    plugins: [\n"
"        laravel({\n"
"            // ...\n"
"            refresh: true,\n"
"        }),\n"
"    ],\n"
"});"
msgstr ""

#: ./docs/10.x/vite.md:448
#: ./docs/11.x/vite.md:449
#: ./docs/master/vite.md:448
msgid "export default {\n"
"    plugins: {\n"
"        tailwindcss: {},\n"
"        autoprefixer: {},\n"
"    },\n"
"};"
msgstr ""

#: ./docs/9.x/vite.md:452
#: ./docs/10.x/vite.md:502
#: ./docs/11.x/vite.md:503
#: ./docs/master/vite.md:502
msgid "When the `refresh` option is `true`, saving files in the following directories will trigger the browser to perform a full page refresh while you are running `npm run dev`:"
msgstr ""

#: ./docs/9.x/vite.md:454
#: ./docs/10.x/vite.md:504
#: ./docs/11.x/vite.md:506
#: ./docs/master/vite.md:504
msgid "`app/View/Components/**`"
msgstr ""

#: ./docs/9.x/vite.md:455
#: ./docs/10.x/vite.md:505
#: ./docs/11.x/vite.md:507
#: ./docs/master/vite.md:505
msgid "`lang/**`"
msgstr ""

#: ./docs/9.x/vite.md:456
#: ./docs/10.x/vite.md:506
#: ./docs/11.x/vite.md:508
#: ./docs/master/vite.md:506
msgid "`resources/lang/**`"
msgstr ""

#: ./docs/9.x/vite.md:457
#: ./docs/10.x/vite.md:507
#: ./docs/11.x/vite.md:509
#: ./docs/master/vite.md:507
msgid "`resources/views/**`"
msgstr ""

#: ./docs/10.x/vite.md:458
#: ./docs/11.x/vite.md:459
#: ./docs/master/vite.md:458
msgid "Laravel's [starter kits](/docs/{{version}}/starter-kits) already include the proper Tailwind, PostCSS, and Vite configuration. Or, if you would like to use Tailwind and Laravel without using one of our starter kits, check out [Tailwind's installation guide for Laravel](https://tailwindcss.com/docs/guides/laravel)."
msgstr ""

#: ./docs/9.x/vite.md:458
#: ./docs/10.x/vite.md:508
#: ./docs/11.x/vite.md:510
#: ./docs/master/vite.md:508
msgid "`routes/**`"
msgstr ""

#: ./docs/9.x/vite.md:460
#: ./docs/10.x/vite.md:510
#: ./docs/11.x/vite.md:512
#: ./docs/master/vite.md:510
msgid "Watching the `routes/**` directory is useful if you are utilizing [Ziggy](https://github.com/tighten/ziggy) to generate route links within your application's frontend."
msgstr ""

#: ./docs/10.x/vite.md:461
#: ./docs/11.x/vite.md:462
#: ./docs/master/vite.md:461
msgid "Working With Blade and Routes"
msgstr ""

#: ./docs/9.x/vite.md:462
#: ./docs/10.x/vite.md:512
#: ./docs/11.x/vite.md:514
#: ./docs/master/vite.md:512
msgid "If these default paths do not suit your needs, you can specify your own list of paths to watch:"
msgstr ""

#: ./docs/9.x/vite.md:464
#: ./docs/10.x/vite.md:514
#: ./docs/11.x/vite.md:516
#: ./docs/master/vite.md:514
msgid "import { defineConfig } from 'vite';\n"
"import laravel from 'laravel-vite-plugin';\n\n"
"export default defineConfig({\n"
"    plugins: [\n"
"        laravel({\n"
"            // ...\n"
"            refresh: ['resources/views/**'],\n"
"        }),\n"
"    ],\n"
"});"
msgstr ""

#: ./docs/9.x/vite.md:478
#: ./docs/10.x/vite.md:528
#: ./docs/11.x/vite.md:530
#: ./docs/master/vite.md:528
msgid "Under the hood, the Laravel Vite plugin uses the [`vite-plugin-full-reload`](https://github.com/ElMassimo/vite-plugin-full-reload) package, which offers some advanced configuration options to fine-tune this feature's behavior. If you need this level of customization, you may provide a `config` definition:"
msgstr ""

#: ./docs/9.x/vite.md:480
#: ./docs/10.x/vite.md:530
#: ./docs/11.x/vite.md:532
#: ./docs/master/vite.md:530
msgid "import { defineConfig } from 'vite';\n"
"import laravel from 'laravel-vite-plugin';\n\n"
"export default defineConfig({\n"
"    plugins: [\n"
"        laravel({\n"
"            // ...\n"
"            refresh: [{\n"
"                paths: ['path/to/watch/**'],\n"
"                config: { delay: 300 }\n"
"            }],\n"
"        }),\n"
"    ],\n"
"});"
msgstr ""

#: ./docs/10.x/vite.md:484
#: ./docs/11.x/vite.md:485
#: ./docs/master/vite.md:484
msgid "Refreshing on Save"
msgstr ""

#: ./docs/9.x/vite.md:497
#: ./docs/10.x/vite.md:547
#: ./docs/11.x/vite.md:549
#: ./docs/master/vite.md:547
#~ msgctxt "P"
#~ msgid "<a name=\"blade-aliases\"></a>"
#~ msgstr ""

#: ./docs/9.x/vite.md:500
#: ./docs/10.x/vite.md:550
#: ./docs/11.x/vite.md:552
#: ./docs/master/vite.md:550
msgid "It is common in JavaScript applications to [create aliases](#aliases) to regularly referenced directories. But, you may also create aliases to use in Blade by using the `macro` method on the `Illuminate\\Support\\Facades\\Vite` class. Typically, \"macros\" should be defined within the `boot` method of a [service provider](/docs/{{version}}/providers):"
msgstr ""

#: ./docs/9.x/vite.md:502
msgid "/**\n"
" * Bootstrap any application services.\n"
" *\n"
" * @return void\n"
" */\n"
"public function boot()\n"
"{\n"
"    Vite::macro('image', fn ($asset) => $this->asset(\"resources/images/{$asset}\"));\n"
"}"
msgstr ""

#: ./docs/11.x/vite.md:505
msgid "`app/Livewire/**`"
msgstr ""

#: ./docs/9.x/vite.md:512
#: ./docs/10.x/vite.md:560
#: ./docs/11.x/vite.md:562
#: ./docs/master/vite.md:560
msgid "Once a macro has been defined, it can be invoked within your templates. For example, we can use the `image` macro defined above to reference an asset located at `resources/images/logo.png`:"
msgstr ""

#: ./docs/9.x/vite.md:514
#: ./docs/10.x/vite.md:562
#: ./docs/11.x/vite.md:564
#: ./docs/master/vite.md:562
msgid "<img src=\"{{ Vite::image('logo.png') }}\" alt=\"Laravel Logo\">"
msgstr ""

#: ./docs/9.x/vite.md:518
#: ./docs/10.x/vite.md:566
#: ./docs/11.x/vite.md:637
#: ./docs/master/vite.md:566
#~ msgctxt "P"
#~ msgid "<a name=\"custom-base-urls\"></a>"
#~ msgstr ""

#: ./docs/9.x/vite.md:519
#: ./docs/10.x/vite.md:567
#: ./docs/11.x/vite.md:638
#: ./docs/master/vite.md:567
msgid "Custom Base URLs"
msgstr ""

#: ./docs/9.x/vite.md:521
#: ./docs/10.x/vite.md:569
#: ./docs/11.x/vite.md:640
#: ./docs/master/vite.md:569
msgid "If your Vite compiled assets are deployed to a domain separate from your application, such as via a CDN, you must specify the `ASSET_URL` environment variable within your application's `.env` file:"
msgstr ""

#: ./docs/9.x/vite.md:523
#: ./docs/10.x/vite.md:571
#: ./docs/11.x/vite.md:642
#: ./docs/master/vite.md:571
msgid "ASSET_URL=https://cdn.example.com"
msgstr ""

#: ./docs/9.x/vite.md:527
#: ./docs/10.x/vite.md:575
#: ./docs/11.x/vite.md:646
#: ./docs/master/vite.md:575
msgid "After configuring the asset URL, all re-written URLs to your assets will be prefixed with the configured value:"
msgstr ""

#: ./docs/9.x/vite.md:529
#: ./docs/10.x/vite.md:577
#: ./docs/11.x/vite.md:648
#: ./docs/master/vite.md:577
msgid "https://cdn.example.com/build/assets/app.9dce8d17.js"
msgstr ""

#: ./docs/9.x/vite.md:533
#: ./docs/10.x/vite.md:581
#: ./docs/11.x/vite.md:652
#: ./docs/master/vite.md:581
msgid "Remember that [absolute URLs are not re-written by Vite](#url-processing), so they will not be prefixed."
msgstr ""

#: ./docs/9.x/vite.md:535
#: ./docs/10.x/vite.md:583
#: ./docs/11.x/vite.md:654
#: ./docs/master/vite.md:583
#~ msgctxt "P"
#~ msgid "<a name=\"environment-variables\"></a>"
#~ msgstr ""

#: ./docs/9.x/vite.md:536
#: ./docs/10.x/vite.md:584
#: ./docs/11.x/vite.md:655
#: ./docs/master/vite.md:584
msgid "Environment Variables"
msgstr ""

#: ./docs/9.x/vite.md:538
#: ./docs/10.x/vite.md:586
#: ./docs/11.x/vite.md:657
#: ./docs/master/vite.md:586
msgid "You may inject environment variables into your JavaScript by prefixing them with `VITE_` in your application's `.env` file:"
msgstr ""

#: ./docs/9.x/vite.md:540
#: ./docs/10.x/vite.md:588
#: ./docs/11.x/vite.md:659
#: ./docs/master/vite.md:588
msgid "VITE_SENTRY_DSN_PUBLIC=http://example.com"
msgstr ""

#: ./docs/9.x/vite.md:544
#: ./docs/10.x/vite.md:592
#: ./docs/11.x/vite.md:663
#: ./docs/master/vite.md:592
msgid "You may access injected environment variables via the `import.meta.env` object:"
msgstr ""

#: ./docs/9.x/vite.md:546
#: ./docs/10.x/vite.md:594
#: ./docs/11.x/vite.md:665
#: ./docs/master/vite.md:594
msgid "import.meta.env.VITE_SENTRY_DSN_PUBLIC"
msgstr ""

#: ./docs/9.x/vite.md:550
#: ./docs/10.x/vite.md:598
#: ./docs/11.x/vite.md:669
#: ./docs/master/vite.md:598
#~ msgctxt "P"
#~ msgid "<a name=\"disabling-vite-in-tests\"></a>"
#~ msgstr ""

#: ./docs/9.x/vite.md:551
msgid "Disabling Vite In Tests"
msgstr ""

#: ./docs/10.x/vite.md:552
#: ./docs/11.x/vite.md:554
#: ./docs/master/vite.md:552
msgid "/**\n"
" * Bootstrap any application services.\n"
" */\n"
"public function boot(): void\n"
"{\n"
"    Vite::macro('image', fn (string $asset) => $this->asset(\"resources/images/{$asset}\"));\n"
"}"
msgstr ""

#: ./docs/9.x/vite.md:553
#: ./docs/10.x/vite.md:601
#: ./docs/11.x/vite.md:672
#: ./docs/master/vite.md:601
msgid "Laravel's Vite integration will attempt to resolve your assets while running your tests, which requires you to either run the Vite development server or build your assets."
msgstr ""

#: ./docs/9.x/vite.md:555
msgid "If you would prefer to mock Vite during testing, you may call the `withoutVite` method, which is is available for any tests that extend Laravel's `TestCase` class:"
msgstr ""

#: ./docs/9.x/vite.md:557
msgid "use Tests\\TestCase;\n\n"
"class ExampleTest extends TestCase\n"
"{\n"
"    public function test_without_vite_example()\n"
"    {\n"
"        $this->withoutVite();\n\n"
"        // ...\n"
"    }\n"
"}"
msgstr ""

#: ./docs/11.x/vite.md:568
#~ msgctxt "P"
#~ msgid "<a name=\"asset-prefetching\"></a>"
#~ msgstr ""

#: ./docs/11.x/vite.md:569
msgid "Asset Prefetching"
msgstr ""

#: ./docs/11.x/vite.md:571
msgid "When building an SPA using Vite's code splitting feature, required assets are fetched on each page navigation. This behavior can lead to delayed UI rendering. If this is a problem for your frontend framework of choice, Laravel offers the ability to eagerly prefetch your application's JavaScript and CSS assets on initial page load."
msgstr ""

#: ./docs/9.x/vite.md:571
#: ./docs/10.x/vite.md:619
#: ./docs/11.x/vite.md:698
#: ./docs/master/vite.md:627
msgid "If you would like to disable Vite for all tests, you may call the `withoutVite` method from the `setUp` method on your base `TestCase` class:"
msgstr ""

#: ./docs/11.x/vite.md:573
msgid "You can instruct Laravel to eagerly prefetch your assets by invoking the `Vite::prefetch` method in the `boot` method of a [service provider](/docs/{{version}}/providers):"
msgstr ""

#: ./docs/9.x/vite.md:573
#: ./docs/10.x/vite.md:621
msgid "<?php\n\n"
"namespace Tests;\n\n"
"use Illuminate\\Foundation\\Testing\\TestCase as BaseTestCase;\n\n"
"abstract class TestCase extends BaseTestCase\n"
"{\n"
"    use CreatesApplication;\n\n"
"    protected function setUp(): void// [tl! add:start]\n"
"    {\n"
"        parent::setUp();\n\n"
"        $this->withoutVite();\n"
"    }// [tl! add:end]\n"
"}"
msgstr ""

#: ./docs/11.x/vite.md:575
msgid "<?php\n\n"
"namespace App\\Providers;\n\n"
"use Illuminate\\Support\\Facades\\Vite;\n"
"use Illuminate\\Support\\ServiceProvider;\n\n"
"class AppServiceProvider extends ServiceProvider\n"
"{\n"
"    /**\n"
"     * Register any application services.\n"
"     */\n"
"    public function register(): void\n"
"    {\n"
"        // ...\n"
"    }\n\n"
"    /**\n"
"     * Bootstrap any application services.\n"
"     */\n"
"    public function boot(): void\n"
"    {\n"
"        Vite::prefetch(concurrency: 3);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/9.x/vite.md:593
#: ./docs/10.x/vite.md:641
#: ./docs/11.x/vite.md:718
#: ./docs/master/vite.md:647
#~ msgctxt "P"
#~ msgid "<a name=\"ssr\"></a>"
#~ msgstr ""

#: ./docs/9.x/vite.md:594
#: ./docs/10.x/vite.md:642
#: ./docs/11.x/vite.md:719
#: ./docs/master/vite.md:648
msgid "Server-Side Rendering (SSR)"
msgstr ""

#: ./docs/9.x/vite.md:596
#: ./docs/10.x/vite.md:644
#: ./docs/11.x/vite.md:721
#: ./docs/master/vite.md:650
msgid "The Laravel Vite plugin makes it painless to set up server-side rendering with Vite. To get started, create an SSR entry point at `resources/js/ssr.js` and specify the entry point by passing a configuration option to the Laravel plugin:"
msgstr ""

#: ./docs/9.x/vite.md:598
#: ./docs/10.x/vite.md:646
#: ./docs/11.x/vite.md:723
#: ./docs/master/vite.md:652
msgid "import { defineConfig } from 'vite';\n"
"import laravel from 'laravel-vite-plugin';\n\n"
"export default defineConfig({\n"
"    plugins: [\n"
"        laravel({\n"
"            input: 'resources/js/app.js',\n"
"            ssr: 'resources/js/ssr.js',\n"
"        }),\n"
"    ],\n"
"});"
msgstr ""

#: ./docs/10.x/vite.md:599
#: ./docs/11.x/vite.md:670
#: ./docs/master/vite.md:599
msgid "Disabling Vite in Tests"
msgstr ""

#: ./docs/10.x/vite.md:603
#: ./docs/11.x/vite.md:674
#: ./docs/master/vite.md:603
msgid "If you would prefer to mock Vite during testing, you may call the `withoutVite` method, which is available for any tests that extend Laravel's `TestCase` class:"
msgstr ""

#: ./docs/11.x/vite.md:603
msgid "In the example above, assets will be prefetched with a maximum of `3` concurrent downloads on each page load. You can modify the concurrency to suit your application's needs or specify no concurrency limit if the application should download all assets at once:"
msgstr ""

#: ./docs/10.x/vite.md:605
#: ./docs/11.x/vite.md:684
#: ./docs/master/vite.md:613
msgid "use Tests\\TestCase;\n\n"
"class ExampleTest extends TestCase\n"
"{\n"
"    public function test_without_vite_example(): void\n"
"    {\n"
"        $this->withoutVite();\n\n"
"        // ...\n"
"    }\n"
"}"
msgstr ""

#: ./docs/11.x/vite.md:605
msgid "/**\n"
" * Bootstrap any application services.\n"
" */\n"
"public function boot(): void\n"
"{\n"
"    Vite::prefetch();\n"
"}"
msgstr ""

#: ./docs/9.x/vite.md:612
#: ./docs/10.x/vite.md:660
#: ./docs/11.x/vite.md:737
#: ./docs/master/vite.md:666
msgid "To ensure you don't forget to rebuild the SSR entry point, we recommend augmenting the \"build\" script in your application's `package.json` to create your SSR build:"
msgstr ""

#: ./docs/9.x/vite.md:614
#: ./docs/10.x/vite.md:662
#: ./docs/11.x/vite.md:739
#: ./docs/master/vite.md:668
msgid "\"scripts\": {\n"
"     \"dev\": \"vite\",\n"
"     \"build\": \"vite build\" // [tl! remove]\n"
"     \"build\": \"vite build && vite build --ssr\" // [tl! add]\n"
"}"
msgstr ""

#: ./docs/11.x/vite.md:615
msgid "By default, prefetching will begin when the [page *load* event](https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event) fires. If you would like to customize when prefetching begins, you may specify an event that Vite will listen for:"
msgstr ""

#: ./docs/11.x/vite.md:617
msgid "/**\n"
" * Bootstrap any application services.\n"
" */\n"
"public function boot(): void\n"
"{\n"
"    Vite::prefetch(event: 'vite:prefetch');\n"
"}"
msgstr ""

#: ./docs/9.x/vite.md:622
#: ./docs/10.x/vite.md:670
#: ./docs/11.x/vite.md:747
#: ./docs/master/vite.md:676
msgid "Then, to build and start the SSR server, you may run the following commands:"
msgstr ""

#: ./docs/9.x/vite.md:624
msgid "npm run build\n"
"node bootstrap/ssr/ssr.mjs"
msgstr ""

#: ./docs/11.x/vite.md:627
msgid "Given the code above, prefetching will now begin when you manually dispatch the `vite:prefetch` event on the `window` object. For example, you could have prefetching begin three seconds after the page loads:"
msgstr ""

#: ./docs/11.x/vite.md:629
msgid "<script>\n"
"    addEventListener('load', () => setTimeout(() => {\n"
"        dispatchEvent(new Event('vite:prefetch'))\n"
"    }, 3000))\n"
"</script>"
msgstr ""

#: ./docs/9.x/vite.md:630
#: ./docs/10.x/vite.md:684
#: ./docs/11.x/vite.md:761
#: ./docs/master/vite.md:690
msgid "Laravel's [starter kits](/docs/{{version}}/starter-kits) already include the proper Laravel, Inertia SSR, and Vite configuration. Check out [Laravel Breeze](/docs/{{version}}/starter-kits#breeze-and-inertia) for the fastest way to get started with Laravel, Inertia SSR, and Vite."
msgstr ""

#: ./docs/9.x/vite.md:632
#: ./docs/10.x/vite.md:686
#: ./docs/11.x/vite.md:763
#: ./docs/master/vite.md:692
#~ msgctxt "P"
#~ msgid "<a name=\"script-and-style-attributes\"></a>"
#~ msgstr ""

#: ./docs/9.x/vite.md:633
msgid "Script & Style Tag Attributes"
msgstr ""

#: ./docs/9.x/vite.md:635
#: ./docs/10.x/vite.md:689
#: ./docs/11.x/vite.md:766
#: ./docs/master/vite.md:695
#~ msgctxt "P"
#~ msgid "<a name=\"content-security-policy-csp-nonce\"></a>"
#~ msgstr ""

#: ./docs/9.x/vite.md:636
#: ./docs/10.x/vite.md:690
#: ./docs/11.x/vite.md:767
#: ./docs/master/vite.md:696
msgid "Content Security Policy (CSP) Nonce"
msgstr ""

#: ./docs/9.x/vite.md:638
#: ./docs/10.x/vite.md:692
#: ./docs/11.x/vite.md:769
#: ./docs/master/vite.md:698
msgid "If you wish to include a [`nonce` attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce) on your script and style tags as part of your [Content Security Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP), you may generate or specify a nonce using the `useCspNonce` method within a custom [middleware](/docs/{{version}}/middleware):"
msgstr ""

#: ./docs/9.x/vite.md:640
msgid "<?php\n\n"
"namespace App\\Http\\Middleware;\n\n"
"use Closure;\n"
"use Illuminate\\Support\\Facades\\Vite;\n\n"
"class AddContentSecurityPolicyHeaders\n"
"{\n"
"    /**\n"
"     * Handle an incoming request.\n"
"     *\n"
"     * @param  \\Illuminate\\Http\\Request  $request\n"
"     * @param  \\Closure  $next\n"
"     * @return mixed\n"
"     */\n"
"    public function handle($request, Closure $next)\n"
"    {\n"
"        Vite::useCspNonce();\n\n"
"        return $next($request)->withHeaders([\n"
"            'Content-Security-Policy' => \"script-src 'nonce-\".Vite::cspNonce().\"'\",\n"
"        ]);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/9.x/vite.md:668
#: ./docs/10.x/vite.md:722
#: ./docs/11.x/vite.md:799
#: ./docs/master/vite.md:728
msgid "After invoking the `useCspNonce` method, Laravel will automatically include the `nonce` attributes on all generated script and style tags."
msgstr ""

#: ./docs/9.x/vite.md:670
#: ./docs/10.x/vite.md:724
#: ./docs/11.x/vite.md:801
#: ./docs/master/vite.md:730
msgid "If you need to specify the nonce elsewhere, including the [Ziggy `@route` directive](https://github.com/tighten/ziggy#using-routes-with-a-content-security-policy) included with Laravel's [starter kits](/docs/{{version}}/starter-kits), you may retrieve it using the `cspNonce` method:"
msgstr ""

#: ./docs/10.x/vite.md:672
#: ./docs/11.x/vite.md:749
#: ./docs/master/vite.md:678
msgid "npm run build\n"
"node bootstrap/ssr/ssr.js"
msgstr ""

#: ./docs/9.x/vite.md:672
#: ./docs/10.x/vite.md:726
#: ./docs/11.x/vite.md:803
#: ./docs/master/vite.md:732
msgid "@routes(nonce: Vite::cspNonce())"
msgstr ""

#: ./docs/11.x/vite.md:676
#: ./docs/master/vite.md:605
msgid "test('without vite example', function () {\n"
"    $this->withoutVite();\n\n"
"    // ...\n"
"});"
msgstr ""

#: ./docs/9.x/vite.md:676
#: ./docs/10.x/vite.md:730
#: ./docs/11.x/vite.md:807
#: ./docs/master/vite.md:736
msgid "If you already have a nonce that you would like to instruct Laravel to use, you may pass the nonce to the `useCspNonce` method:"
msgstr ""

#: ./docs/10.x/vite.md:677
#: ./docs/11.x/vite.md:754
#: ./docs/master/vite.md:683
msgid "If you are using [SSR with Inertia](https://inertiajs.com/server-side-rendering), you may instead use the `inertia:start-ssr` Artisan command to start the SSR server:"
msgstr ""

#: ./docs/9.x/vite.md:678
#: ./docs/10.x/vite.md:732
#: ./docs/11.x/vite.md:809
#: ./docs/master/vite.md:738
msgid "Vite::useCspNonce($nonce);"
msgstr ""

#: ./docs/10.x/vite.md:679
#: ./docs/11.x/vite.md:756
#: ./docs/master/vite.md:685
msgid "php artisan inertia:start-ssr"
msgstr ""

#: ./docs/9.x/vite.md:682
#: ./docs/10.x/vite.md:736
#: ./docs/11.x/vite.md:813
#: ./docs/master/vite.md:742
#~ msgctxt "P"
#~ msgid "<a name=\"subresource-integrity-sri\"></a>"
#~ msgstr ""

#: ./docs/9.x/vite.md:683
#: ./docs/10.x/vite.md:737
#: ./docs/11.x/vite.md:814
#: ./docs/master/vite.md:743
msgid "Subresource Integrity (SRI)"
msgstr ""

#: ./docs/9.x/vite.md:685
#: ./docs/10.x/vite.md:739
#: ./docs/11.x/vite.md:816
#: ./docs/master/vite.md:745
msgid "If your Vite manifest includes `integrity` hashes for your assets, Laravel will automatically add the `integrity` attribute on any script and style tags it generates in order to enforce [Subresource Integrity](https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity). By default, Vite does not include the `integrity` hash in its manifest, but you may enable it by installing the [`vite-plugin-manifest-sri`](https://www.npmjs.com/package/vite-plugin-manifest-sri) NPM plugin:"
msgstr ""

#: ./docs/10.x/vite.md:687
#: ./docs/11.x/vite.md:764
#: ./docs/master/vite.md:693
msgid "Script and Style Tag Attributes"
msgstr ""

#: ./docs/9.x/vite.md:687
#: ./docs/10.x/vite.md:741
#: ./docs/11.x/vite.md:818
#: ./docs/master/vite.md:747
msgid "npm install --save-dev vite-plugin-manifest-sri"
msgstr ""

#: ./docs/9.x/vite.md:691
#: ./docs/10.x/vite.md:745
#: ./docs/11.x/vite.md:822
#: ./docs/master/vite.md:751
msgid "You may then enable this plugin in your `vite.config.js` file:"
msgstr ""

#: ./docs/9.x/vite.md:693
#: ./docs/10.x/vite.md:747
#: ./docs/11.x/vite.md:824
#: ./docs/master/vite.md:753
msgid "import { defineConfig } from 'vite';\n"
"import laravel from 'laravel-vite-plugin';\n"
"import manifestSRI from 'vite-plugin-manifest-sri';// [tl! add]\n\n"
"export default defineConfig({\n"
"    plugins: [\n"
"        laravel({\n"
"            // ...\n"
"        }),\n"
"        manifestSRI(),// [tl! add]\n"
"    ],\n"
"});"
msgstr ""

#: ./docs/10.x/vite.md:694
#: ./docs/11.x/vite.md:771
#: ./docs/master/vite.md:700
msgid "<?php\n\n"
"namespace App\\Http\\Middleware;\n\n"
"use Closure;\n"
"use Illuminate\\Http\\Request;\n"
"use Illuminate\\Support\\Facades\\Vite;\n"
"use Symfony\\Component\\HttpFoundation\\Response;\n\n"
"class AddContentSecurityPolicyHeaders\n"
"{\n"
"    /**\n"
"     * Handle an incoming request.\n"
"     *\n"
"     * @param  \\Closure(\\Illuminate\\Http\\Request): (\\Symfony\\Component\\HttpFoundation\\Response)  $next\n"
"     */\n"
"    public function handle(Request $request, Closure $next): Response\n"
"    {\n"
"        Vite::useCspNonce();\n\n"
"        return $next($request)->withHeaders([\n"
"            'Content-Security-Policy' => \"script-src 'nonce-\".Vite::cspNonce().\"'\",\n"
"        ]);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/11.x/vite.md:700
#: ./docs/master/vite.md:629
msgid "<?php\n\n"
"namespace Tests;\n\n"
"use Illuminate\\Foundation\\Testing\\TestCase as BaseTestCase;\n\n"
"abstract class TestCase extends BaseTestCase\n"
"{\n"
"    protected function setUp(): void// [tl! add:start]\n"
"    {\n"
"        parent::setUp();\n\n"
"        $this->withoutVite();\n"
"    }// [tl! add:end]\n"
"}"
msgstr ""

#: ./docs/9.x/vite.md:708
#: ./docs/10.x/vite.md:762
#: ./docs/11.x/vite.md:839
#: ./docs/master/vite.md:768
msgid "If required, you may also customize the manifest key where the integrity hash can be found:"
msgstr ""

#: ./docs/9.x/vite.md:710
#: ./docs/10.x/vite.md:764
#: ./docs/11.x/vite.md:841
#: ./docs/master/vite.md:770
msgid "use Illuminate\\Support\\Facades\\Vite;\n\n"
"Vite::useIntegrityKey('custom-integrity-key');"
msgstr ""

#: ./docs/9.x/vite.md:716
#: ./docs/10.x/vite.md:770
#: ./docs/11.x/vite.md:847
#: ./docs/master/vite.md:776
msgid "If you would like to disable this auto-detection completely, you may pass `false` to the `useIntegrityKey` method:"
msgstr ""

#: ./docs/9.x/vite.md:718
#: ./docs/10.x/vite.md:772
#: ./docs/11.x/vite.md:849
#: ./docs/master/vite.md:778
msgid "Vite::useIntegrityKey(false);"
msgstr ""

#: ./docs/9.x/vite.md:722
#: ./docs/10.x/vite.md:776
#: ./docs/11.x/vite.md:853
#: ./docs/master/vite.md:782
#~ msgctxt "P"
#~ msgid "<a name=\"arbitrary-attributes\"></a>"
#~ msgstr ""

#: ./docs/9.x/vite.md:723
#: ./docs/10.x/vite.md:777
#: ./docs/11.x/vite.md:854
#: ./docs/master/vite.md:783
msgid "Arbitrary Attributes"
msgstr ""

#: ./docs/9.x/vite.md:725
#: ./docs/10.x/vite.md:779
#: ./docs/11.x/vite.md:856
#: ./docs/master/vite.md:785
msgid "If you need to include additional attributes on your script and style tags, such as the [`data-turbo-track`](https://turbo.hotwired.dev/handbook/drive#reloading-when-assets-change) attribute, you may specify them via the `useScriptTagAttributes` and `useStyleTagAttributes` methods. Typically, this methods should be invoked from a [service provider](/docs/{{version}}/providers):"
msgstr ""

#: ./docs/9.x/vite.md:727
#: ./docs/10.x/vite.md:781
#: ./docs/11.x/vite.md:858
#: ./docs/master/vite.md:787
msgid "use Illuminate\\Support\\Facades\\Vite;\n\n"
"Vite::useScriptTagAttributes([\n"
"    'data-turbo-track' => 'reload', // Specify a value for the attribute...\n"
"    'async' => true, // Specify an attribute without a value...\n"
"    'integrity' => false, // Exclude an attribute that would otherwise be included...\n"
"]);\n\n"
"Vite::useStyleTagAttributes([\n"
"    'data-turbo-track' => 'reload',\n"
"]);"
msgstr ""

#: ./docs/9.x/vite.md:741
#: ./docs/10.x/vite.md:795
#: ./docs/11.x/vite.md:872
#: ./docs/master/vite.md:801
msgid "If you need to conditionally add attributes, you may pass a callback that will receive the asset source path, its URL, its manifest chunk, and the entire manifest:"
msgstr ""

#: ./docs/9.x/vite.md:743
#: ./docs/10.x/vite.md:797
#: ./docs/11.x/vite.md:874
#: ./docs/master/vite.md:803
msgid "use Illuminate\\Support\\Facades\\Vite;\n\n"
"Vite::useScriptTagAttributes(fn (string $src, string $url, array|null $chunk, array|null $manifest) => [\n"
"    'data-turbo-track' => $src === 'resources/js/app.js' ? 'reload' : false,\n"
"]);\n\n"
"Vite::useStyleTagAttributes(fn (string $src, string $url, array|null $chunk, array|null $manifest) => [\n"
"    'data-turbo-track' => $chunk && $chunk['isEntry'] ? 'reload' : false,\n"
"]);"
msgstr ""

#: ./docs/9.x/vite.md:756
#: ./docs/10.x/vite.md:810
#: ./docs/11.x/vite.md:887
#: ./docs/master/vite.md:816
msgid "The `$chunk` and `$manifest` arguments will be `null` while the Vite development server is running."
msgstr ""

#: ./docs/9.x/vite.md:758
#: ./docs/10.x/vite.md:812
#: ./docs/11.x/vite.md:889
#: ./docs/master/vite.md:818
#~ msgctxt "P"
#~ msgid "<a name=\"advanced-customization\"></a>"
#~ msgstr ""

#: ./docs/9.x/vite.md:759
#: ./docs/10.x/vite.md:813
#: ./docs/11.x/vite.md:890
#: ./docs/master/vite.md:819
msgid "Advanced Customization"
msgstr ""

#: ./docs/9.x/vite.md:761
#: ./docs/10.x/vite.md:815
#: ./docs/11.x/vite.md:892
#: ./docs/master/vite.md:821
msgid "Out of the box, Laravel's Vite plugin uses sensible conventions that should work for the majority of applications; however, sometimes you may need to customize Vite's behavior. To enable additional customization options, we offer the following methods and options which can be used in place of the `@vite` Blade directive:"
msgstr ""

#: ./docs/9.x/vite.md:763
msgid "<!doctype html>\n"
"<head>\n"
"    {{-- ... --}}\n\n"
"    {{\n"
"        Vite::useHotFile(storage_path('vite.hot')) // Customize the \"hot\" file...\n"
"            ->useBuildDirectory('bundle') // Customize the build directory...\n"
"            ->useManifestFilename('assets.json') // Customize the manifest filename...\n"
"            ->withEntryPoints(['resources/js/app.js']) // Specify the entry points...\n"
"    }}\n"
"</head>"
msgstr ""

#: ./docs/9.x/vite.md:777
#: ./docs/10.x/vite.md:834
#: ./docs/11.x/vite.md:911
#: ./docs/master/vite.md:840
msgid "Within the `vite.config.js` file, you should then specify the same configuration:"
msgstr ""

#: ./docs/9.x/vite.md:779
#: ./docs/10.x/vite.md:836
#: ./docs/11.x/vite.md:913
#: ./docs/master/vite.md:842
msgid "import { defineConfig } from 'vite';\n"
"import laravel from 'laravel-vite-plugin';\n\n"
"export default defineConfig({\n"
"    plugins: [\n"
"        laravel({\n"
"            hotFile: 'storage/vite.hot', // Customize the \"hot\" file...\n"
"            buildDirectory: 'bundle', // Customize the build directory...\n"
"            input: ['resources/js/app.js'], // Specify the entry points...\n"
"        }),\n"
"    ],\n"
"    build: {\n"
"      manifest: 'assets.json', // Customize the manifest filename...\n"
"    },\n"
"});"
msgstr ""

#: ./docs/9.x/vite.md:797
#: ./docs/10.x/vite.md:854
#: ./docs/11.x/vite.md:931
#: ./docs/master/vite.md:860
#~ msgctxt "P"
#~ msgid "<a name=\"correcting-dev-server-urls\"></a>"
#~ msgstr ""

#: ./docs/9.x/vite.md:798
#: ./docs/10.x/vite.md:855
#: ./docs/11.x/vite.md:932
#: ./docs/master/vite.md:861
msgid "Correcting Dev Server URLs"
msgstr ""

#: ./docs/9.x/vite.md:800
#: ./docs/10.x/vite.md:857
#: ./docs/11.x/vite.md:934
#: ./docs/master/vite.md:863
msgid "Some plugins within the Vite ecosystem assume that URLs which begin with a forward-slash will always point to the Vite dev server. However, due to the nature of the Laravel integration, this is not the case."
msgstr ""

#: ./docs/9.x/vite.md:802
#: ./docs/10.x/vite.md:859
#: ./docs/11.x/vite.md:936
#: ./docs/master/vite.md:865
msgid "For example, the `vite-imagetools` plugin outputs URLs like the following while Vite is serving your assets:"
msgstr ""

#: ./docs/9.x/vite.md:804
#: ./docs/10.x/vite.md:861
#: ./docs/11.x/vite.md:938
#: ./docs/master/vite.md:867
msgid "<img src=\"/@imagetools/f0b2f404b13f052c604e632f2fb60381bf61a520\">"
msgstr ""

#: ./docs/9.x/vite.md:808
#: ./docs/10.x/vite.md:865
#: ./docs/11.x/vite.md:942
#: ./docs/master/vite.md:871
msgid "The `vite-imagetools` plugin is expecting that the output URL will be intercepted by Vite and the plugin may then handle all URLs that start with `/@imagetools`. If you are using plugins that are expecting this behaviour, you will need to manually correct the URLs. You can do this in your `vite.config.js` file by using the `transformOnServe` option."
msgstr ""

#: ./docs/9.x/vite.md:810
msgid "In this particular example, we will append the dev server URL to all occurrences of `/@imagetools` within the generated code:"
msgstr ""

#: ./docs/9.x/vite.md:812
#: ./docs/10.x/vite.md:869
#: ./docs/11.x/vite.md:946
#: ./docs/master/vite.md:875
msgid "import { defineConfig } from 'vite';\n"
"import laravel from 'laravel-vite-plugin';\n"
"import { imagetools } from 'vite-imagetools';\n\n"
"export default defineConfig({\n"
"    plugins: [\n"
"        laravel({\n"
"            // ...\n"
"            transformOnServe: (code, devServerUrl) => code.replaceAll('/@imagetools', devServerUrl+'/@imagetools'),\n"
"        }),\n"
"        imagetools(),\n"
"    ],\n"
"});"
msgstr ""

#: ./docs/10.x/vite.md:817
#: ./docs/11.x/vite.md:894
#: ./docs/master/vite.md:823
msgid "<!doctype html>\n"
"<head>\n"
"    {{-- ... --}}\n\n"
"    {{\n"
"        Vite::useHotFile(storage_path('vite.hot')) // Customize the \"hot\" file...\n"
"            ->useBuildDirectory('bundle') // Customize the build directory...\n"
"            ->useManifestFilename('assets.json') // Customize the manifest filename...\n"
"            ->withEntryPoints(['resources/js/app.js']) // Specify the entry points...\n"
"            ->createAssetPathsUsing(function (string $path, ?bool $secure) { // Customize the backend path generation for built assets...\n"
"                return \"https://cdn.example.com/{$path}\";\n"
"            })\n"
"    }}\n"
"</head>"
msgstr ""

#: ./docs/9.x/vite.md:828
#: ./docs/10.x/vite.md:885
#: ./docs/11.x/vite.md:962
#: ./docs/master/vite.md:891
msgid "Now, while Vite is serving Assets, it will output URLs that point to the Vite dev server:"
msgstr ""

#: ./docs/9.x/vite.md:830
#: ./docs/10.x/vite.md:887
#: ./docs/11.x/vite.md:964
#: ./docs/master/vite.md:893
msgid "- <img src=\"/@imagetools/f0b2f404b13f052c604e632f2fb60381bf61a520\"><!-- [tl! remove] -->\n"
"+ <img src=\"http://[::1]:5173/@imagetools/f0b2f404b13f052c604e632f2fb60381bf61a520\"><!-- [tl! add] -->"
msgstr ""

#: ./docs/10.x/vite.md:867
#: ./docs/11.x/vite.md:944
#: ./docs/master/vite.md:873
msgid "In this particular example, we will prepend the dev server URL to all occurrences of `/@imagetools` within the generated code:"
msgstr ""

