# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Taylor Otwell
# This file is distributed under the same license as the Laravel Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2021-09-13 05:07+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title #
#: docs/8.x/helpers.md:1
#, no-wrap
msgid "Helpers"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:5
msgid "- [Introduction](#introduction)  - [Available Methods](#available-methods)"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:7
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/helpers.md:7
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:10
msgid ""
"Laravel includes a variety of global \"helper\" PHP functions. Many of these "
"functions are used by the framework itself; however, you are free to use "
"them in your own applications if you find them convenient."
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:12
#, no-wrap
msgid "<a name=\"available-methods\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/helpers.md:12
#, no-wrap
msgid "Available Methods"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:19
#, no-wrap
msgid ""
"<style>\n"
"    .collection-method-list > p {\n"
"        column-count: 3; -moz-column-count: 3; -webkit-column-count: 3;\n"
"        column-gap: 2em; -moz-column-gap: 2em; -webkit-column-gap: 2em;\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:24
#, no-wrap
msgid ""
"    .collection-method-list a {\n"
"        display: block;\n"
"    }\n"
"</style>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:26
#, no-wrap
msgid "<a name=\"arrays-and-objects-method-list\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/helpers.md:26 docs/8.x/helpers.md:291
#, no-wrap
msgid "Arrays & Objects"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:29 docs/8.x/helpers.md:70 docs/8.x/helpers.md:86 docs/8.x/helpers.md:145 docs/8.x/helpers.md:212 docs/8.x/helpers.md:226
#, no-wrap
msgid "<div class=\"collection-method-list\" markdown=\"1\">\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:65
#, no-wrap
msgid ""
"[Arr::accessible](#method-array-accessible)\n"
"[Arr::add](#method-array-add)\n"
"[Arr::collapse](#method-array-collapse)\n"
"[Arr::crossJoin](#method-array-crossjoin)\n"
"[Arr::divide](#method-array-divide)\n"
"[Arr::dot](#method-array-dot)\n"
"[Arr::except](#method-array-except)\n"
"[Arr::exists](#method-array-exists)\n"
"[Arr::first](#method-array-first)\n"
"[Arr::flatten](#method-array-flatten)\n"
"[Arr::forget](#method-array-forget)\n"
"[Arr::get](#method-array-get)\n"
"[Arr::has](#method-array-has)\n"
"[Arr::hasAny](#method-array-hasany)\n"
"[Arr::isAssoc](#method-array-isassoc)\n"
"[Arr::last](#method-array-last)\n"
"[Arr::only](#method-array-only)\n"
"[Arr::pluck](#method-array-pluck)\n"
"[Arr::prepend](#method-array-prepend)\n"
"[Arr::pull](#method-array-pull)\n"
"[Arr::query](#method-array-query)\n"
"[Arr::random](#method-array-random)\n"
"[Arr::set](#method-array-set)\n"
"[Arr::shuffle](#method-array-shuffle)\n"
"[Arr::sort](#method-array-sort)\n"
"[Arr::sortRecursive](#method-array-sort-recursive)\n"
"[Arr::toCssClasses](#method-array-to-css-classes)\n"
"[Arr::where](#method-array-where)\n"
"[Arr::wrap](#method-array-wrap)\n"
"[data_fill](#method-data-fill)\n"
"[data_get](#method-data-get)\n"
"[data_set](#method-data-set)\n"
"[head](#method-head)\n"
"[last](#method-last)\n"
"</div>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:67
#, no-wrap
msgid "<a name=\"paths-method-list\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/helpers.md:67 docs/8.x/helpers.md:959
#, no-wrap
msgid "Paths"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:79
msgid ""
"[app_path](#method-app-path)  [base_path](#method-base-path)  "
"[config_path](#method-config-path)  [database_path](#method-database-path)  "
"[mix](#method-mix)  [public_path](#method-public-path)  "
"[resource_path](#method-resource-path)  [storage_path](#method-storage-path)"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:81 docs/8.x/helpers.md:140 docs/8.x/helpers.md:207 docs/8.x/helpers.md:221 docs/8.x/helpers.md:276
#, no-wrap
msgid "</div>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:83
#, no-wrap
msgid "<a name=\"strings-method-list\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/helpers.md:83 docs/8.x/helpers.md:1032
#, no-wrap
msgid "Strings"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:138
msgid ""
"[\\__](#method-__)  [class_basename](#method-class-basename)  [e](#method-e)  "
"[preg_replace_array](#method-preg-replace-array)  "
"[Str::after](#method-str-after)  [Str::afterLast](#method-str-after-last)  "
"[Str::ascii](#method-str-ascii)  [Str::before](#method-str-before)  "
"[Str::beforeLast](#method-str-before-last)  "
"[Str::between](#method-str-between)  [Str::camel](#method-camel-case)  "
"[Str::contains](#method-str-contains)  "
"[Str::containsAll](#method-str-contains-all)  "
"[Str::endsWith](#method-ends-with)  [Str::finish](#method-str-finish)  "
"[Str::is](#method-str-is)  [Str::isAscii](#method-str-is-ascii)  "
"[Str::isUuid](#method-str-is-uuid)  [Str::kebab](#method-kebab-case)  "
"[Str::length](#method-str-length)  [Str::limit](#method-str-limit)  "
"[Str::lower](#method-str-lower)  [Str::markdown](#method-str-markdown)  "
"[Str::orderedUuid](#method-str-ordered-uuid)  "
"[Str::padBoth](#method-str-padboth)  [Str::padLeft](#method-str-padleft)  "
"[Str::padRight](#method-str-padright)  [Str::plural](#method-str-plural)  "
"[Str::pluralStudly](#method-str-plural-studly)  "
"[Str::random](#method-str-random)  [Str::remove](#method-str-remove)  "
"[Str::replace](#method-str-replace)  "
"[Str::replaceArray](#method-str-replace-array)  "
"[Str::replaceFirst](#method-str-replace-first)  "
"[Str::replaceLast](#method-str-replace-last)  "
"[Str::singular](#method-str-singular)  [Str::slug](#method-str-slug)  "
"[Str::snake](#method-snake-case)  [Str::start](#method-str-start)  "
"[Str::startsWith](#method-starts-with)  [Str::studly](#method-studly-case)  "
"[Str::substr](#method-str-substr)  "
"[Str::substrCount](#method-str-substrcount)  "
"[Str::title](#method-title-case)  [Str::ucfirst](#method-str-ucfirst)  "
"[Str::upper](#method-str-upper)  [Str::uuid](#method-str-uuid)  "
"[Str::wordCount](#method-str-word-count)  [Str::words](#method-str-words)  "
"[trans](#method-trans)  [trans_choice](#method-trans-choice)"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:142
#, no-wrap
msgid "<a name=\"fluent-strings-method-list\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/helpers.md:142 docs/8.x/helpers.md:1703
#, no-wrap
msgid "Fluent Strings"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:205
msgid ""
"[after](#method-fluent-str-after)  "
"[afterLast](#method-fluent-str-after-last)  "
"[append](#method-fluent-str-append)  [ascii](#method-fluent-str-ascii)  "
"[basename](#method-fluent-str-basename)  [before](#method-fluent-str-before)  "
"[beforeLast](#method-fluent-str-before-last)  "
"[camel](#method-fluent-str-camel)  [contains](#method-fluent-str-contains)  "
"[containsAll](#method-fluent-str-contains-all)  "
"[dirname](#method-fluent-str-dirname)  "
"[endsWith](#method-fluent-str-ends-with)  "
"[exactly](#method-fluent-str-exactly)  [explode](#method-fluent-str-explode)  "
"[finish](#method-fluent-str-finish)  [is](#method-fluent-str-is)  "
"[isAscii](#method-fluent-str-is-ascii)  "
"[isEmpty](#method-fluent-str-is-empty)  "
"[isNotEmpty](#method-fluent-str-is-not-empty)  "
"[isUuid](#method-fluent-str-is-uuid)  [kebab](#method-fluent-str-kebab)  "
"[length](#method-fluent-str-length)  [limit](#method-fluent-str-limit)  "
"[lower](#method-fluent-str-lower)  [ltrim](#method-fluent-str-ltrim)  "
"[markdown](#method-fluent-str-markdown)  [match](#method-fluent-str-match)  "
"[matchAll](#method-fluent-str-match-all)  "
"[padBoth](#method-fluent-str-padboth)  [padLeft](#method-fluent-str-padleft)  "
"[padRight](#method-fluent-str-padright)  [pipe](#method-fluent-str-pipe)  "
"[plural](#method-fluent-str-plural)  [prepend](#method-fluent-str-prepend)  "
"[remove](#method-fluent-str-remove)  [replace](#method-fluent-str-replace)  "
"[replaceArray](#method-fluent-str-replace-array)  "
"[replaceFirst](#method-fluent-str-replace-first)  "
"[replaceLast](#method-fluent-str-replace-last)  "
"[replaceMatches](#method-fluent-str-replace-matches)  "
"[rtrim](#method-fluent-str-rtrim)  [singular](#method-fluent-str-singular)  "
"[slug](#method-fluent-str-slug)  [snake](#method-fluent-str-snake)  "
"[split](#method-fluent-str-split)  [start](#method-fluent-str-start)  "
"[startsWith](#method-fluent-str-starts-with)  "
"[studly](#method-fluent-str-studly)  [substr](#method-fluent-str-substr)  "
"[tap](#method-fluent-str-tap)  [test](#method-fluent-str-test)  "
"[title](#method-fluent-str-title)  [trim](#method-fluent-str-trim)  "
"[ucfirst](#method-fluent-str-ucfirst)  [upper](#method-fluent-str-upper)  "
"[when](#method-fluent-str-when)  [whenEmpty](#method-fluent-str-when-empty)  "
"[wordCount](#method-fluent-str-word-count)  "
"[words](#method-fluent-str-words)"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:209
#, no-wrap
msgid "<a name=\"urls-method-list\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/helpers.md:209 docs/8.x/helpers.md:2530
#, no-wrap
msgid "URLs"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:219
msgid ""
"[action](#method-action)  [asset](#method-asset)  [route](#method-route)  "
"[secure_asset](#method-secure-asset)  [secure_url](#method-secure-url)  "
"[url](#method-url)"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:223
#, no-wrap
msgid "<a name=\"miscellaneous-method-list\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/helpers.md:223 docs/8.x/helpers.md:2607
#, no-wrap
msgid "Miscellaneous"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:274
msgid ""
"[abort](#method-abort)  [abort_if](#method-abort-if)  "
"[abort_unless](#method-abort-unless)  [app](#method-app)  "
"[auth](#method-auth)  [back](#method-back)  [bcrypt](#method-bcrypt)  "
"[blank](#method-blank)  [broadcast](#method-broadcast)  "
"[cache](#method-cache)  [class_uses_recursive](#method-class-uses-recursive)  "
"[collect](#method-collect)  [config](#method-config)  "
"[cookie](#method-cookie)  [csrf_field](#method-csrf-field)  "
"[csrf_token](#method-csrf-token)  [dd](#method-dd)  "
"[dispatch](#method-dispatch)  [dump](#method-dump)  [env](#method-env)  "
"[event](#method-event)  [filled](#method-filled)  [info](#method-info)  "
"[logger](#method-logger)  [method_field](#method-method-field)  "
"[now](#method-now)  [old](#method-old)  [optional](#method-optional)  "
"[policy](#method-policy)  [redirect](#method-redirect)  "
"[report](#method-report)  [request](#method-request)  "
"[rescue](#method-rescue)  [resolve](#method-resolve)  "
"[response](#method-response)  [retry](#method-retry)  "
"[session](#method-session)  [tap](#method-tap)  [throw_if](#method-throw-if)  "
"[throw_unless](#method-throw-unless)  [today](#method-today)  "
"[trait_uses_recursive](#method-trait-uses-recursive)  "
"[transform](#method-transform)  [validator](#method-validator)  "
"[value](#method-value)  [view](#method-view)  [with](#method-with)"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:278
#, no-wrap
msgid "<a name=\"method-listing\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/helpers.md:278
#, no-wrap
msgid "Method Listing"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:284
#, no-wrap
msgid ""
"<style>\n"
"    #collection-method code {\n"
"        font-size: 14px;\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:289
#, no-wrap
msgid ""
"    #collection-method:not(.first-collection-method) {\n"
"        margin-top: 50px;\n"
"    }\n"
"</style>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:291
#, no-wrap
msgid "<a name=\"arrays\"></a>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:294
#, no-wrap
msgid "<a name=\"method-array-accessible\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:294
#, no-wrap
msgid "`Arr::accessible()` {#collection-method .first-collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:297
msgid ""
"The `Arr::accessible` method determines if the given value is array "
"accessible:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:300
#, no-wrap
msgid ""
"    use Illuminate\\Support\\Arr;\n"
"    use Illuminate\\Support\\Collection;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:302
#, no-wrap
msgid "    $isAccessible = Arr::accessible(['a' => 1, 'b' => 2]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:304 docs/8.x/helpers.md:308 docs/8.x/helpers.md:428 docs/8.x/helpers.md:513 docs/8.x/helpers.md:530 docs/8.x/helpers.md:534 docs/8.x/helpers.md:549 docs/8.x/helpers.md:1161 docs/8.x/helpers.md:1169 docs/8.x/helpers.md:1180 docs/8.x/helpers.md:1191 docs/8.x/helpers.md:1200 docs/8.x/helpers.md:1230 docs/8.x/helpers.md:1245 docs/8.x/helpers.md:1260 docs/8.x/helpers.md:1580 docs/8.x/helpers.md:1586 docs/8.x/helpers.md:1813 docs/8.x/helpers.md:1821 docs/8.x/helpers.md:1832 docs/8.x/helpers.md:1862 docs/8.x/helpers.md:1870 docs/8.x/helpers.md:1885 docs/8.x/helpers.md:1922 docs/8.x/helpers.md:1937 docs/8.x/helpers.md:1952 docs/8.x/helpers.md:1972 docs/8.x/helpers.md:1983 docs/8.x/helpers.md:2376 docs/8.x/helpers.md:2429 docs/8.x/helpers.md:2687 docs/8.x/helpers.md:2825 docs/8.x/helpers.md:3117
#, no-wrap
msgid "    // true\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:306
#, no-wrap
msgid "    $isAccessible = Arr::accessible(new Collection);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:310
#, no-wrap
msgid "    $isAccessible = Arr::accessible('abc');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:312 docs/8.x/helpers.md:316 docs/8.x/helpers.md:432 docs/8.x/helpers.md:517 docs/8.x/helpers.md:538 docs/8.x/helpers.md:553 docs/8.x/helpers.md:1204 docs/8.x/helpers.md:1234 docs/8.x/helpers.md:1249 docs/8.x/helpers.md:1264 docs/8.x/helpers.md:1874 docs/8.x/helpers.md:1926 docs/8.x/helpers.md:1941 docs/8.x/helpers.md:1956 docs/8.x/helpers.md:1968 docs/8.x/helpers.md:1987 docs/8.x/helpers.md:2693 docs/8.x/helpers.md:2832 docs/8.x/helpers.md:3123
#, no-wrap
msgid "    // false\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:314
#, no-wrap
msgid "    $isAccessible = Arr::accessible(new stdClass);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:318
#, no-wrap
msgid "<a name=\"method-array-add\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:318
#, no-wrap
msgid "`Arr::add()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:321
msgid ""
"The `Arr::add` method adds a given key / value pair to an array if the given "
"key doesn't already exist in the array or is set to `null`:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:323 docs/8.x/helpers.md:339 docs/8.x/helpers.md:350 docs/8.x/helpers.md:383 docs/8.x/helpers.md:396 docs/8.x/helpers.md:409 docs/8.x/helpers.md:422 docs/8.x/helpers.md:439 docs/8.x/helpers.md:451 docs/8.x/helpers.md:460 docs/8.x/helpers.md:473 docs/8.x/helpers.md:486 docs/8.x/helpers.md:496 docs/8.x/helpers.md:507 docs/8.x/helpers.md:524 docs/8.x/helpers.md:545 docs/8.x/helpers.md:560 docs/8.x/helpers.md:572 docs/8.x/helpers.md:581 docs/8.x/helpers.md:594 docs/8.x/helpers.md:607 docs/8.x/helpers.md:618 docs/8.x/helpers.md:628 docs/8.x/helpers.md:641 docs/8.x/helpers.md:653 docs/8.x/helpers.md:662 docs/8.x/helpers.md:681 docs/8.x/helpers.md:691 docs/8.x/helpers.md:702 docs/8.x/helpers.md:715 docs/8.x/helpers.md:726 docs/8.x/helpers.md:736 docs/8.x/helpers.md:761 docs/8.x/helpers.md:784 docs/8.x/helpers.md:804 docs/8.x/helpers.md:819 docs/8.x/helpers.md:829
#, no-wrap
msgid "    use Illuminate\\Support\\Arr;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:325
#, no-wrap
msgid "    $array = Arr::add(['name' => 'Desk'], 'price', 100);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:327 docs/8.x/helpers.md:331 docs/8.x/helpers.md:587 docs/8.x/helpers.md:634
#, no-wrap
msgid "    // ['name' => 'Desk', 'price' => 100]\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:329
#, no-wrap
msgid "    $array = Arr::add(['name' => 'Desk', 'price' => null], 'price', 100);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:334
#, no-wrap
msgid "<a name=\"method-array-collapse\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:334
#, no-wrap
msgid "`Arr::collapse()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:337
msgid "The `Arr::collapse` method collapses an array of arrays into a single array:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:341
#, no-wrap
msgid "    $array = Arr::collapse([[1, 2, 3], [4, 5, 6], [7, 8, 9]]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:343
#, no-wrap
msgid "    // [1, 2, 3, 4, 5, 6, 7, 8, 9]\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:345
#, no-wrap
msgid "<a name=\"method-array-crossjoin\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:345
#, no-wrap
msgid "`Arr::crossJoin()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:348
msgid ""
"The `Arr::crossJoin` method cross joins the given arrays, returning a "
"Cartesian product with all possible permutations:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:352
#, no-wrap
msgid "    $matrix = Arr::crossJoin([1, 2], ['a', 'b']);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:361
#, no-wrap
msgid ""
"    /*\n"
"        [\n"
"            [1, 'a'],\n"
"            [1, 'b'],\n"
"            [2, 'a'],\n"
"            [2, 'b'],\n"
"        ]\n"
"    */\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:363
#, no-wrap
msgid "    $matrix = Arr::crossJoin([1, 2], ['a', 'b'], ['I', 'II']);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:376
#, no-wrap
msgid ""
"    /*\n"
"        [\n"
"            [1, 'a', 'I'],\n"
"            [1, 'a', 'II'],\n"
"            [1, 'b', 'I'],\n"
"            [1, 'b', 'II'],\n"
"            [2, 'a', 'I'],\n"
"            [2, 'a', 'II'],\n"
"            [2, 'b', 'I'],\n"
"            [2, 'b', 'II'],\n"
"        ]\n"
"    */\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:378
#, no-wrap
msgid "<a name=\"method-array-divide\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:378
#, no-wrap
msgid "`Arr::divide()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:381
msgid ""
"The `Arr::divide` method returns two arrays: one containing the keys and the "
"other containing the values of the given array:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:385
#, no-wrap
msgid "    [$keys, $values] = Arr::divide(['name' => 'Desk']);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:387
#, no-wrap
msgid "    // $keys: ['name']\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:389
#, no-wrap
msgid "    // $values: ['Desk']\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:391
#, no-wrap
msgid "<a name=\"method-array-dot\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:391
#, no-wrap
msgid "`Arr::dot()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:394
msgid ""
"The `Arr::dot` method flattens a multi-dimensional array into a single level "
"array that uses \"dot\" notation to indicate depth:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:398 docs/8.x/helpers.md:475 docs/8.x/helpers.md:488 docs/8.x/helpers.md:704
#, no-wrap
msgid "    $array = ['products' => ['desk' => ['price' => 100]]];\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:400
#, no-wrap
msgid "    $flattened = Arr::dot($array);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:402
#, no-wrap
msgid "    // ['products.desk.price' => 100]\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:404
#, no-wrap
msgid "<a name=\"method-array-except\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:404
#, no-wrap
msgid "`Arr::except()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:407
msgid "The `Arr::except` method removes the given key / value pairs from an array:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:411 docs/8.x/helpers.md:643
#, no-wrap
msgid "    $array = ['name' => 'Desk', 'price' => 100];\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:413
#, no-wrap
msgid "    $filtered = Arr::except($array, ['price']);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:415
#, no-wrap
msgid "    // ['name' => 'Desk']\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:417
#, no-wrap
msgid "<a name=\"method-array-exists\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:417
#, no-wrap
msgid "`Arr::exists()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:420
msgid ""
"The `Arr::exists` method checks that the given key exists in the provided "
"array:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:424
#, no-wrap
msgid "    $array = ['name' => 'John Doe', 'age' => 17];\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:426
#, no-wrap
msgid "    $exists = Arr::exists($array, 'name');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:430
#, no-wrap
msgid "    $exists = Arr::exists($array, 'salary');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:434
#, no-wrap
msgid "<a name=\"method-array-first\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:434
#, no-wrap
msgid "`Arr::first()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:437
msgid ""
"The `Arr::first` method returns the first element of an array passing a "
"given truth test:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:441 docs/8.x/helpers.md:942 docs/8.x/helpers.md:953
#, no-wrap
msgid "    $array = [100, 200, 300];\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:445
#, no-wrap
msgid ""
"    $first = Arr::first($array, function ($value, $key) {\n"
"        return $value >= 150;\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:447
#, no-wrap
msgid "    // 200\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:449
msgid ""
"A default value may also be passed as the third parameter to the "
"method. This value will be returned if no value passes the truth test:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:453
#, no-wrap
msgid "    $first = Arr::first($array, $callback, $default);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:455
#, no-wrap
msgid "<a name=\"method-array-flatten\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:455
#, no-wrap
msgid "`Arr::flatten()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:458
msgid ""
"The `Arr::flatten` method flattens a multi-dimensional array into a single "
"level array:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:462
#, no-wrap
msgid "    $array = ['name' => 'Joe', 'languages' => ['PHP', 'Ruby']];\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:464
#, no-wrap
msgid "    $flattened = Arr::flatten($array);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:466
#, no-wrap
msgid "    // ['Joe', 'PHP', 'Ruby']\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:468
#, no-wrap
msgid "<a name=\"method-array-forget\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:468
#, no-wrap
msgid "`Arr::forget()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:471
msgid ""
"The `Arr::forget` method removes a given key / value pair from a deeply "
"nested array using \"dot\" notation:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:477
#, no-wrap
msgid "    Arr::forget($array, 'products.desk');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:479
#, no-wrap
msgid "    // ['products' => []]\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:481
#, no-wrap
msgid "<a name=\"method-array-get\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:481
#, no-wrap
msgid "`Arr::get()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:484
msgid ""
"The `Arr::get` method retrieves a value from a deeply nested array using "
"\"dot\" notation:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:490
#, no-wrap
msgid "    $price = Arr::get($array, 'products.desk.price');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:492 docs/8.x/helpers.md:879 docs/8.x/helpers.md:946
#, no-wrap
msgid "    // 100\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:494
msgid ""
"The `Arr::get` method also accepts a default value, which will be returned "
"if the specified key is not present in the array:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:498
#, no-wrap
msgid "    $discount = Arr::get($array, 'products.desk.discount', 0);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:500 docs/8.x/helpers.md:885 docs/8.x/helpers.md:3147
#, no-wrap
msgid "    // 0\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:502
#, no-wrap
msgid "<a name=\"method-array-has\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:502
#, no-wrap
msgid "`Arr::has()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:505
msgid ""
"The `Arr::has` method checks whether a given item or items exists in an "
"array using \"dot\" notation:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:509 docs/8.x/helpers.md:526
#, no-wrap
msgid "    $array = ['product' => ['name' => 'Desk', 'price' => 100]];\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:511
#, no-wrap
msgid "    $contains = Arr::has($array, 'product.name');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:515
#, no-wrap
msgid "    $contains = Arr::has($array, ['product.price', 'product.discount']);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:519
#, no-wrap
msgid "<a name=\"method-array-hasany\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:519
#, no-wrap
msgid "`Arr::hasAny()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:522
msgid ""
"The `Arr::hasAny` method checks whether any item in a given set exists in an "
"array using \"dot\" notation:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:528
#, no-wrap
msgid "    $contains = Arr::hasAny($array, 'product.name');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:532
#, no-wrap
msgid "    $contains = Arr::hasAny($array, ['product.name', 'product.discount']);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:536
#, no-wrap
msgid "    $contains = Arr::hasAny($array, ['category', 'product.discount']);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:540
#, no-wrap
msgid "<a name=\"method-array-isassoc\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:540
#, no-wrap
msgid "`Arr::isAssoc()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:543
msgid ""
"The `Arr::isAssoc` returns `true` if the given array is an associative "
"array. An array is considered \"associative\" if it doesn't have sequential "
"numerical keys beginning with zero:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:547
#, no-wrap
msgid ""
"    $isAssoc = Arr::isAssoc(['product' => ['name' => 'Desk', 'price' => "
"100]]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:551
#, no-wrap
msgid "    $isAssoc = Arr::isAssoc([1, 2, 3]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:555
#, no-wrap
msgid "<a name=\"method-array-last\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:555
#, no-wrap
msgid "`Arr::last()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:558
msgid ""
"The `Arr::last` method returns the last element of an array passing a given "
"truth test:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:562
#, no-wrap
msgid "    $array = [100, 200, 300, 110];\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:566
#, no-wrap
msgid ""
"    $last = Arr::last($array, function ($value, $key) {\n"
"        return $value >= 150;\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:568 docs/8.x/helpers.md:957
#, no-wrap
msgid "    // 300\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:570
msgid ""
"A default value may be passed as the third argument to the method. This "
"value will be returned if no value passes the truth test:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:574
#, no-wrap
msgid "    $last = Arr::last($array, $callback, $default);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:576
#, no-wrap
msgid "<a name=\"method-array-only\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:576
#, no-wrap
msgid "`Arr::only()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:579
msgid ""
"The `Arr::only` method returns only the specified key / value pairs from the "
"given array:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:583
#, no-wrap
msgid "    $array = ['name' => 'Desk', 'price' => 100, 'orders' => 10];\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:585
#, no-wrap
msgid "    $slice = Arr::only($array, ['name', 'price']);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:589
#, no-wrap
msgid "<a name=\"method-array-pluck\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:589
#, no-wrap
msgid "`Arr::pluck()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:592
msgid ""
"The `Arr::pluck` method retrieves all of the values for a given key from an "
"array:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:599
#, no-wrap
msgid ""
"    $array = [\n"
"        ['developer' => ['id' => 1, 'name' => 'Taylor']],\n"
"        ['developer' => ['id' => 2, 'name' => 'Abigail']],\n"
"    ];\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:601
#, no-wrap
msgid "    $names = Arr::pluck($array, 'developer.name');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:603
#, no-wrap
msgid "    // ['Taylor', 'Abigail']\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:605
msgid "You may also specify how you wish the resulting list to be keyed:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:609
#, no-wrap
msgid "    $names = Arr::pluck($array, 'developer.name', 'developer.id');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:611
#, no-wrap
msgid "    // [1 => 'Taylor', 2 => 'Abigail']\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:613
#, no-wrap
msgid "<a name=\"method-array-prepend\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:613
#, no-wrap
msgid "`Arr::prepend()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:616
msgid "The `Arr::prepend` method will push an item onto the beginning of an array:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:620
#, no-wrap
msgid "    $array = ['one', 'two', 'three', 'four'];\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:622
#, no-wrap
msgid "    $array = Arr::prepend($array, 'zero');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:624
#, no-wrap
msgid "    // ['zero', 'one', 'two', 'three', 'four']\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:626
msgid "If needed, you may specify the key that should be used for the value:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:630
#, no-wrap
msgid "    $array = ['price' => 100];\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:632
#, no-wrap
msgid "    $array = Arr::prepend($array, 'Desk', 'name');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:636
#, no-wrap
msgid "<a name=\"method-array-pull\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:636
#, no-wrap
msgid "`Arr::pull()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:639
msgid "The `Arr::pull` method returns and removes a key / value pair from an array:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:645
#, no-wrap
msgid "    $name = Arr::pull($array, 'name');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:647
#, no-wrap
msgid "    // $name: Desk\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:649
#, no-wrap
msgid "    // $array: ['price' => 100]\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:651
msgid ""
"A default value may be passed as the third argument to the method. This "
"value will be returned if the key doesn't exist:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:655
#, no-wrap
msgid "    $value = Arr::pull($array, $key, $default);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:657
#, no-wrap
msgid "<a name=\"method-array-query\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:657
#, no-wrap
msgid "`Arr::query()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:660
msgid "The `Arr::query` method converts the array into a query string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:670
#, no-wrap
msgid ""
"    $array = [\n"
"        'name' => 'Taylor',\n"
"        'order' => [\n"
"            'column' => 'created_at',\n"
"            'direction' => 'desc'\n"
"        ]\n"
"    ];\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:672
#, no-wrap
msgid "    Arr::query($array);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:674
#, no-wrap
msgid "    // name=Taylor&order[column]=created_at&order[direction]=desc\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:676
#, no-wrap
msgid "<a name=\"method-array-random\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:676
#, no-wrap
msgid "`Arr::random()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:679
msgid "The `Arr::random` method returns a random value from an array:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:683
#, no-wrap
msgid "    $array = [1, 2, 3, 4, 5];\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:685
#, no-wrap
msgid "    $random = Arr::random($array);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:687
#, no-wrap
msgid "    // 4 - (retrieved randomly)\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:689
msgid ""
"You may also specify the number of items to return as an optional second "
"argument. Note that providing this argument will return an array even if "
"only one item is desired:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:693
#, no-wrap
msgid "    $items = Arr::random($array, 2);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:695
#, no-wrap
msgid "    // [2, 5] - (retrieved randomly)\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:697
#, no-wrap
msgid "<a name=\"method-array-set\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:697
#, no-wrap
msgid "`Arr::set()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:700
msgid ""
"The `Arr::set` method sets a value within a deeply nested array using "
"\"dot\" notation:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:706
#, no-wrap
msgid "    Arr::set($array, 'products.desk.price', 200);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:708 docs/8.x/helpers.md:907
#, no-wrap
msgid "    // ['products' => ['desk' => ['price' => 200]]]\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:710
#, no-wrap
msgid "<a name=\"method-array-shuffle\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:710
#, no-wrap
msgid "`Arr::shuffle()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:713
msgid "The `Arr::shuffle` method randomly shuffles the items in the array:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:717
#, no-wrap
msgid "    $array = Arr::shuffle([1, 2, 3, 4, 5]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:719
#, no-wrap
msgid "    // [3, 2, 5, 1, 4] - (generated randomly)\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:721
#, no-wrap
msgid "<a name=\"method-array-sort\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:721
#, no-wrap
msgid "`Arr::sort()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:724
msgid "The `Arr::sort` method sorts an array by its values:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:728
#, no-wrap
msgid "    $array = ['Desk', 'Table', 'Chair'];\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:730
#, no-wrap
msgid "    $sorted = Arr::sort($array);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:732
#, no-wrap
msgid "    // ['Chair', 'Desk', 'Table']\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:734
msgid "You may also sort the array by the results of a given closure:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:742
#, no-wrap
msgid ""
"    $array = [\n"
"        ['name' => 'Desk'],\n"
"        ['name' => 'Table'],\n"
"        ['name' => 'Chair'],\n"
"    ];\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:746
#, no-wrap
msgid ""
"    $sorted = array_values(Arr::sort($array, function ($value) {\n"
"        return $value['name'];\n"
"    }));\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:754
#, no-wrap
msgid ""
"    /*\n"
"        [\n"
"            ['name' => 'Chair'],\n"
"            ['name' => 'Desk'],\n"
"            ['name' => 'Table'],\n"
"        ]\n"
"    */\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:756
#, no-wrap
msgid "<a name=\"method-array-sort-recursive\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:756
#, no-wrap
msgid "`Arr::sortRecursive()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:759
msgid ""
"The `Arr::sortRecursive` method recursively sorts an array using the `sort` "
"function for numerically indexed sub-arrays and the `ksort` function for "
"associative sub-arrays:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:767
#, no-wrap
msgid ""
"    $array = [\n"
"        ['Roman', 'Taylor', 'Li'],\n"
"        ['PHP', 'Ruby', 'JavaScript'],\n"
"        ['one' => 1, 'two' => 2, 'three' => 3],\n"
"    ];\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:769
#, no-wrap
msgid "    $sorted = Arr::sortRecursive($array);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:777
#, no-wrap
msgid ""
"    /*\n"
"        [\n"
"            ['JavaScript', 'PHP', 'Ruby'],\n"
"            ['one' => 1, 'three' => 3, 'two' => 2],\n"
"            ['Li', 'Roman', 'Taylor'],\n"
"        ]\n"
"    */\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:779
#, no-wrap
msgid "<a name=\"method-array-to-css-classes\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:779
#, no-wrap
msgid "`Arr::toCssClasses()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:782
msgid ""
"The `Arr::toCssClasses` conditionally compiles a CSS class string. The "
"method accepts an array of classes where the array key contains the class or "
"classes you wish to add, while the value is a boolean expression. If the "
"array element has a numeric key, it will always be included in the rendered "
"class list:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:786
#, no-wrap
msgid "    $array = ['p-4', 'font-bold' => $isActive, 'bg-red' => $hasError];\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:789
#, no-wrap
msgid ""
"    $isActive = false;\n"
"    $hasError = true;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:791
#, no-wrap
msgid "    $classes = Arr::toCssClasses($array);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:795
#, no-wrap
msgid ""
"    /*\n"
"        'p-4 bg-red'\n"
"    */\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:797
msgid ""
"This method powers Laravel's functionality allowing [merging classes with a "
"Blade component's attribute "
"bag](/docs/{{version}}/blade#conditionally-merge-classes) as well as the "
"`@class` [Blade directive](/docs/{{version}}/blade#conditional-classes)."
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:799
#, no-wrap
msgid "<a name=\"method-array-where\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:799
#, no-wrap
msgid "`Arr::where()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:802
msgid "The `Arr::where` method filters an array using the given closure:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:806
#, no-wrap
msgid "    $array = [100, '200', 300, '400', 500];\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:810
#, no-wrap
msgid ""
"    $filtered = Arr::where($array, function ($value, $key) {\n"
"        return is_string($value);\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:812
#, no-wrap
msgid "    // [1 => '200', 3 => '400']\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:814
#, no-wrap
msgid "<a name=\"method-array-wrap\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:814
#, no-wrap
msgid "`Arr::wrap()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:817
msgid ""
"The `Arr::wrap` method wraps the given value in an array. If the given value "
"is already an array it will be returned without modification:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:821
#, no-wrap
msgid "    $string = 'Laravel';\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:823
#, no-wrap
msgid "    $array = Arr::wrap($string);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:825
#, no-wrap
msgid "    // ['Laravel']\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:827
msgid "If the given value is `null`, an empty array will be returned:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:831
#, no-wrap
msgid "    $array = Arr::wrap(null);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:833
#, no-wrap
msgid "    // []\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:835
#, no-wrap
msgid "<a name=\"method-data-fill\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:835
#, no-wrap
msgid "`data_fill()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:838
msgid ""
"The `data_fill` function sets a missing value within a nested array or "
"object using \"dot\" notation:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:840 docs/8.x/helpers.md:875 docs/8.x/helpers.md:903 docs/8.x/helpers.md:931
#, no-wrap
msgid "    $data = ['products' => ['desk' => ['price' => 100]]];\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:842
#, no-wrap
msgid "    data_fill($data, 'products.desk.price', 200);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:844 docs/8.x/helpers.md:935
#, no-wrap
msgid "    // ['products' => ['desk' => ['price' => 100]]]\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:846
#, no-wrap
msgid "    data_fill($data, 'products.desk.discount', 10);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:848
#, no-wrap
msgid "    // ['products' => ['desk' => ['price' => 100, 'discount' => 10]]]\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:850
msgid ""
"This function also accepts asterisks as wildcards and will fill the target "
"accordingly:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:857
#, no-wrap
msgid ""
"    $data = [\n"
"        'products' => [\n"
"            ['name' => 'Desk 1', 'price' => 100],\n"
"            ['name' => 'Desk 2'],\n"
"        ],\n"
"    ];\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:859
#, no-wrap
msgid "    data_fill($data, 'products.*.price', 200);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:868
#, no-wrap
msgid ""
"    /*\n"
"        [\n"
"            'products' => [\n"
"                ['name' => 'Desk 1', 'price' => 100],\n"
"                ['name' => 'Desk 2', 'price' => 200],\n"
"            ],\n"
"        ]\n"
"    */\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:870
#, no-wrap
msgid "<a name=\"method-data-get\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:870
#, no-wrap
msgid "`data_get()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:873
msgid ""
"The `data_get` function retrieves a value from a nested array or object "
"using \"dot\" notation:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:877
#, no-wrap
msgid "    $price = data_get($data, 'products.desk.price');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:881
msgid ""
"The `data_get` function also accepts a default value, which will be returned "
"if the specified key is not found:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:883
#, no-wrap
msgid "    $discount = data_get($data, 'products.desk.discount', 0);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:887
msgid ""
"The function also accepts wildcards using asterisks, which may target any "
"key of the array or object:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:892
#, no-wrap
msgid ""
"    $data = [\n"
"        'product-one' => ['name' => 'Desk 1', 'price' => 100],\n"
"        'product-two' => ['name' => 'Desk 2', 'price' => 150],\n"
"    ];\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:894
#, no-wrap
msgid "    data_get($data, '*.name');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:896
#, no-wrap
msgid "    // ['Desk 1', 'Desk 2'];\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:898
#, no-wrap
msgid "<a name=\"method-data-set\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:898
#, no-wrap
msgid "`data_set()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:901
msgid ""
"The `data_set` function sets a value within a nested array or object using "
"\"dot\" notation:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:905
#, no-wrap
msgid "    data_set($data, 'products.desk.price', 200);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:909
msgid ""
"This function also accepts wildcards using asterisks and will set values on "
"the target accordingly:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:916
#, no-wrap
msgid ""
"    $data = [\n"
"        'products' => [\n"
"            ['name' => 'Desk 1', 'price' => 100],\n"
"            ['name' => 'Desk 2', 'price' => 150],\n"
"        ],\n"
"    ];\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:918
#, no-wrap
msgid "    data_set($data, 'products.*.price', 200);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:927
#, no-wrap
msgid ""
"    /*\n"
"        [\n"
"            'products' => [\n"
"                ['name' => 'Desk 1', 'price' => 200],\n"
"                ['name' => 'Desk 2', 'price' => 200],\n"
"            ],\n"
"        ]\n"
"    */\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:929
msgid ""
"By default, any existing values are overwritten. If you wish to only set a "
"value if it doesn't exist, you may pass `false` as the fourth argument to "
"the function:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:933
#, no-wrap
msgid "    data_set($data, 'products.desk.price', 200, $overwrite = false);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:937
#, no-wrap
msgid "<a name=\"method-head\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:937
#, no-wrap
msgid "`head()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:940
msgid "The `head` function returns the first element in the given array:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:944
#, no-wrap
msgid "    $first = head($array);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:948
#, no-wrap
msgid "<a name=\"method-last\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:948
#, no-wrap
msgid "`last()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:951
msgid "The `last` function returns the last element in the given array:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:955
#, no-wrap
msgid "    $last = last($array);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:959
#, no-wrap
msgid "<a name=\"paths\"></a>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:962
#, no-wrap
msgid "<a name=\"method-app-path\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:962
#, no-wrap
msgid "`app_path()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:965
msgid ""
"The `app_path` function returns the fully qualified path to your "
"application's `app` directory. You may also use the `app_path` function to "
"generate a fully qualified path to a file relative to the application "
"directory:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:967
#, no-wrap
msgid "    $path = app_path();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:969
#, no-wrap
msgid "    $path = app_path('Http/Controllers/Controller.php');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:971
#, no-wrap
msgid "<a name=\"method-base-path\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:971
#, no-wrap
msgid "`base_path()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:974
msgid ""
"The `base_path` function returns the fully qualified path to your "
"application's root directory. You may also use the `base_path` function to "
"generate a fully qualified path to a given file relative to the project root "
"directory:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:976
#, no-wrap
msgid "    $path = base_path();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:978
#, no-wrap
msgid "    $path = base_path('vendor/bin');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:980
#, no-wrap
msgid "<a name=\"method-config-path\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:980
#, no-wrap
msgid "`config_path()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:983
msgid ""
"The `config_path` function returns the fully qualified path to your "
"application's `config` directory. You may also use the `config_path` "
"function to generate a fully qualified path to a given file within the "
"application's configuration directory:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:985
#, no-wrap
msgid "    $path = config_path();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:987
#, no-wrap
msgid "    $path = config_path('app.php');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:989
#, no-wrap
msgid "<a name=\"method-database-path\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:989
#, no-wrap
msgid "`database_path()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:992
msgid ""
"The `database_path` function returns the fully qualified path to your "
"application's `database` directory. You may also use the `database_path` "
"function to generate a fully qualified path to a given file within the "
"database directory:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:994
#, no-wrap
msgid "    $path = database_path();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:996
#, no-wrap
msgid "    $path = database_path('factories/UserFactory.php');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:998
#, no-wrap
msgid "<a name=\"method-mix\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:998
#, no-wrap
msgid "`mix()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1001
msgid ""
"The `mix` function returns the path to a [versioned Mix "
"file](/docs/{{version}}/mix):"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1003
#, no-wrap
msgid "    $path = mix('css/app.css');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1005
#, no-wrap
msgid "<a name=\"method-public-path\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1005
#, no-wrap
msgid "`public_path()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1008
msgid ""
"The `public_path` function returns the fully qualified path to your "
"application's `public` directory. You may also use the `public_path` "
"function to generate a fully qualified path to a given file within the "
"public directory:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1010
#, no-wrap
msgid "    $path = public_path();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1012
#, no-wrap
msgid "    $path = public_path('css/app.css');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1014
#, no-wrap
msgid "<a name=\"method-resource-path\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1014
#, no-wrap
msgid "`resource_path()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1017
msgid ""
"The `resource_path` function returns the fully qualified path to your "
"application's `resources` directory. You may also use the `resource_path` "
"function to generate a fully qualified path to a given file within the "
"resources directory:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1019
#, no-wrap
msgid "    $path = resource_path();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1021
#, no-wrap
msgid "    $path = resource_path('sass/app.scss');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1023
#, no-wrap
msgid "<a name=\"method-storage-path\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1023
#, no-wrap
msgid "`storage_path()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1026
msgid ""
"The `storage_path` function returns the fully qualified path to your "
"application's `storage` directory. You may also use the `storage_path` "
"function to generate a fully qualified path to a given file within the "
"storage directory:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1028
#, no-wrap
msgid "    $path = storage_path();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1030
#, no-wrap
msgid "    $path = storage_path('app/file.txt');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1032
#, no-wrap
msgid "<a name=\"strings\"></a>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1035
#, no-wrap
msgid "<a name=\"method-__\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1035
#, no-wrap
msgid "`__()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1038
msgid ""
"The `__` function translates the given translation string or translation key "
"using your [localization files](/docs/{{version}}/localization):"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1040
#, no-wrap
msgid "    echo __('Welcome to our application');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1042
#, no-wrap
msgid "    echo __('messages.welcome');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1044
msgid ""
"If the specified translation string or key does not exist, the `__` function "
"will return the given value. So, using the example above, the `__` function "
"would return `messages.welcome` if that translation key does not exist."
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1046
#, no-wrap
msgid "<a name=\"method-class-basename\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1046
#, no-wrap
msgid "`class_basename()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1049
msgid ""
"The `class_basename` function returns the class name of the given class with "
"the class's namespace removed:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1051
#, no-wrap
msgid "    $class = class_basename('Foo\\Bar\\Baz');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1053
#, no-wrap
msgid "    // Baz\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1055
#, no-wrap
msgid "<a name=\"method-e\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1055
#, no-wrap
msgid "`e()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1058
msgid ""
"The `e` function runs PHP's `htmlspecialchars` function with the "
"`double_encode` option set to `true` by default:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1060
#, no-wrap
msgid "    echo e('<html>foo</html>');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1062
#, no-wrap
msgid "    // &lt;html&gt;foo&lt;/html&gt;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1064
#, no-wrap
msgid "<a name=\"method-preg-replace-array\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1064
#, no-wrap
msgid "`preg_replace_array()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1067
msgid ""
"The `preg_replace_array` function replaces a given pattern in the string "
"sequentially using an array:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1069
#, no-wrap
msgid "    $string = 'The event will take place between :start and :end';\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1071
#, no-wrap
msgid ""
"    $replaced = preg_replace_array('/:[a-z_]+/', ['8:30', '9:00'], "
"$string);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1073 docs/8.x/helpers.md:1491 docs/8.x/helpers.md:2244
#, no-wrap
msgid "    // The event will take place between 8:30 and 9:00\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1075
#, no-wrap
msgid "<a name=\"method-str-after\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1075
#, no-wrap
msgid "`Str::after()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1078
msgid ""
"The `Str::after` method returns everything after the given value in a "
"string. The entire string will be returned if the value does not exist "
"within the string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1080 docs/8.x/helpers.md:1091 docs/8.x/helpers.md:1102 docs/8.x/helpers.md:1113 docs/8.x/helpers.md:1124 docs/8.x/helpers.md:1135 docs/8.x/helpers.md:1146 docs/8.x/helpers.md:1157 docs/8.x/helpers.md:1165 docs/8.x/helpers.md:1176 docs/8.x/helpers.md:1187 docs/8.x/helpers.md:1196 docs/8.x/helpers.md:1211 docs/8.x/helpers.md:1226 docs/8.x/helpers.md:1241 docs/8.x/helpers.md:1256 docs/8.x/helpers.md:1271 docs/8.x/helpers.md:1282 docs/8.x/helpers.md:1293 docs/8.x/helpers.md:1301 docs/8.x/helpers.md:1312 docs/8.x/helpers.md:1323 docs/8.x/helpers.md:1340 docs/8.x/helpers.md:1349 docs/8.x/helpers.md:1364 docs/8.x/helpers.md:1379 docs/8.x/helpers.md:1394 docs/8.x/helpers.md:1406 docs/8.x/helpers.md:1421 docs/8.x/helpers.md:1433 docs/8.x/helpers.md:1448 docs/8.x/helpers.md:1457 docs/8.x/helpers.md:1472 docs/8.x/helpers.md:1485 docs/8.x/helpers.md:1498 docs/8.x/helpers.md:1509 docs/8.x/helpers.md:1520 docs/8.x/helpers.md:1535 docs/8.x/helpers.md:1546 docs/8.x/helpers.md:1561 docs/8.x/helpers.md:1576 docs/8.x/helpers.md:1593 docs/8.x/helpers.md:1604 docs/8.x/helpers.md:1615 docs/8.x/helpers.md:1626 docs/8.x/helpers.md:1637 docs/8.x/helpers.md:1648 docs/8.x/helpers.md:1659 docs/8.x/helpers.md:1679 docs/8.x/helpers.md:1713 docs/8.x/helpers.md:1724 docs/8.x/helpers.md:1735 docs/8.x/helpers.md:1746 docs/8.x/helpers.md:1757 docs/8.x/helpers.md:1765 docs/8.x/helpers.md:1776 docs/8.x/helpers.md:1787 docs/8.x/helpers.md:1798 docs/8.x/helpers.md:1809 docs/8.x/helpers.md:1817 docs/8.x/helpers.md:1828 docs/8.x/helpers.md:1839 docs/8.x/helpers.md:1847 docs/8.x/helpers.md:1858 docs/8.x/helpers.md:1866 docs/8.x/helpers.md:1881 docs/8.x/helpers.md:1892 docs/8.x/helpers.md:1903 docs/8.x/helpers.md:1918 docs/8.x/helpers.md:1933 docs/8.x/helpers.md:1948 docs/8.x/helpers.md:1964 docs/8.x/helpers.md:1979 docs/8.x/helpers.md:1994 docs/8.x/helpers.md:2005 docs/8.x/helpers.md:2016 docs/8.x/helpers.md:2024 docs/8.x/helpers.md:2035 docs/8.x/helpers.md:2046 docs/8.x/helpers.md:2061 docs/8.x/helpers.md:2078 docs/8.x/helpers.md:2093 docs/8.x/helpers.md:2101 docs/8.x/helpers.md:2114 docs/8.x/helpers.md:2129 docs/8.x/helpers.md:2144 docs/8.x/helpers.md:2159 docs/8.x/helpers.md:2176 docs/8.x/helpers.md:2188 docs/8.x/helpers.md:2203 docs/8.x/helpers.md:2214 docs/8.x/helpers.md:2227 docs/8.x/helpers.md:2238 docs/8.x/helpers.md:2251 docs/8.x/helpers.md:2262 docs/8.x/helpers.md:2273 docs/8.x/helpers.md:2281 docs/8.x/helpers.md:2294 docs/8.x/helpers.md:2309 docs/8.x/helpers.md:2324 docs/8.x/helpers.md:2335 docs/8.x/helpers.md:2346 docs/8.x/helpers.md:2357 docs/8.x/helpers.md:2372 docs/8.x/helpers.md:2383 docs/8.x/helpers.md:2394 docs/8.x/helpers.md:2409 docs/8.x/helpers.md:2425 docs/8.x/helpers.md:2436 docs/8.x/helpers.md:2447 docs/8.x/helpers.md:2462 docs/8.x/helpers.md:2473 docs/8.x/helpers.md:2484 docs/8.x/helpers.md:2500 docs/8.x/helpers.md:2524
#, no-wrap
msgid "    use Illuminate\\Support\\Str;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1082
#, no-wrap
msgid "    $slice = Str::after('This is my name', 'This is');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1084 docs/8.x/helpers.md:1717
#, no-wrap
msgid "    // ' my name'\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1086
#, no-wrap
msgid "<a name=\"method-str-after-last\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1086
#, no-wrap
msgid "`Str::afterLast()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1089
msgid ""
"The `Str::afterLast` method returns everything after the last occurrence of "
"the given value in a string. The entire string will be returned if the value "
"does not exist within the string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1093
#, no-wrap
msgid "    $slice = Str::afterLast('App\\Http\\Controllers\\Controller', '\\\\');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1095 docs/8.x/helpers.md:1728
#, no-wrap
msgid "    // 'Controller'\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1097
#, no-wrap
msgid "<a name=\"method-str-ascii\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1097
#, no-wrap
msgid "`Str::ascii()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1100
msgid ""
"The `Str::ascii` method will attempt to transliterate the string into an "
"ASCII value:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1104
#, no-wrap
msgid "    $slice = Str::ascii('û');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1106 docs/8.x/helpers.md:1750
#, no-wrap
msgid "    // 'u'\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1108
#, no-wrap
msgid "<a name=\"method-str-before\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1108
#, no-wrap
msgid "`Str::before()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1111
msgid ""
"The `Str::before` method returns everything before the given value in a "
"string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1115
#, no-wrap
msgid "    $slice = Str::before('This is my name', 'my name');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1117 docs/8.x/helpers.md:1780
#, no-wrap
msgid "    // 'This is '\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1119
#, no-wrap
msgid "<a name=\"method-str-before-last\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1119
#, no-wrap
msgid "`Str::beforeLast()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1122
msgid ""
"The `Str::beforeLast` method returns everything before the last occurrence "
"of the given value in a string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1126
#, no-wrap
msgid "    $slice = Str::beforeLast('This is my name', 'is');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1128 docs/8.x/helpers.md:1791
#, no-wrap
msgid "    // 'This '\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1130
#, no-wrap
msgid "<a name=\"method-str-between\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1130
#, no-wrap
msgid "`Str::between()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1133
msgid ""
"The `Str::between` method returns the portion of a string between two "
"values:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1137
#, no-wrap
msgid "    $slice = Str::between('This is my name', 'This', 'name');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1139
#, no-wrap
msgid "    // ' is my '\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1141
#, no-wrap
msgid "<a name=\"method-camel-case\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1141
#, no-wrap
msgid "`Str::camel()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1144
msgid "The `Str::camel` method converts the given string to `camelCase`:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1148
#, no-wrap
msgid "    $converted = Str::camel('foo_bar');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1150 docs/8.x/helpers.md:1802
#, no-wrap
msgid "    // fooBar\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1152
#, no-wrap
msgid "<a name=\"method-str-contains\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1152
#, no-wrap
msgid "`Str::contains()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1155
msgid ""
"The `Str::contains` method determines if the given string contains the given "
"value. This method is case sensitive:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1159
#, no-wrap
msgid "    $contains = Str::contains('This is my name', 'my');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1163 docs/8.x/helpers.md:1815
msgid ""
"You may also pass an array of values to determine if the given string "
"contains any of the values in the array:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1167
#, no-wrap
msgid "    $contains = Str::contains('This is my name', ['my', 'foo']);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1171
#, no-wrap
msgid "<a name=\"method-str-contains-all\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1171
#, no-wrap
msgid "`Str::containsAll()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1174
msgid ""
"The `Str::containsAll` method determines if the given string contains all of "
"the values in a given array:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1178
#, no-wrap
msgid "    $containsAll = Str::containsAll('This is my name', ['my', 'name']);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1182
#, no-wrap
msgid "<a name=\"method-ends-with\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1182
#, no-wrap
msgid "`Str::endsWith()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1185
msgid ""
"The `Str::endsWith` method determines if the given string ends with the "
"given value:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1189
#, no-wrap
msgid "    $result = Str::endsWith('This is my name', 'name');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1194 docs/8.x/helpers.md:1864
msgid ""
"You may also pass an array of values to determine if the given string ends "
"with any of the values in the array:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1198
#, no-wrap
msgid "    $result = Str::endsWith('This is my name', ['name', 'foo']);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1202
#, no-wrap
msgid "    $result = Str::endsWith('This is my name', ['this', 'foo']);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1206
#, no-wrap
msgid "<a name=\"method-str-finish\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1206
#, no-wrap
msgid "`Str::finish()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1209
msgid ""
"The `Str::finish` method adds a single instance of the given value to a "
"string if it does not already end with that value:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1213
#, no-wrap
msgid "    $adjusted = Str::finish('this/string', '/');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1215 docs/8.x/helpers.md:1219 docs/8.x/helpers.md:1907 docs/8.x/helpers.md:1911
#, no-wrap
msgid "    // this/string/\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1217
#, no-wrap
msgid "    $adjusted = Str::finish('this/string/', '/');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1221
#, no-wrap
msgid "<a name=\"method-str-is\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1221
#, no-wrap
msgid "`Str::is()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1224
msgid ""
"The `Str::is` method determines if a given string matches a given "
"pattern. Asterisks may be used as wildcard values:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1228
#, no-wrap
msgid "    $matches = Str::is('foo*', 'foobar');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1232
#, no-wrap
msgid "    $matches = Str::is('baz*', 'foobar');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1236
#, no-wrap
msgid "<a name=\"method-str-is-ascii\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1236
#, no-wrap
msgid "`Str::isAscii()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1239
msgid "The `Str::isAscii` method determines if a given string is 7 bit ASCII:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1243
#, no-wrap
msgid "    $isAscii = Str::isAscii('Taylor');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1247
#, no-wrap
msgid "    $isAscii = Str::isAscii('ü');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1251
#, no-wrap
msgid "<a name=\"method-str-is-uuid\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1251
#, no-wrap
msgid "`Str::isUuid()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1254
msgid "The `Str::isUuid` method determines if the given string is a valid UUID:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1258
#, no-wrap
msgid "    $isUuid = Str::isUuid('a0a2a2d2-0b87-4a18-83f2-2529882be2de');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1262
#, no-wrap
msgid "    $isUuid = Str::isUuid('laravel');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1266
#, no-wrap
msgid "<a name=\"method-kebab-case\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1266
#, no-wrap
msgid "`Str::kebab()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1269
msgid "The `Str::kebab` method converts the given string to `kebab-case`:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1273
#, no-wrap
msgid "    $converted = Str::kebab('fooBar');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1275 docs/8.x/helpers.md:1554 docs/8.x/helpers.md:1998
#, no-wrap
msgid "    // foo-bar\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1277
#, no-wrap
msgid "<a name=\"method-str-length\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1277
#, no-wrap
msgid "`Str::length()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1280
msgid "The `Str::length` method returns the length of the given string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1284
#, no-wrap
msgid "    $length = Str::length('Laravel');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1286 docs/8.x/helpers.md:2009
#, no-wrap
msgid "    // 7\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1288
#, no-wrap
msgid "<a name=\"method-str-limit\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1288
#, no-wrap
msgid "`Str::limit()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1291
msgid "The `Str::limit` method truncates the given string to the specified length:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1295
#, no-wrap
msgid ""
"    $truncated = Str::limit('The quick brown fox jumps over the lazy dog', "
"20);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1297 docs/8.x/helpers.md:2020
#, no-wrap
msgid "    // The quick brown fox...\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1299
msgid ""
"You may pass a third argument to the method to change the string that will "
"be appended to the end of the truncated string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1303
#, no-wrap
msgid ""
"    $truncated = Str::limit('The quick brown fox jumps over the lazy dog', "
"20, ' (...)');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1305 docs/8.x/helpers.md:2028
#, no-wrap
msgid "    // The quick brown fox (...)\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1307
#, no-wrap
msgid "<a name=\"method-str-lower\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1307
#, no-wrap
msgid "`Str::lower()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1310
msgid "The `Str::lower` method converts the given string to lowercase:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1314
#, no-wrap
msgid "    $converted = Str::lower('LARAVEL');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1316
#, no-wrap
msgid "    // laravel\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1318
#, no-wrap
msgid "<a name=\"method-str-markdown\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1318
#, no-wrap
msgid "`Str::markdown()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1321
msgid "The `Str::markdown` method converts GitHub flavored Markdown into HTML:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1325
#, no-wrap
msgid "    $html = Str::markdown('# Laravel');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1327 docs/8.x/helpers.md:2065
#, no-wrap
msgid "    // <h1>Laravel</h1>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1331
#, no-wrap
msgid ""
"    $html = Str::markdown('# Taylor <b>Otwell</b>', [\n"
"        'html_input' => 'strip',\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1333 docs/8.x/helpers.md:2071
#, no-wrap
msgid "    // <h1>Taylor Otwell</h1>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1335
#, no-wrap
msgid "<a name=\"method-str-ordered-uuid\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1335
#, no-wrap
msgid "`Str::orderedUuid()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1338
msgid ""
"The `Str::orderedUuid` method generates a \"timestamp first\" UUID that may "
"be efficiently stored in an indexed database column. Each UUID that is "
"generated using this method will be sorted after UUIDs previously generated "
"using the method:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1342
#, no-wrap
msgid "    return (string) Str::orderedUuid();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1344
#, no-wrap
msgid "<a name=\"method-str-padboth\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1344
#, no-wrap
msgid "`Str::padBoth()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1347
msgid ""
"The `Str::padBoth` method wraps PHP's `str_pad` function, padding both sides "
"of a string with another string until the final string reaches a desired "
"length:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1351
#, no-wrap
msgid "    $padded = Str::padBoth('James', 10, '_');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1353 docs/8.x/helpers.md:2118
#, no-wrap
msgid "    // '__James___'\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1355
#, no-wrap
msgid "    $padded = Str::padBoth('James', 10);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1357 docs/8.x/helpers.md:2122
#, no-wrap
msgid "    // '  James   '\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1359
#, no-wrap
msgid "<a name=\"method-str-padleft\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1359
#, no-wrap
msgid "`Str::padLeft()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1362
msgid ""
"The `Str::padLeft` method wraps PHP's `str_pad` function, padding the left "
"side of a string with another string until the final string reaches a "
"desired length:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1366
#, no-wrap
msgid "    $padded = Str::padLeft('James', 10, '-=');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1368 docs/8.x/helpers.md:2133
#, no-wrap
msgid "    // '-=-=-James'\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1370
#, no-wrap
msgid "    $padded = Str::padLeft('James', 10);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1372 docs/8.x/helpers.md:2137
#, no-wrap
msgid "    // '     James'\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1374
#, no-wrap
msgid "<a name=\"method-str-padright\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1374
#, no-wrap
msgid "`Str::padRight()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1377
msgid ""
"The `Str::padRight` method wraps PHP's `str_pad` function, padding the right "
"side of a string with another string until the final string reaches a "
"desired length:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1381
#, no-wrap
msgid "    $padded = Str::padRight('James', 10, '-');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1383 docs/8.x/helpers.md:2148
#, no-wrap
msgid "    // 'James-----'\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1385
#, no-wrap
msgid "    $padded = Str::padRight('James', 10);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1387 docs/8.x/helpers.md:2152
#, no-wrap
msgid "    // 'James     '\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1389
#, no-wrap
msgid "<a name=\"method-str-plural\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1389
#, no-wrap
msgid "`Str::plural()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1392
msgid ""
"The `Str::plural` method converts a singular word string to its plural "
"form. This function currently only supports the English language:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1396
#, no-wrap
msgid "    $plural = Str::plural('car');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1398 docs/8.x/helpers.md:2180
#, no-wrap
msgid "    // cars\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1400
#, no-wrap
msgid "    $plural = Str::plural('child');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1402 docs/8.x/helpers.md:1410 docs/8.x/helpers.md:2184 docs/8.x/helpers.md:2192
#, no-wrap
msgid "    // children\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1404 docs/8.x/helpers.md:1431 docs/8.x/helpers.md:2186
msgid ""
"You may provide an integer as a second argument to the function to retrieve "
"the singular or plural form of the string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1408
#, no-wrap
msgid "    $plural = Str::plural('child', 2);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1412
#, no-wrap
msgid "    $singular = Str::plural('child', 1);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1414 docs/8.x/helpers.md:1528 docs/8.x/helpers.md:2196 docs/8.x/helpers.md:2317
#, no-wrap
msgid "    // child\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1416
#, no-wrap
msgid "<a name=\"method-str-plural-studly\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1416
#, no-wrap
msgid "`Str::pluralStudly()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1419
msgid ""
"The `Str::pluralStudly` method converts a singular word string formatted in "
"studly caps case to its plural form. This function currently only supports "
"the English language:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1423
#, no-wrap
msgid "    $plural = Str::pluralStudly('VerifiedHuman');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1425 docs/8.x/helpers.md:1437
#, no-wrap
msgid "    // VerifiedHumans\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1427
#, no-wrap
msgid "    $plural = Str::pluralStudly('UserFeedback');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1429
#, no-wrap
msgid "    // UserFeedback\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1435
#, no-wrap
msgid "    $plural = Str::pluralStudly('VerifiedHuman', 2);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1439
#, no-wrap
msgid "    $singular = Str::pluralStudly('VerifiedHuman', 1);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1441
#, no-wrap
msgid "    // VerifiedHuman\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1443
#, no-wrap
msgid "<a name=\"method-str-random\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1443
#, no-wrap
msgid "`Str::random()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1446
msgid ""
"The `Str::random` method generates a random string of the specified "
"length. This function uses PHP's `random_bytes` function:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1450
#, no-wrap
msgid "    $random = Str::random(40);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1452
#, no-wrap
msgid "<a name=\"method-str-remove\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1452
#, no-wrap
msgid "`Str::remove()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1455
msgid ""
"The `Str::remove` method removes the given value or array of values from the "
"string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1459
#, no-wrap
msgid "    $string = 'Peter Piper picked a peck of pickled peppers.';\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1461
#, no-wrap
msgid "    $removed = Str::remove('e', $string);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1463
#, no-wrap
msgid "    // Ptr Pipr pickd a pck of pickld ppprs.\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1465
msgid ""
"You may also pass `false` as a third argument to the `remove` method to "
"ignore case when removing strings."
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1467
#, no-wrap
msgid "<a name=\"method-str-replace\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1467
#, no-wrap
msgid "`Str::replace()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1470
msgid "The `Str::replace` method replaces a given string within the string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1474
#, no-wrap
msgid "    $string = 'Laravel 8.x';\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1476
#, no-wrap
msgid "    $replaced = Str::replace('8.x', '9.x', $string);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1478
#, no-wrap
msgid "    // Laravel 9.x\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1480
#, no-wrap
msgid "<a name=\"method-str-replace-array\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1480
#, no-wrap
msgid "`Str::replaceArray()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1483
msgid ""
"The `Str::replaceArray` method replaces a given value in the string "
"sequentially using an array:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1487 docs/8.x/helpers.md:2240
#, no-wrap
msgid "    $string = 'The event will take place between ? and ?';\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1489
#, no-wrap
msgid "    $replaced = Str::replaceArray('?', ['8:30', '9:00'], $string);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1493
#, no-wrap
msgid "<a name=\"method-str-replace-first\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1493
#, no-wrap
msgid "`Str::replaceFirst()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1496
msgid ""
"The `Str::replaceFirst` method replaces the first occurrence of a given "
"value in a string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1500
#, no-wrap
msgid ""
"    $replaced = Str::replaceFirst('the', 'a', 'the quick brown fox jumps "
"over the lazy dog');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1502 docs/8.x/helpers.md:2255
#, no-wrap
msgid "    // a quick brown fox jumps over the lazy dog\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1504
#, no-wrap
msgid "<a name=\"method-str-replace-last\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1504
#, no-wrap
msgid "`Str::replaceLast()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1507
msgid ""
"The `Str::replaceLast` method replaces the last occurrence of a given value "
"in a string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1511
#, no-wrap
msgid ""
"    $replaced = Str::replaceLast('the', 'a', 'the quick brown fox jumps over "
"the lazy dog');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1513 docs/8.x/helpers.md:2266
#, no-wrap
msgid "    // the quick brown fox jumps over a lazy dog\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1515
#, no-wrap
msgid "<a name=\"method-str-singular\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1515
#, no-wrap
msgid "`Str::singular()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1518
msgid ""
"The `Str::singular` method converts a string to its singular form. This "
"function currently only supports the English language:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1522
#, no-wrap
msgid "    $singular = Str::singular('cars');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1524 docs/8.x/helpers.md:2313
#, no-wrap
msgid "    // car\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1526
#, no-wrap
msgid "    $singular = Str::singular('children');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1530
#, no-wrap
msgid "<a name=\"method-str-slug\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1530
#, no-wrap
msgid "`Str::slug()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1533
msgid ""
"The `Str::slug` method generates a URL friendly \"slug\" from the given "
"string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1537
#, no-wrap
msgid "    $slug = Str::slug('Laravel 5 Framework', '-');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1539
#, no-wrap
msgid "    // laravel-5-framework\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1541
#, no-wrap
msgid "<a name=\"method-snake-case\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1541
#, no-wrap
msgid "`Str::snake()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1544
msgid "The `Str::snake` method converts the given string to `snake_case`:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1548
#, no-wrap
msgid "    $converted = Str::snake('fooBar');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1550 docs/8.x/helpers.md:2339
#, no-wrap
msgid "    // foo_bar\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1552
#, no-wrap
msgid "    $converted = Str::snake('fooBar', '-');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1556
#, no-wrap
msgid "<a name=\"method-str-start\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1556
#, no-wrap
msgid "`Str::start()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1559
msgid ""
"The `Str::start` method adds a single instance of the given value to a "
"string if it does not already start with that value:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1563
#, no-wrap
msgid "    $adjusted = Str::start('this/string', '/');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1565 docs/8.x/helpers.md:1569 docs/8.x/helpers.md:2361 docs/8.x/helpers.md:2365
#, no-wrap
msgid "    // /this/string\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1567
#, no-wrap
msgid "    $adjusted = Str::start('/this/string', '/');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1571
#, no-wrap
msgid "<a name=\"method-starts-with\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1571
#, no-wrap
msgid "`Str::startsWith()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1574
msgid ""
"The `Str::startsWith` method determines if the given string begins with the "
"given value:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1578
#, no-wrap
msgid "    $result = Str::startsWith('This is my name', 'This');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1582
msgid ""
"If an array of possible values is passed, the `startsWith` method will "
"return `true` if the string begins with any of the given values:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1584
#, no-wrap
msgid ""
"    $result = Str::startsWith('This is my name', ['This', 'That', "
"'There']);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1588
#, no-wrap
msgid "<a name=\"method-studly-case\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1588
#, no-wrap
msgid "`Str::studly()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1591
msgid "The `Str::studly` method converts the given string to `StudlyCase`:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1595
#, no-wrap
msgid "    $converted = Str::studly('foo_bar');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1597 docs/8.x/helpers.md:2387
#, no-wrap
msgid "    // FooBar\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1599
#, no-wrap
msgid "<a name=\"method-str-substr\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1599
#, no-wrap
msgid "`Str::substr()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1602
msgid ""
"The `Str::substr` method returns the portion of string specified by the "
"start and length parameters:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1606
#, no-wrap
msgid "    $converted = Str::substr('The Laravel Framework', 4, 7);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1608
#, no-wrap
msgid "    // Laravel\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1610
#, no-wrap
msgid "<a name=\"method-str-substrcount\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1610
#, no-wrap
msgid "`Str::substrCount()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1613
msgid ""
"The `Str::substrCount` method returns the number of occurrences of a given "
"value in the given string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1617
#, no-wrap
msgid ""
"    $count = Str::substrCount('If you like ice cream, you will like snow "
"cones.', 'like');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1619
#, no-wrap
msgid "    // 2\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1621
#, no-wrap
msgid "<a name=\"method-title-case\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1621
#, no-wrap
msgid "`Str::title()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1624
msgid "The `Str::title` method converts the given string to `Title Case`:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1628
#, no-wrap
msgid "    $converted = Str::title('a nice title uses the correct case');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1630 docs/8.x/helpers.md:2440
#, no-wrap
msgid "    // A Nice Title Uses The Correct Case\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1632
#, no-wrap
msgid "<a name=\"method-str-ucfirst\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1632
#, no-wrap
msgid "`Str::ucfirst()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1635
msgid ""
"The `Str::ucfirst` method returns the given string with the first character "
"capitalized:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1639
#, no-wrap
msgid "    $string = Str::ucfirst('foo bar');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1641 docs/8.x/helpers.md:2466
#, no-wrap
msgid "    // Foo bar\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1643
#, no-wrap
msgid "<a name=\"method-str-upper\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1643
#, no-wrap
msgid "`Str::upper()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1646
msgid "The `Str::upper` method converts the given string to uppercase:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1650
#, no-wrap
msgid "    $string = Str::upper('laravel');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1652 docs/8.x/helpers.md:2477
#, no-wrap
msgid "    // LARAVEL\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1654
#, no-wrap
msgid "<a name=\"method-str-uuid\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1654
#, no-wrap
msgid "`Str::uuid()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1657
msgid "The `Str::uuid` method generates a UUID (version 4):"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1661
#, no-wrap
msgid "    return (string) Str::uuid();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1663
#, no-wrap
msgid "<a name=\"method-str-word-count\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1663
#, no-wrap
msgid "`Str::wordCount` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1666
msgid ""
"The `Str::wordCount` method returns the number of words that a string "
"contains:"
msgstr ""

#. type: Code fence info string
#: docs/8.x/helpers.md:1667 docs/8.x/helpers.md:2512
#, no-wrap
msgid "php"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1667
#, no-wrap
msgid ""
"use Illuminate\\Support\\Str;\n"
"\n"
"Str::wordCount('Hello, world!'); // 2\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1674
#, no-wrap
msgid "<a name=\"method-str-words\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1674
#, no-wrap
msgid "`Str::words()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1677
msgid ""
"The `Str::words` method limits the number of words in a string. An "
"additional string may be passed to this method via its third argument to "
"specify which string should be appended to the end of the truncated string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1681
#, no-wrap
msgid ""
"    return Str::words('Perfectly balanced, as all things should be.', 3, ' "
">>>');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1683 docs/8.x/helpers.md:2528
#, no-wrap
msgid "    // Perfectly balanced, as >>>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1685
#, no-wrap
msgid "<a name=\"method-trans\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1685
#, no-wrap
msgid "`trans()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1688
msgid ""
"The `trans` function translates the given translation key using your "
"[localization files](/docs/{{version}}/localization):"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1690
#, no-wrap
msgid "    echo trans('messages.welcome');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1692
msgid ""
"If the specified translation key does not exist, the `trans` function will "
"return the given key. So, using the example above, the `trans` function "
"would return `messages.welcome` if the translation key does not exist."
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1694
#, no-wrap
msgid "<a name=\"method-trans-choice\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1694
#, no-wrap
msgid "`trans_choice()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1697
msgid ""
"The `trans_choice` function translates the given translation key with "
"inflection:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1699
#, no-wrap
msgid "    echo trans_choice('messages.notifications', $unreadCount);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1701
msgid ""
"If the specified translation key does not exist, the `trans_choice` function "
"will return the given key. So, using the example above, the `trans_choice` "
"function would return `messages.notifications` if the translation key does "
"not exist."
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1703
#, no-wrap
msgid "<a name=\"fluent-strings\"></a>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1706
msgid ""
"Fluent strings provide a more fluent, object-oriented interface for working "
"with string values, allowing you to chain multiple string operations "
"together using a more readable syntax compared to traditional string "
"operations."
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1708
#, no-wrap
msgid "<a name=\"method-fluent-str-after\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1708
#, no-wrap
msgid "`after` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1711
msgid ""
"The `after` method returns everything after the given value in a string. The "
"entire string will be returned if the value does not exist within the "
"string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1715
#, no-wrap
msgid "    $slice = Str::of('This is my name')->after('This is');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1719
#, no-wrap
msgid "<a name=\"method-fluent-str-after-last\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1719
#, no-wrap
msgid "`afterLast` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1722
msgid ""
"The `afterLast` method returns everything after the last occurrence of the "
"given value in a string. The entire string will be returned if the value "
"does not exist within the string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1726
#, no-wrap
msgid ""
"    $slice = "
"Str::of('App\\Http\\Controllers\\Controller')->afterLast('\\\\');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1730
#, no-wrap
msgid "<a name=\"method-fluent-str-append\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1730
#, no-wrap
msgid "`append` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1733
msgid "The `append` method appends the given values to the string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1737
#, no-wrap
msgid "    $string = Str::of('Taylor')->append(' Otwell');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1739 docs/8.x/helpers.md:2491
#, no-wrap
msgid "    // 'Taylor Otwell'\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1741
#, no-wrap
msgid "<a name=\"method-fluent-str-ascii\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1741
#, no-wrap
msgid "`ascii` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1744
msgid ""
"The `ascii` method will attempt to transliterate the string into an ASCII "
"value:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1748
#, no-wrap
msgid "    $string = Str::of('ü')->ascii();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1752
#, no-wrap
msgid "<a name=\"method-fluent-str-basename\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1752
#, no-wrap
msgid "`basename` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1755
msgid ""
"The `basename` method will return the trailing name component of the given "
"string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1759
#, no-wrap
msgid "    $string = Str::of('/foo/bar/baz')->basename();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1761 docs/8.x/helpers.md:1769
#, no-wrap
msgid "    // 'baz'\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1763
msgid ""
"If needed, you may provide an \"extension\" that will be removed from the "
"trailing component:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1767
#, no-wrap
msgid "    $string = Str::of('/foo/bar/baz.jpg')->basename('.jpg');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1771
#, no-wrap
msgid "<a name=\"method-fluent-str-before\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1771
#, no-wrap
msgid "`before` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1774
msgid "The `before` method returns everything before the given value in a string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1778
#, no-wrap
msgid "    $slice = Str::of('This is my name')->before('my name');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1782
#, no-wrap
msgid "<a name=\"method-fluent-str-before-last\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1782
#, no-wrap
msgid "`beforeLast` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1785
msgid ""
"The `beforeLast` method returns everything before the last occurrence of the "
"given value in a string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1789
#, no-wrap
msgid "    $slice = Str::of('This is my name')->beforeLast('is');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1793
#, no-wrap
msgid "<a name=\"method-fluent-str-camel\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1793
#, no-wrap
msgid "`camel` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1796
msgid "The `camel` method converts the given string to `camelCase`:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1800
#, no-wrap
msgid "    $converted = Str::of('foo_bar')->camel();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1804
#, no-wrap
msgid "<a name=\"method-fluent-str-contains\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1804
#, no-wrap
msgid "`contains` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1807
msgid ""
"The `contains` method determines if the given string contains the given "
"value. This method is case sensitive:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1811
#, no-wrap
msgid "    $contains = Str::of('This is my name')->contains('my');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1819
#, no-wrap
msgid "    $contains = Str::of('This is my name')->contains(['my', 'foo']);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1823
#, no-wrap
msgid "<a name=\"method-fluent-str-contains-all\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1823
#, no-wrap
msgid "`containsAll` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1826
msgid ""
"The `containsAll` method determines if the given string contains all of the "
"values in the given array:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1830
#, no-wrap
msgid ""
"    $containsAll = Str::of('This is my name')->containsAll(['my', "
"'name']);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1834
#, no-wrap
msgid "<a name=\"method-fluent-str-dirname\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1834
#, no-wrap
msgid "`dirname` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1837
msgid ""
"The `dirname` method returns the parent directory portion of the given "
"string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1841
#, no-wrap
msgid "    $string = Str::of('/foo/bar/baz')->dirname();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1843
#, no-wrap
msgid "    // '/foo/bar'\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1845
msgid ""
"If necessary, you may specify how many directory levels you wish to trim "
"from the string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1849
#, no-wrap
msgid "    $string = Str::of('/foo/bar/baz')->dirname(2);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1851
#, no-wrap
msgid "    // '/foo'\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1853
#, no-wrap
msgid "<a name=\"method-fluent-str-ends-with\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1853
#, no-wrap
msgid "`endsWith` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1856
msgid ""
"The `endsWith` method determines if the given string ends with the given "
"value:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1860
#, no-wrap
msgid "    $result = Str::of('This is my name')->endsWith('name');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1868
#, no-wrap
msgid "    $result = Str::of('This is my name')->endsWith(['name', 'foo']);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1872
#, no-wrap
msgid "    $result = Str::of('This is my name')->endsWith(['this', 'foo']);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1876
#, no-wrap
msgid "<a name=\"method-fluent-str-exactly\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1876
#, no-wrap
msgid "`exactly` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1879
msgid ""
"The `exactly` method determines if the given string is an exact match with "
"another string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1883
#, no-wrap
msgid "    $result = Str::of('Laravel')->exactly('Laravel');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1887
#, no-wrap
msgid "<a name=\"method-fluent-str-explode\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1887
#, no-wrap
msgid "`explode` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1890
msgid ""
"The `explode` method splits the string by the given delimiter and returns a "
"collection containing each section of the split string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1894
#, no-wrap
msgid "    $collection = Str::of('foo bar baz')->explode(' ');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1896
#, no-wrap
msgid "    // collect(['foo', 'bar', 'baz'])\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1898
#, no-wrap
msgid "<a name=\"method-fluent-str-finish\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1898
#, no-wrap
msgid "`finish` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1901
msgid ""
"The `finish` method adds a single instance of the given value to a string if "
"it does not already end with that value:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1905
#, no-wrap
msgid "    $adjusted = Str::of('this/string')->finish('/');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1909
#, no-wrap
msgid "    $adjusted = Str::of('this/string/')->finish('/');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1913
#, no-wrap
msgid "<a name=\"method-fluent-str-is\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1913
#, no-wrap
msgid "`is` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1916
msgid ""
"The `is` method determines if a given string matches a given "
"pattern. Asterisks may be used as wildcard values"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1920
#, no-wrap
msgid "    $matches = Str::of('foobar')->is('foo*');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1924
#, no-wrap
msgid "    $matches = Str::of('foobar')->is('baz*');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1928
#, no-wrap
msgid "<a name=\"method-fluent-str-is-ascii\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1928
#, no-wrap
msgid "`isAscii` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1931
msgid "The `isAscii` method determines if a given string is an ASCII string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1935
#, no-wrap
msgid "    $result = Str::of('Taylor')->isAscii();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1939
#, no-wrap
msgid "    $result = Str::of('ü')->isAscii();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1943
#, no-wrap
msgid "<a name=\"method-fluent-str-is-empty\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1943
#, no-wrap
msgid "`isEmpty` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1946
msgid "The `isEmpty` method determines if the given string is empty:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1950
#, no-wrap
msgid "    $result = Str::of('  ')->trim()->isEmpty();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1954
#, no-wrap
msgid "    $result = Str::of('Laravel')->trim()->isEmpty();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1958
#, no-wrap
msgid "<a name=\"method-fluent-str-is-not-empty\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1958
#, no-wrap
msgid "`isNotEmpty` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1961
msgid "The `isNotEmpty` method determines if the given string is not empty:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1966
#, no-wrap
msgid "    $result = Str::of('  ')->trim()->isNotEmpty();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1970
#, no-wrap
msgid "    $result = Str::of('Laravel')->trim()->isNotEmpty();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1974
#, no-wrap
msgid "<a name=\"method-fluent-str-is-uuid\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1974
#, no-wrap
msgid "`isUuid` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1977
msgid "The `isUuid` method determines if a given string is a UUID:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1981
#, no-wrap
msgid "    $result = Str::of('5ace9ab9-e9cf-4ec6-a19d-5881212a452c')->isUuid();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1985
#, no-wrap
msgid "    $result = Str::of('Taylor')->isUuid();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1989
#, no-wrap
msgid "<a name=\"method-fluent-str-kebab\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:1989
#, no-wrap
msgid "`kebab` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1992
msgid "The `kebab` method converts the given string to `kebab-case`:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:1996
#, no-wrap
msgid "    $converted = Str::of('fooBar')->kebab();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2000
#, no-wrap
msgid "<a name=\"method-fluent-str-length\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2000
#, no-wrap
msgid "`length` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2003
msgid "The `length` method returns the length of the given string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2007
#, no-wrap
msgid "    $length = Str::of('Laravel')->length();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2011
#, no-wrap
msgid "<a name=\"method-fluent-str-limit\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2011
#, no-wrap
msgid "`limit` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2014
msgid "The `limit` method truncates the given string to the specified length:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2018
#, no-wrap
msgid ""
"    $truncated = Str::of('The quick brown fox jumps over the lazy "
"dog')->limit(20);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2022
msgid ""
"You may also pass a second argument to change the string that will be "
"appended to the end of the truncated string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2026
#, no-wrap
msgid ""
"    $truncated = Str::of('The quick brown fox jumps over the lazy "
"dog')->limit(20, ' (...)');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2030
#, no-wrap
msgid "<a name=\"method-fluent-str-lower\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2030
#, no-wrap
msgid "`lower` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2033
msgid "The `lower` method converts the given string to lowercase:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2037
#, no-wrap
msgid "    $result = Str::of('LARAVEL')->lower();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2039
#, no-wrap
msgid "    // 'laravel'\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2041
#, no-wrap
msgid "<a name=\"method-fluent-str-ltrim\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2041
#, no-wrap
msgid "`ltrim` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2044
msgid "The `ltrim` method trims the left side of the string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2048
#, no-wrap
msgid "    $string = Str::of('  Laravel  ')->ltrim();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2050
#, no-wrap
msgid "    // 'Laravel  '\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2052
#, no-wrap
msgid "    $string = Str::of('/Laravel/')->ltrim('/');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2054
#, no-wrap
msgid "    // 'Laravel/'\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2056
#, no-wrap
msgid "<a name=\"method-fluent-str-markdown\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2056
#, no-wrap
msgid "`markdown` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2059
msgid "The `markdown` method converts GitHub flavored Markdown into HTML:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2063
#, no-wrap
msgid "    $html = Str::of('# Laravel')->markdown();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2069
#, no-wrap
msgid ""
"    $html = Str::of('# Taylor <b>Otwell</b>')->markdown([\n"
"        'html_input' => 'strip',\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2073
#, no-wrap
msgid "<a name=\"method-fluent-str-match\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2073
#, no-wrap
msgid "`match` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2076
msgid ""
"The `match` method will return the portion of a string that matches a given "
"regular expression pattern:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2080
#, no-wrap
msgid "    $result = Str::of('foo bar')->match('/bar/');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2082 docs/8.x/helpers.md:2086 docs/8.x/helpers.md:2169
#, no-wrap
msgid "    // 'bar'\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2084
#, no-wrap
msgid "    $result = Str::of('foo bar')->match('/foo (.*)/');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2088
#, no-wrap
msgid "<a name=\"method-fluent-str-match-all\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2088
#, no-wrap
msgid "`matchAll` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2091
msgid ""
"The `matchAll` method will return a collection containing the portions of a "
"string that match a given regular expression pattern:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2095
#, no-wrap
msgid "    $result = Str::of('bar foo bar')->matchAll('/bar/');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2097
#, no-wrap
msgid "    // collect(['bar', 'bar'])\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2099
msgid ""
"If you specify a matching group within the expression, Laravel will return a "
"collection of that group's matches:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2103
#, no-wrap
msgid "    $result = Str::of('bar fun bar fly')->matchAll('/f(\\w*)/');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2105
#, no-wrap
msgid "    // collect(['un', 'ly']);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2107
msgid "If no matches are found, an empty collection will be returned."
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2109
#, no-wrap
msgid "<a name=\"method-fluent-str-padboth\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2109
#, no-wrap
msgid "`padBoth` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2112
msgid ""
"The `padBoth` method wraps PHP's `str_pad` function, padding both sides of a "
"string with another string until the final string reaches the desired "
"length:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2116
#, no-wrap
msgid "    $padded = Str::of('James')->padBoth(10, '_');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2120
#, no-wrap
msgid "    $padded = Str::of('James')->padBoth(10);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2124
#, no-wrap
msgid "<a name=\"method-fluent-str-padleft\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2124
#, no-wrap
msgid "`padLeft` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2127
msgid ""
"The `padLeft` method wraps PHP's `str_pad` function, padding the left side "
"of a string with another string until the final string reaches the desired "
"length:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2131
#, no-wrap
msgid "    $padded = Str::of('James')->padLeft(10, '-=');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2135
#, no-wrap
msgid "    $padded = Str::of('James')->padLeft(10);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2139
#, no-wrap
msgid "<a name=\"method-fluent-str-padright\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2139
#, no-wrap
msgid "`padRight` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2142
msgid ""
"The `padRight` method wraps PHP's `str_pad` function, padding the right side "
"of a string with another string until the final string reaches the desired "
"length:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2146
#, no-wrap
msgid "    $padded = Str::of('James')->padRight(10, '-');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2150
#, no-wrap
msgid "    $padded = Str::of('James')->padRight(10);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2154
#, no-wrap
msgid "<a name=\"method-fluent-str-pipe\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2154
#, no-wrap
msgid "`pipe` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2157
msgid ""
"The `pipe` method allows you to transform the string by passing its current "
"value to the given callable:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2161
#, no-wrap
msgid "    $hash = Str::of('Laravel')->pipe('md5')->prepend('Checksum: ');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2163
#, no-wrap
msgid "    // 'Checksum: a5c95b86291ea299fcbe64458ed12702'\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2167
#, no-wrap
msgid ""
"    $closure = Str::of('foo')->pipe(function ($str) {\n"
"        return 'bar';\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2171
#, no-wrap
msgid "<a name=\"method-fluent-str-plural\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2171
#, no-wrap
msgid "`plural` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2174
msgid ""
"The `plural` method converts a singular word string to its plural form. This "
"function currently only supports the English language:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2178
#, no-wrap
msgid "    $plural = Str::of('car')->plural();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2182
#, no-wrap
msgid "    $plural = Str::of('child')->plural();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2190
#, no-wrap
msgid "    $plural = Str::of('child')->plural(2);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2194
#, no-wrap
msgid "    $plural = Str::of('child')->plural(1);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2198
#, no-wrap
msgid "<a name=\"method-fluent-str-prepend\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2198
#, no-wrap
msgid "`prepend` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2201
msgid "The `prepend` method prepends the given values onto the string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2205
#, no-wrap
msgid "    $string = Str::of('Framework')->prepend('Laravel ');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2207
#, no-wrap
msgid "    // Laravel Framework\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2209
#, no-wrap
msgid "<a name=\"method-fluent-str-remove\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2209
#, no-wrap
msgid "`remove` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2212
msgid ""
"The `remove` method removes the given value or array of values from the "
"string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2216
#, no-wrap
msgid "    $string = Str::of('Arkansas is quite beautiful!')->remove('quite');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2218
#, no-wrap
msgid "    // Arkansas is beautiful!\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2220
msgid ""
"You may also pass `false` as a second parameter to ignore case when "
"removing."
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2222
#, no-wrap
msgid "<a name=\"method-fluent-str-replace\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2222
#, no-wrap
msgid "`replace` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2225
msgid "The `replace` method replaces a given string within the string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2229
#, no-wrap
msgid "    $replaced = Str::of('Laravel 6.x')->replace('6.x', '7.x');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2231
#, no-wrap
msgid "    // Laravel 7.x\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2233
#, no-wrap
msgid "<a name=\"method-fluent-str-replace-array\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2233
#, no-wrap
msgid "`replaceArray` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2236
msgid ""
"The `replaceArray` method replaces a given value in the string sequentially "
"using an array:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2242
#, no-wrap
msgid "    $replaced = Str::of($string)->replaceArray('?', ['8:30', '9:00']);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2246
#, no-wrap
msgid "<a name=\"method-fluent-str-replace-first\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2246
#, no-wrap
msgid "`replaceFirst` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2249
msgid ""
"The `replaceFirst` method replaces the first occurrence of a given value in "
"a string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2253
#, no-wrap
msgid ""
"    $replaced = Str::of('the quick brown fox jumps over the lazy "
"dog')->replaceFirst('the', 'a');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2257
#, no-wrap
msgid "<a name=\"method-fluent-str-replace-last\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2257
#, no-wrap
msgid "`replaceLast` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2260
msgid ""
"The `replaceLast` method replaces the last occurrence of a given value in a "
"string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2264
#, no-wrap
msgid ""
"    $replaced = Str::of('the quick brown fox jumps over the lazy "
"dog')->replaceLast('the', 'a');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2268
#, no-wrap
msgid "<a name=\"method-fluent-str-replace-matches\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2268
#, no-wrap
msgid "`replaceMatches` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2271
msgid ""
"The `replaceMatches` method replaces all portions of a string matching a "
"pattern with the given replacement string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2275
#, no-wrap
msgid ""
"    $replaced = Str::of('(+1) "
"501-555-1000')->replaceMatches('/[^A-Za-z0-9]++/', '')\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2277
#, no-wrap
msgid "    // '15015551000'\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2279
msgid ""
"The `replaceMatches` method also accepts a closure that will be invoked with "
"each portion of the string matching the given pattern, allowing you to "
"perform the replacement logic within the closure and return the replaced "
"value:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2285
#, no-wrap
msgid ""
"    $replaced = Str::of('123')->replaceMatches('/\\d/', function ($match) "
"{\n"
"        return '['.$match[0].']';\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2287
#, no-wrap
msgid "    // '[1][2][3]'\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2289
#, no-wrap
msgid "<a name=\"method-fluent-str-rtrim\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2289
#, no-wrap
msgid "`rtrim` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2292
msgid "The `rtrim` method trims the right side of the given string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2296
#, no-wrap
msgid "    $string = Str::of('  Laravel  ')->rtrim();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2298
#, no-wrap
msgid "    // '  Laravel'\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2300
#, no-wrap
msgid "    $string = Str::of('/Laravel/')->rtrim('/');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2302
#, no-wrap
msgid "    // '/Laravel'\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2304
#, no-wrap
msgid "<a name=\"method-fluent-str-singular\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2304
#, no-wrap
msgid "`singular` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2307
msgid ""
"The `singular` method converts a string to its singular form. This function "
"currently only supports the English language:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2311
#, no-wrap
msgid "    $singular = Str::of('cars')->singular();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2315
#, no-wrap
msgid "    $singular = Str::of('children')->singular();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2319
#, no-wrap
msgid "<a name=\"method-fluent-str-slug\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2319
#, no-wrap
msgid "`slug` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2322
msgid "The `slug` method generates a URL friendly \"slug\" from the given string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2326
#, no-wrap
msgid "    $slug = Str::of('Laravel Framework')->slug('-');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2328
#, no-wrap
msgid "    // laravel-framework\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2330
#, no-wrap
msgid "<a name=\"method-fluent-str-snake\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2330
#, no-wrap
msgid "`snake` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2333
msgid "The `snake` method converts the given string to `snake_case`:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2337
#, no-wrap
msgid "    $converted = Str::of('fooBar')->snake();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2341
#, no-wrap
msgid "<a name=\"method-fluent-str-split\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2341
#, no-wrap
msgid "`split` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2344
msgid ""
"The `split` method splits a string into a collection using a regular "
"expression:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2348
#, no-wrap
msgid "    $segments = Str::of('one, two, three')->split('/[\\s,]+/');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2350
#, no-wrap
msgid "    // collect([\"one\", \"two\", \"three\"])\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2352
#, no-wrap
msgid "<a name=\"method-fluent-str-start\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2352
#, no-wrap
msgid "`start` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2355
msgid ""
"The `start` method adds a single instance of the given value to a string if "
"it does not already start with that value:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2359
#, no-wrap
msgid "    $adjusted = Str::of('this/string')->start('/');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2363
#, no-wrap
msgid "    $adjusted = Str::of('/this/string')->start('/');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2367
#, no-wrap
msgid "<a name=\"method-fluent-str-starts-with\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2367
#, no-wrap
msgid "`startsWith` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2370
msgid ""
"The `startsWith` method determines if the given string begins with the given "
"value:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2374
#, no-wrap
msgid "    $result = Str::of('This is my name')->startsWith('This');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2378
#, no-wrap
msgid "<a name=\"method-fluent-str-studly\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2378
#, no-wrap
msgid "`studly` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2381
msgid "The `studly` method converts the given string to `StudlyCase`:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2385
#, no-wrap
msgid "    $converted = Str::of('foo_bar')->studly();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2389
#, no-wrap
msgid "<a name=\"method-fluent-str-substr\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2389
#, no-wrap
msgid "`substr` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2392
msgid ""
"The `substr` method returns the portion of the string specified by the given "
"start and length parameters:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2396
#, no-wrap
msgid "    $string = Str::of('Laravel Framework')->substr(8);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2398
#, no-wrap
msgid "    // Framework\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2400
#, no-wrap
msgid "    $string = Str::of('Laravel Framework')->substr(8, 5);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2402
#, no-wrap
msgid "    // Frame\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2404
#, no-wrap
msgid "<a name=\"method-fluent-str-tap\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2404
#, no-wrap
msgid "`tap` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2407
msgid ""
"The `tap` method passes the string to the given closure, allowing you to "
"examine and interact with the string while not affecting the string "
"itself. The original string is returned by the `tap` method regardless of "
"what is returned by the closure:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2416
#, no-wrap
msgid ""
"    $string = Str::of('Laravel')\n"
"        ->append(' Framework')\n"
"        ->tap(function ($string) {\n"
"            dump('String after append: ' . $string);\n"
"        })\n"
"        ->upper();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2418
#, no-wrap
msgid "    // LARAVEL FRAMEWORK\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2420
#, no-wrap
msgid "<a name=\"method-fluent-str-test\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2420
#, no-wrap
msgid "`test` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2423
msgid ""
"The `test` method determines if a string matches the given regular "
"expression pattern:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2427
#, no-wrap
msgid "    $result = Str::of('Laravel Framework')->test('/Laravel/');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2431
#, no-wrap
msgid "<a name=\"method-fluent-str-title\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2431
#, no-wrap
msgid "`title` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2434
msgid "The `title` method converts the given string to `Title Case`:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2438
#, no-wrap
msgid "    $converted = Str::of('a nice title uses the correct case')->title();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2442
#, no-wrap
msgid "<a name=\"method-fluent-str-trim\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2442
#, no-wrap
msgid "`trim` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2445
msgid "The `trim` method trims the given string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2449
#, no-wrap
msgid "    $string = Str::of('  Laravel  ')->trim();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2451 docs/8.x/helpers.md:2455 docs/8.x/helpers.md:2506
#, no-wrap
msgid "    // 'Laravel'\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2453
#, no-wrap
msgid "    $string = Str::of('/Laravel/')->trim('/');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2457
#, no-wrap
msgid "<a name=\"method-fluent-str-ucfirst\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2457
#, no-wrap
msgid "`ucfirst` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2460
msgid ""
"The `ucfirst` method returns the given string with the first character "
"capitalized:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2464
#, no-wrap
msgid "    $string = Str::of('foo bar')->ucfirst();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2468
#, no-wrap
msgid "<a name=\"method-fluent-str-upper\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2468
#, no-wrap
msgid "`upper` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2471
msgid "The `upper` method converts the given string to uppercase:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2475
#, no-wrap
msgid "    $adjusted = Str::of('laravel')->upper();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2479
#, no-wrap
msgid "<a name=\"method-fluent-str-when\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2479
#, no-wrap
msgid "`when` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2482
msgid ""
"The `when` method invokes the given closure if a given condition is "
"`true`. The closure will receive the fluent string instance:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2489
#, no-wrap
msgid ""
"    $string = Str::of('Taylor')\n"
"                    ->when(true, function ($string) {\n"
"                        return $string->append(' Otwell');\n"
"                    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2493
msgid ""
"If necessary, you may pass another closure as the third parameter to the "
"`when` method. This closure will execute if the condition parameter "
"evaluates to `false`."
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2495
#, no-wrap
msgid "<a name=\"method-fluent-str-when-empty\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2495
#, no-wrap
msgid "`whenEmpty` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2498
msgid ""
"The `whenEmpty` method invokes the given closure if the string is empty. If "
"the closure returns a value, that value will also be returned by the "
"`whenEmpty` method. If the closure does not return a value, the fluent "
"string instance will be returned:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2504
#, no-wrap
msgid ""
"    $string = Str::of('  ')->whenEmpty(function ($string) {\n"
"        return $string->trim()->prepend('Laravel');\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2508
#, no-wrap
msgid "<a name=\"method-fluent-str-word-count\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2508
#, no-wrap
msgid "`wordCount` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2511
msgid "The `wordCount` method returns the number of words that a string contains:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2512
#, no-wrap
msgid ""
"use Illuminate\\Support\\Str;\n"
"\n"
"Str::of('Hello, world!')->wordCount(); // 2\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2519
#, no-wrap
msgid "<a name=\"method-fluent-str-words\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2519
#, no-wrap
msgid "`words` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2522
msgid ""
"The `words` method limits the number of words in a string. If necessary, you "
"may specify an additional string that will be appended to the truncated "
"string:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2526
#, no-wrap
msgid ""
"    $string = Str::of('Perfectly balanced, as all things should "
"be.')->words(3, ' >>>');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2530
#, no-wrap
msgid "<a name=\"urls\"></a>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2533
#, no-wrap
msgid "<a name=\"method-action\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2533
#, no-wrap
msgid "`action()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2536
msgid "The `action` function generates a URL for the given controller action:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2538
#, no-wrap
msgid "    use App\\Http\\Controllers\\HomeController;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2540
#, no-wrap
msgid "    $url = action([HomeController::class, 'index']);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2542
msgid ""
"If the method accepts route parameters, you may pass them as the second "
"argument to the method:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2544
#, no-wrap
msgid "    $url = action([UserController::class, 'profile'], ['id' => 1]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2546
#, no-wrap
msgid "<a name=\"method-asset\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2546
#, no-wrap
msgid "`asset()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2549
msgid ""
"The `asset` function generates a URL for an asset using the current scheme "
"of the request (HTTP or HTTPS):"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2551
#, no-wrap
msgid "    $url = asset('img/photo.jpg');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2553
msgid ""
"You can configure the asset URL host by setting the `ASSET_URL` variable in "
"your `.env` file. This can be useful if you host your assets on an external "
"service like Amazon S3 or another CDN:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2555
#, no-wrap
msgid "    // ASSET_URL=http://example.com/assets\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2557
#, no-wrap
msgid ""
"    $url = asset('img/photo.jpg'); // "
"http://example.com/assets/img/photo.jpg\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2559
#, no-wrap
msgid "<a name=\"method-route\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2559
#, no-wrap
msgid "`route()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2562
msgid ""
"The `route` function generates a URL for a given [named "
"route](/docs/{{version}}/routing#named-routes):"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2564
#, no-wrap
msgid "    $url = route('route.name');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2566
msgid ""
"If the route accepts parameters, you may pass them as the second argument to "
"the function:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2568
#, no-wrap
msgid "    $url = route('route.name', ['id' => 1]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2570
msgid ""
"By default, the `route` function generates an absolute URL. If you wish to "
"generate a relative URL, you may pass `false` as the third argument to the "
"function:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2572
#, no-wrap
msgid "    $url = route('route.name', ['id' => 1], false);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2574
#, no-wrap
msgid "<a name=\"method-secure-asset\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2574
#, no-wrap
msgid "`secure_asset()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2577
msgid "The `secure_asset` function generates a URL for an asset using HTTPS:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2579
#, no-wrap
msgid "    $url = secure_asset('img/photo.jpg');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2581
#, no-wrap
msgid "<a name=\"method-secure-url\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2581
#, no-wrap
msgid "`secure_url()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2584
msgid ""
"The `secure_url` function generates a fully qualified HTTPS URL to the given "
"path. Additional URL segments may be passed in the function's second "
"argument:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2586
#, no-wrap
msgid "    $url = secure_url('user/profile');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2588
#, no-wrap
msgid "    $url = secure_url('user/profile', [1]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2590
#, no-wrap
msgid "<a name=\"method-url\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2590
#, no-wrap
msgid "`url()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2593
msgid "The `url` function generates a fully qualified URL to the given path:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2595
#, no-wrap
msgid "    $url = url('user/profile');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2597
#, no-wrap
msgid "    $url = url('user/profile', [1]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2599
msgid ""
"If no path is provided, an `Illuminate\\Routing\\UrlGenerator` instance is "
"returned:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2601
#, no-wrap
msgid "    $current = url()->current();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2603
#, no-wrap
msgid "    $full = url()->full();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2605
#, no-wrap
msgid "    $previous = url()->previous();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2607
#, no-wrap
msgid "<a name=\"miscellaneous\"></a>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2610
#, no-wrap
msgid "<a name=\"method-abort\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2610
#, no-wrap
msgid "`abort()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2613
msgid ""
"The `abort` function throws [an HTTP "
"exception](/docs/{{version}}/errors#http-exceptions) which will be rendered "
"by the [exception handler](/docs/{{version}}/errors#the-exception-handler):"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2615
#, no-wrap
msgid "    abort(403);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2617
msgid ""
"You may also provide the exception's message and custom HTTP response "
"headers that should be sent to the browser:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2619
#, no-wrap
msgid "    abort(403, 'Unauthorized.', $headers);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2621
#, no-wrap
msgid "<a name=\"method-abort-if\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2621
#, no-wrap
msgid "`abort_if()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2624
msgid ""
"The `abort_if` function throws an HTTP exception if a given boolean "
"expression evaluates to `true`:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2626
#, no-wrap
msgid "    abort_if(! Auth::user()->isAdmin(), 403);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2628 docs/8.x/helpers.md:2637
msgid ""
"Like the `abort` method, you may also provide the exception's response text "
"as the third argument and an array of custom response headers as the fourth "
"argument to the function."
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2630
#, no-wrap
msgid "<a name=\"method-abort-unless\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2630
#, no-wrap
msgid "`abort_unless()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2633
msgid ""
"The `abort_unless` function throws an HTTP exception if a given boolean "
"expression evaluates to `false`:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2635
#, no-wrap
msgid "    abort_unless(Auth::user()->isAdmin(), 403);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2639
#, no-wrap
msgid "<a name=\"method-app\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2639
#, no-wrap
msgid "`app()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2642
msgid ""
"The `app` function returns the [service "
"container](/docs/{{version}}/container) instance:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2644
#, no-wrap
msgid "    $container = app();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2646
msgid "You may pass a class or interface name to resolve it from the container:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2648
#, no-wrap
msgid "    $api = app('HelpSpot\\API');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2650
#, no-wrap
msgid "<a name=\"method-auth\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2650
#, no-wrap
msgid "`auth()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2653
msgid ""
"The `auth` function returns an "
"[authenticator](/docs/{{version}}/authentication) instance. You may use it "
"as an alternative to the `Auth` facade:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2655
#, no-wrap
msgid "    $user = auth()->user();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2657
msgid "If needed, you may specify which guard instance you would like to access:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2659
#, no-wrap
msgid "    $user = auth('admin')->user();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2661
#, no-wrap
msgid "<a name=\"method-back\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2661
#, no-wrap
msgid "`back()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2664
msgid ""
"The `back` function generates a [redirect HTTP "
"response](/docs/{{version}}/responses#redirects) to the user's previous "
"location:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2666
#, no-wrap
msgid "    return back($status = 302, $headers = [], $fallback = '/');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2668
#, no-wrap
msgid "    return back();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2670
#, no-wrap
msgid "<a name=\"method-bcrypt\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2670
#, no-wrap
msgid "`bcrypt()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2673
msgid ""
"The `bcrypt` function [hashes](/docs/{{version}}/hashing) the given value "
"using Bcrypt. You may use this function as an alternative to the `Hash` "
"facade:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2675
#, no-wrap
msgid "    $password = bcrypt('my-secret-password');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2677
#, no-wrap
msgid "<a name=\"method-blank\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2677
#, no-wrap
msgid "`blank()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2680
msgid "The `blank` function determines whether the given value is \"blank\":"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2685
#, no-wrap
msgid ""
"    blank('');\n"
"    blank('   ');\n"
"    blank(null);\n"
"    blank(collect());\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2691
#, no-wrap
msgid ""
"    blank(0);\n"
"    blank(true);\n"
"    blank(false);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2695
msgid "For the inverse of `blank`, see the [`filled`](#method-filled) method."
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2697
#, no-wrap
msgid "<a name=\"method-broadcast\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2697
#, no-wrap
msgid "`broadcast()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2700
msgid ""
"The `broadcast` function [broadcasts](/docs/{{version}}/broadcasting) the "
"given [event](/docs/{{version}}/events) to its listeners:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2702
#, no-wrap
msgid "    broadcast(new UserRegistered($user));\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2704
#, no-wrap
msgid "    broadcast(new UserRegistered($user))->toOthers();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2706
#, no-wrap
msgid "<a name=\"method-cache\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2706
#, no-wrap
msgid "`cache()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2709
msgid ""
"The `cache` function may be used to get values from the "
"[cache](/docs/{{version}}/cache). If the given key does not exist in the "
"cache, an optional default value will be returned:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2711
#, no-wrap
msgid "    $value = cache('key');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2713
#, no-wrap
msgid "    $value = cache('key', 'default');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2715
msgid ""
"You may add items to the cache by passing an array of key / value pairs to "
"the function. You should also pass the number of seconds or duration the "
"cached value should be considered valid:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2717
#, no-wrap
msgid "    cache(['key' => 'value'], 300);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2719
#, no-wrap
msgid "    cache(['key' => 'value'], now()->addSeconds(10));\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2721
#, no-wrap
msgid "<a name=\"method-class-uses-recursive\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2721
#, no-wrap
msgid "`class_uses_recursive()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2724
msgid ""
"The `class_uses_recursive` function returns all traits used by a class, "
"including traits used by all of its parent classes:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2726
#, no-wrap
msgid "    $traits = class_uses_recursive(App\\Models\\User::class);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2728
#, no-wrap
msgid "<a name=\"method-collect\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2728
#, no-wrap
msgid "`collect()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2731
msgid ""
"The `collect` function creates a [collection](/docs/{{version}}/collections) "
"instance from the given value:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2733
#, no-wrap
msgid "    $collection = collect(['taylor', 'abigail']);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2735
#, no-wrap
msgid "<a name=\"method-config\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2735
#, no-wrap
msgid "`config()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2738
msgid ""
"The `config` function gets the value of a "
"[configuration](/docs/{{version}}/configuration) variable. The configuration "
"values may be accessed using \"dot\" syntax, which includes the name of the "
"file and the option you wish to access. A default value may be specified and "
"is returned if the configuration option does not exist:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2740
#, no-wrap
msgid "    $value = config('app.timezone');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2742
#, no-wrap
msgid "    $value = config('app.timezone', $default);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2744
msgid ""
"You may set configuration variables at runtime by passing an array of key / "
"value pairs. However, note that this function only affects the configuration "
"value for the current request and does not update your actual configuration "
"values:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2746
#, no-wrap
msgid "    config(['app.debug' => true]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2748
#, no-wrap
msgid "<a name=\"method-cookie\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2748
#, no-wrap
msgid "`cookie()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2751
msgid ""
"The `cookie` function creates a new "
"[cookie](/docs/{{version}}/requests#cookies) instance:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2753
#, no-wrap
msgid "    $cookie = cookie('name', 'value', $minutes);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2755
#, no-wrap
msgid "<a name=\"method-csrf-field\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2755
#, no-wrap
msgid "`csrf_field()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2758
msgid ""
"The `csrf_field` function generates an HTML `hidden` input field containing "
"the value of the CSRF token. For example, using [Blade "
"syntax](/docs/{{version}}/blade):"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2760
#, no-wrap
msgid "    {{ csrf_field() }}\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2762
#, no-wrap
msgid "<a name=\"method-csrf-token\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2762
#, no-wrap
msgid "`csrf_token()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2765
msgid "The `csrf_token` function retrieves the value of the current CSRF token:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2767
#, no-wrap
msgid "    $token = csrf_token();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2769
#, no-wrap
msgid "<a name=\"method-dd\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2769
#, no-wrap
msgid "`dd()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2772
msgid ""
"The `dd` function dumps the given variables and ends execution of the "
"script:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2774
#, no-wrap
msgid "    dd($value);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2776
#, no-wrap
msgid "    dd($value1, $value2, $value3, ...);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2778
msgid ""
"If you do not want to halt the execution of your script, use the "
"[`dump`](#method-dump) function instead."
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2780
#, no-wrap
msgid "<a name=\"method-dispatch\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2780
#, no-wrap
msgid "`dispatch()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2783
msgid ""
"The `dispatch` function pushes the given "
"[job](/docs/{{version}}/queues#creating-jobs) onto the Laravel [job "
"queue](/docs/{{version}}/queues):"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2785
#, no-wrap
msgid "    dispatch(new App\\Jobs\\SendEmails);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2787
#, no-wrap
msgid "<a name=\"method-dump\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2787
#, no-wrap
msgid "`dump()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2790
msgid "The `dump` function dumps the given variables:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2792
#, no-wrap
msgid "    dump($value);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2794
#, no-wrap
msgid "    dump($value1, $value2, $value3, ...);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2796
msgid ""
"If you want to stop executing the script after dumping the variables, use "
"the [`dd`](#method-dd) function instead."
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2798
#, no-wrap
msgid "<a name=\"method-env\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2798
#, no-wrap
msgid "`env()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2801
msgid ""
"The `env` function retrieves the value of an [environment "
"variable](/docs/{{version}}/configuration#environment-configuration) or "
"returns a default value:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2803
#, no-wrap
msgid "    $env = env('APP_ENV');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2805
#, no-wrap
msgid "    $env = env('APP_ENV', 'production');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2807
#, no-wrap
msgid ""
"> {note} If you execute the `config:cache` command during your deployment "
"process, you should be sure that you are only calling the `env` function "
"from within your configuration files. Once the configuration has been "
"cached, the `.env` file will not be loaded and all calls to the `env` "
"function will return `null`.\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2809
#, no-wrap
msgid "<a name=\"method-event\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2809
#, no-wrap
msgid "`event()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2812
msgid ""
"The `event` function dispatches the given [event](/docs/{{version}}/events) "
"to its listeners:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2814
#, no-wrap
msgid "    event(new UserRegistered($user));\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2816
#, no-wrap
msgid "<a name=\"method-filled\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2816
#, no-wrap
msgid "`filled()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2819
msgid "The `filled` function determines whether the given value is not \"blank\":"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2823
#, no-wrap
msgid ""
"    filled(0);\n"
"    filled(true);\n"
"    filled(false);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2830
#, no-wrap
msgid ""
"    filled('');\n"
"    filled('   ');\n"
"    filled(null);\n"
"    filled(collect());\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2834
msgid "For the inverse of `filled`, see the [`blank`](#method-blank) method."
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2836
#, no-wrap
msgid "<a name=\"method-info\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2836
#, no-wrap
msgid "`info()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2839
msgid ""
"The `info` function will write information to your application's "
"[log](/docs/{{version}}/logging):"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2841
#, no-wrap
msgid "    info('Some helpful information!');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2843 docs/8.x/helpers.md:2854
msgid "An array of contextual data may also be passed to the function:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2845
#, no-wrap
msgid "    info('User login attempt failed.', ['id' => $user->id]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2847
#, no-wrap
msgid "<a name=\"method-logger\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2847
#, no-wrap
msgid "`logger()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2850
msgid ""
"The `logger` function can be used to write a `debug` level message to the "
"[log](/docs/{{version}}/logging):"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2852
#, no-wrap
msgid "    logger('Debug message');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2856
#, no-wrap
msgid "    logger('User has logged in.', ['id' => $user->id]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2858
msgid ""
"A [logger](/docs/{{version}}/errors#logging) instance will be returned if no "
"value is passed to the function:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2860
#, no-wrap
msgid "    logger()->error('You are not allowed here.');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2862
#, no-wrap
msgid "<a name=\"method-method-field\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2862
#, no-wrap
msgid "`method_field()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2865
msgid ""
"The `method_field` function generates an HTML `hidden` input field "
"containing the spoofed value of the form's HTTP verb. For example, using "
"[Blade syntax](/docs/{{version}}/blade):"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2869
#, no-wrap
msgid ""
"    <form method=\"POST\">\n"
"        {{ method_field('DELETE') }}\n"
"    </form>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2871
#, no-wrap
msgid "<a name=\"method-now\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2871
#, no-wrap
msgid "`now()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2874
msgid ""
"The `now` function creates a new `Illuminate\\Support\\Carbon` instance for "
"the current time:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2876
#, no-wrap
msgid "    $now = now();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2878
#, no-wrap
msgid "<a name=\"method-old\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2878
#, no-wrap
msgid "`old()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2881
msgid ""
"The `old` function [retrieves](/docs/{{version}}/requests#retrieving-input) "
"an [old input](/docs/{{version}}/requests#old-input) value flashed into the "
"session:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2883
#, no-wrap
msgid "    $value = old('value');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2885
#, no-wrap
msgid "    $value = old('value', 'default');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2887
#, no-wrap
msgid "<a name=\"method-optional\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2887
#, no-wrap
msgid "`optional()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2890
msgid ""
"The `optional` function accepts any argument and allows you to access "
"properties or call methods on that object. If the given object is `null`, "
"properties and methods will return `null` instead of causing an error:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2892
#, no-wrap
msgid "    return optional($user->address)->street;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2894
#, no-wrap
msgid "    {!! old('name', optional($user)->name) !!}\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2896
msgid ""
"The `optional` function also accepts a closure as its second argument. The "
"closure will be invoked if the value provided as the first argument is not "
"null:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2900
#, no-wrap
msgid ""
"    return optional(User::find($id), function ($user) {\n"
"        return $user->name;\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2902
#, no-wrap
msgid "<a name=\"method-policy\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2902
#, no-wrap
msgid "`policy()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2905
msgid ""
"The `policy` method retrieves a "
"[policy](/docs/{{version}}/authorization#creating-policies) instance for a "
"given class:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2907
#, no-wrap
msgid "    $policy = policy(App\\Models\\User::class);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2909
#, no-wrap
msgid "<a name=\"method-redirect\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2909
#, no-wrap
msgid "`redirect()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2912
msgid ""
"The `redirect` function returns a [redirect HTTP "
"response](/docs/{{version}}/responses#redirects), or returns the redirector "
"instance if called with no arguments:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2914
#, no-wrap
msgid ""
"    return redirect($to = null, $status = 302, $headers = [], $https = "
"null);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2916
#, no-wrap
msgid "    return redirect('/home');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2918
#, no-wrap
msgid "    return redirect()->route('route.name');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2920
#, no-wrap
msgid "<a name=\"method-report\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2920
#, no-wrap
msgid "`report()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2923
msgid ""
"The `report` function will report an exception using your [exception "
"handler](/docs/{{version}}/errors#the-exception-handler):"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2925
#, no-wrap
msgid "    report($e);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2927
msgid ""
"The `report` function also accepts a string as an argument. When a string is "
"given to the function, the function will create an exception with the given "
"string as its message:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2929
#, no-wrap
msgid "    report('Something went wrong.');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2931
#, no-wrap
msgid "<a name=\"method-request\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2931
#, no-wrap
msgid "`request()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2934
msgid ""
"The `request` function returns the current "
"[request](/docs/{{version}}/requests) instance or obtains an input field's "
"value from the current request:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2936
#, no-wrap
msgid "    $request = request();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2938
#, no-wrap
msgid "    $value = request('key', $default);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2940
#, no-wrap
msgid "<a name=\"method-rescue\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2940
#, no-wrap
msgid "`rescue()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2943
msgid ""
"The `rescue` function executes the given closure and catches any exceptions "
"that occur during its execution. All exceptions that are caught will be sent "
"to your [exception handler](/docs/{{version}}/errors#the-exception-handler); "
"however, the request will continue processing:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2947
#, no-wrap
msgid ""
"    return rescue(function () {\n"
"        return $this->method();\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2949
msgid ""
"You may also pass a second argument to the `rescue` function. This argument "
"will be the \"default\" value that should be returned if an exception occurs "
"while executing the closure:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2953
#, no-wrap
msgid ""
"    return rescue(function () {\n"
"        return $this->method();\n"
"    }, false);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2959
#, no-wrap
msgid ""
"    return rescue(function () {\n"
"        return $this->method();\n"
"    }, function () {\n"
"        return $this->failure();\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2961
#, no-wrap
msgid "<a name=\"method-resolve\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2961
#, no-wrap
msgid "`resolve()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2964
msgid ""
"The `resolve` function resolves a given class or interface name to an "
"instance using the [service container](/docs/{{version}}/container):"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2966
#, no-wrap
msgid "    $api = resolve('HelpSpot\\API');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2968
#, no-wrap
msgid "<a name=\"method-response\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2968
#, no-wrap
msgid "`response()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2971
msgid ""
"The `response` function creates a [response](/docs/{{version}}/responses) "
"instance or obtains an instance of the response factory:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2973
#, no-wrap
msgid "    return response('Hello World', 200, $headers);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2975
#, no-wrap
msgid "    return response()->json(['foo' => 'bar'], 200, $headers);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2977
#, no-wrap
msgid "<a name=\"method-retry\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:2977
#, no-wrap
msgid "`retry()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2980
msgid ""
"The `retry` function attempts to execute the given callback until the given "
"maximum attempt threshold is met. If the callback does not throw an "
"exception, its return value will be returned. If the callback throws an "
"exception, it will automatically be retried. If the maximum attempt count is "
"exceeded, the exception will be thrown:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2984
#, no-wrap
msgid ""
"    return retry(5, function () {\n"
"        // Attempt 5 times while resting 100ms in between attempts...\n"
"    }, 100);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2986
msgid ""
"If you would like to manually calculate the number of milliseconds to sleep "
"in between attempts, you may pass a closure as the third argument to the "
"`retry` function:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2992
#, no-wrap
msgid ""
"    return retry(5, function () {\n"
"        // ...\n"
"    }, function ($attempt) {\n"
"        return $attempt * 100;\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:2995
msgid ""
"To only retry under specific conditions, you may pass a closure as the "
"fourth argument to the `retry` function:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3001
#, no-wrap
msgid ""
"    return retry(5, function () {\n"
"        // ...\n"
"    }, 100, function ($exception) {\n"
"        return $exception instanceof RetryException;\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3003
#, no-wrap
msgid "<a name=\"method-session\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:3003
#, no-wrap
msgid "`session()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3006
msgid ""
"The `session` function may be used to get or set "
"[session](/docs/{{version}}/session) values:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3008
#, no-wrap
msgid "    $value = session('key');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3010
msgid "You may set values by passing an array of key / value pairs to the function:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3012
#, no-wrap
msgid "    session(['chairs' => 7, 'instruments' => 3]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3014
msgid "The session store will be returned if no value is passed to the function:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3016
#, no-wrap
msgid "    $value = session()->get('key');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3018
#, no-wrap
msgid "    session()->put('key', $value);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3020
#, no-wrap
msgid "<a name=\"method-tap\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:3020
#, no-wrap
msgid "`tap()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3023
msgid ""
"The `tap` function accepts two arguments: an arbitrary `$value` and a "
"closure. The `$value` will be passed to the closure and then be returned by "
"the `tap` function. The return value of the closure is irrelevant:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3026
#, no-wrap
msgid ""
"    $user = tap(User::first(), function ($user) {\n"
"        $user->name = 'taylor';\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3029
#, no-wrap
msgid ""
"        $user->save();\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3031
msgid ""
"If no closure is passed to the `tap` function, you may call any method on "
"the given `$value`. The return value of the method you call will always be "
"`$value`, regardless of what the method actually returns in its "
"definition. For example, the Eloquent `update` method typically returns an "
"integer. However, we can force the method to return the model itself by "
"chaining the `update` method call through the `tap` function:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3036
#, no-wrap
msgid ""
"    $user = tap($user)->update([\n"
"        'name' => $name,\n"
"        'email' => $email,\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3038
msgid ""
"To add a `tap` method to a class, you may add the "
"`Illuminate\\Support\\Traits\\Tappable` trait to the class. The `tap` method "
"of this trait accepts a Closure as its only argument. The object instance "
"itself will be passed to the Closure and then be returned by the `tap` "
"method:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3042
#, no-wrap
msgid ""
"    return $user->tap(function ($user) {\n"
"        //\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3044
#, no-wrap
msgid "<a name=\"method-throw-if\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:3044
#, no-wrap
msgid "`throw_if()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3047
msgid ""
"The `throw_if` function throws the given exception if a given boolean "
"expression evaluates to `true`:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3049
#, no-wrap
msgid "    throw_if(! Auth::user()->isAdmin(), AuthorizationException::class);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3055
#, no-wrap
msgid ""
"    throw_if(\n"
"        ! Auth::user()->isAdmin(),\n"
"        AuthorizationException::class,\n"
"        'You are not allowed to access this page.'\n"
"    );\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3057
#, no-wrap
msgid "<a name=\"method-throw-unless\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:3057
#, no-wrap
msgid "`throw_unless()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3060
msgid ""
"The `throw_unless` function throws the given exception if a given boolean "
"expression evaluates to `false`:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3062
#, no-wrap
msgid "    throw_unless(Auth::user()->isAdmin(), AuthorizationException::class);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3068
#, no-wrap
msgid ""
"    throw_unless(\n"
"        Auth::user()->isAdmin(),\n"
"        AuthorizationException::class,\n"
"        'You are not allowed to access this page.'\n"
"    );\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3070
#, no-wrap
msgid "<a name=\"method-today\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:3070
#, no-wrap
msgid "`today()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3073
msgid ""
"The `today` function creates a new `Illuminate\\Support\\Carbon` instance "
"for the current date:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3075
#, no-wrap
msgid "    $today = today();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3077
#, no-wrap
msgid "<a name=\"method-trait-uses-recursive\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:3077
#, no-wrap
msgid "`trait_uses_recursive()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3080
msgid "The `trait_uses_recursive` function returns all traits used by a trait:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3082
#, no-wrap
msgid ""
"    $traits = "
"trait_uses_recursive(\\Illuminate\\Notifications\\Notifiable::class);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3084
#, no-wrap
msgid "<a name=\"method-transform\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:3084
#, no-wrap
msgid "`transform()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3087
msgid ""
"The `transform` function executes a closure on a given value if the value is "
"not [blank](#method-blank) and then returns the return value of the closure:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3091
#, no-wrap
msgid ""
"    $callback = function ($value) {\n"
"        return $value * 2;\n"
"    };\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3093
#, no-wrap
msgid "    $result = transform(5, $callback);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3095 docs/8.x/helpers.md:3143
#, no-wrap
msgid "    // 10\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3097
msgid ""
"A default value or closure may be passed as the third argument to the "
"function. This value will be returned if the given value is blank:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3099
#, no-wrap
msgid "    $result = transform(null, $callback, 'The value is blank');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3101
#, no-wrap
msgid "    // The value is blank\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3103
#, no-wrap
msgid "<a name=\"method-validator\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:3103
#, no-wrap
msgid "`validator()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3106
msgid ""
"The `validator` function creates a new "
"[validator](/docs/{{version}}/validation) instance with the given "
"arguments. You may use it as an alternative to the `Validator` facade:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3108
#, no-wrap
msgid "    $validator = validator($data, $rules, $messages);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3110
#, no-wrap
msgid "<a name=\"method-value\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:3110
#, no-wrap
msgid "`value()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3113
msgid ""
"The `value` function returns the value it is given. However, if you pass a "
"closure to the function, the closure will be executed and its returned value "
"will be returned:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3115
#, no-wrap
msgid "    $result = value(true);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3121
#, no-wrap
msgid ""
"    $result = value(function () {\n"
"        return false;\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3125
#, no-wrap
msgid "<a name=\"method-view\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:3125
#, no-wrap
msgid "`view()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3128
msgid "The `view` function retrieves a [view](/docs/{{version}}/views) instance:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3130
#, no-wrap
msgid "    return view('auth.login');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3132
#, no-wrap
msgid "<a name=\"method-with\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/helpers.md:3132
#, no-wrap
msgid "`with()` {#collection-method}"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3135
msgid ""
"The `with` function returns the value it is given. If a closure is passed as "
"the second argument to the function, the closure will be executed and its "
"returned value will be returned:"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3139
#, no-wrap
msgid ""
"    $callback = function ($value) {\n"
"        return (is_numeric($value)) ? $value * 2 : 0;\n"
"    };\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3141
#, no-wrap
msgid "    $result = with(5, $callback);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3145
#, no-wrap
msgid "    $result = with(null, $callback);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3149
#, no-wrap
msgid "    $result = with(5, null);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/helpers.md:3150
#, no-wrap
msgid "    // 5\n"
msgstr ""
