msgid ""
msgstr ""
"Content-Type: text/plain; charset=UTF-8\n"
"Language: zh_TW\n"
"Language-Team: Chinese Traditional\n"
"PO-Revision-Date: 2024-06-30 08:27\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Project-Id-Version: laravel-docs\n"
"X-Crowdin-File: /main/templates/hashing.pot\n"
"X-Crowdin-File-ID: 77\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"

# H1
#: ./docs/8.x/hashing.md:1
#: ./docs/9.x/hashing.md:1
#: ./docs/10.x/hashing.md:1
#: ./docs/11.x/hashing.md:1
#: ./docs/master/hashing.md:1
msgid "Hashing"
msgstr "雜湊"

# P
#: ./docs/8.x/hashing.md:3
#: ./docs/9.x/hashing.md:3
#: ./docs/10.x/hashing.md:3
#: ./docs/11.x/hashing.md:3
#: ./docs/master/hashing.md:3
msgid "[Introduction](#introduction)"
msgstr "[簡介](#introduction)"

# P
#: ./docs/8.x/hashing.md:4
#: ./docs/9.x/hashing.md:4
#: ./docs/10.x/hashing.md:4
#: ./docs/11.x/hashing.md:4
#: ./docs/master/hashing.md:4
msgid "[Configuration](#configuration)"
msgstr "[設定](#configuration)"

# P
#: ./docs/8.x/hashing.md:5
#: ./docs/9.x/hashing.md:5
#: ./docs/10.x/hashing.md:5
#: ./docs/11.x/hashing.md:5
#: ./docs/master/hashing.md:5
msgid "[Basic Usage](#basic-usage)"
msgstr "[基礎用法](#basic-usage)"

# P
#: ./docs/8.x/hashing.md:6
#: ./docs/9.x/hashing.md:6
#: ./docs/10.x/hashing.md:6
#: ./docs/11.x/hashing.md:6
#: ./docs/master/hashing.md:6
msgid "[Hashing Passwords](#hashing-passwords)"
msgstr "[雜湊密碼](#hashing-passwords)"

# P
#: ./docs/10.x/hashing.md:7
#: ./docs/11.x/hashing.md:7
#: ./docs/master/hashing.md:7
msgid "[Verifying That a Password Matches a Hash](#verifying-that-a-password-matches-a-hash)"
msgstr ""

# P
#: ./docs/8.x/hashing.md:7
#: ./docs/9.x/hashing.md:7
msgid "[Verifying That A Password Matches A Hash](#verifying-that-a-password-matches-a-hash)"
msgstr "[驗證密碼是否符合雜湊](#verifying-that-a-password-matches-a-hash)"

# P
#: ./docs/10.x/hashing.md:8
#: ./docs/11.x/hashing.md:8
#: ./docs/master/hashing.md:8
msgid "[Determining if a Password Needs to be Rehashed](#determining-if-a-password-needs-to-be-rehashed)"
msgstr ""

# P
#: ./docs/8.x/hashing.md:8
#: ./docs/9.x/hashing.md:8
msgid "[Determining If A Password Needs To Be Rehashed](#determining-if-a-password-needs-to-be-rehashed)"
msgstr "[判斷是否需要重新雜湊密碼](#determining-if-a-password-needs-to-be-rehashed)"

# P
#: ./docs/11.x/hashing.md:9
msgid "[Hash Algorithm Verification](#hash-algorithm-verification)"
msgstr ""

# P
#: ./docs/8.x/hashing.md:10
#: ./docs/9.x/hashing.md:10
#: ./docs/10.x/hashing.md:10
#: ./docs/11.x/hashing.md:11
#: ./docs/master/hashing.md:10
#~ msgid "<a name=\"introduction\"></a>"
#~ msgstr ""

# H2
#: ./docs/8.x/hashing.md:11
#: ./docs/9.x/hashing.md:11
#: ./docs/10.x/hashing.md:11
#: ./docs/11.x/hashing.md:12
#: ./docs/master/hashing.md:11
msgid "Introduction"
msgstr "簡介"

# P
#: ./docs/8.x/hashing.md:13
#: ./docs/9.x/hashing.md:13
#: ./docs/10.x/hashing.md:13
#: ./docs/11.x/hashing.md:14
#: ./docs/master/hashing.md:13
msgid "The Laravel `Hash` [facade](/docs/{{version}}/facades) provides secure Bcrypt and Argon2 hashing for storing user passwords. If you are using one of the [Laravel application starter kits](/docs/{{version}}/starter-kits), Bcrypt will be used for registration and authentication by default."
msgstr "Laravel 的 `Hash` [Facade](/docs/{{version}}/facades) 提供了安全的 Bcrypt 與 Argon2 雜湊，用以儲存使用者密碼。若使用 [Laravel 專案入門套件](/docs/{{version}}/starter-kits)，則預設會使用 Bcrypt 來註冊與登入。"

# P
#: ./docs/8.x/hashing.md:15
#: ./docs/9.x/hashing.md:15
#: ./docs/10.x/hashing.md:15
#: ./docs/11.x/hashing.md:16
#: ./docs/master/hashing.md:15
msgid "Bcrypt is a great choice for hashing passwords because its \"work factor\" is adjustable, which means that the time it takes to generate a hash can be increased as hardware power increases. When hashing passwords, slow is good. The longer an algorithm takes to hash a password, the longer it takes malicious users to generate \"rainbow tables\" of all possible string hash values that may be used in brute force attacks against applications."
msgstr "Bcrypt 是雜湊密碼的一個不錯的選擇，因為其「^[Work Factor](工作因)」是可調整的，這表示，隨著硬體功能的提升，我們也能調整產生雜湊所需的時間。在雜湊密碼時，慢即是好。若演算法需要更多的時間來雜湊密碼，惡意使用者要產生「^[彩虹表](Rainbow Table)」的時間也就更長。彩虹表是一個包含各種可能字串雜湊值的表格，可用來暴力破解密碼。"

# P
#: ./docs/8.x/hashing.md:17
#: ./docs/9.x/hashing.md:17
#: ./docs/10.x/hashing.md:17
#: ./docs/11.x/hashing.md:18
#: ./docs/master/hashing.md:17
#~ msgid "<a name=\"configuration\"></a>"
#~ msgstr ""

# H2
#: ./docs/8.x/hashing.md:18
#: ./docs/9.x/hashing.md:18
#: ./docs/10.x/hashing.md:18
#: ./docs/11.x/hashing.md:19
#: ./docs/master/hashing.md:18
msgid "Configuration"
msgstr "設定"

# P
#: ./docs/8.x/hashing.md:20
#: ./docs/9.x/hashing.md:20
#: ./docs/10.x/hashing.md:20
msgid "The default hashing driver for your application is configured in your application's `config/hashing.php` configuration file. There are currently several supported drivers: [Bcrypt](https://en.wikipedia.org/wiki/Bcrypt) and [Argon2](https://en.wikipedia.org/wiki/Argon2) (Argon2i and Argon2id variants)."
msgstr "專案中預設的雜湊 Driver 設定在專案的 `config/hashing.php` 設定檔中。目前有支援多個 Driver： [Bcrypt](https://en.wikipedia.org/wiki/Bcrypt) 與 [Argon2](https://en.wikipedia.org/wiki/Argon2) (Argon2i 與 Argon2id 變形)。"

# P
#: ./docs/11.x/hashing.md:21
#: ./docs/master/hashing.md:20
msgid "By default, Laravel uses the `bcrypt` hashing driver when hashing data. However, several other hashing drivers are supported, including [`argon`](https://en.wikipedia.org/wiki/Argon2) and [`argon2id`](https://en.wikipedia.org/wiki/Argon2)."
msgstr ""

# P
#: ./docs/8.x/hashing.md:22
msgid "The Argon2i driver requires PHP 7.2.0 or greater and the Argon2id driver requires PHP 7.3.0 or greater."
msgstr ""

# P
#: ./docs/11.x/hashing.md:23
#: ./docs/master/hashing.md:22
msgid "You may specify your application's hashing driver using the `HASH_DRIVER` environment variable. But, if you want to customize all of Laravel's hashing driver options, you should publish the complete `hashing` configuration file using the `config:publish` Artisan command:"
msgstr ""

# P
#: ./docs/8.x/hashing.md:24
#: ./docs/9.x/hashing.md:22
#: ./docs/10.x/hashing.md:22
#: ./docs/11.x/hashing.md:29
#: ./docs/master/hashing.md:28
#~ msgid "<a name=\"basic-usage\"></a>"
#~ msgstr ""

# CODE: bash
#: ./docs/11.x/hashing.md:25
#: ./docs/master/hashing.md:24
msgid "php artisan config:publish hashing"
msgstr ""

# H2
#: ./docs/8.x/hashing.md:25
#: ./docs/9.x/hashing.md:23
#: ./docs/10.x/hashing.md:23
#: ./docs/11.x/hashing.md:30
#: ./docs/master/hashing.md:29
msgid "Basic Usage"
msgstr "基礎用法"

# P
#: ./docs/8.x/hashing.md:27
#: ./docs/9.x/hashing.md:25
#: ./docs/10.x/hashing.md:25
#: ./docs/11.x/hashing.md:32
#: ./docs/master/hashing.md:31
#~ msgid "<a name=\"hashing-passwords\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/hashing.md:28
#: ./docs/9.x/hashing.md:26
#: ./docs/10.x/hashing.md:26
#: ./docs/11.x/hashing.md:33
#: ./docs/master/hashing.md:32
msgid "Hashing Passwords"
msgstr "雜湊密碼"

# CODE
#: ./docs/10.x/hashing.md:30
#: ./docs/11.x/hashing.md:37
#: ./docs/master/hashing.md:36
msgid ""
"<?php\n"
"\n"
"namespace App\\Http\\Controllers;\n"
"\n"
"use Illuminate\\Http\\RedirectResponse;\n"
"use Illuminate\\Http\\Request;\n"
"use Illuminate\\Support\\Facades\\Hash;\n"
"\n"
"class PasswordController extends Controller\n"
"{\n"
"    /**\n"
"     * Update the password for the user.\n"
"     */\n"
"    public function update(Request $request): RedirectResponse\n"
"    {\n"
"        // Validate the new password length...\n"
"\n"
"        $request->user()->fill([\n"
"            'password' => Hash::make($request->newPassword)\n"
"        ])->save();\n"
"\n"
"        return redirect('/profile');\n"
"    }\n"
"}"
msgstr ""

# P
#: ./docs/8.x/hashing.md:30
#: ./docs/9.x/hashing.md:28
#: ./docs/10.x/hashing.md:28
#: ./docs/11.x/hashing.md:35
#: ./docs/master/hashing.md:34
msgid "You may hash a password by calling the `make` method on the `Hash` facade:"
msgstr "可以呼叫 `Hash` Facade 上的 `make` 方法來雜湊密碼："

# CODE
#: ./docs/8.x/hashing.md:32
#: ./docs/9.x/hashing.md:30
msgid ""
"<?php\n"
"\n"
"namespace App\\Http\\Controllers;\n"
"\n"
"use App\\Http\\Controllers\\Controller;\n"
"use Illuminate\\Http\\Request;\n"
"use Illuminate\\Support\\Facades\\Hash;\n"
"\n"
"class PasswordController extends Controller\n"
"{\n"
"    /**\n"
"     * Update the password for the user.\n"
"     *\n"
"     * @param  \\Illuminate\\Http\\Request  $request\n"
"     * @return \\Illuminate\\Http\\Response\n"
"     */\n"
"    public function update(Request $request)\n"
"    {\n"
"        // Validate the new password length...\n"
"\n"
"        $request->user()->fill([\n"
"            'password' => Hash::make($request->newPassword)\n"
"        ])->save();\n"
"    }\n"
"}"
msgstr ""

# P
#: ./docs/8.x/hashing.md:58
#: ./docs/9.x/hashing.md:56
#: ./docs/10.x/hashing.md:55
#: ./docs/11.x/hashing.md:62
#: ./docs/master/hashing.md:61
#~ msgid "<a name=\"adjusting-the-bcrypt-work-factor\"></a>"
#~ msgstr ""

# H4
#: ./docs/8.x/hashing.md:59
#: ./docs/9.x/hashing.md:57
#: ./docs/10.x/hashing.md:56
#: ./docs/11.x/hashing.md:63
#: ./docs/master/hashing.md:62
msgid "Adjusting The Bcrypt Work Factor"
msgstr "調整 Bcrypt 的 Work Factor"

# P
#: ./docs/8.x/hashing.md:61
#: ./docs/9.x/hashing.md:59
#: ./docs/10.x/hashing.md:58
#: ./docs/11.x/hashing.md:65
#: ./docs/master/hashing.md:64
msgid "If you are using the Bcrypt algorithm, the `make` method allows you to manage the work factor of the algorithm using the `rounds` option; however, the default work factor managed by Laravel is acceptable for most applications:"
msgstr "若使用 Bcrypt 演算法，可使用 `rounds` 選項來在 `make` 方法中控制 Bcrypt 的 Work Factor。不過，Laravel 所控制的預設 Work Factor 對於大多數專案來說應是可接受的值："

# CODE
#: ./docs/8.x/hashing.md:63
#: ./docs/9.x/hashing.md:61
#: ./docs/10.x/hashing.md:60
#: ./docs/11.x/hashing.md:67
#: ./docs/master/hashing.md:66
msgid ""
"$hashed = Hash::make('password', [\n"
"    'rounds' => 12,\n"
"]);"
msgstr ""

# P
#: ./docs/8.x/hashing.md:67
#: ./docs/9.x/hashing.md:65
#: ./docs/10.x/hashing.md:64
#: ./docs/11.x/hashing.md:71
#: ./docs/master/hashing.md:70
#~ msgid "<a name=\"adjusting-the-argon2-work-factor\"></a>"
#~ msgstr ""

# H4
#: ./docs/8.x/hashing.md:68
#: ./docs/9.x/hashing.md:66
#: ./docs/10.x/hashing.md:65
#: ./docs/11.x/hashing.md:72
#: ./docs/master/hashing.md:71
msgid "Adjusting The Argon2 Work Factor"
msgstr "調整 Argon2 的 Work Factor"

# P
#: ./docs/8.x/hashing.md:70
#: ./docs/9.x/hashing.md:68
#: ./docs/10.x/hashing.md:67
#: ./docs/11.x/hashing.md:74
#: ./docs/master/hashing.md:73
msgid "If you are using the Argon2 algorithm, the `make` method allows you to manage the work factor of the algorithm using the `memory`, `time`, and `threads` options; however, the default values managed by Laravel are acceptable for most applications:"
msgstr "若使用 Argon2 演算法，可使用 `memory`、`time`、`threads` 等選項來在 `make` 方法中控制 Argon2 演算法的 Work Factor。不過，Laravel 所控制的預設 Work Factor 對於大多數專案來說應是可接受的值："

# CODE
#: ./docs/8.x/hashing.md:72
#: ./docs/9.x/hashing.md:70
#: ./docs/10.x/hashing.md:69
#: ./docs/11.x/hashing.md:76
#: ./docs/master/hashing.md:75
msgid ""
"$hashed = Hash::make('password', [\n"
"    'memory' => 1024,\n"
"    'time' => 2,\n"
"    'threads' => 2,\n"
"]);"
msgstr ""

# P
#: ./docs/8.x/hashing.md:78
#: ./docs/9.x/hashing.md:77
#: ./docs/10.x/hashing.md:76
#: ./docs/11.x/hashing.md:83
#: ./docs/master/hashing.md:82
msgid "For more information on these options, please refer to the [official PHP documentation regarding Argon hashing](https://secure.php.net/manual/en/function.password-hash.php)."
msgstr "有關這些選項的詳細資訊，請參考 [PHP 官方說明文件中有關 Argon 雜湊的說明](https://secure.php.net/manual/en/function.password-hash.php)。"

# H3
#: ./docs/10.x/hashing.md:79
#: ./docs/11.x/hashing.md:86
#: ./docs/master/hashing.md:85
msgid "Verifying That a Password Matches a Hash"
msgstr ""

# P
#: ./docs/8.x/hashing.md:80
#: ./docs/9.x/hashing.md:79
#: ./docs/10.x/hashing.md:78
#: ./docs/11.x/hashing.md:85
#: ./docs/master/hashing.md:84
#~ msgid "<a name=\"verifying-that-a-password-matches-a-hash\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/hashing.md:81
#: ./docs/9.x/hashing.md:80
msgid "Verifying That A Password Matches A Hash"
msgstr "驗證密碼是否符合雜湊"

# P
#: ./docs/8.x/hashing.md:83
#: ./docs/9.x/hashing.md:82
#: ./docs/10.x/hashing.md:81
#: ./docs/11.x/hashing.md:88
#: ./docs/master/hashing.md:87
msgid "The `check` method provided by the `Hash` facade allows you to verify that a given plain-text string corresponds to a given hash:"
msgstr "`Hash` Facade 的 `check` 方法可用來驗證給定的純文字字串是否對應給定的雜湊："

# CODE
#: ./docs/8.x/hashing.md:85
#: ./docs/9.x/hashing.md:84
#: ./docs/10.x/hashing.md:83
#: ./docs/11.x/hashing.md:90
#: ./docs/master/hashing.md:89
msgid ""
"if (Hash::check('plain-text', $hashedPassword)) {\n"
"    // The passwords match...\n"
"}"
msgstr ""

# H3
#: ./docs/10.x/hashing.md:88
#: ./docs/11.x/hashing.md:95
#: ./docs/master/hashing.md:94
msgid "Determining if a Password Needs to be Rehashed"
msgstr ""

# P
#: ./docs/8.x/hashing.md:89
#: ./docs/9.x/hashing.md:88
#: ./docs/10.x/hashing.md:87
#: ./docs/11.x/hashing.md:94
#: ./docs/master/hashing.md:93
#~ msgid "<a name=\"determining-if-a-password-needs-to-be-rehashed\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/hashing.md:90
#: ./docs/9.x/hashing.md:89
msgid "Determining If A Password Needs To Be Rehashed"
msgstr "判斷密碼是否需要重新雜湊"

# P
#: ./docs/8.x/hashing.md:92
#: ./docs/9.x/hashing.md:91
#: ./docs/10.x/hashing.md:90
#: ./docs/11.x/hashing.md:97
#: ./docs/master/hashing.md:96
msgid "The `needsRehash` method provided by the `Hash` facade allows you to determine if the work factor used by the hasher has changed since the password was hashed. Some applications choose to perform this check during the application's authentication process:"
msgstr "`Hash` Facade 的 `needsRehash` 方法可用來判斷自從該密碼被雜湊以來 Hash 程式的 Work Factor 是否有經過更改。有的專案會在網站的身份驗證過程中做這項檢查："

# CODE
#: ./docs/8.x/hashing.md:94
#: ./docs/9.x/hashing.md:93
#: ./docs/10.x/hashing.md:92
#: ./docs/11.x/hashing.md:99
#: ./docs/master/hashing.md:98
msgid ""
"if (Hash::needsRehash($hashed)) {\n"
"    $hashed = Hash::make('plain-text');\n"
"}"
msgstr ""

# P
#: ./docs/11.x/hashing.md:103
#~ msgid "<a name=\"hash-algorithm-verification\"></a>"
#~ msgstr ""

# H2
#: ./docs/11.x/hashing.md:104
msgid "Hash Algorithm Verification"
msgstr ""

# P
#: ./docs/11.x/hashing.md:106
msgid "To prevent hash algorithm manipulation, Laravel's `Hash::check` method will first verify the given hash was generated using the application's selected hashing algorithm. If the algorithms are different, a `RuntimeException` exception will be thrown."
msgstr ""

# P
#: ./docs/11.x/hashing.md:108
msgid "This is the expected behavior for most applications, where the hashing algorithm is not expected to change and different algorithms can be an indication of a malicious attack. However, if you need to support multiple hashing algorithms within your application, such as when migrating from one algorithm to another, you can disable hash algorithm verification by setting the `HASH_VERIFY` environment variable to `false`:"
msgstr ""

# CODE: ini
#: ./docs/11.x/hashing.md:110
msgid "HASH_VERIFY=false"
msgstr ""
