# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-03-23 04:12+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title #
#: docs/master/filesystem.md:1
#, markdown-text, no-wrap
msgid "File Storage"
msgstr ""

#. type: Bullet: '- '
#: docs/master/filesystem.md:20
#, markdown-text
msgid "[Introduction](#introduction)"
msgstr ""

#. type: Bullet: '- '
#: docs/master/filesystem.md:20
#, markdown-text
msgid "[Configuration](#configuration)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/filesystem.md:20
#, markdown-text
msgid "[The Local Driver](#the-local-driver)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/filesystem.md:20
#, markdown-text
msgid "[The Public Disk](#the-public-disk)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/filesystem.md:20
#, markdown-text
msgid "[Driver Prerequisites](#driver-prerequisites)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/filesystem.md:20
#, markdown-text
msgid "[Caching](#caching)"
msgstr ""

#. type: Bullet: '- '
#: docs/master/filesystem.md:20
#, markdown-text
msgid "[Obtaining Disk Instances](#obtaining-disk-instances)"
msgstr ""

#. type: Bullet: '- '
#: docs/master/filesystem.md:20
#, markdown-text
msgid "[Retrieving Files](#retrieving-files)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/filesystem.md:20
#, markdown-text
msgid "[Downloading Files](#downloading-files)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/filesystem.md:20
#, markdown-text
msgid "[File URLs](#file-urls)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/filesystem.md:20
#, markdown-text
msgid "[File Metadata](#file-metadata)"
msgstr ""

#. type: Bullet: '- '
#: docs/master/filesystem.md:20
#, markdown-text
msgid "[Storing Files](#storing-files)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/filesystem.md:20
#, markdown-text
msgid "[File Uploads](#file-uploads)"
msgstr ""

#. type: Bullet: '    - '
#: docs/master/filesystem.md:20
#, markdown-text
msgid "[File Visibility](#file-visibility)"
msgstr ""

#. type: Bullet: '- '
#: docs/master/filesystem.md:20
#, markdown-text
msgid "[Deleting Files](#deleting-files)"
msgstr ""

#. type: Bullet: '- '
#: docs/master/filesystem.md:20
#, markdown-text
msgid "[Directories](#directories)"
msgstr ""

#. type: Bullet: '- '
#: docs/master/filesystem.md:20
#, markdown-text
msgid "[Custom Filesystems](#custom-filesystems)"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:22
#, markdown-text, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/filesystem.md:22
#, markdown-text, no-wrap
msgid "Introduction"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:25
#, markdown-text
msgid ""
"Laravel provides a powerful filesystem abstraction thanks to the wonderful "
"[Flysystem](https://github.com/thephpleague/flysystem) PHP package by Frank "
"de Jonge. The Laravel Flysystem integration provides simple drivers for "
"working with local filesystems, SFTP, and Amazon S3. Even better, it's "
"amazingly simple to switch between these storage options between your local "
"development machine and production server as the API remains the same for "
"each system."
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:27
#, markdown-text, no-wrap
msgid "<a name=\"configuration\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/filesystem.md:27
#, markdown-text, no-wrap
msgid "Configuration"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:30
#, markdown-text
msgid ""
"Laravel's filesystem configuration file is located at "
"`config/filesystems.php`. Within this file, you may configure all of your "
"filesystem \"disks\". Each disk represents a particular storage driver and "
"storage location. Example configurations for each supported driver are "
"included in the configuration file so you can modify the configuration to "
"reflect your storage preferences and credentials."
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:32
#, markdown-text
msgid ""
"The `local` driver interacts with files stored locally on the server running "
"the Laravel application while the `s3` driver is used to write to Amazon's "
"S3 cloud storage service."
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:34
#, markdown-text, no-wrap
msgid ""
"> {tip} You may configure as many disks as you like and may even have "
"multiple disks that use the same driver.\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:36
#, markdown-text, no-wrap
msgid "<a name=\"the-local-driver\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/filesystem.md:36
#, markdown-text, no-wrap
msgid "The Local Driver"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:39
#, markdown-text
msgid ""
"When using the `local` driver, all file operations are relative to the "
"`root` directory defined in your `filesystems` configuration file. By "
"default, this value is set to the `storage/app` directory. Therefore, the "
"following method would write to `storage/app/example.txt`:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:41 docs/master/filesystem.md:149
#: docs/master/filesystem.md:190 docs/master/filesystem.md:203
#: docs/master/filesystem.md:237 docs/master/filesystem.md:250
#: docs/master/filesystem.md:259 docs/master/filesystem.md:389
#: docs/master/filesystem.md:434 docs/master/filesystem.md:442
#: docs/master/filesystem.md:454
#, markdown-text, no-wrap
msgid "    use Illuminate\\Support\\Facades\\Storage;\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:43
#, markdown-text, no-wrap
msgid "    Storage::disk('local')->put('example.txt', 'Contents');\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:45
#, markdown-text, no-wrap
msgid "<a name=\"the-public-disk\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/filesystem.md:45
#, markdown-text, no-wrap
msgid "The Public Disk"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:48
#, markdown-text
msgid ""
"The `public` disk included in your application's `filesystems` configuration "
"file is intended for files that are going to be publicly accessible. By "
"default, the `public` disk uses the `local` driver and stores its files in "
"`storage/app/public`."
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:50
#, markdown-text
msgid ""
"To make these files accessible from the web, you should create a symbolic "
"link from `public/storage` to `storage/app/public`. Utilizing this folder "
"convention will keep your publicly accessible files in one directory that "
"can be easily shared across deployments when using zero down-time deployment "
"systems like [Envoyer](https://envoyer.io)."
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:52
#, markdown-text
msgid "To create the symbolic link, you may use the `storage:link` Artisan command:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:54
#, markdown-text, no-wrap
msgid "    php artisan storage:link\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:56
#, markdown-text
msgid ""
"Once a file has been stored and the symbolic link has been created, you can "
"create a URL to the files using the `asset` helper:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:58
#, markdown-text, no-wrap
msgid "    echo asset('storage/file.txt');\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:60
#, markdown-text
msgid ""
"You may configure additional symbolic links in your `filesystems` "
"configuration file. Each of the configured links will be created when you "
"run the `storage:link` command:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:65
#, markdown-text, no-wrap
msgid ""
"    'links' => [\n"
"        public_path('storage') => storage_path('app/public'),\n"
"        public_path('images') => storage_path('app/images'),\n"
"    ],\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:67
#, markdown-text, no-wrap
msgid "<a name=\"driver-prerequisites\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/filesystem.md:67
#, markdown-text, no-wrap
msgid "Driver Prerequisites"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:70
#, markdown-text, no-wrap
msgid "<a name=\"composer-packages\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/filesystem.md:70
#, markdown-text, no-wrap
msgid "Composer Packages"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:73
#, markdown-text
msgid ""
"Before using the S3 or SFTP drivers, you will need to install the "
"appropriate package via the Composer package manager:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:76
#, markdown-text
msgid ""
"- Amazon S3: `league/flysystem-aws-s3-v3 ~1.0` - SFTP: "
"`league/flysystem-sftp ~1.0`"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:78
#, markdown-text
msgid ""
"In addition, you may choose to install a cached adapter for increased "
"performance:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:80
#, markdown-text
msgid "- CachedAdapter: `league/flysystem-cached-adapter ~1.0`"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:82
#, markdown-text, no-wrap
msgid "<a name=\"s3-driver-configuration\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/filesystem.md:82
#, markdown-text, no-wrap
msgid "S3 Driver Configuration"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:85
#, markdown-text
msgid ""
"The S3 driver configuration information is located in your "
"`config/filesystems.php` configuration file. This file contains an example "
"configuration array for an S3 driver. You are free to modify this array with "
"your own S3 configuration and credentials. For convenience, these "
"environment variables match the naming convention used by the AWS CLI."
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:87
#, markdown-text, no-wrap
msgid "<a name=\"ftp-driver-configuration\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/filesystem.md:87
#, markdown-text, no-wrap
msgid "FTP Driver Configuration"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:90
#, markdown-text
msgid ""
"Laravel's Flysystem integrations work great with FTP; however, a sample "
"configuration is not included with the framework's default `filesystems.php` "
"configuration file. If you need to configure an FTP filesystem, you may use "
"the configuration example below:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:96
#, markdown-text, no-wrap
msgid ""
"    'ftp' => [\n"
"        'driver' => 'ftp',\n"
"        'host' => 'ftp.example.com',\n"
"        'username' => 'your-username',\n"
"        'password' => 'your-password',\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:104
#, markdown-text, no-wrap
msgid ""
"        // Optional FTP Settings...\n"
"        // 'port' => 21,\n"
"        // 'root' => '',\n"
"        // 'passive' => true,\n"
"        // 'ssl' => true,\n"
"        // 'timeout' => 30,\n"
"    ],\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:106
#, markdown-text, no-wrap
msgid "<a name=\"sftp-driver-configuration\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/filesystem.md:106
#, markdown-text, no-wrap
msgid "SFTP Driver Configuration"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:109
#, markdown-text
msgid ""
"Laravel's Flysystem integrations work great with SFTP; however, a sample "
"configuration is not included with the framework's default `filesystems.php` "
"configuration file. If you need to configure an SFTP filesystem, you may use "
"the configuration example below:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:115
#, markdown-text, no-wrap
msgid ""
"    'sftp' => [\n"
"        'driver' => 'sftp',\n"
"        'host' => 'example.com',\n"
"        'username' => 'your-username',\n"
"        'password' => 'your-password',\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:119
#, markdown-text, no-wrap
msgid ""
"        // Settings for SSH key based authentication...\n"
"        'privateKey' => '/path/to/privateKey',\n"
"        'password' => 'encryption-password',\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:125
#, markdown-text, no-wrap
msgid ""
"        // Optional SFTP Settings...\n"
"        // 'port' => 22,\n"
"        // 'root' => '',\n"
"        // 'timeout' => 30,\n"
"    ],\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:127
#, markdown-text, no-wrap
msgid "<a name=\"caching\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/filesystem.md:127
#, markdown-text, no-wrap
msgid "Caching"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:130
#, markdown-text
msgid ""
"To enable caching for a given disk, you may add a `cache` directive to the "
"disk's configuration options. The `cache` option should be an array of "
"caching options containing the `disk` name, the `expire` time in seconds, "
"and the cache `prefix`:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:133
#, markdown-text, no-wrap
msgid ""
"    's3' => [\n"
"        'driver' => 's3',\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:135
#, markdown-text, no-wrap
msgid "        // Other Disk Options...\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:142
#, markdown-text, no-wrap
msgid ""
"        'cache' => [\n"
"            'store' => 'memcached',\n"
"            'expire' => 600,\n"
"            'prefix' => 'cache-prefix',\n"
"        ],\n"
"    ],\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:144
#, markdown-text, no-wrap
msgid "<a name=\"obtaining-disk-instances\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/filesystem.md:144
#, markdown-text, no-wrap
msgid "Obtaining Disk Instances"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:147
#, markdown-text
msgid ""
"The `Storage` facade may be used to interact with any of your configured "
"disks. For example, you may use the `put` method on the facade to store an "
"avatar on the default disk. If you call methods on the `Storage` facade "
"without first calling the `disk` method, the method will automatically be "
"passed to the default disk:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:151
#, markdown-text, no-wrap
msgid "    Storage::put('avatars/1', $content);\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:153
#, markdown-text
msgid ""
"If your application interacts with multiple disks, you may use the `disk` "
"method on the `Storage` facade to work with files on a particular disk:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:155
#, markdown-text, no-wrap
msgid "    Storage::disk('s3')->put('avatars/1', $content);\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:157
#, markdown-text, no-wrap
msgid "<a name=\"retrieving-files\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/filesystem.md:157
#, markdown-text, no-wrap
msgid "Retrieving Files"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:160
#, markdown-text
msgid ""
"The `get` method may be used to retrieve the contents of a file. The raw "
"string contents of the file will be returned by the method. Remember, all "
"file paths should be specified relative to the disk's \"root\" location:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:162
#, markdown-text, no-wrap
msgid "    $contents = Storage::get('file.jpg');\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:164
#, markdown-text
msgid "The `exists` method may be used to determine if a file exists on the disk:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:168
#, markdown-text, no-wrap
msgid ""
"    if (Storage::disk('s3')->exists('file.jpg')) {\n"
"        // ...\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:170
#, markdown-text
msgid ""
"The `missing` method may be used to determine if a file is missing from the "
"disk:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:174
#, markdown-text, no-wrap
msgid ""
"    if (Storage::disk('s3')->missing('file.jpg')) {\n"
"        // ...\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:176
#, markdown-text, no-wrap
msgid "<a name=\"downloading-files\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/filesystem.md:176
#, markdown-text, no-wrap
msgid "Downloading Files"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:179
#, markdown-text
msgid ""
"The `download` method may be used to generate a response that forces the "
"user's browser to download the file at the given path. The `download` method "
"accepts a filename as the second argument to the method, which will "
"determine the filename that is seen by the user downloading the "
"file. Finally, you may pass an array of HTTP headers as the third argument "
"to the method:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:181
#, markdown-text, no-wrap
msgid "    return Storage::download('file.jpg');\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:183
#, markdown-text, no-wrap
msgid "    return Storage::download('file.jpg', $name, $headers);\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:185
#, markdown-text, no-wrap
msgid "<a name=\"file-urls\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/filesystem.md:185
#, markdown-text, no-wrap
msgid "File URLs"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:188
#, markdown-text
msgid ""
"You may use the `url` method to get the URL for a given file. If you are "
"using the `local` driver, this will typically just prepend `/storage` to the "
"given path and return a relative URL to the file. If you are using the `s3` "
"driver, the fully qualified remote URL will be returned:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:192
#, markdown-text, no-wrap
msgid "    $url = Storage::url('file.jpg');\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:194
#, markdown-text
msgid ""
"When using the `local` driver, all files that should be publicly accessible "
"should be placed in the `storage/app/public` directory. Furthermore, you "
"should [create a symbolic link](#the-public-disk) at `public/storage` which "
"points to the `storage/app/public` directory."
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:196
#, markdown-text, no-wrap
msgid ""
"> {note} When using the `local` driver, the return value of `url` is not URL "
"encoded. For this reason, we recommend always storing your files using names "
"that will create valid URLs.\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:198
#, markdown-text, no-wrap
msgid "<a name=\"temporary-urls\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/filesystem.md:198
#, markdown-text, no-wrap
msgid "Temporary URLs"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:201
#, markdown-text
msgid ""
"Using the `temporaryUrl` method, you may create temporary URLs to files "
"stored using the `s3` driver. This method accepts a path and a `DateTime` "
"instance specifying when the URL should expire:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:207
#, markdown-text, no-wrap
msgid ""
"    $url = Storage::temporaryUrl(\n"
"        'file.jpg', now()->addMinutes(5)\n"
"    );\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:209
#, markdown-text
msgid ""
"If you need to specify additional [S3 request "
"parameters](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectGET.html#RESTObjectGET-requests), "
"you may pass the array of request parameters as the third argument to the "
"`temporaryUrl` method:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:218
#, markdown-text, no-wrap
msgid ""
"    $url = Storage::temporaryUrl(\n"
"        'file.jpg',\n"
"        now()->addMinutes(5),\n"
"        [\n"
"            'ResponseContentType' => 'application/octet-stream',\n"
"            'ResponseContentDisposition' => 'attachment; "
"filename=file2.jpg',\n"
"        ]\n"
"    );\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:220
#, markdown-text, no-wrap
msgid "<a name=\"url-host-customization\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/filesystem.md:220
#, markdown-text, no-wrap
msgid "URL Host Customization"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:223
#, markdown-text
msgid ""
"If you would like to pre-define the host for URLs generated using the "
"`Storage` facade, you may add a `url` option to the disk's configuration "
"array:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:230
#, markdown-text, no-wrap
msgid ""
"    'public' => [\n"
"        'driver' => 'local',\n"
"        'root' => storage_path('app/public'),\n"
"        'url' => env('APP_URL').'/storage',\n"
"        'visibility' => 'public',\n"
"    ],\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:232
#, markdown-text, no-wrap
msgid "<a name=\"file-metadata\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/filesystem.md:232
#, markdown-text, no-wrap
msgid "File Metadata"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:235
#, markdown-text
msgid ""
"In addition to reading and writing files, Laravel can also provide "
"information about the files themselves. For example, the `size` method may "
"be used to get the size of a file in bytes:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:239
#, markdown-text, no-wrap
msgid "    $size = Storage::size('file.jpg');\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:241
#, markdown-text
msgid ""
"The `lastModified` method returns the UNIX timestamp of the last time the "
"file was modified:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:243
#, markdown-text, no-wrap
msgid "    $time = Storage::lastModified('file.jpg');\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:245
#, markdown-text, no-wrap
msgid "<a name=\"file-paths\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/filesystem.md:245
#, markdown-text, no-wrap
msgid "File Paths"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:248
#, markdown-text
msgid ""
"You may use the `path` method to get the path for a given file. If you are "
"using the `local` driver, this will return the absolute path to the file. If "
"you are using the `s3` driver, this method will return the relative path to "
"the file in the S3 bucket:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:252
#, markdown-text, no-wrap
msgid "    $path = Storage::path('file.jpg');\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:254
#, markdown-text, no-wrap
msgid "<a name=\"storing-files\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/filesystem.md:254
#, markdown-text, no-wrap
msgid "Storing Files"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:257
#, markdown-text
msgid ""
"The `put` method may be used to store file contents on a disk. You may also "
"pass a PHP `resource` to the `put` method, which will use Flysystem's "
"underlying stream support. Remember, all file paths should be specified "
"relative to the \"root\" location configured for the disk:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:261
#, markdown-text, no-wrap
msgid "    Storage::put('file.jpg', $contents);\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:263
#, markdown-text, no-wrap
msgid "    Storage::put('file.jpg', $resource);\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:265
#, markdown-text, no-wrap
msgid "<a name=\"automatic-streaming\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/filesystem.md:265
#, markdown-text, no-wrap
msgid "Automatic Streaming"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:268
#, markdown-text
msgid ""
"Streaming files to storage offers significantly reduced memory usage. If you "
"would like Laravel to automatically manage streaming a given file to your "
"storage location, you may use the `putFile` or `putFileAs` method. This "
"method accepts either an `Illuminate\\Http\\File` or "
"`Illuminate\\Http\\UploadedFile` instance and will automatically stream the "
"file to your desired location:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:271
#, markdown-text, no-wrap
msgid ""
"    use Illuminate\\Http\\File;\n"
"    use Illuminate\\Support\\Facades\\Storage;\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:274
#, markdown-text, no-wrap
msgid ""
"    // Automatically generate a unique ID for filename...\n"
"    $path = Storage::putFile('photos', new File('/path/to/photo'));\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:277
#, markdown-text, no-wrap
msgid ""
"    // Manually specify a filename...\n"
"    $path = Storage::putFileAs('photos', new File('/path/to/photo'), "
"'photo.jpg');\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:279
#, markdown-text
msgid ""
"There are a few important things to note about the `putFile` method. Note "
"that we only specified a directory name and not a filename. By default, the "
"`putFile` method will generate a unique ID to serve as the filename. The "
"file's extension will be determined by examining the file's MIME type. The "
"path to the file will be returned by the `putFile` method so you can store "
"the path, including the generated filename, in your database."
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:281
#, markdown-text
msgid ""
"The `putFile` and `putFileAs` methods also accept an argument to specify the "
"\"visibility\" of the stored file. This is particularly useful if you are "
"storing the file on a cloud disk such as Amazon S3 and would like the file "
"to be publicly accessible via generated URLs:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:283
#, markdown-text, no-wrap
msgid "    Storage::putFile('photos', new File('/path/to/photo'), 'public');\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:285
#, markdown-text, no-wrap
msgid "<a name=\"prepending-appending-to-files\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/filesystem.md:285
#, markdown-text, no-wrap
msgid "Prepending & Appending To Files"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:288
#, markdown-text
msgid ""
"The `prepend` and `append` methods allow you to write to the beginning or "
"end of a file:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:290
#, markdown-text, no-wrap
msgid "    Storage::prepend('file.log', 'Prepended Text');\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:292
#, markdown-text, no-wrap
msgid "    Storage::append('file.log', 'Appended Text');\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:294
#, markdown-text, no-wrap
msgid "<a name=\"copying-moving-files\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/filesystem.md:294
#, markdown-text, no-wrap
msgid "Copying & Moving Files"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:297
#, markdown-text
msgid ""
"The `copy` method may be used to copy an existing file to a new location on "
"the disk, while the `move` method may be used to rename or move an existing "
"file to a new location:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:299
#, markdown-text, no-wrap
msgid "    Storage::copy('old/file.jpg', 'new/file.jpg');\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:301
#, markdown-text, no-wrap
msgid "    Storage::move('old/file.jpg', 'new/file.jpg');\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:303
#, markdown-text, no-wrap
msgid "<a name=\"file-uploads\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/filesystem.md:303
#, markdown-text, no-wrap
msgid "File Uploads"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:306
#, markdown-text
msgid ""
"In web applications, one of the most common use-cases for storing files is "
"storing user uploaded files such as photos and documents. Laravel makes it "
"very easy to store uploaded files using the `store` method on an uploaded "
"file instance. Call the `store` method with the path at which you wish to "
"store the uploaded file:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:308 docs/master/filesystem.md:494
#, markdown-text, no-wrap
msgid "    <?php\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:310
#, markdown-text, no-wrap
msgid "    namespace App\\Http\\Controllers;\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:313
#, markdown-text, no-wrap
msgid ""
"    use App\\Http\\Controllers\\Controller;\n"
"    use Illuminate\\Http\\Request;\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:325
#, markdown-text, no-wrap
msgid ""
"    class UserAvatarController extends Controller\n"
"    {\n"
"        /**\n"
"         * Update the avatar for the user.\n"
"         *\n"
"         * @param  \\Illuminate\\Http\\Request  $request\n"
"         * @return \\Illuminate\\Http\\Response\n"
"         */\n"
"        public function update(Request $request)\n"
"        {\n"
"            $path = $request->file('avatar')->store('avatars');\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:329
#, markdown-text, no-wrap
msgid ""
"            return $path;\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:331
#, markdown-text
msgid ""
"There are a few important things to note about this example. Note that we "
"only specified a directory name, not a filename. By default, the `store` "
"method will generate a unique ID to serve as the filename. The file's "
"extension will be determined by examining the file's MIME type. The path to "
"the file will be returned by the `store` method so you can store the path, "
"including the generated filename, in your database."
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:333
#, markdown-text
msgid ""
"You may also call the `putFile` method on the `Storage` facade to perform "
"the same file storage operation as the example above:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:335
#, markdown-text, no-wrap
msgid "    $path = Storage::putFile('avatars', $request->file('avatar'));\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:337
#, markdown-text, no-wrap
msgid "<a name=\"specifying-a-file-name\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/filesystem.md:337
#, markdown-text, no-wrap
msgid "Specifying A File Name"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:340
#, markdown-text
msgid ""
"If you do not want a filename to be automatically assigned to your stored "
"file, you may use the `storeAs` method, which receives the path, the "
"filename, and the (optional) disk as its arguments:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:344
#, markdown-text, no-wrap
msgid ""
"    $path = $request->file('avatar')->storeAs(\n"
"        'avatars', $request->user()->id\n"
"    );\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:346
#, markdown-text
msgid ""
"You may also use the `putFileAs` method on the `Storage` facade, which will "
"perform the same file storage operation as the example above:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:350
#, markdown-text, no-wrap
msgid ""
"    $path = Storage::putFileAs(\n"
"        'avatars', $request->file('avatar'), $request->user()->id\n"
"    );\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:352
#, markdown-text, no-wrap
msgid ""
"> {note} Unprintable and invalid unicode characters will automatically be "
"removed from file paths. Therefore, you may wish to sanitize your file paths "
"before passing them to Laravel's file storage methods. File paths are "
"normalized using the `League\\Flysystem\\Util::normalizePath` method.\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:354
#, markdown-text, no-wrap
msgid "<a name=\"specifying-a-disk\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/filesystem.md:354
#, markdown-text, no-wrap
msgid "Specifying A Disk"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:357
#, markdown-text
msgid ""
"By default, this uploaded file's `store` method will use your default "
"disk. If you would like to specify another disk, pass the disk name as the "
"second argument to the `store` method:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:361
#, markdown-text, no-wrap
msgid ""
"    $path = $request->file('avatar')->store(\n"
"        'avatars/'.$request->user()->id, 's3'\n"
"    );\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:363
#, markdown-text
msgid ""
"If you are using the `storeAs` method, you may pass the disk name as the "
"third argument to the method:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:369
#, markdown-text, no-wrap
msgid ""
"    $path = $request->file('avatar')->storeAs(\n"
"        'avatars',\n"
"        $request->user()->id,\n"
"        's3'\n"
"    );\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:371
#, markdown-text, no-wrap
msgid "<a name=\"other-uploaded-file-information\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/filesystem.md:371
#, markdown-text, no-wrap
msgid "Other Uploaded File Information"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:374
#, markdown-text
msgid ""
"If you would like to get the original name of the uploaded file, you may do "
"so using the `getClientOriginalName` method:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:376
#, markdown-text, no-wrap
msgid "    $name = $request->file('avatar')->getClientOriginalName();\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:378
#, markdown-text
msgid ""
"The `extension` method may be used to get the file extension of the uploaded "
"file:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:380
#, markdown-text, no-wrap
msgid "    $extension = $request->file('avatar')->extension();\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:382
#, markdown-text, no-wrap
msgid "<a name=\"file-visibility\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/filesystem.md:382
#, markdown-text, no-wrap
msgid "File Visibility"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:385
#, markdown-text
msgid ""
"In Laravel's Flysystem integration, \"visibility\" is an abstraction of file "
"permissions across multiple platforms. Files may either be declared `public` "
"or `private`. When a file is declared `public`, you are indicating that the "
"file should generally be accessible to others. For example, when using the "
"S3 driver, you may retrieve URLs for `public` files."
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:387
#, markdown-text
msgid "You can set the visibility when writing the file via the `put` method:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:391
#, markdown-text, no-wrap
msgid "    Storage::put('file.jpg', $contents, 'public');\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:393
#, markdown-text
msgid ""
"If the file has already been stored, its visibility can be retrieved and set "
"via the `getVisibility` and `setVisibility` methods:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:395
#, markdown-text, no-wrap
msgid "    $visibility = Storage::getVisibility('file.jpg');\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:397
#, markdown-text, no-wrap
msgid "    Storage::setVisibility('file.jpg', 'public');\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:399
#, markdown-text
msgid ""
"When interacting with uploaded files, you may use the `storePublicly` and "
"`storePubliclyAs` methods to store the uploaded file with `public` "
"visibility:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:401
#, markdown-text, no-wrap
msgid "    $path = $request->file('avatar')->storePublicly('avatars', 's3');\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:407
#, markdown-text, no-wrap
msgid ""
"    $path = $request->file('avatar')->storePubliclyAs(\n"
"        'avatars',\n"
"        $request->user()->id,\n"
"        's3'\n"
"    );\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:409
#, markdown-text, no-wrap
msgid "<a name=\"local-files-and-visibility\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/filesystem.md:409
#, markdown-text, no-wrap
msgid "Local Files & Visibility"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:412
#, markdown-text
msgid ""
"When using the `local` driver, `public` [visibility](#file-visibility) "
"translates to `0755` permissions for directories and `0644` permissions for "
"files. You can modify the permissions mappings in your application's "
"`filesystems` configuration file:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:427
#, markdown-text, no-wrap
msgid ""
"    'local' => [\n"
"        'driver' => 'local',\n"
"        'root' => storage_path('app'),\n"
"        'permissions' => [\n"
"            'file' => [\n"
"                'public' => 0664,\n"
"                'private' => 0600,\n"
"            ],\n"
"            'dir' => [\n"
"                'public' => 0775,\n"
"                'private' => 0700,\n"
"            ],\n"
"        ],\n"
"    ],\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:429
#, markdown-text, no-wrap
msgid "<a name=\"deleting-files\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/filesystem.md:429
#, markdown-text, no-wrap
msgid "Deleting Files"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:432
#, markdown-text
msgid ""
"The `delete` method accepts a single filename or an array of files to "
"delete:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:436
#, markdown-text, no-wrap
msgid "    Storage::delete('file.jpg');\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:438
#, markdown-text, no-wrap
msgid "    Storage::delete(['file.jpg', 'file2.jpg']);\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:440
#, markdown-text
msgid "If necessary, you may specify the disk that the file should be deleted from:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:444
#, markdown-text, no-wrap
msgid "    Storage::disk('s3')->delete('path/file.jpg');\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:446
#, markdown-text, no-wrap
msgid "<a name=\"directories\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/filesystem.md:446
#, markdown-text, no-wrap
msgid "Directories"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:449
#, markdown-text, no-wrap
msgid "<a name=\"get-all-files-within-a-directory\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/filesystem.md:449
#, markdown-text, no-wrap
msgid "Get All Files Within A Directory"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:452
#, markdown-text
msgid ""
"The `files` method returns an array of all of the files in a given "
"directory. If you would like to retrieve a list of all files within a given "
"directory including all subdirectories, you may use the `allFiles` method:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:456
#, markdown-text, no-wrap
msgid "    $files = Storage::files($directory);\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:458
#, markdown-text, no-wrap
msgid "    $files = Storage::allFiles($directory);\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:460
#, markdown-text, no-wrap
msgid "<a name=\"get-all-directories-within-a-directory\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/filesystem.md:460
#, markdown-text, no-wrap
msgid "Get All Directories Within A Directory"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:463
#, markdown-text
msgid ""
"The `directories` method returns an array of all the directories within a "
"given directory. Additionally, you may use the `allDirectories` method to "
"get a list of all directories within a given directory and all of its "
"subdirectories:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:465
#, markdown-text, no-wrap
msgid "    $directories = Storage::directories($directory);\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:467
#, markdown-text, no-wrap
msgid "    $directories = Storage::allDirectories($directory);\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:469
#, markdown-text, no-wrap
msgid "<a name=\"create-a-directory\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/filesystem.md:469
#, markdown-text, no-wrap
msgid "Create A Directory"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:472
#, markdown-text
msgid ""
"The `makeDirectory` method will create the given directory, including any "
"needed subdirectories:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:474
#, markdown-text, no-wrap
msgid "    Storage::makeDirectory($directory);\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:476
#, markdown-text, no-wrap
msgid "<a name=\"delete-a-directory\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/filesystem.md:476
#, markdown-text, no-wrap
msgid "Delete A Directory"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:479
#, markdown-text
msgid ""
"Finally, the `deleteDirectory` method may be used to remove a directory and "
"all of its files:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:481
#, markdown-text, no-wrap
msgid "    Storage::deleteDirectory($directory);\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:483
#, markdown-text, no-wrap
msgid "<a name=\"custom-filesystems\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/filesystem.md:483
#, markdown-text, no-wrap
msgid "Custom Filesystems"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:486
#, markdown-text
msgid ""
"Laravel's Flysystem integration provides support for several \"drivers\" out "
"of the box; however, Flysystem is not limited to these and has adapters for "
"many other storage systems. You can create a custom driver if you want to "
"use one of these additional adapters in your Laravel application."
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:488
#, markdown-text
msgid ""
"In order to define a custom filesystem you will need a Flysystem "
"adapter. Let's add a community maintained Dropbox adapter to our project:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:490
#, markdown-text, no-wrap
msgid "    composer require spatie/flysystem-dropbox\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:492
#, markdown-text
msgid ""
"Next, you can register the driver within the `boot` method of one of your "
"application's [service providers](/docs/{{version}}/providers). To "
"accomplish this, you should use the `extend` method of the `Storage` facade:"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:496
#, markdown-text, no-wrap
msgid "    namespace App\\Providers;\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:502
#, markdown-text, no-wrap
msgid ""
"    use Illuminate\\Support\\Facades\\Storage;\n"
"    use Illuminate\\Support\\ServiceProvider;\n"
"    use League\\Flysystem\\Filesystem;\n"
"    use Spatie\\Dropbox\\Client as DropboxClient;\n"
"    use Spatie\\FlysystemDropbox\\DropboxAdapter;\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:514
#, markdown-text, no-wrap
msgid ""
"    class AppServiceProvider extends ServiceProvider\n"
"    {\n"
"        /**\n"
"         * Register any application services.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function register()\n"
"        {\n"
"            //\n"
"        }\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:526
#, markdown-text, no-wrap
msgid ""
"        /**\n"
"         * Bootstrap any application services.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function boot()\n"
"        {\n"
"            Storage::extend('dropbox', function ($app, $config) {\n"
"                $client = new DropboxClient(\n"
"                    $config['authorization_token']\n"
"                );\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:531
#, markdown-text, no-wrap
msgid ""
"                return new Filesystem(new DropboxAdapter($client));\n"
"            });\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:533
#, markdown-text
msgid ""
"The first argument of the `extend` method is the name of the driver and the "
"second is a closure that receives the `$app` and `$config` variables. The "
"closure must return an instance of `League\\Flysystem\\Filesystem`. The "
"`$config` variable contains the values defined in `config/filesystems.php` "
"for the specified disk."
msgstr ""

#. type: Plain text
#: docs/master/filesystem.md:534
#, markdown-text
msgid ""
"Once you have created and registered the extension's service provider, you "
"may use the `dropbox` driver in your `config/filesystems.php` configuration "
"file."
msgstr ""
