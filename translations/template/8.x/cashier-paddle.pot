# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Taylor Otwell
# This file is distributed under the same license as the Laravel Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2021-04-16 04:29+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title #
#: docs/8.x/cashier-paddle.md:1
#, no-wrap
msgid "Laravel Cashier (Paddle)"
msgstr ""

#. type: Bullet: '- '
#: docs/8.x/cashier-paddle.md:45
msgid "[Introduction](#introduction)"
msgstr ""

#. type: Bullet: '- '
#: docs/8.x/cashier-paddle.md:45
msgid "[Upgrading Cashier](#upgrading-cashier)"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:45
#, no-wrap
msgid ""
"- [Installation](#installation)\n"
"    - [Paddle Sandbox](#paddle-sandbox)\n"
"    - [Database Migrations](#database-migrations)\n"
"- [Configuration](#configuration)\n"
"    - [Billable Model](#billable-model)\n"
"    - [API Keys](#api-keys)\n"
"    - [Paddle JS](#paddle-js)\n"
"    - [Currency Configuration](#currency-configuration)\n"
"    - [Overriding Default Models](#overriding-default-models)\n"
"- [Core Concepts](#core-concepts)\n"
"    - [Pay Links](#pay-links)\n"
"    - [Inline Checkout](#inline-checkout)\n"
"    - [User Identification](#user-identification)\n"
"- [Prices](#prices)\n"
"- [Customers](#customers)\n"
"    - [Customer Defaults](#customer-defaults)\n"
"- [Subscriptions](#subscriptions)\n"
"    - [Creating Subscriptions](#creating-subscriptions)\n"
"    - [Checking Subscription Status](#checking-subscription-status)\n"
"    - [Subscription Single Charges](#subscription-single-charges)\n"
"    - [Updating Payment Information](#updating-payment-information)\n"
"    - [Changing Plans](#changing-plans)\n"
"    - [Subscription Quantity](#subscription-quantity)\n"
"    - [Subscription Modifiers](#subscription-modifiers)\n"
"    - [Pausing Subscriptions](#pausing-subscriptions)\n"
"    - [Cancelling Subscriptions](#cancelling-subscriptions)\n"
"- [Subscription Trials](#subscription-trials)\n"
"    - [With Payment Method Up Front](#with-payment-method-up-front)\n"
"    - [Without Payment Method Up Front](#without-payment-method-up-front)\n"
"- [Handling Paddle Webhooks](#handling-paddle-webhooks)\n"
"    - [Defining Webhook Event Handlers](#defining-webhook-event-handlers)\n"
"    - [Verifying Webhook Signatures](#verifying-webhook-signatures)\n"
"- [Single Charges](#single-charges)\n"
"    - [Simple Charge](#simple-charge)\n"
"    - [Charging Products](#charging-products)\n"
"    - [Refunding Orders](#refunding-orders)\n"
"- [Receipts](#receipts)\n"
"    - [Past & Upcoming Payments](#past-and-upcoming-payments)\n"
"- [Handling Failed Payments](#handling-failed-payments)\n"
"- [Testing](#testing)\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:47
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/cashier-paddle.md:47
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:50
msgid ""
"Laravel Cashier Paddle provides an expressive, fluent interface to "
"[Paddle's](https://paddle.com) subscription billing services. It handles "
"almost all of the boilerplate subscription billing code you are dreading. In "
"addition to basic subscription management, Cashier can handle: coupons, "
"swapping subscription, subscription \"quantities\", cancellation grace "
"periods, and more."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:52
msgid ""
"While working with Cashier we recommend you also review Paddle's [user "
"guides](https://developer.paddle.com/guides) and [API "
"documentation](https://developer.paddle.com/api-reference/intro)."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:54
#, no-wrap
msgid "<a name=\"upgrading-cashier\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/cashier-paddle.md:54
#, no-wrap
msgid "Upgrading Cashier"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:57
msgid ""
"When upgrading to a new version of Cashier, it's important that you "
"carefully review [the upgrade "
"guide](https://github.com/laravel/cashier-paddle/blob/master/UPGRADE.md)."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:59
#, no-wrap
msgid "<a name=\"installation\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/cashier-paddle.md:59
#, no-wrap
msgid "Installation"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:62
msgid ""
"First, install the Cashier package for Paddle using the Composer package "
"manager:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:64
#, no-wrap
msgid "    composer require laravel/cashier-paddle\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:66
#, no-wrap
msgid ""
"> {note} To ensure Cashier properly handles all Paddle events, remember to "
"[set up Cashier's webhook handling](#handling-paddle-webhooks).\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:68
#, no-wrap
msgid "<a name=\"paddle-sandbox\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:68
#, no-wrap
msgid "Paddle Sandbox"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:71
msgid ""
"During local and staging development, you should [register a Paddle Sandbox "
"account](https://developer.paddle.com/getting-started/sandbox). This account "
"will give you a sandboxed environment to test and develop your applications "
"without making actual payments. You may use Paddle's [test card "
"numbers](https://developer.paddle.com/getting-started/sandbox#test-cards) to "
"simulate various payment scenarios."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:73
msgid ""
"After you have finished developing your application you may [apply for a "
"Paddle vendor account](https://paddle.com)."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:75
#, no-wrap
msgid "<a name=\"database-migrations\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:75
#, no-wrap
msgid "Database Migrations"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:78
msgid ""
"The Cashier service provider registers its own database migration directory, "
"so remember to migrate your database after installing the package. The "
"Cashier migrations will create a new `customers` table. In addition, a new "
"`subscriptions` table will be created to store all of your customer's "
"subscriptions. Finally, a new `receipts` table will be created to store all "
"of your application's receipt information:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:80
#, no-wrap
msgid "    php artisan migrate\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:82
msgid ""
"If you need to overwrite the migrations that are included with Cashier, you "
"can publish them using the `vendor:publish` Artisan command:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:84
#, no-wrap
msgid "    php artisan vendor:publish --tag=\"cashier-migrations\"\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:86
msgid ""
"If you would like to prevent Cashier's migrations from running entirely, you "
"may use the `ignoreMigrations` provided by Cashier. Typically, this method "
"should be called in the `register` method of your `AppServiceProvider`:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:88 docs/8.x/cashier-paddle.md:320 docs/8.x/cashier-paddle.md:326 docs/8.x/cashier-paddle.md:378 docs/8.x/cashier-paddle.md:610
#, no-wrap
msgid "    use Laravel\\Paddle\\Cashier;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:98
#, no-wrap
msgid ""
"    /**\n"
"     * Register any application services.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function register()\n"
"    {\n"
"        Cashier::ignoreMigrations();\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:100
#, no-wrap
msgid "<a name=\"configuration\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/cashier-paddle.md:100
#, no-wrap
msgid "Configuration"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:103
#, no-wrap
msgid "<a name=\"billable-model\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:103
#, no-wrap
msgid "Billable Model"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:106
msgid ""
"Before using Cashier, you must add the `Billable` trait to your user model "
"definition. This trait provides various methods to allow you to perform "
"common billing tasks, such as creating subscriptions, applying coupons and "
"updating payment method information:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:108
#, no-wrap
msgid "    use Laravel\\Paddle\\Billable;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:113
#, no-wrap
msgid ""
"    class User extends Authenticatable\n"
"    {\n"
"        use Billable;\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:115
msgid ""
"If you have billable entities that are not users, you may also add the trait "
"to those classes:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:118
#, no-wrap
msgid ""
"    use Illuminate\\Database\\Eloquent\\Model;\n"
"    use Laravel\\Paddle\\Billable;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:123
#, no-wrap
msgid ""
"    class Team extends Model\n"
"    {\n"
"        use Billable;\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:125
#, no-wrap
msgid "<a name=\"api-keys\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:125
#, no-wrap
msgid "API Keys"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:128
msgid ""
"Next, you should configure your Paddle keys in your application's `.env` "
"file. You can retrieve your Paddle API keys from the Paddle control panel:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:133
#, no-wrap
msgid ""
"    PADDLE_VENDOR_ID=your-paddle-vendor-id\n"
"    PADDLE_VENDOR_AUTH_CODE=your-paddle-vendor-auth-code\n"
"    PADDLE_PUBLIC_KEY=\"your-paddle-public-key\"\n"
"    PADDLE_SANDBOX=true\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:135
msgid ""
"The `PADDLE_SANDBOX` environment variable should be set to `true` when you "
"are using [Paddle's Sandbox environment](#paddle-sandbox). The "
"`PADDLE_SANDBOX` variable should be set to `false` if you are deploying your "
"application to production and are using Paddle's live vendor environment."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:137
#, no-wrap
msgid "<a name=\"paddle-js\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:137
#, no-wrap
msgid "Paddle JS"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:140
#, no-wrap
msgid ""
"Paddle relies on its own JavaScript library to initiate the Paddle checkout "
"widget. You can load the JavaScript library by placing the `@paddleJS` Blade "
"directive right before your application layout's closing `</head>` tag:\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:143
#, no-wrap
msgid ""
"    <head>\n"
"        ...\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:146
#, no-wrap
msgid ""
"        @paddleJS\n"
"    </head>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:148
#, no-wrap
msgid "<a name=\"currency-configuration\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:148
#, no-wrap
msgid "Currency Configuration"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:151
msgid ""
"The default Cashier currency is United States Dollars (USD). You can change "
"the default currency by defining a `CASHIER_CURRENCY` environment variable "
"within your application's `.env` file:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:153
#, no-wrap
msgid "    CASHIER_CURRENCY=EUR\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:155
msgid ""
"In addition to configuring Cashier's currency, you may also specify a locale "
"to be used when formatting money values for display on invoices. Internally, "
"Cashier utilizes [PHP's `NumberFormatter` "
"class](https://www.php.net/manual/en/class.numberformatter.php) to set the "
"currency locale:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:157
#, no-wrap
msgid "    CASHIER_CURRENCY_LOCALE=nl_BE\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:159
#, no-wrap
msgid ""
"> {note} In order to use locales other than `en`, ensure the `ext-intl` PHP "
"extension is installed and configured on your server.\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:161
#, no-wrap
msgid "<a name=\"overriding-default-models\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:161
#, no-wrap
msgid "Overriding Default Models"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:164
msgid ""
"You are free to extend the models used internally by Cashier by defining "
"your own model and extending the corresponding Cashier model:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:166
#, no-wrap
msgid "    use Laravel\\Paddle\\Subscription as CashierSubscription;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:171
#, no-wrap
msgid ""
"    class Subscription extends CashierSubscription\n"
"    {\n"
"        // ...\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:173
msgid ""
"After defining your model, you may instruct Cashier to use your custom model "
"via the `Laravel\\Paddle\\Cashier` class. Typically, you should inform "
"Cashier about your custom models in the `boot` method of your application's "
"`App\\Providers\\AppServiceProvider` class:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:176
#, no-wrap
msgid ""
"    use App\\Models\\Cashier\\Receipt;\n"
"    use App\\Models\\Cashier\\Subscription;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:187
#, no-wrap
msgid ""
"    /**\n"
"     * Bootstrap any application services.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function boot()\n"
"    {\n"
"        Cashier::useReceiptModel(Receipt::class);\n"
"        Cashier::useSubscriptionModel(Subscription::class);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:189
#, no-wrap
msgid "<a name=\"core-concepts\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/cashier-paddle.md:189
#, no-wrap
msgid "Core Concepts"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:192
#, no-wrap
msgid "<a name=\"pay-links\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:192
#, no-wrap
msgid "Pay Links"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:195
msgid ""
"Paddle lacks an extensive CRUD API to perform subscription state "
"changes. Therefore, most interactions with Paddle are done through its "
"[checkout "
"widget](https://developer.paddle.com/guides/how-tos/checkout/paddle-checkout). "
"Before we can display the checkout widget, we must generate a \"pay link\" "
"using Cashier. A \"pay link\" will inform the checkout widget of the billing "
"operation we wish to perform:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:198
#, no-wrap
msgid ""
"    use App\\Models\\User;\n"
"    use Illuminate\\Http\\Request;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:203
#, no-wrap
msgid ""
"    Route::get('/user/subscribe', function (Request $request) {\n"
"        $payLink = $request->user()->newSubscription('default', $premium = "
"34567)\n"
"            ->returnTo(route('home'))\n"
"            ->create();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:206 docs/8.x/cashier-paddle.md:468 docs/8.x/cashier-paddle.md:843 docs/8.x/cashier-paddle.md:895
#, no-wrap
msgid ""
"        return view('billing', ['payLink' => $payLink]);\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:208
msgid ""
"Cashier includes a `paddle-button` [Blade "
"component](/docs/{{version}}/blade#components). We may pass the pay link URL "
"to this component as a \"prop\". When this button is clicked, Paddle's "
"checkout widget will be displayed:"
msgstr ""

#. type: Code fence info string
#: docs/8.x/cashier-paddle.md:209 docs/8.x/cashier-paddle.md:217 docs/8.x/cashier-paddle.md:251 docs/8.x/cashier-paddle.md:282 docs/8.x/cashier-paddle.md:331 docs/8.x/cashier-paddle.md:341 docs/8.x/cashier-paddle.md:351 docs/8.x/cashier-paddle.md:385 docs/8.x/cashier-paddle.md:395 docs/8.x/cashier-paddle.md:473 docs/8.x/cashier-paddle.md:673 docs/8.x/cashier-paddle.md:1012 docs/8.x/cashier-paddle.md:1052 docs/8.x/cashier-paddle.md:1100
#, no-wrap
msgid "html"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:209 docs/8.x/cashier-paddle.md:473
#, no-wrap
msgid ""
"<x-paddle-button :url=\"$payLink\" class=\"px-8 py-4\">\n"
"    Subscribe\n"
"</x-paddle-button>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:216
msgid ""
"By default, this will display a button with the standard Paddle styling. You "
"can remove all Paddle styling by adding the `data-theme=\"none\"` attribute "
"to the component:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:217
#, no-wrap
msgid ""
"<x-paddle-button :url=\"$payLink\" class=\"px-8 py-4\" "
"data-theme=\"none\">\n"
"    Subscribe\n"
"</x-paddle-button>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:224
msgid ""
"The Paddle checkout widget is asynchronous. Once the user creates or updates "
"a subscription within the widget, Paddle will send your application webhooks "
"so that you may properly update the subscription state in our own "
"database. Therefore, it's important that you properly [set up "
"webhooks](#handling-paddle-webhooks) to accommodate for state changes from "
"Paddle."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:226
msgid ""
"For more information on pay links, you may review [the Paddle API "
"documentation on pay link "
"generation](https://developer.paddle.com/api-reference/product-api/pay-links/createpaylink)."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:228
#, no-wrap
msgid ""
"> {note} After a subscription state change, the delay for receiving the "
"corresponding webhook is typically minimal but you should account for this "
"in your application by considering that your user's subscription might not "
"be immediately available after completing the checkout.\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:230
#, no-wrap
msgid "<a name=\"manually-rendering-pay-links\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/cashier-paddle.md:230
#, no-wrap
msgid "Manually Rendering Pay Links"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:233
msgid ""
"You may also manually render a pay link without using Laravel's built-in "
"Blade components. To get started, generate the pay link URL as demonstrated "
"in previous examples:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:237
#, no-wrap
msgid ""
"    $payLink = $request->user()->newSubscription('default', $premium = "
"34567)\n"
"        ->returnTo(route('home'))\n"
"        ->create();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:239
msgid "Next, simply attach the pay link URL to an `a` element in your HTML:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:243
#, no-wrap
msgid ""
"    <a href=\"#!\" class=\"ml-4 paddle_button\" data-override=\"{{ $payLink "
"}}\">\n"
"        Paddle Checkout\n"
"    </a>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:245
#, no-wrap
msgid "<a name=\"inline-checkout\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:245
#, no-wrap
msgid "Inline Checkout"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:248
msgid ""
"If you don't want to make use of Paddle's \"overlay\" style checkout widget, "
"Paddle also provides the option to display the widget inline. While this "
"approach does not allow you to adjust any of the checkout's HTML fields, it "
"allows you to embed the widget within your application."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:250
msgid ""
"To make it easy for you to get started with inline checkout, Cashier "
"includes a `paddle-checkout` Blade component. To get started, you should "
"[generate a pay link](#pay-links) and pass the pay link to the component's "
"`override` attribute:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:251
#, no-wrap
msgid "<x-paddle-checkout :override=\"$payLink\" class=\"w-full\" />\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:256
msgid ""
"To adjust the height of the inline checkout component, you may pass the "
"`height` attribute to the Blade component:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:258
#, no-wrap
msgid ""
"    <x-paddle-checkout :override=\"$payLink\" class=\"w-full\" "
"height=\"500\" />\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:260
#, no-wrap
msgid "<a name=\"inline-checkout-without-pay-links\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/cashier-paddle.md:260
#, no-wrap
msgid "Inline Checkout Without Pay Links"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:263
msgid ""
"Alternatively, you may customize the widget with custom options instead of "
"using a pay link:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:268
#, no-wrap
msgid ""
"    $options = [\n"
"        'product' => $productId,\n"
"        'title' => 'Product Title',\n"
"    ];\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:270
#, no-wrap
msgid "    <x-paddle-checkout :options=\"$options\" class=\"w-full\" />\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:272
msgid ""
"Please consult Paddle's [guide on Inline "
"Checkout](https://developer.paddle.com/guides/how-tos/checkout/inline-checkout) "
"as well as their [parameter "
"reference](https://developer.paddle.com/reference/paddle-js/parameters) for "
"further details on the inline checkout's available options."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:274
#, no-wrap
msgid ""
"> {note} If you would like to also use the `passthrough` option when "
"specifying custom options, you should provide a key / value array as its "
"value. Cashier will automatically handle converting the array to a JSON "
"string. In addition, the `customer_id` passthrough option is reserved for "
"internal Cashier usage.\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:276
#, no-wrap
msgid "<a name=\"manually-rendering-an-inline-checkout\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/cashier-paddle.md:276
#, no-wrap
msgid "Manually Rendering An Inline Checkout"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:279
msgid ""
"You may also manually render an inline checkout without using Laravel's "
"built-in Blade components. To get started, generate the pay link URL [as "
"demonstrated in previous examples](#pay-links)."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:281
msgid ""
"Next, you may use Paddle.js to initialize the checkout. To keep this example "
"simple, we will demonstrate this using "
"[Alpine.js](https://github.com/alpinejs/alpine); however, you are free to "
"translate this example to your own frontend stack:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:282
#, no-wrap
msgid ""
"<div class=\"paddle-checkout\" x-data=\"{}\" x-init=\"\n"
"    Paddle.Checkout.open({\n"
"        override: {{ $payLink }},\n"
"        method: 'inline',\n"
"        frameTarget: 'paddle-checkout',\n"
"        frameInitialHeight: 366,\n"
"        frameStyle: 'width: 100%; background-color: transparent; border: "
"none;'\n"
"    });\n"
"\">\n"
"</div>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:296
#, no-wrap
msgid "<a name=\"user-identification\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:296
#, no-wrap
msgid "User Identification"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:299
msgid ""
"In contrast to Stripe, Paddle users are unique across all of Paddle, not "
"unique per Paddle account. Because of this, Paddle's API's do not currently "
"provide a method to update a user's details such as their email "
"address. When generating pay links, Paddle identifies users using the "
"`customer_email` parameter. When creating a subscription, Paddle will try to "
"match the user provided email to an existing Paddle user."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:301
msgid ""
"In light of this behavior, there are some important things to keep in mind "
"when using Cashier and Paddle. First, you should be aware that even though "
"subscriptions in Cashier are tied to the same application user, **they could "
"be tied to different users within Paddle's internal systems**. Secondly, "
"each subscription has its own connected payment method information and could "
"also have different email addresses within Paddle's internal systems "
"(depending on which email was assigned to the user when the subscription was "
"created)."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:303
msgid ""
"Therefore, when displaying subscriptions you should always inform the user "
"which email address or payment method information is connected to the "
"subscription on a per-subscription basis. Retrieving this information can be "
"done with the following methods provided by the "
"`Laravel\\Paddle\\Subscription` model:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:305 docs/8.x/cashier-paddle.md:1122
#, no-wrap
msgid "    $subscription = $user->subscription('default');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:311
#, no-wrap
msgid ""
"    $subscription->paddleEmail();\n"
"    $subscription->paymentMethod();\n"
"    $subscription->cardBrand();\n"
"    $subscription->cardLastFour();\n"
"    $subscription->cardExpirationDate();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:313
msgid ""
"There is currently no way to modify a user's email address through the "
"Paddle API. When a user wants to update their email address within Paddle, "
"the only way for them to do so is to contact Paddle customer support. When "
"communicating with Paddle, they need to provide the `paddleEmail` value of "
"the subscription to assist Paddle in updating the correct user."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:315
#, no-wrap
msgid "<a name=\"prices\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/cashier-paddle.md:315
#, no-wrap
msgid "Prices"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:318
msgid ""
"Paddle allows you to customize prices per currency, essentially allowing you "
"to configure different prices for different countries. Cashier Paddle allows "
"you to retrieve all of the prices for a given product using the "
"`productPrices` method. This method accepts the product IDs of the products "
"you wish to retrieve prices for:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:322
#, no-wrap
msgid "    $prices = Cashier::productPrices([123, 456]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:324
msgid ""
"The currency will be determined based on the IP address of the request; "
"however, you may optionally provide a specific country to retrieve prices "
"for:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:328
#, no-wrap
msgid ""
"    $prices = Cashier::productPrices([123, 456], ['customer_country' => "
"'BE']);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:330
msgid "After retrieving the prices you may display them however you wish:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:331 docs/8.x/cashier-paddle.md:385
#, no-wrap
msgid ""
"<ul>\n"
"    @foreach ($prices as $price)\n"
"        <li>{{ $price->product_title }} - {{ $price->price()->gross() "
"}}</li>\n"
"    @endforeach\n"
"</ul>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:340
msgid ""
"You may also display the net price (excludes tax) and display the tax amount "
"separately:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:341
#, no-wrap
msgid ""
"<ul>\n"
"    @foreach ($prices as $price)\n"
"        <li>{{ $price->product_title }} - {{ $price->price()->net() }} (+ {{ "
"$price->price()->tax() }} tax)</li>\n"
"    @endforeach\n"
"</ul>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:350
msgid ""
"If you retrieved prices for subscription plans you can display their initial "
"and recurring price separately:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:351
#, no-wrap
msgid ""
"<ul>\n"
"    @foreach ($prices as $price)\n"
"        <li>{{ $price->product_title }} - Initial: {{ "
"$price->initialPrice()->gross() }} - Recurring: {{ "
"$price->recurringPrice()->gross() }}</li>\n"
"    @endforeach\n"
"</ul>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:360
msgid ""
"For more information, [check Paddle's API documentation on "
"prices](https://developer.paddle.com/api-reference/checkout-api/prices/getprices)."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:362
#, no-wrap
msgid "<a name=\"prices-customers\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/cashier-paddle.md:362 docs/8.x/cashier-paddle.md:406
#, no-wrap
msgid "Customers"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:365
msgid ""
"If a user is already a customer and you would like to display the prices "
"that apply to that customer, you may do so by retrieving the prices directly "
"from the customer instance:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:367 docs/8.x/cashier-paddle.md:666 docs/8.x/cashier-paddle.md:687 docs/8.x/cashier-paddle.md:869 docs/8.x/cashier-paddle.md:1070 docs/8.x/cashier-paddle.md:1093 docs/8.x/cashier-paddle.md:1118
#, no-wrap
msgid "    use App\\Models\\User;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:369
#, no-wrap
msgid "    $prices = User::find(1)->productPrices([123, 456]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:371
msgid ""
"Internally, Cashier will use the user's [`paddleCountry` "
"method](#customer-defaults) to retrieve the prices in their currency. So, "
"for example, a user living in the United States will see prices in USD while "
"a user in Belgium will see prices in EUR. If no matching currency can be "
"found the default currency of the product will be used. You can customize "
"all prices of a product or subscription plan in the Paddle control panel."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:373
#, no-wrap
msgid "<a name=\"prices-coupons\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/cashier-paddle.md:373 docs/8.x/cashier-paddle.md:493
#, no-wrap
msgid "Coupons"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:376
msgid ""
"You may also choose to display prices after a coupon reduction. When calling "
"the `productPrices` method, coupons may be passed as a comma delimited "
"string:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:382
#, no-wrap
msgid ""
"    $prices = Cashier::productPrices([123, 456], [\n"
"        'coupons' => 'SUMMERSALE,20PERCENTOFF'\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:384
msgid "Then, display the calculated prices using the `price` method:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:394
msgid ""
"You may display the original listed prices (without coupon discounts) using "
"the `listPrice` method:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:395
#, no-wrap
msgid ""
"<ul>\n"
"    @foreach ($prices as $price)\n"
"        <li>{{ $price->product_title }} - {{ $price->listPrice()->gross() "
"}}</li>\n"
"    @endforeach\n"
"</ul>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:404
#, no-wrap
msgid ""
"> {note} When using the prices API, Paddle only allows applying coupons to "
"one-time purchase products and not to subscription plans.\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:406
#, no-wrap
msgid "<a name=\"customers\"></a>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:409
#, no-wrap
msgid "<a name=\"customer-defaults\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:409
#, no-wrap
msgid "Customer Defaults"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:412
msgid ""
"Cashier allows you to define some useful defaults for your customers when "
"creating pay links. Setting these defaults allow you to pre-fill a "
"customer's email address, country, and postal code so that they can "
"immediately move on to the payment portion of the checkout widget. You can "
"set these defaults by overriding the following methods on your billable "
"model:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:422
#, no-wrap
msgid ""
"    /**\n"
"     * Get the customer's email address to associate with Paddle.\n"
"     *\n"
"     * @return string|null\n"
"     */\n"
"    public function paddleEmail()\n"
"    {\n"
"        return $this->email;\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:435
#, no-wrap
msgid ""
"    /**\n"
"     * Get the customer's country to associate with Paddle.\n"
"     *\n"
"     * This needs to be a 2 letter code. See the link below for supported "
"countries.\n"
"     *\n"
"     * @return string|null\n"
"     * @link "
"https://developer.paddle.com/reference/platform-parameters/supported-countries\n"
"     */\n"
"    public function paddleCountry()\n"
"    {\n"
"        //\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:448
#, no-wrap
msgid ""
"    /**\n"
"     * Get the customer's postal code to associate with Paddle.\n"
"     *\n"
"     * See the link below for countries which require this.\n"
"     *\n"
"     * @return string|null\n"
"     * @link "
"https://developer.paddle.com/reference/platform-parameters/supported-countries#countries-requiring-postcode\n"
"     */\n"
"    public function paddlePostcode()\n"
"    {\n"
"        //\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:450
msgid ""
"These defaults will be used for every action in Cashier that generates a "
"[pay link](#pay-links)."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:452
#, no-wrap
msgid "<a name=\"subscriptions\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/cashier-paddle.md:452
#, no-wrap
msgid "Subscriptions"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:455
#, no-wrap
msgid "<a name=\"creating-subscriptions\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:455
#, no-wrap
msgid "Creating Subscriptions"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:458
msgid ""
"To create a subscription, first retrieve an instance of your billable model, "
"which typically will be an instance of `App\\Models\\User`. Once you have "
"retrieved the model instance, you may use the `newSubscription` method to "
"create the model's subscription pay link:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:460 docs/8.x/cashier-paddle.md:834 docs/8.x/cashier-paddle.md:887 docs/8.x/cashier-paddle.md:1003 docs/8.x/cashier-paddle.md:1043
#, no-wrap
msgid "    use Illuminate\\Http\\Request;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:465
#, no-wrap
msgid ""
"    Route::get('/user/subscribe', function (Request $request) {\n"
"        $payLink = $user->newSubscription('default', $premium = 12345)\n"
"            ->returnTo(route('home'))\n"
"            ->create();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:470
msgid ""
"The first argument passed to the `newSubscription` method should be the name "
"of the subscription. If your application only offers a single subscription, "
"you might call this `default` or `primary`. The second argument is the "
"specific plan the user is subscribing to. This value should correspond to "
"the plan's identifier in Paddle. The `returnTo` method accepts a URL that "
"your user will be redirected to after they successfully complete the "
"checkout."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:472
msgid ""
"The `create` method will create a pay link which you can use to generate a "
"payment button. The payment button can be generated using the "
"`paddle-button` [Blade component](/docs/{{version}}/blade#components) that "
"is included with Cashier Paddle:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:480
msgid ""
"After the user has finished their checkout, a `subscription_created` webhook "
"will be dispatched from Paddle. Cashier will receive this webhook and setup "
"the subscription for your customer. In order to make sure all webhooks are "
"properly received and handled by your application, ensure you have properly "
"[setup webhook handling](#handling-paddle-webhooks)."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:482
#, no-wrap
msgid "<a name=\"additional-details\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/cashier-paddle.md:482
#, no-wrap
msgid "Additional Details"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:485
msgid ""
"If you would like to specify additional customer or subscription details, "
"you may do so by passing them as an array of key / value pairs to the "
"`create` method. To learn more about the additional fields supported by "
"Paddle, check out Paddle's documentation on [generating pay "
"links](https://developer.paddle.com/api-reference/product-api/pay-links/createpaylink):"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:491
#, no-wrap
msgid ""
"    $payLink = $user->newSubscription('default', $monthly = 12345)\n"
"        ->returnTo(route('home'))\n"
"        ->create([\n"
"            'vat_number' => $vatNumber,\n"
"        ]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:493
#, no-wrap
msgid "<a name=\"subscriptions-coupons\"></a>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:496
msgid ""
"If you would like to apply a coupon when creating the subscription, you may "
"use the `withCoupon` method:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:501
#, no-wrap
msgid ""
"    $payLink = $user->newSubscription('default', $monthly = 12345)\n"
"        ->returnTo(route('home'))\n"
"        ->withCoupon('code')\n"
"        ->create();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:503
#, no-wrap
msgid "<a name=\"metadata\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/cashier-paddle.md:503
#, no-wrap
msgid "Metadata"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:506
msgid "You can also pass an array of metadata using the `withMetadata` method:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:511
#, no-wrap
msgid ""
"    $payLink = $user->newSubscription('default', $monthly = 12345)\n"
"        ->returnTo(route('home'))\n"
"        ->withMetadata(['key' => 'value'])\n"
"        ->create();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:513
#, no-wrap
msgid ""
"> {note} When providing metadata, please avoid using `subscription_name` as "
"a metadata key. This key is reserved for internal use by Cashier.\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:515
#, no-wrap
msgid "<a name=\"checking-subscription-status\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:515
#, no-wrap
msgid "Checking Subscription Status"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:518
msgid ""
"Once a user is subscribed to your application, you may check their "
"subscription status using a variety of convenient methods. First, the "
"`subscribed` method returns `true` if the user has an active subscription, "
"even if the subscription is currently within its trial period:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:522
#, no-wrap
msgid ""
"    if ($user->subscribed('default')) {\n"
"        //\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:524
msgid ""
"The `subscribed` method also makes a great candidate for a [route "
"middleware](/docs/{{version}}/middleware), allowing you to filter access to "
"routes and controllers based on the user's subscription status:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:526 docs/8.x/cashier-paddle.md:944 docs/8.x/cashier-paddle.md:1138
#, no-wrap
msgid "    <?php\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:528
#, no-wrap
msgid "    namespace App\\Http\\Middleware;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:530
#, no-wrap
msgid "    use Closure;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:546
#, no-wrap
msgid ""
"    class EnsureUserIsSubscribed\n"
"    {\n"
"        /**\n"
"         * Handle an incoming request.\n"
"         *\n"
"         * @param  \\Illuminate\\Http\\Request  $request\n"
"         * @param  \\Closure  $next\n"
"         * @return mixed\n"
"         */\n"
"        public function handle($request, Closure $next)\n"
"        {\n"
"            if ($request->user() && ! "
"$request->user()->subscribed('default')) {\n"
"                // This user is not a paying customer...\n"
"                return redirect('billing');\n"
"            }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:550
#, no-wrap
msgid ""
"            return $next($request);\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:552
msgid ""
"If you would like to determine if a user is still within their trial period, "
"you may use the `onTrial` method. This method can be useful for determining "
"if you should display a warning to the user that they are still on their "
"trial period:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:556 docs/8.x/cashier-paddle.md:857
#, no-wrap
msgid ""
"    if ($user->subscription('default')->onTrial()) {\n"
"        //\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:558
msgid ""
"The `subscribedToPlan` method may be used to determine if the user is "
"subscribed to a given plan based on a given Paddle plan ID. In this example, "
"we will determine if the user's `default` subscription is actively "
"subscribed to the monthly plan:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:562
#, no-wrap
msgid ""
"    if ($user->subscribedToPlan($monthly = 12345, 'default')) {\n"
"        //\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:564
msgid ""
"By passing an array to the `subscribedToPlan` method, you may determine if "
"the user's `default` subscription is actively subscribed to the monthly or "
"the yearly plan:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:568
#, no-wrap
msgid ""
"    if ($user->subscribedToPlan([$monthly = 12345, $yearly = 54321], "
"'default')) {\n"
"        //\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:570
msgid ""
"The `recurring` method may be used to determine if the user is currently "
"subscribed and is no longer within their trial period:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:574
#, no-wrap
msgid ""
"    if ($user->subscription('default')->recurring()) {\n"
"        //\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:576
#, no-wrap
msgid "<a name=\"cancelled-subscription-status\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/cashier-paddle.md:576
#, no-wrap
msgid "Cancelled Subscription Status"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:579
msgid ""
"To determine if the user was once an active subscriber but has cancelled "
"their subscription, you may use the `cancelled` method:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:583
#, no-wrap
msgid ""
"    if ($user->subscription('default')->cancelled()) {\n"
"        //\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:585
msgid ""
"You may also determine if a user has cancelled their subscription, but are "
"still on their \"grace period\" until the subscription fully expires. For "
"example, if a user cancels a subscription on March 5th that was originally "
"scheduled to expire on March 10th, the user is on their \"grace period\" "
"until March 10th. Note that the `subscribed` method still returns `true` "
"during this time:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:589 docs/8.x/cashier-paddle.md:816
#, no-wrap
msgid ""
"    if ($user->subscription('default')->onGracePeriod()) {\n"
"        //\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:591
msgid ""
"To determine if the user has cancelled their subscription and is no longer "
"within their \"grace period\", you may use the `ended` method:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:595
#, no-wrap
msgid ""
"    if ($user->subscription('default')->ended()) {\n"
"        //\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:597
#, no-wrap
msgid "<a name=\"past-due-status\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/cashier-paddle.md:597
#, no-wrap
msgid "Past Due Status"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:600
msgid ""
"If a payment fails for a subscription, it will be marked as `past_due`. When "
"your subscription is in this state it will not be active until the customer "
"has updated their payment information. You may determine if a subscription "
"is past due using the `pastDue` method on the subscription instance:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:604
#, no-wrap
msgid ""
"    if ($user->subscription('default')->pastDue()) {\n"
"        //\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:606
msgid ""
"When a subscription is past due, you should instruct the user to [update "
"their payment information](#updating-payment-information). You may configure "
"how past due subscriptions are handled in your [Paddle subscription "
"settings](https://vendors.paddle.com/subscription-settings)."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:608
msgid ""
"If you would like subscriptions to still be considered active when they are "
"`past_due`, you may use the `keepPastDueSubscriptionsActive` method provided "
"by Cashier. Typically, this method should be called in the `register` method "
"of your `AppServiceProvider`:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:620
#, no-wrap
msgid ""
"    /**\n"
"     * Register any application services.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function register()\n"
"    {\n"
"        Cashier::keepPastDueSubscriptionsActive();\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:622
#, no-wrap
msgid ""
"> {note} When a subscription is in a `past_due` state it cannot be changed "
"until payment information has been updated. Therefore, the `swap` and "
"`updateQuantity` methods will throw an exception when the subscription is in "
"a `past_due` state.\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:624
#, no-wrap
msgid "<a name=\"subscription-scopes\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/cashier-paddle.md:624
#, no-wrap
msgid "Subscription Scopes"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:627
msgid ""
"Most subscription states are also available as query scopes so that you may "
"easily query your database for subscriptions that are in a given state:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:630
#, no-wrap
msgid ""
"    // Get all active subscriptions...\n"
"    $subscriptions = Subscription::query()->active()->get();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:633
#, no-wrap
msgid ""
"    // Get all of the cancelled subscriptions for a user...\n"
"    $subscriptions = $user->subscriptions()->cancelled()->get();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:635
msgid "A complete list of available scopes is available below:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:650
#, no-wrap
msgid ""
"    Subscription::query()->active();\n"
"    Subscription::query()->onTrial();\n"
"    Subscription::query()->notOnTrial();\n"
"    Subscription::query()->pastDue();\n"
"    Subscription::query()->recurring();\n"
"    Subscription::query()->ended();\n"
"    Subscription::query()->paused();\n"
"    Subscription::query()->notPaused();\n"
"    Subscription::query()->onPausedGracePeriod();\n"
"    Subscription::query()->notOnPausedGracePeriod();\n"
"    Subscription::query()->cancelled();\n"
"    Subscription::query()->notCancelled();\n"
"    Subscription::query()->onGracePeriod();\n"
"    Subscription::query()->notOnGracePeriod();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:652
#, no-wrap
msgid "<a name=\"subscription-single-charges\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:652
#, no-wrap
msgid "Subscription Single Charges"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:655
msgid ""
"Subscription single charges allow you to charge subscribers with a one-time "
"charge on top of their subscriptions:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:657
#, no-wrap
msgid ""
"    $response = $user->subscription('default')->charge(12.99, 'Support "
"Add-on');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:659
msgid ""
"In contrast to [single charges](#single-charges), this method will "
"immediately charge the customer's stored payment method for the "
"subscription. The charge amount should always be defined in the currency of "
"the subscription."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:661
#, no-wrap
msgid "<a name=\"updating-payment-information\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:661
#, no-wrap
msgid "Updating Payment Information"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:664
msgid ""
"Paddle always saves a payment method per subscription. If you want to update "
"the default payment method for a subscription, you should first generate a "
"subscription \"update URL\" using the `updateUrl` method on the subscription "
"model:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:668 docs/8.x/cashier-paddle.md:689 docs/8.x/cashier-paddle.md:703 docs/8.x/cashier-paddle.md:719 docs/8.x/cashier-paddle.md:1072 docs/8.x/cashier-paddle.md:1095 docs/8.x/cashier-paddle.md:1120
#, no-wrap
msgid "    $user = User::find(1);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:670
#, no-wrap
msgid "    $updateUrl = $user->subscription('default')->updateUrl();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:672
msgid ""
"Then, you may use the generated URL in combination with Cashier's provided "
"`paddle-button` Blade component to allow the user to initiate the Paddle "
"widget and update their payment information:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:673
#, no-wrap
msgid ""
"<x-paddle-button :url=\"$updateUrl\" class=\"px-8 py-4\">\n"
"    Update Card\n"
"</x-paddle-button>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:680
msgid ""
"When a user has finished updating their information, a "
"`subscription_updated` webhook will be dispatched by Paddle and the "
"subscription details will be updated in your application's database."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:682
#, no-wrap
msgid "<a name=\"changing-plans\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:682
#, no-wrap
msgid "Changing Plans"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:685
msgid ""
"After a user has subscribed to your application, they may occasionally want "
"to change to a new subscription plan. To update the subscription plan for a "
"user, you should pass the Paddle plan's identifier to the subscription's "
"`swap` method:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:691
#, no-wrap
msgid "    $user->subscription('default')->swap($premium = 34567);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:693
msgid ""
"If the user is on a trial, the trial period will be "
"maintained. Additionally, if a \"quantity\" exists for the subscription, "
"that quantity will also be maintained."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:695
msgid ""
"If you would like to swap plans and cancel any trial period the user is "
"currently on, you may use the `skipTrial` method:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:699
#, no-wrap
msgid ""
"    $user->subscription('default')\n"
"            ->skipTrial()\n"
"            ->swap($premium = 34567);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:701
msgid ""
"If you would like to swap plans and immediately invoice the user instead of "
"waiting for their next billing cycle, you may use the `swapAndInvoice` "
"method:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:705
#, no-wrap
msgid "    $user->subscription('default')->swapAndInvoice($premium = 34567);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:707
#, no-wrap
msgid "<a name=\"prorations\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/cashier-paddle.md:707
#, no-wrap
msgid "Prorations"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:710
msgid ""
"By default, Paddle prorates charges when swapping between plans. The "
"`noProrate` method may be used to update the subscription's without "
"prorating the charges:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:712
#, no-wrap
msgid "    $user->subscription('default')->noProrate()->swap($premium = 34567);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:714
#, no-wrap
msgid "<a name=\"subscription-quantity\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:714
#, no-wrap
msgid "Subscription Quantity"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:717
msgid ""
"Sometimes subscriptions are affected by \"quantity\". For example, a project "
"management application might charge $10 per month per project. To easily "
"increment or decrement your subscription's quantity, use the "
"`incrementQuantity` and `decrementQuantity` methods:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:721
#, no-wrap
msgid "    $user->subscription('default')->incrementQuantity();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:724
#, no-wrap
msgid ""
"    // Add five to the subscription's current quantity...\n"
"    $user->subscription('default')->incrementQuantity(5);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:726
#, no-wrap
msgid "    $user->subscription('default')->decrementQuantity();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:729
#, no-wrap
msgid ""
"    // Subtract five from the subscription's current quantity...\n"
"    $user->subscription('default')->decrementQuantity(5);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:731
msgid ""
"Alternatively, you may set a specific quantity using the `updateQuantity` "
"method:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:733
#, no-wrap
msgid "    $user->subscription('default')->updateQuantity(10);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:735
msgid ""
"The `noProrate` method may be used to update the subscription's quantity "
"without prorating the charges:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:737
#, no-wrap
msgid "    $user->subscription('default')->noProrate()->updateQuantity(10);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:739
#, no-wrap
msgid "<a name=\"subscription-modifiers\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:739
#, no-wrap
msgid "Subscription Modifiers"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:742
msgid ""
"Subscription modifiers allow you to implement [metered "
"billing](https://developer.paddle.com/guides/how-tos/subscriptions/metered-billing#using-subscription-price-modifiers) "
"or extend subscriptions with add-ons."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:744
msgid ""
"For example, you might want to offer a \"Premium Support\" add-on with your "
"standard subscription. You can create this modifier like so:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:746
#, no-wrap
msgid ""
"    $modifier = "
"$user->subscription('default')->newModifier(12.99)->create();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:748
msgid ""
"The example above will add a $12.99 add-on to the subscription. By default, "
"this charge will recur on every interval you have configured for the "
"subscription. If you would like, you can add a readable description to the "
"modifier using the modifier's `description` method:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:752
#, no-wrap
msgid ""
"    $modifier = $user->subscription('default')->newModifier(12.99)\n"
"        ->description('Premium Support')\n"
"        ->create();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:754
msgid ""
"To illustrate how to implement metered billing using modifiers, imagine your "
"application charges per SMS message sent by the user. First, you should "
"create a $0 plan in your Paddle dashboard. Once the user has been subscribed "
"to this plan, you can add modifiers representing each individual charge to "
"the subscription:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:759
#, no-wrap
msgid ""
"    $modifier = $user->subscription('default')->newModifier(0.99)\n"
"        ->description('New text message')\n"
"        ->oneTime()\n"
"        ->create();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:761
msgid ""
"As you can see, we invoked the `oneTime` method when creating this "
"modifier. This method will ensure the modifier is only charged once and does "
"not recur every billing interval."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:763
#, no-wrap
msgid "<a name=\"retrieving-modifiers\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/cashier-paddle.md:763
#, no-wrap
msgid "Retrieving Modifiers"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:766
msgid ""
"You may retrieve a list of all modifiers for a subscription via the "
"`modifiers` method:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:768
#, no-wrap
msgid "    $modifiers = $user->subscription('default')->modifiers();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:773
#, no-wrap
msgid ""
"    foreach ($modifiers as $modifier) {\n"
"        $modifier->amount(); // $0.99\n"
"        $modifier->description; // New text message.\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:775
#, no-wrap
msgid "<a name=\"deleting-modifiers\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/cashier-paddle.md:775
#, no-wrap
msgid "Deleting Modifiers"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:778
msgid ""
"Modifiers may be deleted by invoking the `delete` method on a "
"`Laravel\\Paddle\\Modifier` instance:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:780
#, no-wrap
msgid "    $modifier->delete();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:782
#, no-wrap
msgid "<a name=\"pausing-subscriptions\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:782
#, no-wrap
msgid "Pausing Subscriptions"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:785
msgid "To pause a subscription, call the `pause` method on the user's subscription:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:787
#, no-wrap
msgid "    $user->subscription('default')->pause();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:789
msgid ""
"When a subscription is paused, Cashier will automatically set the "
"`paused_from` column in your database. This column is used to know when the "
"`paused` method should begin returning `true`. For example, if a customer "
"pauses a subscription on March 1st, but the subscription was not scheduled "
"to recur until March 5th, the `paused` method will continue to return "
"`false` until March 5th. This is done because a user is typically allowed to "
"continue using an application until the end of their billing cycle."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:791
msgid ""
"You may determine if a user has paused their subscription but are still on "
"their \"grace period\" using the `onPausedGracePeriod` method:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:795
#, no-wrap
msgid ""
"    if ($user->subscription('default')->onPausedGracePeriod()) {\n"
"        //\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:797
msgid ""
"To resume a paused a subscription, you may call the `unpause` method on the "
"user's subscription:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:799
#, no-wrap
msgid "    $user->subscription('default')->unpause();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:801
#, no-wrap
msgid ""
"> {note} A subscription cannot be modified while it is paused. If you want "
"to swap to a different plan or update quantities you must resume the "
"subscription first.\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:803
#, no-wrap
msgid "<a name=\"cancelling-subscriptions\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:803
#, no-wrap
msgid "Cancelling Subscriptions"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:806
msgid ""
"To cancel a subscription, call the `cancel` method on the user's "
"subscription:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:808
#, no-wrap
msgid "    $user->subscription('default')->cancel();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:810
msgid ""
"When a subscription is cancelled, Cashier will automatically set the "
"`ends_at` column in your database. This column is used to know when the "
"`subscribed` method should begin returning `false`. For example, if a "
"customer cancels a subscription on March 1st, but the subscription was not "
"scheduled to end until March 5th, the `subscribed` method will continue to "
"return `true` until March 5th. This is done because a user is typically "
"allowed to continue using an application until the end of their billing "
"cycle."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:812
msgid ""
"You may determine if a user has cancelled their subscription but are still "
"on their \"grace period\" using the `onGracePeriod` method:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:818
msgid ""
"If you wish to cancel a subscription immediately, you may call the "
"`cancelNow` method on the user's subscription:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:820
#, no-wrap
msgid "    $user->subscription('default')->cancelNow();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:822
#, no-wrap
msgid ""
"> {note} Paddle's subscriptions cannot be resumed after cancellation. If "
"your customer wishes to resume their subscription, they will have to "
"subscribe to a new subscription.\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:824
#, no-wrap
msgid "<a name=\"subscription-trials\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/cashier-paddle.md:824
#, no-wrap
msgid "Subscription Trials"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:827
#, no-wrap
msgid "<a name=\"with-payment-method-up-front\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:827
#, no-wrap
msgid "With Payment Method Up Front"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:830
#, no-wrap
msgid ""
"> {note} While trialing and collecting payment method details up front, "
"Paddle prevents any subscription changes such as swapping plans or updating "
"quantities. If you want to allow a customer to swap plans during a trial the "
"subscription must be cancelled and recreated.\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:832
msgid ""
"If you would like to offer trial periods to your customers while still "
"collecting payment method information up front, you should use the "
"`trialDays` method when creating your subscription pay links:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:840
#, no-wrap
msgid ""
"    Route::get('/user/subscribe', function (Request $request) {\n"
"        $payLink = $request->user()->newSubscription('default', $monthly = "
"12345)\n"
"                    ->returnTo(route('home'))\n"
"                    ->trialDays(10)\n"
"                    ->create();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:845
msgid ""
"This method will set the trial period ending date on the subscription record "
"within your application's database, as well as instruct Paddle to not begin "
"billing the customer until after this date."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:847
#, no-wrap
msgid ""
"> {note} If the customer's subscription is not cancelled before the trial "
"ending date they will be charged as soon as the trial expires, so you should "
"be sure to notify your users of their trial ending date.\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:849
msgid ""
"You may determine if the user is within their trial period using either the "
"`onTrial` method of the user instance or the `onTrial` method of the "
"subscription instance. The two examples below are equivalent:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:853
#, no-wrap
msgid ""
"    if ($user->onTrial('default')) {\n"
"        //\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:859
#, no-wrap
msgid "<a name=\"defining-trial-days-in-paddle-cashier\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/cashier-paddle.md:859
#, no-wrap
msgid "Defining Trial Days In Paddle / Cashier"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:862
msgid ""
"You may choose to define how many trial days your plan's receive in the "
"Paddle dashboard or always pass them explicitly using Cashier. If you choose "
"to define your plan's trial days in Paddle you should be aware that new "
"subscriptions, including new subscriptions for a customer that had a "
"subscription in the past, will always receive a trial period unless you "
"explicitly call the `trialDays(0)` method."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:864
#, no-wrap
msgid "<a name=\"without-payment-method-up-front\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:864
#, no-wrap
msgid "Without Payment Method Up Front"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:867
msgid ""
"If you would like to offer trial periods without collecting the user's "
"payment method information up front, you may set the `trial_ends_at` column "
"on the customer record attached to your user to your desired trial ending "
"date. This is typically done during user registration:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:873
#, no-wrap
msgid ""
"    $user = User::create([\n"
"        // ...\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:877
#, no-wrap
msgid ""
"    $user->createAsCustomer([\n"
"        'trial_ends_at' => now()->addDays(10)\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:879
msgid ""
"Cashier refers to this type of trial as a \"generic trial\", since it is not "
"attached to any existing subscription. The `onTrial` method on the `User` "
"instance will return `true` if the current date is not past the value of "
"`trial_ends_at`:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:883
#, no-wrap
msgid ""
"    if ($user->onTrial()) {\n"
"        // User is within their trial period...\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:885
msgid ""
"Once you are ready to create an actual subscription for the user, you may "
"use the `newSubscription` method as usual:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:892
#, no-wrap
msgid ""
"    Route::get('/user/subscribe', function (Request $request) {\n"
"        $payLink = $user->newSubscription('default', $monthly = 12345)\n"
"            ->returnTo(route('home'))\n"
"            ->create();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:897
msgid ""
"To retrieve the user's trial ending date, you may use the `trialEndsAt` "
"method. This method will return a Carbon date instance if a user is on a "
"trial or `null` if they aren't. You may also pass an optional subscription "
"name parameter if you would like to get the trial ending date for a specific "
"subscription other than the default one:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:901
#, no-wrap
msgid ""
"    if ($user->onTrial()) {\n"
"        $trialEndsAt = $user->trialEndsAt('main');\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:903
msgid ""
"You may use the `onGenericTrial` method if you wish to know specifically "
"that the user is within their \"generic\" trial period and has not created "
"an actual subscription yet:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:907
#, no-wrap
msgid ""
"    if ($user->onGenericTrial()) {\n"
"        // User is within their \"generic\" trial period...\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:909
#, no-wrap
msgid ""
"> {note} There is no way to extend or modify a trial period on a Paddle "
"subscription after it has been created.\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:911
#, no-wrap
msgid "<a name=\"handling-paddle-webhooks\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/cashier-paddle.md:911
#, no-wrap
msgid "Handling Paddle Webhooks"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:914
msgid ""
"Paddle can notify your application of a variety of events via webhooks. By "
"default, a route that points to Cashier's webhook controller is registered "
"by the Cashier service provider. This controller will handle all incoming "
"webhook requests."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:916
msgid ""
"By default, this controller will automatically handle cancelling "
"subscriptions that have too many failed charges ([as defined by your Paddle "
"subscription settings](https://vendors.paddle.com/subscription-settings)), "
"subscription updates, and payment method changes; however, as we'll soon "
"discover, you can extend this controller to handle any Paddle webhook event "
"you like."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:918
msgid ""
"To ensure your application can handle Paddle webhooks, be sure to [configure "
"the webhook URL in the Paddle control "
"panel](https://vendors.paddle.com/alerts-webhooks). By default, Cashier's "
"webhook controller responds to the `/paddle/webhook` URL path. The full list "
"of all webhooks you should enable in the Paddle control panel are:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:924
msgid ""
"- Subscription Created - Subscription Updated - Subscription Cancelled - "
"Payment Succeeded - Subscription Payment Succeeded"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:926
#, no-wrap
msgid ""
"> {note} Make sure you protect incoming requests with Cashier's included "
"[webhook signature "
"verification](/docs/{{version}}/cashier-paddle#verifying-webhook-signatures) "
"middleware.\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:928
#, no-wrap
msgid "<a name=\"webhooks-csrf-protection\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/cashier-paddle.md:928
#, no-wrap
msgid "Webhooks & CSRF Protection"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:931
msgid ""
"Since Paddle webhooks need to bypass Laravel's [CSRF "
"protection](/docs/{{version}}/csrf), be sure to list the URI as an exception "
"in your `App\\Http\\Middleware\\VerifyCsrfToken` middleware or list the "
"route outside of the `web` middleware group:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:935
#, no-wrap
msgid ""
"    protected $except = [\n"
"        'paddle/*',\n"
"    ];\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:937
#, no-wrap
msgid "<a name=\"defining-webhook-event-handlers\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:937
#, no-wrap
msgid "Defining Webhook Event Handlers"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:940
msgid ""
"Cashier automatically handles subscription cancellation on failed charges "
"and other common Paddle webhooks, but if you have additional webhook events "
"you would like to handle, you should extend Cashier's `WebhookController`."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:942
msgid ""
"Your controller's method names should correspond to Cashier's controller "
"method conventions. Specifically, methods should be prefixed with `handle` "
"and the \"camel case\" name of the webhook you wish to handle. For example, "
"if you wish to handle the `payment_succeeded` webhook, you should add a "
"`handlePaymentSucceeded` method to the controller:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:946 docs/8.x/cashier-paddle.md:1140
#, no-wrap
msgid "    namespace App\\Http\\Controllers;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:948 docs/8.x/cashier-paddle.md:1142
#, no-wrap
msgid ""
"    use Laravel\\Paddle\\Http\\Controllers\\WebhookController as "
"CashierController;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:962
#, no-wrap
msgid ""
"    class WebhookController extends CashierController\n"
"    {\n"
"        /**\n"
"         * Handle the payment succeeded webhook.\n"
"         *\n"
"         * @param  array  $payload\n"
"         * @return void\n"
"         */\n"
"        public function handlePaymentSucceeded($payload)\n"
"        {\n"
"            // Handle the event...\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:964
msgid ""
"Next, define a route to your Cashier webhook controller within your "
"application's `routes/web.php` file. This will overwrite the default route "
"registered by Cashier's service provider:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:966
#, no-wrap
msgid "    use App\\Http\\Controllers\\WebhookController;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:968
#, no-wrap
msgid "    Route::post('/paddle/webhook', WebhookController::class);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:970
msgid ""
"Cashier emits a `Laravel\\Paddle\\Events\\WebhookReceived` event when a "
"webhook is received and a `Laravel\\Paddle\\Events\\WebhookHandled` event "
"when a webhook was handled. Both events contain the full payload of the "
"Paddle webhook."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:972
msgid ""
"Cashier also emit events dedicated to the type of the received webhook. In "
"addition to the full payload from Paddle, they also contain the relevant "
"models that were used to process the webhook such as the billable model, the "
"subscription, or the receipt:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:980
#, no-wrap
msgid ""
"<div class=\"content-list\" markdown=\"1\">\n"
"- `Laravel\\Paddle\\Events\\PaymentSucceeded`\n"
"- `Laravel\\Paddle\\Events\\SubscriptionPaymentSucceeded`\n"
"- `Laravel\\Paddle\\Events\\SubscriptionCreated`\n"
"- `Laravel\\Paddle\\Events\\SubscriptionUpdated`\n"
"- `Laravel\\Paddle\\Events\\SubscriptionCancelled`\n"
"</div>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:982
msgid ""
"You can also override the default, built-in webhook route by defining the "
"`CASHIER_WEBHOOK` environment variable in your application's `.env` "
"file. This value should be the full URL to your webhook route and needs to "
"match the URL set in your Paddle control panel:"
msgstr ""

#. type: Code fence info string
#: docs/8.x/cashier-paddle.md:983 docs/8.x/cashier-paddle.md:1026
#, no-wrap
msgid "bash"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:983
#, no-wrap
msgid "CASHIER_WEBHOOK=https://example.com/my-paddle-webhook-url\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:988
#, no-wrap
msgid "<a name=\"verifying-webhook-signatures\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:988
#, no-wrap
msgid "Verifying Webhook Signatures"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:991
msgid ""
"To secure your webhooks, you may use [Paddle's webhook "
"signatures](https://developer.paddle.com/webhook-reference/verifying-webhooks). "
"For convenience, Cashier automatically includes a middleware which validates "
"that the incoming Paddle webhook request is valid."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:993
msgid ""
"To enable webhook verification, ensure that the `PADDLE_PUBLIC_KEY` "
"environment variable is defined in your application's `.env` file. The "
"public key may be retrieved from your Paddle account dashboard."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:995
#, no-wrap
msgid "<a name=\"single-charges\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/cashier-paddle.md:995
#, no-wrap
msgid "Single Charges"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:998
#, no-wrap
msgid "<a name=\"simple-charge\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:998
#, no-wrap
msgid "Simple Charge"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1001
msgid ""
"If you would like to make a one-time charge against a customer, you may use "
"the `charge` method on a billable model instance to generate a pay link for "
"the charge. The `charge` method accepts the charge amount (float) as its "
"first argument and a charge description as its second argument:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1009
#, no-wrap
msgid ""
"    Route::get('/store', function (Request $request) {\n"
"        return view('store', [\n"
"            'payLink' => $user->charge(12.99, 'Action Figure')\n"
"        ]);\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1011
msgid ""
"After generating the pay link, you may use Cashier's provided "
"`paddle-button` Blade component to allow the user to initiate the Paddle "
"widget and complete the charge:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1012 docs/8.x/cashier-paddle.md:1052
#, no-wrap
msgid ""
"<x-paddle-button :url=\"$payLink\" class=\"px-8 py-4\">\n"
"    Buy\n"
"</x-paddle-button>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1019
msgid ""
"The `charge` method accepts an array as its third argument, allowing you to "
"pass any options you wish to the underlying Paddle pay link creation. Please "
"consult [the Paddle "
"documentation](https://developer.paddle.com/api-reference/product-api/pay-links/createpaylink) "
"to learn more about the options available to you when creating charges:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1023
#, no-wrap
msgid ""
"    $payLink = $user->charge(12.99, 'Action Figure', [\n"
"        'custom_option' => $value,\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1025
msgid ""
"Charges happen in the currency specified in the `cashier.currency` "
"configuration option. By default, this is set to USD. You may override the "
"default currency by defining the `CASHIER_CURRENCY` environment variable in "
"your application's `.env` file:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1026
#, no-wrap
msgid "CASHIER_CURRENCY=EUR\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1031
msgid ""
"You can also [override prices per "
"currency](https://developer.paddle.com/api-reference/product-api/pay-links/createpaylink#price-overrides) "
"using Paddle's dynamic pricing matching system. To do so, pass an array of "
"prices instead of a fixed amount:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1036
#, no-wrap
msgid ""
"    $payLink = $user->charge([\n"
"        'USD:19.99',\n"
"        'EUR:15.99',\n"
"    ], 'Action Figure');\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1038
#, no-wrap
msgid "<a name=\"charging-products\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:1038
#, no-wrap
msgid "Charging Products"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1041
msgid ""
"If you would like to make a one-time charge against a specific product "
"configured within Paddle, you may use the `chargeProduct` method on a "
"billable model instance to generate a pay link:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1049
#, no-wrap
msgid ""
"    Route::get('/store', function (Request $request) {\n"
"        return view('store', [\n"
"            'payLink' => $request->user()->chargeProduct($productId = 123)\n"
"        ]);\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1051
msgid ""
"Then, you may provide the pay link to the `paddle-button` component to allow "
"the user to initialize the Paddle widget:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1059
msgid ""
"The `chargeProduct` method accepts an array as its second argument, allowing "
"you to pass any options you wish to the underlying Paddle pay link "
"creation. Please consult [the Paddle "
"documentation](https://developer.paddle.com/api-reference/product-api/pay-links/createpaylink) "
"regarding the options that are available to you when creating charges:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1063
#, no-wrap
msgid ""
"    $payLink = $user->chargeProduct($productId, [\n"
"        'custom_option' => $value,\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1065
#, no-wrap
msgid "<a name=\"refunding-orders\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:1065
#, no-wrap
msgid "Refunding Orders"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1068
msgid ""
"If you need to refund a Paddle order, you may use the `refund` method. This "
"method accepts the Paddle order ID as its first argument. You may retrieve "
"the receipts for a given billable model using the `receipts` method:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1074 docs/8.x/cashier-paddle.md:1080
#, no-wrap
msgid "    $receipt = $user->receipts()->first();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1076
#, no-wrap
msgid "    $refundRequestId = $user->refund($receipt->order_id);\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1078
msgid ""
"You may optionally specify a specific amount to refund as well as a reason "
"for the refund:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1084
#, no-wrap
msgid ""
"    $refundRequestId = $user->refund(\n"
"        $receipt->order_id, 5.00, 'Unused product time'\n"
"    );\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1086
#, no-wrap
msgid ""
"> {tip} You can use the `$refundRequestId` as a reference for the refund "
"when contacting Paddle support.\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1088
#, no-wrap
msgid "<a name=\"receipts\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/cashier-paddle.md:1088
#, no-wrap
msgid "Receipts"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1091
msgid ""
"You may easily retrieve an array of a billable model's receipts via the "
"`receipts` property:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1097
#, no-wrap
msgid "    $receipts = $user->receipts;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1099
msgid ""
"When listing the receipts for the customer, you may use the receipt "
"instance's methods to display the relevant receipt information. For example, "
"you may wish to list every receipt in a table, allowing the user to easily "
"download any of the receipts:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1100
#, no-wrap
msgid ""
"<table>\n"
"    @foreach ($receipts as $receipt)\n"
"        <tr>\n"
"            <td>{{ $receipt->paid_at->toFormattedDateString() }}</td>\n"
"            <td>{{ $receipt->amount() }}</td>\n"
"            <td><a href=\"{{ $receipt->receipt_url }}\" "
"target=\"_blank\">Download</a></td>\n"
"        </tr>\n"
"    @endforeach\n"
"</table>\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1113
#, no-wrap
msgid "<a name=\"past-and-upcoming-payments\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/cashier-paddle.md:1113
#, no-wrap
msgid "Past & Upcoming Payments"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1116
msgid ""
"You may use the `lastPayment` and `nextPayment` methods to retrieve and "
"display a customer's past or upcoming payments for recurring subscriptions:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1125
#, no-wrap
msgid ""
"    $lastPayment = $subscription->lastPayment();\n"
"    $nextPayment = $subscription->nextPayment();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1127
msgid ""
"Both of these methods will return an instance of `Laravel\\Paddle\\Payment`; "
"however, `nextPayment` will return `null` when the billing cycle has ended "
"(such as when a subscription has been cancelled):"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1129
#, no-wrap
msgid ""
"    Next payment: {{ $nextPayment->amount() }} due on {{ "
"$nextPayment->date()->format('d/m/Y') }}\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1131
#, no-wrap
msgid "<a name=\"handling-failed-payments\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/cashier-paddle.md:1131
#, no-wrap
msgid "Handling Failed Payments"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1134
msgid ""
"Subscription payments fail for various reasons, such as expired cards or a "
"card having insufficient funds. When this happens, we recommend that you let "
"Paddle handle payment failures for you. Specifically, you may [setup "
"Paddle's automatic billing "
"emails](https://vendors.paddle.com/subscription-settings) in your Paddle "
"dashboard."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1136
msgid ""
"Alternatively, you can perform more precise customization by catching the "
"[`subscription_payment_failed`](https://developer.paddle.com/webhook-reference/subscription-alerts/subscription-payment-failed) "
"webhook and enabling the \"Subscription Payment Failed\" option in the "
"Webhook settings of your Paddle dashboard:"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1156
#, no-wrap
msgid ""
"    class WebhookController extends CashierController\n"
"    {\n"
"        /**\n"
"         * Handle subscription payment failed.\n"
"         *\n"
"         * @param  array  $payload\n"
"         * @return void\n"
"         */\n"
"        public function handleSubscriptionPaymentFailed($payload)\n"
"        {\n"
"            // Handle the failed subscription payment...\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1158
#, no-wrap
msgid "<a name=\"testing\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/cashier-paddle.md:1158
#, no-wrap
msgid "Testing"
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1161
msgid ""
"While testing, you should manually test your billing flow to make sure your "
"integration works as expected."
msgstr ""

#. type: Plain text
#: docs/8.x/cashier-paddle.md:1162
msgid ""
"For automated tests, including those executed within a CI environment, you "
"may use [Laravel's HTTP Client](/docs//{{version}}/http-client#testing) to "
"fake HTTP calls made to Paddle. Although this does not test the actual "
"responses from Paddle, it does provide a way to test your application "
"without actually calling Paddle's API."
msgstr ""
