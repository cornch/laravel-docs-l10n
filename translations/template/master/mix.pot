# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Taylor Otwell
# This file is distributed under the same license as the Laravel Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2021-04-27 11:56+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title #
#: docs/master/mix.md:1
#, no-wrap
msgid "Compiling Assets (Mix)"
msgstr ""

#. type: Bullet: '- '
#: docs/master/mix.md:21
msgid "[Introduction](#introduction)"
msgstr ""

#. type: Bullet: '- '
#: docs/master/mix.md:21
msgid "[Installation & Setup](#installation)"
msgstr ""

#. type: Bullet: '- '
#: docs/master/mix.md:21
msgid "[Running Mix](#running-mix)"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:21
#, no-wrap
msgid ""
"- [Working With Stylesheets](#working-with-stylesheets)\n"
"    - [Tailwind CSS](#tailwindcss)\n"
"    - [PostCSS](#postcss)\n"
"    - [Sass](#sass)\n"
"    - [URL Processing](#url-processing)\n"
"    - [Source Maps](#css-source-maps)\n"
"- [Working With JavaScript](#working-with-scripts)\n"
"    - [Vue](#vue)\n"
"    - [React](#react)\n"
"    - [Vendor Extraction](#vendor-extraction)\n"
"    - [Custom Webpack Configuration](#custom-webpack-configuration)\n"
"- [Versioning / Cache Busting](#versioning-and-cache-busting)\n"
"- [Browsersync Reloading](#browsersync-reloading)\n"
"- [Environment Variables](#environment-variables)\n"
"- [Notifications](#notifications)\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:23
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/mix.md:23
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:26
msgid ""
"[Laravel Mix](https://github.com/JeffreyWay/laravel-mix), a package "
"developed by [Laracasts](https://laracasts.com) creator Jeffrey Way, "
"provides a fluent API for defining [webpack](https://webpack.js.org) build "
"steps for your Laravel application using several common CSS and JavaScript "
"pre-processors."
msgstr ""

#. type: Plain text
#: docs/master/mix.md:28
msgid ""
"In other words, Mix makes it a cinch to compile and minify your "
"application's CSS and JavaScript files. Through simple method chaining, you "
"can fluently define your asset pipeline. For example:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:31
#, no-wrap
msgid ""
"    mix.js('resources/js/app.js', 'public/js')\n"
"        .postCss('resources/css/app.css', 'public/css');\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:33
msgid ""
"If you've ever been confused and overwhelmed about getting started with "
"webpack and asset compilation, you will love Laravel Mix. However, you are "
"not required to use it while developing your application; you are free to "
"use any asset pipeline tool you wish, or even none at all."
msgstr ""

#. type: Plain text
#: docs/master/mix.md:35
#, no-wrap
msgid ""
"> {tip} If you need a head start building your application with Laravel and "
"[Tailwind CSS](https://tailwindcss.com), check out one of our [application "
"starter kits](/docs/{{version}}/starter-kits).\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:37
#, no-wrap
msgid "<a name=\"installation\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/mix.md:37
#, no-wrap
msgid "Installation & Setup"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:40
#, no-wrap
msgid "<a name=\"installing-node\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/mix.md:40
#, no-wrap
msgid "Installing Node"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:43
msgid ""
"Before running Mix, you must first ensure that Node.js and NPM are installed "
"on your machine:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:46
#, no-wrap
msgid ""
"    node -v\n"
"    npm -v\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:48
msgid ""
"You can easily install the latest version of Node and NPM using simple "
"graphical installers from [the official Node "
"website](https://nodejs.org/en/download/). Or, if you are using [Laravel "
"Sail](/docs/{{version}}/sail), you may invoke Node and NPM through Sail:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:51
#, no-wrap
msgid ""
"    ./sail node -v\n"
"    ./sail npm -v\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:53
#, no-wrap
msgid "<a name=\"installing-laravel-mix\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/mix.md:53
#, no-wrap
msgid "Installing Laravel Mix"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:56
msgid ""
"The only remaining step is to install Laravel Mix. Within a fresh "
"installation of Laravel, you'll find a `package.json` file in the root of "
"your directory structure. The default `package.json` file already includes "
"everything you need to get started using Laravel Mix. Think of this file "
"like your `composer.json` file, except it defines Node dependencies instead "
"of PHP dependencies. You may install the dependencies it references by "
"running:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:58 docs/master/mix.md:92
#, no-wrap
msgid "    npm install\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:60
#, no-wrap
msgid "<a name=\"running-mix\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/mix.md:60
#, no-wrap
msgid "Running Mix"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:63
msgid ""
"Mix is a configuration layer on top of [webpack](https://webpack.js.org), so "
"to run your Mix tasks you only need to execute one of the NPM scripts that "
"are included in the default Laravel `package.json` file. When you run the "
"`dev` or `production` scripts, all of your application's CSS and JavaScript "
"assets will be compiled and placed in your application's `public` directory:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:66
#, no-wrap
msgid ""
"    // Run all Mix tasks...\n"
"    npm run dev\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:69
#, no-wrap
msgid ""
"    // Run all Mix tasks and minify output...\n"
"    npm run prod\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:71
#, no-wrap
msgid "<a name=\"watching-assets-for-changes\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/mix.md:71
#, no-wrap
msgid "Watching Assets For Changes"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:74
msgid ""
"The `npm run watch` command will continue running in your terminal and watch "
"all relevant CSS and JavaScript files for changes. Webpack will "
"automatically recompile your assets when it detects a change to one of these "
"files:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:76
#, no-wrap
msgid "    npm run watch\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:78
msgid ""
"Webpack may not be able to detect your file changes in certain local "
"development environments. If this is the case on your system, consider using "
"the `watch-poll` command:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:80
#, no-wrap
msgid "    npm run watch-poll\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:82
#, no-wrap
msgid "<a name=\"working-with-stylesheets\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/mix.md:82
#, no-wrap
msgid "Working With Stylesheets"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:85
msgid ""
"Your application's `webpack.mix.js` file is your entry point for all asset "
"compilation. Think of it as a light configuration wrapper around "
"[webpack](https://webpack.js.org). Mix tasks can be chained together to "
"define exactly how your assets should be compiled."
msgstr ""

#. type: Plain text
#: docs/master/mix.md:87
#, no-wrap
msgid "<a name=\"tailwindcss\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/mix.md:87
#, no-wrap
msgid "Tailwind CSS"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:90
msgid ""
"[Tailwind CSS](https://tailwindcss.com) is a modern, utility-first framework "
"for building amazing sites without ever leaving your HTML. Let's dig into "
"how to start using it in a Laravel project with Laravel Mix. First, we "
"should install Tailwind using NPM and generate our Tailwind configuration "
"file:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:94
#, no-wrap
msgid "    npm install -D tailwindcss\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:96
#, no-wrap
msgid "    npx tailwindcss init\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:98
msgid ""
"The `init` command will generate a `tailwind.config.js` file. Within this "
"file, you may configure the paths to all of your application's templates and "
"JavaScript so that Tailwind can tree-shake unused styles when optimizing "
"your CSS for production:"
msgstr ""

#. type: Code fence info string
#: docs/master/mix.md:99 docs/master/mix.md:118 docs/master/mix.md:339 docs/master/mix.md:345
#, no-wrap
msgid "js"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:99
#, no-wrap
msgid ""
"purge: [\n"
"    './storage/framework/views/*.php',\n"
"    './resources/**/*.blade.php',\n"
"    './resources/**/*.js',\n"
"    './resources/**/*.vue',\n"
"],\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:109
msgid ""
"Next, you should add each of Tailwind's \"layers\" to your application's "
"`resources/css/app.css` file:"
msgstr ""

#. type: Code fence info string
#: docs/master/mix.md:110
#, no-wrap
msgid "css"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:110
#, no-wrap
msgid ""
"@tailwind base;\n"
"@tailwind components;\n"
"@tailwind utilities;\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:117
msgid ""
"Once you have configured Tailwind's layers, you are ready to update your "
"application's `webpack.mix.js` file to compile your Tailwind powered CSS:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:118
#, no-wrap
msgid ""
"mix.js('resources/js/app.js', 'public/js')\n"
"    .postCss('resources/css/app.css', 'public/css', [\n"
"        require('tailwindcss'),\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:126
msgid ""
"Finally, you should reference your stylesheet in your application's primary "
"layout template. Many applications choose to store this template at "
"`resources/views/layouts/app.blade.php`. In addition, ensure you add the "
"responsive viewport `meta` tag if it's not already present:"
msgstr ""

#. type: Code fence info string
#: docs/master/mix.md:127 docs/master/mix.md:234 docs/master/mix.md:252
#, no-wrap
msgid "html"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:127
#, no-wrap
msgid ""
"<head>\n"
"    <meta charset=\"UTF-8\" />\n"
"    <meta name=\"viewport\" content=\"width=device-width, "
"initial-scale=1.0\" />\n"
"    <link href=\"/css/app.css\" rel=\"stylesheet\">\n"
"</head>\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:136
#, no-wrap
msgid "<a name=\"postcss\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/mix.md:136
#, no-wrap
msgid "PostCSS"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:139
msgid ""
"[PostCSS](https://postcss.org/), a powerful tool for transforming your CSS, "
"is included with Laravel Mix out of the box. By default, Mix leverages the "
"popular [Autoprefixer](https://github.com/postcss/autoprefixer) plugin to "
"automatically apply all necessary CSS3 vendor prefixes. However, you're free "
"to add any additional plugins that are appropriate for your application."
msgstr ""

#. type: Plain text
#: docs/master/mix.md:141
msgid ""
"First, install the desired plugin through NPM and include it in your array "
"of plugins when calling Mix's `postCss` method. The `postCss` method accepts "
"the path to your CSS file as its first argument and the directory where the "
"compiled file should be placed as its second argument:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:145
#, no-wrap
msgid ""
"    mix.postCss('resources/css/app.css', 'public/css', [\n"
"        require('postcss-custom-properties')\n"
"    ]);\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:147
msgid ""
"Or, you may execute `postCss` with no additional plugins in order to achieve "
"simple CSS compilation and minification:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:149
#, no-wrap
msgid "    mix.postCss('resources/css/app.css', 'public/css');\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:151
#, no-wrap
msgid "<a name=\"sass\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/mix.md:151
#, no-wrap
msgid "Sass"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:154
msgid ""
"The `sass` method allows you to compile [Sass](https://sass-lang.com/) into "
"CSS that can be understood by web browsers. The `sass` method accepts the "
"path to your Sass file as its first argument and the directory where the "
"compiled file should be placed as its second argument:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:156
#, no-wrap
msgid "    mix.sass('resources/sass/app.scss', 'public/css');\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:158
msgid ""
"You may compile multiple Sass files into their own respective CSS files and "
"even customize the output directory of the resulting CSS by calling the "
"`sass` method multiple times:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:161
#, no-wrap
msgid ""
"    mix.sass('resources/sass/app.sass', 'public/css')\n"
"        .sass('resources/sass/admin.sass', 'public/css/admin');\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:163
#, no-wrap
msgid "<a name=\"url-processing\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/mix.md:163
#, no-wrap
msgid "URL Processing"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:166
msgid ""
"Because Laravel Mix is built on top of webpack, it's important to understand "
"a few webpack concepts. For CSS compilation, webpack will rewrite and "
"optimize any `url()` calls within your stylesheets. While this might "
"initially sound strange, it's an incredibly powerful piece of "
"functionality. Imagine that we want to compile Sass that includes a relative "
"URL to an image:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:170
#, no-wrap
msgid ""
"    .example {\n"
"        background: url('../images/example.png');\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:172
#, no-wrap
msgid ""
"> {note} Absolute paths for any given `url()` will be excluded from "
"URL-rewriting. For example, `url('/images/thing.png')` or "
"`url('http://example.com/images/thing.png')` won't be modified.\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:174
msgid ""
"By default, Laravel Mix and webpack will find `example.png`, copy it to your "
"`public/images` folder, and then rewrite the `url()` within your generated "
"stylesheet. As such, your compiled CSS will be:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:178
#, no-wrap
msgid ""
"    .example {\n"
"        background: "
"url(/images/example.png?d41d8cd98f00b204e9800998ecf8427e);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:180
msgid ""
"As useful as this feature may be, your existing folder structure may already "
"be configured in a way you like. If this is the case, you may disable "
"`url()` rewriting like so:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:184
#, no-wrap
msgid ""
"    mix.sass('resources/sass/app.scss', 'public/css').options({\n"
"        processCssUrls: false\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:186
msgid ""
"With this addition to your `webpack.mix.js` file, Mix will no longer match "
"any `url()` or copy assets to your public directory. In other words, the "
"compiled CSS will look just like how you originally typed it:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:190
#, no-wrap
msgid ""
"    .example {\n"
"        background: url(\"../images/thing.png\");\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:192
#, no-wrap
msgid "<a name=\"css-source-maps\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/mix.md:192
#, no-wrap
msgid "Source Maps"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:195
msgid ""
"Though disabled by default, source maps may be activated by calling the "
"`mix.sourceMaps()` method in your `webpack.mix.js` file. Though it comes "
"with a compile/performance cost, this will provide extra debugging "
"information to your browser's developer tools when using compiled assets:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:198
#, no-wrap
msgid ""
"    mix.js('resources/js/app.js', 'public/js')\n"
"        .sourceMaps();\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:200
#, no-wrap
msgid "<a name=\"style-of-source-mapping\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/mix.md:200
#, no-wrap
msgid "Style Of Source Mapping"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:203
msgid ""
"Webpack offers a variety of [source mapping "
"styles](https://webpack.js.org/configuration/devtool/#devtool). By default, "
"Mix's source mapping style is set to `eval-source-map`, which provides a "
"fast rebuild time. If you want to change the mapping style, you may do so "
"using the `sourceMaps` method:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:205
#, no-wrap
msgid "    let productionSourceMaps = false;\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:208
#, no-wrap
msgid ""
"    mix.js('resources/js/app.js', 'public/js')\n"
"        .sourceMaps(productionSourceMaps, 'source-map');\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:210
#, no-wrap
msgid "<a name=\"working-with-scripts\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/mix.md:210
#, no-wrap
msgid "Working With JavaScript"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:213
msgid ""
"Mix provides several features to help you work with your JavaScript files, "
"such as compiling modern ECMAScript, module bundling, minification, and "
"concatenating plain JavaScript files. Even better, this all works "
"seamlessly, without requiring an ounce of custom configuration:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:215 docs/master/mix.md:316
#, no-wrap
msgid "    mix.js('resources/js/app.js', 'public/js');\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:217
msgid "With this single line of code, you may now take advantage of:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:223
#, no-wrap
msgid ""
"<div class=\"content-list\" markdown=\"1\">\n"
"- The latest EcmaScript syntax.\n"
"- Modules\n"
"- Minification for production environments.\n"
"</div>\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:225
#, no-wrap
msgid "<a name=\"vue\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/mix.md:225
#, no-wrap
msgid "Vue"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:228
msgid ""
"Mix will automatically install the Babel plugins necessary for Vue "
"single-file component compilation support when using the `vue` method. No "
"further configuration is required:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:231
#, no-wrap
msgid ""
"    mix.js('resources/js/app.js', 'public/js')\n"
"       .vue();\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:233
msgid ""
"Once your JavaScript has been compiled, you can reference it in your "
"application:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:234 docs/master/mix.md:252
#, no-wrap
msgid ""
"<head>\n"
"    <!-- ... -->\n"
"\n"
"    <script src=\"/js/app.js\"></script>\n"
"</head>\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:243
#, no-wrap
msgid "<a name=\"react\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/mix.md:243
#, no-wrap
msgid "React"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:246
msgid ""
"Mix can automatically install the Babel plugins necessary for React "
"support. To get started, add a call to the `react` method:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:249
#, no-wrap
msgid ""
"    mix.js('resources/js/app.jsx', 'public/js')\n"
"       .react();\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:251
msgid ""
"Behind the scenes, Mix will download and include the appropriate "
"`babel-preset-react` Babel plugin. Once your JavaScript has been compiled, "
"you can reference it in your application:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:261
#, no-wrap
msgid "<a name=\"vendor-extraction\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/mix.md:261
#, no-wrap
msgid "Vendor Extraction"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:264
msgid ""
"One potential downside to bundling all of your application-specific "
"JavaScript with your vendor libraries such as React and Vue is that it makes "
"long-term caching more difficult. For example, a single update to your "
"application code will force the browser to re-download all of your vendor "
"libraries even if they haven't changed."
msgstr ""

#. type: Plain text
#: docs/master/mix.md:266
msgid ""
"If you intend to make frequent updates to your application's JavaScript, you "
"should consider extracting all of your vendor libraries into their own "
"file. This way, a change to your application code will not affect the "
"caching of your large `vendor.js` file. Mix's `extract` method makes this a "
"breeze:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:269
#, no-wrap
msgid ""
"    mix.js('resources/js/app.js', 'public/js')\n"
"        .extract(['vue'])\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:271
msgid ""
"The `extract` method accepts an array of all libraries or modules that you "
"wish to extract into a `vendor.js` file. Using the snippet above as an "
"example, Mix will generate the following files:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:277
#, no-wrap
msgid ""
"<div class=\"content-list\" markdown=\"1\">\n"
"- `public/js/manifest.js`: *The Webpack manifest runtime*\n"
"- `public/js/vendor.js`: *Your vendor libraries*\n"
"- `public/js/app.js`: *Your application code*\n"
"</div>\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:279
msgid "To avoid JavaScript errors, be sure to load these files in the proper order:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:283
#, no-wrap
msgid ""
"    <script src=\"/js/manifest.js\"></script>\n"
"    <script src=\"/js/vendor.js\"></script>\n"
"    <script src=\"/js/app.js\"></script>\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:285
#, no-wrap
msgid "<a name=\"custom-webpack-configuration\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/mix.md:285
#, no-wrap
msgid "Custom Webpack Configuration"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:288
msgid ""
"Occasionally, you may need to manually modify the underlying Webpack "
"configuration. For example, you might have a special loader or plugin that "
"needs to be referenced."
msgstr ""

#. type: Plain text
#: docs/master/mix.md:290
msgid ""
"Mix provides a useful `webpackConfig` method that allows you to merge any "
"short Webpack configuration overrides. This is particularly appealing, as it "
"doesn't require you to copy and maintain your own copy of the "
"`webpack.config.js` file. The `webpackConfig` method accepts an object, "
"which should contain any [Webpack-specific "
"configuration](https://webpack.js.org/configuration/) that you wish to "
"apply."
msgstr ""

#. type: Plain text
#: docs/master/mix.md:298
#, no-wrap
msgid ""
"    mix.webpackConfig({\n"
"        resolve: {\n"
"            modules: [\n"
"                path.resolve(__dirname, "
"'vendor/laravel/spark/resources/assets/js')\n"
"            ]\n"
"        }\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:300
#, no-wrap
msgid "<a name=\"versioning-and-cache-busting\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/mix.md:300
#, no-wrap
msgid "Versioning / Cache Busting"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:303
msgid ""
"Many developers suffix their compiled assets with a timestamp or unique "
"token to force browsers to load the fresh assets instead of serving stale "
"copies of the code. Mix can automatically handle this for you using the "
"`version` method."
msgstr ""

#. type: Plain text
#: docs/master/mix.md:305
msgid ""
"The `version` method will append a unique hash to the filenames of all "
"compiled files, allowing for more convenient cache busting:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:308
#, no-wrap
msgid ""
"    mix.js('resources/js/app.js', 'public/js')\n"
"        .version();\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:310
msgid ""
"After generating the versioned file, you won't know the exact filename. So, "
"you should use Laravel's global `mix` function within your "
"[views](/docs/{{version}}/views) to load the appropriately hashed asset. The "
"`mix` function will automatically determine the current name of the hashed "
"file:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:312
#, no-wrap
msgid "    <script src=\"{{ mix('/js/app.js') }}\"></script>\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:314
msgid ""
"Because versioned files are usually unnecessary in development, you may "
"instruct the versioning process to only run during `npm run prod`:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:320
#, no-wrap
msgid ""
"    if (mix.inProduction()) {\n"
"        mix.version();\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:322
#, no-wrap
msgid "<a name=\"custom-mix-base-urls\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/mix.md:322
#, no-wrap
msgid "Custom Mix Base URLs"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:325
msgid ""
"If your Mix compiled assets are deployed to a CDN separate from your "
"application, you will need to change the base URL generated by the `mix` "
"function. You may do so by adding a `mix_url` configuration option to your "
"application's `config/app.php` configuration file:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:327
#, no-wrap
msgid "    'mix_url' => env('MIX_ASSET_URL', null)\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:329
msgid ""
"After configuring the Mix URL, The `mix` function will prefix the configured "
"URL when generating URLs to assets:"
msgstr ""

#. type: Code fence info string
#: docs/master/mix.md:330
#, no-wrap
msgid "bash"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:330
#, no-wrap
msgid "https://cdn.example.com/js/app.js?id=1964becbdd96414518cd\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:335
#, no-wrap
msgid "<a name=\"browsersync-reloading\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/mix.md:335
#, no-wrap
msgid "Browsersync Reloading"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:338
msgid ""
"[BrowserSync](https://browsersync.io/) can automatically monitor your files "
"for changes, and inject your changes into the browser without requiring a "
"manual refresh. You may enable support for this by calling the "
"`mix.browserSync()` method:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:339
#, no-wrap
msgid "mix.browserSync('laravel.test');\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:344
msgid ""
"[BrowserSync options](https://browsersync.io/docs/options) may be specified "
"by passing a JavaScript object to the `browserSync` method:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:345
#, no-wrap
msgid ""
"mix.browserSync({\n"
"    proxy: 'laravel.test'\n"
"});\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:352
msgid ""
"Next, start webpack's development server using the `npm run watch` "
"command. Now, when you modify a script or PHP file you can watch as the "
"browser instantly refreshes the page to reflect your changes."
msgstr ""

#. type: Plain text
#: docs/master/mix.md:354
#, no-wrap
msgid "<a name=\"environment-variables\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/mix.md:354
#, no-wrap
msgid "Environment Variables"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:357
msgid ""
"You may inject environment variables into your `webpack.mix.js` script by "
"prefixing one of the environment variables in your `.env` file with `MIX_`:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:359
#, no-wrap
msgid "    MIX_SENTRY_DSN_PUBLIC=http://example.com\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:361
msgid ""
"After the variable has been defined in your `.env` file, you may access it "
"via the `process.env` object. However, you will need to restart the task if "
"the environment variable's value changes while the task is running:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:363
#, no-wrap
msgid "    process.env.MIX_SENTRY_DSN_PUBLIC\n"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:365
#, no-wrap
msgid "<a name=\"notifications\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/mix.md:365
#, no-wrap
msgid "Notifications"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:368
msgid ""
"When available, Mix will automatically display OS notifications when "
"compiling, giving you instant feedback as to whether the compilation was "
"successful or not. However, there may be instances when you would prefer to "
"disable these notifications. One such example might be triggering Mix on "
"your production server. Notifications may be deactivated using the "
"`disableNotifications` method:"
msgstr ""

#. type: Plain text
#: docs/master/mix.md:369
#, no-wrap
msgid "    mix.disableNotifications();\n"
msgstr ""
