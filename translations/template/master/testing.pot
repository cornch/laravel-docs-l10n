# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Taylor Otwell
# This file is distributed under the same license as the Laravel Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2021-04-05 10:08+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title #
#: docs/master/testing.md:1
#, no-wrap
msgid "Testing: Getting Started"
msgstr ""

#. type: Bullet: '- '
#: docs/master/testing.md:8
msgid "[Introduction](#introduction)"
msgstr ""

#. type: Bullet: '- '
#: docs/master/testing.md:8
msgid "[Environment](#environment)"
msgstr ""

#. type: Bullet: '- '
#: docs/master/testing.md:8
msgid "[Creating Tests](#creating-tests)"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:8
#, no-wrap
msgid ""
"- [Running Tests](#running-tests)\n"
"    - [Running Tests In Parallel](#running-tests-in-parallel)\n"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:10
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/testing.md:10
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:13
msgid ""
"Laravel is built with testing in mind. In fact, support for testing with "
"PHPUnit is included out of the box and a `phpunit.xml` file is already set "
"up for your application. The framework also ships with convenient helper "
"methods that allow you to expressively test your applications."
msgstr ""

#. type: Plain text
#: docs/master/testing.md:15
msgid ""
"By default, your application's `tests` directory contains two directories: "
"`Feature` and `Unit`. Unit tests are tests that focus on a very small, "
"isolated portion of your code. In fact, most unit tests probably focus on a "
"single method. Tests within your \"Unit\" test directory do not boot your "
"Laravel application and therefore are unable to access your application's "
"database or other framework services."
msgstr ""

#. type: Plain text
#: docs/master/testing.md:17
msgid ""
"Feature tests may test a larger portion of your code, including how several "
"objects interact with each other or even a full HTTP request to a JSON "
"endpoint. **Generally, most of your tests should be feature tests. These "
"types of tests provide the most confidence that your system as a whole is "
"functioning as intended.**"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:19
msgid ""
"An `ExampleTest.php` file is provided in both the `Feature` and `Unit` test "
"directories. After installing a new Laravel application, execute the "
"`vendor/bin/phpunit` or `php artisan test` commands to run your tests."
msgstr ""

#. type: Plain text
#: docs/master/testing.md:21
#, no-wrap
msgid "<a name=\"environment\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/testing.md:21
#, no-wrap
msgid "Environment"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:24
msgid ""
"When running tests, Laravel will automatically set the [configuration "
"environment](/docs/{{version}}/configuration#environment-configuration) to "
"`testing` because of the environment variables defined in the `phpunit.xml` "
"file. Laravel also automatically configures the session and cache to the "
"`array` driver while testing, meaning no session or cache data will be "
"persisted while testing."
msgstr ""

#. type: Plain text
#: docs/master/testing.md:26
msgid ""
"You are free to define other testing environment configuration values as "
"necessary. The `testing` environment variables may be configured in your "
"application's `phpunit.xml` file, but make sure to clear your configuration "
"cache using the `config:clear` Artisan command before running your tests!"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:28
#, no-wrap
msgid "<a name=\"the-env-testing-environment-file\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/testing.md:28
#, no-wrap
msgid "The `.env.testing` Environment File"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:31
msgid ""
"In addition, you may create a `.env.testing` file in the root of your "
"project. This file will be used instead of the `.env` file when running "
"PHPUnit tests or executing Artisan commands with the `--env=testing` option."
msgstr ""

#. type: Plain text
#: docs/master/testing.md:33
#, no-wrap
msgid "<a name=\"the-creates-application-trait\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/testing.md:33
#, no-wrap
msgid "The `CreatesApplication` Trait"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:36
msgid ""
"Laravel includes a `CreatesApplication` trait that is applied to your "
"application's base `TestCase` class. This trait contains a "
"`createApplication` method that bootstraps the Laravel application before "
"running your tests. It's important that you leave this trait at its original "
"location as some features, such as Laravel's parallel testing feature, "
"depend on it."
msgstr ""

#. type: Plain text
#: docs/master/testing.md:38
#, no-wrap
msgid "<a name=\"creating-tests\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/testing.md:38
#, no-wrap
msgid "Creating Tests"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:41
msgid ""
"To create a new test case, use the `make:test` Artisan command. By default, "
"tests will be placed in the `tests/Feature` directory:"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:43
#, no-wrap
msgid "    php artisan make:test UserTest\n"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:45
msgid ""
"If you would like to create a test within the `tests/Unit` directory, you "
"may use the `--unit` option when executing the `make:test` command:"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:47
#, no-wrap
msgid "    php artisan make:test UserTest --unit\n"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:49
#, no-wrap
msgid ""
"> {tip} Test stubs may be customized using [stub "
"publishing](/docs/{{version}}/artisan#stub-customization)\n"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:51
msgid ""
"Once the test has been generated, you may define test methods as you "
"normally would using [PHPUnit](https://phpunit.de). To run your tests, "
"execute the `vendor/bin/phpunit` or `php artisan test` command from your "
"terminal:"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:53 docs/master/testing.md:117
#, no-wrap
msgid "    <?php\n"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:55
#, no-wrap
msgid "    namespace Tests\\Unit;\n"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:57
#, no-wrap
msgid "    use PHPUnit\\Framework\\TestCase;\n"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:70
#, no-wrap
msgid ""
"    class ExampleTest extends TestCase\n"
"    {\n"
"        /**\n"
"         * A basic test example.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function test_basic_test()\n"
"        {\n"
"            $this->assertTrue(true);\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:72
#, no-wrap
msgid ""
"> {note} If you define your own `setUp` / `tearDown` methods within a test "
"class, be sure to call the respective `parent::setUp()` / "
"`parent::tearDown()` methods on the parent class.\n"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:74
#, no-wrap
msgid "<a name=\"running-tests\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/testing.md:74
#, no-wrap
msgid "Running Tests"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:77
msgid ""
"As mentioned previously, once you've written tests, you may run them using "
"`phpunit`:"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:79
#, no-wrap
msgid "    ./vendor/bin/phpunit\n"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:81
msgid ""
"In addition to the `phpunit` command, you may use the `test` Artisan command "
"to run your tests. The Artisan test runner provides verbose test reports in "
"order to ease development and debugging:"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:83
#, no-wrap
msgid "    php artisan test\n"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:85
msgid ""
"Any arguments that can be passed to the `phpunit` command may also be passed "
"to the Artisan `test` command:"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:87
#, no-wrap
msgid "    php artisan test --testsuite=Feature --stop-on-failure\n"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:90
#, no-wrap
msgid "<a name=\"running-tests-in-parallel\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/testing.md:90
#, no-wrap
msgid "Running Tests In Parallel"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:93
msgid ""
"By default, Laravel and PHPUnit execute your tests sequentially within a "
"single process. However, you may greatly reduce the amount of time it takes "
"to run your tests by running tests simultaneously across multiple "
"processes. To get started, include the `--parallel` option when executing "
"the `test` Artisan command:"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:95
#, no-wrap
msgid "    php artisan test --parallel\n"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:97
msgid ""
"By default, Laravel will create as many processes as there are available CPU "
"cores on your machine. However, you may adjust the number of processes using "
"the `--processes` option:"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:99
#, no-wrap
msgid "    php artisan test --parallel --processes=4\n"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:101
#, no-wrap
msgid "<a name=\"parallel-testing-and-databases\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/testing.md:101
#, no-wrap
msgid "Parallel Testing & Databases"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:104
msgid ""
"Laravel automatically handles creating and migrating a test database for "
"each parallel process that is running your tests. The test databases will be "
"suffixed with a process token which is unique per process. For example, if "
"you have two parallel test processes, Laravel will create and use "
"`your_db_test_1` and `your_db_test_2` test databases."
msgstr ""

#. type: Plain text
#: docs/master/testing.md:106
msgid ""
"By default, test databases persist between calls to the `test` Artisan "
"command so that they can be used again by subsequent `test` "
"invocations. However, you may re-create them using the "
"`--recreate-databases` option:"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:108
#, no-wrap
msgid "    php artisan test --parallel --recreate-databases\n"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:110
#, no-wrap
msgid "<a name=\"parallel-testing-hooks\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/testing.md:110
#, no-wrap
msgid "Parallel Testing Hooks"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:113
msgid ""
"Occasionally, you may need to prepare certain resources used by your "
"application's tests so they may be safely used by multiple test processes."
msgstr ""

#. type: Plain text
#: docs/master/testing.md:115
msgid ""
"Using the `ParallelTesting` facade, you may specify code to be executed on "
"the `setUp` and `tearDown` of a process or test case. The given closures "
"receive the `$token` and `$testCase` variables that contain the process "
"token and the current test case, respectively:"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:119
#, no-wrap
msgid "    namespace App\\Providers;\n"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:122
#, no-wrap
msgid ""
"    use Illuminate\\Support\\Facades\\ParallelTesting;\n"
"    use Illuminate\\Support\\ServiceProvider;\n"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:135
#, no-wrap
msgid ""
"    class AppServiceProvider extends ServiceProvider\n"
"    {\n"
"        /**\n"
"         * Bootstrap any application services.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function boot()\n"
"        {\n"
"            ParallelTesting::setUpProcess(function ($token) {\n"
"                // ..\n"
"            });\n"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:139
#, no-wrap
msgid ""
"            ParallelTesting::setUpTestCase(function ($token, $testCase) {\n"
"                // ..\n"
"            });\n"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:143
#, no-wrap
msgid ""
"            ParallelTesting::tearDownTestCase(function ($token, $testCase) "
"{\n"
"                // ..\n"
"            });\n"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:149
#, no-wrap
msgid ""
"            ParallelTesting::tearDownProcess(function ($token) {\n"
"                // ..\n"
"            });\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:151
msgid ""
"If you would like to access to current process token from any other place in "
"your application's test code, you may use the `token` method:"
msgstr ""

#. type: Plain text
#: docs/master/testing.md:152
#, no-wrap
msgid "    $token = ParallelTesting::token();\n"
msgstr ""
