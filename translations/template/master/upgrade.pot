# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Taylor Otwell
# This file is distributed under the same license as the Laravel Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2022-01-21 20:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title #
#: docs/master/upgrade.md:1
#, no-wrap
msgid "Upgrade Guide"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:4
msgid "- [Upgrading To 9.0 From 8.x](#upgrade-9.0)"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:6
#, no-wrap
msgid "<a name=\"high-impact-changes\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/upgrade.md:6
#, no-wrap
msgid "High Impact Changes"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:13
#, no-wrap
msgid ""
"<div class=\"content-list\" markdown=\"1\">\n"
"- [Updating Dependencies](#updating-dependencies)\n"
"- [Flysystem 3.x](#flysystem-3)\n"
"- [Symfony Mailer](#symfony-mailer)\n"
"</div>\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:15
#, no-wrap
msgid "<a name=\"medium-impact-changes\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/upgrade.md:15
#, no-wrap
msgid "Medium Impact Changes"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:29
#, no-wrap
msgid ""
"<div class=\"content-list\" markdown=\"1\">\n"
"- [Belongs To Many `firstOrNew`, `firstOrCreate`, and `updateOrCreate` "
"methods](#belongs-to-many-first-or-new)\n"
"- [Custom Casts & `null`](#custom-casts-and-null)\n"
"- [Default HTTP Client Timeout](#http-client-default-timeout)\n"
"- [PHP Return Types](#php-return-types)\n"
"- [Postgres \"Schema\" Configuration](#postgres-schema-configuration)\n"
"- [The `assertDeleted` Method](#the-assert-deleted-method)\n"
"- [The `lang` Directory](#the-lang-directory)\n"
"- [The `password` Rule](#the-password-rule)\n"
"- [The `when` / `unless` Methods](#when-and-unless-methods)\n"
"- [Unvalidated Array Keys](#unvalidated-array-keys)\n"
"</div>\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:31
#, no-wrap
msgid "<a name=\"upgrade-9.0\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/upgrade.md:31
#, no-wrap
msgid "Upgrading To 9.0 From 8.x"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:34
#, no-wrap
msgid "<a name=\"estimated-upgrade-time-10-minutes\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:34
#, no-wrap
msgid "Estimated Upgrade Time: 30 Minutes"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:37
#, no-wrap
msgid ""
"> {note} We attempt to document every possible breaking change. Since some "
"of these breaking changes are in obscure parts of the framework only a "
"portion of these changes may actually affect your application.\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:39
#, no-wrap
msgid "<a name=\"updating-dependencies\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/upgrade.md:39
#, no-wrap
msgid "Updating Dependencies"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:42 docs/master/upgrade.md:267 docs/master/upgrade.md:396
#, no-wrap
msgid "**Likelihood Of Impact: High**\n"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:43
#, no-wrap
msgid "PHP 8.0.2 Required"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:46
msgid "Laravel's minimum supported PHP version is now 8.0.2."
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:48
#, no-wrap
msgid "<a name=\"php-return-types\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:48
#, no-wrap
msgid "PHP Return Types"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:51
msgid ""
"PHP is beginning to transition to requiring return type definitions on PHP "
"methods such as `offsetGet`, `offsetSet`, etc. In light of this, Laravel 9 "
"has implemented these return types in its code base. Typically, this should "
"not affect user written code; however, if you are overriding one of these "
"methods by extending Laravel's core classes, you will need to add these "
"return types to your own application or package code:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:62
#, no-wrap
msgid ""
"<div class=\"content-list\" markdown=\"1\">\n"
"- `count(): int`\n"
"- `getIterator(): Traversable`\n"
"- `getSize(): int`\n"
"- `jsonSerialize(): array`\n"
"- `offsetExists($key): bool`\n"
"- `offsetGet($key): mixed`\n"
"- `offsetSet($key, $value): void`\n"
"- `offsetUnset($key): void`\n"
"</div>\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:64
msgid ""
"In addition, return types were added to methods implementing PHP's "
"`SessionHandlerInterface`. Again, it is unlikely that this change affects "
"your own application or package code:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:73
#, no-wrap
msgid ""
"<div class=\"content-list\" markdown=\"1\">\n"
"- `open($savePath, $sessionName): bool`\n"
"- `close(): bool`\n"
"- `read($sessionId): string|false`\n"
"- `write($sessionId, $data): bool`\n"
"- `destroy($sessionId): bool`\n"
"- `gc($lifetime): int`\n"
"</div>\n"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:74
#, no-wrap
msgid "Composer Dependencies"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:77
msgid ""
"You should update the following dependencies in your application's "
"`composer.json` file:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:82
#, no-wrap
msgid ""
"<div class=\"content-list\" markdown=\"1\">\n"
"- `laravel/framework` to `^9.0`\n"
"- `nunomaduro/collision` to `^6.0`\n"
"</div>\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:84
msgid ""
"In addition, replace `facade/ignition` with `\"spatie/laravel-ignition\": "
"\"^1.0\"` in your `composer.json` file."
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:86
msgid ""
"Finally, examine any other third-party packages consumed by your application "
"and verify you are using the proper version for Laravel 9 support."
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:88
#, no-wrap
msgid "<a name=\"application\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/upgrade.md:88
#, no-wrap
msgid "Application"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:91
#, no-wrap
msgid "<a name=\"the-application-contract\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:91
#, no-wrap
msgid "The `Application` Contract"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:94 docs/master/upgrade.md:102 docs/master/upgrade.md:114 docs/master/upgrade.md:122 docs/master/upgrade.md:216 docs/master/upgrade.md:228 docs/master/upgrade.md:240 docs/master/upgrade.md:260 docs/master/upgrade.md:533 docs/master/upgrade.md:539 docs/master/upgrade.md:551 docs/master/upgrade.md:570
#, no-wrap
msgid "**Likelihood Of Impact: Low**\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:96
msgid ""
"The `storagePath` method of the "
"`Illuminate\\Contracts\\Foundation\\Application` interface has been updated "
"to accept a `$path` argument. If you are implementing this interface you "
"should update your implementation accordingly:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:98
#, no-wrap
msgid "    public function storagePath($path = '');\n"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:99
#, no-wrap
msgid "Exception Handler `ignore` Method"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:104
msgid ""
"The exception handler's `ignore` method is now `public` instead of "
"`protected`. This method is not included in the default application "
"skeleton; however, if you have manually defined this method you should "
"update its visibility to `public`:"
msgstr ""

#. type: Code fence info string
#: docs/master/upgrade.md:105 docs/master/upgrade.md:125 docs/master/upgrade.md:143 docs/master/upgrade.md:165 docs/master/upgrade.md:197 docs/master/upgrade.md:205 docs/master/upgrade.md:219 docs/master/upgrade.md:231 docs/master/upgrade.md:243 docs/master/upgrade.md:299 docs/master/upgrade.md:316 docs/master/upgrade.md:359 docs/master/upgrade.md:369 docs/master/upgrade.md:542 docs/master/upgrade.md:573 docs/master/upgrade.md:595
#, no-wrap
msgid "php"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:105
#, no-wrap
msgid "public function ignore(string $class);\n"
msgstr ""

#. type: Title ###
#: docs/master/upgrade.md:109
#, no-wrap
msgid "Blade"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:111
#, no-wrap
msgid "Lazy Collections & The `$loop` Variable"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:116
msgid ""
"When iterating over a `LazyCollection` instance within a Blade template, the "
"`$loop` variable is no longer available, as accessing this variable causes "
"the entire `LazyCollection` to be loaded into memory, thus rendering the "
"usage of lazy collections pointless in this scenario."
msgstr ""

#. type: Title ###
#: docs/master/upgrade.md:117
#, no-wrap
msgid "Collections"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:119
#, no-wrap
msgid "The `Enumerable` Contract"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:124
msgid ""
"The `Illuminate\\Support\\Enumerable` contract now defines a `sole` "
"method. If you are manually implementing this interface, you should update "
"your implementation to reflect this new method:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:125
#, no-wrap
msgid "public function sole($key = null, $operator = null, $value = null);\n"
msgstr ""

#. type: Title ###
#: docs/master/upgrade.md:129
#, no-wrap
msgid "Container"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:131
#, no-wrap
msgid "The `Container` Contract"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:134 docs/master/upgrade.md:140 docs/master/upgrade.md:342 docs/master/upgrade.md:349
#, no-wrap
msgid "**Likelihood Of Impact: Very Low**\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:136
msgid ""
"The `Illuminate\\Contracts\\Container\\Container` contract has received two "
"method definitions: `scoped` and `scopedIf`. If you are manually "
"implementing this contract, you should update your implementation to reflect "
"these new methods."
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:137
#, no-wrap
msgid "The `ContextualBindingBuilder` Contract"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:142
msgid ""
"The `Illuminate\\Contracts\\Container\\ContextualBindingBuilder` contract "
"now defines a `giveConfig` method. If you are manually implementing this "
"interface, you should update your implementation to reflect this new method:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:143
#, no-wrap
msgid "public function giveConfig($key, $default = null);\n"
msgstr ""

#. type: Title ###
#: docs/master/upgrade.md:147
#, no-wrap
msgid "Database"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:150
#, no-wrap
msgid "<a name=\"postgres-schema-configuration\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:150
#, no-wrap
msgid "Postgres \"Schema\" Configuration"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:153 docs/master/upgrade.md:162 docs/master/upgrade.md:192 docs/master/upgrade.md:356 docs/master/upgrade.md:385 docs/master/upgrade.md:523 docs/master/upgrade.md:562 docs/master/upgrade.md:581 docs/master/upgrade.md:588
#, no-wrap
msgid "**Likelihood Of Impact: Medium**\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:155
msgid ""
"The `schema` configuration option used to configure Postgres connection "
"search paths in your application's `config/database.php` configuration file "
"should be renamed to `search_path`."
msgstr ""

#. type: Title ###
#: docs/master/upgrade.md:156
#, no-wrap
msgid "Eloquent"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:159
#, no-wrap
msgid "<a name=\"custom-casts-and-null\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:159
#, no-wrap
msgid "Custom Casts & `null`"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:164
msgid ""
"In previous releases of Laravel, the `set` method of custom cast classes was "
"not invoked if the cast attribute was being set to `null`. However, this "
"behavior was inconsistent with the Laravel documentation. In Laravel 9.x, "
"the `set` method of the cast class will be invoked with `null` as the "
"provided `$value` argument. Therefore, you should ensure your custom casts "
"are able to sufficiently handle this scenario:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:165
#, no-wrap
msgid ""
"/**\n"
" * Prepare the given value for storage.\n"
" *\n"
" * @param  \\Illuminate\\Database\\Eloquent\\Model  $model\n"
" * @param  string  $key\n"
" * @param  AddressModel  $value\n"
" * @param  array  $attributes\n"
" * @return array\n"
" */\n"
"public function set($model, $key, $value, $attributes)\n"
"{\n"
"    if (! $value instanceof AddressModel) {\n"
"        throw new InvalidArgumentException('The given value is not an "
"Address instance.');\n"
"    }\n"
"\n"
"    return [\n"
"        'address_line_one' => $value->lineOne,\n"
"        'address_line_two' => $value->lineTwo,\n"
"    ];\n"
"}\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:189
#, no-wrap
msgid "<a name=\"belongs-to-many-first-or-new\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:189
#, no-wrap
msgid "Belongs To Many `firstOrNew`, `firstOrCreate`, and `updateOrCreate` Methods"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:194
msgid ""
"The `belongsToMany` relationship's `firstOrNew`, `firstOrCreate`, and "
"`updateOrCreate` methods all accept an array of attributes as their first "
"argument. In previous releases of Laravel, this array of attributes was "
"compared against the \"pivot\" / intermediate table for existing records."
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:196
msgid ""
"However, this behavior was unexpected and typically unwanted. Instead, these "
"methods now compare the array of attributes against the table of the related "
"model:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:197
#, no-wrap
msgid ""
"$user->roles()->updateOrCreate([\n"
"    'name' => 'Administrator',\n"
"]);\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:204
msgid ""
"In addition, the `firstOrCreate` method now accepts a `$values` array as its "
"second argument. This array will be merged with the first argument to the "
"method (`$attributes`) when creating the related model if one does not "
"already exist. This changes makes this method consistent with the "
"`firstOrCreate` methods offered by other relationship types:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:205
#, no-wrap
msgid ""
"$user->roles()->firstOrCreate([\n"
"    'name' => 'Administrator',\n"
"], [\n"
"    'created_by' => $user->id,\n"
"]);\n"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:213
#, no-wrap
msgid "The `touch` Method"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:218
msgid ""
"The `touch` method now accepts an attribute to touch. If you were previously "
"overwriting this method, you should update your method signature to reflect "
"this new argument:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:219
#, no-wrap
msgid "public function touch($attribute = null);\n"
msgstr ""

#. type: Title ###
#: docs/master/upgrade.md:223
#, no-wrap
msgid "Encryption"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:225
#, no-wrap
msgid "The Encrypter Contract"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:230
msgid ""
"The `Illuminate\\Contracts\\Encryption\\Encrypter` contract now defines a "
"`getKey` method. If you are manually implementing this interface, you should "
"update your implementation accordingly:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:231
#, no-wrap
msgid "public function getKey();\n"
msgstr ""

#. type: Title ###
#: docs/master/upgrade.md:235
#, no-wrap
msgid "Facades"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:237
#, no-wrap
msgid "The `getFacadeAccessor` Method"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:242
msgid ""
"The `getFacadeAccessor` method must always return a container binding "
"key. In previous releases of Laravel, this method could return an object "
"instance; however, this behavior is no longer supported. If you have written "
"your own facades, you should ensure that this method returns a container "
"binding string:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:243
#, no-wrap
msgid ""
"/**\n"
" * Get the registered name of the component.\n"
" *\n"
" * @return string\n"
" */\n"
"protected static function getFacadeAccessor()\n"
"{\n"
"    return Example::class;\n"
"}\n"
msgstr ""

#. type: Title ###
#: docs/master/upgrade.md:255
#, no-wrap
msgid "Filesystem"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:257
#, no-wrap
msgid "The `FILESYSTEM_DRIVER` Environment Variable"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:262
msgid ""
"The `FILESYSTEM_DRIVER` environment variable has been renamed to "
"`FILESYSTEM_DISK` to more accurately reflect its usage. This change only "
"affects the application skeleton; however, you are welcome to update your "
"own application's environment variables to reflect this change if you wish."
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:264
#, no-wrap
msgid "<a name=\"flysystem-3\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/upgrade.md:264
#, no-wrap
msgid "Flysystem 3.x"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:269
msgid ""
"Laravel 9.x has migrated from "
"[Flysystem](https://flysystem.thephpleague.com/v2/docs/) 1.x to 3.x. Under "
"the hood, Flysystem powers all of the file manipulation methods provided by "
"the `Storage` facade. In light of this, some changes may be required within "
"your application; however, we have tried to make this transition as seamless "
"as possible."
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:270 docs/master/upgrade.md:399
#, no-wrap
msgid "Driver Prerequisites"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:273
msgid ""
"Before using the S3 or SFTP drivers, you will need to install the "
"appropriate package via the Composer package manager:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:276
msgid ""
"- Amazon S3: `composer require --with-all-dependencies "
"league/flysystem-aws-s3-v3 \"^3.0\"` - SFTP: `composer require "
"league/flysystem-sftp-v3 \"^3.0\"`"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:277
#, no-wrap
msgid "Overwriting Existing Files"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:280
msgid ""
"Write operations such as `put`, `write`, `writeStream` now overwrite "
"existing files by default. If you do not want to overwrite existing files, "
"you should manually check for the file's existence before performing the "
"write operation."
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:281
#, no-wrap
msgid "Reading Missing Files"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:284
msgid ""
"Attempting to read from a file that does not exist now returns `null`. In "
"previous releases of Laravel, an "
"`Illuminate\\Contracts\\Filesystem\\FileNotFoundException` would have been "
"thrown."
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:285
#, no-wrap
msgid "Deleting Missing Files"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:288
msgid "Attempting to `delete` a file that does not exist now returns `true`."
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:289
#, no-wrap
msgid "Cached Adapters"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:292
msgid ""
"Flysystem no longer supports \"cached adapters\". Thus, they have been "
"removed from Laravel and any relevant configuration (such as the `cache` key "
"within disk configurations) can be removed."
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:293
#, no-wrap
msgid "Custom Filesystems"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:296
msgid ""
"Slight changes have been made to the steps required to register custom "
"filesystem drivers. Therefore, if you were defining your own custom "
"filesystem drivers, or using packages that define custom drivers, you should "
"update your code and dependencies."
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:298
msgid ""
"For example, in Laravel 8.x, a custom filesystem driver might be registered "
"like so:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:299
#, no-wrap
msgid ""
"use Illuminate\\Support\\Facades\\Storage;\n"
"use League\\Flysystem\\Filesystem;\n"
"use Spatie\\Dropbox\\Client as DropboxClient;\n"
"use Spatie\\FlysystemDropbox\\DropboxAdapter;\n"
"\n"
"Storage::extend('dropbox', function ($app, $config) {\n"
"    $client = new DropboxClient(\n"
"        $config['authorization_token']\n"
"    );\n"
"\n"
"    return new Filesystem(new DropboxAdapter($client));\n"
"});\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:315
msgid ""
"However, in Laravel 9.x, the callback given to the `Storage::extend` method "
"should return an instance of `Illuminate\\Filesystem\\FilesystemAdapter` "
"directly:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:316
#, no-wrap
msgid ""
"use Illuminate\\Filesystem\\FilesystemAdapter;\n"
"use Illuminate\\Support\\Facades\\Storage;\n"
"use League\\Flysystem\\Filesystem;\n"
"use Spatie\\Dropbox\\Client as DropboxClient;\n"
"use Spatie\\FlysystemDropbox\\DropboxAdapter;\n"
"\n"
"Storage::extend('dropbox', function ($app, $config) {\n"
"    $adapter = new DropboxAdapter(new DropboxClient(\n"
"        $config['authorization_token']\n"
"    ););\n"
"\n"
"    return new FilesystemAdapter(\n"
"        new Filesystem($adapter, $config),\n"
"        $adapter,\n"
"        $config\n"
"    );\n"
"});\n"
msgstr ""

#. type: Title ###
#: docs/master/upgrade.md:336
#, no-wrap
msgid "Helpers"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:339
#, no-wrap
msgid "<a name=\"data-get-function\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:339
#, no-wrap
msgid "The `data_get` Helper & Iterable Objects"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:344
msgid ""
"Previously, the `data_get` helper could be used to retrieve nested data on "
"arrays and `Collection` instances; however, this helper can now retrieve "
"nested data on all iterable objects."
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:346
#, no-wrap
msgid "<a name=\"str-function\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:346
#, no-wrap
msgid "The `str` Helper"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:351
msgid ""
"Laravel 9.x now includes a global `str` [helper "
"function](/docs/{{version}}/helpers#method-str). If you are defining a "
"global `str` helper in your application, you should rename or remove it so "
"that it does not conflict with Laravel's own `str` helper."
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:353
#, no-wrap
msgid "<a name=\"when-and-unless-methods\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:353
#, no-wrap
msgid "The `when` / `unless` Methods"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:358
msgid ""
"As you may know, `when` and `unless` methods are offered by various classes "
"throughout the framework. These methods can be used to conditionally perform "
"an action if the boolean value of the first argument to the method evaluates "
"to `true` or `false`:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:359
#, no-wrap
msgid ""
"$collection->when(true, function ($collection) {\n"
"    $collection->merge([1, 2, 3]);\n"
"});\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:366
msgid ""
"Therefore, in previous releases of Laravel, passing a closure to the `when` "
"or `unless` methods meant that the conditional operation would always "
"execute, since a loose comparison against a closure object (or any other "
"object) always evaluates to `true`. This often led to unexpected outcomes "
"because developers expect the **result** of the closure to be used as the "
"boolean value that determines if the conditional action executes."
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:368
msgid ""
"So, in Laravel 9.x, any closures passed to the `when` or `unless` methods "
"will be executed and the value returned by the closure will be considered "
"the boolean value used by the `when` and `unless` methods:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:369
#, no-wrap
msgid ""
"$collection->when(function ($collection) {\n"
"    // This closure is executed...\n"
"    return false;\n"
"}, function ($collection) {\n"
"    // Not executed since first closure returned \"false\"...\n"
"    $collection->merge([1, 2, 3]);\n"
"});\n"
msgstr ""

#. type: Title ###
#: docs/master/upgrade.md:379
#, no-wrap
msgid "HTTP Client"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:382
#, no-wrap
msgid "<a name=\"http-client-default-timeout\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:382
#, no-wrap
msgid "Default Timeout"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:387
msgid ""
"The HTTP client now has a default timeout of 30 seconds. In other words, if "
"the server does not respond within 30 seconds, an exception will be "
"thrown. Previously, no default timeout length was configured on the HTTP "
"client, causing requests to sometimes \"hang\" indefinitely."
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:389
msgid ""
"If you wish to specify a longer timeout for a given request, you may do so "
"using the `timeout` method:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:391
#, no-wrap
msgid "    $response = Http::timeout(120)->get(...);\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:393
#, no-wrap
msgid "<a name=\"symfony-mailer\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/upgrade.md:393
#, no-wrap
msgid "Symfony Mailer"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:398
msgid ""
"One of the largest changes in Laravel 9.x is the transition from "
"SwiftMailer, which is no longer maintained as of December 2021, to Symfony "
"Mailer. However, we have tried to make this transition as seamless as "
"possible for your applications. That being said, please thoroughly review "
"the list of changes below to ensure your application is fully compatible."
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:402
msgid ""
"The `aws/aws-sdk-php` Composer package is no longer needed when using the "
"Amazon SES transport and can be removed if no other part of your application "
"requires it. Instead, your application should require the "
"`symfony/amazon-mailer` Composer package:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:404
#, no-wrap
msgid "    composer require symfony/amazon-mailer\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:406
msgid ""
"To continue using the Mailgun transport, your application should require the "
"`symfony/mailgun-mailer` Composer package:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:408
#, no-wrap
msgid "    composer require symfony/mailgun-mailer\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:410
msgid ""
"The `wildbit/swiftmailer-postmark` Composer package should be removed from "
"your application. Instead, your application should require the "
"`symfony/postmark-mailer` Composer package:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:412
#, no-wrap
msgid "    composer require symfony/postmark-mailer\n"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:413
#, no-wrap
msgid "Updated Return Types"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:416
msgid ""
"The `send`, `html`, `text`, and `plain` methods no longer return the number "
"of recipients that received the message. Instead, an instance of "
"`Illuminate\\Mail\\SentMessage` is returned. This object contains an "
"instance of `Symfony\\Component\\Mailer\\SentMessage` that is accessible via "
"the `getSymfonySentMessage` method or by dynamically invoking methods on the "
"object."
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:417
#, no-wrap
msgid "Renamed \"Swift\" Methods"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:420
msgid ""
"Various SwiftMailer related methods, some of which were undocumented, have "
"been renamed to their Symfony Mailer counterparts. For example, the "
"`withSwiftMessage` method has been renamed to `withSymfonyMessage`:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:427
#, no-wrap
msgid ""
"    // Laravel 8.x...\n"
"    $this->withSwiftMessage(function ($message) {\n"
"        $message->getHeaders()->addTextHeader(\n"
"            'Custom-Header', 'Header Value'\n"
"        );\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:430
#, no-wrap
msgid ""
"    // Laravel 9.x...\n"
"    use Symfony\\Component\\Mime\\Email;\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:436
#, no-wrap
msgid ""
"    $this->withSymfonyMessage(function (Email $message) {\n"
"        $message->getHeaders()->addTextHeader(\n"
"            'Custom-Header', 'Header Value'\n"
"        );\n"
"    });\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:438
#, no-wrap
msgid ""
"> {note} Please thoroughly review the [Symfony Mailer "
"documentation](https://symfony.com/doc/6.0/mailer.html#creating-sending-messages) "
"for all possible interactions with the `Symfony\\Component\\Mime\\Email` "
"object.\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:440
msgid ""
"The list below contains a more thorough overview of renamed methods. Many of "
"these methods are low-level methods used to interact with SwiftMailer / "
"Symfony Mailer directly, so may not be commonly used within most Laravel "
"applications:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:443
#, no-wrap
msgid ""
"    Message::getSwiftMessage();\n"
"    Message::getSymfonyMessage();\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:446
#, no-wrap
msgid ""
"    Mailable::withSwiftMessage($callback);\n"
"    Mailable::withSymfonyMessage($callback);\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:449
#, no-wrap
msgid ""
"    MailMessage::withSwiftMessage($callback);\n"
"    MailMessage::withSymfonyMessage($callback);\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:452
#, no-wrap
msgid ""
"    Mailer::getSwiftMailer();\n"
"    Mailer::getSymfonyTransport();\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:455
#, no-wrap
msgid ""
"    Mailer::setSwiftMailer($swift);\n"
"    Mailer::setSymfonyTransport(TransportInterface $transport);\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:458
#, no-wrap
msgid ""
"    MailManager::createTransport($config);\n"
"    MailManager::createSymfonyTransport($config);\n"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:459
#, no-wrap
msgid "Proxied `Illuminate\\Mail\\Message` Methods"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:462
msgid ""
"The `Illuminate\\Mail\\Message` typically proxied missing methods to the "
"underlying `Swift_Message` instance. However, missing methods are now "
"proxied to an instance of `Symfony\\Component\\Mime\\Email` instead. So, any "
"code that was previously relying on missing methods to be proxied to "
"SwiftMailer should be updated to their corresponding Symfony Mailer "
"counterparts."
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:464
msgid ""
"Again, many applications may not be interacting with these methods, as they "
"are not documented within the Laravel documentation:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:472
#, no-wrap
msgid ""
"    // Laravel 8.x...\n"
"    $message\n"
"        ->setFrom('taylor@laravel.com')\n"
"        ->setTo('example@example.org')\n"
"        ->setSubject('Order Shipped')\n"
"        ->setBody('<h1>HTML</h1>', 'text/html')\n"
"        ->addPart('Plain Text', 'text/plain');\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:480
#, no-wrap
msgid ""
"    // Laravel 9.x...\n"
"    $message\n"
"        ->from('taylor@laravel.com')\n"
"        ->to('example@example.org')\n"
"        ->subject('Order Shipped')\n"
"        ->html('<h1>HTML</h1>')\n"
"        ->text('Plain Text');\n"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:481
#, no-wrap
msgid "Generated Messages IDs"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:484
msgid ""
"SwiftMailer offered the ability to define a custom domain to include in "
"generated Message IDs via the `mime.idgenerator.idright` configuration "
"option. This is not supported by Symfony Mailer. Instead, Symfony Mailer "
"will automatically generate a Message ID based on the sender."
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:485
#, no-wrap
msgid "Forced Reconnections"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:488
msgid ""
"It is no longer possible to force a transport reconnection (for example when "
"the mailer is running via a daemon process). Instead, Symfony Mailer will "
"attempt to reconnect to the transport automatically and throw an exception "
"if the reconnection fails."
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:489
#, no-wrap
msgid "SMTP Stream Options"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:492
msgid ""
"Defining stream options for the SMTP transport is no longer "
"supported. Instead, you must define the relevant options directly within the "
"configuration if they are supported. For example, to disable TLS peer "
"verification:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:500
#, no-wrap
msgid ""
"    'smtp' => [\n"
"        // Laravel 8.x...\n"
"        'stream' => [\n"
"            'ssl' => [\n"
"                'verify_peer' => false,\n"
"            ],\n"
"        ],\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:504
#, no-wrap
msgid ""
"        // Laravel 9.x...\n"
"        'verify_peer' => false,\n"
"    ],\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:506
msgid ""
"To learn more about the available configuration options, please review the "
"[Symfony Mailer "
"documentation](https://symfony.com/doc/6.0/mailer.html#transport-setup)."
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:508
#, no-wrap
msgid ""
"> {note} In spite of the example above, you are not generally advised to "
"disable SSL verification since it introduces the possibility of "
"\"man-in-the-middle\" attacks.\n"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:509
#, no-wrap
msgid "SMTP `auth_mode`"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:512
msgid ""
"Defining the SMTP `auth_mode` in the `mail` configuration file is no longer "
"required. The authentication mode will be automatically negotiated between "
"Symfony Mailer and the SMTP server."
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:513
#, no-wrap
msgid "Failed Recipients"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:516
msgid ""
"It is no longer possible to retrieve a list of failed recipients after "
"sending a message. Instead, a "
"`Symfony\\Component\\Mailer\\Exception\\TransportExceptionInterface` "
"exception will be thrown if a message fails to send. Instead of relying on "
"retrieving invalid email addresses after sending a message, we recommend "
"that you validate email addresses before sending the message instead."
msgstr ""

#. type: Title ###
#: docs/master/upgrade.md:517
#, no-wrap
msgid "Packages"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:520
#, no-wrap
msgid "<a name=\"the-lang-directory\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:520
#, no-wrap
msgid "The `lang` Directory"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:525
#, no-wrap
msgid ""
"In new Laravel applications, the `resources/lang` directory is now located "
"in the root project directory (`lang`). If your package is publishing "
"language files to this directory, you should ensure that your package is "
"publishing to `app()->langPath()` instead of a hard-coded path.\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:527
#, no-wrap
msgid "<a name=\"queue\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/upgrade.md:527
#, no-wrap
msgid "Queue"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:530
#, no-wrap
msgid "<a name=\"the-opis-closure-library\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:530
#, no-wrap
msgid "The `opis/closure` Library"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:535
msgid ""
"Laravel's dependency on `opis/closure` has been replaced by "
"`laravel/serializable-closure`. This should not cause any breaking change in "
"your application unless you are interacting with the `opis/closure` library "
"directly. In addition, the previously deprecated "
"`Illuminate\\Queue\\SerializableClosureFactory` and "
"`Illuminate\\Queue\\SerializableClosure` classes have been removed. If you "
"are interacting with `opis/closure` library directly or using any of the "
"removed classes, you may use [Laravel Serializable "
"Closure](https://github.com/laravel/serializable-closure) instead."
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:536
#, no-wrap
msgid "The Failed Job Provider `failed` Method"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:541
msgid ""
"The `flush` method defined by the "
"`Illuminate\\Queue\\Failed\\FailedJobProviderInterface` interface now "
"accepts an `$age` argument which determines how old a failed job must be (in "
"days) before it is flushed by the `queue:flush` command. If you are manually "
"implementing the `FailedJobProviderInterface` you should ensure that your "
"implementation is updated to reflect this new argument:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:542
#, no-wrap
msgid "public function flush($age = null);\n"
msgstr ""

#. type: Title ###
#: docs/master/upgrade.md:546
#, no-wrap
msgid "Session"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:548
#, no-wrap
msgid "The `getSession` Method"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:553
msgid ""
"The `Symfony\\Component\\HttpFoundaton\\Request` class that is extended by "
"Laravel's own `Illuminate\\Http\\Request` class offers a `getSession` method "
"to get the current session storage handler. This method is not documented by "
"Laravel as most Laravel applications interact with the session through "
"Laravel's own `session` method."
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:555
msgid ""
"The `getSession` method previously returned an instance of "
"`Illuminate\\Session\\Store` or `null`; however, due to the Symfony 6.x "
"release enforcing a return type of "
"`Symfony\\Component\\HttpFoundation\\Session\\SessionInterface`, the "
"`getSession` now correctly returns a `SessionInterface` implementation or "
"throws an "
"`\\Symfony\\Component\\HttpFoundation\\Exception\\SessionNotFoundException` "
"exception when no session is available."
msgstr ""

#. type: Title ###
#: docs/master/upgrade.md:556
#, no-wrap
msgid "Testing"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:559
#, no-wrap
msgid "<a name=\"the-assert-deleted-method\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:559
#, no-wrap
msgid "The `assertDeleted` Method"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:564
msgid ""
"All calls to the `assertDeleted` method should be updated to "
"`assertModelMissing`."
msgstr ""

#. type: Title ###
#: docs/master/upgrade.md:565
#, no-wrap
msgid "Validation"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:567
#, no-wrap
msgid "Form Request `validated` Method"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:572
msgid ""
"The `validated` method offered by form requests now accepts `$key` and "
"`$default` arguments. If you are manually overwriting the definition of this "
"method, you should update your method's signature to reflect these new "
"arguments:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:573
#, no-wrap
msgid "public function validated($key = null, $default = null)\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:578
#, no-wrap
msgid "<a name=\"the-password-rule\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:578
#, no-wrap
msgid "The `password` Rule"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:583
msgid ""
"The `password` rule, which validates that the given input value matches the "
"authenticated user's current password, has been renamed to "
"`current_password`."
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:585
#, no-wrap
msgid "<a name=\"unvalidated-array-keys\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/upgrade.md:585
#, no-wrap
msgid "Unvalidated Array Keys"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:590
msgid ""
"In previous releases of Laravel, you were required to manually instruct "
"Laravel's validator to exclude unvalidated array keys from the \"validated\" "
"data it returns, especially in combination with an `array` rule that does "
"not specify a list of allowed keys."
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:592
msgid ""
"However, in Laravel 9.x, unvalidated array keys are always excluded from the "
"\"validated\" data even when no allowed keys have been specified via the "
"`array` rule. Typically, this behavior is the most expected behavior and the "
"previous `excludeUnvalidatedArrayKeys` method was only added to Laravel 8.x "
"as a temporary measure in order to preserve backwards compatibility."
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:594
msgid ""
"Although it is not recommended, you may opt-in to the previous Laravel 8.x "
"behavior by invoking a new `includeUnvalidatedArrayKeys` method within the "
"`boot` method of one of your application's service providers:"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:595
#, no-wrap
msgid ""
"use Illuminate\\Support\\Facades\\Validator;\n"
"\n"
"/**\n"
" * Register any application services.\n"
" *\n"
" * @return void\n"
" */\n"
"public function boot()\n"
"{\n"
"    Validator::includeUnvalidatedArrayKeys();\n"
"}\n"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:610
#, no-wrap
msgid "<a name=\"miscellaneous\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/upgrade.md:610
#, no-wrap
msgid "Miscellaneous"
msgstr ""

#. type: Plain text
#: docs/master/upgrade.md:612
msgid ""
"We also encourage you to view the changes in the `laravel/laravel` [GitHub "
"repository](https://github.com/laravel/laravel). While many of these changes "
"are not required, you may wish to keep these files in sync with your "
"application. Some of these changes will be covered in this upgrade guide, "
"but others, such as changes to configuration files or comments, will not "
"be. You can easily view the changes with the [GitHub comparison "
"tool](https://github.com/laravel/laravel/compare/8.x...9.x) and choose which "
"updates are important to you."
msgstr ""
