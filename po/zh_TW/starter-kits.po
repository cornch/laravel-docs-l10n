msgid ""
msgstr ""
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/templates/starter-kits.pot\n"
"X-Crowdin-File-ID: 157\n"
"Project-Id-Version: laravel-docs\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"PO-Revision-Date: 2022-02-15 11:33\n"

#: docs/8.x/starter-kits.md:block 1 (header)
msgid "Starter Kits"
msgstr "入門套件"

#: docs/8.x/starter-kits.md:block 2 (unordered list)
msgid "[Introduction](#introduction)"
msgstr "[簡介](#introduction)"

#: docs/8.x/starter-kits.md:block 2 (unordered list)
msgid "[Laravel Breeze](#laravel-breeze)"
msgstr "[Laravel Breeze](#laravel-breeze)"

#: docs/8.x/starter-kits.md:block 2 (unordered list)
msgid "[Installation](#laravel-breeze-installation)"
msgstr "[安裝](#laravel-breeze-installation)"

#: docs/8.x/starter-kits.md:block 2 (unordered list)
msgid "[Breeze & Inertia](#breeze-and-inertia)"
msgstr "[Breeze & Inertia](#breeze-and-inertia)"

#: docs/8.x/starter-kits.md:block 2 (unordered list)
msgid "[Breeze & Next.js / API](#breeze-and-next)"
msgstr "[Breeze & Next.js / API](#breeze-and-next)"

#: docs/8.x/starter-kits.md:block 2 (unordered list)
msgid "[Laravel Jetstream](#laravel-jetstream)"
msgstr "[Laravel Jetstream](#laravel-jetstream)"

#: docs/8.x/starter-kits.md:block 4 (header)
msgid "Introduction"
msgstr "簡介"

#: docs/8.x/starter-kits.md:block 5 (paragraph)
msgid "To give you a head start building your new Laravel application, we are happy to offer authentication and application starter kits. These kits automatically scaffold your application with the routes, controllers, and views you need to register and authenticate your application's users."
msgstr "為了讓你在撰寫 Laravel 專案時有個好的開始，我們很高興能為你介紹「登入入門套件」與「專案入門套件」。這些套件包含了讓使用者註冊或登入的路由、Controller、與 View，會幫你自動進行 Scaffold。"

#: docs/8.x/starter-kits.md:block 6 (paragraph)
msgid "While you are welcome to use these starter kits, they are not required. You are free to build your own application from the ground up by simply installing a fresh copy of Laravel. Either way, we know you will build something great!"
msgstr "雖然我們歡迎你使用這些入門套件，不過這些套件並不是必要的。你可以從全新的 Laravel 安裝開始製作自己的專案。無論如何，我們都知道你會做出很棒的東西！"

#: docs/8.x/starter-kits.md:block 8 (header)
msgid "Laravel Breeze"
msgstr "Laravel Breeze"

#: docs/8.x/starter-kits.md:block 9 (paragraph)
msgid "[Laravel Breeze](https://github.com/laravel/breeze) is a minimal, simple implementation of all of Laravel's [authentication features](/docs/{{version}}/authentication), including login, registration, password reset, email verification, and password confirmation. Laravel Breeze's default view layer is made up of simple [Blade templates](/docs/{{version}}/blade) styled with [Tailwind CSS](https://tailwindcss.com)."
msgstr "[Laravel Breeze](https://github.com/laravel/breeze) 是一個簡單且最小化實作出所有 Laravel [認證功能](/docs/{{version}}/authentication)的套件，包含登入、註冊、密碼重設、電子郵件認證、以及密碼確認。Laravel Breeze 預設的 View 層是通過簡單的 [Blade 樣板](/docs/{{version}}/blade) 搭配 [Tailwind CSS](https://tailwindcss.com) 提供樣式組合而成的。"

#: docs/8.x/starter-kits.md:block 10 (paragraph)
msgid "Breeze provides a wonderful starting point for beginning a fresh Laravel application and is also great choice for projects that plan to take their Blade templates to the next level with [Laravel Livewire](https://laravel-livewire.com)."
msgstr "對於從頭開始撰寫 Laravel 專案來說，Breeze 提供了一個絕佳的起始點。而且，對於打算通過 [Laravel Livewire](https://laravel-livewire.com) 來提升 Blade 樣板功能的專案來說，Breeze 也是個不錯的選項。"

#: docs/8.x/starter-kits.md:block 12 (header)
msgid "Installation"
msgstr "安裝"

#: docs/8.x/starter-kits.md:block 13 (paragraph)
msgid "First, you should [create a new Laravel application](/docs/{{version}}/installation), configure your database, and run your [database migrations](/docs/{{version}}/migrations):"
msgstr "首先，先[建立一個新的 Laravel 專案](/docs/{{version}}/installation)、設定資料庫、然後執行[資料庫 Migration](/docs/{{version}}/migrations)："

#: docs/8.x/starter-kits.md:block 14 (code)
msgid "curl -s https://laravel.build/example-app | bash\n\n"
"cd example-app\n\n"
"php artisan migrate\n"
msgstr "curl -s https://laravel.build/example-app | bash\n\n"
"cd example-app\n\n"
"php artisan migrate\n"

#: docs/8.x/starter-kits.md:block 15 (paragraph)
msgid "Once you have created a new Laravel application, you may install Laravel Breeze using Composer:"
msgstr "建立好 Laravel 專案後，可以使用 Composer 來安裝 Laravel Breeze："

#: docs/8.x/starter-kits.md:block 16 (code)
msgid "composer require laravel/breeze --dev\n"
msgstr "composer require laravel/breeze --dev\n"

#: docs/8.x/starter-kits.md:block 17 (paragraph)
msgid "After Composer has installed the Laravel Breeze package, you may run the `breeze:install` Artisan command. This command publishes the authentication views, routes, controllers, and other resources to your application. Laravel Breeze publishes all of its code to your application so that you have full control and visibility over its features and implementation. After Breeze is installed, you should also compile your assets so that your application's CSS file is available:"
msgstr "安裝好 Laravel Breeze 套件後，執行 `breeze:install` Artisan 指令。這個指令會將登入用 View、路由、Controller、以及其他一些資源安裝到專案中。Laravel Breeze 會將其所有程式碼安裝到專案中，因此對於 Breeze 的功能與實作你擁有完整的控制權與可見性。安裝好 Breeze 之後，你需要接著編譯資源，這樣網站才會有 CSS 檔可用："

#: docs/8.x/starter-kits.md:block 18 (code)
msgid "php artisan breeze:install\n\n"
"npm install\n"
"npm run dev\n"
"php artisan migrate\n"
msgstr "php artisan breeze:install\n\n"
"npm install\n"
"npm run dev\n"
"php artisan migrate\n"

#: docs/8.x/starter-kits.md:block 19 (paragraph)
msgid "Next, you may navigate to your application's `/login` or `/register` URLs in your web browser. All of Breeze's routes are defined within the `routes/auth.php` file."
msgstr "接著，在瀏覽器中打開網站的 `/login` 或 `/register` 網址。Breeze 中所有的路由都定義在 `routes/auth.php` 中。"

#: docs/8.x/starter-kits.md:block 20 (quote)
msgid "{tip} To learn more about compiling your application's CSS and JavaScript, check out the [Laravel Mix documentation](/docs/{{version}}/mix#running-mix)."
msgstr "{tip} 要瞭解更多有關如何編譯網站的 CSS 與 JavaScript 的資訊，請參考 [Laravel Mix 說明文件](/docs/{{version}}/mix#running-mix)。"

#: docs/8.x/starter-kits.md:block 22 (header)
msgid "Breeze & Inertia"
msgstr "Breeze & Inertia"

#: docs/8.x/starter-kits.md:block 23 (paragraph)
msgid "Laravel Breeze also offers an [Inertia.js](https://inertiajs.com) frontend implementation powered by Vue or React. To use an Inertia stack, specify `vue` or `react` as your desired stack when executing the `breeze:install` Artisan command:"
msgstr "Laravel Breeze 也提供了由 Vue 或 React 驅動的 [Inertia.js](https://inertiajs.com) 前端實作。若要使用 Inertia Stack，請在執行 `breeze:install` Artisan 指令時將 `vue` 或 `react` 指定為你想要的 Stack："

#: docs/8.x/starter-kits.md:block 24 (code)
msgid "php artisan breeze:install vue\n\n"
"// Or...\n\n"
"php artisan breeze:install react\n\n"
"npm install\n"
"npm run dev\n"
"php artisan migrate\n"
msgstr "php artisan breeze:install vue\n\n"
"// 或是...\n\n"
"php artisan breeze:install react\n\n"
"npm install\n"
"npm run dev\n"
"php artisan migrate\n"

#: docs/8.x/starter-kits.md:block 26 (header)
msgid "Breeze & Next.js / API"
msgstr "Breeze & Next.js / API"

#: docs/8.x/starter-kits.md:block 27 (paragraph)
msgid "Laravel Breeze can also scaffold an authentication API that is ready to authenticate modern JavaScript applications such as those powered by [Next](https://nextjs.org), [Nuxt](https://nuxtjs.org), and others. To get started, specify the `api` stack as your desired stack when executing the `breeze:install` Artisan command:"
msgstr "Breeze 也可以用來 Scaffold 登入 API，以用於讓如 [Next](https://nextjs.org)、[Nuxt](https://nuxtjs.org)、或其他框架驅動的現代 JavaScript 網站進行登入認證。若要開始使用登入 API，請在執行 `breeze:install` Artisan 指令時指定 `api` 作為你想要的 Stack："

#: docs/8.x/starter-kits.md:block 28 (code)
msgid "php artisan breeze:install api\n\n"
"php artisan migrate\n"
msgstr "php artisan breeze:install api\n\n"
"php artisan migrate\n"

#: docs/8.x/starter-kits.md:block 29 (paragraph)
msgid "During installation, Breeze will add a `FRONTEND_URL` environment variable to your application's `.env` file. This URL should be the URL of your JavaScript application. This will typically be `http://localhost:3000` during local development."
msgstr "在安裝時，Breeze 也會在專案的 `.env` 檔案中新增一個 `FRONTEND_URL` 環境變數。這個網址就是 JavaScript 程式的網址。通常來說，在開發期間，這個網址會是 `http://localhost:3000`。"

#: docs/8.x/starter-kits.md:block 31 (header)
msgid "Next.js Reference Implementation"
msgstr "Next.js 參考實作"

#: docs/8.x/starter-kits.md:block 32 (paragraph)
msgid "Finally, you are ready to pair this backend with the frontend of your choice. A Next reference implementation of the Breeze frontend is [available on GitHub](https://github.com/laravel/breeze-next). This frontend is maintained by Laravel and contains the same user interface as the traditional Blade and Inertia stacks provided by Breeze."
msgstr "最後，我們已經準備好可以將這個後端與你的前端組合起來了。我們[在 GitHub 上提供了](https://github.com/laravel/breeze-next)一個作為 Breeze 前端的 Next 參考實作。這個前端是由 Laravel 維護的，其中包含了與 Breeze 提供的傳統 Blade 與 Inertia Stack 中相同的使用者界面。"

#: docs/8.x/starter-kits.md:block 34 (header)
msgid "Laravel Jetstream"
msgstr "Laravel Jetstream"

#: docs/8.x/starter-kits.md:block 35 (paragraph)
msgid "While Laravel Breeze provides a simple and minimal starting point for building a Laravel application, Jetstream augments that functionality with more robust features and additional frontend technology stacks. **For those brand new to Laravel, we recommend learning the ropes with Laravel Breeze before graduating to Laravel Jetstream.**"
msgstr "雖然 Laravel Breeze 提供了一個簡單起始點能讓你開始製作 Laravel 專案，但 Jetstream 提供了更多的功能，其中包含了強健的功能與額外的前端技術 Stack。**對於剛開始使用 Laravel 的新手，我們建議先了解一下 Laravel Breeze 的使用方式，再來學習 Laravel Jetstream。**"

#: docs/8.x/starter-kits.md:block 36 (paragraph)
msgid "Jetstream provides a beautifully designed application scaffolding for Laravel and includes login, registration, email verification, two-factor authentication, session management, API support via Laravel Sanctum, and optional team management. Jetstream is designed using [Tailwind CSS](https://tailwindcss.com) and offers your choice of [Livewire](https://laravel-livewire.com) or [Inertia.js](https://inertiajs.com) driven frontend scaffolding."
msgstr "Jetstream 為 Laravel 提供了一個設計的很好看的網站 Scaffolding，並包含了登入、註冊、E-Mail 認證、二步驟認證、工作階段管理、通過 Laravel Sanctum 提供的 API 支援、以及一個可選的團隊管理功能。Jetstream 使用 [Tailwind CSS](https://tailwindcss.com) 設計，並提供了 [Livewire](https://laravel-livewire.com) 與 [Inertia.js](https://inertiajs.com) 作為前端 Scaffolding 的選項。"

#: docs/8.x/starter-kits.md:block 37 (paragraph)
msgid "Complete documentation for installing Laravel Jetstream can be found within the [official Jetstream documentation](https://jetstream.laravel.com/2.x/introduction.html)."
msgstr "有關安裝 Laravel Jetstream 的完整說明文件可以在[官方 Jetstream 說明文件](https://jetstream.laravel.com/2.x/introduction.html)中找到。"

#: docs/9.x/starter-kits.md:block 29 (paragraph)
msgid "During installation, Breeze will add a `FRONTEND_URL` environment variable to your application's `.env` file. This URL should be the URL of your JavaScript application. This will typically be `http://localhost:3000` during local development. In addition, you should ensure that your `APP_URL` is set to `http://localhost:8000`, which is the default URL used by the `serve` Artisan command."
msgstr "在安裝過程中，Breeze 會在專案的 `.env` 檔中新增一個 `FRONTEND_URL` 環境變數。這個 URL 應為 JavaScript App 的 URL。在開發時，通常為 `http://localhost:3000`。此外，也應確認一下 `APP_URL` 是否為 `http://localhost:8000`，該網址就是 `serve` Artisan 指令的預設 URL。"

