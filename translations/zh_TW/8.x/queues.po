msgid ""
msgstr ""
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2021-04-01 22:46+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: \n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/po/docs.pot\n"
"X-Crowdin-File-ID: 6\n"

# File: docs/8.x/queues.md, line: 1
# File: docs/master/queues.md, line: 1
#. type: Title #
#: docs/8.x/queues.md:1
#, no-wrap
msgid "Queues"
msgstr ""

# File: docs/8.x/artisan.md, line: 23
# File: docs/8.x/authentication.md, line: 30
# File: docs/8.x/authorization.md, line: 24
# File: docs/8.x/billing.md, line: 61
# File: docs/8.x/blade.md, line: 37
# File: docs/8.x/broadcasting.md, line: 36
# File: docs/8.x/cache.md, line: 24
# File: docs/8.x/cashier-paddle.md, line: 45
# File: docs/8.x/collections.md, line: 13
# File: docs/8.x/configuration.md, line: 12
# File: docs/8.x/container.md, line: 19
# File: docs/8.x/contracts.md, line: 8
# File: docs/8.x/controllers.md, line: 17
# File: docs/8.x/database-testing.md, line: 22
# File: docs/8.x/database.md, line: 11
# File: docs/8.x/deployment.md, line: 14
# File: docs/8.x/dusk.md, line: 50
# File: docs/8.x/eloquent-mutators.md, line: 17
# File: docs/8.x/eloquent-relationships.md, line: 38
# File: docs/8.x/eloquent-resources.md, line: 14
# File: docs/8.x/eloquent-serialization.md, line: 10
# File: docs/8.x/eloquent.md, line: 37
# File: docs/8.x/envoy.md, line: 18
# File: docs/8.x/errors.md, line: 12
# File: docs/8.x/events.md, line: 18
# File: docs/8.x/facades.md, line: 10
# File: docs/8.x/filesystem.md, line: 20
# File: docs/8.x/fortify.md, line: 25
# File: docs/8.x/hashing.md, line: 9
# File: docs/8.x/homestead.md, line: 36
# File: docs/8.x/horizon.md, line: 16
# File: docs/8.x/http-client.md, line: 15
# File: docs/8.x/http-tests.md, line: 17
# File: docs/8.x/lifecycle.md, line: 11
# File: docs/8.x/localization.md, line: 12
# File: docs/8.x/logging.md, line: 14
# File: docs/8.x/mail.md, line: 26
# File: docs/8.x/middleware.md, line: 12
# File: docs/8.x/migrations.md, line: 24
# File: docs/8.x/mix.md, line: 21
# File: docs/8.x/mocking.md, line: 19
# File: docs/8.x/notifications.md, line: 48
# File: docs/8.x/packages.md, line: 17
# File: docs/8.x/pagination.md, line: 15
# File: docs/8.x/passport.md, line: 45
# File: docs/8.x/passwords.md, line: 11
# File: docs/8.x/providers.md, line: 9
# File: docs/8.x/queries.md, line: 34
# File: docs/8.x/queues.md, line: 44
# File: docs/8.x/redis.md, line: 12
# File: docs/8.x/requests.md, line: 22
# File: docs/8.x/sail.md, line: 24
# File: docs/8.x/sanctum.md, line: 23
# File: docs/8.x/scheduling.md, line: 18
# File: docs/8.x/scout.md, line: 26
# File: docs/8.x/seeding.md, line: 8
# File: docs/8.x/session.md, line: 16
# File: docs/8.x/socialite.md, line: 12
# File: docs/8.x/starter-kits.md, line: 7
# File: docs/8.x/structure.md, line: 29
# File: docs/8.x/telescope.md, line: 33
# File: docs/8.x/testing.md, line: 8
# File: docs/8.x/urls.md, line: 11
# File: docs/8.x/valet.md, line: 20
# File: docs/8.x/validation.md, line: 32
# File: docs/8.x/verification.md, line: 13
# File: docs/8.x/views.md, line: 13
# File: docs/master/artisan.md, line: 23
# File: docs/master/authentication.md, line: 30
# File: docs/master/authorization.md, line: 24
# File: docs/master/billing.md, line: 59
# File: docs/master/blade.md, line: 36
# File: docs/master/broadcasting.md, line: 36
# File: docs/master/cache.md, line: 24
# File: docs/master/cashier-paddle.md, line: 43
# File: docs/master/collections.md, line: 13
# File: docs/master/configuration.md, line: 12
# File: docs/master/container.md, line: 19
# File: docs/master/contracts.md, line: 8
# File: docs/master/controllers.md, line: 17
# File: docs/master/database-testing.md, line: 22
# File: docs/master/database.md, line: 11
# File: docs/master/deployment.md, line: 14
# File: docs/master/dusk.md, line: 50
# File: docs/master/eloquent-mutators.md, line: 17
# File: docs/master/eloquent-relationships.md, line: 38
# File: docs/master/eloquent-resources.md, line: 14
# File: docs/master/eloquent-serialization.md, line: 10
# File: docs/master/eloquent.md, line: 36
# File: docs/master/envoy.md, line: 17
# File: docs/master/errors.md, line: 12
# File: docs/master/events.md, line: 18
# File: docs/master/facades.md, line: 10
# File: docs/master/filesystem.md, line: 20
# File: docs/master/fortify.md, line: 25
# File: docs/master/hashing.md, line: 9
# File: docs/master/homestead.md, line: 36
# File: docs/master/horizon.md, line: 16
# File: docs/master/http-client.md, line: 15
# File: docs/master/http-tests.md, line: 16
# File: docs/master/lifecycle.md, line: 11
# File: docs/master/localization.md, line: 12
# File: docs/master/logging.md, line: 14
# File: docs/master/mail.md, line: 26
# File: docs/master/middleware.md, line: 12
# File: docs/master/migrations.md, line: 24
# File: docs/master/mix.md, line: 21
# File: docs/master/mocking.md, line: 19
# File: docs/master/notifications.md, line: 47
# File: docs/master/packages.md, line: 17
# File: docs/master/pagination.md, line: 15
# File: docs/master/passport.md, line: 45
# File: docs/master/passwords.md, line: 10
# File: docs/master/providers.md, line: 9
# File: docs/master/queries.md, line: 33
# File: docs/master/queues.md, line: 43
# File: docs/master/redis.md, line: 12
# File: docs/master/requests.md, line: 21
# File: docs/master/sail.md, line: 23
# File: docs/master/sanctum.md, line: 23
# File: docs/master/scheduling.md, line: 18
# File: docs/master/scout.md, line: 26
# File: docs/master/seeding.md, line: 8
# File: docs/master/session.md, line: 16
# File: docs/master/socialite.md, line: 12
# File: docs/master/starter-kits.md, line: 7
# File: docs/master/structure.md, line: 29
# File: docs/master/telescope.md, line: 33
# File: docs/master/testing.md, line: 8
# File: docs/master/urls.md, line: 11
# File: docs/master/valet.md, line: 20
# File: docs/master/validation.md, line: 32
# File: docs/master/verification.md, line: 13
# File: docs/master/views.md, line: 13
#. type: Bullet: '- '
#: docs/8.x/queues.md:44
msgid "[Introduction](#introduction)"
msgstr "[簡介](#introduction)"

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[Connections Vs. Queues](#connections-vs-queues)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[Driver Notes & Prerequisites](#driver-prerequisites)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '- '
#: docs/8.x/queues.md:44
msgid "[Creating Jobs](#creating-jobs)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[Generating Job Classes](#generating-job-classes)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[Class Structure](#class-structure)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[Unique Jobs](#unique-jobs)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '- '
#: docs/8.x/queues.md:44
msgid "[Job Middleware](#job-middleware)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/8.x/routing.md, line: 27
# File: docs/master/queues.md, line: 43
# File: docs/master/routing.md, line: 27
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[Rate Limiting](#rate-limiting)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[Preventing Job Overlaps](#preventing-job-overlaps)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[Throttling Exceptions](#throttling-exceptions)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '- '
#: docs/8.x/queues.md:44
msgid "[Dispatching Jobs](#dispatching-jobs)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[Delayed Dispatching](#delayed-dispatching)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[Synchronous Dispatching](#synchronous-dispatching)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[Jobs & Database Transactions](#jobs-and-database-transactions)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[Job Chaining](#job-chaining)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid ""
"[Customizing The Queue & Connection](#customizing-the-queue-and-connection)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid ""
"[Specifying Max Job Attempts / Timeout Values](#max-job-attempts-and-timeout)"
msgstr ""

# File: docs/8.x/http-client.md, line: 15
# File: docs/8.x/queues.md, line: 44
# File: docs/master/http-client.md, line: 15
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[Error Handling](#error-handling)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '- '
#: docs/8.x/queues.md:44
msgid "[Job Batching](#job-batching)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[Defining Batchable Jobs](#defining-batchable-jobs)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[Dispatching Batches](#dispatching-batches)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[Adding Jobs To Batches](#adding-jobs-to-batches)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[Inspecting Batches](#inspecting-batches)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[Cancelling Batches](#cancelling-batches)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[Batch Failures](#batch-failures)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[Pruning Batches](#pruning-batches)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '- '
#: docs/8.x/queues.md:44
msgid "[Queueing Closures](#queueing-closures)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '- '
#: docs/8.x/queues.md:44
msgid "[Running The Queue Worker](#running-the-queue-worker)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[The `queue:work` Command](#the-queue-work-command)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[Queue Priorities](#queue-priorities)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[Queue Workers & Deployment](#queue-workers-and-deployment)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[Job Expirations & Timeouts](#job-expirations-and-timeouts)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '- '
#: docs/8.x/queues.md:44
msgid "[Supervisor Configuration](#supervisor-configuration)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '- '
#: docs/8.x/queues.md:44
msgid "[Dealing With Failed Jobs](#dealing-with-failed-jobs)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[Cleaning Up After Failed Jobs](#cleaning-up-after-failed-jobs)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[Retrying Failed Jobs](#retrying-failed-jobs)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[Ignoring Missing Models](#ignoring-missing-models)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '    - '
#: docs/8.x/queues.md:44
msgid "[Failed Job Events](#failed-job-events)"
msgstr ""

# File: docs/8.x/horizon.md, line: 16
# File: docs/8.x/queues.md, line: 44
# File: docs/master/horizon.md, line: 16
# File: docs/master/queues.md, line: 43
#. type: Bullet: '- '
#: docs/8.x/queues.md:44
msgid "[Clearing Jobs From Queues](#clearing-jobs-from-queues)"
msgstr ""

# File: docs/8.x/queues.md, line: 44
# File: docs/master/queues.md, line: 43
#. type: Bullet: '- '
#: docs/8.x/queues.md:44
msgid "[Job Events](#job-events)"
msgstr ""

# File: docs/8.x/artisan.md, line: 25
# File: docs/8.x/authentication.md, line: 32
# File: docs/8.x/authorization.md, line: 26
# File: docs/8.x/billing.md, line: 63
# File: docs/8.x/blade.md, line: 39
# File: docs/8.x/broadcasting.md, line: 38
# File: docs/8.x/cache.md, line: 26
# File: docs/8.x/cashier-paddle.md, line: 47
# File: docs/8.x/collections.md, line: 15
# File: docs/8.x/configuration.md, line: 14
# File: docs/8.x/console-tests.md, line: 7
# File: docs/8.x/container.md, line: 21
# File: docs/8.x/contracts.md, line: 10
# File: docs/8.x/controllers.md, line: 19
# File: docs/8.x/database-testing.md, line: 24
# File: docs/8.x/database.md, line: 13
# File: docs/8.x/deployment.md, line: 16
# File: docs/8.x/dusk.md, line: 52
# File: docs/8.x/eloquent-collections.md, line: 8
# File: docs/8.x/eloquent-mutators.md, line: 19
# File: docs/8.x/eloquent-relationships.md, line: 40
# File: docs/8.x/eloquent-resources.md, line: 16
# File: docs/8.x/eloquent-serialization.md, line: 12
# File: docs/8.x/eloquent.md, line: 39
# File: docs/8.x/encryption.md, line: 8
# File: docs/8.x/envoy.md, line: 20
# File: docs/8.x/errors.md, line: 14
# File: docs/8.x/events.md, line: 20
# File: docs/8.x/facades.md, line: 12
# File: docs/8.x/filesystem.md, line: 22
# File: docs/8.x/fortify.md, line: 27
# File: docs/8.x/hashing.md, line: 11
# File: docs/8.x/helpers.md, line: 7
# File: docs/8.x/homestead.md, line: 38
# File: docs/8.x/horizon.md, line: 18
# File: docs/8.x/http-client.md, line: 17
# File: docs/8.x/http-tests.md, line: 19
# File: docs/8.x/lifecycle.md, line: 13
# File: docs/8.x/localization.md, line: 14
# File: docs/8.x/logging.md, line: 16
# File: docs/8.x/mail.md, line: 28
# File: docs/8.x/middleware.md, line: 14
# File: docs/8.x/migrations.md, line: 26
# File: docs/8.x/mix.md, line: 23
# File: docs/8.x/mocking.md, line: 21
# File: docs/8.x/notifications.md, line: 50
# File: docs/8.x/packages.md, line: 19
# File: docs/8.x/pagination.md, line: 17
# File: docs/8.x/passport.md, line: 47
# File: docs/8.x/passwords.md, line: 13
# File: docs/8.x/providers.md, line: 11
# File: docs/8.x/queries.md, line: 36
# File: docs/8.x/queues.md, line: 46
# File: docs/8.x/redis.md, line: 14
# File: docs/8.x/requests.md, line: 24
# File: docs/8.x/sail.md, line: 26
# File: docs/8.x/sanctum.md, line: 25
# File: docs/8.x/scheduling.md, line: 20
# File: docs/8.x/scout.md, line: 28
# File: docs/8.x/seeding.md, line: 10
# File: docs/8.x/session.md, line: 18
# File: docs/8.x/socialite.md, line: 14
# File: docs/8.x/starter-kits.md, line: 9
# File: docs/8.x/structure.md, line: 31
# File: docs/8.x/telescope.md, line: 35
# File: docs/8.x/testing.md, line: 10
# File: docs/8.x/urls.md, line: 13
# File: docs/8.x/valet.md, line: 22
# File: docs/8.x/validation.md, line: 34
# File: docs/8.x/verification.md, line: 15
# File: docs/8.x/views.md, line: 15
# File: docs/master/artisan.md, line: 25
# File: docs/master/authentication.md, line: 32
# File: docs/master/authorization.md, line: 26
# File: docs/master/billing.md, line: 61
# File: docs/master/blade.md, line: 38
# File: docs/master/broadcasting.md, line: 38
# File: docs/master/cache.md, line: 26
# File: docs/master/cashier-paddle.md, line: 45
# File: docs/master/collections.md, line: 15
# File: docs/master/configuration.md, line: 14
# File: docs/master/console-tests.md, line: 7
# File: docs/master/container.md, line: 21
# File: docs/master/contracts.md, line: 10
# File: docs/master/controllers.md, line: 19
# File: docs/master/database-testing.md, line: 24
# File: docs/master/database.md, line: 13
# File: docs/master/deployment.md, line: 16
# File: docs/master/dusk.md, line: 52
# File: docs/master/eloquent-collections.md, line: 8
# File: docs/master/eloquent-mutators.md, line: 19
# File: docs/master/eloquent-relationships.md, line: 40
# File: docs/master/eloquent-resources.md, line: 16
# File: docs/master/eloquent-serialization.md, line: 12
# File: docs/master/eloquent.md, line: 38
# File: docs/master/encryption.md, line: 8
# File: docs/master/envoy.md, line: 19
# File: docs/master/errors.md, line: 14
# File: docs/master/events.md, line: 20
# File: docs/master/facades.md, line: 12
# File: docs/master/filesystem.md, line: 22
# File: docs/master/fortify.md, line: 27
# File: docs/master/hashing.md, line: 11
# File: docs/master/helpers.md, line: 7
# File: docs/master/homestead.md, line: 38
# File: docs/master/horizon.md, line: 18
# File: docs/master/http-client.md, line: 17
# File: docs/master/http-tests.md, line: 18
# File: docs/master/lifecycle.md, line: 13
# File: docs/master/localization.md, line: 14
# File: docs/master/logging.md, line: 16
# File: docs/master/mail.md, line: 28
# File: docs/master/middleware.md, line: 14
# File: docs/master/migrations.md, line: 26
# File: docs/master/mix.md, line: 23
# File: docs/master/mocking.md, line: 21
# File: docs/master/notifications.md, line: 49
# File: docs/master/packages.md, line: 19
# File: docs/master/pagination.md, line: 17
# File: docs/master/passport.md, line: 47
# File: docs/master/passwords.md, line: 12
# File: docs/master/providers.md, line: 11
# File: docs/master/queries.md, line: 35
# File: docs/master/queues.md, line: 45
# File: docs/master/redis.md, line: 14
# File: docs/master/requests.md, line: 23
# File: docs/master/sail.md, line: 25
# File: docs/master/sanctum.md, line: 25
# File: docs/master/scheduling.md, line: 20
# File: docs/master/scout.md, line: 28
# File: docs/master/seeding.md, line: 10
# File: docs/master/session.md, line: 18
# File: docs/master/socialite.md, line: 14
# File: docs/master/starter-kits.md, line: 9
# File: docs/master/structure.md, line: 31
# File: docs/master/telescope.md, line: 35
# File: docs/master/testing.md, line: 10
# File: docs/master/urls.md, line: 13
# File: docs/master/valet.md, line: 22
# File: docs/master/validation.md, line: 34
# File: docs/master/verification.md, line: 15
# File: docs/master/views.md, line: 15
#. type: Plain text
#: docs/8.x/queues.md:46
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr "<a name=\"introduction\"></a>\n"

# File: docs/8.x/artisan.md, line: 25
# File: docs/8.x/authentication.md, line: 32
# File: docs/8.x/authorization.md, line: 26
# File: docs/8.x/billing.md, line: 63
# File: docs/8.x/blade.md, line: 39
# File: docs/8.x/broadcasting.md, line: 38
# File: docs/8.x/cache.md, line: 26
# File: docs/8.x/cashier-paddle.md, line: 47
# File: docs/8.x/collections.md, line: 15
# File: docs/8.x/collections.md, line: 2899
# File: docs/8.x/configuration.md, line: 14
# File: docs/8.x/console-tests.md, line: 7
# File: docs/8.x/container.md, line: 21
# File: docs/8.x/contracts.md, line: 10
# File: docs/8.x/controllers.md, line: 19
# File: docs/8.x/csrf.md, line: 10
# File: docs/8.x/database-testing.md, line: 24
# File: docs/8.x/database.md, line: 13
# File: docs/8.x/deployment.md, line: 16
# File: docs/8.x/dusk.md, line: 52
# File: docs/8.x/eloquent-collections.md, line: 8
# File: docs/8.x/eloquent-mutators.md, line: 19
# File: docs/8.x/eloquent-relationships.md, line: 40
# File: docs/8.x/eloquent-resources.md, line: 16
# File: docs/8.x/eloquent-serialization.md, line: 12
# File: docs/8.x/eloquent.md, line: 39
# File: docs/8.x/encryption.md, line: 8
# File: docs/8.x/envoy.md, line: 20
# File: docs/8.x/errors.md, line: 14
# File: docs/8.x/events.md, line: 20
# File: docs/8.x/facades.md, line: 12
# File: docs/8.x/filesystem.md, line: 22
# File: docs/8.x/fortify.md, line: 27
# File: docs/8.x/hashing.md, line: 11
# File: docs/8.x/helpers.md, line: 7
# File: docs/8.x/homestead.md, line: 38
# File: docs/8.x/horizon.md, line: 18
# File: docs/8.x/http-client.md, line: 17
# File: docs/8.x/http-tests.md, line: 19
# File: docs/8.x/lifecycle.md, line: 13
# File: docs/8.x/localization.md, line: 14
# File: docs/8.x/logging.md, line: 16
# File: docs/8.x/mail.md, line: 28
# File: docs/8.x/middleware.md, line: 14
# File: docs/8.x/migrations.md, line: 26
# File: docs/8.x/mix.md, line: 23
# File: docs/8.x/mocking.md, line: 21
# File: docs/8.x/notifications.md, line: 50
# File: docs/8.x/packages.md, line: 19
# File: docs/8.x/pagination.md, line: 17
# File: docs/8.x/passport.md, line: 47
# File: docs/8.x/passwords.md, line: 13
# File: docs/8.x/providers.md, line: 11
# File: docs/8.x/queries.md, line: 36
# File: docs/8.x/queues.md, line: 46
# File: docs/8.x/redis.md, line: 14
# File: docs/8.x/requests.md, line: 24
# File: docs/8.x/sail.md, line: 26
# File: docs/8.x/sanctum.md, line: 25
# File: docs/8.x/scheduling.md, line: 20
# File: docs/8.x/scout.md, line: 28
# File: docs/8.x/seeding.md, line: 10
# File: docs/8.x/session.md, line: 18
# File: docs/8.x/socialite.md, line: 14
# File: docs/8.x/starter-kits.md, line: 9
# File: docs/8.x/structure.md, line: 31
# File: docs/8.x/telescope.md, line: 35
# File: docs/8.x/testing.md, line: 10
# File: docs/8.x/urls.md, line: 13
# File: docs/8.x/valet.md, line: 22
# File: docs/8.x/validation.md, line: 34
# File: docs/8.x/verification.md, line: 15
# File: docs/8.x/views.md, line: 15
# File: docs/master/artisan.md, line: 25
# File: docs/master/authentication.md, line: 32
# File: docs/master/authorization.md, line: 26
# File: docs/master/billing.md, line: 61
# File: docs/master/blade.md, line: 38
# File: docs/master/broadcasting.md, line: 38
# File: docs/master/cache.md, line: 26
# File: docs/master/cashier-paddle.md, line: 45
# File: docs/master/collections.md, line: 15
# File: docs/master/collections.md, line: 2895
# File: docs/master/configuration.md, line: 14
# File: docs/master/console-tests.md, line: 7
# File: docs/master/container.md, line: 21
# File: docs/master/contracts.md, line: 10
# File: docs/master/controllers.md, line: 19
# File: docs/master/csrf.md, line: 10
# File: docs/master/database-testing.md, line: 24
# File: docs/master/database.md, line: 13
# File: docs/master/deployment.md, line: 16
# File: docs/master/dusk.md, line: 52
# File: docs/master/eloquent-collections.md, line: 8
# File: docs/master/eloquent-mutators.md, line: 19
# File: docs/master/eloquent-relationships.md, line: 40
# File: docs/master/eloquent-resources.md, line: 16
# File: docs/master/eloquent-serialization.md, line: 12
# File: docs/master/eloquent.md, line: 38
# File: docs/master/encryption.md, line: 8
# File: docs/master/envoy.md, line: 19
# File: docs/master/errors.md, line: 14
# File: docs/master/events.md, line: 20
# File: docs/master/facades.md, line: 12
# File: docs/master/filesystem.md, line: 22
# File: docs/master/fortify.md, line: 27
# File: docs/master/hashing.md, line: 11
# File: docs/master/helpers.md, line: 7
# File: docs/master/homestead.md, line: 38
# File: docs/master/horizon.md, line: 18
# File: docs/master/http-client.md, line: 17
# File: docs/master/http-tests.md, line: 18
# File: docs/master/lifecycle.md, line: 13
# File: docs/master/localization.md, line: 14
# File: docs/master/logging.md, line: 16
# File: docs/master/mail.md, line: 28
# File: docs/master/middleware.md, line: 14
# File: docs/master/migrations.md, line: 26
# File: docs/master/mix.md, line: 23
# File: docs/master/mocking.md, line: 21
# File: docs/master/notifications.md, line: 49
# File: docs/master/packages.md, line: 19
# File: docs/master/pagination.md, line: 17
# File: docs/master/passport.md, line: 47
# File: docs/master/passwords.md, line: 12
# File: docs/master/providers.md, line: 11
# File: docs/master/queries.md, line: 35
# File: docs/master/queues.md, line: 45
# File: docs/master/redis.md, line: 14
# File: docs/master/requests.md, line: 23
# File: docs/master/sail.md, line: 25
# File: docs/master/sanctum.md, line: 25
# File: docs/master/scheduling.md, line: 20
# File: docs/master/scout.md, line: 28
# File: docs/master/seeding.md, line: 10
# File: docs/master/session.md, line: 18
# File: docs/master/socialite.md, line: 14
# File: docs/master/starter-kits.md, line: 9
# File: docs/master/structure.md, line: 31
# File: docs/master/telescope.md, line: 35
# File: docs/master/testing.md, line: 10
# File: docs/master/urls.md, line: 13
# File: docs/master/valet.md, line: 22
# File: docs/master/validation.md, line: 34
# File: docs/master/verification.md, line: 15
# File: docs/master/views.md, line: 15
#. type: Title ##
#: docs/8.x/queues.md:46
#, no-wrap
msgid "Introduction"
msgstr "簡介"

# File: docs/8.x/queues.md, line: 49
# File: docs/master/queues.md, line: 48
#. type: Plain text
#: docs/8.x/queues.md:49
msgid ""
"While building your web application, you may have some tasks, such as "
"parsing and storing an uploaded CSV file, that take too long to perform "
"during a typical web request. Thankfully, Laravel allows you to easily "
"create queued jobs that may be processed in the background. By moving time "
"intensive tasks to a queue, your application can respond to web requests "
"with blazing speed and provide a better user experience to your customers."
msgstr ""

# File: docs/8.x/queues.md, line: 51
# File: docs/master/queues.md, line: 50
#. type: Plain text
#: docs/8.x/queues.md:51
msgid ""
"Laravel queues provide a unified queueing API across a variety of different "
"queue backends, such as [Amazon SQS](https://aws.amazon.com/sqs/), [Redis]"
"(https://redis.io), or even a relational database."
msgstr ""

# File: docs/8.x/queues.md, line: 53
# File: docs/master/queues.md, line: 52
#. type: Plain text
#: docs/8.x/queues.md:53
msgid ""
"Laravel's queue configuration options are stored in your application's "
"`config/queue.php` configuration file. In this file, you will find "
"connection configurations for each of the queue drivers that are included "
"with the framework, including the database, [Amazon SQS](https://aws.amazon."
"com/sqs/), [Redis](https://redis.io), and [Beanstalkd](https://beanstalkd."
"github.io/) drivers, as well as a synchronous driver that will execute jobs "
"immediately (for use during local development). A `null` queue driver is "
"also included which discards queued jobs."
msgstr ""

# File: docs/8.x/queues.md, line: 55
# File: docs/master/queues.md, line: 54
#. type: Plain text
#: docs/8.x/queues.md:55
#, no-wrap
msgid "> {tip} Laravel now offers Horizon, a beautiful dashboard and configuration system for your Redis powered queues. Check out the full [Horizon documentation](/docs/{{version}}/horizon) for more information.\n"
msgstr ""

# File: docs/8.x/queues.md, line: 57
# File: docs/master/queues.md, line: 56
#. type: Plain text
#: docs/8.x/queues.md:57
#, no-wrap
msgid "<a name=\"connections-vs-queues\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 57
# File: docs/master/queues.md, line: 56
#. type: Title ###
#: docs/8.x/queues.md:57
#, no-wrap
msgid "Connections Vs. Queues"
msgstr ""

# File: docs/8.x/queues.md, line: 60
# File: docs/master/queues.md, line: 59
#. type: Plain text
#: docs/8.x/queues.md:60
msgid ""
"Before getting started with Laravel queues, it is important to understand "
"the distinction between \"connections\" and \"queues\". In your `config/"
"queue.php` configuration file, there is a `connections` configuration array. "
"This option defines the connections to backend queue services such as Amazon "
"SQS, Beanstalk, or Redis. However, any given queue connection may have "
"multiple \"queues\" which may be thought of as different stacks or piles of "
"queued jobs."
msgstr ""

# File: docs/8.x/queues.md, line: 62
# File: docs/master/queues.md, line: 61
#. type: Plain text
#: docs/8.x/queues.md:62
msgid ""
"Note that each connection configuration example in the `queue` configuration "
"file contains a `queue` attribute. This is the default queue that jobs will "
"be dispatched to when they are sent to a given connection. In other words, "
"if you dispatch a job without explicitly defining which queue it should be "
"dispatched to, the job will be placed on the queue that is defined in the "
"`queue` attribute of the connection configuration:"
msgstr ""

# File: docs/8.x/queues.md, line: 64
# File: docs/8.x/queues.md, line: 703
# File: docs/master/queues.md, line: 63
# File: docs/master/queues.md, line: 641
#. type: Plain text
#: docs/8.x/queues.md:64 docs/8.x/queues.md:703
#, no-wrap
msgid "    use App\\Jobs\\ProcessPodcast;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 67
# File: docs/master/queues.md, line: 66
#. type: Plain text
#: docs/8.x/queues.md:67
#, no-wrap
msgid ""
"    // This job is sent to the default connection's default queue...\n"
"    ProcessPodcast::dispatch();\n"
msgstr ""

# File: docs/8.x/queues.md, line: 70
# File: docs/master/queues.md, line: 69
#. type: Plain text
#: docs/8.x/queues.md:70
#, no-wrap
msgid ""
"    // This job is sent to the default connection's \"emails\" queue...\n"
"    ProcessPodcast::dispatch()->onQueue('emails');\n"
msgstr ""

# File: docs/8.x/queues.md, line: 72
# File: docs/master/queues.md, line: 71
#. type: Plain text
#: docs/8.x/queues.md:72
msgid ""
"Some applications may not need to ever push jobs onto multiple queues, "
"instead preferring to have one simple queue. However, pushing jobs to "
"multiple queues can be especially useful for applications that wish to "
"prioritize or segment how jobs are processed, since the Laravel queue worker "
"allows you to specify which queues it should process by priority. For "
"example, if you push jobs to a `high` queue, you may run a worker that gives "
"them higher processing priority:"
msgstr ""

# File: docs/8.x/queues.md, line: 74
# File: docs/master/queues.md, line: 73
#. type: Plain text
#: docs/8.x/queues.md:74
#, no-wrap
msgid "    php artisan queue:work --queue=high,default\n"
msgstr ""

# File: docs/8.x/cache.md, line: 40
# File: docs/8.x/filesystem.md, line: 67
# File: docs/8.x/mail.md, line: 40
# File: docs/8.x/queues.md, line: 76
# File: docs/8.x/scout.md, line: 60
# File: docs/8.x/session.md, line: 43
# File: docs/master/cache.md, line: 40
# File: docs/master/filesystem.md, line: 67
# File: docs/master/mail.md, line: 40
# File: docs/master/queues.md, line: 75
# File: docs/master/scout.md, line: 60
# File: docs/master/session.md, line: 43
#. type: Plain text
#: docs/8.x/queues.md:76
#, no-wrap
msgid "<a name=\"driver-prerequisites\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 76
# File: docs/master/queues.md, line: 75
#. type: Title ###
#: docs/8.x/queues.md:76
#, no-wrap
msgid "Driver Notes & Prerequisites"
msgstr ""

# File: docs/8.x/queues.md, line: 79
# File: docs/8.x/session.md, line: 46
# File: docs/8.x/upgrade.md, line: 89
# File: docs/8.x/valet.md, line: 101
# File: docs/master/queues.md, line: 78
# File: docs/master/session.md, line: 46
# File: docs/master/upgrade.md, line: 89
# File: docs/master/valet.md, line: 101
#. type: Plain text
#: docs/8.x/queues.md:79
#, no-wrap
msgid "<a name=\"database\"></a>\n"
msgstr ""

# File: docs/8.x/cache.md, line: 43
# File: docs/8.x/cache.md, line: 304
# File: docs/8.x/queues.md, line: 79
# File: docs/8.x/session.md, line: 46
# File: docs/8.x/upgrade.md, line: 89
# File: docs/8.x/valet.md, line: 101
# File: docs/master/cache.md, line: 43
# File: docs/master/cache.md, line: 297
# File: docs/master/queues.md, line: 78
# File: docs/master/session.md, line: 46
# File: docs/master/upgrade.md, line: 89
# File: docs/master/valet.md, line: 101
#. type: Title ####
#: docs/8.x/queues.md:79
#, no-wrap
msgid "Database"
msgstr ""

# File: docs/8.x/queues.md, line: 82
# File: docs/master/queues.md, line: 81
#. type: Plain text
#: docs/8.x/queues.md:82
msgid ""
"In order to use the `database` queue driver, you will need a database table "
"to hold the jobs. To generate a migration that creates this table, run the "
"`queue:table` Artisan command. Once the migration has been created, you may "
"migrate your database using the `migrate` command:"
msgstr ""

# File: docs/8.x/queues.md, line: 84
# File: docs/master/queues.md, line: 83
#. type: Plain text
#: docs/8.x/queues.md:84
#, no-wrap
msgid "    php artisan queue:table\n"
msgstr ""

# File: docs/8.x/billing.md, line: 89
# File: docs/8.x/cashier-paddle.md, line: 80
# File: docs/8.x/migrations.md, line: 130
# File: docs/8.x/notifications.md, line: 661
# File: docs/8.x/passport.md, line: 70
# File: docs/8.x/passwords.md, line: 32
# File: docs/8.x/queues.md, line: 86
# File: docs/8.x/queues.md, line: 1072
# File: docs/8.x/queues.md, line: 1542
# File: docs/8.x/sanctum.md, line: 66
# File: docs/8.x/session.md, line: 64
# File: docs/8.x/telescope.md, line: 53
# File: docs/8.x/telescope.md, line: 69
# File: docs/8.x/verification.md, line: 55
# File: docs/master/billing.md, line: 87
# File: docs/master/cashier-paddle.md, line: 71
# File: docs/master/migrations.md, line: 108
# File: docs/master/notifications.md, line: 633
# File: docs/master/passport.md, line: 70
# File: docs/master/passwords.md, line: 31
# File: docs/master/queues.md, line: 85
# File: docs/master/queues.md, line: 1010
# File: docs/master/queues.md, line: 1480
# File: docs/master/sanctum.md, line: 66
# File: docs/master/session.md, line: 64
# File: docs/master/telescope.md, line: 53
# File: docs/master/telescope.md, line: 69
# File: docs/master/verification.md, line: 55
#. type: Plain text
#: docs/8.x/queues.md:86 docs/8.x/queues.md:1072 docs/8.x/queues.md:1542
#, no-wrap
msgid "    php artisan migrate\n"
msgstr ""

# File: docs/8.x/cache.md, line: 81
# File: docs/8.x/queues.md, line: 88
# File: docs/8.x/sail.md, line: 183
# File: docs/8.x/session.md, line: 66
# File: docs/master/cache.md, line: 81
# File: docs/master/queues.md, line: 87
# File: docs/master/sail.md, line: 182
# File: docs/master/session.md, line: 66
#. type: Plain text
#: docs/8.x/queues.md:88
#, no-wrap
msgid "<a name=\"redis\"></a>\n"
msgstr ""

# File: docs/8.x/cache.md, line: 81
# File: docs/8.x/queues.md, line: 88
# File: docs/8.x/redis.md, line: 1
# File: docs/8.x/sail.md, line: 183
# File: docs/8.x/session.md, line: 66
# File: docs/master/cache.md, line: 81
# File: docs/master/queues.md, line: 87
# File: docs/master/redis.md, line: 1
# File: docs/master/sail.md, line: 182
# File: docs/master/session.md, line: 66
#. type: Title ####
#: docs/8.x/queues.md:88
#, no-wrap
msgid "Redis"
msgstr ""

# File: docs/8.x/queues.md, line: 91
# File: docs/master/queues.md, line: 90
#. type: Plain text
#: docs/8.x/queues.md:91
msgid ""
"In order to use the `redis` queue driver, you should configure a Redis "
"database connection in your `config/database.php` configuration file."
msgstr ""

# File: docs/8.x/queues.md, line: 93
# File: docs/master/queues.md, line: 92
#. type: Plain text
#: docs/8.x/queues.md:93
#, no-wrap
msgid "**Redis Cluster**\n"
msgstr ""

# File: docs/8.x/queues.md, line: 95
# File: docs/master/queues.md, line: 94
#. type: Plain text
#: docs/8.x/queues.md:95
msgid ""
"If your Redis queue connection uses a Redis Cluster, your queue names must "
"contain a [key hash tag](https://redis.io/topics/cluster-spec#keys-hash-"
"tags). This is required in order to ensure all of the Redis keys for a given "
"queue are placed into the same hash slot:"
msgstr ""

# File: docs/8.x/queues.md, line: 102
# File: docs/master/queues.md, line: 101
#. type: Plain text
#: docs/8.x/queues.md:102
#, no-wrap
msgid ""
"    'redis' => [\n"
"        'driver' => 'redis',\n"
"        'connection' => 'default',\n"
"        'queue' => '{default}',\n"
"        'retry_after' => 90,\n"
"    ],\n"
msgstr ""

# File: docs/8.x/queues.md, line: 104
# File: docs/master/queues.md, line: 103
#. type: Plain text
#: docs/8.x/queues.md:104
#, no-wrap
msgid "**Blocking**\n"
msgstr ""

# File: docs/8.x/queues.md, line: 106
# File: docs/master/queues.md, line: 105
#. type: Plain text
#: docs/8.x/queues.md:106
msgid ""
"When using the Redis queue, you may use the `block_for` configuration option "
"to specify how long the driver should wait for a job to become available "
"before iterating through the worker loop and re-polling the Redis database."
msgstr ""

# File: docs/8.x/queues.md, line: 108
# File: docs/master/queues.md, line: 107
#. type: Plain text
#: docs/8.x/queues.md:108
msgid ""
"Adjusting this value based on your queue load can be more efficient than "
"continually polling the Redis database for new jobs. For instance, you may "
"set the value to `5` to indicate that the driver should block for five "
"seconds while waiting for a job to become available:"
msgstr ""

# File: docs/8.x/queues.md, line: 116
# File: docs/master/queues.md, line: 115
#. type: Plain text
#: docs/8.x/queues.md:116
#, no-wrap
msgid ""
"    'redis' => [\n"
"        'driver' => 'redis',\n"
"        'connection' => 'default',\n"
"        'queue' => 'default',\n"
"        'retry_after' => 90,\n"
"        'block_for' => 5,\n"
"    ],\n"
msgstr ""

# File: docs/8.x/queues.md, line: 118
# File: docs/master/queues.md, line: 117
#. type: Plain text
#: docs/8.x/queues.md:118
#, no-wrap
msgid "> {note} Setting `block_for` to `0` will cause queue workers to block indefinitely until a job is available. This will also prevent signals such as `SIGTERM` from being handled until the next job has been processed.\n"
msgstr ""

# File: docs/8.x/queues.md, line: 120
# File: docs/master/queues.md, line: 119
#. type: Plain text
#: docs/8.x/queues.md:120
#, no-wrap
msgid "<a name=\"other-driver-prerequisites\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 120
# File: docs/master/queues.md, line: 119
#. type: Title ####
#: docs/8.x/queues.md:120
#, no-wrap
msgid "Other Driver Prerequisites"
msgstr ""

# File: docs/8.x/queues.md, line: 123
# File: docs/master/queues.md, line: 122
#. type: Plain text
#: docs/8.x/queues.md:123
msgid ""
"The following dependencies are needed for the listed queue drivers. These "
"dependencies may be installed via the Composer package manager:"
msgstr ""

# File: docs/8.x/queues.md, line: 129
# File: docs/master/queues.md, line: 128
#. type: Plain text
#: docs/8.x/queues.md:129
#, no-wrap
msgid ""
"<div class=\"content-list\" markdown=\"1\">\n"
"- Amazon SQS: `aws/aws-sdk-php ~3.0`\n"
"- Beanstalkd: `pda/pheanstalk ~4.0`\n"
"- Redis: `predis/predis ~1.0` or phpredis PHP extension\n"
"</div>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 131
# File: docs/master/queues.md, line: 130
#. type: Plain text
#: docs/8.x/queues.md:131
#, no-wrap
msgid "<a name=\"creating-jobs\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 131
# File: docs/master/queues.md, line: 130
#. type: Title ##
#: docs/8.x/queues.md:131
#, no-wrap
msgid "Creating Jobs"
msgstr ""

# File: docs/8.x/queues.md, line: 134
# File: docs/master/queues.md, line: 133
#. type: Plain text
#: docs/8.x/queues.md:134
#, no-wrap
msgid "<a name=\"generating-job-classes\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 134
# File: docs/master/queues.md, line: 133
#. type: Title ###
#: docs/8.x/queues.md:134
#, no-wrap
msgid "Generating Job Classes"
msgstr ""

# File: docs/8.x/queues.md, line: 137
# File: docs/master/queues.md, line: 136
#. type: Plain text
#: docs/8.x/queues.md:137
msgid ""
"By default, all of the queueable jobs for your application are stored in the "
"`app/Jobs` directory. If the `app/Jobs` directory doesn't exist, it will be "
"created when you run the `make:job` Artisan command:"
msgstr ""

# File: docs/8.x/queues.md, line: 139
# File: docs/master/queues.md, line: 138
#. type: Plain text
#: docs/8.x/queues.md:139
#, no-wrap
msgid "    php artisan make:job ProcessPodcast\n"
msgstr ""

# File: docs/8.x/queues.md, line: 141
# File: docs/master/queues.md, line: 140
#. type: Plain text
#: docs/8.x/queues.md:141
msgid ""
"The generated class will implement the `Illuminate\\Contracts\\Queue"
"\\ShouldQueue` interface, indicating to Laravel that the job should be "
"pushed onto the queue to run asynchronously."
msgstr ""

# File: docs/8.x/queues.md, line: 143
#. type: Plain text
#: docs/8.x/queues.md:143
#, no-wrap
msgid "> {tip} Job stubs may be customized using [stub publishing](/docs/{{version}}/artisan#stub-customization).\n"
msgstr ""

# File: docs/8.x/queues.md, line: 145
# File: docs/master/queues.md, line: 144
#. type: Plain text
#: docs/8.x/queues.md:145
#, no-wrap
msgid "<a name=\"class-structure\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 145
# File: docs/master/queues.md, line: 144
#. type: Title ###
#: docs/8.x/queues.md:145
#, no-wrap
msgid "Class Structure"
msgstr ""

# File: docs/8.x/queues.md, line: 148
# File: docs/master/queues.md, line: 147
#. type: Plain text
#: docs/8.x/queues.md:148
msgid ""
"Job classes are very simple, normally containing only a `handle` method that "
"is invoked when the job is processed by the queue. To get started, let's "
"take a look at an example job class. In this example, we'll pretend we "
"manage a podcast publishing service and need to process the uploaded podcast "
"files before they are published:"
msgstr ""

# File: docs/8.x/artisan.md, line: 107
# File: docs/8.x/authentication.md, line: 144
# File: docs/8.x/authentication.md, line: 225
# File: docs/8.x/authentication.md, line: 363
# File: docs/8.x/authentication.md, line: 506
# File: docs/8.x/authentication.md, line: 580
# File: docs/8.x/authentication.md, line: 631
# File: docs/8.x/authentication.md, line: 659
# File: docs/8.x/authorization.md, line: 87
# File: docs/8.x/authorization.md, line: 246
# File: docs/8.x/authorization.md, line: 304
# File: docs/8.x/authorization.md, line: 394
# File: docs/8.x/authorization.md, line: 449
# File: docs/8.x/authorization.md, line: 483
# File: docs/8.x/authorization.md, line: 516
# File: docs/8.x/authorization.md, line: 573
# File: docs/8.x/billing.md, line: 534
# File: docs/8.x/billing.md, line: 1196
# File: docs/8.x/blade.md, line: 95
# File: docs/8.x/blade.md, line: 526
# File: docs/8.x/blade.md, line: 689
# File: docs/8.x/blade.md, line: 1252
# File: docs/8.x/broadcasting.md, line: 238
# File: docs/8.x/broadcasting.md, line: 306
# File: docs/8.x/broadcasting.md, line: 420
# File: docs/8.x/broadcasting.md, line: 451
# File: docs/8.x/broadcasting.md, line: 544
# File: docs/8.x/cache.md, line: 103
# File: docs/8.x/cache.md, line: 389
# File: docs/8.x/cache.md, line: 422
# File: docs/8.x/cashier-paddle.md, line: 526
# File: docs/8.x/cashier-paddle.md, line: 944
# File: docs/8.x/cashier-paddle.md, line: 1138
# File: docs/8.x/container.md, line: 28
# File: docs/8.x/container.md, line: 79
# File: docs/8.x/container.md, line: 240
# File: docs/8.x/container.md, line: 383
# File: docs/8.x/contracts.md, line: 42
# File: docs/8.x/controllers.md, line: 32
# File: docs/8.x/controllers.md, line: 70
# File: docs/8.x/controllers.md, line: 356
# File: docs/8.x/controllers.md, line: 386
# File: docs/8.x/controllers.md, line: 416
# File: docs/8.x/csrf.md, line: 74
# File: docs/8.x/database-testing.md, line: 34
# File: docs/8.x/database-testing.md, line: 529
# File: docs/8.x/database-testing.md, line: 561
# File: docs/8.x/database.md, line: 116
# File: docs/8.x/database.md, line: 230
# File: docs/8.x/dusk.md, line: 140
# File: docs/8.x/dusk.md, line: 218
# File: docs/8.x/dusk.md, line: 323
# File: docs/8.x/dusk.md, line: 1561
# File: docs/8.x/dusk.md, line: 1608
# File: docs/8.x/dusk.md, line: 1682
# File: docs/8.x/eloquent-collections.md, line: 198
# File: docs/8.x/eloquent-mutators.md, line: 34
# File: docs/8.x/eloquent-mutators.md, line: 83
# File: docs/8.x/eloquent-mutators.md, line: 142
# File: docs/8.x/eloquent-mutators.md, line: 175
# File: docs/8.x/eloquent-mutators.md, line: 319
# File: docs/8.x/eloquent-mutators.md, line: 358
# File: docs/8.x/eloquent-mutators.md, line: 384
# File: docs/8.x/eloquent-mutators.md, line: 471
# File: docs/8.x/eloquent-mutators.md, line: 541
# File: docs/8.x/eloquent-mutators.md, line: 575
# File: docs/8.x/eloquent-relationships.md, line: 70
# File: docs/8.x/eloquent-relationships.md, line: 104
# File: docs/8.x/eloquent-relationships.md, line: 148
# File: docs/8.x/eloquent-relationships.md, line: 194
# File: docs/8.x/eloquent-relationships.md, line: 301
# File: docs/8.x/eloquent-relationships.md, line: 364
# File: docs/8.x/eloquent-relationships.md, line: 434
# File: docs/8.x/eloquent-relationships.md, line: 478
# File: docs/8.x/eloquent-relationships.md, line: 562
# File: docs/8.x/eloquent-relationships.md, line: 581
# File: docs/8.x/eloquent-relationships.md, line: 640
# File: docs/8.x/eloquent-relationships.md, line: 742
# File: docs/8.x/eloquent-relationships.md, line: 838
# File: docs/8.x/eloquent-relationships.md, line: 862
# File: docs/8.x/eloquent-relationships.md, line: 963
# File: docs/8.x/eloquent-relationships.md, line: 1276
# File: docs/8.x/eloquent-relationships.md, line: 1340
# File: docs/8.x/eloquent-relationships.md, line: 1384
# File: docs/8.x/eloquent-relationships.md, line: 1482
# File: docs/8.x/eloquent-relationships.md, line: 1680
# File: docs/8.x/eloquent-resources.md, line: 48
# File: docs/8.x/eloquent-resources.md, line: 103
# File: docs/8.x/eloquent-resources.md, line: 142
# File: docs/8.x/eloquent-resources.md, line: 174
# File: docs/8.x/eloquent-resources.md, line: 197
# File: docs/8.x/eloquent-resources.md, line: 273
# File: docs/8.x/eloquent-resources.md, line: 329
# File: docs/8.x/eloquent-resources.md, line: 347
# File: docs/8.x/eloquent-resources.md, line: 386
# File: docs/8.x/eloquent-resources.md, line: 652
# File: docs/8.x/eloquent-resources.md, line: 722
# File: docs/8.x/eloquent-serialization.md, line: 78
# File: docs/8.x/eloquent-serialization.md, line: 98
# File: docs/8.x/eloquent-serialization.md, line: 130
# File: docs/8.x/eloquent-serialization.md, line: 151
# File: docs/8.x/eloquent.md, line: 81
# File: docs/8.x/eloquent.md, line: 99
# File: docs/8.x/eloquent.md, line: 120
# File: docs/8.x/eloquent.md, line: 138
# File: docs/8.x/eloquent.md, line: 152
# File: docs/8.x/eloquent.md, line: 174
# File: docs/8.x/eloquent.md, line: 192
# File: docs/8.x/eloquent.md, line: 210
# File: docs/8.x/eloquent.md, line: 223
# File: docs/8.x/eloquent.md, line: 244
# File: docs/8.x/eloquent.md, line: 531
# File: docs/8.x/eloquent.md, line: 673
# File: docs/8.x/eloquent.md, line: 788
# File: docs/8.x/eloquent.md, line: 914
# File: docs/8.x/eloquent.md, line: 944
# File: docs/8.x/eloquent.md, line: 975
# File: docs/8.x/eloquent.md, line: 1025
# File: docs/8.x/eloquent.md, line: 1080
# File: docs/8.x/eloquent.md, line: 1133
# File: docs/8.x/eloquent.md, line: 1165
# File: docs/8.x/eloquent.md, line: 1206
# File: docs/8.x/eloquent.md, line: 1279
# File: docs/8.x/encryption.md, line: 26
# File: docs/8.x/errors.md, line: 84
# File: docs/8.x/errors.md, line: 165
# File: docs/8.x/events.md, line: 195
# File: docs/8.x/events.md, line: 234
# File: docs/8.x/events.md, line: 278
# File: docs/8.x/events.md, line: 297
# File: docs/8.x/events.md, line: 345
# File: docs/8.x/events.md, line: 382
# File: docs/8.x/events.md, line: 415
# File: docs/8.x/events.md, line: 436
# File: docs/8.x/events.md, line: 479
# File: docs/8.x/events.md, line: 516
# File: docs/8.x/events.md, line: 553
# File: docs/8.x/events.md, line: 594
# File: docs/8.x/facades.md, line: 133
# File: docs/8.x/facades.md, line: 177
# File: docs/8.x/facades.md, line: 202
# File: docs/8.x/facades.md, line: 226
# File: docs/8.x/filesystem.md, line: 308
# File: docs/8.x/filesystem.md, line: 494
# File: docs/8.x/hashing.md, line: 33
# File: docs/8.x/horizon.md, line: 237
# File: docs/8.x/http-tests.md, line: 24
# File: docs/8.x/http-tests.md, line: 56
# File: docs/8.x/http-tests.md, line: 86
# File: docs/8.x/http-tests.md, line: 114
# File: docs/8.x/http-tests.md, line: 138
# File: docs/8.x/http-tests.md, line: 154
# File: docs/8.x/http-tests.md, line: 182
# File: docs/8.x/http-tests.md, line: 214
# File: docs/8.x/http-tests.md, line: 250
# File: docs/8.x/http-tests.md, line: 280
# File: docs/8.x/http-tests.md, line: 422
# File: docs/8.x/http-tests.md, line: 478
# File: docs/8.x/localization.md, line: 90
# File: docs/8.x/logging.md, line: 147
# File: docs/8.x/logging.md, line: 213
# File: docs/8.x/logging.md, line: 291
# File: docs/8.x/mail.md, line: 201
# File: docs/8.x/mail.md, line: 254
# File: docs/8.x/mail.md, line: 545
# File: docs/8.x/middleware.md, line: 30
# File: docs/8.x/middleware.md, line: 67
# File: docs/8.x/middleware.md, line: 85
# File: docs/8.x/middleware.md, line: 237
# File: docs/8.x/middleware.md, line: 275
# File: docs/8.x/migrations.md, line: 69
# File: docs/8.x/migrations.md, line: 846
# File: docs/8.x/mocking.md, line: 80
# File: docs/8.x/mocking.md, line: 103
# File: docs/8.x/mocking.md, line: 154
# File: docs/8.x/mocking.md, line: 228
# File: docs/8.x/mocking.md, line: 306
# File: docs/8.x/mocking.md, line: 349
# File: docs/8.x/mocking.md, line: 410
# File: docs/8.x/mocking.md, line: 480
# File: docs/8.x/mocking.md, line: 551
# File: docs/8.x/notifications.md, line: 74
# File: docs/8.x/notifications.md, line: 130
# File: docs/8.x/notifications.md, line: 201
# File: docs/8.x/notifications.md, line: 339
# File: docs/8.x/notifications.md, line: 803
# File: docs/8.x/notifications.md, line: 927
# File: docs/8.x/notifications.md, line: 1094
# File: docs/8.x/notifications.md, line: 1197
# File: docs/8.x/notifications.md, line: 1222
# File: docs/8.x/pagination.md, line: 34
# File: docs/8.x/pagination.md, line: 211
# File: docs/8.x/passport.md, line: 80
# File: docs/8.x/passport.md, line: 96
# File: docs/8.x/passport.md, line: 408
# File: docs/8.x/passport.md, line: 692
# File: docs/8.x/passport.md, line: 721
# File: docs/8.x/providers.md, line: 40
# File: docs/8.x/providers.md, line: 69
# File: docs/8.x/providers.md, line: 107
# File: docs/8.x/providers.md, line: 171
# File: docs/8.x/queries.md, line: 53
# File: docs/8.x/queues.md, line: 150
# File: docs/8.x/queues.md, line: 239
# File: docs/8.x/queues.md, line: 253
# File: docs/8.x/queues.md, line: 293
# File: docs/8.x/queues.md, line: 357
# File: docs/8.x/queues.md, line: 561
# File: docs/8.x/queues.md, line: 599
# File: docs/8.x/queues.md, line: 652
# File: docs/8.x/queues.md, line: 774
# File: docs/8.x/queues.md, line: 803
# File: docs/8.x/queues.md, line: 833
# File: docs/8.x/queues.md, line: 868
# File: docs/8.x/queues.md, line: 909
# File: docs/8.x/queues.md, line: 945
# File: docs/8.x/queues.md, line: 1000
# File: docs/8.x/queues.md, line: 1079
# File: docs/8.x/queues.md, line: 1590
# File: docs/8.x/queues.md, line: 1697
# File: docs/8.x/queues.md, line: 1752
# File: docs/8.x/redis.md, line: 185
# File: docs/8.x/redis.md, line: 285
# File: docs/8.x/releases.md, line: 63
# File: docs/8.x/requests.md, line: 37
# File: docs/8.x/requests.md, line: 78
# File: docs/8.x/requests.md, line: 477
# File: docs/8.x/responses.md, line: 321
# File: docs/8.x/scheduling.md, line: 32
# File: docs/8.x/scout.md, line: 48
# File: docs/8.x/scout.md, line: 92
# File: docs/8.x/scout.md, line: 119
# File: docs/8.x/scout.md, line: 150
# File: docs/8.x/seeding.md, line: 28
# File: docs/8.x/session.md, line: 81
# File: docs/8.x/session.md, line: 269
# File: docs/8.x/session.md, line: 301
# File: docs/8.x/testing.md, line: 53
# File: docs/8.x/testing.md, line: 119
# File: docs/8.x/upgrade.md, line: 99
# File: docs/8.x/urls.md, line: 167
# File: docs/8.x/valet.md, line: 215
# File: docs/8.x/validation.md, line: 63
# File: docs/8.x/validation.md, line: 425
# File: docs/8.x/validation.md, line: 1428
# File: docs/8.x/verification.md, line: 27
# File: docs/8.x/views.md, line: 106
# File: docs/8.x/views.md, line: 144
# File: docs/8.x/views.md, line: 185
# File: docs/master/artisan.md, line: 107
# File: docs/master/authentication.md, line: 144
# File: docs/master/authentication.md, line: 225
# File: docs/master/authentication.md, line: 363
# File: docs/master/authentication.md, line: 506
# File: docs/master/authentication.md, line: 580
# File: docs/master/authentication.md, line: 631
# File: docs/master/authentication.md, line: 659
# File: docs/master/authorization.md, line: 87
# File: docs/master/authorization.md, line: 246
# File: docs/master/authorization.md, line: 304
# File: docs/master/authorization.md, line: 394
# File: docs/master/authorization.md, line: 449
# File: docs/master/authorization.md, line: 483
# File: docs/master/authorization.md, line: 516
# File: docs/master/authorization.md, line: 573
# File: docs/master/billing.md, line: 495
# File: docs/master/billing.md, line: 1069
# File: docs/master/blade.md, line: 94
# File: docs/master/blade.md, line: 716
# File: docs/master/blade.md, line: 1189
# File: docs/master/broadcasting.md, line: 238
# File: docs/master/broadcasting.md, line: 306
# File: docs/master/broadcasting.md, line: 420
# File: docs/master/broadcasting.md, line: 451
# File: docs/master/broadcasting.md, line: 544
# File: docs/master/cache.md, line: 96
# File: docs/master/cache.md, line: 382
# File: docs/master/cache.md, line: 415
# File: docs/master/cashier-paddle.md, line: 486
# File: docs/master/cashier-paddle.md, line: 904
# File: docs/master/cashier-paddle.md, line: 1098
# File: docs/master/container.md, line: 28
# File: docs/master/container.md, line: 79
# File: docs/master/container.md, line: 234
# File: docs/master/container.md, line: 377
# File: docs/master/contracts.md, line: 42
# File: docs/master/controllers.md, line: 32
# File: docs/master/controllers.md, line: 70
# File: docs/master/controllers.md, line: 343
# File: docs/master/controllers.md, line: 373
# File: docs/master/controllers.md, line: 403
# File: docs/master/csrf.md, line: 74
# File: docs/master/database-testing.md, line: 34
# File: docs/master/database-testing.md, line: 520
# File: docs/master/database-testing.md, line: 552
# File: docs/master/database.md, line: 116
# File: docs/master/database.md, line: 230
# File: docs/master/dusk.md, line: 140
# File: docs/master/dusk.md, line: 218
# File: docs/master/dusk.md, line: 323
# File: docs/master/dusk.md, line: 1553
# File: docs/master/dusk.md, line: 1600
# File: docs/master/dusk.md, line: 1674
# File: docs/master/eloquent-collections.md, line: 198
# File: docs/master/eloquent-mutators.md, line: 34
# File: docs/master/eloquent-mutators.md, line: 83
# File: docs/master/eloquent-mutators.md, line: 142
# File: docs/master/eloquent-mutators.md, line: 175
# File: docs/master/eloquent-mutators.md, line: 284
# File: docs/master/eloquent-mutators.md, line: 323
# File: docs/master/eloquent-mutators.md, line: 349
# File: docs/master/eloquent-mutators.md, line: 436
# File: docs/master/eloquent-mutators.md, line: 506
# File: docs/master/eloquent-mutators.md, line: 540
# File: docs/master/eloquent-relationships.md, line: 70
# File: docs/master/eloquent-relationships.md, line: 104
# File: docs/master/eloquent-relationships.md, line: 148
# File: docs/master/eloquent-relationships.md, line: 194
# File: docs/master/eloquent-relationships.md, line: 301
# File: docs/master/eloquent-relationships.md, line: 364
# File: docs/master/eloquent-relationships.md, line: 434
# File: docs/master/eloquent-relationships.md, line: 478
# File: docs/master/eloquent-relationships.md, line: 562
# File: docs/master/eloquent-relationships.md, line: 581
# File: docs/master/eloquent-relationships.md, line: 640
# File: docs/master/eloquent-relationships.md, line: 742
# File: docs/master/eloquent-relationships.md, line: 838
# File: docs/master/eloquent-relationships.md, line: 862
# File: docs/master/eloquent-relationships.md, line: 963
# File: docs/master/eloquent-relationships.md, line: 1276
# File: docs/master/eloquent-relationships.md, line: 1340
# File: docs/master/eloquent-relationships.md, line: 1384
# File: docs/master/eloquent-relationships.md, line: 1482
# File: docs/master/eloquent-relationships.md, line: 1680
# File: docs/master/eloquent-resources.md, line: 48
# File: docs/master/eloquent-resources.md, line: 103
# File: docs/master/eloquent-resources.md, line: 142
# File: docs/master/eloquent-resources.md, line: 174
# File: docs/master/eloquent-resources.md, line: 197
# File: docs/master/eloquent-resources.md, line: 273
# File: docs/master/eloquent-resources.md, line: 329
# File: docs/master/eloquent-resources.md, line: 347
# File: docs/master/eloquent-resources.md, line: 386
# File: docs/master/eloquent-resources.md, line: 652
# File: docs/master/eloquent-resources.md, line: 722
# File: docs/master/eloquent-serialization.md, line: 78
# File: docs/master/eloquent-serialization.md, line: 98
# File: docs/master/eloquent-serialization.md, line: 130
# File: docs/master/eloquent-serialization.md, line: 151
# File: docs/master/eloquent.md, line: 80
# File: docs/master/eloquent.md, line: 98
# File: docs/master/eloquent.md, line: 119
# File: docs/master/eloquent.md, line: 137
# File: docs/master/eloquent.md, line: 151
# File: docs/master/eloquent.md, line: 173
# File: docs/master/eloquent.md, line: 191
# File: docs/master/eloquent.md, line: 209
# File: docs/master/eloquent.md, line: 222
# File: docs/master/eloquent.md, line: 243
# File: docs/master/eloquent.md, line: 493
# File: docs/master/eloquent.md, line: 635
# File: docs/master/eloquent.md, line: 746
# File: docs/master/eloquent.md, line: 872
# File: docs/master/eloquent.md, line: 902
# File: docs/master/eloquent.md, line: 933
# File: docs/master/eloquent.md, line: 983
# File: docs/master/eloquent.md, line: 1038
# File: docs/master/eloquent.md, line: 1087
# File: docs/master/eloquent.md, line: 1119
# File: docs/master/eloquent.md, line: 1160
# File: docs/master/encryption.md, line: 26
# File: docs/master/errors.md, line: 139
# File: docs/master/events.md, line: 195
# File: docs/master/events.md, line: 234
# File: docs/master/events.md, line: 278
# File: docs/master/events.md, line: 297
# File: docs/master/events.md, line: 345
# File: docs/master/events.md, line: 382
# File: docs/master/events.md, line: 415
# File: docs/master/events.md, line: 436
# File: docs/master/events.md, line: 479
# File: docs/master/events.md, line: 516
# File: docs/master/events.md, line: 553
# File: docs/master/events.md, line: 594
# File: docs/master/facades.md, line: 132
# File: docs/master/facades.md, line: 176
# File: docs/master/facades.md, line: 201
# File: docs/master/facades.md, line: 225
# File: docs/master/filesystem.md, line: 308
# File: docs/master/filesystem.md, line: 494
# File: docs/master/hashing.md, line: 33
# File: docs/master/horizon.md, line: 237
# File: docs/master/http-tests.md, line: 23
# File: docs/master/http-tests.md, line: 55
# File: docs/master/http-tests.md, line: 85
# File: docs/master/http-tests.md, line: 113
# File: docs/master/http-tests.md, line: 137
# File: docs/master/http-tests.md, line: 153
# File: docs/master/http-tests.md, line: 181
# File: docs/master/http-tests.md, line: 213
# File: docs/master/http-tests.md, line: 249
# File: docs/master/http-tests.md, line: 279
# File: docs/master/http-tests.md, line: 307
# File: docs/master/http-tests.md, line: 363
# File: docs/master/localization.md, line: 90
# File: docs/master/logging.md, line: 147
# File: docs/master/logging.md, line: 213
# File: docs/master/logging.md, line: 291
# File: docs/master/mail.md, line: 201
# File: docs/master/mail.md, line: 254
# File: docs/master/mail.md, line: 545
# File: docs/master/middleware.md, line: 30
# File: docs/master/middleware.md, line: 67
# File: docs/master/middleware.md, line: 85
# File: docs/master/middleware.md, line: 237
# File: docs/master/middleware.md, line: 275
# File: docs/master/migrations.md, line: 69
# File: docs/master/migrations.md, line: 820
# File: docs/master/mocking.md, line: 80
# File: docs/master/mocking.md, line: 103
# File: docs/master/mocking.md, line: 154
# File: docs/master/mocking.md, line: 228
# File: docs/master/mocking.md, line: 299
# File: docs/master/mocking.md, line: 342
# File: docs/master/mocking.md, line: 403
# File: docs/master/mocking.md, line: 473
# File: docs/master/mocking.md, line: 544
# File: docs/master/notifications.md, line: 73
# File: docs/master/notifications.md, line: 129
# File: docs/master/notifications.md, line: 200
# File: docs/master/notifications.md, line: 354
# File: docs/master/notifications.md, line: 775
# File: docs/master/notifications.md, line: 899
# File: docs/master/notifications.md, line: 1066
# File: docs/master/notifications.md, line: 1169
# File: docs/master/notifications.md, line: 1194
# File: docs/master/pagination.md, line: 34
# File: docs/master/pagination.md, line: 211
# File: docs/master/passport.md, line: 80
# File: docs/master/passport.md, line: 96
# File: docs/master/passport.md, line: 406
# File: docs/master/passport.md, line: 690
# File: docs/master/passport.md, line: 719
# File: docs/master/providers.md, line: 40
# File: docs/master/providers.md, line: 69
# File: docs/master/providers.md, line: 107
# File: docs/master/providers.md, line: 171
# File: docs/master/queries.md, line: 52
# File: docs/master/queues.md, line: 149
# File: docs/master/queues.md, line: 238
# File: docs/master/queues.md, line: 252
# File: docs/master/queues.md, line: 292
# File: docs/master/queues.md, line: 356
# File: docs/master/queues.md, line: 499
# File: docs/master/queues.md, line: 537
# File: docs/master/queues.md, line: 590
# File: docs/master/queues.md, line: 712
# File: docs/master/queues.md, line: 741
# File: docs/master/queues.md, line: 771
# File: docs/master/queues.md, line: 806
# File: docs/master/queues.md, line: 847
# File: docs/master/queues.md, line: 883
# File: docs/master/queues.md, line: 938
# File: docs/master/queues.md, line: 1017
# File: docs/master/queues.md, line: 1528
# File: docs/master/queues.md, line: 1635
# File: docs/master/queues.md, line: 1690
# File: docs/master/redis.md, line: 185
# File: docs/master/redis.md, line: 285
# File: docs/master/releases.md, line: 63
# File: docs/master/requests.md, line: 36
# File: docs/master/requests.md, line: 77
# File: docs/master/requests.md, line: 472
# File: docs/master/responses.md, line: 321
# File: docs/master/scheduling.md, line: 32
# File: docs/master/scout.md, line: 48
# File: docs/master/scout.md, line: 87
# File: docs/master/scout.md, line: 114
# File: docs/master/scout.md, line: 145
# File: docs/master/seeding.md, line: 28
# File: docs/master/session.md, line: 81
# File: docs/master/session.md, line: 269
# File: docs/master/session.md, line: 301
# File: docs/master/testing.md, line: 53
# File: docs/master/testing.md, line: 117
# File: docs/master/upgrade.md, line: 99
# File: docs/master/urls.md, line: 167
# File: docs/master/valet.md, line: 215
# File: docs/master/validation.md, line: 63
# File: docs/master/validation.md, line: 412
# File: docs/master/validation.md, line: 1379
# File: docs/master/verification.md, line: 27
# File: docs/master/views.md, line: 106
# File: docs/master/views.md, line: 144
# File: docs/master/views.md, line: 185
#. type: Plain text
#: docs/8.x/queues.md:150 docs/8.x/queues.md:239 docs/8.x/queues.md:253
#: docs/8.x/queues.md:293 docs/8.x/queues.md:357 docs/8.x/queues.md:561
#: docs/8.x/queues.md:599 docs/8.x/queues.md:652 docs/8.x/queues.md:774
#: docs/8.x/queues.md:803 docs/8.x/queues.md:833 docs/8.x/queues.md:868
#: docs/8.x/queues.md:909 docs/8.x/queues.md:945 docs/8.x/queues.md:1000
#: docs/8.x/queues.md:1079 docs/8.x/queues.md:1590 docs/8.x/queues.md:1697
#: docs/8.x/queues.md:1752
#, no-wrap
msgid "    <?php\n"
msgstr "    <?php\n"

# File: docs/8.x/horizon.md, line: 239
# File: docs/8.x/queues.md, line: 152
# File: docs/8.x/queues.md, line: 805
# File: docs/8.x/queues.md, line: 870
# File: docs/8.x/queues.md, line: 911
# File: docs/8.x/queues.md, line: 947
# File: docs/8.x/queues.md, line: 1002
# File: docs/8.x/queues.md, line: 1081
# File: docs/8.x/queues.md, line: 1592
# File: docs/master/horizon.md, line: 239
# File: docs/master/queues.md, line: 151
# File: docs/master/queues.md, line: 743
# File: docs/master/queues.md, line: 808
# File: docs/master/queues.md, line: 849
# File: docs/master/queues.md, line: 885
# File: docs/master/queues.md, line: 940
# File: docs/master/queues.md, line: 1019
# File: docs/master/queues.md, line: 1530
#. type: Plain text
#: docs/8.x/queues.md:152 docs/8.x/queues.md:805 docs/8.x/queues.md:870
#: docs/8.x/queues.md:911 docs/8.x/queues.md:947 docs/8.x/queues.md:1002
#: docs/8.x/queues.md:1081 docs/8.x/queues.md:1592
#, no-wrap
msgid "    namespace App\\Jobs;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 160
# File: docs/master/queues.md, line: 159
#. type: Plain text
#: docs/8.x/queues.md:160
#, no-wrap
msgid ""
"    use App\\Models\\Podcast;\n"
"    use App\\Services\\AudioProcessor;\n"
"    use Illuminate\\Bus\\Queueable;\n"
"    use Illuminate\\Contracts\\Queue\\ShouldQueue;\n"
"    use Illuminate\\Foundation\\Bus\\Dispatchable;\n"
"    use Illuminate\\Queue\\InteractsWithQueue;\n"
"    use Illuminate\\Queue\\SerializesModels;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 164
# File: docs/8.x/queues.md, line: 815
# File: docs/8.x/queues.md, line: 880
# File: docs/master/queues.md, line: 163
# File: docs/master/queues.md, line: 753
# File: docs/master/queues.md, line: 818
#. type: Plain text
#: docs/8.x/queues.md:164 docs/8.x/queues.md:815 docs/8.x/queues.md:880
#, no-wrap
msgid ""
"    class ProcessPodcast implements ShouldQueue\n"
"    {\n"
"        use Dispatchable, InteractsWithQueue, Queueable, SerializesModels;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 171
# File: docs/master/queues.md, line: 170
#. type: Plain text
#: docs/8.x/queues.md:171
#, no-wrap
msgid ""
"        /**\n"
"         * The podcast instance.\n"
"         *\n"
"         * @var \\App\\Models\\Podcast\n"
"         */\n"
"        protected $podcast;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 182
# File: docs/master/queues.md, line: 181
#. type: Plain text
#: docs/8.x/queues.md:182
#, no-wrap
msgid ""
"        /**\n"
"         * Create a new job instance.\n"
"         *\n"
"         * @param  App\\Models\\Podcast  $podcast\n"
"         * @return void\n"
"         */\n"
"        public function __construct(Podcast $podcast)\n"
"        {\n"
"            $this->podcast = $podcast;\n"
"        }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 194
# File: docs/master/queues.md, line: 193
#. type: Plain text
#: docs/8.x/queues.md:194
#, no-wrap
msgid ""
"        /**\n"
"         * Execute the job.\n"
"         *\n"
"         * @param  App\\Services\\AudioProcessor  $processor\n"
"         * @return void\n"
"         */\n"
"        public function handle(AudioProcessor $processor)\n"
"        {\n"
"            // Process uploaded podcast...\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 196
# File: docs/master/queues.md, line: 195
#. type: Plain text
#: docs/8.x/queues.md:196
msgid ""
"In this example, note that we were able to pass an [Eloquent model](/docs/"
"{{version}}/eloquent) directly into the queued job's constructor. Because of "
"the `SerializesModels` trait that the job is using, Eloquent models and "
"their loaded relationships will be gracefully serialized and unserialized "
"when the job is processing."
msgstr ""

# File: docs/8.x/queues.md, line: 198
# File: docs/master/queues.md, line: 197
#. type: Plain text
#: docs/8.x/queues.md:198
msgid ""
"If your queued job accepts an Eloquent model in its constructor, only the "
"identifier for the model will be serialized onto the queue. When the job is "
"actually handled, the queue system will automatically re-retrieve the full "
"model instance and its loaded relationships from the database. This approach "
"to model serialization allows for much smaller job payloads to be sent to "
"your queue driver."
msgstr ""

# File: docs/8.x/queues.md, line: 200
# File: docs/master/queues.md, line: 199
#. type: Plain text
#: docs/8.x/queues.md:200
#, no-wrap
msgid "<a name=\"handle-method-dependency-injection\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 200
# File: docs/master/queues.md, line: 199
#. type: Title ####
#: docs/8.x/queues.md:200
#, no-wrap
msgid "`handle` Method Dependency Injection"
msgstr ""

# File: docs/8.x/queues.md, line: 203
# File: docs/master/queues.md, line: 202
#. type: Plain text
#: docs/8.x/queues.md:203
msgid ""
"The `handle` method is invoked when the job is processed by the queue. Note "
"that we are able to type-hint dependencies on the `handle` method of the "
"job. The Laravel [service container](/docs/{{version}}/container) "
"automatically injects these dependencies."
msgstr ""

# File: docs/8.x/queues.md, line: 205
# File: docs/master/queues.md, line: 204
#. type: Plain text
#: docs/8.x/queues.md:205
msgid ""
"If you would like to take total control over how the container injects "
"dependencies into the `handle` method, you may use the container's "
"`bindMethod` method. The `bindMethod` method accepts a callback which "
"receives the job and the container. Within the callback, you are free to "
"invoke the `handle` method however you wish. Typically, you should call this "
"method from the `boot` method of your `App\\Providers\\AppServiceProvider` "
"[service provider](/docs/{{version}}/providers):"
msgstr ""

# File: docs/8.x/queues.md, line: 208
# File: docs/master/queues.md, line: 207
#. type: Plain text
#: docs/8.x/queues.md:208
#, no-wrap
msgid ""
"    use App\\Jobs\\ProcessPodcast;\n"
"    use App\\Services\\AudioProcessor;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 212
# File: docs/master/queues.md, line: 211
#. type: Plain text
#: docs/8.x/queues.md:212
#, no-wrap
msgid ""
"    $this->app->bindMethod([ProcessPodcast::class, 'handle'], function ($job, $app) {\n"
"        return $job->handle($app->make(AudioProcessor::class));\n"
"    });\n"
msgstr ""

# File: docs/8.x/queues.md, line: 214
# File: docs/master/queues.md, line: 213
#. type: Plain text
#: docs/8.x/queues.md:214
#, no-wrap
msgid "> {note} Binary data, such as raw image contents, should be passed through the `base64_encode` function before being passed to a queued job. Otherwise, the job may not properly serialize to JSON when being placed on the queue.\n"
msgstr ""

# File: docs/8.x/queues.md, line: 216
# File: docs/master/queues.md, line: 215
#. type: Plain text
#: docs/8.x/queues.md:216
#, no-wrap
msgid "<a name=\"handling-relationships\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 216
# File: docs/master/queues.md, line: 215
#. type: Title ####
#: docs/8.x/queues.md:216
#, no-wrap
msgid "Handling Relationships"
msgstr ""

# File: docs/8.x/queues.md, line: 219
# File: docs/master/queues.md, line: 218
#. type: Plain text
#: docs/8.x/queues.md:219
msgid ""
"Because loaded relationships also get serialized, the serialized job string "
"can sometimes become quite large. To prevent relations from being "
"serialized, you can call the `withoutRelations` method on the model when "
"setting a property value. This method will return an instance of the model "
"without its loaded relationships:"
msgstr ""

# File: docs/8.x/queues.md, line: 230
# File: docs/master/queues.md, line: 229
#. type: Plain text
#: docs/8.x/queues.md:230
#, no-wrap
msgid ""
"    /**\n"
"     * Create a new job instance.\n"
"     *\n"
"     * @param  \\App\\Models\\Podcast  $podcast\n"
"     * @return void\n"
"     */\n"
"    public function __construct(Podcast $podcast)\n"
"    {\n"
"        $this->podcast = $podcast->withoutRelations();\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 232
# File: docs/master/queues.md, line: 231
#. type: Plain text
#: docs/8.x/queues.md:232
#, no-wrap
msgid "<a name=\"unique-jobs\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 232
# File: docs/master/queues.md, line: 231
#. type: Title ###
#: docs/8.x/queues.md:232
#, no-wrap
msgid "Unique Jobs"
msgstr ""

# File: docs/8.x/queues.md, line: 235
# File: docs/master/queues.md, line: 234
#. type: Plain text
#: docs/8.x/queues.md:235
#, no-wrap
msgid "> {note} Unique jobs require a cache driver that supports [locks](/docs/{{version}}/cache#atomic-locks). Currently, the `memcached`, `redis`, `dynamodb`, `database`, `file`, and `array` cache drivers support atomic locks. In addition, unique job constraints do not apply to jobs within batches.\n"
msgstr ""

# File: docs/8.x/queues.md, line: 237
# File: docs/master/queues.md, line: 236
#. type: Plain text
#: docs/8.x/queues.md:237
msgid ""
"Sometimes, you may want to ensure that only one instance of a specific job "
"is on the queue at any point in time. You may do so by implementing the "
"`ShouldBeUnique` interface on your job class. This interface does not "
"require you to define any additional methods on your class:"
msgstr ""

# File: docs/8.x/queues.md, line: 242
# File: docs/master/queues.md, line: 241
#. type: Plain text
#: docs/8.x/queues.md:242
#, no-wrap
msgid ""
"    use Illuminate\\Contracts\\Queue\\ShouldQueue;\n"
"    use Illuminate\\Contracts\\Queue\\ShouldBeUnique;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 247
# File: docs/master/queues.md, line: 246
#. type: Plain text
#: docs/8.x/queues.md:247
#, no-wrap
msgid ""
"    class UpdateSearchIndex implements ShouldQueue, ShouldBeUnique\n"
"    {\n"
"        ...\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 249
# File: docs/master/queues.md, line: 248
#. type: Plain text
#: docs/8.x/queues.md:249
msgid ""
"In the example above, the `UpdateSearchIndex` job is unique. So, the job "
"will not be dispatched if another instance of the job is already on the "
"queue and has not finished processing."
msgstr ""

# File: docs/8.x/queues.md, line: 251
# File: docs/master/queues.md, line: 250
#. type: Plain text
#: docs/8.x/queues.md:251
msgid ""
"In certain cases, you may want to define a specific \"key\" that makes the "
"job unique or you may want to specify a timeout beyond which the job no "
"longer stays unique. To accomplish this, you may define `uniqueId` and "
"`uniqueFor` properties or methods on your job class:"
msgstr ""

# File: docs/8.x/queues.md, line: 257
# File: docs/master/queues.md, line: 256
#. type: Plain text
#: docs/8.x/queues.md:257
#, no-wrap
msgid ""
"    use App\\Product;\n"
"    use Illuminate\\Contracts\\Queue\\ShouldQueue;\n"
"    use Illuminate\\Contracts\\Queue\\ShouldBeUnique;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 266
# File: docs/master/queues.md, line: 265
#. type: Plain text
#: docs/8.x/queues.md:266
#, no-wrap
msgid ""
"    class UpdateSearchIndex implements ShouldQueue, ShouldBeUnique\n"
"    {\n"
"        /**\n"
"         * The product instance.\n"
"         *\n"
"         * @var \\App\\Product\n"
"         */\n"
"        public $product;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 273
#. type: Plain text
#: docs/8.x/queues.md:273
#, no-wrap
msgid ""
"        /**\n"
"         * The number of seconds after which the job's unique lock will be released.\n"
"         *\n"
"         * @var int\n"
"         */\n"
"        public $uniqueFor = 3600;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 284
#. type: Plain text
#: docs/8.x/queues.md:284
#, no-wrap
msgid ""
"        /**\n"
"         * The unique ID of the job.\n"
"         *\n"
"         * @return string\n"
"         */\n"
"        public function uniqueId()\n"
"        {\n"
"            return $this->product->id;\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 286
# File: docs/master/queues.md, line: 285
#. type: Plain text
#: docs/8.x/queues.md:286
msgid ""
"In the example above, the `UpdateSearchIndex` job is unique by a product ID. "
"So, any new dispatches of the job with the same product ID will be ignored "
"until the existing job has completed processing. In addition, if the "
"existing job is not processed within one hour, the unique lock will be "
"released and another job with the same unique key can be dispatched to the "
"queue."
msgstr ""

# File: docs/8.x/queues.md, line: 288
# File: docs/master/queues.md, line: 287
#. type: Plain text
#: docs/8.x/queues.md:288
#, no-wrap
msgid "<a name=\"keeping-jobs-unique-until-processing-begins\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 288
# File: docs/master/queues.md, line: 287
#. type: Title ####
#: docs/8.x/queues.md:288
#, no-wrap
msgid "Keeping Jobs Unique Until Processing Begins"
msgstr ""

# File: docs/8.x/queues.md, line: 291
# File: docs/master/queues.md, line: 290
#. type: Plain text
#: docs/8.x/queues.md:291
msgid ""
"By default, unique jobs are \"unlocked\" after a job completes processing or "
"fails all of its retry attempts. However, there may be situations where you "
"would like your job to unlock immediately before it is processed. To "
"accomplish this, your job should implement the "
"`ShouldBeUniqueUntilProcessing` contract instead of the `ShouldBeUnique` "
"contract:"
msgstr ""

# File: docs/8.x/queues.md, line: 297
# File: docs/master/queues.md, line: 296
#. type: Plain text
#: docs/8.x/queues.md:297
#, no-wrap
msgid ""
"    use App\\Product;\n"
"    use Illuminate\\Contracts\\Queue\\ShouldQueue;\n"
"    use Illuminate\\Contracts\\Queue\\ShouldBeUniqueUntilProcessing;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 302
# File: docs/master/queues.md, line: 301
#. type: Plain text
#: docs/8.x/queues.md:302
#, no-wrap
msgid ""
"    class UpdateSearchIndex implements ShouldQueue, ShouldBeUniqueUntilProcessing\n"
"    {\n"
"        // ...\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 304
# File: docs/master/queues.md, line: 303
#. type: Plain text
#: docs/8.x/queues.md:304
#, no-wrap
msgid "<a name=\"unique-job-locks\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 304
# File: docs/master/queues.md, line: 303
#. type: Title ####
#: docs/8.x/queues.md:304
#, no-wrap
msgid "Unique Job Locks"
msgstr ""

# File: docs/8.x/queues.md, line: 307
# File: docs/master/queues.md, line: 306
#. type: Plain text
#: docs/8.x/queues.md:307
msgid ""
"Behind the scenes, when a `ShouldBeUnique` job is dispatched, Laravel "
"attempts to acquire a [lock](/docs/{{version}}/cache#atomic-locks) with the "
"`uniqueId` key. If the lock is not acquired, the job is not dispatched. This "
"lock is released when the job completes processing or fails all of its retry "
"attempts. By default, Laravel will use the default cache driver to obtain "
"this lock. However, if you wish to use another driver for acquiring the "
"lock, you may define a `uniqueVia` method that returns the cache driver that "
"should be used:"
msgstr ""

# File: docs/8.x/cache.md, line: 107
# File: docs/8.x/cache.md, line: 320
# File: docs/8.x/facades.md, line: 65
# File: docs/8.x/facades.md, line: 73
# File: docs/8.x/facades.md, line: 108
# File: docs/8.x/mocking.md, line: 84
# File: docs/8.x/mocking.md, line: 134
# File: docs/8.x/queues.md, line: 309
# File: docs/master/cache.md, line: 100
# File: docs/master/cache.md, line: 313
# File: docs/master/facades.md, line: 21
# File: docs/master/facades.md, line: 64
# File: docs/master/facades.md, line: 72
# File: docs/master/facades.md, line: 107
# File: docs/master/mocking.md, line: 84
# File: docs/master/mocking.md, line: 134
# File: docs/master/queues.md, line: 308
#. type: Plain text
#: docs/8.x/queues.md:309
#, no-wrap
msgid "    use Illuminate\\Support\\Facades\\Cache;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 313
# File: docs/master/queues.md, line: 312
#. type: Plain text
#: docs/8.x/queues.md:313
#, no-wrap
msgid ""
"    class UpdateSearchIndex implements ShouldQueue, ShouldBeUnique\n"
"    {\n"
"        ...\n"
msgstr ""

# File: docs/8.x/queues.md, line: 324
#. type: Plain text
#: docs/8.x/queues.md:324
#, no-wrap
msgid ""
"        /**\n"
"         * Get the cache driver for the unique job lock.\n"
"         *\n"
"         * @return \\Illuminate\\Contracts\\Cache\\Repository\n"
"         */\n"
"        public function uniqueVia()\n"
"        {\n"
"            return Cache::driver('redis');\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 326
# File: docs/master/queues.md, line: 325
#. type: Plain text
#: docs/8.x/queues.md:326
#, no-wrap
msgid "> {tip} If you only need to limit the concurrent processing of a job, use the [`WithoutOverlapping`](/docs/{{version}}/queues#preventing-job-overlaps) job middleware instead.\n"
msgstr ""

# File: docs/8.x/queues.md, line: 328
# File: docs/master/queues.md, line: 327
#. type: Plain text
#: docs/8.x/queues.md:328
#, no-wrap
msgid "<a name=\"job-middleware\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 328
# File: docs/master/queues.md, line: 327
#. type: Title ##
#: docs/8.x/queues.md:328
#, no-wrap
msgid "Job Middleware"
msgstr ""

# File: docs/8.x/queues.md, line: 331
# File: docs/master/queues.md, line: 330
#. type: Plain text
#: docs/8.x/queues.md:331
msgid ""
"Job middleware allow you to wrap custom logic around the execution of queued "
"jobs, reducing boilerplate in the jobs themselves. For example, consider the "
"following `handle` method which leverages Laravel's Redis rate limiting "
"features to allow only one job to process every five seconds:"
msgstr ""

# File: docs/8.x/queues.md, line: 333
# File: docs/8.x/queues.md, line: 361
# File: docs/8.x/queues.md, line: 949
# File: docs/8.x/redis.md, line: 210
# File: docs/8.x/redis.md, line: 236
# File: docs/8.x/redis.md, line: 270
# File: docs/8.x/redis.md, line: 323
# File: docs/master/queues.md, line: 332
# File: docs/master/queues.md, line: 360
# File: docs/master/queues.md, line: 887
# File: docs/master/redis.md, line: 210
# File: docs/master/redis.md, line: 236
# File: docs/master/redis.md, line: 270
# File: docs/master/redis.md, line: 323
#. type: Plain text
#: docs/8.x/queues.md:333 docs/8.x/queues.md:361 docs/8.x/queues.md:949
#, no-wrap
msgid "    use Illuminate\\Support\\Facades\\Redis;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 343
# File: docs/master/queues.md, line: 342
#. type: Plain text
#: docs/8.x/queues.md:343
#, no-wrap
msgid ""
"    /**\n"
"     * Execute the job.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function handle()\n"
"    {\n"
"        Redis::throttle('key')->block(0)->allow(1)->every(5)->then(function () {\n"
"            info('Lock obtained...');\n"
msgstr ""

# File: docs/8.x/queues.md, line: 347
# File: docs/master/queues.md, line: 346
#. type: Plain text
#: docs/8.x/queues.md:347
#, no-wrap
msgid ""
"            // Handle job...\n"
"        }, function () {\n"
"            // Could not obtain lock...\n"
msgstr ""

# File: docs/8.x/queues.md, line: 351
# File: docs/master/queues.md, line: 350
#. type: Plain text
#: docs/8.x/queues.md:351
#, no-wrap
msgid ""
"            return $this->release(5);\n"
"        });\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 353
# File: docs/master/queues.md, line: 352
#. type: Plain text
#: docs/8.x/queues.md:353
msgid ""
"While this code is valid, the implementation of the `handle` method becomes "
"noisy since it is cluttered with Redis rate limiting logic. In addition, "
"this rate limiting logic must be duplicated for any other jobs that we want "
"to rate limit."
msgstr ""

# File: docs/8.x/queues.md, line: 355
# File: docs/master/queues.md, line: 354
#. type: Plain text
#: docs/8.x/queues.md:355
msgid ""
"Instead of rate limiting in the handle method, we could define a job "
"middleware that handles rate limiting. Laravel does not have a default "
"location for job middleware, so you are welcome to place job middleware "
"anywhere in your application. In this example, we will place the middleware "
"in an `app/Jobs/Middleware` directory:"
msgstr ""

# File: docs/8.x/queues.md, line: 359
# File: docs/master/queues.md, line: 358
#. type: Plain text
#: docs/8.x/queues.md:359
#, no-wrap
msgid "    namespace App\\Jobs\\Middleware;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 377
# File: docs/master/queues.md, line: 376
#. type: Plain text
#: docs/8.x/queues.md:377
#, no-wrap
msgid ""
"    class RateLimited\n"
"    {\n"
"        /**\n"
"         * Process the queued job.\n"
"         *\n"
"         * @param  mixed  $job\n"
"         * @param  callable  $next\n"
"         * @return mixed\n"
"         */\n"
"        public function handle($job, $next)\n"
"        {\n"
"            Redis::throttle('key')\n"
"                    ->block(0)->allow(1)->every(5)\n"
"                    ->then(function () use ($job, $next) {\n"
"                        // Lock obtained...\n"
msgstr ""

# File: docs/8.x/queues.md, line: 381
# File: docs/master/queues.md, line: 380
#. type: Plain text
#: docs/8.x/queues.md:381
#, no-wrap
msgid ""
"                        $next($job);\n"
"                    }, function () use ($job) {\n"
"                        // Could not obtain lock...\n"
msgstr ""

# File: docs/8.x/queues.md, line: 386
# File: docs/master/queues.md, line: 385
#. type: Plain text
#: docs/8.x/queues.md:386
#, no-wrap
msgid ""
"                        $job->release(5);\n"
"                    });\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 388
# File: docs/master/queues.md, line: 387
#. type: Plain text
#: docs/8.x/queues.md:388
msgid ""
"As you can see, like [route middleware](/docs/{{version}}/middleware), job "
"middleware receive the job being processed and a callback that should be "
"invoked to continue processing the job."
msgstr ""

# File: docs/8.x/queues.md, line: 390
# File: docs/master/queues.md, line: 389
#. type: Plain text
#: docs/8.x/queues.md:390
msgid ""
"After creating job middleware, they may be attached to a job by returning "
"them from the job's `middleware` method. This method does not exist on jobs "
"scaffolded by the `make:job` Artisan command, so you will need to manually "
"add it to your job class:"
msgstr ""

# File: docs/8.x/queues.md, line: 392
# File: docs/master/queues.md, line: 391
#. type: Plain text
#: docs/8.x/queues.md:392
#, no-wrap
msgid "    use App\\Jobs\\Middleware\\RateLimited;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 402
# File: docs/master/queues.md, line: 401
#. type: Plain text
#: docs/8.x/queues.md:402
#, no-wrap
msgid ""
"    /**\n"
"     * Get the middleware the job should pass through.\n"
"     *\n"
"     * @return array\n"
"     */\n"
"    public function middleware()\n"
"    {\n"
"        return [new RateLimited];\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 404
# File: docs/8.x/routing.md, line: 539
# File: docs/master/queues.md, line: 403
# File: docs/master/routing.md, line: 538
#. type: Plain text
#: docs/8.x/queues.md:404
#, no-wrap
msgid "<a name=\"rate-limiting\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 404
# File: docs/8.x/routing.md, line: 539
# File: docs/master/queues.md, line: 403
# File: docs/master/routing.md, line: 538
#. type: Title ###
#: docs/8.x/queues.md:404
#, no-wrap
msgid "Rate Limiting"
msgstr ""

# File: docs/8.x/queues.md, line: 407
# File: docs/master/queues.md, line: 406
#. type: Plain text
#: docs/8.x/queues.md:407
msgid ""
"Although we just demonstrated how to write your own rate limiting job "
"middleware, Laravel actually includes a rate limiting middleware that you "
"may utilize to rate limit jobs. Like [route rate limiters](/docs/{{version}}/"
"routing#defining-rate-limiters), job rate limiters are defined using the "
"`RateLimiter` facade's `for` method."
msgstr ""

# File: docs/8.x/queues.md, line: 409
# File: docs/master/queues.md, line: 408
#. type: Plain text
#: docs/8.x/queues.md:409
msgid ""
"For example, you may wish to allow users to backup their data once per hour "
"while imposing no such limit on premium customers. To accomplish this, you "
"may define a `RateLimiter` in the `boot` method of your `AppServiceProvider`:"
msgstr ""

# File: docs/8.x/queues.md, line: 412
# File: docs/8.x/releases.md, line: 194
# File: docs/8.x/routing.md, line: 550
# File: docs/master/queues.md, line: 411
# File: docs/master/releases.md, line: 194
# File: docs/master/routing.md, line: 549
#. type: Plain text
#: docs/8.x/queues.md:412
#, no-wrap
msgid ""
"    use Illuminate\\Cache\\RateLimiting\\Limit;\n"
"    use Illuminate\\Support\\Facades\\RateLimiter;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 426
# File: docs/master/queues.md, line: 425
#. type: Plain text
#: docs/8.x/queues.md:426
#, no-wrap
msgid ""
"    /**\n"
"     * Bootstrap any application services.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function boot()\n"
"    {\n"
"        RateLimiter::for('backups', function ($job) {\n"
"            return $job->user->vipCustomer()\n"
"                        ? Limit::none()\n"
"                        : Limit::perHour(1)->by($job->user->id);\n"
"        });\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 428
# File: docs/master/queues.md, line: 427
#. type: Plain text
#: docs/8.x/queues.md:428
msgid ""
"In the example above, we defined an hourly rate limit; however, you may "
"easily define a rate limit based on minutes using the `perMinute` method. In "
"addition, you may pass any value you wish to the `by` method of the rate "
"limit; however, this value is most often used to segment rate limits by "
"customer:"
msgstr ""

# File: docs/8.x/queues.md, line: 430
# File: docs/master/queues.md, line: 429
#. type: Plain text
#: docs/8.x/queues.md:430
#, no-wrap
msgid "    return Limit::perMinute(50)->by($job->user->id);\n"
msgstr ""

# File: docs/8.x/queues.md, line: 432
# File: docs/master/queues.md, line: 431
#. type: Plain text
#: docs/8.x/queues.md:432
msgid ""
"Once you have defined your rate limit, you may attach the rate limiter to "
"your backup job using the `Illuminate\\Queue\\Middleware\\RateLimited` "
"middleware. Each time the job exceeds the rate limit, this middleware will "
"release the job back to the queue with an appropriate delay based on the "
"rate limit duration."
msgstr ""

# File: docs/8.x/queues.md, line: 434
# File: docs/master/queues.md, line: 433
#. type: Plain text
#: docs/8.x/queues.md:434
#, no-wrap
msgid "    use Illuminate\\Queue\\Middleware\\RateLimited;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 444
# File: docs/master/queues.md, line: 443
#. type: Plain text
#: docs/8.x/queues.md:444
#, no-wrap
msgid ""
"    /**\n"
"     * Get the middleware the job should pass through.\n"
"     *\n"
"     * @return array\n"
"     */\n"
"    public function middleware()\n"
"    {\n"
"        return [new RateLimited('backups')];\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 446
# File: docs/master/queues.md, line: 445
#. type: Plain text
#: docs/8.x/queues.md:446
msgid ""
"Releasing a rate limited job back onto the queue will still increment the "
"job's total number of `attempts`. You may wish to tune your `tries` and "
"`maxExceptions` properties on your job class accordingly. Or, you may wish "
"to use the [`retryUntil` method](#time-based-attempts) to define the amount "
"of time until the job should no longer be attempted."
msgstr ""

# File: docs/8.x/queues.md, line: 448
# File: docs/master/queues.md, line: 447
#. type: Plain text
#: docs/8.x/queues.md:448
#, no-wrap
msgid "> {tip} If you are using Redis, you may use the `Illuminate\\Queue\\Middleware\\RateLimitedWithRedis` middleware, which is fine-tuned for Redis and more efficient than the basic rate limiting middleware.\n"
msgstr ""

# File: docs/8.x/queues.md, line: 450
# File: docs/master/queues.md, line: 449
#. type: Plain text
#: docs/8.x/queues.md:450
#, no-wrap
msgid "<a name=\"preventing-job-overlaps\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 450
# File: docs/master/queues.md, line: 449
#. type: Title ###
#: docs/8.x/queues.md:450
#, no-wrap
msgid "Preventing Job Overlaps"
msgstr ""

# File: docs/8.x/queues.md, line: 453
# File: docs/master/queues.md, line: 452
#. type: Plain text
#: docs/8.x/queues.md:453
msgid ""
"Laravel includes an `Illuminate\\Queue\\Middleware\\WithoutOverlapping` "
"middleware that allows you to prevent job overlaps based on an arbitrary "
"key. This can be helpful when a queued job is modifying a resource that "
"should only be modified by one job at a time."
msgstr ""

# File: docs/8.x/queues.md, line: 455
# File: docs/master/queues.md, line: 454
#. type: Plain text
#: docs/8.x/queues.md:455
msgid ""
"For example, let's imagine you have a queued job that updates a user's "
"credit score and you want to prevent credit score update job overlaps for "
"the same user ID. To accomplish this, you can return the "
"`WithoutOverlapping` middleware from your job's `middleware` method:"
msgstr ""

# File: docs/8.x/queues.md, line: 457
# File: docs/master/queues.md, line: 456
#. type: Plain text
#: docs/8.x/queues.md:457
#, no-wrap
msgid "    use Illuminate\\Queue\\Middleware\\WithoutOverlapping;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 467
# File: docs/master/queues.md, line: 466
#. type: Plain text
#: docs/8.x/queues.md:467
#, no-wrap
msgid ""
"    /**\n"
"     * Get the middleware the job should pass through.\n"
"     *\n"
"     * @return array\n"
"     */\n"
"    public function middleware()\n"
"    {\n"
"        return [new WithoutOverlapping($this->user->id)];\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 469
# File: docs/master/queues.md, line: 468
#. type: Plain text
#: docs/8.x/queues.md:469
msgid ""
"Any overlapping jobs will be released back to the queue. You may also "
"specify the number of seconds that must elapse before the released job will "
"be attempted again:"
msgstr ""

# File: docs/8.x/queues.md, line: 479
# File: docs/master/queues.md, line: 478
#. type: Plain text
#: docs/8.x/queues.md:479
#, no-wrap
msgid ""
"    /**\n"
"     * Get the middleware the job should pass through.\n"
"     *\n"
"     * @return array\n"
"     */\n"
"    public function middleware()\n"
"    {\n"
"        return [(new WithoutOverlapping($this->order->id))->releaseAfter(60)];\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 481
# File: docs/master/queues.md, line: 480
#. type: Plain text
#: docs/8.x/queues.md:481
msgid ""
"If you wish to immediately delete any overlapping jobs so that they will not "
"be retried, you may use the `dontRelease` method:"
msgstr ""

# File: docs/8.x/queues.md, line: 491
# File: docs/master/queues.md, line: 490
#. type: Plain text
#: docs/8.x/queues.md:491
#, no-wrap
msgid ""
"    /**\n"
"     * Get the middleware the job should pass through.\n"
"     *\n"
"     * @return array\n"
"     */\n"
"    public function middleware()\n"
"    {\n"
"        return [(new WithoutOverlapping($this->order->id))->dontRelease()];\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 493
# File: docs/master/queues.md, line: 492
#. type: Plain text
#: docs/8.x/queues.md:493
#, no-wrap
msgid "> {note} The `WithoutOverlapping` middleware requires a cache driver that supports [locks](/docs/{{version}}/cache#atomic-locks). Currently, the `memcached`, `redis`, `dynamodb`, `database`, `file`, and `array` cache drivers support atomic locks.\n"
msgstr ""

# File: docs/8.x/queues.md, line: 495
#. type: Plain text
#: docs/8.x/queues.md:495
#, no-wrap
msgid "<a name=\"throttling-exceptions\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 495
#. type: Title ###
#: docs/8.x/queues.md:495
#, no-wrap
msgid "Throttling Exceptions"
msgstr ""

# File: docs/8.x/queues.md, line: 498
#. type: Plain text
#: docs/8.x/queues.md:498
msgid ""
"Laravel includes a `Illuminate\\Queue\\Middleware\\ThrottlesExceptions` "
"middleware that allows you to throttle exceptions. Once the job throws a "
"given number of exceptions, all further attempts to execute the job are "
"delayed until a specified time interval lapses. This middleware is "
"particularly useful for jobs that interact with third-party services that "
"are unstable."
msgstr ""

# File: docs/8.x/queues.md, line: 500
#. type: Plain text
#: docs/8.x/queues.md:500
msgid ""
"For example, let's imagine a queued job that interacts with an third-party "
"API that begins throwing exceptions. To throttle exceptions, you can return "
"the `ThrottlesExceptions` middleware from your job's `middleware` method. "
"Typically, this middleware should be paired with a job that implements [time "
"based attempts](#time-based-attempts):"
msgstr ""

# File: docs/8.x/queues.md, line: 502
# File: docs/8.x/queues.md, line: 528
# File: docs/8.x/queues.md, line: 542
#. type: Plain text
#: docs/8.x/queues.md:502 docs/8.x/queues.md:528 docs/8.x/queues.md:542
#, no-wrap
msgid "    use Illuminate\\Queue\\Middleware\\ThrottlesExceptions;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 512
#. type: Plain text
#: docs/8.x/queues.md:512
#, no-wrap
msgid ""
"    /**\n"
"     * Get the middleware the job should pass through.\n"
"     *\n"
"     * @return array\n"
"     */\n"
"    public function middleware()\n"
"    {\n"
"        return [new ThrottlesExceptions(10, 5)];\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 522
#. type: Plain text
#: docs/8.x/queues.md:522
#, no-wrap
msgid ""
"    /**\n"
"     * Determine the time at which the job should timeout.\n"
"     *\n"
"     * @return \\DateTime\n"
"     */\n"
"    public function retryUntil()\n"
"    {\n"
"        return now()->addMinutes(30);\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 524
#. type: Plain text
#: docs/8.x/queues.md:524
msgid ""
"The first constructor argument accepted by the middleware is the number of "
"exceptions the job can throw before being throttled, while the second "
"constructor argument is the number of minutes that should elapse before the "
"job is attempted again once it has been throttled. In the code example "
"above, if the job throws 10 exceptions within 5 minutes, we will wait 5 "
"minutes before attempting the job again."
msgstr ""

# File: docs/8.x/queues.md, line: 526
#. type: Plain text
#: docs/8.x/queues.md:526
msgid ""
"When a job throws an exception but the exception threshold has not yet been "
"reached, the job will typically be retried immediately. However, you may "
"specify the number of seconds such a job should be delayed by calling the "
"`backoff` method when attaching the middleware to the job:"
msgstr ""

# File: docs/8.x/queues.md, line: 538
#. type: Plain text
#: docs/8.x/queues.md:538
#, no-wrap
msgid ""
"    /**\n"
"     * Get the middleware the job should pass through.\n"
"     *\n"
"     * @return array\n"
"     */\n"
"    public function middleware()\n"
"    {\n"
"        return [(new ThrottlesExceptions(10, 5))->backoff(5)];\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 540
#. type: Plain text
#: docs/8.x/queues.md:540
msgid ""
"Internally, this middleware uses Laravel's cache system to implement rate "
"limiting, and the job's class name is utilized as the cache \"key\". You may "
"override this key by calling the `by` method when attaching the middleware "
"to your job. This may be useful if you have multiple jobs interacting with "
"the same third-party service and you would like them to share a common "
"throttling \"bucket\":"
msgstr ""

# File: docs/8.x/queues.md, line: 552
#. type: Plain text
#: docs/8.x/queues.md:552
#, no-wrap
msgid ""
"    /**\n"
"     * Get the middleware the job should pass through.\n"
"     *\n"
"     * @return array\n"
"     */\n"
"    public function middleware()\n"
"    {\n"
"        return [(new ThrottlesExceptions(10, 10))->by('key')];\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 554
#. type: Plain text
#: docs/8.x/queues.md:554
#, no-wrap
msgid "> {tip} If you are using Redis, you may use the `Illuminate\\Queue\\Middleware\\ThrottlesExceptionsWithRedis` middleware, which is fine-tuned for Redis and more efficient than the basic exception throttling middleware.\n"
msgstr ""

# File: docs/8.x/queues.md, line: 556
# File: docs/master/queues.md, line: 494
#. type: Plain text
#: docs/8.x/queues.md:556
#, no-wrap
msgid "<a name=\"dispatching-jobs\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 556
# File: docs/master/queues.md, line: 494
#. type: Title ##
#: docs/8.x/queues.md:556
#, no-wrap
msgid "Dispatching Jobs"
msgstr ""

# File: docs/8.x/queues.md, line: 559
# File: docs/master/queues.md, line: 497
#. type: Plain text
#: docs/8.x/queues.md:559
msgid ""
"Once you have written your job class, you may dispatch it using the "
"`dispatch` method on the job itself. The arguments passed to the `dispatch` "
"method will be given to the job's constructor:"
msgstr ""

# File: docs/8.x/authentication.md, line: 146
# File: docs/8.x/authentication.md, line: 227
# File: docs/8.x/authorization.md, line: 89
# File: docs/8.x/authorization.md, line: 451
# File: docs/8.x/authorization.md, line: 485
# File: docs/8.x/authorization.md, line: 518
# File: docs/8.x/authorization.md, line: 575
# File: docs/8.x/billing.md, line: 1198
# File: docs/8.x/cache.md, line: 105
# File: docs/8.x/cashier-paddle.md, line: 946
# File: docs/8.x/cashier-paddle.md, line: 1140
# File: docs/8.x/container.md, line: 30
# File: docs/8.x/container.md, line: 385
# File: docs/8.x/controllers.md, line: 34
# File: docs/8.x/controllers.md, line: 72
# File: docs/8.x/controllers.md, line: 358
# File: docs/8.x/controllers.md, line: 388
# File: docs/8.x/controllers.md, line: 418
# File: docs/8.x/database.md, line: 118
# File: docs/8.x/eloquent.md, line: 533
# File: docs/8.x/encryption.md, line: 28
# File: docs/8.x/events.md, line: 518
# File: docs/8.x/facades.md, line: 135
# File: docs/8.x/filesystem.md, line: 310
# File: docs/8.x/hashing.md, line: 35
# File: docs/8.x/logging.md, line: 149
# File: docs/8.x/mail.md, line: 547
# File: docs/8.x/mocking.md, line: 82
# File: docs/8.x/pagination.md, line: 36
# File: docs/8.x/queries.md, line: 55
# File: docs/8.x/queues.md, line: 563
# File: docs/8.x/queues.md, line: 601
# File: docs/8.x/queues.md, line: 654
# File: docs/8.x/queues.md, line: 776
# File: docs/8.x/queues.md, line: 835
# File: docs/8.x/redis.md, line: 187
# File: docs/8.x/requests.md, line: 39
# File: docs/8.x/requests.md, line: 80
# File: docs/8.x/session.md, line: 83
# File: docs/8.x/validation.md, line: 65
# File: docs/8.x/validation.md, line: 427
# File: docs/master/authentication.md, line: 146
# File: docs/master/authentication.md, line: 227
# File: docs/master/authorization.md, line: 89
# File: docs/master/authorization.md, line: 451
# File: docs/master/authorization.md, line: 485
# File: docs/master/authorization.md, line: 518
# File: docs/master/authorization.md, line: 575
# File: docs/master/billing.md, line: 1071
# File: docs/master/cache.md, line: 98
# File: docs/master/cashier-paddle.md, line: 906
# File: docs/master/cashier-paddle.md, line: 1100
# File: docs/master/container.md, line: 30
# File: docs/master/container.md, line: 379
# File: docs/master/controllers.md, line: 34
# File: docs/master/controllers.md, line: 72
# File: docs/master/controllers.md, line: 345
# File: docs/master/controllers.md, line: 375
# File: docs/master/controllers.md, line: 405
# File: docs/master/database.md, line: 118
# File: docs/master/eloquent.md, line: 495
# File: docs/master/encryption.md, line: 28
# File: docs/master/events.md, line: 518
# File: docs/master/facades.md, line: 134
# File: docs/master/filesystem.md, line: 310
# File: docs/master/hashing.md, line: 35
# File: docs/master/logging.md, line: 149
# File: docs/master/mail.md, line: 547
# File: docs/master/mocking.md, line: 82
# File: docs/master/pagination.md, line: 36
# File: docs/master/queries.md, line: 54
# File: docs/master/queues.md, line: 501
# File: docs/master/queues.md, line: 539
# File: docs/master/queues.md, line: 592
# File: docs/master/queues.md, line: 714
# File: docs/master/queues.md, line: 773
# File: docs/master/redis.md, line: 187
# File: docs/master/requests.md, line: 38
# File: docs/master/requests.md, line: 79
# File: docs/master/session.md, line: 83
# File: docs/master/validation.md, line: 65
# File: docs/master/validation.md, line: 414
#. type: Plain text
#: docs/8.x/queues.md:563 docs/8.x/queues.md:601 docs/8.x/queues.md:654
#: docs/8.x/queues.md:776 docs/8.x/queues.md:835
#, no-wrap
msgid "    namespace App\\Http\\Controllers;\n"
msgstr "    namespace App\\Http\\Controllers;\n"

# File: docs/8.x/queues.md, line: 568
# File: docs/8.x/queues.md, line: 606
# File: docs/8.x/queues.md, line: 659
# File: docs/8.x/queues.md, line: 781
# File: docs/8.x/queues.md, line: 840
# File: docs/master/queues.md, line: 506
# File: docs/master/queues.md, line: 544
# File: docs/master/queues.md, line: 597
# File: docs/master/queues.md, line: 719
# File: docs/master/queues.md, line: 778
#. type: Plain text
#: docs/8.x/queues.md:568 docs/8.x/queues.md:606 docs/8.x/queues.md:659
#: docs/8.x/queues.md:781 docs/8.x/queues.md:840
#, no-wrap
msgid ""
"    use App\\Http\\Controllers\\Controller;\n"
"    use App\\Jobs\\ProcessPodcast;\n"
"    use App\\Models\\Podcast;\n"
"    use Illuminate\\Http\\Request;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 580
# File: docs/8.x/queues.md, line: 618
# File: docs/8.x/queues.md, line: 671
# File: docs/8.x/queues.md, line: 793
# File: docs/8.x/queues.md, line: 852
# File: docs/master/queues.md, line: 518
# File: docs/master/queues.md, line: 556
# File: docs/master/queues.md, line: 609
# File: docs/master/queues.md, line: 731
# File: docs/master/queues.md, line: 790
#. type: Plain text
#: docs/8.x/queues.md:580 docs/8.x/queues.md:618 docs/8.x/queues.md:671
#: docs/8.x/queues.md:793 docs/8.x/queues.md:852
#, no-wrap
msgid ""
"    class PodcastController extends Controller\n"
"    {\n"
"        /**\n"
"         * Store a new podcast.\n"
"         *\n"
"         * @param  \\Illuminate\\Http\\Request  $request\n"
"         * @return \\Illuminate\\Http\\Response\n"
"         */\n"
"        public function store(Request $request)\n"
"        {\n"
"            $podcast = Podcast::create(...);\n"
msgstr ""

# File: docs/8.x/queues.md, line: 582
# File: docs/8.x/queues.md, line: 620
# File: docs/master/queues.md, line: 520
# File: docs/master/queues.md, line: 558
#. type: Plain text
#: docs/8.x/queues.md:582 docs/8.x/queues.md:620
#, no-wrap
msgid "            // ...\n"
msgstr ""

# File: docs/8.x/queues.md, line: 586
# File: docs/master/queues.md, line: 524
#. type: Plain text
#: docs/8.x/queues.md:586
#, no-wrap
msgid ""
"            ProcessPodcast::dispatch($podcast);\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 588
# File: docs/master/queues.md, line: 526
#. type: Plain text
#: docs/8.x/queues.md:588
msgid ""
"If you would like to conditionally dispatch a job, you may use the "
"`dispatchIf` and `dispatchUnless` methods:"
msgstr ""

# File: docs/8.x/queues.md, line: 590
# File: docs/master/queues.md, line: 528
#. type: Plain text
#: docs/8.x/queues.md:590
#, no-wrap
msgid "    ProcessPodcast::dispatchIf($accountActive, $podcast);\n"
msgstr ""

# File: docs/8.x/queues.md, line: 592
# File: docs/master/queues.md, line: 530
#. type: Plain text
#: docs/8.x/queues.md:592
#, no-wrap
msgid "    ProcessPodcast::dispatchUnless($accountSuspended, $podcast);\n"
msgstr ""

# File: docs/8.x/queues.md, line: 594
# File: docs/master/queues.md, line: 532
#. type: Plain text
#: docs/8.x/queues.md:594
#, no-wrap
msgid "<a name=\"delayed-dispatching\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 594
# File: docs/master/queues.md, line: 532
#. type: Title ###
#: docs/8.x/queues.md:594
#, no-wrap
msgid "Delayed Dispatching"
msgstr ""

# File: docs/8.x/queues.md, line: 597
# File: docs/master/queues.md, line: 535
#. type: Plain text
#: docs/8.x/queues.md:597
msgid ""
"If you would like to specify that a job should not be immediately available "
"for processing by a queue worker, you may use the `delay` method when "
"dispatching the job. For example, let's specify that a job should not be "
"available for processing until 10 minutes after it has been dispatched:"
msgstr ""

# File: docs/8.x/queues.md, line: 625
# File: docs/master/queues.md, line: 563
#. type: Plain text
#: docs/8.x/queues.md:625
#, no-wrap
msgid ""
"            ProcessPodcast::dispatch($podcast)\n"
"                        ->delay(now()->addMinutes(10));\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 627
# File: docs/master/queues.md, line: 565
#. type: Plain text
#: docs/8.x/queues.md:627
#, no-wrap
msgid "> {note} The Amazon SQS queue service has a maximum delay time of 15 minutes.\n"
msgstr ""

# File: docs/8.x/queues.md, line: 629
# File: docs/master/queues.md, line: 567
#. type: Plain text
#: docs/8.x/queues.md:629
#, no-wrap
msgid "<a name=\"dispatching-after-the-response-is-sent-to-browser\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 629
# File: docs/master/queues.md, line: 567
#. type: Title ####
#: docs/8.x/queues.md:629
#, no-wrap
msgid "Dispatching After The Response Is Sent To Browser"
msgstr ""

# File: docs/8.x/queues.md, line: 632
# File: docs/master/queues.md, line: 570
#. type: Plain text
#: docs/8.x/queues.md:632
msgid ""
"Alternatively, the `dispatchAfterResponse` method delays dispatching a job "
"until after the HTTP response is sent to the user's browser. This will still "
"allow the user to begin using the application even though a queued job is "
"still executing. This should typically only be used for jobs that take about "
"a second, such as sending an email. Since they are processed within the "
"current HTTP request, jobs dispatched in this fashion do not require a queue "
"worker to be running in order for them to be processed:"
msgstr ""

# File: docs/8.x/queues.md, line: 634
# File: docs/master/queues.md, line: 572
#. type: Plain text
#: docs/8.x/queues.md:634
#, no-wrap
msgid "    use App\\Jobs\\SendNotification;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 636
# File: docs/master/queues.md, line: 574
#. type: Plain text
#: docs/8.x/queues.md:636
#, no-wrap
msgid "    SendNotification::dispatchAfterResponse();\n"
msgstr ""

# File: docs/8.x/queues.md, line: 638
# File: docs/master/queues.md, line: 576
#. type: Plain text
#: docs/8.x/queues.md:638
msgid ""
"You may also `dispatch` a closure and chain the `afterResponse` method onto "
"the `dispatch` helper to execute a closure after the HTTP response has been "
"sent to the browser:"
msgstr ""

# File: docs/8.x/queues.md, line: 641
# File: docs/master/queues.md, line: 579
#. type: Plain text
#: docs/8.x/queues.md:641
#, no-wrap
msgid ""
"    use App\\Mail\\WelcomeMessage;\n"
"    use Illuminate\\Support\\Facades\\Mail;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 645
# File: docs/master/queues.md, line: 583
#. type: Plain text
#: docs/8.x/queues.md:645
#, no-wrap
msgid ""
"    dispatch(function () {\n"
"        Mail::to('taylor@example.com')->send(new WelcomeMessage);\n"
"    })->afterResponse();\n"
msgstr ""

# File: docs/8.x/queues.md, line: 647
# File: docs/master/queues.md, line: 585
#. type: Plain text
#: docs/8.x/queues.md:647
#, no-wrap
msgid "<a name=\"synchronous-dispatching\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 647
# File: docs/master/queues.md, line: 585
#. type: Title ###
#: docs/8.x/queues.md:647
#, no-wrap
msgid "Synchronous Dispatching"
msgstr ""

# File: docs/8.x/queues.md, line: 650
# File: docs/master/queues.md, line: 588
#. type: Plain text
#: docs/8.x/queues.md:650
msgid ""
"If you would like to dispatch a job immediately (synchronously), you may use "
"the `dispatchSync` method. When using this method, the job will not be "
"queued and will be executed immediately within the current process:"
msgstr ""

# File: docs/8.x/queues.md, line: 673
# File: docs/8.x/queues.md, line: 795
# File: docs/8.x/queues.md, line: 854
# File: docs/master/queues.md, line: 611
# File: docs/master/queues.md, line: 733
# File: docs/master/queues.md, line: 792
#. type: Plain text
#: docs/8.x/queues.md:673 docs/8.x/queues.md:795 docs/8.x/queues.md:854
#, no-wrap
msgid "            // Create podcast...\n"
msgstr ""

# File: docs/8.x/queues.md, line: 677
# File: docs/master/queues.md, line: 615
#. type: Plain text
#: docs/8.x/queues.md:677
#, no-wrap
msgid ""
"            ProcessPodcast::dispatchSync($podcast);\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 679
# File: docs/master/queues.md, line: 617
#. type: Plain text
#: docs/8.x/queues.md:679
#, no-wrap
msgid "<a name=\"jobs-and-database-transactions\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 679
# File: docs/master/queues.md, line: 617
#. type: Title ###
#: docs/8.x/queues.md:679
#, no-wrap
msgid "Jobs & Database Transactions"
msgstr ""

# File: docs/8.x/queues.md, line: 682
# File: docs/master/queues.md, line: 620
#. type: Plain text
#: docs/8.x/queues.md:682
msgid ""
"While it is perfectly fine to dispatch jobs within database transactions, "
"you should take special care to ensure that your job will actually be able "
"to execute successfully. When dispatching a job within a transaction, it is "
"possible that the job will be processed by a worker before the transaction "
"has committed. When this happens, any updates you have made to models or "
"database records during the database transaction may not yet be reflected in "
"the database. In addition, any models or database records created within the "
"transaction may not exist in the database."
msgstr ""

# File: docs/8.x/queues.md, line: 684
# File: docs/master/queues.md, line: 622
#. type: Plain text
#: docs/8.x/queues.md:684
msgid ""
"Thankfully, Laravel provides several methods of working around this problem. "
"First, you may set the `after_commit` connection option in your queue "
"connection's configuration array:"
msgstr ""

# File: docs/8.x/queues.md, line: 690
# File: docs/master/queues.md, line: 628
#. type: Plain text
#: docs/8.x/queues.md:690
#, no-wrap
msgid ""
"    'redis' => [\n"
"        'driver' => 'redis',\n"
"        // ...\n"
"        'after_commit' => true,\n"
"    ],\n"
msgstr ""

# File: docs/8.x/queues.md, line: 692
# File: docs/master/queues.md, line: 630
#. type: Plain text
#: docs/8.x/queues.md:692
msgid ""
"When the `after_commit` option is `true`, you may dispatch jobs within "
"database transactions; however, Laravel will wait until all open database "
"transactions have been committed before actually dispatching the job. Of "
"course, if no database transactions are currently open, the job will be "
"dispatched immediately."
msgstr ""

# File: docs/8.x/queues.md, line: 694
# File: docs/master/queues.md, line: 632
#. type: Plain text
#: docs/8.x/queues.md:694
msgid ""
"If a transaction is rolled back due to an exception that occurs during the "
"transaction, the dispatched jobs that were dispatched during that "
"transaction will be discarded."
msgstr ""

# File: docs/8.x/queues.md, line: 696
# File: docs/master/queues.md, line: 634
#. type: Plain text
#: docs/8.x/queues.md:696
#, no-wrap
msgid "> {tip} Setting the `after_commit` configuration option to `true` will also cause any queued event listeners, mailables, notifications, and broadcast events to be dispatched after all open database transactions have been committed.\n"
msgstr ""

# File: docs/8.x/queues.md, line: 698
# File: docs/master/queues.md, line: 636
#. type: Plain text
#: docs/8.x/queues.md:698
#, no-wrap
msgid "<a name=\"specifying-commit-dispatch-behavior-inline\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 698
# File: docs/master/queues.md, line: 636
#. type: Title ####
#: docs/8.x/queues.md:698
#, no-wrap
msgid "Specifying Commit Dispatch Behavior Inline"
msgstr ""

# File: docs/8.x/queues.md, line: 701
# File: docs/master/queues.md, line: 639
#. type: Plain text
#: docs/8.x/queues.md:701
msgid ""
"If you do not set the `after_commit` queue connection configuration option "
"to `true`, you may still indicate that a specific job should be dispatched "
"after all open database transactions have been committed. To accomplish "
"this, you may chain the `afterCommit` method onto your dispatch operation:"
msgstr ""

# File: docs/8.x/queues.md, line: 705
# File: docs/master/queues.md, line: 643
#. type: Plain text
#: docs/8.x/queues.md:705
#, no-wrap
msgid "    ProcessPodcast::dispatch($podcast)->afterCommit();\n"
msgstr ""

# File: docs/8.x/queues.md, line: 707
# File: docs/master/queues.md, line: 645
#. type: Plain text
#: docs/8.x/queues.md:707
msgid ""
"Likewise, if the `after_commit` configuration option is set to `true`, you "
"may indicate that a specific job should be dispatched immediately without "
"waiting for any open database transactions to commit:"
msgstr ""

# File: docs/8.x/queues.md, line: 709
# File: docs/master/queues.md, line: 647
#. type: Plain text
#: docs/8.x/queues.md:709
#, no-wrap
msgid "    ProcessPodcast::dispatch($podcast)->beforeCommit();\n"
msgstr ""

# File: docs/8.x/queues.md, line: 711
# File: docs/master/queues.md, line: 649
#. type: Plain text
#: docs/8.x/queues.md:711
#, no-wrap
msgid "<a name=\"job-chaining\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 711
# File: docs/master/queues.md, line: 649
#. type: Title ###
#: docs/8.x/queues.md:711
#, no-wrap
msgid "Job Chaining"
msgstr ""

# File: docs/8.x/queues.md, line: 714
# File: docs/master/queues.md, line: 652
#. type: Plain text
#: docs/8.x/queues.md:714
msgid ""
"Job chaining allows you to specify a list of queued jobs that should be run "
"in sequence after the primary job has executed successfully. If one job in "
"the sequence fails, the rest of the jobs will not be run. To execute a "
"queued job chain, you may use the `chain` method provided by the `Bus` "
"facade. Laravel's command bus is a lower level component that queued job "
"dispatching is built on top of:"
msgstr ""

# File: docs/8.x/queues.md, line: 719
# File: docs/master/queues.md, line: 657
#. type: Plain text
#: docs/8.x/queues.md:719
#, no-wrap
msgid ""
"    use App\\Jobs\\OptimizePodcast;\n"
"    use App\\Jobs\\ProcessPodcast;\n"
"    use App\\Jobs\\ReleasePodcast;\n"
"    use Illuminate\\Support\\Facades\\Bus;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 725
# File: docs/master/queues.md, line: 663
#. type: Plain text
#: docs/8.x/queues.md:725
#, no-wrap
msgid ""
"    Bus::chain([\n"
"        new ProcessPodcast,\n"
"        new OptimizePodcast,\n"
"        new ReleasePodcast,\n"
"    ])->dispatch();\n"
msgstr ""

# File: docs/8.x/queues.md, line: 727
# File: docs/master/queues.md, line: 665
#. type: Plain text
#: docs/8.x/queues.md:727
msgid ""
"In addition to chaining job class instances, you may also chain closures:"
msgstr ""

# File: docs/8.x/queues.md, line: 735
# File: docs/master/queues.md, line: 673
#. type: Plain text
#: docs/8.x/queues.md:735
#, no-wrap
msgid ""
"    Bus::chain([\n"
"        new ProcessPodcast,\n"
"        new OptimizePodcast,\n"
"        function () {\n"
"            Podcast::update(...);\n"
"        },\n"
"    ])->dispatch();\n"
msgstr ""

# File: docs/8.x/queues.md, line: 737
# File: docs/master/queues.md, line: 675
#. type: Plain text
#: docs/8.x/queues.md:737
#, no-wrap
msgid "> {note} Deleting jobs using the `$this->delete()` method within the job will not prevent chained jobs from being processed. The chain will only stop executing if a job in the chain fails.\n"
msgstr ""

# File: docs/8.x/queues.md, line: 739
# File: docs/master/queues.md, line: 677
#. type: Plain text
#: docs/8.x/queues.md:739
#, no-wrap
msgid "<a name=\"chain-connection-queue\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 739
# File: docs/master/queues.md, line: 677
#. type: Title ####
#: docs/8.x/queues.md:739
#, no-wrap
msgid "Chain Connection & Queue"
msgstr ""

# File: docs/8.x/queues.md, line: 742
# File: docs/master/queues.md, line: 680
#. type: Plain text
#: docs/8.x/queues.md:742
msgid ""
"If you would like to specify the connection and queue that should be used "
"for the chained jobs, you may use the `onConnection` and `onQueue` methods. "
"These methods specify the queue connection and queue name that should be "
"used unless the queued job is explicitly assigned a different connection / "
"queue:"
msgstr ""

# File: docs/8.x/queues.md, line: 748
# File: docs/master/queues.md, line: 686
#. type: Plain text
#: docs/8.x/queues.md:748
#, no-wrap
msgid ""
"    Bus::chain([\n"
"        new ProcessPodcast,\n"
"        new OptimizePodcast,\n"
"        new ReleasePodcast,\n"
"    ])->onConnection('redis')->onQueue('podcasts')->dispatch();\n"
msgstr ""

# File: docs/8.x/queues.md, line: 750
# File: docs/master/queues.md, line: 688
#. type: Plain text
#: docs/8.x/queues.md:750
#, no-wrap
msgid "<a name=\"chain-failures\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 750
# File: docs/master/queues.md, line: 688
#. type: Title ####
#: docs/8.x/queues.md:750
#, no-wrap
msgid "Chain Failures"
msgstr ""

# File: docs/8.x/queues.md, line: 753
# File: docs/master/queues.md, line: 691
#. type: Plain text
#: docs/8.x/queues.md:753
msgid ""
"When chaining jobs, you may use the `catch` method to specify a closure that "
"should be invoked if a job within the chain fails. The given callback will "
"receive the `Throwable` instance that caused the job failure:"
msgstr ""

# File: docs/8.x/queues.md, line: 756
# File: docs/master/queues.md, line: 694
#. type: Plain text
#: docs/8.x/queues.md:756
#, no-wrap
msgid ""
"    use Illuminate\\Support\\Facades\\Bus;\n"
"    use Throwable;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 764
# File: docs/master/queues.md, line: 702
#. type: Plain text
#: docs/8.x/queues.md:764
#, no-wrap
msgid ""
"    Bus::chain([\n"
"        new ProcessPodcast,\n"
"        new OptimizePodcast,\n"
"        new ReleasePodcast,\n"
"    ])->catch(function (Throwable $e) {\n"
"        // A job within the chain has failed...\n"
"    })->dispatch();\n"
msgstr ""

# File: docs/8.x/queues.md, line: 766
# File: docs/master/queues.md, line: 704
#. type: Plain text
#: docs/8.x/queues.md:766
#, no-wrap
msgid "<a name=\"customizing-the-queue-and-connection\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 766
# File: docs/master/queues.md, line: 704
#. type: Title ###
#: docs/8.x/queues.md:766
#, no-wrap
msgid "Customizing The Queue & Connection"
msgstr ""

# File: docs/8.x/queues.md, line: 769
# File: docs/master/queues.md, line: 707
#. type: Plain text
#: docs/8.x/queues.md:769
#, no-wrap
msgid "<a name=\"dispatching-to-a-particular-queue\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 769
# File: docs/master/queues.md, line: 707
#. type: Title ####
#: docs/8.x/queues.md:769
#, no-wrap
msgid "Dispatching To A Particular Queue"
msgstr ""

# File: docs/8.x/queues.md, line: 772
# File: docs/master/queues.md, line: 710
#. type: Plain text
#: docs/8.x/queues.md:772
msgid ""
"By pushing jobs to different queues, you may \"categorize\" your queued jobs "
"and even prioritize how many workers you assign to various queues. Keep in "
"mind, this does not push jobs to different queue \"connections\" as defined "
"by your queue configuration file, but only to specific queues within a "
"single connection. To specify the queue, use the `onQueue` method when "
"dispatching the job:"
msgstr ""

# File: docs/8.x/queues.md, line: 799
# File: docs/master/queues.md, line: 737
#. type: Plain text
#: docs/8.x/queues.md:799
#, no-wrap
msgid ""
"            ProcessPodcast::dispatch($podcast)->onQueue('processing');\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 801
# File: docs/master/queues.md, line: 739
#. type: Plain text
#: docs/8.x/queues.md:801
msgid ""
"Alternatively, you may specify the job's queue by calling the `onQueue` "
"method within the job's constructor:"
msgstr ""

# File: docs/8.x/queues.md, line: 811
# File: docs/8.x/queues.md, line: 876
# File: docs/master/queues.md, line: 749
# File: docs/master/queues.md, line: 814
#. type: Plain text
#: docs/8.x/queues.md:811 docs/8.x/queues.md:876
#, no-wrap
msgid ""
"     use Illuminate\\Bus\\Queueable;\n"
"     use Illuminate\\Contracts\\Queue\\ShouldQueue;\n"
"     use Illuminate\\Foundation\\Bus\\Dispatchable;\n"
"     use Illuminate\\Queue\\InteractsWithQueue;\n"
"     use Illuminate\\Queue\\SerializesModels;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 826
# File: docs/master/queues.md, line: 764
#. type: Plain text
#: docs/8.x/queues.md:826
#, no-wrap
msgid ""
"        /**\n"
"         * Create a new job instance.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function __construct()\n"
"        {\n"
"            $this->onQueue('processing');\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 828
# File: docs/master/queues.md, line: 766
#. type: Plain text
#: docs/8.x/queues.md:828
#, no-wrap
msgid "<a name=\"dispatching-to-a-particular-connection\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 828
# File: docs/master/queues.md, line: 766
#. type: Title ####
#: docs/8.x/queues.md:828
#, no-wrap
msgid "Dispatching To A Particular Connection"
msgstr ""

# File: docs/8.x/queues.md, line: 831
# File: docs/master/queues.md, line: 769
#. type: Plain text
#: docs/8.x/queues.md:831
msgid ""
"If your application interacts with multiple queue connections, you may "
"specify which connection to push a job to using the `onConnection` method:"
msgstr ""

# File: docs/8.x/queues.md, line: 858
# File: docs/master/queues.md, line: 796
#. type: Plain text
#: docs/8.x/queues.md:858
#, no-wrap
msgid ""
"            ProcessPodcast::dispatch($podcast)->onConnection('sqs');\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 860
# File: docs/master/queues.md, line: 798
#. type: Plain text
#: docs/8.x/queues.md:860
msgid ""
"You may chain the `onConnection` and `onQueue` methods together to specify "
"the connection and the queue for a job:"
msgstr ""

# File: docs/8.x/queues.md, line: 864
# File: docs/master/queues.md, line: 802
#. type: Plain text
#: docs/8.x/queues.md:864
#, no-wrap
msgid ""
"    ProcessPodcast::dispatch($podcast)\n"
"                  ->onConnection('sqs')\n"
"                  ->onQueue('processing');\n"
msgstr ""

# File: docs/8.x/queues.md, line: 866
# File: docs/master/queues.md, line: 804
#. type: Plain text
#: docs/8.x/queues.md:866
msgid ""
"Alternatively, you may specify the job's connection by calling the "
"`onConnection` method within the job's constructor:"
msgstr ""

# File: docs/8.x/queues.md, line: 891
# File: docs/master/queues.md, line: 829
#. type: Plain text
#: docs/8.x/queues.md:891
#, no-wrap
msgid ""
"        /**\n"
"         * Create a new job instance.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function __construct()\n"
"        {\n"
"            $this->onConnection('sqs');\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 893
# File: docs/master/queues.md, line: 831
#. type: Plain text
#: docs/8.x/queues.md:893
#, no-wrap
msgid "<a name=\"max-job-attempts-and-timeout\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 893
# File: docs/master/queues.md, line: 831
#. type: Title ###
#: docs/8.x/queues.md:893
#, no-wrap
msgid "Specifying Max Job Attempts / Timeout Values"
msgstr ""

# File: docs/8.x/queues.md, line: 896
# File: docs/master/queues.md, line: 834
#. type: Plain text
#: docs/8.x/queues.md:896
#, no-wrap
msgid "<a name=\"max-attempts\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 896
# File: docs/master/queues.md, line: 834
#. type: Title ####
#: docs/8.x/queues.md:896
#, no-wrap
msgid "Max Attempts"
msgstr ""

# File: docs/8.x/queues.md, line: 899
# File: docs/master/queues.md, line: 837
#. type: Plain text
#: docs/8.x/queues.md:899
msgid ""
"If one of your queued jobs is encountering an error, you likely do not want "
"it to keep retrying indefinitely. Therefore, Laravel provides various ways "
"to specify how many times or for how long a job may be attempted."
msgstr ""

# File: docs/8.x/queues.md, line: 901
# File: docs/master/queues.md, line: 839
#. type: Plain text
#: docs/8.x/queues.md:901
msgid ""
"One approach to specifying the maximum number of times a job may be "
"attempted is via the `--tries` switch on the Artisan command line. This will "
"apply to all jobs processed by the worker unless the job being processed "
"specifies a more specific number of times it may be attempted:"
msgstr ""

# File: docs/8.x/queues.md, line: 903
# File: docs/master/queues.md, line: 841
#. type: Plain text
#: docs/8.x/queues.md:903
#, no-wrap
msgid "    php artisan queue:work --tries=3\n"
msgstr ""

# File: docs/8.x/queues.md, line: 905
# File: docs/master/queues.md, line: 843
#. type: Plain text
#: docs/8.x/queues.md:905
msgid ""
"If a job exceeds its maximum number of attempts, it will be considered a "
"\"failed\" job. For more information on handling failed jobs, consult the "
"[failed job documentation](#dealing-with-failed-jobs)."
msgstr ""

# File: docs/8.x/queues.md, line: 907
# File: docs/master/queues.md, line: 845
#. type: Plain text
#: docs/8.x/queues.md:907
msgid ""
"You may take a more granular approach by defining the maximum number of "
"times a job may be attempted on the job class itself. If the maximum number "
"of attempts is specified on the job, it will take precedence over the `--"
"tries` value provided on the command line:"
msgstr ""

# File: docs/8.x/queues.md, line: 921
# File: docs/master/queues.md, line: 859
#. type: Plain text
#: docs/8.x/queues.md:921
#, no-wrap
msgid ""
"    class ProcessPodcast implements ShouldQueue\n"
"    {\n"
"        /**\n"
"         * The number of times the job may be attempted.\n"
"         *\n"
"         * @var int\n"
"         */\n"
"        public $tries = 5;\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 923
# File: docs/master/queues.md, line: 861
#. type: Plain text
#: docs/8.x/queues.md:923
#, no-wrap
msgid "<a name=\"time-based-attempts\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 923
# File: docs/master/queues.md, line: 861
#. type: Title ####
#: docs/8.x/queues.md:923
#, no-wrap
msgid "Time Based Attempts"
msgstr ""

# File: docs/8.x/queues.md, line: 926
# File: docs/master/queues.md, line: 864
#. type: Plain text
#: docs/8.x/queues.md:926
msgid ""
"As an alternative to defining how many times a job may be attempted before "
"it fails, you may define a time at which the job should no longer be "
"attempted. This allows a job to be attempted any number of times within a "
"given time frame. To define the time at which a job should no longer be "
"attempted, add a `retryUntil` method to your job class. This method should "
"return a `DateTime` instance:"
msgstr ""

# File: docs/8.x/queues.md, line: 936
# File: docs/master/queues.md, line: 874
#. type: Plain text
#: docs/8.x/queues.md:936
#, no-wrap
msgid ""
"    /**\n"
"     * Determine the time at which the job should timeout.\n"
"     *\n"
"     * @return \\DateTime\n"
"     */\n"
"    public function retryUntil()\n"
"    {\n"
"        return now()->addMinutes(10);\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 938
# File: docs/master/queues.md, line: 876
#. type: Plain text
#: docs/8.x/queues.md:938
#, no-wrap
msgid "> {tip} You may also define a `tries` property or `retryUntil` method on your [queued event listeners](/docs/{{version}}/events#queued-event-listeners).\n"
msgstr ""

# File: docs/8.x/queues.md, line: 940
# File: docs/master/queues.md, line: 878
#. type: Plain text
#: docs/8.x/queues.md:940
#, no-wrap
msgid "<a name=\"max-exceptions\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 940
# File: docs/master/queues.md, line: 878
#. type: Title ####
#: docs/8.x/queues.md:940
#, no-wrap
msgid "Max Exceptions"
msgstr ""

# File: docs/8.x/queues.md, line: 943
# File: docs/master/queues.md, line: 881
#. type: Plain text
#: docs/8.x/queues.md:943
msgid ""
"Sometimes you may wish to specify that a job may be attempted many times, "
"but should fail if the retries are triggered by a given number of unhandled "
"exceptions (as opposed to being released by the `release` method directly). "
"To accomplish this, you may define a `maxExceptions` property on your job "
"class:"
msgstr ""

# File: docs/8.x/queues.md, line: 958
# File: docs/master/queues.md, line: 896
#. type: Plain text
#: docs/8.x/queues.md:958
#, no-wrap
msgid ""
"    class ProcessPodcast implements ShouldQueue\n"
"    {\n"
"        /**\n"
"         * The number of times the job may be attempted.\n"
"         *\n"
"         * @var int\n"
"         */\n"
"        public $tries = 25;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 965
# File: docs/master/queues.md, line: 903
#. type: Plain text
#: docs/8.x/queues.md:965
#, no-wrap
msgid ""
"        /**\n"
"         * The maximum number of unhandled exceptions to allow before failing.\n"
"         *\n"
"         * @var int\n"
"         */\n"
"        public $maxExceptions = 3;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 981
# File: docs/master/queues.md, line: 919
#. type: Plain text
#: docs/8.x/queues.md:981
#, no-wrap
msgid ""
"        /**\n"
"         * Execute the job.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function handle()\n"
"        {\n"
"            Redis::throttle('key')->allow(10)->every(60)->then(function () {\n"
"                // Lock obtained, process the podcast...\n"
"            }, function () {\n"
"                // Unable to obtain lock...\n"
"                return $this->release(10);\n"
"            });\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 983
# File: docs/master/queues.md, line: 921
#. type: Plain text
#: docs/8.x/queues.md:983
msgid ""
"In this example, the job is released for ten seconds if the application is "
"unable to obtain a Redis lock and will continue to be retried up to 25 "
"times. However, the job will fail if three unhandled exceptions are thrown "
"by the job."
msgstr ""

# File: docs/8.x/http-client.md, line: 148
# File: docs/8.x/queues.md, line: 985
# File: docs/master/http-client.md, line: 140
# File: docs/master/queues.md, line: 923
#. type: Plain text
#: docs/8.x/queues.md:985
#, no-wrap
msgid "<a name=\"timeout\"></a>\n"
msgstr ""

# File: docs/8.x/http-client.md, line: 148
# File: docs/8.x/queues.md, line: 985
# File: docs/master/http-client.md, line: 140
# File: docs/master/queues.md, line: 923
#. type: Title ####
#: docs/8.x/queues.md:985
#, no-wrap
msgid "Timeout"
msgstr ""

# File: docs/8.x/queues.md, line: 988
# File: docs/master/queues.md, line: 926
#. type: Plain text
#: docs/8.x/queues.md:988
#, no-wrap
msgid "> {note} The `pcntl` PHP extension must be installed in order to specify job timeouts.\n"
msgstr ""

# File: docs/8.x/queues.md, line: 990
# File: docs/master/queues.md, line: 928
#. type: Plain text
#: docs/8.x/queues.md:990
msgid ""
"Often, you know roughly how long you expect your queued jobs to take. For "
"this reason, Laravel allows you to specify a \"timeout\" value. If a job is "
"processing for longer than the number of seconds specified by the timeout "
"value, the worker processing the job will exit with an error. Typically, the "
"worker will be restarted automatically by a [process manager configured on "
"your server](#supervisor-configuration)."
msgstr ""

# File: docs/8.x/queues.md, line: 992
# File: docs/master/queues.md, line: 930
#. type: Plain text
#: docs/8.x/queues.md:992
msgid ""
"The maximum number of seconds that jobs can run may be specified using the "
"`--timeout` switch on the Artisan command line:"
msgstr ""

# File: docs/8.x/queues.md, line: 994
# File: docs/master/queues.md, line: 932
#. type: Plain text
#: docs/8.x/queues.md:994
#, no-wrap
msgid "    php artisan queue:work --timeout=30\n"
msgstr ""

# File: docs/8.x/queues.md, line: 996
# File: docs/master/queues.md, line: 934
#. type: Plain text
#: docs/8.x/queues.md:996
msgid ""
"If the job exceeds its maximum attempts by continually timing out, it will "
"be marked as failed."
msgstr ""

# File: docs/8.x/queues.md, line: 998
# File: docs/master/queues.md, line: 936
#. type: Plain text
#: docs/8.x/queues.md:998
msgid ""
"You may also define the maximum number of seconds a job should be allowed to "
"run on the job class itself. If the timeout is specified on the job, it will "
"take precedence over any timeout specified on the command line:"
msgstr ""

# File: docs/8.x/queues.md, line: 1012
# File: docs/master/queues.md, line: 950
#. type: Plain text
#: docs/8.x/queues.md:1012
#, no-wrap
msgid ""
"    class ProcessPodcast implements ShouldQueue\n"
"    {\n"
"        /**\n"
"         * The number of seconds the job can run before timing out.\n"
"         *\n"
"         * @var int\n"
"         */\n"
"        public $timeout = 120;\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1014
# File: docs/master/queues.md, line: 952
#. type: Plain text
#: docs/8.x/queues.md:1014
msgid ""
"Sometimes, IO blocking processes such as sockets or outgoing HTTP "
"connections may not respect your specified timeout. Therefore, when using "
"these features, you should always attempt to specify a timeout using their "
"APIs as well. For example, when using Guzzle, you should always specify a "
"connection and request timeout value."
msgstr ""

# File: docs/8.x/http-client.md, line: 166
# File: docs/8.x/queues.md, line: 1016
# File: docs/master/http-client.md, line: 158
# File: docs/master/queues.md, line: 954
#. type: Plain text
#: docs/8.x/queues.md:1016
#, no-wrap
msgid "<a name=\"error-handling\"></a>\n"
msgstr ""

# File: docs/8.x/errors.md, line: 1
# File: docs/8.x/http-client.md, line: 166
# File: docs/8.x/queues.md, line: 1016
# File: docs/master/errors.md, line: 1
# File: docs/master/http-client.md, line: 158
# File: docs/master/queues.md, line: 954
#. type: Title ###
#: docs/8.x/queues.md:1016
#, no-wrap
msgid "Error Handling"
msgstr ""

# File: docs/8.x/queues.md, line: 1019
# File: docs/master/queues.md, line: 957
#. type: Plain text
#: docs/8.x/queues.md:1019
msgid ""
"If an exception is thrown while the job is being processed, the job will "
"automatically be released back onto the queue so it may be attempted again. "
"The job will continue to be released until it has been attempted the maximum "
"number of times allowed by your application. The maximum number of attempts "
"is defined by the `--tries` switch used on the `queue:work` Artisan command. "
"Alternatively, the maximum number of attempts may be defined on the job "
"class itself. More information on running the queue worker [can be found "
"below](#running-the-queue-worker)."
msgstr ""

# File: docs/8.x/queues.md, line: 1021
# File: docs/master/queues.md, line: 959
#. type: Plain text
#: docs/8.x/queues.md:1021
#, no-wrap
msgid "<a name=\"manually-releasing-a-job\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1021
# File: docs/master/queues.md, line: 959
#. type: Title ####
#: docs/8.x/queues.md:1021
#, no-wrap
msgid "Manually Releasing A Job"
msgstr ""

# File: docs/8.x/queues.md, line: 1024
# File: docs/master/queues.md, line: 962
#. type: Plain text
#: docs/8.x/queues.md:1024
msgid ""
"Sometimes you may wish to manually release a job back onto the queue so that "
"it can be attempted again at a later time. You may accomplish this by "
"calling the `release` method:"
msgstr ""

# File: docs/8.x/queues.md, line: 1033
# File: docs/8.x/queues.md, line: 1054
# File: docs/master/queues.md, line: 971
# File: docs/master/queues.md, line: 992
#. type: Plain text
#: docs/8.x/queues.md:1033 docs/8.x/queues.md:1054
#, no-wrap
msgid ""
"    /**\n"
"     * Execute the job.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function handle()\n"
"    {\n"
"        // ...\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1036
# File: docs/master/queues.md, line: 974
#. type: Plain text
#: docs/8.x/queues.md:1036
#, no-wrap
msgid ""
"        $this->release();\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1038
# File: docs/master/queues.md, line: 976
#. type: Plain text
#: docs/8.x/queues.md:1038
msgid ""
"By default, the `release` method will release the job back onto the queue "
"for immediate processing. However, by passing an integer to the `release` "
"method you may instruct the queue to not make the job available for "
"processing until a given number of seconds has elapsed:"
msgstr ""

# File: docs/8.x/queues.md, line: 1040
# File: docs/master/queues.md, line: 978
#. type: Plain text
#: docs/8.x/queues.md:1040
#, no-wrap
msgid "    $this->release(10)\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1042
# File: docs/master/queues.md, line: 980
#. type: Plain text
#: docs/8.x/queues.md:1042
#, no-wrap
msgid "<a name=\"manually-failing-a-job\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1042
# File: docs/master/queues.md, line: 980
#. type: Title ####
#: docs/8.x/queues.md:1042
#, no-wrap
msgid "Manually Failing A Job"
msgstr ""

# File: docs/8.x/queues.md, line: 1045
# File: docs/master/queues.md, line: 983
#. type: Plain text
#: docs/8.x/queues.md:1045
msgid ""
"Occasionally you may need to manually mark a job as \"failed\". To do so, "
"you may call the `fail` method:"
msgstr ""

# File: docs/8.x/queues.md, line: 1057
# File: docs/master/queues.md, line: 995
#. type: Plain text
#: docs/8.x/queues.md:1057
#, no-wrap
msgid ""
"        $this->fail();\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1059
# File: docs/master/queues.md, line: 997
#. type: Plain text
#: docs/8.x/queues.md:1059
msgid ""
"If you would like to mark your job as failed because of an exception that "
"you have caught, you may pass the exception to the `fail` method:"
msgstr ""

# File: docs/8.x/queues.md, line: 1061
# File: docs/master/queues.md, line: 999
#. type: Plain text
#: docs/8.x/queues.md:1061
#, no-wrap
msgid "    $this->fail($exception);\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1063
# File: docs/master/queues.md, line: 1001
#. type: Plain text
#: docs/8.x/queues.md:1063
#, no-wrap
msgid "> {tip} For more information on failed jobs, check out the [documentation on dealing with job failures](#dealing-with-failed-jobs).\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1065
# File: docs/8.x/releases.md, line: 151
# File: docs/master/queues.md, line: 1003
# File: docs/master/releases.md, line: 151
#. type: Plain text
#: docs/8.x/queues.md:1065
#, no-wrap
msgid "<a name=\"job-batching\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1065
# File: docs/8.x/releases.md, line: 151
# File: docs/master/queues.md, line: 1003
# File: docs/master/releases.md, line: 151
#. type: Title ##
#: docs/8.x/queues.md:1065
#, no-wrap
msgid "Job Batching"
msgstr ""

# File: docs/8.x/queues.md, line: 1068
# File: docs/master/queues.md, line: 1006
#. type: Plain text
#: docs/8.x/queues.md:1068
msgid ""
"Laravel's job batching feature allows you to easily execute a batch of jobs "
"and then perform some action when the batch of jobs has completed executing. "
"Before getting started, you should create a database migration to build a "
"table to contain meta information about your job batches, such as their "
"completion percentage. This migration may be generated using the `queue:"
"batches-table` Artisan command:"
msgstr ""

# File: docs/8.x/queues.md, line: 1070
# File: docs/master/queues.md, line: 1008
#. type: Plain text
#: docs/8.x/queues.md:1070
#, no-wrap
msgid "    php artisan queue:batches-table\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1074
# File: docs/master/queues.md, line: 1012
#. type: Plain text
#: docs/8.x/queues.md:1074
#, no-wrap
msgid "<a name=\"defining-batchable-jobs\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1074
# File: docs/master/queues.md, line: 1012
#. type: Title ###
#: docs/8.x/queues.md:1074
#, no-wrap
msgid "Defining Batchable Jobs"
msgstr ""

# File: docs/8.x/queues.md, line: 1077
# File: docs/master/queues.md, line: 1015
#. type: Plain text
#: docs/8.x/queues.md:1077
msgid ""
"To define a batchable job, you should [create a queueable job](#creating-"
"jobs) as normal; however, you should add the `Illuminate\\Bus\\Batchable` "
"trait to the job class. This trait provides access to a `batch` method which "
"may be used to retrieve the current batch that the job is executing within:"
msgstr ""

# File: docs/8.x/queues.md, line: 1088
# File: docs/master/queues.md, line: 1026
#. type: Plain text
#: docs/8.x/queues.md:1088
#, no-wrap
msgid ""
"    use Illuminate\\Bus\\Batchable;\n"
"    use Illuminate\\Bus\\Queueable;\n"
"    use Illuminate\\Contracts\\Queue\\ShouldQueue;\n"
"    use Illuminate\\Foundation\\Bus\\Dispatchable;\n"
"    use Illuminate\\Queue\\InteractsWithQueue;\n"
"    use Illuminate\\Queue\\SerializesModels;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1092
# File: docs/master/queues.md, line: 1030
#. type: Plain text
#: docs/8.x/queues.md:1092
#, no-wrap
msgid ""
"    class ImportCsv implements ShouldQueue\n"
"    {\n"
"        use Batchable, Dispatchable, InteractsWithQueue, Queueable, SerializesModels;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1102
# File: docs/master/queues.md, line: 1040
#. type: Plain text
#: docs/8.x/queues.md:1102
#, no-wrap
msgid ""
"        /**\n"
"         * Execute the job.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function handle()\n"
"        {\n"
"            if ($this->batch()->cancelled()) {\n"
"                // Determine if the batch has been cancelled...\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1105
# File: docs/master/queues.md, line: 1043
#. type: Plain text
#: docs/8.x/queues.md:1105
#, no-wrap
msgid ""
"                return;\n"
"            }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1109
# File: docs/master/queues.md, line: 1047
#. type: Plain text
#: docs/8.x/queues.md:1109
#, no-wrap
msgid ""
"            // Import a portion of the CSV file...\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1111
# File: docs/master/queues.md, line: 1049
#. type: Plain text
#: docs/8.x/queues.md:1111
#, no-wrap
msgid "<a name=\"dispatching-batches\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1111
# File: docs/master/queues.md, line: 1049
#. type: Title ###
#: docs/8.x/queues.md:1111
#, no-wrap
msgid "Dispatching Batches"
msgstr ""

# File: docs/8.x/queues.md, line: 1114
# File: docs/master/queues.md, line: 1052
#. type: Plain text
#: docs/8.x/queues.md:1114
msgid ""
"To dispatch a batch of jobs, you should use the `batch` method of the `Bus` "
"facade. Of course, batching is primarily useful when combined with "
"completion callbacks. So, you may use the `then`, `catch`, and `finally` "
"methods to define completion callbacks for the batch. Each of these "
"callbacks will receive an `Illuminate\\Bus\\Batch` instance when they are "
"invoked. In this example, we will imagine we are queueing a batch of jobs "
"that each process a given number of rows from a CSV file:"
msgstr ""

# File: docs/8.x/queues.md, line: 1119
# File: docs/master/queues.md, line: 1057
#. type: Plain text
#: docs/8.x/queues.md:1119
#, no-wrap
msgid ""
"    use App\\Jobs\\ImportCsv;\n"
"    use Illuminate\\Bus\\Batch;\n"
"    use Illuminate\\Support\\Facades\\Bus;\n"
"    use Throwable;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1133
# File: docs/master/queues.md, line: 1071
#. type: Plain text
#: docs/8.x/queues.md:1133
#, no-wrap
msgid ""
"    $batch = Bus::batch([\n"
"        new ImportCsv(1, 100),\n"
"        new ImportCsv(101, 200),\n"
"        new ImportCsv(201, 300),\n"
"        new ImportCsv(301, 400),\n"
"        new ImportCsv(401, 500),\n"
"    ])->then(function (Batch $batch) {\n"
"        // All jobs completed successfully...\n"
"    })->catch(function (Batch $batch, Throwable $e) {\n"
"        // First batch job failure detected...\n"
"    })->finally(function (Batch $batch) {\n"
"        // The batch has finished executing...\n"
"    })->dispatch();\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1135
# File: docs/8.x/releases.md, line: 180
# File: docs/master/queues.md, line: 1073
# File: docs/master/releases.md, line: 180
#. type: Plain text
#: docs/8.x/queues.md:1135
#, no-wrap
msgid "    return $batch->id;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1137
# File: docs/master/queues.md, line: 1075
#. type: Plain text
#: docs/8.x/queues.md:1137
#, no-wrap
msgid "The batch's ID, which may be accessed via the `$batch->id` property, may be used to [query the Laravel command bus](#inspecting-batches) for information about the batch after it has been dispatched.\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1139
# File: docs/master/queues.md, line: 1077
#. type: Plain text
#: docs/8.x/queues.md:1139
#, no-wrap
msgid "<a name=\"naming-batches\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1139
# File: docs/master/queues.md, line: 1077
#. type: Title ####
#: docs/8.x/queues.md:1139
#, no-wrap
msgid "Naming Batches"
msgstr ""

# File: docs/8.x/queues.md, line: 1142
# File: docs/master/queues.md, line: 1080
#. type: Plain text
#: docs/8.x/queues.md:1142
msgid ""
"Some tools such as Laravel Horizon and Laravel Telescope may provide more "
"user-friendly debug information for batches if batches are named. To assign "
"an arbitrary name to a batch, you may call the `name` method while defining "
"the batch:"
msgstr ""

# File: docs/8.x/queues.md, line: 1148
# File: docs/master/queues.md, line: 1086
#. type: Plain text
#: docs/8.x/queues.md:1148
#, no-wrap
msgid ""
"    $batch = Bus::batch([\n"
"        // ...\n"
"    ])->then(function (Batch $batch) {\n"
"        // All jobs completed successfully...\n"
"    })->name('Import CSV')->dispatch();\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1150
# File: docs/master/queues.md, line: 1088
#. type: Plain text
#: docs/8.x/queues.md:1150
#, no-wrap
msgid "<a name=\"batch-connection-queue\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1150
# File: docs/master/queues.md, line: 1088
#. type: Title ####
#: docs/8.x/queues.md:1150
#, no-wrap
msgid "Batch Connection & Queue"
msgstr ""

# File: docs/8.x/queues.md, line: 1153
# File: docs/master/queues.md, line: 1091
#. type: Plain text
#: docs/8.x/queues.md:1153
msgid ""
"If you would like to specify the connection and queue that should be used "
"for the batched jobs, you may use the `onConnection` and `onQueue` methods. "
"All batched jobs must execute within the same connection and queue:"
msgstr ""

# File: docs/8.x/queues.md, line: 1159
# File: docs/master/queues.md, line: 1097
#. type: Plain text
#: docs/8.x/queues.md:1159
#, no-wrap
msgid ""
"    $batch = Bus::batch([\n"
"        // ...\n"
"    ])->then(function (Batch $batch) {\n"
"        // All jobs completed successfully...\n"
"    })->onConnection('redis')->onQueue('imports')->dispatch();\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1161
# File: docs/master/queues.md, line: 1099
#. type: Plain text
#: docs/8.x/queues.md:1161
#, no-wrap
msgid "<a name=\"chains-within-batches\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1161
# File: docs/master/queues.md, line: 1099
#. type: Title ####
#: docs/8.x/queues.md:1161
#, no-wrap
msgid "Chains Within Batches"
msgstr ""

# File: docs/8.x/queues.md, line: 1164
# File: docs/master/queues.md, line: 1102
#. type: Plain text
#: docs/8.x/queues.md:1164
msgid ""
"You may define a set of [chained jobs](#job-chaining) within a batch by "
"placing the chained jobs within an array. For example, we may execute two "
"job chains in parallel and execute a callback when both job chains have "
"finished processing:"
msgstr ""

# File: docs/8.x/queues.md, line: 1169
# File: docs/master/queues.md, line: 1107
#. type: Plain text
#: docs/8.x/queues.md:1169
#, no-wrap
msgid ""
"    use App\\Jobs\\ReleasePodcast;\n"
"    use App\\Jobs\\SendPodcastReleaseNotification;\n"
"    use Illuminate\\Bus\\Batch;\n"
"    use Illuminate\\Support\\Facades\\Bus;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1182
# File: docs/master/queues.md, line: 1120
#. type: Plain text
#: docs/8.x/queues.md:1182
#, no-wrap
msgid ""
"    Bus::batch([\n"
"        [\n"
"            new ReleasePodcast(1),\n"
"            new SendPodcastReleaseNotification(1),\n"
"        ],\n"
"        [\n"
"            new ReleasePodcast(2),\n"
"            new SendPodcastReleaseNotification(2),\n"
"        ],\n"
"    ])->then(function (Batch $batch) {\n"
"        // ...\n"
"    })->dispatch();\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1184
# File: docs/master/queues.md, line: 1122
#. type: Plain text
#: docs/8.x/queues.md:1184
#, no-wrap
msgid "<a name=\"adding-jobs-to-batches\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1184
# File: docs/master/queues.md, line: 1122
#. type: Title ###
#: docs/8.x/queues.md:1184
#, no-wrap
msgid "Adding Jobs To Batches"
msgstr ""

# File: docs/8.x/queues.md, line: 1187
# File: docs/master/queues.md, line: 1125
#. type: Plain text
#: docs/8.x/queues.md:1187
msgid ""
"Sometimes it may be useful to add additional jobs to a batch from within a "
"batched job. This pattern can be useful when you need to batch thousands of "
"jobs which may take too long to dispatch during a web request. So, instead, "
"you may wish to dispatch an initial batch of \"loader\" jobs that hydrate "
"the batch with even more jobs:"
msgstr ""

# File: docs/8.x/queues.md, line: 1195
# File: docs/master/queues.md, line: 1133
#. type: Plain text
#: docs/8.x/queues.md:1195
#, no-wrap
msgid ""
"    $batch = Bus::batch([\n"
"        new LoadImportBatch,\n"
"        new LoadImportBatch,\n"
"        new LoadImportBatch,\n"
"    ])->then(function (Batch $batch) {\n"
"        // All jobs completed successfully...\n"
"    })->name('Import Contacts')->dispatch();\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1197
# File: docs/master/queues.md, line: 1135
#. type: Plain text
#: docs/8.x/queues.md:1197
msgid ""
"In this example, we will use the `LoadImportBatch` job to hydrate the batch "
"with additional jobs. To accomplish this, we may use the `add` method on the "
"batch instance that may be accessed via the job's `batch` method:"
msgstr ""

# File: docs/8.x/queues.md, line: 1200
# File: docs/master/queues.md, line: 1138
#. type: Plain text
#: docs/8.x/queues.md:1200
#, no-wrap
msgid ""
"    use App\\Jobs\\ImportContacts;\n"
"    use Illuminate\\Support\\Collection;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1211
# File: docs/8.x/queues.md, line: 1301
# File: docs/master/queues.md, line: 1149
# File: docs/master/queues.md, line: 1239
#. type: Plain text
#: docs/8.x/queues.md:1211 docs/8.x/queues.md:1301
#, no-wrap
msgid ""
"    /**\n"
"     * Execute the job.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function handle()\n"
"    {\n"
"        if ($this->batch()->cancelled()) {\n"
"            return;\n"
"        }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1216
# File: docs/master/queues.md, line: 1154
#. type: Plain text
#: docs/8.x/queues.md:1216
#, no-wrap
msgid ""
"        $this->batch()->add(Collection::times(1000, function () {\n"
"            return new ImportContacts;\n"
"        }));\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1218
# File: docs/master/queues.md, line: 1156
#. type: Plain text
#: docs/8.x/queues.md:1218
#, no-wrap
msgid "> {note} You may only add jobs to a batch from within a job that belongs to the same batch.\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1220
# File: docs/master/queues.md, line: 1158
#. type: Plain text
#: docs/8.x/queues.md:1220
#, no-wrap
msgid "<a name=\"inspecting-batches\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1220
# File: docs/master/queues.md, line: 1158
#. type: Title ###
#: docs/8.x/queues.md:1220
#, no-wrap
msgid "Inspecting Batches"
msgstr ""

# File: docs/8.x/queues.md, line: 1223
# File: docs/master/queues.md, line: 1161
#. type: Plain text
#: docs/8.x/queues.md:1223
msgid ""
"The `Illuminate\\Bus\\Batch` instance that is provided to batch completion "
"callbacks has a variety of properties and methods to assist you in "
"interacting with and inspecting a given batch of jobs:"
msgstr ""

# File: docs/8.x/queues.md, line: 1226
# File: docs/master/queues.md, line: 1164
#. type: Plain text
#: docs/8.x/queues.md:1226
#, no-wrap
msgid ""
"    // The UUID of the batch...\n"
"    $batch->id;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1229
# File: docs/master/queues.md, line: 1167
#. type: Plain text
#: docs/8.x/queues.md:1229
#, no-wrap
msgid ""
"    // The name of the batch (if applicable)...\n"
"    $batch->name;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1232
# File: docs/master/queues.md, line: 1170
#. type: Plain text
#: docs/8.x/queues.md:1232
#, no-wrap
msgid ""
"    // The number of jobs assigned to the batch...\n"
"    $batch->totalJobs;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1235
# File: docs/master/queues.md, line: 1173
#. type: Plain text
#: docs/8.x/queues.md:1235
#, no-wrap
msgid ""
"    // The number of jobs that have not been processed by the queue...\n"
"    $batch->pendingJobs;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1238
# File: docs/master/queues.md, line: 1176
#. type: Plain text
#: docs/8.x/queues.md:1238
#, no-wrap
msgid ""
"    // The number of jobs that have failed...\n"
"    $batch->failedJobs;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1241
# File: docs/master/queues.md, line: 1179
#. type: Plain text
#: docs/8.x/queues.md:1241
#, no-wrap
msgid ""
"    // The number of jobs that have been processed thus far...\n"
"    $batch->processedJobs();\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1244
# File: docs/master/queues.md, line: 1182
#. type: Plain text
#: docs/8.x/queues.md:1244
#, no-wrap
msgid ""
"    // The completion percentage of the batch (0-100)...\n"
"    $batch->progress();\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1247
# File: docs/master/queues.md, line: 1185
#. type: Plain text
#: docs/8.x/queues.md:1247
#, no-wrap
msgid ""
"    // Indicates if the batch has finished executing...\n"
"    $batch->finished();\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1250
# File: docs/master/queues.md, line: 1188
#. type: Plain text
#: docs/8.x/queues.md:1250
#, no-wrap
msgid ""
"    // Cancel the execution of the batch...\n"
"    $batch->cancel();\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1253
# File: docs/master/queues.md, line: 1191
#. type: Plain text
#: docs/8.x/queues.md:1253
#, no-wrap
msgid ""
"    // Indicates if the batch has been cancelled...\n"
"    $batch->cancelled();\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1255
# File: docs/master/queues.md, line: 1193
#. type: Plain text
#: docs/8.x/queues.md:1255
#, no-wrap
msgid "<a name=\"returning-batches-from-routes\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1255
# File: docs/master/queues.md, line: 1193
#. type: Title ####
#: docs/8.x/queues.md:1255
#, no-wrap
msgid "Returning Batches From Routes"
msgstr ""

# File: docs/8.x/queues.md, line: 1258
# File: docs/master/queues.md, line: 1196
#. type: Plain text
#: docs/8.x/queues.md:1258
msgid ""
"All `Illuminate\\Bus\\Batch` instances are JSON serializable, meaning you "
"can return them directly from one of your application's routes to retrieve a "
"JSON payload containing information about the batch, including its "
"completion progress. This makes it convenient to display information about "
"the batch's completion progress in your application's UI."
msgstr ""

# File: docs/8.x/queues.md, line: 1260
# File: docs/master/queues.md, line: 1198
#. type: Plain text
#: docs/8.x/queues.md:1260
msgid ""
"To retrieve a batch by its ID, you may use the `Bus` facade's `findBatch` "
"method:"
msgstr ""

# File: docs/8.x/queues.md, line: 1263
# File: docs/master/queues.md, line: 1201
#. type: Plain text
#: docs/8.x/queues.md:1263
#, no-wrap
msgid ""
"    use Illuminate\\Support\\Facades\\Bus;\n"
"    use Illuminate\\Support\\Facades\\Route;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1267
# File: docs/master/queues.md, line: 1205
#. type: Plain text
#: docs/8.x/queues.md:1267
#, no-wrap
msgid ""
"    Route::get('/batch/{batchId}', function (string $batchId) {\n"
"        return Bus::findBatch($batchId);\n"
"    });\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1269
# File: docs/master/queues.md, line: 1207
#. type: Plain text
#: docs/8.x/queues.md:1269
#, no-wrap
msgid "<a name=\"cancelling-batches\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1269
# File: docs/master/queues.md, line: 1207
#. type: Title ###
#: docs/8.x/queues.md:1269
#, no-wrap
msgid "Cancelling Batches"
msgstr ""

# File: docs/8.x/queues.md, line: 1272
# File: docs/master/queues.md, line: 1210
#. type: Plain text
#: docs/8.x/queues.md:1272
msgid ""
"Sometimes you may need to cancel a given batch's execution. This can be "
"accomplished by calling the `cancel` method on the `Illuminate\\Bus\\Batch` "
"instance:"
msgstr ""

# File: docs/8.x/queues.md, line: 1283
# File: docs/master/queues.md, line: 1221
#. type: Plain text
#: docs/8.x/queues.md:1283
#, no-wrap
msgid ""
"    /**\n"
"     * Execute the job.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function handle()\n"
"    {\n"
"        if ($this->user->exceedsImportLimit()) {\n"
"            return $this->batch()->cancel();\n"
"        }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1288
# File: docs/master/queues.md, line: 1226
#. type: Plain text
#: docs/8.x/queues.md:1288
#, no-wrap
msgid ""
"        if ($this->batch()->cancelled()) {\n"
"            return;\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1290
# File: docs/master/queues.md, line: 1228
#. type: Plain text
#: docs/8.x/queues.md:1290
msgid ""
"As you may have noticed in previous examples, batched jobs should typically "
"check to see if the batch has been cancelled at the beginning of their "
"`handle` method:"
msgstr ""

# File: docs/8.x/queues.md, line: 1304
# File: docs/master/queues.md, line: 1242
#. type: Plain text
#: docs/8.x/queues.md:1304
#, no-wrap
msgid ""
"        // Continue processing...\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1306
# File: docs/master/queues.md, line: 1244
#. type: Plain text
#: docs/8.x/queues.md:1306
#, no-wrap
msgid "<a name=\"batch-failures\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1306
# File: docs/master/queues.md, line: 1244
#. type: Title ###
#: docs/8.x/queues.md:1306
#, no-wrap
msgid "Batch Failures"
msgstr ""

# File: docs/8.x/queues.md, line: 1309
# File: docs/master/queues.md, line: 1247
#. type: Plain text
#: docs/8.x/queues.md:1309
msgid ""
"When a batched job fails, the `catch` callback (if assigned) will be "
"invoked. This callback is only invoked for the first job that fails within "
"the batch."
msgstr ""

# File: docs/8.x/queues.md, line: 1311
# File: docs/master/queues.md, line: 1249
#. type: Plain text
#: docs/8.x/queues.md:1311
#, no-wrap
msgid "<a name=\"allowing-failures\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1311
# File: docs/master/queues.md, line: 1249
#. type: Title ####
#: docs/8.x/queues.md:1311
#, no-wrap
msgid "Allowing Failures"
msgstr ""

# File: docs/8.x/queues.md, line: 1314
# File: docs/master/queues.md, line: 1252
#. type: Plain text
#: docs/8.x/queues.md:1314
msgid ""
"When a job within a batch fails, Laravel will automatically mark the batch "
"as \"cancelled\". If you wish, you may disable this behavior so that a job "
"failure does not automatically mark the batch as cancelled. This may be "
"accomplished by calling the `allowFailures` method while dispatching the "
"batch:"
msgstr ""

# File: docs/8.x/queues.md, line: 1320
# File: docs/master/queues.md, line: 1258
#. type: Plain text
#: docs/8.x/queues.md:1320
#, no-wrap
msgid ""
"    $batch = Bus::batch([\n"
"        // ...\n"
"    ])->then(function (Batch $batch) {\n"
"        // All jobs completed successfully...\n"
"    })->allowFailures()->dispatch();\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1322
# File: docs/master/queues.md, line: 1260
#. type: Plain text
#: docs/8.x/queues.md:1322
#, no-wrap
msgid "<a name=\"retrying-failed-batch-jobs\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1322
# File: docs/master/queues.md, line: 1260
#. type: Title ####
#: docs/8.x/queues.md:1322
#, no-wrap
msgid "Retrying Failed Batch Jobs"
msgstr ""

# File: docs/8.x/queues.md, line: 1325
# File: docs/master/queues.md, line: 1263
#. type: Plain text
#: docs/8.x/queues.md:1325
msgid ""
"For convenience, Laravel provides a `queue:retry-batch` Artisan command that "
"allows you to easily retry all of the failed jobs for a given batch. The "
"`queue:retry-batch` command accepts the UUID of the batch whose failed jobs "
"should be retried:"
msgstr ""

# File: docs/8.x/queues.md, line: 1326
# File: docs/master/queues.md, line: 1264
#. type: Fenced code block (bash)
#: docs/8.x/queues.md:1326
#, no-wrap
msgid "php artisan queue:retry-batch 32dbc76c-4f82-4749-b610-a639fe0099b5\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1331
# File: docs/master/queues.md, line: 1269
#. type: Plain text
#: docs/8.x/queues.md:1331
#, no-wrap
msgid "<a name=\"pruning-batches\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1331
# File: docs/master/queues.md, line: 1269
#. type: Title ###
#: docs/8.x/queues.md:1331
#, no-wrap
msgid "Pruning Batches"
msgstr ""

# File: docs/8.x/queues.md, line: 1334
# File: docs/master/queues.md, line: 1272
#. type: Plain text
#: docs/8.x/queues.md:1334
msgid ""
"Without pruning, the `job_batches` table can accumulate records very "
"quickly. To mitigate this, you should [schedule](/docs/{{version}}/"
"scheduling) the `queue:prune-batches` Artisan command to run daily:"
msgstr ""

# File: docs/8.x/queues.md, line: 1336
# File: docs/master/queues.md, line: 1274
#. type: Plain text
#: docs/8.x/queues.md:1336
#, no-wrap
msgid "    $schedule->command('queue:prune-batches')->daily();\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1338
# File: docs/master/queues.md, line: 1276
#. type: Plain text
#: docs/8.x/queues.md:1338
msgid ""
"By default, all finished batches that are more than 24 hours old will be "
"pruned. You may use the `hours` option when calling the command to determine "
"how long to retain batch data. For example, the following command will "
"delete all batches that finished over 48 hours ago:"
msgstr ""

# File: docs/8.x/queues.md, line: 1340
# File: docs/master/queues.md, line: 1278
#. type: Plain text
#: docs/8.x/queues.md:1340
#, no-wrap
msgid "    $schedule->command('queue:prune-batches --hours=48')->daily();\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1342
# File: docs/master/queues.md, line: 1280
#. type: Plain text
#: docs/8.x/queues.md:1342
#, no-wrap
msgid "<a name=\"queueing-closures\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1342
# File: docs/master/queues.md, line: 1280
#. type: Title ##
#: docs/8.x/queues.md:1342
#, no-wrap
msgid "Queueing Closures"
msgstr ""

# File: docs/8.x/queues.md, line: 1345
# File: docs/master/queues.md, line: 1283
#. type: Plain text
#: docs/8.x/queues.md:1345
msgid ""
"Instead of dispatching a job class to the queue, you may also dispatch a "
"closure. This is great for quick, simple tasks that need to be executed "
"outside of the current request cycle. When dispatching closures to the "
"queue, the closure's code content is cryptographically signed so that it can "
"not be modified in transit:"
msgstr ""

# File: docs/8.x/queues.md, line: 1347
# File: docs/master/queues.md, line: 1285
#. type: Plain text
#: docs/8.x/queues.md:1347
#, no-wrap
msgid "    $podcast = App\\Podcast::find(1);\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1351
# File: docs/master/queues.md, line: 1289
#. type: Plain text
#: docs/8.x/queues.md:1351
#, no-wrap
msgid ""
"    dispatch(function () use ($podcast) {\n"
"        $podcast->publish();\n"
"    });\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1353
# File: docs/master/queues.md, line: 1291
#. type: Plain text
#: docs/8.x/queues.md:1353
msgid ""
"Using the `catch` method, you may provide a closure that should be executed "
"if the queued closure fails to complete successfully after exhausting all of "
"your queue's [configured retry attempts](#max-job-attempts-and-timeout):"
msgstr ""

# File: docs/8.x/queues.md, line: 1355
# File: docs/8.x/releases.md, line: 263
# File: docs/master/queues.md, line: 1293
# File: docs/master/releases.md, line: 263
#. type: Plain text
#: docs/8.x/queues.md:1355
#, no-wrap
msgid "    use Throwable;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1361
# File: docs/8.x/releases.md, line: 269
# File: docs/master/queues.md, line: 1299
# File: docs/master/releases.md, line: 269
#. type: Plain text
#: docs/8.x/queues.md:1361
#, no-wrap
msgid ""
"    dispatch(function () use ($podcast) {\n"
"        $podcast->publish();\n"
"    })->catch(function (Throwable $e) {\n"
"        // This job has failed...\n"
"    });\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1363
# File: docs/master/queues.md, line: 1301
#. type: Plain text
#: docs/8.x/queues.md:1363
#, no-wrap
msgid "<a name=\"running-the-queue-worker\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1363
# File: docs/master/queues.md, line: 1301
#. type: Title ##
#: docs/8.x/queues.md:1363
#, no-wrap
msgid "Running The Queue Worker"
msgstr ""

# File: docs/8.x/queues.md, line: 1366
# File: docs/master/queues.md, line: 1304
#. type: Plain text
#: docs/8.x/queues.md:1366
#, no-wrap
msgid "<a name=\"the-queue-work-command\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1366
# File: docs/master/queues.md, line: 1304
#. type: Title ###
#: docs/8.x/queues.md:1366
#, no-wrap
msgid "The `queue:work` Command"
msgstr ""

# File: docs/8.x/queues.md, line: 1369
# File: docs/master/queues.md, line: 1307
#. type: Plain text
#: docs/8.x/queues.md:1369
msgid ""
"Laravel includes an Artisan command that will start a queue worker and "
"process new jobs as they are pushed onto the queue. You may run the worker "
"using the `queue:work` Artisan command. Note that once the `queue:work` "
"command has started, it will continue to run until it is manually stopped or "
"you close your terminal:"
msgstr ""

# File: docs/8.x/queues.md, line: 1371
# File: docs/master/queues.md, line: 1309
#. type: Plain text
#: docs/8.x/queues.md:1371
#, no-wrap
msgid "    php artisan queue:work\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1373
# File: docs/master/queues.md, line: 1311
#. type: Plain text
#: docs/8.x/queues.md:1373
#, no-wrap
msgid "> {tip} To keep the `queue:work` process running permanently in the background, you should use a process monitor such as [Supervisor](#supervisor-configuration) to ensure that the queue worker does not stop running.\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1375
# File: docs/master/queues.md, line: 1313
#. type: Plain text
#: docs/8.x/queues.md:1375
msgid ""
"Remember, queue workers, are long-lived processes and store the booted "
"application state in memory. As a result, they will not notice changes in "
"your code base after they have been started. So, during your deployment "
"process, be sure to [restart your queue workers](#queue-workers-and-"
"deployment). In addition, remember that any static state created or modified "
"by your application will not be automatically reset between jobs."
msgstr ""

# File: docs/8.x/queues.md, line: 1377
# File: docs/master/queues.md, line: 1315
#. type: Plain text
#: docs/8.x/queues.md:1377
msgid ""
"Alternatively, you may run the `queue:listen` command. When using the `queue:"
"listen` command, you don't have to manually restart the worker when you want "
"to reload your updated code or reset the application state; however, this "
"command is significantly less efficient than the `queue:work` command:"
msgstr ""

# File: docs/8.x/queues.md, line: 1379
# File: docs/master/queues.md, line: 1317
#. type: Plain text
#: docs/8.x/queues.md:1379
#, no-wrap
msgid "    php artisan queue:listen\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1381
# File: docs/master/queues.md, line: 1319
#. type: Plain text
#: docs/8.x/queues.md:1381
#, no-wrap
msgid "<a name=\"running-multiple-queue-workers\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1381
# File: docs/master/queues.md, line: 1319
#. type: Title ####
#: docs/8.x/queues.md:1381
#, no-wrap
msgid "Running Multiple Queue Workers"
msgstr ""

# File: docs/8.x/queues.md, line: 1384
# File: docs/master/queues.md, line: 1322
#. type: Plain text
#: docs/8.x/queues.md:1384
msgid ""
"To assign multiple workers to a queue and process jobs concurrently, you "
"should simply start multiple `queue:work` processes. This can either be done "
"locally via multiple tabs in your terminal or in production using your "
"process manager's configuration settings. [When using Supervisor]"
"(#supervisor-configuration), you may use the `numprocs` configuration value."
msgstr ""

# File: docs/8.x/queues.md, line: 1386
# File: docs/master/queues.md, line: 1324
#. type: Plain text
#: docs/8.x/queues.md:1386
#, no-wrap
msgid "<a name=\"specifying-the-connection-queue\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1386
# File: docs/master/queues.md, line: 1324
#. type: Title ####
#: docs/8.x/queues.md:1386
#, no-wrap
msgid "Specifying The Connection & Queue"
msgstr ""

# File: docs/8.x/queues.md, line: 1389
# File: docs/master/queues.md, line: 1327
#. type: Plain text
#: docs/8.x/queues.md:1389
msgid ""
"You may also specify which queue connection the worker should utilize. The "
"connection name passed to the `work` command should correspond to one of the "
"connections defined in your `config/queue.php` configuration file:"
msgstr ""

# File: docs/8.x/queues.md, line: 1391
# File: docs/master/queues.md, line: 1329
#. type: Plain text
#: docs/8.x/queues.md:1391
#, no-wrap
msgid "    php artisan queue:work redis\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1393
# File: docs/master/queues.md, line: 1331
#. type: Plain text
#: docs/8.x/queues.md:1393
msgid ""
"You may customize your queue worker even further by only processing "
"particular queues for a given connection. For example, if all of your emails "
"are processed in an `emails` queue on your `redis` queue connection, you may "
"issue the following command to start a worker that only processes that queue:"
msgstr ""

# File: docs/8.x/queues.md, line: 1395
# File: docs/master/queues.md, line: 1333
#. type: Plain text
#: docs/8.x/queues.md:1395
#, no-wrap
msgid "    php artisan queue:work redis --queue=emails\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1397
# File: docs/master/queues.md, line: 1335
#. type: Plain text
#: docs/8.x/queues.md:1397
#, no-wrap
msgid "<a name=\"processing-a-specified-number-of-jobs\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1397
# File: docs/master/queues.md, line: 1335
#. type: Title ####
#: docs/8.x/queues.md:1397
#, no-wrap
msgid "Processing A Specified Number Of Jobs"
msgstr ""

# File: docs/8.x/queues.md, line: 1400
# File: docs/master/queues.md, line: 1338
#. type: Plain text
#: docs/8.x/queues.md:1400
msgid ""
"The `--once` option may be used to instruct the worker to only process a "
"single job from the queue:"
msgstr ""

# File: docs/8.x/queues.md, line: 1402
# File: docs/master/queues.md, line: 1340
#. type: Plain text
#: docs/8.x/queues.md:1402
#, no-wrap
msgid "    php artisan queue:work --once\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1404
# File: docs/master/queues.md, line: 1342
#. type: Plain text
#: docs/8.x/queues.md:1404
msgid ""
"The `--max-jobs` option may be used to instruct the worker to process the "
"given number of jobs and then exit. This option may be useful when combined "
"with [Supervisor](#supervisor-configuration) so that your workers are "
"automatically restarted after processing a given number of jobs, releasing "
"any memory they may have accumulated:"
msgstr ""

# File: docs/8.x/queues.md, line: 1406
# File: docs/master/queues.md, line: 1344
#. type: Plain text
#: docs/8.x/queues.md:1406
#, no-wrap
msgid "    php artisan queue:work --max-jobs=1000\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1408
# File: docs/master/queues.md, line: 1346
#. type: Plain text
#: docs/8.x/queues.md:1408
#, no-wrap
msgid "<a name=\"processing-all-queued-jobs-then-exiting\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1408
# File: docs/master/queues.md, line: 1346
#. type: Title ####
#: docs/8.x/queues.md:1408
#, no-wrap
msgid "Processing All Queued Jobs & Then Exiting"
msgstr ""

# File: docs/8.x/queues.md, line: 1411
# File: docs/master/queues.md, line: 1349
#. type: Plain text
#: docs/8.x/queues.md:1411
msgid ""
"The `--stop-when-empty` option may be used to instruct the worker to process "
"all jobs and then exit gracefully. This option can be useful when processing "
"Laravel queues within a Docker container if you wish to shutdown the "
"container after the queue is empty:"
msgstr ""

# File: docs/8.x/queues.md, line: 1413
# File: docs/master/queues.md, line: 1351
#. type: Plain text
#: docs/8.x/queues.md:1413
#, no-wrap
msgid "    php artisan queue:work --stop-when-empty\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1415
# File: docs/master/queues.md, line: 1353
#. type: Plain text
#: docs/8.x/queues.md:1415
#, no-wrap
msgid "<a name=\"processing-jobs-for-a-given-number-of-seconds\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1415
# File: docs/master/queues.md, line: 1353
#. type: Title ####
#: docs/8.x/queues.md:1415
#, no-wrap
msgid "Processing Jobs For A Given Number Of Seconds"
msgstr ""

# File: docs/8.x/queues.md, line: 1418
# File: docs/master/queues.md, line: 1356
#. type: Plain text
#: docs/8.x/queues.md:1418
msgid ""
"The `--max-time` option may be used to instruct the worker to process jobs "
"for the given number of seconds and then exit. This option may be useful "
"when combined with [Supervisor](#supervisor-configuration) so that your "
"workers are automatically restarted after processing jobs for a given amount "
"of time, releasing any memory they may have accumulated:"
msgstr ""

# File: docs/8.x/queues.md, line: 1421
# File: docs/master/queues.md, line: 1359
#. type: Plain text
#: docs/8.x/queues.md:1421
#, no-wrap
msgid ""
"    // Process jobs for one hour and then exit...\n"
"    php artisan queue:work --max-time=3600\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1423
# File: docs/master/queues.md, line: 1361
#. type: Plain text
#: docs/8.x/queues.md:1423
#, no-wrap
msgid "<a name=\"worker-sleep-duration\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1423
# File: docs/master/queues.md, line: 1361
#. type: Title ####
#: docs/8.x/queues.md:1423
#, no-wrap
msgid "Worker Sleep Duration"
msgstr ""

# File: docs/8.x/queues.md, line: 1426
# File: docs/master/queues.md, line: 1364
#. type: Plain text
#: docs/8.x/queues.md:1426
msgid ""
"When jobs are available on the queue, the worker will keep processing jobs "
"with no delay in between them. However, the `sleep` option determines how "
"many seconds the worker will \"sleep\" if there are no new jobs available. "
"While sleeping, the worker will not process any new jobs - the jobs will be "
"processed after the worker wakes up again."
msgstr ""

# File: docs/8.x/queues.md, line: 1428
# File: docs/master/queues.md, line: 1366
#. type: Plain text
#: docs/8.x/queues.md:1428
#, no-wrap
msgid "    php artisan queue:work --sleep=3\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1430
# File: docs/master/queues.md, line: 1368
#. type: Plain text
#: docs/8.x/queues.md:1430
#, no-wrap
msgid "<a name=\"resource-considerations\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1430
# File: docs/master/queues.md, line: 1368
#. type: Title ####
#: docs/8.x/queues.md:1430
#, no-wrap
msgid "Resource Considerations"
msgstr ""

# File: docs/8.x/queues.md, line: 1433
# File: docs/master/queues.md, line: 1371
#. type: Plain text
#: docs/8.x/queues.md:1433
msgid ""
"Daemon queue workers do not \"reboot\" the framework before processing each "
"job. Therefore, you should release any heavy resources after each job "
"completes. For example, if you are doing image manipulation with the GD "
"library, you should free the memory with `imagedestroy` when you are done "
"processing the image."
msgstr ""

# File: docs/8.x/queues.md, line: 1435
# File: docs/master/queues.md, line: 1373
#. type: Plain text
#: docs/8.x/queues.md:1435
#, no-wrap
msgid "<a name=\"queue-priorities\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1435
# File: docs/master/queues.md, line: 1373
#. type: Title ###
#: docs/8.x/queues.md:1435
#, no-wrap
msgid "Queue Priorities"
msgstr ""

# File: docs/8.x/queues.md, line: 1438
# File: docs/master/queues.md, line: 1376
#. type: Plain text
#: docs/8.x/queues.md:1438
msgid ""
"Sometimes you may wish to prioritize how your queues are processed. For "
"example, in your `config/queue.php` configuration file, you may set the "
"default `queue` for your `redis` connection to `low`. However, occasionally "
"you may wish to push a job to a `high` priority queue like so:"
msgstr ""

# File: docs/8.x/queues.md, line: 1440
# File: docs/master/queues.md, line: 1378
#. type: Plain text
#: docs/8.x/queues.md:1440
#, no-wrap
msgid "    dispatch((new Job)->onQueue('high'));\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1442
# File: docs/master/queues.md, line: 1380
#. type: Plain text
#: docs/8.x/queues.md:1442
msgid ""
"To start a worker that verifies that all of the `high` queue jobs are "
"processed before continuing to any jobs on the `low` queue, pass a comma-"
"delimited list of queue names to the `work` command:"
msgstr ""

# File: docs/8.x/queues.md, line: 1444
# File: docs/master/queues.md, line: 1382
#. type: Plain text
#: docs/8.x/queues.md:1444
#, no-wrap
msgid "    php artisan queue:work --queue=high,low\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1446
# File: docs/master/queues.md, line: 1384
#. type: Plain text
#: docs/8.x/queues.md:1446
#, no-wrap
msgid "<a name=\"queue-workers-and-deployment\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1446
# File: docs/master/queues.md, line: 1384
#. type: Title ###
#: docs/8.x/queues.md:1446
#, no-wrap
msgid "Queue Workers & Deployment"
msgstr ""

# File: docs/8.x/queues.md, line: 1449
# File: docs/master/queues.md, line: 1387
#. type: Plain text
#: docs/8.x/queues.md:1449
msgid ""
"Since queue workers are long-lived processes, they will not notice changes "
"to your code without being restarted. So, the simplest way to deploy an "
"application using queue workers is to restart the workers during your "
"deployment process. You may gracefully restart all of the workers by issuing "
"the `queue:restart` command:"
msgstr ""

# File: docs/8.x/queues.md, line: 1451
# File: docs/master/queues.md, line: 1389
#. type: Plain text
#: docs/8.x/queues.md:1451
#, no-wrap
msgid "    php artisan queue:restart\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1453
# File: docs/master/queues.md, line: 1391
#. type: Plain text
#: docs/8.x/queues.md:1453
msgid ""
"This command will instruct all queue workers to gracefully exit after they "
"finish processing their current job so that no existing jobs are lost. Since "
"the queue workers will exit when the `queue:restart` command is executed, "
"you should be running a process manager such as [Supervisor](#supervisor-"
"configuration) to automatically restart the queue workers."
msgstr ""

# File: docs/8.x/queues.md, line: 1455
# File: docs/master/queues.md, line: 1393
#. type: Plain text
#: docs/8.x/queues.md:1455
#, no-wrap
msgid "> {tip} The queue uses the [cache](/docs/{{version}}/cache) to store restart signals, so you should verify that a cache driver is properly configured for your application before using this feature.\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1457
# File: docs/master/queues.md, line: 1395
#. type: Plain text
#: docs/8.x/queues.md:1457
#, no-wrap
msgid "<a name=\"job-expirations-and-timeouts\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1457
# File: docs/master/queues.md, line: 1395
#. type: Title ###
#: docs/8.x/queues.md:1457
#, no-wrap
msgid "Job Expirations & Timeouts"
msgstr ""

# File: docs/8.x/queues.md, line: 1460
# File: docs/master/queues.md, line: 1398
#. type: Plain text
#: docs/8.x/queues.md:1460
#, no-wrap
msgid "<a name=\"job-expiration\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1460
# File: docs/master/queues.md, line: 1398
#. type: Title ####
#: docs/8.x/queues.md:1460
#, no-wrap
msgid "Job Expiration"
msgstr ""

# File: docs/8.x/queues.md, line: 1463
# File: docs/master/queues.md, line: 1401
#. type: Plain text
#: docs/8.x/queues.md:1463
msgid ""
"In your `config/queue.php` configuration file, each queue connection defines "
"a `retry_after` option. This option specifies how many seconds the queue "
"connection should wait before retrying a job that is being processed. For "
"example, if the value of `retry_after` is set to `90`, the job will be "
"released back onto the queue if it has been processing for 90 seconds "
"without being released or deleted. Typically, you should set the "
"`retry_after` value to the maximum number of seconds your jobs should "
"reasonably take to complete processing."
msgstr ""

# File: docs/8.x/queues.md, line: 1465
# File: docs/master/queues.md, line: 1403
#. type: Plain text
#: docs/8.x/queues.md:1465
#, no-wrap
msgid "> {note} The only queue connection which does not contain a `retry_after` value is Amazon SQS. SQS will retry the job based on the [Default Visibility Timeout](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/AboutVT.html) which is managed within the AWS console.\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1467
# File: docs/master/queues.md, line: 1405
#. type: Plain text
#: docs/8.x/queues.md:1467
#, no-wrap
msgid "<a name=\"worker-timeouts\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1467
# File: docs/master/queues.md, line: 1405
#. type: Title ####
#: docs/8.x/queues.md:1467
#, no-wrap
msgid "Worker Timeouts"
msgstr ""

# File: docs/8.x/queues.md, line: 1470
# File: docs/master/queues.md, line: 1408
#. type: Plain text
#: docs/8.x/queues.md:1470
msgid ""
"The `queue:work` Artisan command exposes a `--timeout` option. If a job is "
"processing for longer than the number of seconds specified by the timeout "
"value, the worker processing the job will exit with an error. Typically, the "
"worker will be restarted automatically by a [process manager configured on "
"your server](#supervisor-configuration):"
msgstr ""

# File: docs/8.x/queues.md, line: 1471
# File: docs/master/queues.md, line: 1409
#. type: Fenced code block (bash)
#: docs/8.x/queues.md:1471
#, no-wrap
msgid "php artisan queue:work --timeout=60\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1476
# File: docs/master/queues.md, line: 1414
#. type: Plain text
#: docs/8.x/queues.md:1476
msgid ""
"The `retry_after` configuration option and the `--timeout` CLI option are "
"different, but work together to ensure that jobs are not lost and that jobs "
"are only successfully processed once."
msgstr ""

# File: docs/8.x/queues.md, line: 1478
# File: docs/master/queues.md, line: 1416
#. type: Plain text
#: docs/8.x/queues.md:1478
#, no-wrap
msgid "> {note} The `--timeout` value should always be at least several seconds shorter than your `retry_after` configuration value. This will ensure that a worker processing a frozen job is always terminated before the job is retried. If your `--timeout` option is longer than your `retry_after` configuration value, your jobs may be processed twice.\n"
msgstr ""

# File: docs/8.x/horizon.md, line: 202
# File: docs/8.x/queues.md, line: 1480
# File: docs/master/horizon.md, line: 202
# File: docs/master/queues.md, line: 1418
#. type: Plain text
#: docs/8.x/queues.md:1480
#, no-wrap
msgid "<a name=\"supervisor-configuration\"></a>\n"
msgstr ""

# File: docs/8.x/horizon.md, line: 202
# File: docs/8.x/queues.md, line: 1480
# File: docs/master/horizon.md, line: 202
# File: docs/master/queues.md, line: 1418
#. type: Title ##
#: docs/8.x/queues.md:1480
#, no-wrap
msgid "Supervisor Configuration"
msgstr ""

# File: docs/8.x/queues.md, line: 1483
# File: docs/master/queues.md, line: 1421
#. type: Plain text
#: docs/8.x/queues.md:1483
msgid ""
"In production, you need a way to keep your `queue:work` processes running. A "
"`queue:work` process may stop running for a variety of reasons, such as an "
"exceeded worker timeout or the execution of the `queue:restart` command."
msgstr ""

# File: docs/8.x/queues.md, line: 1485
# File: docs/master/queues.md, line: 1423
#. type: Plain text
#: docs/8.x/queues.md:1485
msgid ""
"For this reason, you need to configure a process monitor that can detect "
"when your `queue:work` processes exit and automatically restart them. In "
"addition, process monitors can allow you to specify how many `queue:work` "
"processes you would like to run concurrently. Supervisor is a process "
"monitor commonly used in Linux environments and we will discuss how to "
"configure it in the following documentation."
msgstr ""

# File: docs/8.x/horizon.md, line: 193
# File: docs/8.x/queues.md, line: 1487
# File: docs/master/horizon.md, line: 193
# File: docs/master/queues.md, line: 1425
#. type: Plain text
#: docs/8.x/queues.md:1487
#, no-wrap
msgid "<a name=\"installing-supervisor\"></a>\n"
msgstr ""

# File: docs/8.x/horizon.md, line: 193
# File: docs/8.x/queues.md, line: 1487
# File: docs/master/horizon.md, line: 193
# File: docs/master/queues.md, line: 1425
#. type: Title ####
#: docs/8.x/queues.md:1487
#, no-wrap
msgid "Installing Supervisor"
msgstr ""

# File: docs/8.x/queues.md, line: 1490
# File: docs/master/queues.md, line: 1428
#. type: Plain text
#: docs/8.x/queues.md:1490
msgid ""
"Supervisor is a process monitor for the Linux operating system, and will "
"automatically restart your `queue:work` processes if they fail. To install "
"Supervisor on Ubuntu, you may use the following command:"
msgstr ""

# File: docs/8.x/horizon.md, line: 198
# File: docs/8.x/queues.md, line: 1492
# File: docs/master/horizon.md, line: 198
# File: docs/master/queues.md, line: 1430
#. type: Plain text
#: docs/8.x/queues.md:1492
#, no-wrap
msgid "    sudo apt-get install supervisor\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1494
# File: docs/master/queues.md, line: 1432
#. type: Plain text
#: docs/8.x/queues.md:1494
#, no-wrap
msgid "> {tip} If configuring and managing Supervisor yourself sounds overwhelming, consider using [Laravel Forge](https://forge.laravel.com), which will automatically install and configure Supervisor for your production Laravel projects.\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1496
# File: docs/master/queues.md, line: 1434
#. type: Plain text
#: docs/8.x/queues.md:1496
#, no-wrap
msgid "<a name=\"configuring-supervisor\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1496
# File: docs/master/queues.md, line: 1434
#. type: Title ####
#: docs/8.x/queues.md:1496
#, no-wrap
msgid "Configuring Supervisor"
msgstr ""

# File: docs/8.x/queues.md, line: 1499
# File: docs/master/queues.md, line: 1437
#. type: Plain text
#: docs/8.x/queues.md:1499
msgid ""
"Supervisor configuration files are typically stored in the `/etc/supervisor/"
"conf.d` directory. Within this directory, you may create any number of "
"configuration files that instruct supervisor how your processes should be "
"monitored. For example, let's create a `laravel-worker.conf` file that "
"starts and monitors `queue:work` processes:"
msgstr ""

# File: docs/8.x/queues.md, line: 1500
# File: docs/master/queues.md, line: 1438
#. type: Fenced code block (ini)
#: docs/8.x/queues.md:1500
#, no-wrap
msgid ""
"[program:laravel-worker]\n"
"process_name=%(program_name)s_%(process_num)02d\n"
"command=php /home/forge/app.com/artisan queue:work sqs --sleep=3 --tries=3 --max-time=3600\n"
"autostart=true\n"
"autorestart=true\n"
"stopasgroup=true\n"
"killasgroup=true\n"
"user=forge\n"
"numprocs=8\n"
"redirect_stderr=true\n"
"stdout_logfile=/home/forge/app.com/worker.log\n"
"stopwaitsecs=3600\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1516
# File: docs/master/queues.md, line: 1454
#. type: Plain text
#: docs/8.x/queues.md:1516
msgid ""
"In this example, the `numprocs` directive will instruct Supervisor to run "
"eight `queue:work` processes and monitor all of them, automatically "
"restarting them if they fail. You should change the `command` directive of "
"the configuration to reflect your desired queue connection and worker "
"options."
msgstr ""

# File: docs/8.x/horizon.md, line: 217
# File: docs/8.x/queues.md, line: 1518
# File: docs/master/horizon.md, line: 217
# File: docs/master/queues.md, line: 1456
#. type: Plain text
#: docs/8.x/queues.md:1518
#, no-wrap
msgid "> {note} You should ensure that the value of `stopwaitsecs` is greater than the number of seconds consumed by your longest running job. Otherwise, Supervisor may kill the job before it is finished processing.\n"
msgstr ""

# File: docs/8.x/horizon.md, line: 219
# File: docs/8.x/queues.md, line: 1520
# File: docs/master/horizon.md, line: 219
# File: docs/master/queues.md, line: 1458
#. type: Plain text
#: docs/8.x/queues.md:1520
#, no-wrap
msgid "<a name=\"starting-supervisor\"></a>\n"
msgstr ""

# File: docs/8.x/horizon.md, line: 219
# File: docs/8.x/queues.md, line: 1520
# File: docs/master/horizon.md, line: 219
# File: docs/master/queues.md, line: 1458
#. type: Title ####
#: docs/8.x/queues.md:1520
#, no-wrap
msgid "Starting Supervisor"
msgstr ""

# File: docs/8.x/queues.md, line: 1523
# File: docs/master/queues.md, line: 1461
#. type: Plain text
#: docs/8.x/queues.md:1523
msgid ""
"Once the configuration file has been created, you may update the Supervisor "
"configuration and start the processes using the following commands:"
msgstr ""

# File: docs/8.x/queues.md, line: 1524
# File: docs/master/queues.md, line: 1462
#. type: Fenced code block (bash)
#: docs/8.x/queues.md:1524
#, no-wrap
msgid ""
"sudo supervisorctl reread\n"
"\n"
"sudo supervisorctl update\n"
"\n"
"sudo supervisorctl start laravel-worker:*\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1533
# File: docs/master/queues.md, line: 1471
#. type: Plain text
#: docs/8.x/queues.md:1533
msgid ""
"For more information on Supervisor, consult the [Supervisor documentation]"
"(http://supervisord.org/index.html)."
msgstr ""

# File: docs/8.x/queues.md, line: 1535
# File: docs/master/queues.md, line: 1473
#. type: Plain text
#: docs/8.x/queues.md:1535
#, no-wrap
msgid "<a name=\"dealing-with-failed-jobs\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1535
# File: docs/master/queues.md, line: 1473
#. type: Title ##
#: docs/8.x/queues.md:1535
#, no-wrap
msgid "Dealing With Failed Jobs"
msgstr ""

# File: docs/8.x/queues.md, line: 1538
# File: docs/master/queues.md, line: 1476
#. type: Plain text
#: docs/8.x/queues.md:1538
msgid ""
"Sometimes your queued jobs will fail. Don't worry, things don't always go as "
"planned! Laravel includes a convenient way to [specify the maximum number of "
"times a job should be attempted](#max-job-attempts-and-timeout). After a job "
"has exceeded this number of attempts, it will be inserted into the "
"`failed_jobs` database table. Of course, we will need to create that table "
"if it does not already exist. To create a migration for the `failed_jobs` "
"table, you may use the `queue:failed-table` command:"
msgstr ""

# File: docs/8.x/queues.md, line: 1540
# File: docs/master/queues.md, line: 1478
#. type: Plain text
#: docs/8.x/queues.md:1540
#, no-wrap
msgid "    php artisan queue:failed-table\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1544
# File: docs/master/queues.md, line: 1482
#. type: Plain text
#: docs/8.x/queues.md:1544
msgid ""
"When running a [queue worker](#running-the-queue-worker) process, you may "
"specify the maximum number of times a job should be attempted using the `--"
"tries` switch on the `queue:work` command. If you do not specify a value for "
"the `--tries` option, jobs will only be attempted once or as many times as "
"specified by the job class' `$tries` property:"
msgstr ""

# File: docs/8.x/queues.md, line: 1546
# File: docs/master/queues.md, line: 1484
#. type: Plain text
#: docs/8.x/queues.md:1546
#, no-wrap
msgid "    php artisan queue:work redis --tries=3\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1548
# File: docs/master/queues.md, line: 1486
#. type: Plain text
#: docs/8.x/queues.md:1548
msgid ""
"Using the `--backoff` option, you may specify how many seconds Laravel "
"should wait before retrying a job that has encountered an exception. By "
"default, a job is immediately released back onto the queue so that it may be "
"attempted again:"
msgstr ""

# File: docs/8.x/queues.md, line: 1550
# File: docs/master/queues.md, line: 1488
#. type: Plain text
#: docs/8.x/queues.md:1550
#, no-wrap
msgid "    php artisan queue:work redis --tries=3 --backoff=3\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1552
# File: docs/master/queues.md, line: 1490
#. type: Plain text
#: docs/8.x/queues.md:1552
msgid ""
"If you would like to configure how many seconds Laravel should wait before "
"retrying a job that has encountered an exception on a per-job basis, you may "
"do so by defining a `backoff` property on your job class:"
msgstr ""

# File: docs/8.x/queues.md, line: 1559
# File: docs/master/queues.md, line: 1497
#. type: Plain text
#: docs/8.x/queues.md:1559
#, no-wrap
msgid ""
"    /**\n"
"     * The number of seconds to wait before retrying the job.\n"
"     *\n"
"     * @var int\n"
"     */\n"
"    public $backoff = 3;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1561
# File: docs/master/queues.md, line: 1499
#. type: Plain text
#: docs/8.x/queues.md:1561
msgid ""
"If you require more complex logic for determining the job's backoff time, "
"you may define a `backoff` method on your job class:"
msgstr ""

# File: docs/8.x/queues.md, line: 1571
# File: docs/master/queues.md, line: 1509
#. type: Plain text
#: docs/8.x/queues.md:1571
#, no-wrap
msgid ""
"    /**\n"
"    * Calculate the number of seconds to wait before retrying the job.\n"
"    *\n"
"    * @return int\n"
"    */\n"
"    public function backoff()\n"
"    {\n"
"        return 3;\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1573
# File: docs/master/queues.md, line: 1511
#. type: Plain text
#: docs/8.x/queues.md:1573
msgid ""
"You may easily configure \"exponential\" backoffs by returning an array of "
"backoff values from the `backoff` method. In this example, the retry delay "
"will be 1 second for the first retry, 5 seconds for the second retry, and 10 "
"seconds for the third retry:"
msgstr ""

# File: docs/8.x/queues.md, line: 1583
# File: docs/master/queues.md, line: 1521
#. type: Plain text
#: docs/8.x/queues.md:1583
#, no-wrap
msgid ""
"    /**\n"
"    * Calculate the number of seconds to wait before retrying the job.\n"
"    *\n"
"    * @return array\n"
"    */\n"
"    public function backoff()\n"
"    {\n"
"        return [1, 5, 10];\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1585
# File: docs/master/queues.md, line: 1523
#. type: Plain text
#: docs/8.x/queues.md:1585
#, no-wrap
msgid "<a name=\"cleaning-up-after-failed-jobs\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1585
# File: docs/master/queues.md, line: 1523
#. type: Title ###
#: docs/8.x/queues.md:1585
#, no-wrap
msgid "Cleaning Up After Failed Jobs"
msgstr ""

# File: docs/8.x/queues.md, line: 1588
# File: docs/master/queues.md, line: 1526
#. type: Plain text
#: docs/8.x/queues.md:1588
msgid ""
"When a particular job fails, you may want to send an alert to your users or "
"revert any actions that were partially completed by the job. To accomplish "
"this, you may define a `failed` method on your job class. The `Throwable` "
"instance that caused the job to fail will be passed to the `failed` method:"
msgstr ""

# File: docs/8.x/queues.md, line: 1600
# File: docs/master/queues.md, line: 1538
#. type: Plain text
#: docs/8.x/queues.md:1600
#, no-wrap
msgid ""
"    use App\\Models\\Podcast;\n"
"    use App\\Services\\AudioProcessor;\n"
"    use Illuminate\\Bus\\Queueable;\n"
"    use Illuminate\\Contracts\\Queue\\ShouldQueue;\n"
"    use Illuminate\\Queue\\InteractsWithQueue;\n"
"    use Illuminate\\Queue\\SerializesModels;\n"
"    use Throwable;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1604
# File: docs/master/queues.md, line: 1542
#. type: Plain text
#: docs/8.x/queues.md:1604
#, no-wrap
msgid ""
"    class ProcessPodcast implements ShouldQueue\n"
"    {\n"
"        use InteractsWithQueue, Queueable, SerializesModels;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1611
# File: docs/master/queues.md, line: 1549
#. type: Plain text
#: docs/8.x/queues.md:1611
#, no-wrap
msgid ""
"        /**\n"
"         * The podcast instance.\n"
"         *\n"
"         * @var \\App\\Podcast\n"
"         */\n"
"        protected $podcast;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1622
# File: docs/master/queues.md, line: 1560
#. type: Plain text
#: docs/8.x/queues.md:1622
#, no-wrap
msgid ""
"        /**\n"
"         * Create a new job instance.\n"
"         *\n"
"         * @param  \\App\\Models\\Podcast  $podcast\n"
"         * @return void\n"
"         */\n"
"        public function __construct(Podcast $podcast)\n"
"        {\n"
"            $this->podcast = $podcast;\n"
"        }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1633
# File: docs/master/queues.md, line: 1571
#. type: Plain text
#: docs/8.x/queues.md:1633
#, no-wrap
msgid ""
"        /**\n"
"         * Execute the job.\n"
"         *\n"
"         * @param  \\App\\Services\\AudioProcessor  $processor\n"
"         * @return void\n"
"         */\n"
"        public function handle(AudioProcessor $processor)\n"
"        {\n"
"            // Process uploaded podcast...\n"
"        }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1645
# File: docs/master/queues.md, line: 1583
#. type: Plain text
#: docs/8.x/queues.md:1645
#, no-wrap
msgid ""
"        /**\n"
"         * Handle a job failure.\n"
"         *\n"
"         * @param  \\Throwable  $exception\n"
"         * @return void\n"
"         */\n"
"        public function failed(Throwable $exception)\n"
"        {\n"
"            // Send user notification of failure, etc...\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1647
# File: docs/master/queues.md, line: 1585
#. type: Plain text
#: docs/8.x/queues.md:1647
#, no-wrap
msgid "<a name=\"retrying-failed-jobs\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1647
# File: docs/master/queues.md, line: 1585
#. type: Title ###
#: docs/8.x/queues.md:1647
#, no-wrap
msgid "Retrying Failed Jobs"
msgstr ""

# File: docs/8.x/queues.md, line: 1650
# File: docs/master/queues.md, line: 1588
#. type: Plain text
#: docs/8.x/queues.md:1650
msgid ""
"To view all of the failed jobs that have been inserted into your "
"`failed_jobs` database table, you may use the `queue:failed` Artisan command:"
msgstr ""

# File: docs/8.x/queues.md, line: 1652
# File: docs/master/queues.md, line: 1590
#. type: Plain text
#: docs/8.x/queues.md:1652
#, no-wrap
msgid "    php artisan queue:failed\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1654
# File: docs/master/queues.md, line: 1592
#. type: Plain text
#: docs/8.x/queues.md:1654
msgid ""
"The `queue:failed` command will list the job ID, connection, queue, failure "
"time, and other information about the job. The job ID may be used to retry "
"the failed job. For instance, to retry a failed job that has an ID of `5`, "
"issue the following command:"
msgstr ""

# File: docs/8.x/queues.md, line: 1656
# File: docs/master/queues.md, line: 1594
#. type: Plain text
#: docs/8.x/queues.md:1656
#, no-wrap
msgid "    php artisan queue:retry 5\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1658
# File: docs/master/queues.md, line: 1596
#. type: Plain text
#: docs/8.x/queues.md:1658
msgid ""
"If necessary, you may pass multiple IDs or an ID range (when using numeric "
"IDs) to the command:"
msgstr ""

# File: docs/8.x/queues.md, line: 1660
# File: docs/master/queues.md, line: 1598
#. type: Plain text
#: docs/8.x/queues.md:1660
#, no-wrap
msgid "    php artisan queue:retry 5 6 7 8 9 10\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1662
# File: docs/master/queues.md, line: 1600
#. type: Plain text
#: docs/8.x/queues.md:1662
#, no-wrap
msgid "    php artisan queue:retry --range=5-10\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1664
# File: docs/master/queues.md, line: 1602
#. type: Plain text
#: docs/8.x/queues.md:1664
msgid ""
"To retry all of your failed jobs, execute the `queue:retry` command and pass "
"`all` as the ID:"
msgstr ""

# File: docs/8.x/queues.md, line: 1666
# File: docs/master/queues.md, line: 1604
#. type: Plain text
#: docs/8.x/queues.md:1666
#, no-wrap
msgid "    php artisan queue:retry all\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1668
# File: docs/master/queues.md, line: 1606
#. type: Plain text
#: docs/8.x/queues.md:1668
msgid ""
"If you would like to delete a failed job, you may use the `queue:forget` "
"command:"
msgstr ""

# File: docs/8.x/queues.md, line: 1670
# File: docs/master/queues.md, line: 1608
#. type: Plain text
#: docs/8.x/queues.md:1670
#, no-wrap
msgid "    php artisan queue:forget 5\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1672
# File: docs/master/queues.md, line: 1610
#. type: Plain text
#: docs/8.x/queues.md:1672
#, no-wrap
msgid "> {tip} When using [Horizon](/docs/{{version}}/horizon), you should use the `horizon:forget` command to delete a failed job instead of the `queue:forget` command.\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1674
# File: docs/master/queues.md, line: 1612
#. type: Plain text
#: docs/8.x/queues.md:1674
msgid ""
"To delete all of your failed jobs from the `failed_jobs` table, you may use "
"the `queue:flush` command:"
msgstr ""

# File: docs/8.x/queues.md, line: 1676
# File: docs/master/queues.md, line: 1614
#. type: Plain text
#: docs/8.x/queues.md:1676
#, no-wrap
msgid "    php artisan queue:flush\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1678
# File: docs/master/queues.md, line: 1616
#. type: Plain text
#: docs/8.x/queues.md:1678
#, no-wrap
msgid "<a name=\"ignoring-missing-models\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1678
# File: docs/master/queues.md, line: 1616
#. type: Title ###
#: docs/8.x/queues.md:1678
#, no-wrap
msgid "Ignoring Missing Models"
msgstr ""

# File: docs/8.x/queues.md, line: 1681
# File: docs/master/queues.md, line: 1619
#. type: Plain text
#: docs/8.x/queues.md:1681
msgid ""
"When injecting an Eloquent model into a job, the model is automatically "
"serialized before being placed on the queue and re-retrieved from the "
"database when the job is processed. However, if the model has been deleted "
"while the job was waiting to be processed by a worker, your job may fail "
"with a `ModelNotFoundException`."
msgstr ""

# File: docs/8.x/queues.md, line: 1683
# File: docs/master/queues.md, line: 1621
#. type: Plain text
#: docs/8.x/queues.md:1683
msgid ""
"For convenience, you may choose to automatically delete jobs with missing "
"models by setting your job's `deleteWhenMissingModels` property to `true`. "
"When this property is set to `true`, Laravel will quietly discard the job "
"without raising an exception:"
msgstr ""

# File: docs/8.x/queues.md, line: 1690
# File: docs/master/queues.md, line: 1628
#. type: Plain text
#: docs/8.x/queues.md:1690
#, no-wrap
msgid ""
"    /**\n"
"     * Delete the job if its models no longer exist.\n"
"     *\n"
"     * @var bool\n"
"     */\n"
"    public $deleteWhenMissingModels = true;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1692
# File: docs/master/queues.md, line: 1630
#. type: Plain text
#: docs/8.x/queues.md:1692
#, no-wrap
msgid "<a name=\"failed-job-events\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1692
# File: docs/master/queues.md, line: 1630
#. type: Title ###
#: docs/8.x/queues.md:1692
#, no-wrap
msgid "Failed Job Events"
msgstr ""

# File: docs/8.x/queues.md, line: 1695
# File: docs/master/queues.md, line: 1633
#. type: Plain text
#: docs/8.x/queues.md:1695
msgid ""
"If you would like to register an event listener that will be invoked when a "
"job fails, you may use the `Queue` facade's `failing` method. For example, "
"we may attach a closure to this event from the `boot` method of the "
"`AppServiceProvider` that is included with Laravel:"
msgstr ""

# File: docs/8.x/authentication.md, line: 508
# File: docs/8.x/authentication.md, line: 582
# File: docs/8.x/authorization.md, line: 248
# File: docs/8.x/blade.md, line: 97
# File: docs/8.x/blade.md, line: 1254
# File: docs/8.x/cache.md, line: 424
# File: docs/8.x/database.md, line: 232
# File: docs/8.x/dusk.md, line: 325
# File: docs/8.x/eloquent-resources.md, line: 349
# File: docs/8.x/events.md, line: 596
# File: docs/8.x/filesystem.md, line: 496
# File: docs/8.x/pagination.md, line: 213
# File: docs/8.x/passport.md, line: 98
# File: docs/8.x/providers.md, line: 42
# File: docs/8.x/providers.md, line: 71
# File: docs/8.x/providers.md, line: 109
# File: docs/8.x/providers.md, line: 173
# File: docs/8.x/queues.md, line: 1699
# File: docs/8.x/queues.md, line: 1754
# File: docs/8.x/responses.md, line: 323
# File: docs/8.x/session.md, line: 303
# File: docs/8.x/testing.md, line: 121
# File: docs/8.x/views.md, line: 108
# File: docs/8.x/views.md, line: 146
# File: docs/master/authentication.md, line: 508
# File: docs/master/authentication.md, line: 582
# File: docs/master/authorization.md, line: 248
# File: docs/master/blade.md, line: 96
# File: docs/master/blade.md, line: 1191
# File: docs/master/cache.md, line: 417
# File: docs/master/database.md, line: 232
# File: docs/master/dusk.md, line: 325
# File: docs/master/eloquent-resources.md, line: 349
# File: docs/master/events.md, line: 596
# File: docs/master/filesystem.md, line: 496
# File: docs/master/pagination.md, line: 213
# File: docs/master/passport.md, line: 98
# File: docs/master/providers.md, line: 42
# File: docs/master/providers.md, line: 71
# File: docs/master/providers.md, line: 109
# File: docs/master/providers.md, line: 173
# File: docs/master/queues.md, line: 1637
# File: docs/master/queues.md, line: 1692
# File: docs/master/responses.md, line: 323
# File: docs/master/session.md, line: 303
# File: docs/master/testing.md, line: 119
# File: docs/master/views.md, line: 108
# File: docs/master/views.md, line: 146
#. type: Plain text
#: docs/8.x/queues.md:1699 docs/8.x/queues.md:1754
#, no-wrap
msgid "    namespace App\\Providers;\n"
msgstr "    namespace App\\Providers;\n"

# File: docs/8.x/queues.md, line: 1703
# File: docs/master/queues.md, line: 1641
#. type: Plain text
#: docs/8.x/queues.md:1703
#, no-wrap
msgid ""
"    use Illuminate\\Support\\Facades\\Queue;\n"
"    use Illuminate\\Support\\ServiceProvider;\n"
"    use Illuminate\\Queue\\Events\\JobFailed;\n"
msgstr ""

# File: docs/8.x/blade.md, line: 1269
# File: docs/8.x/database.md, line: 247
# File: docs/8.x/eloquent-resources.md, line: 364
# File: docs/8.x/filesystem.md, line: 514
# File: docs/8.x/queues.md, line: 1715
# File: docs/8.x/queues.md, line: 1771
# File: docs/8.x/views.md, line: 122
# File: docs/master/blade.md, line: 1206
# File: docs/master/database.md, line: 247
# File: docs/master/eloquent-resources.md, line: 364
# File: docs/master/filesystem.md, line: 514
# File: docs/master/queues.md, line: 1653
# File: docs/master/queues.md, line: 1709
# File: docs/master/views.md, line: 122
#. type: Plain text
#: docs/8.x/queues.md:1715 docs/8.x/queues.md:1771
#, no-wrap
msgid ""
"    class AppServiceProvider extends ServiceProvider\n"
"    {\n"
"        /**\n"
"         * Register any application services.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function register()\n"
"        {\n"
"            //\n"
"        }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1730
# File: docs/master/queues.md, line: 1668
#. type: Plain text
#: docs/8.x/queues.md:1730
#, no-wrap
msgid ""
"        /**\n"
"         * Bootstrap any application services.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function boot()\n"
"        {\n"
"            Queue::failing(function (JobFailed $event) {\n"
"                // $event->connectionName\n"
"                // $event->job\n"
"                // $event->exception\n"
"            });\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/horizon.md, line: 362
# File: docs/8.x/queues.md, line: 1732
# File: docs/master/horizon.md, line: 362
# File: docs/master/queues.md, line: 1670
#. type: Plain text
#: docs/8.x/queues.md:1732
#, no-wrap
msgid "<a name=\"clearing-jobs-from-queues\"></a>\n"
msgstr ""

# File: docs/8.x/horizon.md, line: 362
# File: docs/8.x/queues.md, line: 1732
# File: docs/master/horizon.md, line: 362
# File: docs/master/queues.md, line: 1670
#. type: Title ##
#: docs/8.x/queues.md:1732
#, no-wrap
msgid "Clearing Jobs From Queues"
msgstr ""

# File: docs/8.x/queues.md, line: 1735
# File: docs/master/queues.md, line: 1673
#. type: Plain text
#: docs/8.x/queues.md:1735
#, no-wrap
msgid "> {tip} When using [Horizon](/docs/{{version}}/horizon), you should use the `horizon:clear` command to clear jobs from the queue instead of the `queue:clear` command.\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1737
# File: docs/master/queues.md, line: 1675
#. type: Plain text
#: docs/8.x/queues.md:1737
msgid ""
"If you would like to delete all jobs from the default queue of the default "
"connection, you may do so using the `queue:clear` Artisan command:"
msgstr ""

# File: docs/8.x/queues.md, line: 1739
# File: docs/master/queues.md, line: 1677
#. type: Plain text
#: docs/8.x/queues.md:1739
#, no-wrap
msgid "    php artisan queue:clear\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1741
# File: docs/master/queues.md, line: 1679
#. type: Plain text
#: docs/8.x/queues.md:1741
msgid ""
"You may also provide the `connection` argument and `queue` option to delete "
"jobs from a specific connection and queue:"
msgstr ""

# File: docs/8.x/queues.md, line: 1743
# File: docs/master/queues.md, line: 1681
#. type: Plain text
#: docs/8.x/queues.md:1743
#, no-wrap
msgid "    php artisan queue:clear redis --queue=emails\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1745
# File: docs/master/queues.md, line: 1683
#. type: Plain text
#: docs/8.x/queues.md:1745
#, no-wrap
msgid "> {note} Clearing jobs from queues is only available for the SQS, Redis, and database queue drivers. In addition, the SQS message deletion process takes up to 60 seconds, so jobs sent to the SQS queue up to 60 seconds after you clear the queue might also be deleted.\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1747
# File: docs/master/queues.md, line: 1685
#. type: Plain text
#: docs/8.x/queues.md:1747
#, no-wrap
msgid "<a name=\"job-events\"></a>\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1747
# File: docs/master/queues.md, line: 1685
#. type: Title ##
#: docs/8.x/queues.md:1747
#, no-wrap
msgid "Job Events"
msgstr ""

# File: docs/8.x/queues.md, line: 1750
# File: docs/master/queues.md, line: 1688
#. type: Plain text
#: docs/8.x/queues.md:1750
msgid ""
"Using the `before` and `after` methods on the `Queue` [facade](/docs/"
"{{version}}/facades), you may specify callbacks to be executed before or "
"after a queued job is processed. These callbacks are a great opportunity to "
"perform additional logging or increment statistics for a dashboard. "
"Typically, you should call these methods from the `boot` method of a "
"[service provider](/docs/{{version}}/providers). For example, we may use the "
"`AppServiceProvider` that is included with Laravel:"
msgstr ""

# File: docs/8.x/queues.md, line: 1759
# File: docs/master/queues.md, line: 1697
#. type: Plain text
#: docs/8.x/queues.md:1759
#, no-wrap
msgid ""
"    use Illuminate\\Support\\Facades\\Queue;\n"
"    use Illuminate\\Support\\ServiceProvider;\n"
"    use Illuminate\\Queue\\Events\\JobProcessed;\n"
"    use Illuminate\\Queue\\Events\\JobProcessing;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1784
# File: docs/master/queues.md, line: 1722
#. type: Plain text
#: docs/8.x/queues.md:1784
#, no-wrap
msgid ""
"        /**\n"
"         * Bootstrap any application services.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function boot()\n"
"        {\n"
"            Queue::before(function (JobProcessing $event) {\n"
"                // $event->connectionName\n"
"                // $event->job\n"
"                // $event->job->payload()\n"
"            });\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1792
# File: docs/master/queues.md, line: 1730
#. type: Plain text
#: docs/8.x/queues.md:1792
#, no-wrap
msgid ""
"            Queue::after(function (JobProcessed $event) {\n"
"                // $event->connectionName\n"
"                // $event->job\n"
"                // $event->job->payload()\n"
"            });\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1794
# File: docs/master/queues.md, line: 1732
#. type: Plain text
#: docs/8.x/queues.md:1794
msgid ""
"Using the `looping` method on the `Queue` [facade](/docs/{{version}}/"
"facades), you may specify callbacks that execute before the worker attempts "
"to fetch a job from a queue. For example, you might register a closure to "
"rollback any transactions that were left open by a previously failed job:"
msgstr ""

# File: docs/8.x/queues.md, line: 1797
# File: docs/master/queues.md, line: 1735
#. type: Plain text
#: docs/8.x/queues.md:1797
#, no-wrap
msgid ""
"    use Illuminate\\Support\\Facades\\DB;\n"
"    use Illuminate\\Support\\Facades\\Queue;\n"
msgstr ""

# File: docs/8.x/queues.md, line: 1802
# File: docs/master/queues.md, line: 1740
#. type: Plain text
#: docs/8.x/queues.md:1802
#, no-wrap
msgid ""
"    Queue::looping(function () {\n"
"        while (DB::transactionLevel() > 0) {\n"
"            DB::rollBack();\n"
"        }\n"
"    });\n"
msgstr ""

# File: docs/8.x/artisan.md, line: 1
# File: docs/master/artisan.md, line: 1
#, no-wrap
#~ msgid "Artisan Console"
#~ msgstr "Artisan 主控台"

# File: docs/8.x/artisan.md, line: 23
# File: docs/master/artisan.md, line: 23
#~ msgid "[Tinker (REPL)](#tinker)"
#~ msgstr "[Tinker (REPL)](#tinker)"

# File: docs/8.x/artisan.md, line: 23
# File: docs/master/artisan.md, line: 23
#~ msgid "[Writing Commands](#writing-commands)"
#~ msgstr "[撰寫指令](#writing-commands)"

# File: docs/8.x/artisan.md, line: 23
# File: docs/master/artisan.md, line: 23
#~ msgid "[Generating Commands](#generating-commands)"
#~ msgstr "[產生指令](#generating-commands)"

# File: docs/8.x/artisan.md, line: 23
# File: docs/master/artisan.md, line: 23
#~ msgid "[Command Structure](#command-structure)"
#~ msgstr "[指令結構](#command-structure)"

# File: docs/8.x/artisan.md, line: 23
# File: docs/master/artisan.md, line: 23
#~ msgid "[Closure Commands](#closure-commands)"
#~ msgstr "[閉包指令](#closure-commands)"

# File: docs/8.x/artisan.md, line: 23
# File: docs/master/artisan.md, line: 23
#~ msgid "[Defining Input Expectations](#defining-input-expectations)"
#~ msgstr "[定義預期的輸入](#defining-input-expectations)"

# File: docs/8.x/artisan.md, line: 23
# File: docs/master/artisan.md, line: 23
#~ msgid "[Arguments](#arguments)"
#~ msgstr "[參數](#arguments)"

# File: docs/8.x/artisan.md, line: 23
# File: docs/master/artisan.md, line: 23
#~ msgid "[Options](#options)"
#~ msgstr "[選項](#options)"

# File: docs/8.x/artisan.md, line: 23
# File: docs/master/artisan.md, line: 23
#~ msgid "[Input Arrays](#input-arrays)"
#~ msgstr "[輸入陣列](#input-arrays)"

# File: docs/8.x/artisan.md, line: 23
# File: docs/master/artisan.md, line: 23
#~ msgid "[Input Descriptions](#input-descriptions)"
#~ msgstr "[輸入說明](#input-descriptions)"

# File: docs/8.x/artisan.md, line: 23
# File: docs/master/artisan.md, line: 23
#~ msgid "[Command I/O](#command-io)"
#~ msgstr "[指令 I/O](#command-io)"

# File: docs/8.x/artisan.md, line: 23
# File: docs/8.x/requests.md, line: 22
# File: docs/master/artisan.md, line: 23
# File: docs/master/requests.md, line: 21
#~ msgid "[Retrieving Input](#retrieving-input)"
#~ msgstr "[取得輸入](#retrieving-input)"

# File: docs/8.x/artisan.md, line: 23
# File: docs/master/artisan.md, line: 23
#~ msgid "[Prompting For Input](#prompting-for-input)"
#~ msgstr "[互動式輸入](#prompting-for-input)"

# File: docs/8.x/artisan.md, line: 23
# File: docs/master/artisan.md, line: 23
#~ msgid "[Writing Output](#writing-output)"
#~ msgstr "[自訂輸出](#writing-output)"

# File: docs/8.x/artisan.md, line: 23
# File: docs/master/artisan.md, line: 23
#~ msgid "[Registering Commands](#registering-commands)"
#~ msgstr "[註冊指令](#registering-commands)"

# File: docs/8.x/artisan.md, line: 23
# File: docs/master/artisan.md, line: 23
#~ msgid ""
#~ "[Programmatically Executing Commands](#programmatically-executing-"
#~ "commands)"
#~ msgstr "[使用程式碼呼叫指令](#programmatically-executing-commands)"

# File: docs/8.x/artisan.md, line: 23
# File: docs/master/artisan.md, line: 23
#~ msgid ""
#~ "[Calling Commands From Other Commands](#calling-commands-from-other-"
#~ "commands)"
#~ msgstr "[自其他指令內呼叫指令](#calling-commands-from-other-commands)"

# File: docs/8.x/artisan.md, line: 23
# File: docs/master/artisan.md, line: 23
#~ msgid "[Stub Customization](#stub-customization)"
#~ msgstr "[自定 Stub](#stub-customization)"

# File: docs/8.x/artisan.md, line: 23
# File: docs/8.x/authentication.md, line: 30
# File: docs/8.x/cache.md, line: 24
# File: docs/8.x/eloquent.md, line: 37
# File: docs/8.x/mail.md, line: 26
# File: docs/8.x/passport.md, line: 45
# File: docs/8.x/verification.md, line: 13
# File: docs/master/artisan.md, line: 23
# File: docs/master/authentication.md, line: 30
# File: docs/master/cache.md, line: 24
# File: docs/master/eloquent.md, line: 36
# File: docs/master/mail.md, line: 26
# File: docs/master/passport.md, line: 45
# File: docs/master/verification.md, line: 13
#~ msgid "[Events](#events)"
#~ msgstr "[事件](#events)"

# File: docs/8.x/artisan.md, line: 28
# File: docs/master/artisan.md, line: 28
#~ msgid ""
#~ "Artisan is the command line interface included with Laravel. Artisan "
#~ "exists at the root of your application as the `artisan` script and "
#~ "provides a number of helpful commands that can assist you while you build "
#~ "your application. To view a list of all available Artisan commands, you "
#~ "may use the `list` command:"
#~ msgstr ""
#~ "Artisan 是 Laravel 內所包含的指令列界面。Artisan 是放在應用程式根目錄的 "
#~ "`artisan` 工序指令，提供多種實用指令來協助你建制應用程式。若要檢視所有可用"
#~ "的 Artisan 指令，可以使用 `list` 指令："

# File: docs/8.x/artisan.md, line: 30
# File: docs/master/artisan.md, line: 30
#, no-wrap
#~ msgid "    php artisan list\n"
#~ msgstr "    php artisan list\n"

# File: docs/8.x/artisan.md, line: 32
# File: docs/master/artisan.md, line: 32
#~ msgid ""
#~ "Every command also includes a \"help\" screen which displays and "
#~ "describes the command's available arguments and options. To view a help "
#~ "screen, precede the name of the command with `help`:"
#~ msgstr ""
#~ "每個指令也包含了一個「help」畫面，用於顯示指令的說明以及可用的引數與選項。"
#~ "若要檢視輔助說明畫面，請在指令名稱的前面加上 `help`："

# File: docs/8.x/artisan.md, line: 34
# File: docs/master/artisan.md, line: 34
#, no-wrap
#~ msgid "    php artisan help migrate\n"
#~ msgstr "    php artisan help migrate\n"

# File: docs/8.x/artisan.md, line: 36
# File: docs/master/artisan.md, line: 36
#, no-wrap
#~ msgid "<a name=\"laravel-sail\"></a>\n"
#~ msgstr "<a name=\"laravel-sail\"></a>\n"

# File: docs/8.x/artisan.md, line: 36
# File: docs/8.x/sail.md, line: 1
# File: docs/master/artisan.md, line: 36
# File: docs/master/sail.md, line: 1
#, no-wrap
#~ msgid "Laravel Sail"
#~ msgstr "Laravel Sail"

# File: docs/8.x/artisan.md, line: 39
# File: docs/master/artisan.md, line: 39
#~ msgid ""
#~ "If you are using [Laravel Sail](/docs/{{version}}/sail) as your local "
#~ "development environment, remember to use the `sail` command line to "
#~ "invoke Artisan commands. Sail will execute your Artisan commands within "
#~ "your application's Docker containers:"
#~ msgstr ""
#~ "若使用 [Laravel Sail](/docs/{{version}}/sail) 作為本機開發環境，請記得使"
#~ "用 `sail` 指令列來叫用 Artisan 指令。Sail 會在應用程式的 Docker 容器內執"
#~ "行 Artisan 指令。"

# File: docs/8.x/artisan.md, line: 41
# File: docs/master/artisan.md, line: 41
#, no-wrap
#~ msgid "    ./sail artisan list\n"
#~ msgstr "    ./sail artisan list\n"

# File: docs/8.x/artisan.md, line: 43
# File: docs/master/artisan.md, line: 43
#, no-wrap
#~ msgid "<a name=\"tinker\"></a>\n"
#~ msgstr "<a name=\"tinker\"></a>\n"

# File: docs/8.x/artisan.md, line: 43
# File: docs/master/artisan.md, line: 43
#, no-wrap
#~ msgid "Tinker (REPL)"
#~ msgstr "Tinker (REPL)"

# File: docs/8.x/artisan.md, line: 46
# File: docs/master/artisan.md, line: 46
#~ msgid ""
#~ "Laravel Tinker is a powerful REPL for the Laravel framework, powered by "
#~ "the [PsySH](https://github.com/bobthecow/psysh) package."
#~ msgstr ""
#~ "Laravel Tinker 是用於 Laravel 框架的強大 REPL，由 [PsySH](https://github."
#~ "com/bobthecow/psysh) 套件提供。"

# File: docs/8.x/artisan.md, line: 48
# File: docs/8.x/billing.md, line: 75
# File: docs/8.x/cashier-paddle.md, line: 59
# File: docs/8.x/dusk.md, line: 57
# File: docs/8.x/envoy.md, line: 25
# File: docs/8.x/fortify.md, line: 67
# File: docs/8.x/horizon.md, line: 29
# File: docs/8.x/mix.md, line: 37
# File: docs/8.x/passport.md, line: 61
# File: docs/8.x/sail.md, line: 35
# File: docs/8.x/sanctum.md, line: 53
# File: docs/8.x/scout.md, line: 35
# File: docs/8.x/socialite.md, line: 21
# File: docs/8.x/telescope.md, line: 42
# File: docs/8.x/valet.md, line: 65
# File: docs/master/artisan.md, line: 48
# File: docs/master/billing.md, line: 73
# File: docs/master/cashier-paddle.md, line: 57
# File: docs/master/dusk.md, line: 57
# File: docs/master/envoy.md, line: 24
# File: docs/master/fortify.md, line: 67
# File: docs/master/horizon.md, line: 29
# File: docs/master/mix.md, line: 37
# File: docs/master/passport.md, line: 61
# File: docs/master/sail.md, line: 34
# File: docs/master/sanctum.md, line: 53
# File: docs/master/scout.md, line: 35
# File: docs/master/socialite.md, line: 21
# File: docs/master/telescope.md, line: 42
# File: docs/master/valet.md, line: 65
#, no-wrap
#~ msgid "<a name=\"installation\"></a>\n"
#~ msgstr "<a name=\"installation\"></a>\n"

# File: docs/8.x/artisan.md, line: 48
# File: docs/8.x/billing.md, line: 75
# File: docs/8.x/cashier-paddle.md, line: 59
# File: docs/8.x/dusk.md, line: 57
# File: docs/8.x/envoy.md, line: 25
# File: docs/8.x/fortify.md, line: 67
# File: docs/8.x/horizon.md, line: 29
# File: docs/8.x/installation.md, line: 1
# File: docs/8.x/passport.md, line: 61
# File: docs/8.x/sanctum.md, line: 53
# File: docs/8.x/scout.md, line: 35
# File: docs/8.x/socialite.md, line: 21
# File: docs/8.x/starter-kits.md, line: 21
# File: docs/8.x/telescope.md, line: 42
# File: docs/8.x/valet.md, line: 65
# File: docs/master/artisan.md, line: 48
# File: docs/master/billing.md, line: 73
# File: docs/master/cashier-paddle.md, line: 57
# File: docs/master/dusk.md, line: 57
# File: docs/master/envoy.md, line: 24
# File: docs/master/fortify.md, line: 67
# File: docs/master/horizon.md, line: 29
# File: docs/master/installation.md, line: 1
# File: docs/master/passport.md, line: 61
# File: docs/master/sanctum.md, line: 53
# File: docs/master/scout.md, line: 35
# File: docs/master/socialite.md, line: 21
# File: docs/master/starter-kits.md, line: 21
# File: docs/master/telescope.md, line: 42
# File: docs/master/valet.md, line: 65
#, no-wrap
#~ msgid "Installation"
#~ msgstr "安裝"

# File: docs/8.x/artisan.md, line: 51
# File: docs/master/artisan.md, line: 51
#~ msgid ""
#~ "All Laravel applications include Tinker by default. However, you may "
#~ "install Tinker using Composer if you have previously removed it from your "
#~ "application:"
#~ msgstr ""
#~ "所有的 Laravel 應用程式預設都包含了 Tinker。但若先前曾自應用程式內移除 "
#~ "Tinker，則可使用 Composer 來安裝："

# File: docs/8.x/artisan.md, line: 53
# File: docs/master/artisan.md, line: 53
#, no-wrap
#~ msgid "    composer require laravel/tinker\n"
#~ msgstr "    composer require laravel/tinker\n"

# File: docs/8.x/artisan.md, line: 55
# File: docs/master/artisan.md, line: 55
#, no-wrap
#~ msgid "> {tip} Looking for a graphical UI for interacting with your Laravel application? Check out [Tinkerwell](https://tinkerwell.app)!\n"
#~ msgstr "> {tip} 想找個能與你的 Laravel 應用程式互動的圖形化 UI 嗎？試試 [Tinkerwell](https://tinkerwell.app) 吧！\n"

# File: docs/8.x/artisan.md, line: 57
# File: docs/master/artisan.md, line: 57
#, no-wrap
#~ msgid "<a name=\"usage\"></a>\n"
#~ msgstr "<a name=\"usage\"></a>\n"

# File: docs/8.x/artisan.md, line: 57
# File: docs/master/artisan.md, line: 57
#, no-wrap
#~ msgid "Usage"
#~ msgstr "使用"

# File: docs/8.x/artisan.md, line: 60
# File: docs/master/artisan.md, line: 60
#~ msgid ""
#~ "Tinker allows you to interact with your entire Laravel application on the "
#~ "command line, including your Eloquent models, jobs, events, and more. To "
#~ "enter the Tinker environment, run the `tinker` Artisan command:"
#~ msgstr ""
#~ "Tinker 可讓你在指令列內與完整的 Laravel 應用程式進行互動，包含 Eloquent 模"
#~ "型、任務、事件…等。要進入 Tinker 環境，請執行 `tinker` Artisan 指令："

# File: docs/8.x/artisan.md, line: 62
# File: docs/master/artisan.md, line: 62
#, no-wrap
#~ msgid "    php artisan tinker\n"
#~ msgstr "    php artisan tinker\n"

# File: docs/8.x/artisan.md, line: 64
# File: docs/master/artisan.md, line: 64
#~ msgid ""
#~ "You can publish Tinker's configuration file using the `vendor:publish` "
#~ "command:"
#~ msgstr "可以通過 `vendor:publish` 指令來發佈 Tinker 的組態設定檔："

# File: docs/8.x/artisan.md, line: 66
# File: docs/master/artisan.md, line: 66
#, no-wrap
#~ msgid "    php artisan vendor:publish --provider=\"Laravel\\Tinker\\TinkerServiceProvider\"\n"
#~ msgstr "    php artisan vendor:publish --provider=\"Laravel\\Tinker\\TinkerServiceProvider\"\n"

# File: docs/8.x/artisan.md, line: 68
# File: docs/master/artisan.md, line: 68
#, no-wrap
#~ msgid "> {note} The `dispatch` helper function and `dispatch` method on the `Dispatchable` class depends on garbage collection to place the job on the queue. Therefore, when using tinker, you should use `Bus::dispatch` or `Queue::push` to dispatch jobs.\n"
#~ msgstr "> {note} `dispatch` 輔助函式與 `Dispatchable` 類別上的 `dispatch` 方法需要仰賴垃圾回收機制來將任務放進佇列中。因此，在使用 Tinker 時，應使用 `Bus::dispatch` 或 `Queue::push` 來分派任務。\n"

# File: docs/8.x/artisan.md, line: 70
# File: docs/master/artisan.md, line: 70
#, no-wrap
#~ msgid "<a name=\"command-allow-list\"></a>\n"
#~ msgstr "<a name=\"command-allow-list\"></a>\n"

# File: docs/8.x/artisan.md, line: 70
# File: docs/master/artisan.md, line: 70
#, no-wrap
#~ msgid "Command Allow List"
#~ msgstr "指令允許列表"

# File: docs/8.x/artisan.md, line: 73
# File: docs/master/artisan.md, line: 73
#~ msgid ""
#~ "Tinker utilizes an \"allow\" list to determine which Artisan commands are "
#~ "allowed to be run within its shell. By default, you may run the `clear-"
#~ "compiled`, `down`, `env`, `inspire`, `migrate`, `optimize`, and `up` "
#~ "commands. If you would like to allow more commands you may add them to "
#~ "the `commands` array in your `tinker.php` configuration file:"
#~ msgstr ""
#~ "Tinker 使用一個「allow」清單來判斷哪些 Artisan 指令可在其 Shell 內執行。預"
#~ "設情況下，可以執行 `clear-compiled`, `down`, `env`, `inspire`, `migrate`, "
#~ "`optimize` 以及 `up` 指令。若想允許更多指令，可以將要允許的指令加在 "
#~ "`tinker.php` 組態設定檔中的 `commands` 陣列內："

# File: docs/8.x/artisan.md, line: 77
# File: docs/master/artisan.md, line: 77
#, no-wrap
#~ msgid ""
#~ "    'commands' => [\n"
#~ "        // App\\Console\\Commands\\ExampleCommand::class,\n"
#~ "    ],\n"
#~ msgstr ""
#~ "    'commands' => [\n"
#~ "        // App\\Console\\Commands\\ExampleCommand::class,\n"
#~ "    ],\n"

# File: docs/8.x/artisan.md, line: 79
# File: docs/master/artisan.md, line: 79
#, no-wrap
#~ msgid "<a name=\"classes-that-should-not-be-aliased\"></a>\n"
#~ msgstr "<a name=\"classes-that-should-not-be-aliased\"></a>\n"

# File: docs/8.x/artisan.md, line: 79
# File: docs/master/artisan.md, line: 79
#, no-wrap
#~ msgid "Classes That Should Not Be Aliased"
#~ msgstr "不應以別名使用的類別"

# File: docs/8.x/artisan.md, line: 82
# File: docs/master/artisan.md, line: 82
#~ msgid ""
#~ "Typically, Tinker automatically aliases classes as you interact with them "
#~ "in Tinker. However, you may wish to never alias some classes. You may "
#~ "accomplish this by listing the classes in the `dont_alias` array of your "
#~ "`tinker.php` configuration file:"
#~ msgstr ""
#~ "一般來說，Tinker 會在使用過程中自動為類別加上別名。但有些類別可能不希望被"
#~ "設定別名。可以通過在 `tinker.php` 組態設定檔中的 `dont_alias` 陣列中列出這"
#~ "些不想被自動別名的類別來達成："

# File: docs/8.x/artisan.md, line: 86
# File: docs/master/artisan.md, line: 86
#, no-wrap
#~ msgid ""
#~ "    'dont_alias' => [\n"
#~ "        App\\Models\\User::class,\n"
#~ "    ],\n"
#~ msgstr ""
#~ "    'dont_alias' => [\n"
#~ "        App\\Models\\User::class,\n"
#~ "    ],\n"

# File: docs/8.x/artisan.md, line: 88
# File: docs/master/artisan.md, line: 88
#, no-wrap
#~ msgid "<a name=\"writing-commands\"></a>\n"
#~ msgstr "<a name=\"writing-commands\"></a>\n"

# File: docs/8.x/artisan.md, line: 88
# File: docs/master/artisan.md, line: 88
#, no-wrap
#~ msgid "Writing Commands"
#~ msgstr "撰寫指令"

# File: docs/8.x/artisan.md, line: 91
# File: docs/master/artisan.md, line: 91
#~ msgid ""
#~ "In addition to the commands provided with Artisan, you may build your own "
#~ "custom commands. Commands are typically stored in the `app/Console/"
#~ "Commands` directory; however, you are free to choose your own storage "
#~ "location as long as your commands can be loaded by Composer."
#~ msgstr ""
#~ "除了 Artisan 提供的指令外，也可以建制自己的自定指令。指令通常儲存於 `app/"
#~ "Console/Commands` 目錄內。但是，只要你的自定指令可以被 Composer 載入，也可"
#~ "以自行選擇儲存位置。"

# File: docs/8.x/artisan.md, line: 93
# File: docs/master/artisan.md, line: 93
#, no-wrap
#~ msgid "<a name=\"generating-commands\"></a>\n"
#~ msgstr "<a name=\"generating-commands\"></a>\n"

# File: docs/8.x/artisan.md, line: 93
# File: docs/master/artisan.md, line: 93
#, no-wrap
#~ msgid "Generating Commands"
#~ msgstr "產生指令"

# File: docs/8.x/artisan.md, line: 96
# File: docs/master/artisan.md, line: 96
#~ msgid ""
#~ "To create a new command, you may use the `make:command` Artisan command. "
#~ "This command will create a new command class in the `app/Console/"
#~ "Commands` directory. Don't worry if this directory does not exist in your "
#~ "application - it will be created the first time you run the `make:"
#~ "command` Artisan command:"
#~ msgstr ""
#~ "若要建立新指令，可以使用 `make:command` Artisan 指令。該指令會在 `app/"
#~ "Console/Commands` 目錄下建立一個新的指令類別。若你的應用程式中沒有這個資料"
#~ "夾，請別擔心——第一次執行 `make:command` Artisan 指令的時候會自動建立該資料"
#~ "夾："

# File: docs/8.x/artisan.md, line: 98
# File: docs/master/artisan.md, line: 98
#, no-wrap
#~ msgid "    php artisan make:command SendEmails\n"
#~ msgstr "    php artisan make:command SendEmails\n"

# File: docs/8.x/artisan.md, line: 100
# File: docs/master/artisan.md, line: 100
#, no-wrap
#~ msgid "<a name=\"command-structure\"></a>\n"
#~ msgstr "<a name=\"command-structure\"></a>\n"

# File: docs/8.x/artisan.md, line: 100
# File: docs/master/artisan.md, line: 100
#, no-wrap
#~ msgid "Command Structure"
#~ msgstr "指令結構"

# File: docs/8.x/artisan.md, line: 103
# File: docs/master/artisan.md, line: 103
#~ msgid ""
#~ "After generating your command, you should define appropriate values for "
#~ "the `signature` and `description` properties of the class. These "
#~ "properties will be used when displaying your command on the `list` "
#~ "screen. The `signature` property also allows you to define [your "
#~ "command's input expectations](#defining-input-expectations). The `handle` "
#~ "method will be called when your command is executed. You may place your "
#~ "command logic in this method."
#~ msgstr ""
#~ "產生指令後，應為類別的 `signature` 與 `description` 屬性定義適當的值。當"
#~ "在 `list` 畫面內顯示該指令時，就會用到這些屬性。`signature` 屬性可以用來定"
#~ "義 [指令預期的輸入](#defining-input-expectations)。`handle` 方法會在執行該"
#~ "指令時呼叫。可以將指令的邏輯放在該方法內。"

# File: docs/8.x/artisan.md, line: 105
# File: docs/master/artisan.md, line: 105
#~ msgid ""
#~ "Let's take a look at an example command. Note that we are able to request "
#~ "any dependencies we need via the command's `handle` method. The Laravel "
#~ "[service container](/docs/{{version}}/container) will automatically "
#~ "inject all dependencies that are type-hinted in this method's signature:"
#~ msgstr ""
#~ "來看看一個範例指令。請注意，我們可以通過指令的 `handle` 方法來要求任意的相"
#~ "依性。Laravel 的 [Service Container](/docs/{{version}}/container) 會自動插"
#~ "入所有在方法簽章內有型別提示的相依性。"

# File: docs/8.x/artisan.md, line: 109
# File: docs/8.x/redis.md, line: 287
# File: docs/master/artisan.md, line: 109
# File: docs/master/redis.md, line: 287
#, no-wrap
#~ msgid "    namespace App\\Console\\Commands;\n"
#~ msgstr "    namespace App\\Console\\Commands;\n"

# File: docs/8.x/artisan.md, line: 113
# File: docs/master/artisan.md, line: 113
#, no-wrap
#~ msgid ""
#~ "    use App\\Models\\User;\n"
#~ "    use App\\Support\\DripEmailer;\n"
#~ "    use Illuminate\\Console\\Command;\n"
#~ msgstr ""
#~ "    use App\\Models\\User;\n"
#~ "    use App\\Support\\DripEmailer;\n"
#~ "    use Illuminate\\Console\\Command;\n"

# File: docs/8.x/artisan.md, line: 122
# File: docs/master/artisan.md, line: 122
#, no-wrap
#~ msgid ""
#~ "    class SendEmails extends Command\n"
#~ "    {\n"
#~ "        /**\n"
#~ "         * The name and signature of the console command.\n"
#~ "         *\n"
#~ "         * @var string\n"
#~ "         */\n"
#~ "        protected $signature = 'mail:send {user}';\n"
#~ msgstr ""
#~ "    class SendEmails extends Command\n"
#~ "    {\n"
#~ "        /**\n"
#~ "         * The name and signature of the console command.\n"
#~ "         *\n"
#~ "         * @var string\n"
#~ "         */\n"
#~ "        protected $signature = 'mail:send {user}';\n"

# File: docs/8.x/artisan.md, line: 129
# File: docs/master/artisan.md, line: 129
#, no-wrap
#~ msgid ""
#~ "        /**\n"
#~ "         * The console command description.\n"
#~ "         *\n"
#~ "         * @var string\n"
#~ "         */\n"
#~ "        protected $description = 'Send a marketing email to a user';\n"
#~ msgstr ""
#~ "        /**\n"
#~ "         * The console command description.\n"
#~ "         *\n"
#~ "         * @var string\n"
#~ "         */\n"
#~ "        protected $description = 'Send a marketing email to a user';\n"

# File: docs/8.x/artisan.md, line: 139
# File: docs/master/artisan.md, line: 139
#, no-wrap
#~ msgid ""
#~ "        /**\n"
#~ "         * Create a new command instance.\n"
#~ "         *\n"
#~ "         * @return void\n"
#~ "         */\n"
#~ "        public function __construct()\n"
#~ "        {\n"
#~ "            parent::__construct();\n"
#~ "        }\n"
#~ msgstr ""
#~ "        /**\n"
#~ "         * Create a new command instance.\n"
#~ "         *\n"
#~ "         * @return void\n"
#~ "         */\n"
#~ "        public function __construct()\n"
#~ "        {\n"
#~ "            parent::__construct();\n"
#~ "        }\n"

# File: docs/8.x/artisan.md, line: 151
# File: docs/master/artisan.md, line: 151
#, no-wrap
#~ msgid ""
#~ "        /**\n"
#~ "         * Execute the console command.\n"
#~ "         *\n"
#~ "         * @param  \\App\\Support\\DripEmailer  $drip\n"
#~ "         * @return mixed\n"
#~ "         */\n"
#~ "        public function handle(DripEmailer $drip)\n"
#~ "        {\n"
#~ "            $drip->send(User::find($this->argument('user')));\n"
#~ "        }\n"
#~ "    }\n"
#~ msgstr ""
#~ "        /**\n"
#~ "         * Execute the console command.\n"
#~ "         *\n"
#~ "         * @param  \\App\\Support\\DripEmailer  $drip\n"
#~ "         * @return mixed\n"
#~ "         */\n"
#~ "        public function handle(DripEmailer $drip)\n"
#~ "        {\n"
#~ "            $drip->send(User::find($this->argument('user')));\n"
#~ "        }\n"
#~ "    }\n"

# File: docs/8.x/artisan.md, line: 153
# File: docs/master/artisan.md, line: 153
#, no-wrap
#~ msgid "> {tip} For greater code reuse, it is good practice to keep your console commands light and let them defer to application services to accomplish their tasks. In the example above, note that we inject a service class to do the \"heavy lifting\" of sending the e-mails.\n"
#~ msgstr "> {tip} 為了提升程式碼重複使用率，最好保持主控台指令精簡，並將指令的任務委託給應用程式服務來完成。在上方的例子中，可以注意到我們插入了一個服務類別來處理寄送 E-Mail 的這個「重責大任」。\n"

# File: docs/8.x/artisan.md, line: 155
# File: docs/master/artisan.md, line: 155
#, no-wrap
#~ msgid "<a name=\"closure-commands\"></a>\n"
#~ msgstr "<a name=\"closure-commands\"></a>\n"

# File: docs/8.x/artisan.md, line: 155
# File: docs/master/artisan.md, line: 155
#, no-wrap
#~ msgid "Closure Commands"
#~ msgstr "閉包指令"

# File: docs/8.x/artisan.md, line: 158
# File: docs/master/artisan.md, line: 158
#~ msgid ""
#~ "Closure based commands provide an alternative to defining console "
#~ "commands as classes. In the same way that route closures are an "
#~ "alternative to controllers, think of command closures as an alternative "
#~ "to command classes. Within the `commands` method of your `app/Console/"
#~ "Kernel.php` file, Laravel loads the `routes/console.php` file:"
#~ msgstr ""
#~ "基於閉包的指令提供了以類別定義主控台指令外的另一個選擇。就如同使用閉包來定"
#~ "義路由可用來代替控制器一樣，可以將指令閉包想象成是指令類別的代替。在 `app/"
#~ "Console/Kernel.php` 檔中的 `commands` 方法內，Laravel 載入了 `routes/"
#~ "console.php` 檔："

# File: docs/8.x/artisan.md, line: 168
# File: docs/master/artisan.md, line: 168
#, no-wrap
#~ msgid ""
#~ "    /**\n"
#~ "     * Register the closure based commands for the application.\n"
#~ "     *\n"
#~ "     * @return void\n"
#~ "     */\n"
#~ "    protected function commands()\n"
#~ "    {\n"
#~ "        require base_path('routes/console.php');\n"
#~ "    }\n"
#~ msgstr ""
#~ "    /**\n"
#~ "     * Register the closure based commands for the application.\n"
#~ "     *\n"
#~ "     * @return void\n"
#~ "     */\n"
#~ "    protected function commands()\n"
#~ "    {\n"
#~ "        require base_path('routes/console.php');\n"
#~ "    }\n"

# File: docs/8.x/artisan.md, line: 170
# File: docs/master/artisan.md, line: 170
#~ msgid ""
#~ "Even though this file does not define HTTP routes, it defines console "
#~ "based entry points (routes) into your application. Within this file, you "
#~ "may define all of your closure based console commands using the `Artisan::"
#~ "command` method. The `command` method accepts two arguments: the [command "
#~ "signature](#defining-input-expectations) and a closure which receives the "
#~ "command's arguments and options:"
#~ msgstr ""
#~ "雖然這個檔案並沒有定義 HTTP 路由，而是定義了從主控台進入應用程式的進入點 "
#~ "(即，路由)。在該檔案內，可以通過 `Artisan::command` 方法來定義基於閉包的主"
#~ "控台指令。`command` 方法接受 2 個引數：[指令簽章](#defining-input-"
#~ "expectations) 與一個用來接收指令引數與選項的閉包："

# File: docs/8.x/artisan.md, line: 174
# File: docs/master/artisan.md, line: 174
#, no-wrap
#~ msgid ""
#~ "    Artisan::command('mail:send {user}', function ($user) {\n"
#~ "        $this->info(\"Sending email to: {$user}!\");\n"
#~ "    });\n"
#~ msgstr ""
#~ "    Artisan::command('mail:send {user}', function ($user) {\n"
#~ "        $this->info(\"Sending email to: {$user}!\");\n"
#~ "    });\n"

# File: docs/8.x/artisan.md, line: 176
# File: docs/master/artisan.md, line: 176
#~ msgid ""
#~ "The closure is bound to the underlying command instance, so you have full "
#~ "access to all of the helper methods you would typically be able to access "
#~ "on a full command class."
#~ msgstr ""
#~ "這裡的閉包有綁定到該指令的基礎類別執行個體，因此可以像在完整的指令類別內一"
#~ "樣存取所有的輔助函式。"

# File: docs/8.x/artisan.md, line: 178
# File: docs/master/artisan.md, line: 178
#, no-wrap
#~ msgid "<a name=\"type-hinting-dependencies\"></a>\n"
#~ msgstr "<a name=\"type-hinting-dependencies\"></a>\n"

# File: docs/8.x/artisan.md, line: 178
# File: docs/master/artisan.md, line: 178
#, no-wrap
#~ msgid "Type-Hinting Dependencies"
#~ msgstr "對依賴進行型別提示"

# File: docs/8.x/artisan.md, line: 181
# File: docs/master/artisan.md, line: 181
#~ msgid ""
#~ "In addition to receiving your command's arguments and options, command "
#~ "closures may also type-hint additional dependencies that you would like "
#~ "resolved out of the [service container](/docs/{{version}}/container):"
#~ msgstr ""
#~ "除了接收指令的引數與選項外，指令閉包也可以通過型別提示來向 [Service "
#~ "Container](/docs/{{version}}/container) 解析額外的依賴。"

# File: docs/8.x/artisan.md, line: 184
# File: docs/master/artisan.md, line: 184
#, no-wrap
#~ msgid ""
#~ "    use App\\Models\\User;\n"
#~ "    use App\\Support\\DripEmailer;\n"
#~ msgstr ""
#~ "    use App\\Models\\User;\n"
#~ "    use App\\Support\\DripEmailer;\n"

# File: docs/8.x/artisan.md, line: 188
# File: docs/master/artisan.md, line: 188
#, no-wrap
#~ msgid ""
#~ "    Artisan::command('mail:send {user}', function (DripEmailer $drip, $user) {\n"
#~ "        $drip->send(User::find($user));\n"
#~ "    });\n"
#~ msgstr ""
#~ "    Artisan::command('mail:send {user}', function (DripEmailer $drip, $user) {\n"
#~ "        $drip->send(User::find($user));\n"
#~ "    });\n"

# File: docs/8.x/artisan.md, line: 190
# File: docs/master/artisan.md, line: 190
#, no-wrap
#~ msgid "<a name=\"closure-command-descriptions\"></a>\n"
#~ msgstr "<a name=\"closure-command-descriptions\"></a>\n"

# File: docs/8.x/artisan.md, line: 190
# File: docs/master/artisan.md, line: 190
#, no-wrap
#~ msgid "Closure Command Descriptions"
#~ msgstr "閉包指令描述"

# File: docs/8.x/artisan.md, line: 193
# File: docs/master/artisan.md, line: 193
#~ msgid ""
#~ "When defining a closure based command, you may use the `purpose` method "
#~ "to add a description to the command. This description will be displayed "
#~ "when you run the `php artisan list` or `php artisan help` commands:"
#~ msgstr ""
#~ "在定義基於閉包的指令時，可以使用 `purpose` 方法來為該指令加上描述。這段描"
#~ "述會在執行 `php artisan list` 或 `php artisan help` 指令時顯示："

# File: docs/8.x/artisan.md, line: 197
# File: docs/master/artisan.md, line: 197
#, no-wrap
#~ msgid ""
#~ "    Artisan::command('mail:send {user}', function ($user) {\n"
#~ "        // ...\n"
#~ "    })->purpose('Send a marketing email to a user');\n"
#~ msgstr ""
#~ "    Artisan::command('mail:send {user}', function ($user) {\n"
#~ "        // ...\n"
#~ "    })->purpose('Send a marketing email to a user');\n"

# File: docs/8.x/artisan.md, line: 199
# File: docs/master/artisan.md, line: 199
#, no-wrap
#~ msgid "<a name=\"defining-input-expectations\"></a>\n"
#~ msgstr "<a name=\"defining-input-expectations\"></a>\n"

# File: docs/8.x/artisan.md, line: 199
# File: docs/master/artisan.md, line: 199
#, no-wrap
#~ msgid "Defining Input Expectations"
#~ msgstr "定義預期的輸入"

# File: docs/8.x/artisan.md, line: 202
# File: docs/master/artisan.md, line: 202
#~ msgid ""
#~ "When writing console commands, it is common to gather input from the user "
#~ "through arguments or options. Laravel makes it very convenient to define "
#~ "the input you expect from the user using the `signature` property on your "
#~ "commands. The `signature` property allows you to define the name, "
#~ "arguments, and options for the command in a single, expressive, route-"
#~ "like syntax."
#~ msgstr ""
#~ "在撰寫主控台指令時，常常會通過引數或選項來向使用者取得輸入。Laravel 通過指"
#~ "令的 `signature` 屬性來定義預期從使用者那取得的輸入，讓這個過程變得非常簡"
#~ "單。通過 `signature` 屬性，就能通過類似路由的格式來一次定義名稱、引數，以"
#~ "及選項。非常簡潔有力。"

# File: docs/8.x/artisan.md, line: 204
# File: docs/master/artisan.md, line: 204
#, no-wrap
#~ msgid "<a name=\"arguments\"></a>\n"
#~ msgstr "<a name=\"arguments\"></a>\n"

# File: docs/8.x/artisan.md, line: 204
# File: docs/master/artisan.md, line: 204
#, no-wrap
#~ msgid "Arguments"
#~ msgstr "引數"

# File: docs/8.x/artisan.md, line: 207
# File: docs/master/artisan.md, line: 207
#~ msgid ""
#~ "All user supplied arguments and options are wrapped in curly braces. In "
#~ "the following example, the command defines one required argument: `user`:"
#~ msgstr ""
#~ "所有由使用者提供的引數與選項都以大括號來包裝。在下列範例中的指令定義了一個"
#~ "必要的引數：`user`："

# File: docs/8.x/artisan.md, line: 214
# File: docs/master/artisan.md, line: 214
#, no-wrap
#~ msgid ""
#~ "    /**\n"
#~ "     * The name and signature of the console command.\n"
#~ "     *\n"
#~ "     * @var string\n"
#~ "     */\n"
#~ "    protected $signature = 'mail:send {user}';\n"
#~ msgstr ""
#~ "    /**\n"
#~ "     * The name and signature of the console command.\n"
#~ "     *\n"
#~ "     * @var string\n"
#~ "     */\n"
#~ "    protected $signature = 'mail:send {user}';\n"

# File: docs/8.x/artisan.md, line: 216
# File: docs/master/artisan.md, line: 216
#~ msgid ""
#~ "You may also make arguments optional or define default values for "
#~ "arguments:"
#~ msgstr "也可以將引數設為可選，或是定義引數的預設值："

# File: docs/8.x/artisan.md, line: 219
# File: docs/master/artisan.md, line: 219
#, no-wrap
#~ msgid ""
#~ "    // Optional argument...\n"
#~ "    mail:send {user?}\n"
#~ msgstr ""
#~ "    // Optional argument...\n"
#~ "    mail:send {user?}\n"

# File: docs/8.x/artisan.md, line: 222
# File: docs/master/artisan.md, line: 222
#, no-wrap
#~ msgid ""
#~ "    // Optional argument with default value...\n"
#~ "    mail:send {user=foo}\n"
#~ msgstr ""
#~ "    // Optional argument with default value...\n"
#~ "    mail:send {user=foo}\n"

# File: docs/8.x/artisan.md, line: 224
# File: docs/master/artisan.md, line: 224
#, no-wrap
#~ msgid "<a name=\"options\"></a>\n"
#~ msgstr "<a name=\"options\"></a>\n"

# File: docs/8.x/artisan.md, line: 224
# File: docs/master/artisan.md, line: 224
#, no-wrap
#~ msgid "Options"
#~ msgstr "選項"

# File: docs/8.x/artisan.md, line: 227
# File: docs/master/artisan.md, line: 227
#~ msgid ""
#~ "Options, like arguments, are another form of user input. Options are "
#~ "prefixed by two hyphens (`--`) when they are provided via the command "
#~ "line. There are two types of options: those that receive a value and "
#~ "those that don't. Options that don't receive a value serve as a boolean "
#~ "\"switch\". Let's take a look at an example of this type of option:"
#~ msgstr ""
#~ "選項就像引數一樣，是另一種形式的使用者輸入。選項在從指令列提供時，會加上兩"
#~ "個減號（`--`）作為前綴。有兩種類型的選項：一種可接收值，一種沒有接收值。沒"
#~ "有接收值的選項是一種布林「開關」功能。來看看一個使用這種類型選項的例子："

# File: docs/8.x/artisan.md, line: 234
# File: docs/master/artisan.md, line: 234
#, no-wrap
#~ msgid ""
#~ "    /**\n"
#~ "     * The name and signature of the console command.\n"
#~ "     *\n"
#~ "     * @var string\n"
#~ "     */\n"
#~ "    protected $signature = 'mail:send {user} {--queue}';\n"
#~ msgstr ""
#~ "    /**\n"
#~ "     * The name and signature of the console command.\n"
#~ "     *\n"
#~ "     * @var string\n"
#~ "     */\n"
#~ "    protected $signature = 'mail:send {user} {--queue}';\n"

# File: docs/8.x/artisan.md, line: 236
# File: docs/master/artisan.md, line: 236
#~ msgid ""
#~ "In this example, the `--queue` switch may be specified when calling the "
#~ "Artisan command. If the `--queue` switch is passed, the value of the "
#~ "option will be `true`. Otherwise, the value will be `false`:"
#~ msgstr ""
#~ "在這個例子中，呼叫該 Artisan 指令時可以指定 `--queue` 開關。若有傳入 `--"
#~ "queue` 開關，則該選項的值會是 `true`。否則，該值為 `false`："

# File: docs/8.x/artisan.md, line: 238
# File: docs/master/artisan.md, line: 238
#, no-wrap
#~ msgid "    php artisan mail:send 1 --queue\n"
#~ msgstr "    php artisan mail:send 1 --queue\n"

# File: docs/8.x/artisan.md, line: 240
# File: docs/master/artisan.md, line: 240
#, no-wrap
#~ msgid "<a name=\"options-with-values\"></a>\n"
#~ msgstr "<a name=\"options-with-values\"></a>\n"

# File: docs/8.x/artisan.md, line: 240
# File: docs/master/artisan.md, line: 240
#, no-wrap
#~ msgid "Options With Values"
#~ msgstr "帶值的選項"

# File: docs/8.x/artisan.md, line: 243
# File: docs/master/artisan.md, line: 243
#~ msgid ""
#~ "Next, let's take a look at an option that expects a value. If the user "
#~ "must specify a value for an option, you should suffix the option name "
#~ "with a `=` sign:"
#~ msgstr ""
#~ "接下來，來看看有值的選項。若使用者必須為選項指定一個值，則應在選項名稱後方"
#~ "加上 `=` 符號："

# File: docs/8.x/artisan.md, line: 250
# File: docs/master/artisan.md, line: 250
#, no-wrap
#~ msgid ""
#~ "    /**\n"
#~ "     * The name and signature of the console command.\n"
#~ "     *\n"
#~ "     * @var string\n"
#~ "     */\n"
#~ "    protected $signature = 'mail:send {user} {--queue=}';\n"
#~ msgstr ""
#~ "    /**\n"
#~ "     * The name and signature of the console command.\n"
#~ "     *\n"
#~ "     * @var string\n"
#~ "     */\n"
#~ "    protected $signature = 'mail:send {user} {--queue=}';\n"

# File: docs/8.x/artisan.md, line: 252
# File: docs/master/artisan.md, line: 252
#~ msgid ""
#~ "In this example, the user may pass a value for the option like so. If the "
#~ "option is not specified when invoking the command, its value will be "
#~ "`null`:"
#~ msgstr ""
#~ "在這個例子中，使用者可以傳入像這樣給選項帶入一個值。若在叫用該指令時未指定"
#~ "該選項，則其值為 `null`："

# File: docs/8.x/artisan.md, line: 254
# File: docs/master/artisan.md, line: 254
#, no-wrap
#~ msgid "    php artisan mail:send 1 --queue=default\n"
#~ msgstr "    php artisan mail:send 1 --queue=default\n"

# File: docs/8.x/artisan.md, line: 256
# File: docs/master/artisan.md, line: 256
#~ msgid ""
#~ "You may assign default values to options by specifying the default value "
#~ "after the option name. If no option value is passed by the user, the "
#~ "default value will be used:"
#~ msgstr ""
#~ "可以通過在選項名稱後方加上預設值來為選項指派一個預設值。若使用者未傳入選項"
#~ "值，將會使用預設值："

# File: docs/8.x/artisan.md, line: 258
# File: docs/master/artisan.md, line: 258
#, no-wrap
#~ msgid "    mail:send {user} {--queue=default}\n"
#~ msgstr "    mail:send {user} {--queue=default}\n"

# File: docs/8.x/artisan.md, line: 260
# File: docs/master/artisan.md, line: 260
#, no-wrap
#~ msgid "<a name=\"option-shortcuts\"></a>\n"
#~ msgstr "<a name=\"option-shortcuts\"></a>\n"

# File: docs/8.x/artisan.md, line: 260
# File: docs/master/artisan.md, line: 260
#, no-wrap
#~ msgid "Option Shortcuts"
#~ msgstr "選項捷徑"

# File: docs/8.x/artisan.md, line: 263
# File: docs/master/artisan.md, line: 263
#~ msgid ""
#~ "To assign a shortcut when defining an option, you may specify it before "
#~ "the option name and use the `|` character as a delimiter to separate the "
#~ "shortcut from the full option name:"
#~ msgstr ""
#~ "若要在定義選項時指定捷徑，可以在選項名稱前加上其捷徑名稱，並使用 `|` 字元"
#~ "來區分捷徑名稱與完整的選系名稱："

# File: docs/8.x/artisan.md, line: 265
# File: docs/master/artisan.md, line: 265
#, no-wrap
#~ msgid "    mail:send {user} {--Q|queue}\n"
#~ msgstr "    mail:send {user} {--Q|queue}\n"

# File: docs/8.x/artisan.md, line: 267
# File: docs/master/artisan.md, line: 267
#, no-wrap
#~ msgid "<a name=\"input-arrays\"></a>\n"
#~ msgstr "<a name=\"input-arrays\"></a>\n"

# File: docs/8.x/artisan.md, line: 267
# File: docs/master/artisan.md, line: 267
#, no-wrap
#~ msgid "Input Arrays"
#~ msgstr "輸入陣列"

# File: docs/8.x/artisan.md, line: 270
# File: docs/master/artisan.md, line: 270
#~ msgid ""
#~ "If you would like to define arguments or options to expect multiple input "
#~ "values, you may use the `*` character. First, let's take a look at an "
#~ "example that specifies such an argument:"
#~ msgstr ""
#~ "若想要定義預期有多個輸入值的引數或選項，則可以使用 `*` 字元。首先，來看看"
#~ "這樣設定引數的例子："

# File: docs/8.x/artisan.md, line: 272
# File: docs/master/artisan.md, line: 272
#, no-wrap
#~ msgid "    mail:send {user*}\n"
#~ msgstr "    mail:send {user*}\n"

# File: docs/8.x/artisan.md, line: 274
# File: docs/master/artisan.md, line: 274
#~ msgid ""
#~ "When calling this method, the `user` arguments may be passed in order to "
#~ "the command line. For example, the following command will set the value "
#~ "of `user` to an array with `foo` and `bar` as its values:"
#~ msgstr ""
#~ "呼叫這個方法的時候，`user` 引數在指令列中可以按照順序傳入。舉例來說，下列"
#~ "指令會將 `user` 的值設為有 `foo` 與 `bar` 值的陣列："

# File: docs/8.x/artisan.md, line: 276
# File: docs/master/artisan.md, line: 276
#, no-wrap
#~ msgid "    php artisan mail:send foo bar\n"
#~ msgstr "    php artisan mail:send foo bar\n"

# File: docs/8.x/artisan.md, line: 278
#~ msgid ""
#~ "This `*` character can be combined with an optional argument definition "
#~ "to allow zero or more instances of an argument:"
#~ msgstr ""
#~ "`*` 字元可以與可選引數組合使用來定義，這樣一來可允許有 0 個或多個引數的實"
#~ "體："

# File: docs/8.x/artisan.md, line: 280
#, no-wrap
#~ msgid "    mail:send {user?*}\n"
#~ msgstr "    mail:send {user?*}\n"

# File: docs/8.x/artisan.md, line: 282
# File: docs/master/artisan.md, line: 278
#, no-wrap
#~ msgid "<a name=\"option-arrays\"></a>\n"
#~ msgstr "<a name=\"option-arrays\"></a>\n"

# File: docs/8.x/artisan.md, line: 282
# File: docs/master/artisan.md, line: 278
#, no-wrap
#~ msgid "Option Arrays"
#~ msgstr "選項陣列"

# File: docs/8.x/artisan.md, line: 285
# File: docs/master/artisan.md, line: 281
#~ msgid ""
#~ "When defining an option that expects multiple input values, each option "
#~ "value passed to the command should be prefixed with the option name:"
#~ msgstr ""
#~ "定義預期有多個輸入值的選項時，每個傳入指令的選項值都應以選項名稱作為前綴："

# File: docs/8.x/artisan.md, line: 287
# File: docs/master/artisan.md, line: 283
#, no-wrap
#~ msgid "    mail:send {user} {--id=*}\n"
#~ msgstr "    mail:send {user} {--id=*}\n"

# File: docs/8.x/artisan.md, line: 289
# File: docs/master/artisan.md, line: 285
#, no-wrap
#~ msgid "    php artisan mail:send --id=1 --id=2\n"
#~ msgstr "    php artisan mail:send --id=1 --id=2\n"

# File: docs/8.x/artisan.md, line: 291
# File: docs/master/artisan.md, line: 287
#, no-wrap
#~ msgid "<a name=\"input-descriptions\"></a>\n"
#~ msgstr "<a name=\"input-descriptions\"></a>\n"

# File: docs/8.x/artisan.md, line: 291
# File: docs/master/artisan.md, line: 287
#, no-wrap
#~ msgid "Input Descriptions"
#~ msgstr "輸入描述"

# File: docs/8.x/artisan.md, line: 294
# File: docs/master/artisan.md, line: 290
#~ msgid ""
#~ "You may assign descriptions to input arguments and options by separating "
#~ "the argument name from the description using a colon. If you need a "
#~ "little extra room to define your command, feel free to spread the "
#~ "definition across multiple lines:"
#~ msgstr ""
#~ "可以通過以冒號（`:`）區分引數名與描述來為輸入引數或選項指定描述。若需要更"
#~ "多空間來定義指令的話，可以將定義拆分為多行："

# File: docs/8.x/artisan.md, line: 303
# File: docs/master/artisan.md, line: 299
#, no-wrap
#~ msgid ""
#~ "    /**\n"
#~ "     * The name and signature of the console command.\n"
#~ "     *\n"
#~ "     * @var string\n"
#~ "     */\n"
#~ "    protected $signature = 'mail:send\n"
#~ "                            {user : The ID of the user}\n"
#~ "                            {--queue= : Whether the job should be queued}';\n"
#~ msgstr ""
#~ "    /**\n"
#~ "     * The name and signature of the console command.\n"
#~ "     *\n"
#~ "     * @var string\n"
#~ "     */\n"
#~ "    protected $signature = 'mail:send\n"
#~ "                            {user : The ID of the user}\n"
#~ "                            {--queue= : Whether the job should be queued}';\n"

# File: docs/8.x/artisan.md, line: 305
# File: docs/master/artisan.md, line: 301
#, no-wrap
#~ msgid "<a name=\"command-io\"></a>\n"
#~ msgstr "<a name=\"command-io\"></a>\n"

# File: docs/8.x/artisan.md, line: 305
# File: docs/master/artisan.md, line: 301
#, no-wrap
#~ msgid "Command I/O"
#~ msgstr "指令 I/O"

# File: docs/8.x/artisan.md, line: 308
# File: docs/8.x/requests.md, line: 220
# File: docs/master/artisan.md, line: 304
# File: docs/master/requests.md, line: 215
#, no-wrap
#~ msgid "<a name=\"retrieving-input\"></a>\n"
#~ msgstr "<a name=\"retrieving-input\"></a>\n"

# File: docs/8.x/artisan.md, line: 308
# File: docs/8.x/requests.md, line: 220
# File: docs/master/artisan.md, line: 304
# File: docs/master/requests.md, line: 215
#, no-wrap
#~ msgid "Retrieving Input"
#~ msgstr "截取輸入"

# File: docs/8.x/artisan.md, line: 311
# File: docs/master/artisan.md, line: 307
#~ msgid ""
#~ "While your command is executing, you will likely need to access the "
#~ "values for the arguments and options accepted by your command. To do so, "
#~ "you may use the `argument` and `option` methods. If an argument or option "
#~ "does not exist, `null` will be returned:"
#~ msgstr ""
#~ "指令執行時，我們通常需要存取這些指令所接收的引數與選項值。要截取這些值，可"
#~ "以使用 `argument` 與 `option` 方法。若引數或選項不存在，則會回傳 `null`："

# File: docs/8.x/artisan.md, line: 320
# File: docs/master/artisan.md, line: 316
#, no-wrap
#~ msgid ""
#~ "    /**\n"
#~ "     * Execute the console command.\n"
#~ "     *\n"
#~ "     * @return int\n"
#~ "     */\n"
#~ "    public function handle()\n"
#~ "    {\n"
#~ "        $userId = $this->argument('user');\n"
#~ msgstr ""
#~ "    /**\n"
#~ "     * Execute the console command.\n"
#~ "     *\n"
#~ "     * @return int\n"
#~ "     */\n"
#~ "    public function handle()\n"
#~ "    {\n"
#~ "        $userId = $this->argument('user');\n"

# File: docs/8.x/artisan.md, line: 323
# File: docs/8.x/artisan.md, line: 583
# File: docs/master/artisan.md, line: 319
# File: docs/master/artisan.md, line: 579
#, no-wrap
#~ msgid ""
#~ "        //\n"
#~ "    }\n"
#~ msgstr ""
#~ "        //\n"
#~ "    }\n"

# File: docs/8.x/artisan.md, line: 325
# File: docs/master/artisan.md, line: 321
#~ msgid ""
#~ "If you need to retrieve all of the arguments as an `array`, call the "
#~ "`arguments` method:"
#~ msgstr "若要將所有引數截取為陣列，則可呼叫 `arguments` 方法："

# File: docs/8.x/artisan.md, line: 327
# File: docs/master/artisan.md, line: 323
#, no-wrap
#~ msgid "    $arguments = $this->arguments();\n"
#~ msgstr "    $arguments = $this->arguments();\n"

# File: docs/8.x/artisan.md, line: 329
# File: docs/master/artisan.md, line: 325
#~ msgid ""
#~ "Options may be retrieved just as easily as arguments using the `option` "
#~ "method. To retrieve all of the options as an array, call the `options` "
#~ "method:"
#~ msgstr ""
#~ "選項也可輕鬆地像截取引數一樣使用 `option` 方法來截取。若要將所有選項截取為"
#~ "陣列，請呼叫 `options` 方法："

# File: docs/8.x/artisan.md, line: 332
# File: docs/master/artisan.md, line: 328
#, no-wrap
#~ msgid ""
#~ "    // Retrieve a specific option...\n"
#~ "    $queueName = $this->option('queue');\n"
#~ msgstr ""
#~ "    // Retrieve a specific option...\n"
#~ "    $queueName = $this->option('queue');\n"

# File: docs/8.x/artisan.md, line: 335
# File: docs/master/artisan.md, line: 331
#, no-wrap
#~ msgid ""
#~ "    // Retrieve all options as an array...\n"
#~ "    $options = $this->options();\n"
#~ msgstr ""
#~ "    // Retrieve all options as an array...\n"
#~ "    $options = $this->options();\n"

# File: docs/8.x/artisan.md, line: 337
# File: docs/master/artisan.md, line: 333
#, no-wrap
#~ msgid "<a name=\"prompting-for-input\"></a>\n"
#~ msgstr "<a name=\"prompting-for-input\"></a>\n"

# File: docs/8.x/artisan.md, line: 337
# File: docs/master/artisan.md, line: 333
#, no-wrap
#~ msgid "Prompting For Input"
#~ msgstr "為輸入進行提示"

# File: docs/8.x/artisan.md, line: 340
# File: docs/master/artisan.md, line: 336
#~ msgid ""
#~ "In addition to displaying output, you may also ask the user to provide "
#~ "input during the execution of your command. The `ask` method will prompt "
#~ "the user with the given question, accept their input, and then return the "
#~ "user's input back to your command:"
#~ msgstr ""
#~ "除了顯示輸出外，也可以在執行指令的過程中詢問使用者來提供輸入。`ask` 方法會"
#~ "提示使用者給定的問題，並接受使用者輸入，然後將使用者的輸入回傳至指令："

# File: docs/8.x/artisan.md, line: 350
# File: docs/master/artisan.md, line: 346
#, no-wrap
#~ msgid ""
#~ "    /**\n"
#~ "     * Execute the console command.\n"
#~ "     *\n"
#~ "     * @return mixed\n"
#~ "     */\n"
#~ "    public function handle()\n"
#~ "    {\n"
#~ "        $name = $this->ask('What is your name?');\n"
#~ "    }\n"
#~ msgstr ""
#~ "    /**\n"
#~ "     * Execute the console command.\n"
#~ "     *\n"
#~ "     * @return mixed\n"
#~ "     */\n"
#~ "    public function handle()\n"
#~ "    {\n"
#~ "        $name = $this->ask('What is your name?');\n"
#~ "    }\n"

# File: docs/8.x/artisan.md, line: 352
# File: docs/master/artisan.md, line: 348
#~ msgid ""
#~ "The `secret` method is similar to `ask`, but the user's input will not be "
#~ "visible to them as they type in the console. This method is useful when "
#~ "asking for sensitive information such as passwords:"
#~ msgstr ""
#~ "`secret` 方法與 `ask` 類似，但使用者在指令列輸入的過程中將看不到他們自己的"
#~ "輸入值。這個方法適用於像使用者詢問如密碼等機密資訊的時候："

# File: docs/8.x/artisan.md, line: 354
# File: docs/master/artisan.md, line: 350
#, no-wrap
#~ msgid "    $password = $this->secret('What is the password?');\n"
#~ msgstr "    $password = $this->secret('What is the password?');\n"

# File: docs/8.x/artisan.md, line: 356
# File: docs/master/artisan.md, line: 352
#, no-wrap
#~ msgid "<a name=\"asking-for-confirmation\"></a>\n"
#~ msgstr "<a name=\"asking-for-confirmation\"></a>\n"

# File: docs/8.x/artisan.md, line: 356
# File: docs/master/artisan.md, line: 352
#, no-wrap
#~ msgid "Asking For Confirmation"
#~ msgstr "要求確認"

# File: docs/8.x/artisan.md, line: 359
# File: docs/master/artisan.md, line: 355
#~ msgid ""
#~ "If you need to ask the user for a simple \"yes or no\" confirmation, you "
#~ "may use the `confirm` method. By default, this method will return "
#~ "`false`. However, if the user enters `y` or `yes` in response to the "
#~ "prompt, the method will return `true`."
#~ msgstr ""
#~ "若需要使用者回答簡單的「yes or no」的確認問題，可以使用 `confirm` 方法。預"
#~ "設情況下，這個方法會回傳 `false`。但若使用者在提示時輸入 `y` 或 `yes`，則"
#~ "該方法會回傳 `true`。"

# File: docs/8.x/artisan.md, line: 363
# File: docs/master/artisan.md, line: 359
#, no-wrap
#~ msgid ""
#~ "    if ($this->confirm('Do you wish to continue?')) {\n"
#~ "        //\n"
#~ "    }\n"
#~ msgstr ""
#~ "    if ($this->confirm('Do you wish to continue?')) {\n"
#~ "        //\n"
#~ "    }\n"

# File: docs/8.x/artisan.md, line: 365
# File: docs/master/artisan.md, line: 361
#~ msgid ""
#~ "If necessary, you may specify that the confirmation prompt should return "
#~ "`true` by default by passing `true` as the second argument to the "
#~ "`confirm` method:"
#~ msgstr ""
#~ "若有必要，也可以通過將 `true` 傳入為 `confirm` 方法的第二個引數來指定讓確"
#~ "認提示預設回傳 `true`："

# File: docs/8.x/artisan.md, line: 369
# File: docs/master/artisan.md, line: 365
#, no-wrap
#~ msgid ""
#~ "    if ($this->confirm('Do you wish to continue?', true)) {\n"
#~ "        //\n"
#~ "    }\n"
#~ msgstr ""
#~ "    if ($this->confirm('Do you wish to continue?', true)) {\n"
#~ "        //\n"
#~ "    }\n"

# File: docs/8.x/artisan.md, line: 371
# File: docs/master/artisan.md, line: 367
#, no-wrap
#~ msgid "<a name=\"auto-completion\"></a>\n"
#~ msgstr "<a name=\"auto-completion\"></a>\n"

# File: docs/8.x/artisan.md, line: 371
# File: docs/master/artisan.md, line: 367
#, no-wrap
#~ msgid "Auto-Completion"
#~ msgstr "自動補全"

# File: docs/8.x/artisan.md, line: 374
# File: docs/master/artisan.md, line: 370
#~ msgid ""
#~ "The `anticipate` method can be used to provide auto-completion for "
#~ "possible choices. The user can still provide any answer, regardless of "
#~ "the auto-completion hints:"
#~ msgstr ""
#~ "`anticipate` 方法可以用來為可能的選項提供自動補全。不論自動補全提示了什"
#~ "麼，使用者一樣可以提供任意回答："

# File: docs/8.x/artisan.md, line: 376
# File: docs/master/artisan.md, line: 372
#, no-wrap
#~ msgid "    $name = $this->anticipate('What is your name?', ['Taylor', 'Dayle']);\n"
#~ msgstr "    $name = $this->anticipate('What is your name?', ['Taylor', 'Dayle']);\n"

# File: docs/8.x/artisan.md, line: 378
# File: docs/master/artisan.md, line: 374
#~ msgid ""
#~ "Alternatively, you may pass a closure as the second argument to the "
#~ "`anticipate` method. The closure will be called each time the user types "
#~ "an input character. The closure should accept a string parameter "
#~ "containing the user's input so far, and return an array of options for "
#~ "auto-completion:"
#~ msgstr ""
#~ "另外，也可以將一個閉包傳給 `anticipate` 方法的第二個引數。這個閉包會在每次"
#~ "使用者輸入字元的時候被呼叫。該閉包應接受一個字串參數，其中包含了目前使用者"
#~ "的輸入值，並回傳用於自動補全的選項陣列："

# File: docs/8.x/artisan.md, line: 382
# File: docs/master/artisan.md, line: 378
#, no-wrap
#~ msgid ""
#~ "    $name = $this->anticipate('What is your address?', function ($input) {\n"
#~ "        // Return auto-completion options...\n"
#~ "    });\n"
#~ msgstr ""
#~ "    $name = $this->anticipate('What is your address?', function ($input) {\n"
#~ "        // Return auto-completion options...\n"
#~ "    });\n"

# File: docs/8.x/artisan.md, line: 384
# File: docs/master/artisan.md, line: 380
#, no-wrap
#~ msgid "<a name=\"multiple-choice-questions\"></a>\n"
#~ msgstr "<a name=\"multiple-choice-questions\"></a>\n"

# File: docs/8.x/artisan.md, line: 384
# File: docs/master/artisan.md, line: 380
#, no-wrap
#~ msgid "Multiple Choice Questions"
#~ msgstr "多重選擇問題"

# File: docs/8.x/artisan.md, line: 387
# File: docs/master/artisan.md, line: 383
#~ msgid ""
#~ "If you need to give the user a predefined set of choices when asking a "
#~ "question, you may use the `choice` method. You may set the array index of "
#~ "the default value to be returned if no option is chosen by passing the "
#~ "index as the third argument to the method:"
#~ msgstr ""
#~ "若需要在詢問問題時為提供使用者一組預先定義的選項，可以使用 `choice` 方法。"
#~ "也可以通過將預設選項的陣列索引傳給該方法的第三個參數，來指定沒有選擇任何選"
#~ "項時要回傳的預設值："

# File: docs/8.x/artisan.md, line: 393
# File: docs/master/artisan.md, line: 389
#, no-wrap
#~ msgid ""
#~ "    $name = $this->choice(\n"
#~ "        'What is your name?',\n"
#~ "        ['Taylor', 'Dayle'],\n"
#~ "        $defaultIndex\n"
#~ "    );\n"
#~ msgstr ""
#~ "    $name = $this->choice(\n"
#~ "        'What is your name?',\n"
#~ "        ['Taylor', 'Dayle'],\n"
#~ "        $defaultIndex\n"
#~ "    );\n"

# File: docs/8.x/artisan.md, line: 395
# File: docs/master/artisan.md, line: 391
#~ msgid ""
#~ "In addition, the `choice` method accepts optional fourth and fifth "
#~ "arguments for determining the maximum number of attempts to select a "
#~ "valid response and whether multiple selections are permitted:"
#~ msgstr ""
#~ "另外，`choice` 方法也接受第 4 個與第 5 個引數，這兩個引數分別是用來判斷選"
#~ "擇有效回答的最大嘗試次數，以及是否允許多重選擇："

# File: docs/8.x/artisan.md, line: 403
# File: docs/master/artisan.md, line: 399
#, no-wrap
#~ msgid ""
#~ "    $name = $this->choice(\n"
#~ "        'What is your name?',\n"
#~ "        ['Taylor', 'Dayle'],\n"
#~ "        $defaultIndex,\n"
#~ "        $maxAttempts = null,\n"
#~ "        $allowMultipleSelections = false\n"
#~ "    );\n"
#~ msgstr ""
#~ "    $name = $this->choice(\n"
#~ "        'What is your name?',\n"
#~ "        ['Taylor', 'Dayle'],\n"
#~ "        $defaultIndex,\n"
#~ "        $maxAttempts = null,\n"
#~ "        $allowMultipleSelections = false\n"
#~ "    );\n"

# File: docs/8.x/artisan.md, line: 405
# File: docs/master/artisan.md, line: 401
#, no-wrap
#~ msgid "<a name=\"writing-output\"></a>\n"
#~ msgstr "<a name=\"writing-output\"></a>\n"

# File: docs/8.x/artisan.md, line: 405
# File: docs/master/artisan.md, line: 401
#, no-wrap
#~ msgid "Writing Output"
#~ msgstr "撰寫輸出"

# File: docs/8.x/artisan.md, line: 408
# File: docs/master/artisan.md, line: 404
#~ msgid ""
#~ "To send output to the console, you may use the `line`, `info`, `comment`, "
#~ "`question` and `error` methods. Each of these methods will use "
#~ "appropriate ANSI colors for their purpose. For example, let's display "
#~ "some general information to the user. Typically, the `info` method will "
#~ "display in the console as green colored text:"
#~ msgstr ""
#~ "若要將輸出傳送至主控台，可以使用 `line`, `info`, `comment`, `question` 與 "
#~ "`error` 方法。這幾個方法會依不同目的來使用適當的 ANSI 色彩。舉例來說，我們"
#~ "來顯示一些一般的資訊給使用者看。通常來說，`info` 方法會在主控台上顯示出綠"
#~ "色的文字："

# File: docs/8.x/artisan.md, line: 417
# File: docs/master/artisan.md, line: 413
#, no-wrap
#~ msgid ""
#~ "    /**\n"
#~ "     * Execute the console command.\n"
#~ "     *\n"
#~ "     * @return mixed\n"
#~ "     */\n"
#~ "    public function handle()\n"
#~ "    {\n"
#~ "        // ...\n"
#~ msgstr ""
#~ "    /**\n"
#~ "     * Execute the console command.\n"
#~ "     *\n"
#~ "     * @return mixed\n"
#~ "     */\n"
#~ "    public function handle()\n"
#~ "    {\n"
#~ "        // ...\n"

# File: docs/8.x/artisan.md, line: 420
# File: docs/master/artisan.md, line: 416
#, no-wrap
#~ msgid ""
#~ "        $this->info('The command was successful!');\n"
#~ "    }\n"
#~ msgstr ""
#~ "        $this->info('The command was successful!');\n"
#~ "    }\n"

# File: docs/8.x/artisan.md, line: 422
# File: docs/master/artisan.md, line: 418
#~ msgid ""
#~ "To display an error message, use the `error` method. Error message text "
#~ "is typically displayed in red:"
#~ msgstr ""
#~ "若要顯示錯誤訊息，可以使用 `error` 方法。錯誤訊息文字通常會以紅色顯示："

# File: docs/8.x/artisan.md, line: 424
# File: docs/master/artisan.md, line: 420
#, no-wrap
#~ msgid "    $this->error('Something went wrong!');\n"
#~ msgstr "    $this->error('Something went wrong!');\n"

# File: docs/8.x/artisan.md, line: 426
# File: docs/master/artisan.md, line: 422
#~ msgid "You may use the `line` method to display plain, uncolored text:"
#~ msgstr "也可以使用 `line` 方法來顯示未標示色彩的純文字："

# File: docs/8.x/artisan.md, line: 428
# File: docs/master/artisan.md, line: 424
#, no-wrap
#~ msgid "    $this->line('Display this on the screen');\n"
#~ msgstr "    $this->line('Display this on the screen');\n"

# File: docs/8.x/artisan.md, line: 430
# File: docs/master/artisan.md, line: 426
#~ msgid "You may use the `newLine` method to display a blank line:"
#~ msgstr "可以使用 `newLine` 方法來顯示空行："

# File: docs/8.x/artisan.md, line: 433
# File: docs/master/artisan.md, line: 429
#, no-wrap
#~ msgid ""
#~ "    // Write a single blank line...\n"
#~ "    $this->newLine();\n"
#~ msgstr ""
#~ "    // Write a single blank line...\n"
#~ "    $this->newLine();\n"

# File: docs/8.x/artisan.md, line: 436
# File: docs/master/artisan.md, line: 432
#, no-wrap
#~ msgid ""
#~ "    // Write three blank lines...\n"
#~ "    $this->newLine(3);\n"
#~ msgstr ""
#~ "    // Write three blank lines...\n"
#~ "    $this->newLine(3);\n"

# File: docs/8.x/artisan.md, line: 438
# File: docs/8.x/migrations.md, line: 183
# File: docs/master/artisan.md, line: 434
# File: docs/master/migrations.md, line: 157
#, no-wrap
#~ msgid "<a name=\"tables\"></a>\n"
#~ msgstr "<a name=\"tables\"></a>\n"

# File: docs/8.x/artisan.md, line: 438
# File: docs/8.x/migrations.md, line: 183
# File: docs/master/artisan.md, line: 434
# File: docs/master/migrations.md, line: 157
#, no-wrap
#~ msgid "Tables"
#~ msgstr "表格"

# File: docs/8.x/artisan.md, line: 442
# File: docs/master/artisan.md, line: 438
#~ msgid ""
#~ "The `table` method makes it easy to correctly format multiple rows / "
#~ "columns of data. All you need to do is provide the column names and the "
#~ "data for the table and Laravel will automatically calculate the "
#~ "appropriate width and height of the table for you:"
#~ msgstr ""
#~ "通過 `table` 方法可以很輕鬆地正確為多行列資料進行格式化。只需要提供表格的"
#~ "欄位名稱與表格的資料，Laravel 就會自動計算適當的表格寬高："

# File: docs/8.x/artisan.md, line: 444
# File: docs/8.x/artisan.md, line: 456
# File: docs/8.x/authorization.md, line: 421
# File: docs/8.x/billing.md, line: 508
# File: docs/8.x/billing.md, line: 676
# File: docs/8.x/billing.md, line: 712
# File: docs/8.x/billing.md, line: 796
# File: docs/8.x/billing.md, line: 848
# File: docs/8.x/billing.md, line: 991
# File: docs/8.x/billing.md, line: 1108
# File: docs/8.x/billing.md, line: 1146
# File: docs/8.x/billing.md, line: 1262
# File: docs/8.x/cashier-paddle.md, line: 367
# File: docs/8.x/cashier-paddle.md, line: 666
# File: docs/8.x/cashier-paddle.md, line: 687
# File: docs/8.x/cashier-paddle.md, line: 869
# File: docs/8.x/cashier-paddle.md, line: 1070
# File: docs/8.x/cashier-paddle.md, line: 1093
# File: docs/8.x/cashier-paddle.md, line: 1118
# File: docs/8.x/collections.md, line: 2884
# File: docs/8.x/collections.md, line: 2925
# File: docs/8.x/collections.md, line: 2933
# File: docs/8.x/database-testing.md, line: 186
# File: docs/8.x/database-testing.md, line: 245
# File: docs/8.x/database-testing.md, line: 489
# File: docs/8.x/database-testing.md, line: 626
# File: docs/8.x/dusk.md, line: 360
# File: docs/8.x/eloquent-collections.md, line: 15
# File: docs/8.x/eloquent-collections.md, line: 87
# File: docs/8.x/eloquent-collections.md, line: 121
# File: docs/8.x/eloquent-collections.md, line: 178
# File: docs/8.x/eloquent-mutators.md, line: 56
# File: docs/8.x/eloquent-mutators.md, line: 105
# File: docs/8.x/eloquent-mutators.md, line: 195
# File: docs/8.x/eloquent-mutators.md, line: 435
# File: docs/8.x/eloquent-relationships.md, line: 453
# File: docs/8.x/eloquent-relationships.md, line: 502
# File: docs/8.x/eloquent-relationships.md, line: 982
# File: docs/8.x/eloquent-relationships.md, line: 1032
# File: docs/8.x/eloquent-relationships.md, line: 1417
# File: docs/8.x/eloquent-relationships.md, line: 1611
# File: docs/8.x/eloquent-serialization.md, line: 27
# File: docs/8.x/eloquent-serialization.md, line: 50
# File: docs/8.x/eloquent.md, line: 604
# File: docs/8.x/eloquent.md, line: 1061
# File: docs/8.x/eloquent.md, line: 1210
# File: docs/8.x/eloquent.md, line: 1283
# File: docs/8.x/eloquent.md, line: 1311
# File: docs/8.x/pagination.md, line: 70
# File: docs/8.x/pagination.md, line: 98
# File: docs/8.x/pagination.md, line: 113
# File: docs/8.x/pagination.md, line: 163
# File: docs/8.x/passport.md, line: 854
# File: docs/8.x/queries.md, line: 650
# File: docs/8.x/releases.md, line: 99
# File: docs/8.x/releases.md, line: 121
# File: docs/8.x/responses.md, line: 57
# File: docs/8.x/routing.md, line: 370
# File: docs/8.x/routing.md, line: 467
# File: docs/8.x/seeding.md, line: 63
# File: docs/master/artisan.md, line: 440
# File: docs/master/artisan.md, line: 452
# File: docs/master/authorization.md, line: 421
# File: docs/master/billing.md, line: 478
# File: docs/master/billing.md, line: 637
# File: docs/master/billing.md, line: 673
# File: docs/master/billing.md, line: 757
# File: docs/master/billing.md, line: 809
# File: docs/master/billing.md, line: 872
# File: docs/master/billing.md, line: 981
# File: docs/master/billing.md, line: 1019
# File: docs/master/billing.md, line: 1135
# File: docs/master/cashier-paddle.md, line: 327
# File: docs/master/cashier-paddle.md, line: 626
# File: docs/master/cashier-paddle.md, line: 647
# File: docs/master/cashier-paddle.md, line: 829
# File: docs/master/cashier-paddle.md, line: 1030
# File: docs/master/cashier-paddle.md, line: 1053
# File: docs/master/cashier-paddle.md, line: 1078
# File: docs/master/collections.md, line: 2880
# File: docs/master/collections.md, line: 2921
# File: docs/master/collections.md, line: 2929
# File: docs/master/database-testing.md, line: 186
# File: docs/master/database-testing.md, line: 245
# File: docs/master/database-testing.md, line: 480
# File: docs/master/database-testing.md, line: 617
# File: docs/master/dusk.md, line: 360
# File: docs/master/eloquent-collections.md, line: 15
# File: docs/master/eloquent-collections.md, line: 87
# File: docs/master/eloquent-collections.md, line: 121
# File: docs/master/eloquent-collections.md, line: 178
# File: docs/master/eloquent-mutators.md, line: 56
# File: docs/master/eloquent-mutators.md, line: 105
# File: docs/master/eloquent-mutators.md, line: 195
# File: docs/master/eloquent-mutators.md, line: 400
# File: docs/master/eloquent-relationships.md, line: 453
# File: docs/master/eloquent-relationships.md, line: 502
# File: docs/master/eloquent-relationships.md, line: 982
# File: docs/master/eloquent-relationships.md, line: 1032
# File: docs/master/eloquent-relationships.md, line: 1417
# File: docs/master/eloquent-relationships.md, line: 1611
# File: docs/master/eloquent-serialization.md, line: 27
# File: docs/master/eloquent-serialization.md, line: 50
# File: docs/master/eloquent.md, line: 365
# File: docs/master/eloquent.md, line: 566
# File: docs/master/eloquent.md, line: 1019
# File: docs/master/eloquent.md, line: 1164
# File: docs/master/eloquent.md, line: 1233
# File: docs/master/pagination.md, line: 70
# File: docs/master/pagination.md, line: 98
# File: docs/master/pagination.md, line: 113
# File: docs/master/pagination.md, line: 163
# File: docs/master/passport.md, line: 852
# File: docs/master/queries.md, line: 623
# File: docs/master/releases.md, line: 99
# File: docs/master/releases.md, line: 121
# File: docs/master/responses.md, line: 57
# File: docs/master/routing.md, line: 370
# File: docs/master/routing.md, line: 466
# File: docs/master/seeding.md, line: 63
#, no-wrap
#~ msgid "    use App\\Models\\User;\n"
#~ msgstr "    use App\\Models\\User;\n"

# File: docs/8.x/artisan.md, line: 449
# File: docs/master/artisan.md, line: 445
#, no-wrap
#~ msgid ""
#~ "    $this->table(\n"
#~ "        ['Name', 'Email'],\n"
#~ "        User::all(['name', 'email'])->toArray()\n"
#~ "    );\n"
#~ msgstr ""
#~ "    $this->table(\n"
#~ "        ['Name', 'Email'],\n"
#~ "        User::all(['name', 'email'])->toArray()\n"
#~ "    );\n"

# File: docs/8.x/artisan.md, line: 451
# File: docs/master/artisan.md, line: 447
#, no-wrap
#~ msgid "<a name=\"progress-bars\"></a>\n"
#~ msgstr "<a name=\"progress-bars\"></a>\n"

# File: docs/8.x/artisan.md, line: 451
# File: docs/master/artisan.md, line: 447
#, no-wrap
#~ msgid "Progress Bars"
#~ msgstr "進度列"

# File: docs/8.x/artisan.md, line: 454
# File: docs/master/artisan.md, line: 450
#~ msgid ""
#~ "For long running tasks, it can be helpful to show a progress bar that "
#~ "informs users how complete the task is. Using the `withProgressBar` "
#~ "method, Laravel will display a progress bar and advance its progress for "
#~ "each iteration over a given iterable value:"
#~ msgstr ""
#~ "當有需要長時間執行的任務時，最好顯示一個能告訴使用者目前任務完成度的進度"
#~ "列。使用 `withProgressBar` 方法，Laravel 就會顯示出一個進度列，並在每次迭"
#~ "代過指定的迭代值時增加進度列的進度："

# File: docs/8.x/artisan.md, line: 460
# File: docs/master/artisan.md, line: 456
#, no-wrap
#~ msgid ""
#~ "    $users = $this->withProgressBar(User::all(), function ($user) {\n"
#~ "        $this->performTask($user);\n"
#~ "    });\n"
#~ msgstr ""
#~ "    $users = $this->withProgressBar(User::all(), function ($user) {\n"
#~ "        $this->performTask($user);\n"
#~ "    });\n"

# File: docs/8.x/artisan.md, line: 462
# File: docs/master/artisan.md, line: 458
#~ msgid ""
#~ "Sometimes, you may need more manual control over how a progress bar is "
#~ "advanced. First, define the total number of steps the process will "
#~ "iterate through. Then, advance the progress bar after processing each "
#~ "item:"
#~ msgstr ""
#~ "有時候，我們可能需要手動控制進度列何時需要增加。首先，我們先定義整個過程所"
#~ "需要迭代的次數。接著，在每個項目處理完後增加進度："

# File: docs/8.x/artisan.md, line: 464
# File: docs/master/artisan.md, line: 460
#, no-wrap
#~ msgid "    $users = App\\Models\\User::all();\n"
#~ msgstr "    $users = App\\Models\\User::all();\n"

# File: docs/8.x/artisan.md, line: 466
# File: docs/master/artisan.md, line: 462
#, no-wrap
#~ msgid "    $bar = $this->output->createProgressBar(count($users));\n"
#~ msgstr "    $bar = $this->output->createProgressBar(count($users));\n"

# File: docs/8.x/artisan.md, line: 468
# File: docs/master/artisan.md, line: 464
#, no-wrap
#~ msgid "    $bar->start();\n"
#~ msgstr "    $bar->start();\n"

# File: docs/8.x/artisan.md, line: 471
# File: docs/master/artisan.md, line: 467
#, no-wrap
#~ msgid ""
#~ "    foreach ($users as $user) {\n"
#~ "        $this->performTask($user);\n"
#~ msgstr ""
#~ "    foreach ($users as $user) {\n"
#~ "        $this->performTask($user);\n"

# File: docs/8.x/artisan.md, line: 474
# File: docs/master/artisan.md, line: 470
#, no-wrap
#~ msgid ""
#~ "        $bar->advance();\n"
#~ "    }\n"
#~ msgstr ""
#~ "        $bar->advance();\n"
#~ "    }\n"

# File: docs/8.x/artisan.md, line: 476
# File: docs/master/artisan.md, line: 472
#, no-wrap
#~ msgid "    $bar->finish();\n"
#~ msgstr "    $bar->finish();\n"

# File: docs/8.x/artisan.md, line: 478
# File: docs/master/artisan.md, line: 474
#, no-wrap
#~ msgid "> {tip} For more advanced options, check out the [Symfony Progress Bar component documentation](https://symfony.com/doc/current/components/console/helpers/progressbar.html).\n"
#~ msgstr "> {tip} 有關更進階的選項，請參考 [Symfony Progress Bar 元件說明文件（英語）](https://symfony.com/doc/current/components/console/helpers/progressbar.html).\n"

# File: docs/8.x/artisan.md, line: 480
# File: docs/master/artisan.md, line: 476
#, no-wrap
#~ msgid "<a name=\"registering-commands\"></a>\n"
#~ msgstr "<a name=\"registering-commands\"></a>\n"

# File: docs/8.x/artisan.md, line: 480
# File: docs/master/artisan.md, line: 476
#, no-wrap
#~ msgid "Registering Commands"
#~ msgstr "註冊指令"

# File: docs/8.x/artisan.md, line: 483
# File: docs/master/artisan.md, line: 479
#~ msgid ""
#~ "All of your console commands are registered within your application's `App"
#~ "\\Console\\Kernel` class, which is your application's \"console kernel\". "
#~ "Within the `commands` method of this class, you will see a call to the "
#~ "kernel's `load` method. The `load` method will scan the `app/Console/"
#~ "Commands` directory and automatically register each command it contains "
#~ "with Artisan. You are even free to make additional calls to the `load` "
#~ "method to scan other directories for Artisan commands:"
#~ msgstr ""
#~ "所有主控台指令都在 `App\\Console\\Kernel` 類別內自動註冊。該類別為應用程式"
#~ "的「主控台核心」。在該類別的 `commands` 方法內，可以看到一個核心 `load` 方"
#~ "法的呼叫。`load` 方法會掃描 `app/Console/Commands` 目錄並自動向 Artisan 註"
#~ "冊其中的各個指令。你也可以在 `load` 方法中加上額外的呼叫來為 Artisan 指令"
#~ "掃描其他的目錄："

# File: docs/8.x/artisan.md, line: 493
# File: docs/master/artisan.md, line: 489
#, no-wrap
#~ msgid ""
#~ "    /**\n"
#~ "     * Register the commands for the application.\n"
#~ "     *\n"
#~ "     * @return void\n"
#~ "     */\n"
#~ "    protected function commands()\n"
#~ "    {\n"
#~ "        $this->load(__DIR__.'/Commands');\n"
#~ "        $this->load(__DIR__.'/../Domain/Orders/Commands');\n"
#~ msgstr ""
#~ "    /**\n"
#~ "     * Register the commands for the application.\n"
#~ "     *\n"
#~ "     * @return void\n"
#~ "     */\n"
#~ "    protected function commands()\n"
#~ "    {\n"
#~ "        $this->load(__DIR__.'/Commands');\n"
#~ "        $this->load(__DIR__.'/../Domain/Orders/Commands');\n"

# File: docs/8.x/artisan.md, line: 496
# File: docs/8.x/controllers.md, line: 328
# File: docs/8.x/database-testing.md, line: 176
# File: docs/8.x/database-testing.md, line: 578
# File: docs/8.x/fortify.md, line: 143
# File: docs/8.x/notifications.md, line: 143
# File: docs/8.x/routing.md, line: 463
# File: docs/8.x/routing.md, line: 497
# File: docs/8.x/verification.md, line: 40
# File: docs/master/artisan.md, line: 492
# File: docs/master/controllers.md, line: 315
# File: docs/master/database-testing.md, line: 176
# File: docs/master/database-testing.md, line: 569
# File: docs/master/fortify.md, line: 143
# File: docs/master/notifications.md, line: 142
# File: docs/master/routing.md, line: 462
# File: docs/master/routing.md, line: 496
# File: docs/master/verification.md, line: 40
#, no-wrap
#~ msgid ""
#~ "        // ...\n"
#~ "    }\n"
#~ msgstr ""
#~ "        // ...\n"
#~ "    }\n"

# File: docs/8.x/artisan.md, line: 498
# File: docs/master/artisan.md, line: 494
#~ msgid ""
#~ "If necessary, you may manually register commands by adding the command's "
#~ "class name to the `$commands` property of your `App\\Console\\Kernel` "
#~ "class. When Artisan boots, all the commands listed in this property will "
#~ "be resolved by the [service container](/docs/{{version}}/container) and "
#~ "registered with Artisan:"
#~ msgstr ""
#~ "若有需要的話，也可以通過將指令的類別名稱加至 `App\\Console\\Kernel` 類別"
#~ "的 `$commands` 屬性來手動註冊指令。當 Artisan 啟動時，列在該屬性上的所有指"
#~ "令都會由 [Service Container](/docs/{{version}}/container) 進行解析，並向 "
#~ "Artisan 註冊："

# File: docs/8.x/artisan.md, line: 502
# File: docs/master/artisan.md, line: 498
#, no-wrap
#~ msgid ""
#~ "    protected $commands = [\n"
#~ "        Commands\\SendEmails::class\n"
#~ "    ];\n"
#~ msgstr ""
#~ "    protected $commands = [\n"
#~ "        Commands\\SendEmails::class\n"
#~ "    ];\n"

# File: docs/8.x/artisan.md, line: 504
# File: docs/master/artisan.md, line: 500
#, no-wrap
#~ msgid "<a name=\"programmatically-executing-commands\"></a>\n"
#~ msgstr "<a name=\"programmatically-executing-commands\"></a>\n"

# File: docs/8.x/artisan.md, line: 504
# File: docs/master/artisan.md, line: 500
#, no-wrap
#~ msgid "Programmatically Executing Commands"
#~ msgstr "通過程式碼執行指令"

# File: docs/8.x/artisan.md, line: 507
# File: docs/master/artisan.md, line: 503
#~ msgid ""
#~ "Sometimes you may wish to execute an Artisan command outside of the CLI. "
#~ "For example, you may wish to execute an Artisan command from a route or "
#~ "controller. You may use the `call` method on the `Artisan` facade to "
#~ "accomplish this. The `call` method accepts either the command's signature "
#~ "name or class name as its first argument, and an array of command "
#~ "parameters as the second argument. The exit code will be returned:"
#~ msgstr ""
#~ "有時候可能需要在 CLI 以外的地方執行 Artisan 指令。舉例來說，你可能會想在路"
#~ "由或控制器內執行 Artisan 指令。可以使用 `Artisan` Facade 的 `call` 方法來"
#~ "完成這一目標。可以傳入指令的簽章名稱或類別名稱給 `call` 方法的第一個引數，"
#~ "而指令的參數則可以陣列傳為第二個引數。指令的結束代碼（Exit Code）會被回"
#~ "傳："

# File: docs/8.x/artisan.md, line: 509
# File: docs/8.x/artisan.md, line: 528
# File: docs/8.x/artisan.md, line: 550
# File: docs/master/artisan.md, line: 505
# File: docs/master/artisan.md, line: 524
# File: docs/master/artisan.md, line: 546
#, no-wrap
#~ msgid "    use Illuminate\\Support\\Facades\\Artisan;\n"
#~ msgstr "    use Illuminate\\Support\\Facades\\Artisan;\n"

# File: docs/8.x/artisan.md, line: 514
# File: docs/master/artisan.md, line: 510
#, no-wrap
#~ msgid ""
#~ "    Route::post('/user/{user}/mail', function ($user) {\n"
#~ "        $exitCode = Artisan::call('mail:send', [\n"
#~ "            'user' => $user, '--queue' => 'default'\n"
#~ "        ]);\n"
#~ msgstr ""
#~ "    Route::post('/user/{user}/mail', function ($user) {\n"
#~ "        $exitCode = Artisan::call('mail:send', [\n"
#~ "            'user' => $user, '--queue' => 'default'\n"
#~ "        ]);\n"

# File: docs/8.x/artisan.md, line: 517
# File: docs/8.x/artisan.md, line: 558
# File: docs/8.x/container.md, line: 450
# File: docs/8.x/localization.md, line: 54
# File: docs/8.x/pagination.md, line: 106
# File: docs/8.x/pagination.md, line: 121
# File: docs/master/artisan.md, line: 513
# File: docs/master/artisan.md, line: 554
# File: docs/master/container.md, line: 444
# File: docs/master/localization.md, line: 54
# File: docs/master/pagination.md, line: 106
# File: docs/master/pagination.md, line: 121
#, no-wrap
#~ msgid ""
#~ "        //\n"
#~ "    });\n"
#~ msgstr ""
#~ "        //\n"
#~ "    });\n"

# File: docs/8.x/artisan.md, line: 519
# File: docs/master/artisan.md, line: 515
#~ msgid ""
#~ "Alternatively, you may pass the entire Artisan command to the `call` "
#~ "method as a string:"
#~ msgstr "或者，也可以將整個 Artisan 指令作為字串傳給 `call` 方法："

# File: docs/8.x/artisan.md, line: 521
# File: docs/master/artisan.md, line: 517
#, no-wrap
#~ msgid "    Artisan::call('mail:send 1 --queue=default');\n"
#~ msgstr "    Artisan::call('mail:send 1 --queue=default');\n"

# File: docs/8.x/artisan.md, line: 523
# File: docs/master/artisan.md, line: 519
#, no-wrap
#~ msgid "<a name=\"passing-array-values\"></a>\n"
#~ msgstr "<a name=\"passing-array-values\"></a>\n"

# File: docs/8.x/artisan.md, line: 523
# File: docs/master/artisan.md, line: 519
#, no-wrap
#~ msgid "Passing Array Values"
#~ msgstr "傳入陣列值"

# File: docs/8.x/artisan.md, line: 526
# File: docs/master/artisan.md, line: 522
#~ msgid ""
#~ "If your command defines an option that accepts an array, you may pass an "
#~ "array of values to that option:"
#~ msgstr "若指令有定義接受陣列的選項，則可將陣列傳給該選項："

# File: docs/8.x/artisan.md, line: 534
# File: docs/master/artisan.md, line: 530
#, no-wrap
#~ msgid ""
#~ "    Route::post('/mail', function () {\n"
#~ "        $exitCode = Artisan::call('mail:send', [\n"
#~ "            '--id' => [5, 13]\n"
#~ "        ]);\n"
#~ "    });\n"
#~ msgstr ""
#~ "    Route::post('/mail', function () {\n"
#~ "        $exitCode = Artisan::call('mail:send', [\n"
#~ "            '--id' => [5, 13]\n"
#~ "        ]);\n"
#~ "    });\n"

# File: docs/8.x/artisan.md, line: 536
# File: docs/master/artisan.md, line: 532
#, no-wrap
#~ msgid "<a name=\"passing-boolean-values\"></a>\n"
#~ msgstr "<a name=\"passing-boolean-values\"></a>\n"

# File: docs/8.x/artisan.md, line: 536
# File: docs/master/artisan.md, line: 532
#, no-wrap
#~ msgid "Passing Boolean Values"
#~ msgstr "傳入布林值"

# File: docs/8.x/artisan.md, line: 539
# File: docs/master/artisan.md, line: 535
#~ msgid ""
#~ "If you need to specify the value of an option that does not accept string "
#~ "values, such as the `--force` flag on the `migrate:refresh` command, you "
#~ "should pass `true` or `false` as the value of the option:"
#~ msgstr ""
#~ "若有需要為不接受字串值的選項指定值，如 `migrate:refresh` 指令的 `--force` "
#~ "旗標，則可以為該選項傳入 `true` 或 `false`："

# File: docs/8.x/artisan.md, line: 543
# File: docs/master/artisan.md, line: 539
#, no-wrap
#~ msgid ""
#~ "    $exitCode = Artisan::call('migrate:refresh', [\n"
#~ "        '--force' => true,\n"
#~ "    ]);\n"
#~ msgstr ""
#~ "    $exitCode = Artisan::call('migrate:refresh', [\n"
#~ "        '--force' => true,\n"
#~ "    ]);\n"

# File: docs/8.x/artisan.md, line: 545
# File: docs/master/artisan.md, line: 541
#, no-wrap
#~ msgid "<a name=\"queueing-artisan-commands\"></a>\n"
#~ msgstr "<a name=\"queueing-artisan-commands\"></a>\n"

# File: docs/8.x/artisan.md, line: 545
# File: docs/master/artisan.md, line: 541
#, no-wrap
#~ msgid "Queueing Artisan Commands"
#~ msgstr "將 Artisan 指令放入佇列"

# File: docs/8.x/artisan.md, line: 548
# File: docs/master/artisan.md, line: 544
#~ msgid ""
#~ "Using the `queue` method on the `Artisan` facade, you may even queue "
#~ "Artisan commands so they are processed in the background by your [queue "
#~ "workers](/docs/{{version}}/queues). Before using this method, make sure "
#~ "you have configured your queue and are running a queue listener:"
#~ msgstr ""
#~ "只需要使用 `Artisan` Facade 的 `queue` 方法，就可以將 Artisan 指令放入佇列"
#~ "執行，這樣這個指令就會在 [佇列背景工作角色](/docs/{{version}}/queues) 內背"
#~ "景執行。在使用該方法前，請先確認是否已設定好佇列，且有執行佇列監聽程式："

# File: docs/8.x/artisan.md, line: 555
# File: docs/master/artisan.md, line: 551
#, no-wrap
#~ msgid ""
#~ "    Route::post('/user/{user}/mail', function ($user) {\n"
#~ "        Artisan::queue('mail:send', [\n"
#~ "            'user' => $user, '--queue' => 'default'\n"
#~ "        ]);\n"
#~ msgstr ""
#~ "    Route::post('/user/{user}/mail', function ($user) {\n"
#~ "        Artisan::queue('mail:send', [\n"
#~ "            'user' => $user, '--queue' => 'default'\n"
#~ "        ]);\n"

# File: docs/8.x/artisan.md, line: 560
# File: docs/master/artisan.md, line: 556
#~ msgid ""
#~ "Using the `onConnection` and `onQueue` methods, you may specify the "
#~ "connection or queue the Artisan command should be dispatched to:"
#~ msgstr ""
#~ "可以使用 `onConnection` 與 `onQueue` 方法來指定 Artisan 指令應分派到哪個連"
#~ "線或佇列上："

# File: docs/8.x/artisan.md, line: 564
# File: docs/master/artisan.md, line: 560
#, no-wrap
#~ msgid ""
#~ "    Artisan::queue('mail:send', [\n"
#~ "        'user' => 1, '--queue' => 'default'\n"
#~ "    ])->onConnection('redis')->onQueue('commands');\n"
#~ msgstr ""
#~ "    Artisan::queue('mail:send', [\n"
#~ "        'user' => 1, '--queue' => 'default'\n"
#~ "    ])->onConnection('redis')->onQueue('commands');\n"

# File: docs/8.x/artisan.md, line: 566
# File: docs/master/artisan.md, line: 562
#, no-wrap
#~ msgid "<a name=\"calling-commands-from-other-commands\"></a>\n"
#~ msgstr "<a name=\"calling-commands-from-other-commands\"></a>\n"

# File: docs/8.x/artisan.md, line: 566
# File: docs/master/artisan.md, line: 562
#, no-wrap
#~ msgid "Calling Commands From Other Commands"
#~ msgstr "在其他指令內執行指令"

# File: docs/8.x/artisan.md, line: 569
# File: docs/master/artisan.md, line: 565
#~ msgid ""
#~ "Sometimes you may wish to call other commands from an existing Artisan "
#~ "command. You may do so using the `call` method. This `call` method "
#~ "accepts the command name and an array of command arguments / options:"
#~ msgstr ""
#~ "有時候可能需要在現有 Artisan 指令內執行另一個指令。可以通過呼叫 `call` 方"
#~ "法來完成。`call` 方法接受指令名稱與指令的引數與選項："

# File: docs/8.x/artisan.md, line: 580
# File: docs/master/artisan.md, line: 576
#, no-wrap
#~ msgid ""
#~ "    /**\n"
#~ "     * Execute the console command.\n"
#~ "     *\n"
#~ "     * @return mixed\n"
#~ "     */\n"
#~ "    public function handle()\n"
#~ "    {\n"
#~ "        $this->call('mail:send', [\n"
#~ "            'user' => 1, '--queue' => 'default'\n"
#~ "        ]);\n"
#~ msgstr ""
#~ "    /**\n"
#~ "     * Execute the console command.\n"
#~ "     *\n"
#~ "     * @return mixed\n"
#~ "     */\n"
#~ "    public function handle()\n"
#~ "    {\n"
#~ "        $this->call('mail:send', [\n"
#~ "            'user' => 1, '--queue' => 'default'\n"
#~ "        ]);\n"

# File: docs/8.x/artisan.md, line: 585
# File: docs/master/artisan.md, line: 581
#~ msgid ""
#~ "If you would like to call another console command and suppress all of its "
#~ "output, you may use the `callSilently` method. The `callSilently` method "
#~ "has the same signature as the `call` method:"
#~ msgstr ""
#~ "若有需要呼叫另一個主控台指令並忽略其所有輸出，則可使用 `callSilently` 方"
#~ "法。`callSilently` 方法的簽章與 `call` 方法相同："

# File: docs/8.x/artisan.md, line: 589
# File: docs/master/artisan.md, line: 585
#, no-wrap
#~ msgid ""
#~ "    $this->callSilently('mail:send', [\n"
#~ "        'user' => 1, '--queue' => 'default'\n"
#~ "    ]);\n"
#~ msgstr ""
#~ "    $this->callSilently('mail:send', [\n"
#~ "        'user' => 1, '--queue' => 'default'\n"
#~ "    ]);\n"

# File: docs/8.x/artisan.md, line: 591
# File: docs/master/artisan.md, line: 587
#, no-wrap
#~ msgid "<a name=\"stub-customization\"></a>\n"
#~ msgstr "<a name=\"stub-customization\"></a>\n"

# File: docs/8.x/artisan.md, line: 591
# File: docs/master/artisan.md, line: 587
#, no-wrap
#~ msgid "Stub Customization"
#~ msgstr "自定 Stub"

# File: docs/8.x/artisan.md, line: 594
#~ msgid ""
#~ "The Artisan console's `make` commands are used to create a variety of "
#~ "classes, such as controllers, jobs, migrations, and tests. These classes "
#~ "are generated using \"stub\" files that are populated with values based "
#~ "on your input. However, you may want to make small changes to files "
#~ "generated by Artisan. To accomplish this, you may use the `stub:publish` "
#~ "command to publish the most common stubs to your application so that you "
#~ "can customize them:"
#~ msgstr ""
#~ "Artisan 主控台的 `make` 指令可以用來建立各種類別，如控制器、任務、資料庫遷"
#~ "移，以及測試。這些類別都是使用「Stub（虛設常式）」來產生的，會依據給定的輸"
#~ "入來填入不同的值。但是，你可能會想為這些 Artisan 產生的檔案做一些微調。要"
#~ "修改這些 Stub，可以通過 `stub:publish` 指令來將這些最常見的 Stub 發不到應"
#~ "用程式中，如此一來就能自定這些 Stub："

# File: docs/8.x/artisan.md, line: 596
# File: docs/master/artisan.md, line: 592
#, no-wrap
#~ msgid "    php artisan stub:publish\n"
#~ msgstr "    php artisan stub:publish\n"

# File: docs/8.x/artisan.md, line: 598
# File: docs/master/artisan.md, line: 594
#~ msgid ""
#~ "The published stubs will be located within a `stubs` directory in the "
#~ "root of your application. Any changes you make to these stubs will be "
#~ "reflected when you generate their corresponding classes using Artisan's "
#~ "`make` commands."
#~ msgstr ""
#~ "這些發佈的 Stub 會被放在應用程式根目錄的 `stubs` 目錄中。對這些 Stub 做出"
#~ "的任何改動都會反應到使用 Artisan 的 `make` 指令所產生的對應類別上。"

# File: docs/8.x/artisan.md, line: 600
# File: docs/8.x/authentication.md, line: 677
# File: docs/8.x/cache.md, line: 461
# File: docs/8.x/eloquent.md, line: 1124
# File: docs/8.x/mail.md, line: 770
# File: docs/8.x/passport.md, line: 1142
# File: docs/8.x/upgrade.md, line: 159
# File: docs/8.x/verification.md, line: 153
# File: docs/master/artisan.md, line: 596
# File: docs/master/authentication.md, line: 677
# File: docs/master/cache.md, line: 454
# File: docs/master/eloquent.md, line: 1078
# File: docs/master/mail.md, line: 770
# File: docs/master/passport.md, line: 1140
# File: docs/master/upgrade.md, line: 159
# File: docs/master/verification.md, line: 153
#, no-wrap
#~ msgid "<a name=\"events\"></a>\n"
#~ msgstr "<a name=\"events\"></a>\n"

# File: docs/8.x/artisan.md, line: 600
# File: docs/8.x/authentication.md, line: 677
# File: docs/8.x/cache.md, line: 461
# File: docs/8.x/eloquent.md, line: 1124
# File: docs/8.x/events.md, line: 1
# File: docs/8.x/mail.md, line: 770
# File: docs/8.x/passport.md, line: 1142
# File: docs/8.x/upgrade.md, line: 159
# File: docs/8.x/verification.md, line: 153
# File: docs/master/artisan.md, line: 596
# File: docs/master/authentication.md, line: 677
# File: docs/master/cache.md, line: 454
# File: docs/master/eloquent.md, line: 1078
# File: docs/master/events.md, line: 1
# File: docs/master/mail.md, line: 770
# File: docs/master/passport.md, line: 1140
# File: docs/master/upgrade.md, line: 159
# File: docs/master/verification.md, line: 153
#, no-wrap
#~ msgid "Events"
#~ msgstr "事件"

# File: docs/8.x/artisan.md, line: 602
# File: docs/master/artisan.md, line: 598
#~ msgid ""
#~ "Artisan dispatches three events when running commands: `Illuminate"
#~ "\\Console\\Events\\ArtisanStarting`, `Illuminate\\Console\\Events"
#~ "\\CommandStarting`, and `Illuminate\\Console\\Events\\CommandFinished`. "
#~ "The `ArtisanStarting` event is dispatched immediately when Artisan starts "
#~ "running. Next, the `CommandStarting` event is dispatched immediately "
#~ "before a command runs. Finally, the `CommandFinished` event is dispatched "
#~ "once a command finishes executing."
#~ msgstr ""
#~ "Artisan 會在執行指令的時候分派三個事件： `Illuminate\\Console\\Events"
#~ "\\ArtisanStarting`, `Illuminate\\Console\\Events\\CommandStarting` 與 "
#~ "`Illuminate\\Console\\Events\\CommandFinished`。`ArtisanStarting` 事件會"
#~ "在 Artisan 開始執行後馬上被分派。接著，`CommandStarting` 事件會在指令開始"
#~ "執行前的瞬間被分派。最後，`CommandFinished` 事件會在指令完成執行後被分派。"

# File: docs/8.x/authentication.md, line: 1
# File: docs/8.x/dusk.md, line: 355
# File: docs/8.x/fortify.md, line: 124
# File: docs/8.x/http-client.md, line: 130
# File: docs/8.x/socialite.md, line: 46
# File: docs/master/authentication.md, line: 1
# File: docs/master/dusk.md, line: 355
# File: docs/master/fortify.md, line: 124
# File: docs/master/http-client.md, line: 122
# File: docs/master/socialite.md, line: 46
#, no-wrap
#~ msgid "Authentication"
#~ msgstr "驗證"

# File: docs/8.x/authentication.md, line: 30
# File: docs/master/authentication.md, line: 30
#~ msgid "[Starter Kits](#starter-kits)"
#~ msgstr "[入門套件](#starter-kits)"

# File: docs/8.x/authentication.md, line: 30
# File: docs/master/authentication.md, line: 30
#~ msgid "[Database Considerations](#introduction-database-considerations)"
#~ msgstr "[資料庫選擇](#introduction-database-considerations)"

# File: docs/8.x/authentication.md, line: 30
# File: docs/master/authentication.md, line: 30
#~ msgid "[Ecosystem Overview](#ecosystem-overview)"
#~ msgstr "[生態鏈概覽](#ecosystem-overview)"

# File: docs/8.x/authentication.md, line: 30
# File: docs/master/authentication.md, line: 30
#~ msgid "[Authentication Quickstart](#authentication-quickstart)"
#~ msgstr "[「驗證」快速入門](#authentication-quickstart)"

# File: docs/8.x/authentication.md, line: 30
# File: docs/master/authentication.md, line: 30
#~ msgid "[Install A Starter Kit](#install-a-starter-kit)"
#~ msgstr "[安裝入門套件](#install-a-starter-kit)"

# File: docs/8.x/authentication.md, line: 30
# File: docs/master/authentication.md, line: 30
#~ msgid ""
#~ "[Retrieving The Authenticated User](#retrieving-the-authenticated-user)"
#~ msgstr "[取得已驗證的使用者](#retrieving-the-authenticated-user)"

# File: docs/8.x/authentication.md, line: 30
# File: docs/8.x/fortify.md, line: 25
# File: docs/8.x/passport.md, line: 45
# File: docs/8.x/sanctum.md, line: 23
# File: docs/8.x/verification.md, line: 13
# File: docs/master/authentication.md, line: 30
# File: docs/master/fortify.md, line: 25
# File: docs/master/passport.md, line: 45
# File: docs/master/sanctum.md, line: 23
# File: docs/master/verification.md, line: 13
#~ msgid "[Protecting Routes](#protecting-routes)"
#~ msgstr "[保護路由](#protecting-routes)"

# File: docs/8.x/authentication.md, line: 30
# File: docs/master/authentication.md, line: 30
#~ msgid "[Login Throttling](#login-throttling)"
#~ msgstr "[登入頻率限制](#login-throttling)"

# File: docs/8.x/authentication.md, line: 30
# File: docs/master/authentication.md, line: 30
#~ msgid "[Manually Authenticating Users](#authenticating-users)"
#~ msgstr "[手動驗證使用者](#authenticating-users)"

# File: docs/8.x/authentication.md, line: 30
# File: docs/master/authentication.md, line: 30
#~ msgid "[Remembering Users](#remembering-users)"
#~ msgstr "[記住使用者](#remembering-users)"

# File: docs/8.x/authentication.md, line: 30
# File: docs/master/authentication.md, line: 30
#~ msgid "[Other Authentication Methods](#other-authentication-methods)"
#~ msgstr "[其他驗證方法](#other-authentication-methods)"

# File: docs/8.x/authentication.md, line: 30
# File: docs/master/authentication.md, line: 30
#~ msgid "[HTTP Basic Authentication](#http-basic-authentication)"
#~ msgstr "[HTTP Basic 驗證](#http-basic-authentication)"

# File: docs/8.x/authentication.md, line: 30
# File: docs/master/authentication.md, line: 30
#~ msgid ""
#~ "[Stateless HTTP Basic Authentication](#stateless-http-basic-"
#~ "authentication)"
#~ msgstr "[Stateless HTTP Basic 驗證](#stateless-http-basic-authentication)"

# File: docs/8.x/authentication.md, line: 30
# File: docs/master/authentication.md, line: 30
#~ msgid "[Logging Out](#logging-out)"
#~ msgstr "[登出](#logging-out)"

# File: docs/8.x/authentication.md, line: 30
# File: docs/master/authentication.md, line: 30
#~ msgid ""
#~ "[Invalidating Sessions On Other Devices](#invalidating-sessions-on-other-"
#~ "devices)"
#~ msgstr "[登出其他裝置上的啟程](#invalidating-sessions-on-other-devices)"

# File: docs/8.x/authentication.md, line: 30
# File: docs/8.x/fortify.md, line: 25
# File: docs/master/authentication.md, line: 30
# File: docs/master/fortify.md, line: 25
#~ msgid "[Password Confirmation](#password-confirmation)"
#~ msgstr "[確認密碼](#password-confirmation)"

# File: docs/8.x/authentication.md, line: 30
# File: docs/master/authentication.md, line: 30
#~ msgid "[Configuration](#password-confirmation-configuration)"
#~ msgstr "[組態設定](#password-confirmation-configuration)"

# File: docs/8.x/authentication.md, line: 30
# File: docs/master/authentication.md, line: 30
#~ msgid "[Routing](#password-confirmation-routing)"
#~ msgstr "[路由](#password-confirmation-routing)"

# File: docs/8.x/authentication.md, line: 30
# File: docs/master/authentication.md, line: 30
#~ msgid "[Protecting Routes](#password-confirmation-protecting-routes)"
#~ msgstr "[保護路由](#password-confirmation-protecting-routes)"

# File: docs/8.x/authentication.md, line: 30
# File: docs/master/authentication.md, line: 30
#~ msgid "[Adding Custom Guards](#adding-custom-guards)"
#~ msgstr "[新增自定 Guard](#adding-custom-guards)"

# File: docs/8.x/authentication.md, line: 30
# File: docs/master/authentication.md, line: 30
#~ msgid "[Closure Request Guards](#closure-request-guards)"
#~ msgstr "[閉包請求 Guard](#closure-request-guards)"

# File: docs/8.x/authentication.md, line: 30
# File: docs/master/authentication.md, line: 30
#~ msgid "[Adding Custom User Providers](#adding-custom-user-providers)"
#~ msgstr "[新增自定的 User Provider](#adding-custom-user-providers)"

# File: docs/8.x/authentication.md, line: 30
# File: docs/master/authentication.md, line: 30
#~ msgid "[The User Provider Contract](#the-user-provider-contract)"
#~ msgstr "[User Provider Contract](#the-user-provider-contract)"

# File: docs/8.x/authentication.md, line: 30
# File: docs/master/authentication.md, line: 30
#~ msgid "[The Authenticatable Contract](#the-authenticatable-contract)"
#~ msgstr "[Authenticatable Contract](#the-authenticatable-contract)"

# File: docs/8.x/authentication.md, line: 30
# File: docs/master/authentication.md, line: 30
#~ msgid "[Social Authentication](/docs/{{version}}/socialite)"
#~ msgstr "[社群驗證](/docs/{{version}}/socialite)"

# File: docs/8.x/authentication.md, line: 35
# File: docs/master/authentication.md, line: 35
#~ msgid ""
#~ "Many web applications provide a way for their users to authenticate with "
#~ "the application and \"login\". Implementing this feature in web "
#~ "applications can be a complex and potentially risky endeavor. For this "
#~ "reason, Laravel strives to give you the tools you need to implement "
#~ "authentication quickly, securely, and easily."
#~ msgstr ""
#~ "許多網頁應用程式都提供了讓使用者向應用程式驗證以及「登入」的功能。在網頁應"
#~ "用程式上實作這些功能可能會很複雜，而且可能會有些風險。為此，Laravel 竭力為"
#~ "你提供了用於快速、安全、且簡單地實作驗證功能的工具。"

# File: docs/8.x/authentication.md, line: 37
# File: docs/master/authentication.md, line: 37
#~ msgid ""
#~ "At its core, Laravel's authentication facilities are made up of \"guards"
#~ "\" and \"providers\". Guards define how users are authenticated for each "
#~ "request. For example, Laravel ships with a `session` guard which "
#~ "maintains state using session storage and cookies."
#~ msgstr ""
#~ "在 Laravel 的核心中，驗證功能是通過「Guard」與「Provider」來提供的。Guard "
#~ "用來定義使用者在每個請求上是如何被驗證的。舉例來說，Laravel 附帶了一個 "
#~ "`session` Guard，會通過 Session 儲存空間與 Cookie 來維護驗證狀態。"

# File: docs/8.x/authentication.md, line: 39
# File: docs/master/authentication.md, line: 39
#~ msgid ""
#~ "Providers define how users are retrieved from your persistent storage. "
#~ "Laravel ships with support for retrieving users using [Eloquent](/docs/"
#~ "{{version}}/eloquent) and the database query builder. However, you are "
#~ "free to define additional providers as needed for your application."
#~ msgstr ""
#~ "Provider 則定義了要如何從長期儲存空間內取得使用者。Laravel 附帶了以 "
#~ "[Eloquent](/docs/{{version}}/eloquent) 以及通過資料庫查詢構造器取得使用者"
#~ "的支援。但是，你也可以自行依據需求額外定期其他 Provider。"

# File: docs/8.x/authentication.md, line: 41
# File: docs/master/authentication.md, line: 41
#~ msgid ""
#~ "Your application's authentication configuration file is located at "
#~ "`config/auth.php`. This file contains several well documented options for "
#~ "tweaking the behavior of Laravel's authentication services."
#~ msgstr ""
#~ "你的應用程式的驗證組態設定檔位於 `config/auth.php` 內。該檔案包含了多個有"
#~ "文件說明的選項，可以調整 Laravel 驗證服務的行為。"

# File: docs/8.x/authentication.md, line: 43
# File: docs/master/authentication.md, line: 43
#, no-wrap
#~ msgid "> {tip} Guards and providers should not be confused with \"roles\" and \"permissions\". To learn more about authorizing user actions via permissions, please refer to the [authorization](/docs/{{version}}/authorization) documentation.\n"
#~ msgstr "> {tip} Guard 與 Provider 與「角色」以及「權限」不同，不應溷肴。要瞭解如何依照權限來授權使用者的方法，請參考 [授權](/docs/{{version}}/authorization) 說明文件。\n"

# File: docs/8.x/authentication.md, line: 45
# File: docs/master/authentication.md, line: 45
#, no-wrap
#~ msgid "<a name=\"starter-kits\"></a>\n"
#~ msgstr "<a name=\"starter-kits\"></a>\n"

# File: docs/8.x/authentication.md, line: 45
# File: docs/8.x/starter-kits.md, line: 1
# File: docs/master/authentication.md, line: 45
# File: docs/master/starter-kits.md, line: 1
#, no-wrap
#~ msgid "Starter Kits"
#~ msgstr "入門套件"

# File: docs/8.x/authentication.md, line: 48
# File: docs/master/authentication.md, line: 48
#~ msgid ""
#~ "Want to get started fast? Install a [Laravel application starter kit](/"
#~ "docs/{{version}}/starter-kits) in a fresh Laravel application. After "
#~ "migrating your database, navigate your browser to `/register` or any "
#~ "other URL that is assigned to your application. The starter kits will "
#~ "take care of scaffolding your entire authentication system!"
#~ msgstr ""
#~ "想要快速入門嗎？請在全新的 Laravel 應用程式內安裝 [Laravel 應用程式入門套"
#~ "件](docs/{{version}}/starter-kits)。完成資料庫遷移後，在瀏覽器上開啟 `/"
#~ "register` 或其他任何指派到應用程式的 URL。這些入門套件會幫你搞定整個驗證系"
#~ "統的 Scaffolding。"

# File: docs/8.x/authentication.md, line: 50
# File: docs/master/authentication.md, line: 50
#, no-wrap
#~ msgid "**Even if you choose to not use a starter kit in your final Laravel application, installing the [Laravel Breeze](/docs/{{version}}/starter-kits#laravel-breeze) starter kit can be a wonderful opportunity to learn how to implement all of Laravel's authentication functionality in an actual Laravel project.** Since Laravel Breeze creates authentication controllers, routes, and views for you, you can examine the code within these files to learn how Laravel's authentication features may be implemented.\n"
#~ msgstr "**就算最後不會在 Laravel 應用程式上使用其中一種入門套件，也可以安裝 [Laravel Breeze](/docs/{{version}}/starter-kits#laravel-breeze) 入門套件也可以個學習如何在實際 Laravel 專案上實作所有 Laravel 驗證功能的好機會。** 由於 Laravel Breeze 會為你建立好驗證控制器、路由、以及檢視器，因此可以通過閱讀這些檔案的程式碼來學習 Laravel 的驗證功能可以怎麼進行實作。\n"

# File: docs/8.x/authentication.md, line: 52
# File: docs/master/authentication.md, line: 52
#, no-wrap
#~ msgid "<a name=\"introduction-database-considerations\"></a>\n"
#~ msgstr "<a name=\"introduction-database-considerations\"></a>\n"

# File: docs/8.x/authentication.md, line: 52
# File: docs/master/authentication.md, line: 52
#, no-wrap
#~ msgid "Database Considerations"
#~ msgstr "資料庫選擇"

# File: docs/8.x/authentication.md, line: 55
# File: docs/master/authentication.md, line: 55
#~ msgid ""
#~ "By default, Laravel includes an `App\\Models\\User` [Eloquent model](/"
#~ "docs/{{version}}/eloquent) in your `app/Models` directory. This model may "
#~ "be used with the default Eloquent authentication driver. If your "
#~ "application is not using Eloquent, you may use the `database` "
#~ "authentication provider which uses the Laravel query builder."
#~ msgstr ""
#~ "預設情況下，Laravel 在 `app/Models` 資料夾中包含了一個 `App\\Models"
#~ "\\User` [Eloquent 模型](/docs/{{version}}/eloquent)。這個模型可以用在預設"
#~ "的 Eloquent 驗證驅動器上。若你的應用程式不使用 Eloquent，則可以使用 "
#~ "`database` 驗證 Provider，該 Provider 使用 Laravel 的查詢構造器。"

# File: docs/8.x/authentication.md, line: 57
# File: docs/master/authentication.md, line: 57
#~ msgid ""
#~ "When building the database schema for the `App\\Models\\User` model, make "
#~ "sure the password column is at least 60 characters in length. Of course, "
#~ "the `users` table migration that is included in new Laravel applications "
#~ "already creates a column that exceeds this length."
#~ msgstr ""
#~ "為 `App\\Models\\User` 模型建立資料庫結構時，請確保密碼欄位的長度至少有 "
#~ "60 個字元。當然，在新 Laravel 應用程式內所包含的 `users` 資料表遷移檔已經"
#~ "建立了超過這個長度的欄位。"

# File: docs/8.x/authentication.md, line: 59
# File: docs/master/authentication.md, line: 59
#~ msgid ""
#~ "Also, you should verify that your `users` (or equivalent) table contains "
#~ "a nullable, string `remember_token` column of 100 characters. This column "
#~ "will be used to store a token for users that select the \"remember me\" "
#~ "option when logging into your application. Again, the default `users` "
#~ "table migration that is included in new Laravel applications already "
#~ "contains this column."
#~ msgstr ""
#~ "另外，也請求確保 `users`（或其相應的）資料表有包含一個 Nullable、100 字元"
#~ "的 `remember_token` 字串欄位。該欄位會用來在使用者登入時勾選「記住我」選項"
#~ "時使用。同樣地，在新 Laravel 應用程式中包含的 `users` 資料表遷移檔已經有包"
#~ "含了這個欄位。"

# File: docs/8.x/authentication.md, line: 61
# File: docs/master/authentication.md, line: 61
#, no-wrap
#~ msgid "<a name=\"ecosystem-overview\"></a>\n"
#~ msgstr "<a name=\"ecosystem-overview\"></a>\n"

# File: docs/8.x/authentication.md, line: 61
# File: docs/master/authentication.md, line: 61
#, no-wrap
#~ msgid "Ecosystem Overview"
#~ msgstr "生態鏈概覽"

# File: docs/8.x/authentication.md, line: 64
# File: docs/master/authentication.md, line: 64
#~ msgid ""
#~ "Laravel offers several packages related to authentication. Before "
#~ "continuing, we'll review the general authentication ecosystem in Laravel "
#~ "and discuss each package's intended purpose."
#~ msgstr ""
#~ "Laravel 提供了多個有關驗證的套件。在繼續之前，我們先來看看這些 Laravel 中"
#~ "的一般驗證生態鏈，並討論各個套件預設的目的。"

# File: docs/8.x/authentication.md, line: 66
# File: docs/master/authentication.md, line: 66
#~ msgid ""
#~ "First, consider how authentication works. When using a web browser, a "
#~ "user will provide their username and password via a login form. If these "
#~ "credentials are correct, the application will store information about the "
#~ "authenticated user in the user's [session](/docs/{{version}}/session). A "
#~ "cookie issued to the browser contains the session ID so that subsequent "
#~ "requests to the application can associate the user with the correct "
#~ "session. After the session cookie is received, the application will "
#~ "retrieve the session data based on the session ID, note that the "
#~ "authentication information has been stored in the session, and will "
#~ "consider the user as \"authenticated\"."
#~ msgstr ""
#~ "首先，我們先來看看驗證是怎麼運作的。在使用網頁瀏覽器時，使用者會通過登入表"
#~ "格來提供他們的使用者名稱以及密碼。若這些憑證正確，則應用程式會將已驗證使用"
#~ "者的資訊儲存在使用者的 [Session](/docs/{{version}}/session) 中。Cookie 會"
#~ "被傳給瀏覽器，其中包含了 Session ID，這樣一來接下來向應用程式發起的請求就"
#~ "能通過正確的 Session 來連結上使用者。收到 Session Cookie 厚，應用程式會依"
#~ "據 Session ID 來取得 Session 資料。請注意，由於驗證這些已經被保存在 "
#~ "Session 中了，所以該使用者將被視為「已驗證」。"

# File: docs/8.x/authentication.md, line: 68
# File: docs/master/authentication.md, line: 68
#~ msgid ""
#~ "When a remote service needs to authenticate to access an API, cookies are "
#~ "not typically used for authentication because there is no web browser. "
#~ "Instead, the remote service sends an API token to the API on each "
#~ "request. The application may validate the incoming token against a table "
#~ "of valid API tokens and \"authenticate\" the request as being performed "
#~ "by the user associated with that API token."
#~ msgstr ""
#~ "當遠端服務需要驗證來存取 API 時，通常不會在驗證上使用 Cookie，因為這種情況"
#~ "下並沒有網頁瀏覽器。取而代之地，遠端服務會在每個請求時帶上 API 權杖。應用"
#~ "程式可以通過將傳入的權杖與包含了有效 API 憑證的資料表進行比對來「驗證」該"
#~ "請求，並將其視為是有與 API 權杖管理的使用者所進行的操作。"

# File: docs/8.x/authentication.md, line: 70
# File: docs/master/authentication.md, line: 70
#, no-wrap
#~ msgid "<a name=\"laravels-built-in-browser-authentication-services\"></a>\n"
#~ msgstr "<a name=\"laravels-built-in-browser-authentication-services\"></a>\n"

# File: docs/8.x/authentication.md, line: 70
# File: docs/master/authentication.md, line: 70
#, no-wrap
#~ msgid "Laravel's Built-in Browser Authentication Services"
#~ msgstr "Laravel 的內建瀏覽器驗證服務"

# File: docs/8.x/authentication.md, line: 73
# File: docs/master/authentication.md, line: 73
#~ msgid ""
#~ "Laravel includes built-in authentication and session services which are "
#~ "typically accessed via the `Auth` and `Session` facades. These features "
#~ "provide cookie based authentication for requests that are initiated from "
#~ "web browsers. They provide methods that allow you to verify a user's "
#~ "credentials and authenticate the user. In addition, these services will "
#~ "automatically store the proper authentication data in the user's session "
#~ "and issue the user's session cookie. A discussion of how to use these "
#~ "services is contained within this documentation."
#~ msgstr ""
#~ "Laravel 的內建驗證與 Session 服務通常會通過 `Auth` 與 `Session` Facade 來"
#~ "存取。這些功能為從瀏覽器發起的請求提供了基於 Cookie 的驗證功能。這些功能也"
#~ "提供了能驗證使用者憑證與驗證使用者的方法。此外，這些服務也會自動將正確的資"
#~ "料儲存在使用者的 Session 內，並為使用者核發 Session Cookie。本文件中包含了"
#~ "如何使用這些服務的討論。"

# File: docs/8.x/authentication.md, line: 75
# File: docs/master/authentication.md, line: 75
#, no-wrap
#~ msgid "**Application Starter Kits**\n"
#~ msgstr "**應用程式入門套件**\n"

# File: docs/8.x/authentication.md, line: 77
# File: docs/master/authentication.md, line: 77
#~ msgid ""
#~ "As discussed in this documentation, you can interact with these "
#~ "authentication services manually to build your application's own "
#~ "authentication layer. However, to help you get started more quickly, we "
#~ "have released [free packages](/docs/{{version}}/starter-kits) that "
#~ "provide robust, modern scaffolding of the entire authentication layer. "
#~ "These packages are [Laravel Breeze](/docs/{{version}}/starter-"
#~ "kits#laravel-breeze), [Laravel Jetstream](/docs/{{version}}/starter-"
#~ "kits#laravel-jetstream), and [Laravel Fortify](/docs/{{version}}/fortify)."
#~ msgstr ""
#~ "就像先前在本文件中討論的一樣，你可以通過手動操作這些驗證服務來為應用程式建"
#~ "立你自己的驗證層。但，為了讓你可以更快入門，我們也釋出了 [一些免費套件](/"
#~ "docs/{{version}}/starter-kits) 來提供更快速且現代化的完整驗證層 "
#~ "Scaffolding。這些套件就是 [Laravel Breeze](/docs/{{version}}/starter-"
#~ "kits#laravel-breeze), [Laravel Jetstream](/docs/{{version}}/starter-"
#~ "kits#laravel-jetstream)，與 [Laravel Fortify](/docs/{{version}}/fortify)。"

# File: docs/8.x/authentication.md, line: 79
# File: docs/master/authentication.md, line: 79
#~ msgid ""
#~ "_Laravel Breeze_ is a simple, minimal implementation of all of Laravel's "
#~ "authentication features, including login, registration, password reset, "
#~ "email verification, and password confirmation. Laravel Breeze's view "
#~ "layer is comprised of simple [Blade templates](/docs/{{version}}/blade) "
#~ "styled with [Tailwind CSS](https://tailwindcss.com). To get started, "
#~ "check out the documentation on Laravel's [application starter kits](/docs/"
#~ "{{version}}/starter-kits)."
#~ msgstr ""
#~ "**Laravel Breeze** 是一個簡單且最小化實作出所有 Laravel 驗證功能的套件，包"
#~ "含登入、註冊、密碼重設、電子郵件驗證、以及密碼確認。Laravel Breeze 的檢視"
#~ "器層是通過簡單的 [Blade 樣板](/docs/{{version}}/blade) 搭配 [Tailwind CSS]"
#~ "(https://tailwindcss.com) 提供樣式組合而成的。若要瞭解有關 Laravel "
#~ "Breeze，請參考 Laravel 的 [應用程式入門套件](/docs/{{version}}/starter-"
#~ "kits) 說明文件。"

# File: docs/8.x/authentication.md, line: 81
# File: docs/master/authentication.md, line: 81
#~ msgid ""
#~ "_Laravel Fortify_ is a headless authentication backend for Laravel that "
#~ "implements many of the features found in this documentation, including "
#~ "cookie-based authentication as well as other features such as two-factor "
#~ "authentication and email verification. Fortify provides the "
#~ "authentication backend for Laravel Jetstream or may be used independently "
#~ "in combination with [Laravel Sanctum](/docs/{{version}}/sanctum) to "
#~ "provide authentication for an SPA that needs to authenticate with Laravel."
#~ msgstr ""
#~ "**Laravel Fortify** 是一種用於 Laravel 的無周邊（Headless）驗證後端。"
#~ "Laravel Fortify 實作了許多可在此說明文件中找到的功能，包含基於 Cookie 的驗"
#~ "證以及其他如二步驟驗證與電子郵件驗證等功能。Fortify 也為 Laravel "
#~ "Jetstream 提供了驗證後端。或者，也可以通過與 [Laravel Sanctum](/docs/"
#~ "{{version}}/sanctum) 組合使用來為需要在 Laravel 中進行驗證的 SPA（Single "
#~ "Page Application，單一頁面應用程式）提供驗證功能。"

# File: docs/8.x/authentication.md, line: 83
# File: docs/master/authentication.md, line: 83
#~ msgid ""
#~ "_[Laravel Jetstream](https://jetstream.laravel.com)_ is a robust "
#~ "application starter kit that consumes and exposes Laravel Fortify's "
#~ "authentication services with a beautiful, modern UI powered by [Tailwind "
#~ "CSS](https://tailwindcss.com), [Livewire](https://laravel-livewire.com), "
#~ "and / or [Inertia.js](https://inertiajs.com). Laravel Jetstream includes "
#~ "optional support for two-factor authentication, team support, browser "
#~ "session management, profile management, and built-in integration with "
#~ "[Laravel Sanctum](/docs/{{version}}/sanctum) to offer API token "
#~ "authentication. Laravel's API authentication offerings are discussed "
#~ "below."
#~ msgstr ""
#~ "**[Laravel Jetstream](https://jetstream.laravel.com)** 是一個強大的入門套"
#~ "件，該套件使用者 Laravel Fortify 的驗證服務，並將其通過 [Tailwind CSS]"
#~ "(https://tailwindcss.com), [Livewire](https://laravel-livewire.com)，與／"
#~ "或 [Inertia.js](https://inertiajs.com) 來提供美麗且現代的 UI。Laravel "
#~ "Jetstream 也提供了對二步驟驗證、團隊支援、瀏覽器啟程管理、個人檔案管理、以"
#~ "及內建與 [Laravel Sanctum](/docs/{{version}}/sunctum) 整合來提供 API 權杖"
#~ "驗證的可選支援。Laravel 提供的 API 驗證功能將在下方討論。"

# File: docs/8.x/authentication.md, line: 85
# File: docs/master/authentication.md, line: 85
#, no-wrap
#~ msgid "<a name=\"laravels-api-authentication-services\"></a>\n"
#~ msgstr "<a name=\"laravels-api-authentication-services\"></a>\n"

# File: docs/8.x/authentication.md, line: 85
# File: docs/master/authentication.md, line: 85
#, no-wrap
#~ msgid "Laravel's API Authentication Services"
#~ msgstr "Laravel 的 API 驗證服務"

# File: docs/8.x/authentication.md, line: 88
# File: docs/master/authentication.md, line: 88
#~ msgid ""
#~ "Laravel provides two optional packages to assist you in managing API "
#~ "tokens and authenticating requests made with API tokens: [Passport](/docs/"
#~ "{{version}}/passport) and [Sanctum](/docs/{{version}}/sanctum). Please "
#~ "note that these libraries and Laravel's built-in cookie based "
#~ "authentication libraries are not mutually exclusive. These libraries "
#~ "primarily focus on API token authentication while the built-in "
#~ "authentication services focus on cookie based browser authentication. "
#~ "Many applications will use both Laravel's built-in cookie based "
#~ "authentication services and one of Laravel's API authentication packages."
#~ msgstr ""
#~ "Laravel 提供了兩個可選的套件來協助你管理 API 權杖以及驗證以 API 權杖建立的"
#~ "請求：[Passport](/docs/{{version}}/passport) 與 [Sanctum](/docs/"
#~ "{{version}}/sanctum)。請注意，這些函式庫與 Laravel 內建的基於 Cookie 的驗"
#~ "證函式庫並不互相衝突。這些函式庫的重點都是在提供 API 權杖驗證，而內建的驗"
#~ "證服務則重點在基於 Cookie 的瀏覽器驗證。許多應用程式都會同時使用 Laravel "
#~ "內建的基於 Cookie 的驗證服務以及其中一種 Laravel 的 API 驗證套件。"

# File: docs/8.x/authentication.md, line: 90
# File: docs/master/authentication.md, line: 90
#, no-wrap
#~ msgid "**Passport**\n"
#~ msgstr "**Passport**\n"

# File: docs/8.x/authentication.md, line: 92
# File: docs/master/authentication.md, line: 92
#~ msgid ""
#~ "Passport is an OAuth2 authentication provider, offering a variety of "
#~ "OAuth2 \"grant types\" which allow you to issue various types of tokens. "
#~ "In general, this is a robust and complex package for API authentication. "
#~ "However, most applications do not require the complex features offered by "
#~ "the OAuth2 spec, which can be confusing for both users and developers. In "
#~ "addition, developers have been historically confused about how to "
#~ "authenticate SPA applications or mobile applications using OAuth2 "
#~ "authentication providers like Passport."
#~ msgstr ""
#~ "Passport 是一個 OAuth2 驗證 Provider，提供了多種 OAuth2 的「Grant Type」來"
#~ "讓你簽發各種不同的權杖。通常來說，對於 API 驗證來說 Passport 是一個很強大"
#~ "很複雜的套件。但，大多數應用程式並不需要 OAuth2 規格所提供的那些複雜的功"
#~ "能，這些功能只會讓使用者與開發者都感到混亂。另外，開發者過去也對於如何通過"
#~ "如 Passport 這樣的 OAuth2 驗證 Provider 來驗證 SPA 應用程式或行動應用程式"
#~ "而感到混亂。"

# File: docs/8.x/authentication.md, line: 94
# File: docs/master/authentication.md, line: 94
#, no-wrap
#~ msgid "**Sanctum**\n"
#~ msgstr "**Sanctum**\n"

# File: docs/8.x/authentication.md, line: 96
# File: docs/master/authentication.md, line: 96
#~ msgid ""
#~ "In response to the complexity of OAuth2 and developer confusion, we set "
#~ "out to build a simpler, more streamlined authentication package that "
#~ "could handle both first-party web requests from a web browser and API "
#~ "requests via tokens. This goal was realized with the release of [Laravel "
#~ "Sanctum](/docs/{{version}}/sanctum), which should be considered the "
#~ "preferred and recommended authentication package for applications that "
#~ "will be offering a first-party web UI in addition to an API, or will be "
#~ "powered by a single-page application (SPA) that exists separately from "
#~ "the backend Laravel application, or applications that offer a mobile "
#~ "client."
#~ msgstr ""
#~ "為了處理 OAuth2 很複雜的問題以及解決開發者的困惑，我們希望建立一種更簡單、"
#~ "更精簡的驗證套件。這個套件不但可以處理來自網頁瀏覽器的第一方網頁請求，也可"
#~ "以處理通過權杖來發起的 API 請求。這一個目標在 [Laravel Sanctum](/docs/"
#~ "{{version}}/sanctum) 發佈後實現了，對於一些需要提供除了 API 外第一方網頁 "
#~ "UI、由有獨立 Laravel 後端應用程式的單一頁面應用程式 (SPA) 提供服務的網頁、"
#~ "或是提供網頁用戶端的應用程式，Laravel Sanctum 目前是我們推薦與建議的驗證套"
#~ "件。"

# File: docs/8.x/authentication.md, line: 98
# File: docs/master/authentication.md, line: 98
#~ msgid ""
#~ "Laravel Sanctum is a hybrid web / API authentication package that can "
#~ "manage your application's entire authentication process. This is possible "
#~ "because when Sanctum based applications receive a request, Sanctum will "
#~ "first determine if the request includes a session cookie that references "
#~ "an authenticated session. Sanctum accomplishes this by calling Laravel's "
#~ "built-in authentication services which we discussed earlier. If the "
#~ "request is not being authenticated via a session cookie, Sanctum will "
#~ "inspect the request for an API token. If an API token is present, Sanctum "
#~ "will authenticate the request using that token. To learn more about this "
#~ "process, please consult Sanctum's [\"how it works\"](/docs/{{version}}/"
#~ "sanctum#how-it-works) documentation."
#~ msgstr ""
#~ "Laravel Sanctum 是一個混合了網頁與 API 驗證的套件，可以用來處理應用程式的"
#~ "整個驗證流程。可以這麼做是因為當基於 Sanctum 的應用程式收到請求後，"
#~ "Sanctum 會先判斷該請求是否包含了驗證 Session 的 Session Cookie。Sanctum 是"
#~ "通過呼叫我們稍早討論過的 Laravel 內建驗證服務來達成此一功能的。若該請求的 "
#~ "Session Cookie 未被驗證過，則 Sanctum 接著會檢查請求的 API 權杖。若有找到 "
#~ "API 權杖，則 Sanctum 會使用該權杖來驗證請求。要瞭解更多有關此一流程的資"
#~ "訊，請參考 Sanctum 的 [「運作方式」](/docs/{{version}}/sanctum#how-it-"
#~ "works) 說明文件。"

# File: docs/8.x/authentication.md, line: 100
# File: docs/master/authentication.md, line: 100
#~ msgid ""
#~ "Laravel Sanctum is the API package we have chosen to include with the "
#~ "[Laravel Jetstream](https://jetstream.laravel.com) application starter "
#~ "kit because we believe it is the best fit for the majority of web "
#~ "application's authentication needs."
#~ msgstr ""
#~ "Laravel Sanctum 是我們在 [Laravel Jetstream](https://jetstream.laravel."
#~ "com) 應用程式入門套件中選擇的 API 套件，因為我們認為該套件最符合大多數網頁"
#~ "應用程式的驗證需求。"

# File: docs/8.x/authentication.md, line: 102
# File: docs/master/authentication.md, line: 102
#, no-wrap
#~ msgid "<a name=\"summary-choosing-your-stack\"></a>\n"
#~ msgstr "<a name=\"summary-choosing-your-stack\"></a>\n"

# File: docs/8.x/authentication.md, line: 102
# File: docs/master/authentication.md, line: 102
#, no-wrap
#~ msgid "Summary & Choosing Your Stack"
#~ msgstr "總結與選擇你的 Stack"

# File: docs/8.x/authentication.md, line: 105
# File: docs/master/authentication.md, line: 105
#~ msgid ""
#~ "In summary, if your application will be accessed using a browser and you "
#~ "are building a monolithic Laravel application, your application will use "
#~ "Laravel's built-in authentication services."
#~ msgstr ""
#~ "總的來說，若你的應用程式會通過瀏覽器來存取，且你正在建立單一的 Laravel 應"
#~ "用程式，則你的應用程式會使用 Laravel 的內建驗證服務。"

# File: docs/8.x/authentication.md, line: 107
# File: docs/master/authentication.md, line: 107
#~ msgid ""
#~ "Next, if your application offers an API that will be consumed by third "
#~ "parties, you will choose between [Passport](/docs/{{version}}/passport) "
#~ "or [Sanctum](/docs/{{version}}/sanctum) to provide API token "
#~ "authentication for your application. In general, Sanctum should be "
#~ "preferred when possible since it is a simple, complete solution for API "
#~ "authentication, SPA authentication, and mobile authentication, including "
#~ "support for \"scopes\" or \"abilities\"."
#~ msgstr ""
#~ "接著，若應用程式有包含了會被第三方使用的 API，則會選擇 [Passport](/docs/"
#~ "{{version}}/passport) 或 [Sanctum](/docs/{{version}}/sanctum) 來為應用程式"
#~ "提供 API 權杖驗證。一般來說，Sanctum 應該儘量是預設的選擇，因為 Sanctum 比"
#~ "較簡單、且對 API 驗證、SPA 驗證，以及行動裝置驗證來說是完整的解決方案，並"
#~ "且支援「範圍（Scope）」與「權限（Ability）」。"

# File: docs/8.x/authentication.md, line: 109
# File: docs/master/authentication.md, line: 109
#~ msgid ""
#~ "If you are building a single-page application (SPA) that will be powered "
#~ "by a Laravel backend, you should use [Laravel Sanctum](/docs/{{version}}/"
#~ "sanctum). When using Sanctum, you will either need to [manually implement "
#~ "your own backend authentication routes](#authenticating-users) or utilize "
#~ "[Laravel Fortify](/docs/{{version}}/fortify) as a headless authentication "
#~ "backend service that provides routes and controllers for features such as "
#~ "registration, password reset, email verification, and more."
#~ msgstr ""
#~ "如果是想建立由 Laravel 提供後端的單一頁面應用程式 (SPA)，則應該使用 "
#~ "[Laravel Sanctum](/docs/{{version}}/sanctum)。在使用 Sanctum 時，會需要 "
#~ "[手動實作你自己的驗證路由後端](#authenticating-users)，或是使用 [Laravel "
#~ "Fortify](/docs/{{version}}/fortify) 來作為無周邊（Headless）驗證後端服務以"
#~ "為如註冊、密碼重設、電子郵件驗證等功能提供路由與控制器。"

# File: docs/8.x/authentication.md, line: 111
# File: docs/master/authentication.md, line: 111
#~ msgid ""
#~ "Passport may be chosen when your application absolutely needs all of the "
#~ "features provided by the OAuth2 specification."
#~ msgstr ""
#~ "當應用程式真的需要所有 OAuth2 規格所提供的功能時，則可以選擇使用 "
#~ "Passport。"

# File: docs/8.x/authentication.md, line: 113
# File: docs/master/authentication.md, line: 113
#~ msgid ""
#~ "And, if you would like to get started quickly, we are pleased to "
#~ "recommend [Laravel Jetstream](https://jetstream.laravel.com) as a quick "
#~ "way to start a new Laravel application that already uses our preferred "
#~ "authentication stack of Laravel's built-in authentication services and "
#~ "Laravel Sanctum."
#~ msgstr ""
#~ "此外，若想要快速入門，我們非常高興地推薦你使用 [Laravel Jetstream]"
#~ "(https://jetstream.laravel.com) 來作為快速建立新 Laravel 應用程式的方法。"
#~ "Laravel Jetstream 已經使用了我們偏好的驗證 Stack，即為使用 Laravel 的內建"
#~ "驗證服務與 Laravel Sanctum。"

# File: docs/8.x/authentication.md, line: 115
# File: docs/master/authentication.md, line: 115
#, no-wrap
#~ msgid "<a name=\"authentication-quickstart\"></a>\n"
#~ msgstr "<a name=\"authentication-quickstart\"></a>\n"

# File: docs/8.x/authentication.md, line: 115
# File: docs/master/authentication.md, line: 115
#, no-wrap
#~ msgid "Authentication Quickstart"
#~ msgstr "驗證快速開始"

# File: docs/8.x/authentication.md, line: 118
# File: docs/master/authentication.md, line: 118
#, no-wrap
#~ msgid "> {note} This portion of the documentation discusses authenticating users via the [Laravel application starter kits](/docs/{{version}}/starter-kits), which includes UI scaffolding to help you get started quickly. If you would like to integrate with Laravel's authentication systems directly, check out the documentation on [manually authenticating users](#authenticating-users).\n"
#~ msgstr "> {note} 這部分的文件會討論通過 [Laravel 應用程式入門套件](/docs/{{version}}/starter-kits) 來驗證使用者，這些入門套件包含了能協助你快速開始的 UI Scaffolding。若你想要直接與 Laravel 的驗證系統整合，請參考 [手動驗證使用者](#authenticating-users) 內的說明文件。\n"

# File: docs/8.x/authentication.md, line: 120
# File: docs/master/authentication.md, line: 120
#, no-wrap
#~ msgid "<a name=\"install-a-starter-kit\"></a>\n"
#~ msgstr "<a name=\"install-a-starter-kit\"></a>\n"

# File: docs/8.x/authentication.md, line: 120
# File: docs/master/authentication.md, line: 120
#, no-wrap
#~ msgid "Install A Starter Kit"
#~ msgstr "安裝一種入門套件"

# File: docs/8.x/authentication.md, line: 123
# File: docs/master/authentication.md, line: 123
#~ msgid ""
#~ "First, you should [install a Laravel application starter kit](/docs/"
#~ "{{version}}/starter-kits). Our current starter kits, Laravel Breeze and "
#~ "Laravel Jetstream, offer beautifully designed starting points for "
#~ "incorporating authentication into your fresh Laravel application."
#~ msgstr ""
#~ "首先，需要 [安裝一個 Laravel 應用程式入門套件](/docs/{{version}}/starter-"
#~ "kits)。我們目前的入門套件，Laravel Breeze 與 Laravel Jetstream，都提供了能"
#~ "為你的全新 Laravel 應用程式帶來漂亮設計的開始點。"

# File: docs/8.x/authentication.md, line: 125
# File: docs/master/authentication.md, line: 125
#~ msgid ""
#~ "Laravel Breeze is a minimal, simple implementation of all of Laravel's "
#~ "authentication features, including login, registration, password reset, "
#~ "email verification, and password confirmation. Laravel Breeze's view "
#~ "layer is made up of simple [Blade templates](/docs/{{version}}/blade) "
#~ "styled with [Tailwind CSS](https://tailwindcss.com)."
#~ msgstr ""
#~ "Laravel Breeze 是一個簡單且最小化實作出所有 Laravel 驗證功能的套件，包含登"
#~ "入、註冊、密碼重設、電子郵件驗證、以及密碼確認。Laravel Breeze 的檢視器層"
#~ "是通過簡單的 [Blade 樣板](/docs/{{version}}/blade) 搭配 [Tailwind CSS]"
#~ "(https://tailwindcss.com) 提供樣式組合而成的。"

# File: docs/8.x/authentication.md, line: 127
# File: docs/master/authentication.md, line: 127
#~ msgid ""
#~ "[Laravel Jetstream](https://jetstream.laravel.com) is a more robust "
#~ "application starter kit that includes support for scaffolding your "
#~ "application with [Livewire](https://laravel-livewire.com) or [Inertia.js "
#~ "and Vue](https://inertiajs.com). In addition, Jetstream features optional "
#~ "support for two-factor authentication, teams, profile management, browser "
#~ "session management, API support via [Laravel Sanctum](/docs/{{version}}/"
#~ "sanctum), account deletion, and more."
#~ msgstr ""
#~ "[Laravel Jetstream](https://jetstream.laravel.com) 是一個更複雜的應用程式"
#~ "入門套件，其中包含了使用 [Livewire](https://laravel-livewire.com) 或 "
#~ "[Inertia.js 與 Vue](https://inertiajs.com) 來對應用程式 Scaffolding 的支"
#~ "援。此外，Jetstream 也提供了對二步驟驗證、團隊、個人檔案管理、瀏覽器啟程管"
#~ "理、通過 [Laravel Sanctum](/docs/{{version}}/sanctum) 提供的 API 支援、帳"
#~ "號刪除…等功能的可選支援。"

# File: docs/8.x/authentication.md, line: 129
# File: docs/master/authentication.md, line: 129
#, no-wrap
#~ msgid "<a name=\"retrieving-the-authenticated-user\"></a>\n"
#~ msgstr "<a name=\"retrieving-the-authenticated-user\"></a>\n"

# File: docs/8.x/authentication.md, line: 129
# File: docs/master/authentication.md, line: 129
#, no-wrap
#~ msgid "Retrieving The Authenticated User"
#~ msgstr "取得已驗證的使用者"

# File: docs/8.x/authentication.md, line: 132
# File: docs/master/authentication.md, line: 132
#~ msgid ""
#~ "After installing an authentication starter kit and allowing users to "
#~ "register and authenticate with your application, you will often need to "
#~ "interact with the currently authenticated user. While handling an "
#~ "incoming request, you may access the authenticated user via the `Auth` "
#~ "facade's `user` method:"
#~ msgstr ""
#~ "安裝完驗證入門套件並讓使用者在應用程式內註冊與驗證厚，我們通常需要與目前已"
#~ "驗證的使用者進行互動。在處理連入請求時，我們可以通過 `Auth` Facade 的 "
#~ "`user` 方法來存取已驗證的使用者："

# File: docs/8.x/authentication.md, line: 134
# File: docs/8.x/authentication.md, line: 169
# File: docs/8.x/authentication.md, line: 293
# File: docs/8.x/authentication.md, line: 307
# File: docs/8.x/authentication.md, line: 367
# File: docs/8.x/authentication.md, line: 433
# File: docs/8.x/eloquent-resources.md, line: 490
# File: docs/master/authentication.md, line: 134
# File: docs/master/authentication.md, line: 169
# File: docs/master/authentication.md, line: 293
# File: docs/master/authentication.md, line: 307
# File: docs/master/authentication.md, line: 367
# File: docs/master/authentication.md, line: 433
# File: docs/master/eloquent-resources.md, line: 490
#, no-wrap
#~ msgid "    use Illuminate\\Support\\Facades\\Auth;\n"
#~ msgstr "    use Illuminate\\Support\\Facades\\Auth;\n"

# File: docs/8.x/authentication.md, line: 137
# File: docs/master/authentication.md, line: 137
#, no-wrap
#~ msgid ""
#~ "    // Retrieve the currently authenticated user...\n"
#~ "    $user = Auth::user();\n"
#~ msgstr ""
#~ "    // Retrieve the currently authenticated user...\n"
#~ "    $user = Auth::user();\n"

# File: docs/8.x/authentication.md, line: 140
# File: docs/master/authentication.md, line: 140
#, no-wrap
#~ msgid ""
#~ "    // Retrieve the currently authenticated user's ID...\n"
#~ "    $id = Auth::id();\n"
#~ msgstr ""
#~ "    // Retrieve the currently authenticated user's ID...\n"
#~ "    $id = Auth::id();\n"

# File: docs/8.x/authentication.md, line: 142
# File: docs/master/authentication.md, line: 142
#~ msgid ""
#~ "Alternatively, once a user is authenticated, you may access the "
#~ "authenticated user via an `Illuminate\\Http\\Request` instance. Remember, "
#~ "type-hinted classes will automatically be injected into your controller "
#~ "methods. By type-hinting the `Illuminate\\Http\\Request` object, you may "
#~ "gain convenient access to the authenticated user from any controller "
#~ "method in your application via the request's `user` method:"
#~ msgstr ""
#~ "另外，使用者驗證後，也可以通過 `Illuminate\\Http\\Request` 實體來存取已驗"
#~ "證的使用者。請記得，有型別提示的類別會自動被插入到控制器方法內。只要型別提"
#~ "示 `Illuminate\\Http\\Request` 物件，就可以方便地通過請求的 `user` 方法來"
#~ "在任何控制器方法內存取已驗證的使用者："

# File: docs/8.x/authentication.md, line: 148
# File: docs/8.x/billing.md, line: 231
# File: docs/8.x/billing.md, line: 239
# File: docs/8.x/billing.md, line: 452
# File: docs/8.x/billing.md, line: 750
# File: docs/8.x/billing.md, line: 871
# File: docs/8.x/billing.md, line: 1006
# File: docs/8.x/billing.md, line: 1062
# File: docs/8.x/billing.md, line: 1244
# File: docs/8.x/billing.md, line: 1338
# File: docs/8.x/cashier-paddle.md, line: 460
# File: docs/8.x/cashier-paddle.md, line: 834
# File: docs/8.x/cashier-paddle.md, line: 887
# File: docs/8.x/cashier-paddle.md, line: 1003
# File: docs/8.x/cashier-paddle.md, line: 1043
# File: docs/8.x/container.md, line: 99
# File: docs/8.x/controllers.md, line: 390
# File: docs/8.x/controllers.md, line: 420
# File: docs/8.x/csrf.md, line: 41
# File: docs/8.x/passport.md, line: 767
# File: docs/8.x/passport.md, line: 1066
# File: docs/8.x/requests.md, line: 41
# File: docs/8.x/requests.md, line: 61
# File: docs/8.x/requests.md, line: 82
# File: docs/8.x/routing.md, line: 80
# File: docs/8.x/routing.md, line: 149
# File: docs/8.x/sanctum.md, line: 132
# File: docs/8.x/sanctum.md, line: 182
# File: docs/8.x/sanctum.md, line: 279
# File: docs/8.x/urls.md, line: 114
# File: docs/8.x/verification.md, line: 102
# File: docs/master/authentication.md, line: 148
# File: docs/master/billing.md, line: 201
# File: docs/master/billing.md, line: 209
# File: docs/master/billing.md, line: 422
# File: docs/master/billing.md, line: 711
# File: docs/master/billing.md, line: 887
# File: docs/master/billing.md, line: 939
# File: docs/master/billing.md, line: 1117
# File: docs/master/billing.md, line: 1211
# File: docs/master/cashier-paddle.md, line: 420
# File: docs/master/cashier-paddle.md, line: 794
# File: docs/master/cashier-paddle.md, line: 847
# File: docs/master/cashier-paddle.md, line: 963
# File: docs/master/cashier-paddle.md, line: 1003
# File: docs/master/container.md, line: 99
# File: docs/master/controllers.md, line: 377
# File: docs/master/controllers.md, line: 407
# File: docs/master/csrf.md, line: 41
# File: docs/master/passport.md, line: 765
# File: docs/master/passport.md, line: 1064
# File: docs/master/requests.md, line: 40
# File: docs/master/requests.md, line: 60
# File: docs/master/requests.md, line: 81
# File: docs/master/routing.md, line: 80
# File: docs/master/routing.md, line: 149
# File: docs/master/sanctum.md, line: 132
# File: docs/master/sanctum.md, line: 182
# File: docs/master/sanctum.md, line: 279
# File: docs/master/urls.md, line: 114
# File: docs/master/verification.md, line: 102
#, no-wrap
#~ msgid "    use Illuminate\\Http\\Request;\n"
#~ msgstr "    use Illuminate\\Http\\Request;\n"

# File: docs/8.x/authentication.md, line: 162
# File: docs/master/authentication.md, line: 162
#, no-wrap
#~ msgid ""
#~ "    class FlightController extends Controller\n"
#~ "    {\n"
#~ "        /**\n"
#~ "         * Update the flight information for an existing flight.\n"
#~ "         *\n"
#~ "         * @param  \\Illuminate\\Http\\Request  $request\n"
#~ "         * @return \\Illuminate\\Http\\Response\n"
#~ "         */\n"
#~ "        public function update(Request $request)\n"
#~ "        {\n"
#~ "            // $request->user()\n"
#~ "        }\n"
#~ "    }\n"
#~ msgstr ""
#~ "    class FlightController extends Controller\n"
#~ "    {\n"
#~ "        /**\n"
#~ "         * Update the flight information for an existing flight.\n"
#~ "         *\n"
#~ "         * @param  \\Illuminate\\Http\\Request  $request\n"
#~ "         * @return \\Illuminate\\Http\\Response\n"
#~ "         */\n"
#~ "        public function update(Request $request)\n"
#~ "        {\n"
#~ "            // $request->user()\n"
#~ "        }\n"
#~ "    }\n"

# File: docs/8.x/authentication.md, line: 164
# File: docs/master/authentication.md, line: 164
#, no-wrap
#~ msgid "<a name=\"determining-if-the-current-user-is-authenticated\"></a>\n"
#~ msgstr "<a name=\"determining-if-the-current-user-is-authenticated\"></a>\n"

# File: docs/8.x/authentication.md, line: 164
# File: docs/master/authentication.md, line: 164
#, no-wrap
#~ msgid "Determining If The Current User Is Authenticated"
#~ msgstr "判斷目前使用者是否已驗證"

# File: docs/8.x/authentication.md, line: 167
# File: docs/master/authentication.md, line: 167
#~ msgid ""
#~ "To determine if the user making the incoming HTTP request is "
#~ "authenticated, you may use the `check` method on the `Auth` facade. This "
#~ "method will return `true` if the user is authenticated:"
#~ msgstr ""
#~ "若要判斷建立連入 HTTP 請求的使用者是否已驗證，可以使用 `Auth` Facade 的 "
#~ "`check` 方法。該方法會在使用者已驗證的時候回傳 `true`："

# File: docs/8.x/authentication.md, line: 173
# File: docs/master/authentication.md, line: 173
#, no-wrap
#~ msgid ""
#~ "    if (Auth::check()) {\n"
#~ "        // The user is logged in...\n"
#~ "    }\n"
#~ msgstr ""
#~ "    if (Auth::check()) {\n"
#~ "        // The user is logged in...\n"
#~ "    }\n"

# File: docs/8.x/authentication.md, line: 175
# File: docs/master/authentication.md, line: 175
#, no-wrap
#~ msgid "> {tip} Even though it is possible to determine if a user is authenticated using the `check` method, you will typically use a middleware to verify that the user is authenticated before allowing the user access to certain routes / controllers. To learn more about this, check out the documentation on [protecting routes](/docs/{{version}}/authentication#protecting-routes).\n"
#~ msgstr "> {tip} 雖然可以通過使用 `check` 方法來判斷使用者是否已驗證，但通常可以使用中間層（Middleware）來在使用者存取特定路由或控制器前驗證該使用者是否已驗證。有關更多詳情，請參考 [保護路由](/docs/{{version}}/authentication#protecting-routes) 內的說明文件。\n"

# File: docs/8.x/authentication.md, line: 177
# File: docs/8.x/fortify.md, line: 465
# File: docs/8.x/passport.md, line: 916
# File: docs/8.x/sanctum.md, line: 175
# File: docs/8.x/verification.md, line: 110
# File: docs/master/authentication.md, line: 177
# File: docs/master/fortify.md, line: 465
# File: docs/master/passport.md, line: 914
# File: docs/master/sanctum.md, line: 175
# File: docs/master/verification.md, line: 110
#, no-wrap
#~ msgid "<a name=\"protecting-routes\"></a>\n"
#~ msgstr "<a name=\"protecting-routes\"></a>\n"

# File: docs/8.x/authentication.md, line: 177
# File: docs/8.x/authentication.md, line: 488
# File: docs/8.x/fortify.md, line: 465
# File: docs/8.x/passport.md, line: 916
# File: docs/8.x/sanctum.md, line: 175
# File: docs/8.x/sanctum.md, line: 274
# File: docs/8.x/sanctum.md, line: 356
# File: docs/8.x/verification.md, line: 110
# File: docs/master/authentication.md, line: 177
# File: docs/master/authentication.md, line: 488
# File: docs/master/fortify.md, line: 465
# File: docs/master/passport.md, line: 914
# File: docs/master/sanctum.md, line: 175
# File: docs/master/sanctum.md, line: 274
# File: docs/master/sanctum.md, line: 356
# File: docs/master/verification.md, line: 110
#, no-wrap
#~ msgid "Protecting Routes"
#~ msgstr "保護路由"

# File: docs/8.x/authentication.md, line: 180
# File: docs/master/authentication.md, line: 180
#~ msgid ""
#~ "[Route middleware](/docs/{{version}}/middleware) can be used to only "
#~ "allow authenticated users to access a given route. Laravel ships with an "
#~ "`auth` middleware, which references the `Illuminate\\Auth\\Middleware"
#~ "\\Authenticate` class. Since this middleware is already registered in "
#~ "your application's HTTP kernel, all you need to do is attach the "
#~ "middleware to a route definition:"
#~ msgstr ""
#~ "[路由中間層](/docs/{{version}}/middleware) 可以用來只允許已驗證的使用者存"
#~ "取指定的路由。Laravel 內建了一個 `auth` 中間層，這個中間層為 `Illuminate"
#~ "\\Auth\\Middleware\\Authenticate` 類別。由於該中間層已預先在你的應用程式 "
#~ "HTTP 核心內註冊好了，所以你只需要在路由定義內加上這個中間層即可："

# File: docs/8.x/authentication.md, line: 184
# File: docs/master/authentication.md, line: 184
#, no-wrap
#~ msgid ""
#~ "    Route::get('/flights', function () {\n"
#~ "        // Only authenticated users may access this route...\n"
#~ "    })->middleware('auth');\n"
#~ msgstr ""
#~ "    Route::get('/flights', function () {\n"
#~ "        // Only authenticated users may access this route...\n"
#~ "    })->middleware('auth');\n"

# File: docs/8.x/authentication.md, line: 186
# File: docs/master/authentication.md, line: 186
#, no-wrap
#~ msgid "<a name=\"redirecting-unauthenticated-users\"></a>\n"
#~ msgstr "<a name=\"redirecting-unauthenticated-users\"></a>\n"

# File: docs/8.x/authentication.md, line: 186
# File: docs/master/authentication.md, line: 186
#, no-wrap
#~ msgid "Redirecting Unauthenticated Users"
#~ msgstr "為未驗證的使用者重新導向"

# File: docs/8.x/authentication.md, line: 189
# File: docs/master/authentication.md, line: 189
#~ msgid ""
#~ "When the `auth` middleware detects an unauthenticated user, it will "
#~ "redirect the user to the `login` [named route](/docs/{{version}}/"
#~ "routing#named-routes). You may modify this behavior by updating the "
#~ "`redirectTo` function in your application's `app/Http/Middleware/"
#~ "Authenticate.php` file:"
#~ msgstr ""
#~ "當 `auth` 中間層檢測到未驗證的使用者，該中間層會將使用者重新導向到 "
#~ "`login` 這個 [帶名稱的路由](/docs/{{version}}/routing#named-routes) 上。可"
#~ "以通過更新應用程式中 `app/Http/Middleware/Authenticate.php` 檔案內的 "
#~ "`redirectTo` 方法來更改此一行為。"

# File: docs/8.x/authentication.md, line: 200
# File: docs/master/authentication.md, line: 200
#, no-wrap
#~ msgid ""
#~ "    /**\n"
#~ "     * Get the path the user should be redirected to.\n"
#~ "     *\n"
#~ "     * @param  \\Illuminate\\Http\\Request  $request\n"
#~ "     * @return string\n"
#~ "     */\n"
#~ "    protected function redirectTo($request)\n"
#~ "    {\n"
#~ "        return route('login');\n"
#~ "    }\n"
#~ msgstr ""
#~ "    /**\n"
#~ "     * Get the path the user should be redirected to.\n"
#~ "     *\n"
#~ "     * @param  \\Illuminate\\Http\\Request  $request\n"
#~ "     * @return string\n"
#~ "     */\n"
#~ "    protected function redirectTo($request)\n"
#~ "    {\n"
#~ "        return route('login');\n"
#~ "    }\n"

# File: docs/8.x/authentication.md, line: 202
# File: docs/master/authentication.md, line: 202
#, no-wrap
#~ msgid "<a name=\"specifying-a-guard\"></a>\n"
#~ msgstr "<a name=\"specifying-a-guard\"></a>\n"

# File: docs/8.x/authentication.md, line: 202
# File: docs/master/authentication.md, line: 202
#, no-wrap
#~ msgid "Specifying A Guard"
#~ msgstr "指定 Guard"

# File: docs/8.x/authentication.md, line: 205
# File: docs/master/authentication.md, line: 205
#~ msgid ""
#~ "When attaching the `auth` middleware to a route, you may also specify "
#~ "which \"guard\" should be used to authenticate the user. The guard "
#~ "specified should correspond to one of the keys in the `guards` array of "
#~ "your `auth.php` configuration file:"
#~ msgstr ""
#~ "在將 `auth` 中間層加到路由時，可以指定要使用哪個「Guard」來驗證使用者。可"
#~ "以通過指定 `auth.php` 組態設定檔中 `guards` 陣列中對應的鍵值來指定 Guard："

# File: docs/8.x/authentication.md, line: 209
# File: docs/master/authentication.md, line: 209
#, no-wrap
#~ msgid ""
#~ "    Route::get('/flights', function () {\n"
#~ "        // Only authenticated users may access this route...\n"
#~ "    })->middleware('auth:admin');\n"
#~ msgstr ""
#~ "    Route::get('/flights', function () {\n"
#~ "        // Only authenticated users may access this route...\n"
#~ "    })->middleware('auth:admin');\n"

# File: docs/8.x/authentication.md, line: 211
# File: docs/master/authentication.md, line: 211
#, no-wrap
#~ msgid "<a name=\"login-throttling\"></a>\n"
#~ msgstr "<a name=\"login-throttling\"></a>\n"

# File: docs/8.x/authentication.md, line: 211
# File: docs/master/authentication.md, line: 211
#, no-wrap
#~ msgid "Login Throttling"
#~ msgstr "登入頻率限制"

# File: docs/8.x/authentication.md, line: 214
# File: docs/master/authentication.md, line: 214
#~ msgid ""
#~ "If you are using the Laravel Breeze or Laravel Jetstream [starter kits](/"
#~ "docs/{{version}}/starter-kits), rate limiting will automatically be "
#~ "applied to login attempts. By default, the user will not be able to login "
#~ "for one minute if they fail to provide the correct credentials after "
#~ "several attempts. The throttling is unique to the user's username / email "
#~ "address and their IP address."
#~ msgstr ""
#~ "若使用 Laravel Breeze 或 Laravel Jetstream [入門套件](/docs/{{version}}/"
#~ "starter-kits)，頻率限制將自動被套用到登入限制上。預設情況下，若使用者嘗試"
#~ "了數次仍未提供正確的帳號密碼，則將在一分鐘之內都無法登入。登入限制是基於每"
#~ "個使用者的使用者名稱或電子郵件，以及其 IP 位址來區分的。"

# File: docs/8.x/authentication.md, line: 216
# File: docs/master/authentication.md, line: 216
#, no-wrap
#~ msgid "> {tip} If you would like to rate limit other routes in your application, check out the [rate limiting documentation](/docs/{{version}}/routing#rate-limiting).\n"
#~ msgstr "> {tip} 若想在應用程式中的其他路由上提供頻率限制，請參考 [頻率限制說明文件](/docs/{{version}}/routing#rate-limiting)。\n"

# File: docs/8.x/authentication.md, line: 218
# File: docs/master/authentication.md, line: 218
#, no-wrap
#~ msgid "<a name=\"authenticating-users\"></a>\n"
#~ msgstr "<a name=\"authenticating-users\"></a>\n"

# File: docs/8.x/authentication.md, line: 218
# File: docs/master/authentication.md, line: 218
#, no-wrap
#~ msgid "Manually Authenticating Users"
#~ msgstr "手動驗證使用者"

# File: docs/8.x/authentication.md, line: 221
# File: docs/master/authentication.md, line: 221
#~ msgid ""
#~ "You are not required to use the authentication scaffolding included with "
#~ "Laravel's [application starter kits](/docs/{{version}}/starter-kits). If "
#~ "you choose to not use this scaffolding, you will need to manage user "
#~ "authentication using the Laravel authentication classes directly. Don't "
#~ "worry, it's a cinch!"
#~ msgstr ""
#~ "不一定要使用 Laravel [應用程式入門套件](/docs/{{version}}/starter-kits) 內"
#~ "包含的驗證 Scaffolding。若選擇不使用這些 Scaffolding 的話，則需要直接通過 "
#~ "Laravel 的驗證類別來處理使用者驗證。別擔心，這只是小菜一碟！"

# File: docs/8.x/authentication.md, line: 223
# File: docs/master/authentication.md, line: 223
#~ msgid ""
#~ "We will access Laravel's authentication services via the `Auth` [facade](/"
#~ "docs/{{version}}/facades), so we'll need to make sure to import the "
#~ "`Auth` facade at the top of the class. Next, let's check out the "
#~ "`attempt` method. The `attempt` method is normally used to handle "
#~ "authentication attempt's from your application's \"login\" form. If "
#~ "authentication is successful, you should regenerate the user's [session](/"
#~ "docs/{{version}}/session) to prevent [session fixation](https://en."
#~ "wikipedia.org/wiki/Session_fixation):"
#~ msgstr ""
#~ "我們會通過 `Auth` [Facade](/docs/{{version}}/facades) 來存取 Laravel 的驗"
#~ "證服務。因此，我們需要確保有在該類別的最上方引入 `Auth` Facade。接著，還要"
#~ "確認一下我們的 `attempt` 方法。這個 `attempt` 方法通常是用來處理來自應用程"
#~ "式「登入」表單的驗證嘗試。若成功驗證，則應該重新產生使用者的 [session](/"
#~ "docs/{{version}}/session) 來防止 [Session Fixation（英語）](https://en."
#~ "wikipedia.org/wiki/Session_fixation)："

# File: docs/8.x/authentication.md, line: 230
# File: docs/8.x/authentication.md, line: 399
# File: docs/master/authentication.md, line: 230
# File: docs/master/authentication.md, line: 399
#, no-wrap
#~ msgid ""
#~ "    use Illuminate\\Http\\Request;\n"
#~ "    use Illuminate\\Support\\Facades\\Auth;\n"
#~ msgstr ""
#~ "    use Illuminate\\Http\\Request;\n"
#~ "    use Illuminate\\Support\\Facades\\Auth;\n"

# File: docs/8.x/authentication.md, line: 242
# File: docs/master/authentication.md, line: 242
#, no-wrap
#~ msgid ""
#~ "    class LoginController extends Controller\n"
#~ "    {\n"
#~ "        /**\n"
#~ "         * Handle an authentication attempt.\n"
#~ "         *\n"
#~ "         * @param  \\Illuminate\\Http\\Request $request\n"
#~ "         * @return \\Illuminate\\Http\\Response\n"
#~ "         */\n"
#~ "        public function authenticate(Request $request)\n"
#~ "        {\n"
#~ "            $credentials = $request->only('email', 'password');\n"
#~ msgstr ""
#~ "    class LoginController extends Controller\n"
#~ "    {\n"
#~ "        /**\n"
#~ "         * Handle an authentication attempt.\n"
#~ "         *\n"
#~ "         * @param  \\Illuminate\\Http\\Request $request\n"
#~ "         * @return \\Illuminate\\Http\\Response\n"
#~ "         */\n"
#~ "        public function authenticate(Request $request)\n"
#~ "        {\n"
#~ "            $credentials = $request->only('email', 'password');\n"

# File: docs/8.x/authentication.md, line: 245
# File: docs/master/authentication.md, line: 245
#, no-wrap
#~ msgid ""
#~ "            if (Auth::attempt($credentials)) {\n"
#~ "                $request->session()->regenerate();\n"
#~ msgstr ""
#~ "            if (Auth::attempt($credentials)) {\n"
#~ "                $request->session()->regenerate();\n"

# File: docs/8.x/authentication.md, line: 248
# File: docs/master/authentication.md, line: 248
#, no-wrap
#~ msgid ""
#~ "                return redirect()->intended('dashboard');\n"
#~ "            }\n"
#~ msgstr ""
#~ "                return redirect()->intended('dashboard');\n"
#~ "            }\n"

# File: docs/8.x/authentication.md, line: 254
# File: docs/master/authentication.md, line: 254
#, no-wrap
#~ msgid ""
#~ "            return back()->withErrors([\n"
#~ "                'email' => 'The provided credentials do not match our records.',\n"
#~ "            ]);\n"
#~ "        }\n"
#~ "    }\n"
#~ msgstr ""
#~ "            return back()->withErrors([\n"
#~ "                'email' => 'The provided credentials do not match our records.',\n"
#~ "            ]);\n"
#~ "        }\n"
#~ "    }\n"

# File: docs/8.x/authentication.md, line: 256
#~ msgid ""
#~ "The `attempt` method accepts an array of key / value pairs as its first "
#~ "argument. The values in the array will be used to find the user in your "
#~ "database table. So, in the example above, the user will be retrieved by "
#~ "the value of the `email` column. If the user is found, the hashed "
#~ "password stored in the database will be compared with the `password` "
#~ "value passed to the method via the array. You should not hash the "
#~ "incoming request's `password` value, since the framework will "
#~ "automatically hash the value before comparing it to the hashed password "
#~ "in the database. An authenticated session will be started for the user if "
#~ "the two hashed passwords match."
#~ msgstr ""
#~ "`attempt` 方法接收包含了索引鍵／值配對的陣列作為其第一個引數。陣列中的值會"
#~ "被用來在資料庫資料表中尋找使用者。因此，在上方的範例中，使用者會依照 "
#~ "`email` 欄位中的值來取得。若找到該使用者，則會將資料庫中儲存的密碼雜湊跟陣"
#~ "列中的 `password` 值進行比對。請不要將連入請求的 `password` 進行雜湊，因為"
#~ "框架會自動在與資料庫中雜湊密碼比對時自動對齊進行雜湊。當兩個雜湊密碼相符合"
#~ "時，將開始該使用者的驗證 Session。"

# File: docs/8.x/authentication.md, line: 258
# File: docs/master/authentication.md, line: 258
#~ msgid ""
#~ "Remember, Laravel's authentication services will retrieve users from your "
#~ "database based on your authentication guard's \"provider\" configuration. "
#~ "In the default `config/auth.php` configuration file, the Eloquent user "
#~ "provider is specified and it is instructed to use the `App\\Models\\User` "
#~ "model when retrieving users. You may change these values within your "
#~ "configuration file based on the needs of your application."
#~ msgstr ""
#~ "請記得，Laravel 的驗證服務會依據驗證 Guard 的「Provider」組態設定來從資料"
#~ "庫中取得使用者。預設的 `config/auth.php` 組態設定檔中，使用者 Eloquent 使"
#~ "用者 Provider，並使用 `App\\Models\\User` 模型來取得使用者。可以依照應用程"
#~ "式的需求來在組態設定檔中更改這些值。"

# File: docs/8.x/authentication.md, line: 260
# File: docs/master/authentication.md, line: 260
#~ msgid ""
#~ "The `attempt` method will return `true` if authentication was successful. "
#~ "Otherwise, `false` will be returned."
#~ msgstr "當驗證成功後，`attempt` 方法會回傳 `true`。否則，會回傳 `false`。"

# File: docs/8.x/authentication.md, line: 262
# File: docs/master/authentication.md, line: 262
#~ msgid ""
#~ "The `intended` method provided by Laravel's redirector will redirect the "
#~ "user to the URL they were attempting to access before being intercepted "
#~ "by the authentication middleware. A fallback URI may be given to this "
#~ "method in case the intended destination is not available."
#~ msgstr ""
#~ "Laravel 的重新導向程式中提供的 `intended` 方法可以用來將使用者導向到他們被"
#~ "驗證中間層攔截存取前正在嘗試存取的 URL。可以提供一個遞補的 URI 給該方法，"
#~ "以免沒有預期的目的地。"

# File: docs/8.x/authentication.md, line: 264
# File: docs/master/authentication.md, line: 264
#, no-wrap
#~ msgid "<a name=\"specifying-additional-conditions\"></a>\n"
#~ msgstr "<a name=\"specifying-additional-conditions\"></a>\n"

# File: docs/8.x/authentication.md, line: 264
# File: docs/master/authentication.md, line: 264
#, no-wrap
#~ msgid "Specifying Additional Conditions"
#~ msgstr "指定額外條件"

# File: docs/8.x/authentication.md, line: 267
# File: docs/master/authentication.md, line: 267
#~ msgid ""
#~ "If you wish, you may also add extra query conditions to the "
#~ "authentication query in addition to the user's email and password. To "
#~ "accomplish this, we may simply add the query conditions to the array "
#~ "passed to the `attempt` method. For example, we may verify that the user "
#~ "is marked as \"active\":"
#~ msgstr ""
#~ "若有需要的話，也可以在驗證查詢上指定除了使用者的電子郵件與密碼外的額外查詢"
#~ "條件。為此，只需要將查詢條件加到傳給 `attempt` 方法的陣列中即可。如，我們"
#~ "可以驗證使用者有被標示為「啟用」："

# File: docs/8.x/authentication.md, line: 271
# File: docs/master/authentication.md, line: 271
#, no-wrap
#~ msgid ""
#~ "    if (Auth::attempt(['email' => $email, 'password' => $password, 'active' => 1])) {\n"
#~ "        // Authentication was successful...\n"
#~ "    }\n"
#~ msgstr ""
#~ "    if (Auth::attempt(['email' => $email, 'password' => $password, 'active' => 1])) {\n"
#~ "        // Authentication was successful...\n"
#~ "    }\n"

# File: docs/8.x/authentication.md, line: 273
# File: docs/master/authentication.md, line: 273
#, no-wrap
#~ msgid "> {note} In these examples, `email` is not a required option, it is merely used as an example. You should use whatever column name corresponds to a \"username\" in your database table.\n"
#~ msgstr "> {note} 在這些例子中，`email` 都不是必填的選項，只是拿來當作例子。你可以使用任何在資料庫中相當於「使用者名稱」的欄位。\n"

# File: docs/8.x/authentication.md, line: 275
# File: docs/master/authentication.md, line: 275
#, no-wrap
#~ msgid "<a name=\"accessing-specific-guard-instances\"></a>\n"
#~ msgstr "<a name=\"accessing-specific-guard-instances\"></a>\n"

# File: docs/8.x/authentication.md, line: 275
# File: docs/master/authentication.md, line: 275
#, no-wrap
#~ msgid "Accessing Specific Guard Instances"
#~ msgstr "存取特定 Guard 實體"

# File: docs/8.x/authentication.md, line: 278
# File: docs/master/authentication.md, line: 278
#~ msgid ""
#~ "Via the `Auth` facade's `guard` method, you may specify which guard "
#~ "instance you would like to utilize when authenticating the user. This "
#~ "allows you to manage authentication for separate parts of your "
#~ "application using entirely separate authenticatable models or user tables."
#~ msgstr ""
#~ "通過 `Auth` Facade 的 `guard` 方法，可以指定驗證使用者時要使用哪個 Guard "
#~ "實體。如此一來便能為應用程式中不同部分的驗證功能使用分開的可驗證模型或使用"
#~ "者資料表。"

# File: docs/8.x/authentication.md, line: 280
# File: docs/master/authentication.md, line: 280
#~ msgid ""
#~ "The guard name passed to the `guard` method should correspond to one of "
#~ "the guards configured in your `auth.php` configuration file:"
#~ msgstr ""
#~ "傳如 `guard` 方法的 Guard 名稱應為 `auth.php` 組態設定檔中設定的其中一個 "
#~ "Guard 名稱："

# File: docs/8.x/authentication.md, line: 284
# File: docs/master/authentication.md, line: 284
#, no-wrap
#~ msgid ""
#~ "    if (Auth::guard('admin')->attempt($credentials)) {\n"
#~ "        // ...\n"
#~ "    }\n"
#~ msgstr ""
#~ "    if (Auth::guard('admin')->attempt($credentials)) {\n"
#~ "        // ...\n"
#~ "    }\n"

# File: docs/8.x/authentication.md, line: 286
# File: docs/master/authentication.md, line: 286
#, no-wrap
#~ msgid "<a name=\"remembering-users\"></a>\n"
#~ msgstr "<a name=\"remembering-users\"></a>\n"

# File: docs/8.x/authentication.md, line: 286
# File: docs/master/authentication.md, line: 286
#, no-wrap
#~ msgid "Remembering Users"
#~ msgstr "記住使用者"

# File: docs/8.x/authentication.md, line: 289
# File: docs/master/authentication.md, line: 289
#~ msgid ""
#~ "Many web applications provide a \"remember me\" checkbox on their login "
#~ "form. If you would like to provide \"remember me\" functionality in your "
#~ "application, you may pass a boolean value as the second argument to the "
#~ "`attempt` method."
#~ msgstr ""
#~ "許多應用程式都在登入表單內提供了一個「記住我」勾選框。若想為你的應用程式提"
#~ "供「記住我」功能，可以傳入布林值給 `attempt` 方法的第二個引數。"

# File: docs/8.x/authentication.md, line: 291
# File: docs/master/authentication.md, line: 291
#~ msgid ""
#~ "When this value is `true`, Laravel will keep the user authenticated "
#~ "indefinitely or until they manually logout. Your `users` table must "
#~ "include the string `remember_token` column, which will be used to store "
#~ "the \"remember me\" token. The `users` table migration included with new "
#~ "Laravel applications already includes this column:"
#~ msgstr ""
#~ "當該值為 `true` 時，Laravel 會永久儲存使用者的驗證狀態，直到使用者手動登"
#~ "出。你的 `users` 資料表必須包含 `remember_token` 字串欄位，該欄位用來儲存"
#~ "「記住我」權杖。新 Laravel 應用程式中包含的 `users` 資料表遷移檔已包含了此"
#~ "欄位："

# File: docs/8.x/authentication.md, line: 297
# File: docs/master/authentication.md, line: 297
#, no-wrap
#~ msgid ""
#~ "    if (Auth::attempt(['email' => $email, 'password' => $password], $remember)) {\n"
#~ "        // The user is being remembered...\n"
#~ "    }\n"
#~ msgstr ""
#~ "    if (Auth::attempt(['email' => $email, 'password' => $password], $remember)) {\n"
#~ "        // The user is being remembered...\n"
#~ "    }\n"

# File: docs/8.x/authentication.md, line: 299
# File: docs/master/authentication.md, line: 299
#, no-wrap
#~ msgid "<a name=\"other-authentication-methods\"></a>\n"
#~ msgstr "<a name=\"other-authentication-methods\"></a>\n"

# File: docs/8.x/authentication.md, line: 299
# File: docs/master/authentication.md, line: 299
#, no-wrap
#~ msgid "Other Authentication Methods"
#~ msgstr "其他驗證方法"

# File: docs/8.x/authentication.md, line: 302
# File: docs/master/authentication.md, line: 302
#, no-wrap
#~ msgid "<a name=\"authenticate-a-user-instance\"></a>\n"
#~ msgstr "<a name=\"authenticate-a-user-instance\"></a>\n"

# File: docs/8.x/authentication.md, line: 302
# File: docs/master/authentication.md, line: 302
#, no-wrap
#~ msgid "Authenticate A User Instance"
#~ msgstr "驗證使用者實體"

# File: docs/8.x/authentication.md, line: 305
# File: docs/master/authentication.md, line: 305
#~ msgid ""
#~ "If you need to set an existing user instance as the currently "
#~ "authenticated user, you may pass the user instance to the `Auth` facade's "
#~ "`login` method. The given user instance must be an implementation of the "
#~ "`Illuminate\\Contracts\\Auth\\Authenticatable` [contract](/docs/"
#~ "{{version}}/contracts). The `App\\Models\\User` model included with "
#~ "Laravel already implements this interface. This method of authentication "
#~ "is useful when you already have a valid user instance, such as directly "
#~ "after a user registers with your application:"
#~ msgstr ""
#~ "若需要將目前已驗證使用者設為一個現有的使用者實體，可以將該實體傳入 `Auth` "
#~ "Facade 的 `login` 方法內。給定的使用者實體必須要實作 `Illuminate"
#~ "\\Contracts\\Auth\\Authenticatable` [Contract](/docs/{{version}}/"
#~ "contracts)。Laravel 中的 `App\\Models\\User` 模型已經實作了這個介面。這種"
#~ "驗證的方法適用與已有有效使用者實體的情況，如使用者註冊完應用程式之後："

# File: docs/8.x/authentication.md, line: 309
# File: docs/master/authentication.md, line: 309
#, no-wrap
#~ msgid "    Auth::login($user);\n"
#~ msgstr "    Auth::login($user);\n"

# File: docs/8.x/authentication.md, line: 311
# File: docs/master/authentication.md, line: 311
#~ msgid ""
#~ "You may pass a boolean value as the second argument to the `login` "
#~ "method. This value indicates if \"remember me\" functionality is desired "
#~ "for the authenticated session. Remember, this means that the session will "
#~ "be authenticated indefinitely or until the user manually logs out of the "
#~ "application:"
#~ msgstr ""
#~ "可以將布林值傳入 `login` 方法的第二個引數。這個布林值會用來判斷該驗證啟程"
#~ "是否應可用「記住我」功能。請記得，啟用該功能標示該啟程將永久可用，直到使用"
#~ "者手動登出應用程式："

# File: docs/8.x/authentication.md, line: 313
# File: docs/master/authentication.md, line: 313
#, no-wrap
#~ msgid "    Auth::login($user, $remember = true);\n"
#~ msgstr "    Auth::login($user, $remember = true);\n"

# File: docs/8.x/authentication.md, line: 315
# File: docs/master/authentication.md, line: 315
#~ msgid ""
#~ "If needed, you may specify an authentication guard before calling the "
#~ "`login` method:"
#~ msgstr "若有需要，可以在呼叫 `login` 方法前指定一個驗證 Guard："

# File: docs/8.x/authentication.md, line: 317
# File: docs/master/authentication.md, line: 317
#, no-wrap
#~ msgid "    Auth::guard('admin')->login($user);\n"
#~ msgstr "    Auth::guard('admin')->login($user);\n"

# File: docs/8.x/authentication.md, line: 319
# File: docs/master/authentication.md, line: 319
#, no-wrap
#~ msgid "<a name=\"authenticate-a-user-by-id\"></a>\n"
#~ msgstr "<a name=\"authenticate-a-user-by-id\"></a>\n"

# File: docs/8.x/authentication.md, line: 319
# File: docs/master/authentication.md, line: 319
#, no-wrap
#~ msgid "Authenticate A User By ID"
#~ msgstr "通過 ID 驗證使用者"

# File: docs/8.x/authentication.md, line: 322
# File: docs/master/authentication.md, line: 322
#~ msgid ""
#~ "To authenticate a user using their database record's primary key, you may "
#~ "use the `loginUsingId` method. This method accepts the primary key of the "
#~ "user you wish to authenticate:"
#~ msgstr ""
#~ "若要使用資料庫中的主鍵（Primary Key）來驗證使用者，可以使用 "
#~ "`loginUsingId` 方法。該方法接受要驗證使用者的主鍵："

# File: docs/8.x/authentication.md, line: 324
# File: docs/master/authentication.md, line: 324
#, no-wrap
#~ msgid "    Auth::loginUsingId(1);\n"
#~ msgstr "    Auth::loginUsingId(1);\n"

# File: docs/8.x/authentication.md, line: 326
# File: docs/master/authentication.md, line: 326
#~ msgid ""
#~ "You may pass a boolean value as the second argument to the `loginUsingId` "
#~ "method. This value indicates if \"remember me\" functionality is desired "
#~ "for the authenticated session. Remember, this means that the session will "
#~ "be authenticated indefinitely or until the user manually logs out of the "
#~ "application:"
#~ msgstr ""
#~ "可以將布林值傳入 `loginUsingId` 方法的第二個引數。這個布林值會用來判斷該驗"
#~ "證啟程是否應可用「記住我」功能。請記得，啟用該功能標示該啟程將永久可用，直"
#~ "到使用者手動登出應用程式："

# File: docs/8.x/authentication.md, line: 328
# File: docs/master/authentication.md, line: 328
#, no-wrap
#~ msgid "    Auth::loginUsingId(1, $remember = true);\n"
#~ msgstr "    Auth::loginUsingId(1, $remember = true);\n"

# File: docs/8.x/authentication.md, line: 330
# File: docs/master/authentication.md, line: 330
#, no-wrap
#~ msgid "<a name=\"authenticate-a-user-once\"></a>\n"
#~ msgstr "<a name=\"authenticate-a-user-once\"></a>\n"

# File: docs/8.x/authentication.md, line: 330
# File: docs/master/authentication.md, line: 330
#, no-wrap
#~ msgid "Authenticate A User Once"
#~ msgstr "僅驗證使用者一次"

# File: docs/8.x/authentication.md, line: 333
# File: docs/master/authentication.md, line: 333
#~ msgid ""
#~ "You may use the `once` method to authenticate a user with the application "
#~ "for a single request. No sessions or cookies will be utilized when "
#~ "calling this method:"
#~ msgstr ""
#~ "可以使用 `once` 方法來只在單一請求內驗證使用者。呼叫此方法時不會使用到 "
#~ "Session 或 Cookie："

# File: docs/8.x/authentication.md, line: 337
# File: docs/master/authentication.md, line: 337
#, no-wrap
#~ msgid ""
#~ "    if (Auth::once($credentials)) {\n"
#~ "        //\n"
#~ "    }\n"
#~ msgstr ""
#~ "    if (Auth::once($credentials)) {\n"
#~ "        //\n"
#~ "    }\n"

# File: docs/8.x/authentication.md, line: 339
# File: docs/master/authentication.md, line: 339
#, no-wrap
#~ msgid "<a name=\"http-basic-authentication\"></a>\n"
#~ msgstr "<a name=\"http-basic-authentication\"></a>\n"

# File: docs/8.x/authentication.md, line: 339
# File: docs/master/authentication.md, line: 339
#, no-wrap
#~ msgid "HTTP Basic Authentication"
#~ msgstr "HTTP 基本驗證"

# File: docs/8.x/authentication.md, line: 342
# File: docs/master/authentication.md, line: 342
#~ msgid ""
#~ "[HTTP Basic Authentication](https://en.wikipedia.org/wiki/"
#~ "Basic_access_authentication) provides a quick way to authenticate users "
#~ "of your application without setting up a dedicated \"login\" page. To get "
#~ "started, attach the `auth.basic` [middleware](/docs/{{version}}/"
#~ "middleware) to a route. The `auth.basic` middleware is included with the "
#~ "Laravel framework, so you do not need to define it:"
#~ msgstr ""
#~ "[HTTP 基本驗證](https://zh.wikipedia.org/zh-tw/HTTP%E5%9F%BA%E6%9C%AC"
#~ "%E8%AE%A4%E8%AF%81) 提供了一種不需要設定專屬「登入」頁面而快速驗證應用程式"
#~ "使用者的方法。要進行 HTTP 基本驗證，請將 `auth.basic` [中間層](/docs/"
#~ "{{version}}/middleware) 加到路由上。`auth.basic` 中間層已包含在 Laravel 框"
#~ "架內，不需要自行定義："

# File: docs/8.x/authentication.md, line: 346
# File: docs/master/authentication.md, line: 346
#, no-wrap
#~ msgid ""
#~ "    Route::get('/profile', function () {\n"
#~ "        // Only authenticated users may access this route...\n"
#~ "    })->middleware('auth.basic');\n"
#~ msgstr ""
#~ "    Route::get('/profile', function () {\n"
#~ "        // Only authenticated users may access this route...\n"
#~ "    })->middleware('auth.basic');\n"

# File: docs/8.x/authentication.md, line: 348
# File: docs/master/authentication.md, line: 348
#~ msgid ""
#~ "Once the middleware has been attached to the route, you will "
#~ "automatically be prompted for credentials when accessing the route in "
#~ "your browser. By default, the `auth.basic` middleware will assume the "
#~ "`email` column on your `users` database table is the user's \"username\"."
#~ msgstr ""
#~ "將該中間層加到路由上後，在瀏覽器上存取該路由時會自動被提示帳號密碼。預設情"
#~ "況下，`auth.basic` 中間層會假設 `email` 欄位是 `users` 資料表中的使用者"
#~ "「帳號」欄位。"

# File: docs/8.x/authentication.md, line: 350
# File: docs/master/authentication.md, line: 350
#, no-wrap
#~ msgid "<a name=\"a-note-on-fastcgi\"></a>\n"
#~ msgstr "<a name=\"a-note-on-fastcgi\"></a>\n"

# File: docs/8.x/authentication.md, line: 350
# File: docs/master/authentication.md, line: 350
#, no-wrap
#~ msgid "A Note On FastCGI"
#~ msgstr "FastCGI 備註"

# File: docs/8.x/authentication.md, line: 353
# File: docs/master/authentication.md, line: 353
#~ msgid ""
#~ "If you are using PHP FastCGI and Apache to serve your Laravel "
#~ "application, HTTP Basic authentication may not work correctly. To correct "
#~ "these problems, the following lines may be added to your application's `."
#~ "htaccess` file:"
#~ msgstr ""
#~ "若使用 PHP FastCGI 與 Apache 來提供 Laravel 應用程式，則 HTTP 基本驗證可能"
#~ "不會正確運作。要修正此一問題，可以將下列幾行加到應用程式的 `.htaccess` 檔"
#~ "案中："

# File: docs/8.x/authentication.md, line: 356
# File: docs/master/authentication.md, line: 356
#, no-wrap
#~ msgid ""
#~ "    RewriteCond %{HTTP:Authorization} ^(.+)$\n"
#~ "    RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]\n"
#~ msgstr ""
#~ "    RewriteCond %{HTTP:Authorization} ^(.+)$\n"
#~ "    RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]\n"

# File: docs/8.x/authentication.md, line: 358
# File: docs/master/authentication.md, line: 358
#, no-wrap
#~ msgid "<a name=\"stateless-http-basic-authentication\"></a>\n"
#~ msgstr "<a name=\"stateless-http-basic-authentication\"></a>\n"

# File: docs/8.x/authentication.md, line: 358
# File: docs/master/authentication.md, line: 358
#, no-wrap
#~ msgid "Stateless HTTP Basic Authentication"
#~ msgstr "無周邊 HTTP 基本驗證"

# File: docs/8.x/authentication.md, line: 361
# File: docs/master/authentication.md, line: 361
#~ msgid ""
#~ "You may also use HTTP Basic Authentication without setting a user "
#~ "identifier cookie in the session. This is primarily helpful if you choose "
#~ "to use HTTP Authentication to authenticate requests to your application's "
#~ "API. To accomplish this, [define a middleware](/docs/{{version}}/"
#~ "middleware) that calls the `onceBasic` method. If no response is returned "
#~ "by the `onceBasic` method, the request may be passed further into the "
#~ "application:"
#~ msgstr ""
#~ "也可以於不在 Session 內寫入可識別使用者 Cookie 的情況下使用 HTTP 基本驗"
#~ "證。通常適用於想通過 HTTP 驗證來驗證應用程式 API 請求時。為此，請先 [定義"
#~ "一個中間層](/docs/{{version}}/middleware)，並於該中間層內呼叫 `onceBasic` "
#~ "方法。若 `onceBasic` 方法無回傳值，則該請求將會進一步被傳遞到應用程式中："

# File: docs/8.x/authentication.md, line: 365
# File: docs/8.x/billing.md, line: 536
# File: docs/8.x/cashier-paddle.md, line: 528
# File: docs/8.x/csrf.md, line: 76
# File: docs/8.x/middleware.md, line: 32
# File: docs/8.x/middleware.md, line: 69
# File: docs/8.x/middleware.md, line: 87
# File: docs/8.x/middleware.md, line: 239
# File: docs/8.x/requests.md, line: 479
# File: docs/8.x/urls.md, line: 169
# File: docs/master/authentication.md, line: 365
# File: docs/master/billing.md, line: 497
# File: docs/master/cashier-paddle.md, line: 488
# File: docs/master/csrf.md, line: 76
# File: docs/master/middleware.md, line: 32
# File: docs/master/middleware.md, line: 69
# File: docs/master/middleware.md, line: 87
# File: docs/master/middleware.md, line: 239
# File: docs/master/requests.md, line: 474
# File: docs/master/urls.md, line: 169
#, no-wrap
#~ msgid "    namespace App\\Http\\Middleware;\n"
#~ msgstr "    namespace App\\Http\\Middleware;\n"

# File: docs/8.x/authentication.md, line: 381
# File: docs/master/authentication.md, line: 381
#, no-wrap
#~ msgid ""
#~ "    class AuthenticateOnceWithBasicAuth\n"
#~ "    {\n"
#~ "        /**\n"
#~ "         * Handle an incoming request.\n"
#~ "         *\n"
#~ "         * @param  \\Illuminate\\Http\\Request  $request\n"
#~ "         * @param  \\Closure  $next\n"
#~ "         * @return mixed\n"
#~ "         */\n"
#~ "        public function handle($request, $next)\n"
#~ "        {\n"
#~ "            return Auth::onceBasic() ?: $next($request);\n"
#~ "        }\n"
#~ msgstr ""
#~ "    class AuthenticateOnceWithBasicAuth\n"
#~ "    {\n"
#~ "        /**\n"
#~ "         * Handle an incoming request.\n"
#~ "         *\n"
#~ "         * @param  \\Illuminate\\Http\\Request  $request\n"
#~ "         * @param  \\Closure  $next\n"
#~ "         * @return mixed\n"
#~ "         */\n"
#~ "        public function handle($request, $next)\n"
#~ "        {\n"
#~ "            return Auth::onceBasic() ?: $next($request);\n"
#~ "        }\n"

# File: docs/8.x/authentication.md, line: 383
# File: docs/8.x/middleware.md, line: 262
# File: docs/master/authentication.md, line: 383
# File: docs/master/middleware.md, line: 262
#, no-wrap
#~ msgid "    }\n"
#~ msgstr "    }\n"

# File: docs/8.x/authentication.md, line: 385
# File: docs/master/authentication.md, line: 385
#~ msgid ""
#~ "Next, [register the route middleware](/docs/{{version}}/"
#~ "middleware#registering-middleware) and attach it to a route:"
#~ msgstr ""
#~ "接著，請 [註冊路由中間層](/docs/{{version}}/middleware#registering-"
#~ "middleware) 並將其附加到路由上："

# File: docs/8.x/authentication.md, line: 389
# File: docs/master/authentication.md, line: 389
#, no-wrap
#~ msgid ""
#~ "    Route::get('/api/user', function () {\n"
#~ "        // Only authenticated users may access this route...\n"
#~ "    })->middleware('auth.basic.once');\n"
#~ msgstr ""
#~ "    Route::get('/api/user', function () {\n"
#~ "        // Only authenticated users may access this route...\n"
#~ "    })->middleware('auth.basic.once');\n"

# File: docs/8.x/authentication.md, line: 391
# File: docs/master/authentication.md, line: 391
#, no-wrap
#~ msgid "<a name=\"logging-out\"></a>\n"
#~ msgstr "<a name=\"logging-out\"></a>\n"

# File: docs/8.x/authentication.md, line: 391
# File: docs/master/authentication.md, line: 391
#, no-wrap
#~ msgid "Logging Out"
#~ msgstr "登出"

# File: docs/8.x/authentication.md, line: 394
# File: docs/master/authentication.md, line: 394
#~ msgid ""
#~ "To manually log users out of your application, you may use the `logout` "
#~ "method provided by the `Auth` facade. This will remove the authentication "
#~ "information from the user's session so that subsequent requests are not "
#~ "authenticated."
#~ msgstr ""
#~ "若要手動將使用者自應用程式登出，可以使用 `Auth` Facade 提供的 `logout` 方"
#~ "法。該方法會從使用者的 Session 中將驗證資訊移除，如此一來接下來的請求都將"
#~ "不會被驗證。"

# File: docs/8.x/authentication.md, line: 396
# File: docs/master/authentication.md, line: 396
#~ msgid ""
#~ "In addition to calling the `logout` method, it is recommended that you "
#~ "invalidate the user's session and regenerate their [CSRF token](/docs/"
#~ "{{version}}/csrf). After logging the user out, you would typically "
#~ "redirect the user to the root of your application:"
#~ msgstr ""
#~ "除了呼叫 `logout` 方法外，也建議將使用者的 Session 無效化，並為使用者重新"
#~ "產生 [CSRF 權杖](/docs/{{version}}/csrf)。登出使用者後，我們通常會將使用者"
#~ "重新導向回應用程式根目錄："

# File: docs/8.x/authentication.md, line: 409
# File: docs/master/authentication.md, line: 409
#, no-wrap
#~ msgid ""
#~ "    /**\n"
#~ "     * Log the user out of the application.\n"
#~ "     *\n"
#~ "     * @param  \\Illuminate\\Http\\Request $request\n"
#~ "     * @return \\Illuminate\\Http\\Response\n"
#~ "     */\n"
#~ "    public function logout(Request $request)\n"
#~ "    {\n"
#~ "        Auth::logout();\n"
#~ msgstr ""
#~ "    /**\n"
#~ "     * Log the user out of the application.\n"
#~ "     *\n"
#~ "     * @param  \\Illuminate\\Http\\Request $request\n"
#~ "     * @return \\Illuminate\\Http\\Response\n"
#~ "     */\n"
#~ "    public function logout(Request $request)\n"
#~ "    {\n"
#~ "        Auth::logout();\n"

# File: docs/8.x/authentication.md, line: 411
# File: docs/master/authentication.md, line: 411
#, no-wrap
#~ msgid "        $request->session()->invalidate();\n"
#~ msgstr "        $request->session()->invalidate();\n"

# File: docs/8.x/authentication.md, line: 413
# File: docs/master/authentication.md, line: 413
#, no-wrap
#~ msgid "        $request->session()->regenerateToken();\n"
#~ msgstr "        $request->session()->regenerateToken();\n"

# File: docs/8.x/authentication.md, line: 416
# File: docs/master/authentication.md, line: 416
#, no-wrap
#~ msgid ""
#~ "        return redirect('/');\n"
#~ "    }\n"
#~ msgstr ""
#~ "        return redirect('/');\n"
#~ "    }\n"

# File: docs/8.x/authentication.md, line: 418
# File: docs/master/authentication.md, line: 418
#, no-wrap
#~ msgid "<a name=\"invalidating-sessions-on-other-devices\"></a>\n"
#~ msgstr "<a name=\"invalidating-sessions-on-other-devices\"></a>\n"

# File: docs/8.x/authentication.md, line: 418
# File: docs/master/authentication.md, line: 418
#, no-wrap
#~ msgid "Invalidating Sessions On Other Devices"
#~ msgstr "將其他裝置上的 Session 無效化"

# File: docs/8.x/authentication.md, line: 421
# File: docs/master/authentication.md, line: 421
#~ msgid ""
#~ "Laravel also provides a mechanism for invalidating and \"logging out\" a "
#~ "user's sessions that are active on other devices without invalidating the "
#~ "session on their current device. This feature is typically utilized when "
#~ "a user is changing or updating their password and you would like to "
#~ "invalidate sessions on other devices while keeping the current device "
#~ "authenticated."
#~ msgstr ""
#~ "Laravel 也提供了另一個機制，可以用來在不影響目前裝置上 Session 的情況下將"
#~ "使用者在其他裝置的 Session 無效化並登出使用者。該功能通常適用於使用者更改"
#~ "密碼、或是想將其他 Session 無效化但想讓目前裝置保持驗證的情況。"

# File: docs/8.x/authentication.md, line: 423
# File: docs/master/authentication.md, line: 423
#~ msgid ""
#~ "Before getting started, you should make sure that the `Illuminate\\Session"
#~ "\\Middleware\\AuthenticateSession` middleware is present and un-commented "
#~ "in your `App\\Http\\Kernel` class' `web` middleware group:"
#~ msgstr ""
#~ "在開始前，請先確保 `Illuminate\\Session\\Middleware\\AuthenticateSession` "
#~ "中間層有出現在 `App\\Http\\Kernel` 類別的 `web` 中間層群組中，並且未被註解"
#~ "掉："

# File: docs/8.x/authentication.md, line: 429
# File: docs/master/authentication.md, line: 429
#, no-wrap
#~ msgid ""
#~ "    'web' => [\n"
#~ "        // ...\n"
#~ "        \\Illuminate\\Session\\Middleware\\AuthenticateSession::class,\n"
#~ "        // ...\n"
#~ "    ],\n"
#~ msgstr ""
#~ "    'web' => [\n"
#~ "        // ...\n"
#~ "        \\Illuminate\\Session\\Middleware\\AuthenticateSession::class,\n"
#~ "        // ...\n"
#~ "    ],\n"

# File: docs/8.x/authentication.md, line: 431
# File: docs/master/authentication.md, line: 431
#~ msgid ""
#~ "Then, you may use the `logoutOtherDevices` method provided by the `Auth` "
#~ "facade. This method requires the user to confirm their current password, "
#~ "which your application should accept through an input form:"
#~ msgstr ""
#~ "接著，可以使用 `Auth` Facade 提供的 `logoutOtherDevices` 方法。該方法會需"
#~ "要使用者確認目前密碼，而你的應用程式應通過一個輸入表單來接收密碼："

# File: docs/8.x/authentication.md, line: 435
# File: docs/master/authentication.md, line: 435
#, no-wrap
#~ msgid "    Auth::logoutOtherDevices($currentPassword);\n"
#~ msgstr "    Auth::logoutOtherDevices($currentPassword);\n"

# File: docs/8.x/authentication.md, line: 437
# File: docs/master/authentication.md, line: 437
#~ msgid ""
#~ "When the `logoutOtherDevices` method is invoked, the user's other "
#~ "sessions will be invalidated entirely, meaning they will be \"logged out"
#~ "\" of all guards they were previously authenticated by."
#~ msgstr ""
#~ "當 `logoutOtherDevices` 方法被叫用後，使用者的其他 Session 將被立即無效"
#~ "化。這代表，使用者會被從其他所有已驗證過的 Guard 中被「登出」。"

# File: docs/8.x/authentication.md, line: 439
# File: docs/8.x/fortify.md, line: 476
# File: docs/master/authentication.md, line: 439
# File: docs/master/fortify.md, line: 476
#, no-wrap
#~ msgid "<a name=\"password-confirmation\"></a>\n"
#~ msgstr "<a name=\"password-confirmation\"></a>\n"

# File: docs/8.x/authentication.md, line: 439
# File: docs/8.x/fortify.md, line: 476
# File: docs/master/authentication.md, line: 439
# File: docs/master/fortify.md, line: 476
#, no-wrap
#~ msgid "Password Confirmation"
#~ msgstr "密碼確認"

# File: docs/8.x/authentication.md, line: 442
# File: docs/master/authentication.md, line: 442
#~ msgid ""
#~ "While building your application, you may occasionally have actions that "
#~ "should require the user to confirm their password before the action is "
#~ "performed or before the user is redirected to a sensitive area of the "
#~ "application. Laravel includes built-in middleware to make this process a "
#~ "breeze. Implementing this feature will require you to define two routes: "
#~ "one route to display a view asking the user to confirm their password and "
#~ "another route to confirm that the password is valid and redirect the user "
#~ "to their intended destination."
#~ msgstr ""
#~ "在建立應用程式是，有時可能會需要使用者在執行某個操作前、或是在使用者被重新"
#~ "導向到應用程式機敏區域前要求使用者確認密碼。Laravel 提供了一個內建的中間層"
#~ "來讓這個過程變得很輕鬆。要實作這項功能會需要定義兩個路由：一個用於顯示並詢"
#~ "問使用者確認密碼的路由，另一個用於確認密碼有效並將使用者重新導向至預期目的"
#~ "地的路由。"

# File: docs/8.x/authentication.md, line: 444
# File: docs/master/authentication.md, line: 444
#, no-wrap
#~ msgid "> {tip} The following documentation discusses how to integrate with Laravel's password confirmation features directly; however, if you would like to get started more quickly, the [Laravel application starter kits](/docs/{{version}}/starter-kits) include support for this feature!\n"
#~ msgstr "> {tip} 下列說明文件討論了如何直接整合 Laravel 的密碼驗證功能。但若你想更快速地入門， [Laravel 應用程式入門套件](/docs/{{version}}/starter-kits) 包含了這項功能的支援！\n"

# File: docs/8.x/authentication.md, line: 446
# File: docs/master/authentication.md, line: 446
#, no-wrap
#~ msgid "<a name=\"password-confirmation-configuration\"></a>\n"
#~ msgstr "<a name=\"password-confirmation-configuration\"></a>\n"

# File: docs/8.x/authentication.md, line: 446
# File: docs/8.x/billing.md, line: 111
# File: docs/8.x/broadcasting.md, line: 61
# File: docs/8.x/broadcasting.md, line: 607
# File: docs/8.x/cache.md, line: 33
# File: docs/8.x/cashier-paddle.md, line: 100
# File: docs/8.x/configuration.md, line: 1
# File: docs/8.x/database.md, line: 25
# File: docs/8.x/encryption.md, line: 13
# File: docs/8.x/errors.md, line: 19
# File: docs/8.x/filesystem.md, line: 27
# File: docs/8.x/hashing.md, line: 18
# File: docs/8.x/horizon.md, line: 42
# File: docs/8.x/logging.md, line: 25
# File: docs/8.x/mail.md, line: 33
# File: docs/8.x/packages.md, line: 84
# File: docs/8.x/passport.md, line: 205
# File: docs/8.x/redis.md, line: 27
# File: docs/8.x/sanctum.md, line: 81
# File: docs/8.x/sanctum.md, line: 211
# File: docs/8.x/scout.md, line: 84
# File: docs/8.x/session.md, line: 25
# File: docs/8.x/socialite.md, line: 33
# File: docs/8.x/telescope.md, line: 96
# File: docs/master/authentication.md, line: 446
# File: docs/master/billing.md, line: 109
# File: docs/master/broadcasting.md, line: 61
# File: docs/master/broadcasting.md, line: 607
# File: docs/master/cache.md, line: 33
# File: docs/master/cashier-paddle.md, line: 91
# File: docs/master/configuration.md, line: 1
# File: docs/master/database.md, line: 25
# File: docs/master/encryption.md, line: 13
# File: docs/master/errors.md, line: 19
# File: docs/master/filesystem.md, line: 27
# File: docs/master/hashing.md, line: 18
# File: docs/master/horizon.md, line: 42
# File: docs/master/logging.md, line: 25
# File: docs/master/mail.md, line: 33
# File: docs/master/packages.md, line: 84
# File: docs/master/passport.md, line: 203
# File: docs/master/redis.md, line: 27
# File: docs/master/sanctum.md, line: 81
# File: docs/master/sanctum.md, line: 211
# File: docs/master/scout.md, line: 79
# File: docs/master/session.md, line: 25
# File: docs/master/socialite.md, line: 33
# File: docs/master/telescope.md, line: 96
#, no-wrap
#~ msgid "Configuration"
#~ msgstr "組態設定"

# File: docs/8.x/authentication.md, line: 449
# File: docs/master/authentication.md, line: 449
#~ msgid ""
#~ "After confirming their password, a user will not be asked to confirm "
#~ "their password again for three hours. However, you may configure the "
#~ "length of time before the user is re-prompted for their password by "
#~ "changing the value of the `password_timeout` configuration value within "
#~ "your application's `config/auth.php` configuration file."
#~ msgstr ""
#~ "確認使用者密碼後，接下來的三小時內就不會再次向使用者詢問密碼了。但是，只需"
#~ "要更改應用程式 `config/auth.php` 組態設定檔中的 `password_timeout` 組態設"
#~ "定，就可以調整要重新詢問使用者密碼的時間長度。"

# File: docs/8.x/authentication.md, line: 451
# File: docs/master/authentication.md, line: 451
#, no-wrap
#~ msgid "<a name=\"password-confirmation-routing\"></a>\n"
#~ msgstr "<a name=\"password-confirmation-routing\"></a>\n"

# File: docs/8.x/authentication.md, line: 451
# File: docs/8.x/lifecycle.md, line: 52
# File: docs/8.x/passwords.md, line: 43
# File: docs/8.x/routing.md, line: 1
# File: docs/8.x/socialite.md, line: 49
# File: docs/8.x/upgrade.md, line: 301
# File: docs/8.x/verification.md, line: 57
# File: docs/master/authentication.md, line: 451
# File: docs/master/lifecycle.md, line: 52
# File: docs/master/passwords.md, line: 33
# File: docs/master/routing.md, line: 1
# File: docs/master/socialite.md, line: 49
# File: docs/master/upgrade.md, line: 301
# File: docs/master/verification.md, line: 57
#, no-wrap
#~ msgid "Routing"
#~ msgstr "路由"

# File: docs/8.x/authentication.md, line: 454
# File: docs/master/authentication.md, line: 454
#, no-wrap
#~ msgid "<a name=\"the-password-confirmation-form\"></a>\n"
#~ msgstr "<a name=\"the-password-confirmation-form\"></a>\n"

# File: docs/8.x/authentication.md, line: 454
# File: docs/master/authentication.md, line: 454
#, no-wrap
#~ msgid "The Password Confirmation Form"
#~ msgstr "密碼確認表單"

# File: docs/8.x/authentication.md, line: 457
# File: docs/master/authentication.md, line: 457
#~ msgid ""
#~ "First, we will define a route to display a view that requests that the "
#~ "user confirm their password:"
#~ msgstr "首先，我們先定義用來顯示要求使用者確認密碼的路由："

# File: docs/8.x/authentication.md, line: 461
# File: docs/master/authentication.md, line: 461
#, no-wrap
#~ msgid ""
#~ "    Route::get('/confirm-password', function () {\n"
#~ "        return view('auth.confirm-password');\n"
#~ "    })->middleware('auth')->name('password.confirm');\n"
#~ msgstr ""
#~ "    Route::get('/confirm-password', function () {\n"
#~ "        return view('auth.confirm-password');\n"
#~ "    })->middleware('auth')->name('password.confirm');\n"

# File: docs/8.x/authentication.md, line: 463
# File: docs/master/authentication.md, line: 463
#~ msgid ""
#~ "As you might expect, the view that is returned by this route should have "
#~ "a form containing a `password` field. In addition, feel free to include "
#~ "text within the view that explains that the user is entering a protected "
#~ "area of the application and must confirm their password."
#~ msgstr ""
#~ "如同預想的一樣，這個路由所回傳的檢視器應包含一個含有 `password` 欄位的表"
#~ "單。此外，也可以隨意在該檢視器內加上文字說明來告訴使用者正在進入應用程式中"
#~ "收保護的區域，必須要使用者輸入密碼進行確認。"

# File: docs/8.x/authentication.md, line: 465
# File: docs/master/authentication.md, line: 465
#, no-wrap
#~ msgid "<a name=\"confirming-the-password\"></a>\n"
#~ msgstr "<a name=\"confirming-the-password\"></a>\n"

# File: docs/8.x/authentication.md, line: 465
# File: docs/master/authentication.md, line: 465
#, no-wrap
#~ msgid "Confirming The Password"
#~ msgstr "確認密碼"

# File: docs/8.x/authentication.md, line: 468
# File: docs/master/authentication.md, line: 468
#~ msgid ""
#~ "Next, we will define a route that will handle the form request from the "
#~ "\"confirm password\" view. This route will be responsible for validating "
#~ "the password and redirecting the user to their intended destination:"
#~ msgstr ""
#~ "接著，我們來定義要處理來自「確認密碼」檢視器傳來的表單請求的路由。該路由會"
#~ "負責驗證使用者的密碼，並將使用者重新導向至原本預定的目的地。"

# File: docs/8.x/authentication.md, line: 472
# File: docs/master/authentication.md, line: 472
#, no-wrap
#~ msgid ""
#~ "    use Illuminate\\Http\\Request;\n"
#~ "    use Illuminate\\Support\\Facades\\Hash;\n"
#~ "    use Illuminate\\Support\\Facades\\Redirect;\n"
#~ msgstr ""
#~ "    use Illuminate\\Http\\Request;\n"
#~ "    use Illuminate\\Support\\Facades\\Hash;\n"
#~ "    use Illuminate\\Support\\Facades\\Redirect;\n"

# File: docs/8.x/authentication.md, line: 479
# File: docs/master/authentication.md, line: 479
#, no-wrap
#~ msgid ""
#~ "    Route::post('/confirm-password', function (Request $request) {\n"
#~ "        if (! Hash::check($request->password, $request->user()->password)) {\n"
#~ "            return back()->withErrors([\n"
#~ "                'password' => ['The provided password does not match our records.']\n"
#~ "            ]);\n"
#~ "        }\n"
#~ msgstr ""
#~ "    Route::post('/confirm-password', function (Request $request) {\n"
#~ "        if (! Hash::check($request->password, $request->user()->password)) {\n"
#~ "            return back()->withErrors([\n"
#~ "                'password' => ['The provided password does not match our records.']\n"
#~ "            ]);\n"
#~ "        }\n"

# File: docs/8.x/authentication.md, line: 481
# File: docs/master/authentication.md, line: 481
#, no-wrap
#~ msgid "        $request->session()->passwordConfirmed();\n"
#~ msgstr "        $request->session()->passwordConfirmed();\n"

# File: docs/8.x/authentication.md, line: 484
# File: docs/master/authentication.md, line: 484
#, no-wrap
#~ msgid ""
#~ "        return redirect()->intended();\n"
#~ "    })->middleware(['auth', 'throttle:6,1'])->name('password.confirm');\n"
#~ msgstr ""
#~ "        return redirect()->intended();\n"
#~ "    })->middleware(['auth', 'throttle:6,1'])->name('password.confirm');\n"

# File: docs/8.x/authentication.md, line: 486
# File: docs/master/authentication.md, line: 486
#~ msgid ""
#~ "Before moving on, let's examine this route in more detail. First, the "
#~ "request's `password` field is determined to actually match the "
#~ "authenticated user's password. If the password is valid, we need to "
#~ "inform Laravel's session that the user has confirmed their password. The "
#~ "`passwordConfirmed` method will set a timestamp in the user's session "
#~ "that Laravel can use to determine when the user last confirmed their "
#~ "password. Finally, we can redirect the user to their intended destination."
#~ msgstr ""
#~ "在繼續之前，來更仔細地看看這個路由。首先，會判斷請求的 `password` 是否真的"
#~ "符合已驗證使用者的密碼。若密碼有效，則我們會通知 Laravel 的 Session 該使用"
#~ "者已確認密碼了。`passwordConfirmed` 方法會在使用者的 Session 上設定一個時"
#~ "間戳記，這樣 Laravel 便能判斷使用者上次確認密碼是什麼時候。最後，我們將使"
#~ "用者重新導向至原本預定的目的地。"

# File: docs/8.x/authentication.md, line: 488
# File: docs/master/authentication.md, line: 488
#, no-wrap
#~ msgid "<a name=\"password-confirmation-protecting-routes\"></a>\n"
#~ msgstr "<a name=\"password-confirmation-protecting-routes\"></a>\n"

# File: docs/8.x/authentication.md, line: 491
# File: docs/master/authentication.md, line: 491
#~ msgid ""
#~ "You should ensure that any route that performs an action which requires "
#~ "recent password confirmation is assigned the `password.confirm` "
#~ "middleware. This middleware is included with the default installation of "
#~ "Laravel and will automatically store the user's intended destination in "
#~ "the session so that the user may be redirected to that location after "
#~ "confirming their password. After storing the user's intended destination "
#~ "in the session, the middleware will redirect the user to the `password."
#~ "confirm` [named route](/docs/{{version}}/routing#named-routes):"
#~ msgstr ""
#~ "任何有需要確保最近驗證過密碼操作的路由都應設定 `password.confirm` 中間層。"
#~ "該中間層已包含在預設 Laravel 安裝內，且會自動將使用者預定的目的地保存在 "
#~ "Session 內。因此，使用者在確認密碼後會被重新導向之該頁面。將使用者預定的目"
#~ "的地保存在 Session 後，該中間層會將使用者重新導向之 `password.confirm` 這"
#~ "個[命名路由](/docs/{{version}}/routing#named-routes)："

# File: docs/8.x/authentication.md, line: 495
# File: docs/master/authentication.md, line: 495
#, no-wrap
#~ msgid ""
#~ "    Route::get('/settings', function () {\n"
#~ "        // ...\n"
#~ "    })->middleware(['password.confirm']);\n"
#~ msgstr ""
#~ "    Route::get('/settings', function () {\n"
#~ "        // ...\n"
#~ "    })->middleware(['password.confirm']);\n"

# File: docs/8.x/authentication.md, line: 499
# File: docs/master/authentication.md, line: 499
#, no-wrap
#~ msgid ""
#~ "    Route::post('/settings', function () {\n"
#~ "        // ...\n"
#~ "    })->middleware(['password.confirm']);\n"
#~ msgstr ""
#~ "    Route::post('/settings', function () {\n"
#~ "        // ...\n"
#~ "    })->middleware(['password.confirm']);\n"

# File: docs/8.x/authentication.md, line: 501
# File: docs/master/authentication.md, line: 501
#, no-wrap
#~ msgid "<a name=\"adding-custom-guards\"></a>\n"
#~ msgstr "<a name=\"adding-custom-guards\"></a>\n"

# File: docs/8.x/authentication.md, line: 501
# File: docs/master/authentication.md, line: 501
#, no-wrap
#~ msgid "Adding Custom Guards"
#~ msgstr "新增自定 Guard"

# File: docs/8.x/authentication.md, line: 504
# File: docs/master/authentication.md, line: 504
#~ msgid ""
#~ "You may define your own authentication guards using the `extend` method "
#~ "on the `Auth` facade. You should place your call to the `extend` method "
#~ "within a [service provider](/docs/{{version}}/providers). Since Laravel "
#~ "already ships with an `AuthServiceProvider`, we can place the code in "
#~ "that provider:"
#~ msgstr ""
#~ "可以通過 `Auth` Facade 中的 `extend` 方法來定義你自己的驗證 Guard。"
#~ "`extend` 方法的呼叫應放置於一個 [服務提供者](/docs/{{version}}/providers) "
#~ "內。由於 Laravel 預設已附帶了 `AuthServiceProvider`，因此我們可以將程式碼"
#~ "放在這個提供者內："

# File: docs/8.x/authentication.md, line: 512
# File: docs/master/authentication.md, line: 512
#, no-wrap
#~ msgid ""
#~ "    use App\\Services\\Auth\\JwtGuard;\n"
#~ "    use Illuminate\\Foundation\\Support\\Providers\\AuthServiceProvider as ServiceProvider;\n"
#~ "    use Illuminate\\Support\\Facades\\Auth;\n"
#~ msgstr ""
#~ "    use App\\Services\\Auth\\JwtGuard;\n"
#~ "    use Illuminate\\Foundation\\Support\\Providers\\AuthServiceProvider as ServiceProvider;\n"
#~ "    use Illuminate\\Support\\Facades\\Auth;\n"

# File: docs/8.x/authentication.md, line: 523
# File: docs/8.x/authentication.md, line: 597
# File: docs/master/authentication.md, line: 523
# File: docs/master/authentication.md, line: 597
#, no-wrap
#~ msgid ""
#~ "    class AuthServiceProvider extends ServiceProvider\n"
#~ "    {\n"
#~ "        /**\n"
#~ "         * Register any application authentication / authorization services.\n"
#~ "         *\n"
#~ "         * @return void\n"
#~ "         */\n"
#~ "        public function boot()\n"
#~ "        {\n"
#~ "            $this->registerPolicies();\n"
#~ msgstr ""
#~ "    class AuthServiceProvider extends ServiceProvider\n"
#~ "    {\n"
#~ "        /**\n"
#~ "         * Register any application authentication / authorization services.\n"
#~ "         *\n"
#~ "         * @return void\n"
#~ "         */\n"
#~ "        public function boot()\n"
#~ "        {\n"
#~ "            $this->registerPolicies();\n"

# File: docs/8.x/authentication.md, line: 526
# File: docs/master/authentication.md, line: 526
#, no-wrap
#~ msgid ""
#~ "            Auth::extend('jwt', function ($app, $name, array $config) {\n"
#~ "                // Return an instance of Illuminate\\Contracts\\Auth\\Guard...\n"
#~ msgstr ""
#~ "            Auth::extend('jwt', function ($app, $name, array $config) {\n"
#~ "                // Return an instance of Illuminate\\Contracts\\Auth\\Guard...\n"

# File: docs/8.x/authentication.md, line: 531
# File: docs/master/authentication.md, line: 531
#, no-wrap
#~ msgid ""
#~ "                return new JwtGuard(Auth::createUserProvider($config['provider']));\n"
#~ "            });\n"
#~ "        }\n"
#~ "    }\n"
#~ msgstr ""
#~ "                return new JwtGuard(Auth::createUserProvider($config['provider']));\n"
#~ "            });\n"
#~ "        }\n"
#~ "    }\n"

# File: docs/8.x/authentication.md, line: 533
# File: docs/master/authentication.md, line: 533
#~ msgid ""
#~ "As you can see in the example above, the callback passed to the `extend` "
#~ "method should return an implementation of `Illuminate\\Contracts\\Auth"
#~ "\\Guard`. This interface contains a few methods you will need to "
#~ "implement to define a custom guard. Once your custom guard has been "
#~ "defined, you may reference the guard in the `guards` configuration of "
#~ "your `auth.php` configuration file:"
#~ msgstr ""
#~ "如同在上方範例中看到的一樣，傳給 `extend` 方法的閉包應回傳 `Illuminate"
#~ "\\Contracts\\Auth\\Guard` 的實作。\n"
#~ "`Illuminate\\Contracts\\Auth\\Guard` 這個界面中有一些定義自定 Guard 所需要"
#~ "實作的方法。定義好自定 Guard 後，就能在 `auth.php` 組態設定檔中的 "
#~ "`guards` 設定來參照自定 Guard。"

# File: docs/8.x/authentication.md, line: 540
# File: docs/master/authentication.md, line: 540
#, no-wrap
#~ msgid ""
#~ "    'guards' => [\n"
#~ "        'api' => [\n"
#~ "            'driver' => 'jwt',\n"
#~ "            'provider' => 'users',\n"
#~ "        ],\n"
#~ "    ],\n"
#~ msgstr ""
#~ "    'guards' => [\n"
#~ "        'api' => [\n"
#~ "            'driver' => 'jwt',\n"
#~ "            'provider' => 'users',\n"
#~ "        ],\n"
#~ "    ],\n"

# File: docs/8.x/authentication.md, line: 542
# File: docs/master/authentication.md, line: 542
#, no-wrap
#~ msgid "<a name=\"closure-request-guards\"></a>\n"
#~ msgstr "<a name=\"closure-request-guards\"></a>\n"

# File: docs/8.x/authentication.md, line: 542
# File: docs/master/authentication.md, line: 542
#, no-wrap
#~ msgid "Closure Request Guards"
#~ msgstr "閉包請求 Guard"

# File: docs/8.x/deployment.md, line: 118
# File: docs/8.x/views.md, line: 262
# File: docs/master/deployment.md, line: 119
# File: docs/master/views.md, line: 262
#, no-wrap
#~ msgid "    php artisan view:cache\n"
#~ msgstr "    php artisan view:cache\n"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "## Prologue"
#~ msgstr "## 序"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Release Notes](/docs/{{version}}/releases)"
#~ msgstr "[版本資訊](/docs/{{version}}/release)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Upgrade Guide](/docs/{{version}}/upgrade)"
#~ msgstr "[升級指南](/docs/{{version}}/upgrade)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Contribution Guide](/docs/{{version}}/contributions)"
#~ msgstr "[參與貢獻指南](/docs/{{version}}/contributions)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "## Getting Started"
#~ msgstr "## 入門"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Installation](/docs/{{version}}/installation)"
#~ msgstr "[安裝](/docs/{{version}}/installation)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Configuration](/docs/{{version}}/configuration)"
#~ msgstr "[組態設定](/docs/{{version}}/configuration)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Directory Structure](/docs/{{version}}/structure)"
#~ msgstr "[目錄架構](/docs/{{version}}/structure)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Starter Kits](/docs/{{version}}/starter-kits)"
#~ msgstr "[入門套件](/docs/{{version}}/starter-kits)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Deployment](/docs/{{version}}/deployment)"
#~ msgstr "[部署](/docs/{{version}}/deployment)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "## Architecture Concepts"
#~ msgstr "## 架構概念"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Request Lifecycle](/docs/{{version}}/lifecycle)"
#~ msgstr "[請求的生命週期](/docs/{{version}}/lifecycle)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Service Container](/docs/{{version}}/container)"
#~ msgstr "[服務容器](/docs/{{version}}/container)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Service Providers](/docs/{{version}}/providers)"
#~ msgstr "[服務提供者](/docs/{{version}}/providers)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Facades](/docs/{{version}}/facades)"
#~ msgstr "[Facade](/docs/{{version}}/facades)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "## The Basics"
#~ msgstr "## 基礎"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Routing](/docs/{{version}}/routing)"
#~ msgstr "[路由](/docs/{{version}}/routing)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Middleware](/docs/{{version}}/middleware)"
#~ msgstr "[中間層](/docs/{{version}}/middleware)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[CSRF Protection](/docs/{{version}}/csrf)"
#~ msgstr "[CSRF 保護](/docs/{{version}}/csrf)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Controllers](/docs/{{version}}/controllers)"
#~ msgstr "[控制器](/docs/{{version}}/controllers)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Requests](/docs/{{version}}/requests)"
#~ msgstr "[請求](/docs/{{version}}/requests)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Responses](/docs/{{version}}/responses)"
#~ msgstr "[回應](/docs/{{version}}/responses)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Views](/docs/{{version}}/views)"
#~ msgstr "[檢視器](/docs/{{version}}/views)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Blade Templates](/docs/{{version}}/blade)"
#~ msgstr "[Blade 樣板](/docs/{{version}}/blade)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[URL Generation](/docs/{{version}}/urls)"
#~ msgstr "[產生 URL](/docs/{{version}}/urls)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Session](/docs/{{version}}/session)"
#~ msgstr "[Session](/docs/{{version}}/session)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Validation](/docs/{{version}}/validation)"
#~ msgstr "[表單驗證](/docs/{{version}}/validation)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Error Handling](/docs/{{version}}/errors)"
#~ msgstr "[錯誤處理](/docs/{{version}}/errors)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Logging](/docs/{{version}}/logging)"
#~ msgstr "[日誌](/docs/{{version}}/logging)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "## Digging Deeper"
#~ msgstr "## 深入探討"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Artisan Console](/docs/{{version}}/artisan)"
#~ msgstr "[Artisan 主控台](/docs/{{version}}/artisan)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Broadcasting](/docs/{{version}}/broadcasting)"
#~ msgstr "[廣播](/docs/{{version}}/broadcasting)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Cache](/docs/{{version}}/cache)"
#~ msgstr "[快取](/docs/{{version}}/cache)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Collections](/docs/{{version}}/collections)"
#~ msgstr "[Collection](/docs/{{version}}/collections)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Compiling Assets](/docs/{{version}}/mix)"
#~ msgstr "[編譯資源](/docs/{{version}}/mix)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Contracts](/docs/{{version}}/contracts)"
#~ msgstr "[Contract](/docs/{{version}}/contracts)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Events](/docs/{{version}}/events)"
#~ msgstr "[事件](/docs/{{version}}/events)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[File Storage](/docs/{{version}}/filesystem)"
#~ msgstr "[檔案儲存](/docs/{{version}}/filesystem)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Helpers](/docs/{{version}}/helpers)"
#~ msgstr "[輔助函式](/docs/{{version}}/helpers)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[HTTP Client](/docs/{{version}}/http-client)"
#~ msgstr "[HTTP 用戶端](/docs/{{version}}/http-client)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Localization](/docs/{{version}}/localization)"
#~ msgstr "[本地化](/docs/{{version}}/localization)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Mail](/docs/{{version}}/mail)"
#~ msgstr "[郵件](/docs/{{version}}/mail)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Notifications](/docs/{{version}}/notifications)"
#~ msgstr "[通知](/docs/{{version}}/notifications)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Package Development](/docs/{{version}}/packages)"
#~ msgstr "[套件開發](/docs/{{version}}/packages)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Queues](/docs/{{version}}/queues)"
#~ msgstr "[佇列](/docs/{{version}}/queues)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Task Scheduling](/docs/{{version}}/scheduling)"
#~ msgstr "[任務排程](/docs/{{version}}/scheduling)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "## Security"
#~ msgstr "## 安全性"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Authentication](/docs/{{version}}/authentication)"
#~ msgstr "[驗證](/docs/{{version}}/authentication)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Authorization](/docs/{{version}}/authorization)"
#~ msgstr "[授權](/docs/{{version}}/authorization)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Email Verification](/docs/{{version}}/verification)"
#~ msgstr "[E-Mail 驗證](/docs/{{version}}/verification)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Encryption](/docs/{{version}}/encryption)"
#~ msgstr "[加密](/docs/{{version}}/encryption)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Hashing](/docs/{{version}}/hashing)"
#~ msgstr "[雜湊](/docs/{{version}}/hashing)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Password Reset](/docs/{{version}}/passwords)"
#~ msgstr "[重設密碼](/docs/{{version}}/passwords)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "## Database"
#~ msgstr "## 資料庫"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Getting Started](/docs/{{version}}/database)"
#~ msgstr "[入門](/docs/{{version}}/database)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Query Builder](/docs/{{version}}/queries)"
#~ msgstr "[查詢構造器](/docs/{{version}}/queries)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Pagination](/docs/{{version}}/pagination)"
#~ msgstr "[分頁](/docs/{{version}}/pagination)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Migrations](/docs/{{version}}/migrations)"
#~ msgstr "[遷移](/docs/{{version}}/migrations)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Seeding](/docs/{{version}}/seeding)"
#~ msgstr "[資料填充](/docs/{{version}}/seeding)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Redis](/docs/{{version}}/redis)"
#~ msgstr "[Redis](/docs/{{version}}/redis)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "## Eloquent ORM"
#~ msgstr "## Eloquent ORM"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Getting Started](/docs/{{version}}/eloquent)"
#~ msgstr "[入門](/docs/{{version}}/eloquent)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Relationships](/docs/{{version}}/eloquent-relationships)"
#~ msgstr "[關聯](/docs/{{version}}/eloquent-relationships)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Collections](/docs/{{version}}/eloquent-collections)"
#~ msgstr "[Collection](/docs/{{version}}/eloquent-collections)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Mutators / Casts](/docs/{{version}}/eloquent-mutators)"
#~ msgstr "[更動子 / 型別轉換](/docs/{{version}}/eloquent-mutators)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[API Resources](/docs/{{version}}/eloquent-resources)"
#~ msgstr "[API 資源](/docs/{{version}}/eloquent-resources)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Serialization](/docs/{{version}}/eloquent-serialization)"
#~ msgstr "[序列化](/docs/{{version}}/eloquent-serialization)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "## Testing"
#~ msgstr "## 測試"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Getting Started](/docs/{{version}}/testing)"
#~ msgstr "[入門](/docs/{{version}}/testing)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[HTTP Tests](/docs/{{version}}/http-tests)"
#~ msgstr "[HTTP 測試](/docs/{{version}}/http-tests)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Console Tests](/docs/{{version}}/console-tests)"
#~ msgstr "[主控台測試](/docs/{{version}}/console-tests)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Browser Tests](/docs/{{version}}/dusk)"
#~ msgstr "[瀏覽器測試](/docs/{{version}}/dusk)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Database](/docs/{{version}}/database-testing)"
#~ msgstr "[資料庫](/docs/{{version}}/database-testing)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Mocking](/docs/{{version}}/mocking)"
#~ msgstr "[Mocking](/docs/{{version}}/mocking)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "## Packages"
#~ msgstr "## 套件"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Breeze](/docs/{{version}}/starter-kits#laravel-breeze)"
#~ msgstr "[Breeze](/docs/{{version}}/starter-kits#laravel-breeze)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Cashier (Stripe)](/docs/{{version}}/billing)"
#~ msgstr "[Cashier (Stripe)](/docs/{{version}}/billing)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Cashier (Paddle)](/docs/{{version}}/cashier-paddle)"
#~ msgstr "[Cashier (Paddle)](/docs/{{version}}/cashier-paddle)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Dusk](/docs/{{version}}/dusk)"
#~ msgstr "[Dusk](/docs/{{version}}/dusk)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Envoy](/docs/{{version}}/envoy)"
#~ msgstr "[Envoy](/docs/{{version}}/envoy)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Fortify](/docs/{{version}}/fortify)"
#~ msgstr "[Fortify](/docs/{{version}}/fortify)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Homestead](/docs/{{version}}/homestead)"
#~ msgstr "[Homestead](/docs/{{version}}/homestead)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Horizon](/docs/{{version}}/horizon)"
#~ msgstr "[Horizon](/docs/{{version}}/horizon)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Jetstream](https://jetstream.laravel.com)"
#~ msgstr "[Jetstream](https://jetstream.laravel.com)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Passport](/docs/{{version}}/passport)"
#~ msgstr "[Passport](/docs/{{version}}/passport)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Sail](/docs/{{version}}/sail)"
#~ msgstr "[Sail](/docs/{{version}}/sail)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Sanctum](/docs/{{version}}/sanctum)"
#~ msgstr "[Sanctum](/docs/{{version}}/sanctum)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Scout](/docs/{{version}}/scout)"
#~ msgstr "[Scout](/docs/{{version}}/scout)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Socialite](/docs/{{version}}/socialite)"
#~ msgstr "[Socialite](/docs/{{version}}/socialite)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Telescope](/docs/{{version}}/telescope)"
#~ msgstr "[Telescope](/docs/{{version}}/telescope)"

# File: docs/8.x/documentation.md, line: 92
# File: docs/master/documentation.md, line: 92
#~ msgid "[Valet](/docs/{{version}}/valet)"
#~ msgstr "[Valet](/docs/{{version}}/valet)"

# File: docs/8.x/documentation.md, line: 92
#~ msgid "[API Documentation](/api/8.x)"
#~ msgstr "[API 說明文件](/api/8.x)"

# File: docs/8.x/fortify.md, line: 25
# File: docs/master/fortify.md, line: 25
#~ msgid "[What Is Fortify?](#what-is-fortify)"
#~ msgstr "[什麼是 Fortify？](#what-is-fortify)"

# File: docs/8.x/fortify.md, line: 25
# File: docs/master/fortify.md, line: 25
#~ msgid "[When Should I Use Fortify?](#when-should-i-use-fortify)"
#~ msgstr "[什麼時候該用 Fortify？](#when-should-i-use-fortify)"

# File: docs/8.x/packages.md, line: 200
# File: docs/8.x/views.md, line: 1
# File: docs/master/packages.md, line: 200
# File: docs/master/views.md, line: 1
#, no-wrap
#~ msgid "Views"
#~ msgstr "檢視器"

# File: docs/8.x/releases.md, line: 1
# File: docs/master/releases.md, line: 1
#, no-wrap
#~ msgid "Release Notes"
#~ msgstr "版本資訊"

# File: docs/8.x/releases.md, line: 7
# File: docs/master/releases.md, line: 7
#~ msgid "[Versioning Scheme](#versioning-scheme)"
#~ msgstr "[版本策略](#versioning-scheme)"

# File: docs/8.x/releases.md, line: 7
# File: docs/master/releases.md, line: 7
#~ msgid "[Exceptions](#exceptions)"
#~ msgstr "[例外](#exceptions)"

# File: docs/8.x/releases.md, line: 7
# File: docs/master/releases.md, line: 7
#~ msgid "[Support Policy](#support-policy)"
#~ msgstr "[支援政策](#support-policy)"

# File: docs/8.x/releases.md, line: 7
# File: docs/master/releases.md, line: 7
#~ msgid "[Laravel 8](#laravel-8)"
#~ msgstr "[Laravel 8](#laravel-8)"

# File: docs/8.x/releases.md, line: 9
# File: docs/master/releases.md, line: 9
#, no-wrap
#~ msgid "<a name=\"versioning-scheme\"></a>\n"
#~ msgstr "<a name=\"versioning-scheme\"></a>\n"

# File: docs/8.x/releases.md, line: 9
# File: docs/master/releases.md, line: 9
#, no-wrap
#~ msgid "Versioning Scheme"
#~ msgstr "版本策略"

# File: docs/8.x/releases.md, line: 12
# File: docs/master/releases.md, line: 12
#~ msgid ""
#~ "Laravel and its other first-party packages follow [Semantic Versioning]"
#~ "(https://semver.org). Major framework releases are released every year "
#~ "(~September), while minor and patch releases may be released as often as "
#~ "every week. Minor and patch releases should **never** contain breaking "
#~ "changes."
#~ msgstr ""
#~ "Laravel 及其第一方套件都遵守 [語義化版本](https://semver.org/lang/zh-"
#~ "Tw/)。框架的主要更新會每年釋出（約在九月時），而次版本與修訂版則可能頻繁到"
#~ "每週更新。此版本與修訂版 **絕對不會** 包含中斷性變更（Breaking Change）。"

# File: docs/8.x/releases.md, line: 14
# File: docs/master/releases.md, line: 14
#~ msgid ""
#~ "When referencing the Laravel framework or its components from your "
#~ "application or package, you should always use a version constraint such "
#~ "as `^8.0`, since major releases of Laravel do include breaking changes. "
#~ "However, we strive to always ensure you may update to a new major release "
#~ "in one day or less."
#~ msgstr ""
#~ "由於 Laravel 的主要更新會包含中斷性變更，因此在應用程式或套件中參照 "
#~ "Laravel 框架或其組件時，應使用如 `^8.0` 這樣的版本限制式。然而，我們竭力確"
#~ "保主要更新應可於一天之內完成。"

# File: docs/8.x/releases.md, line: 16
# File: docs/master/releases.md, line: 16
#, no-wrap
#~ msgid "<a name=\"exceptions\"></a>\n"
#~ msgstr "<a name=\"exceptions\"></a>\n"

# File: docs/8.x/releases.md, line: 16
# File: docs/master/releases.md, line: 16
#, no-wrap
#~ msgid "Exceptions"
#~ msgstr "例外"

# File: docs/8.x/releases.md, line: 19
# File: docs/master/releases.md, line: 19
#, no-wrap
#~ msgid "<a name=\"named-arguments\"></a>\n"
#~ msgstr "<a name=\"named-arguments\"></a>\n"

# File: docs/8.x/releases.md, line: 19
# File: docs/master/releases.md, line: 19
#, no-wrap
#~ msgid "Named Arguments"
#~ msgstr "帶名稱的引數"

# File: docs/8.x/releases.md, line: 22
# File: docs/master/releases.md, line: 22
#~ msgid ""
#~ "At this time, PHP's [named arguments](https://www.php.net/manual/en/"
#~ "functions.arguments.php#functions.named-arguments) functionality are not "
#~ "covered by Laravel's backwards compatibility guidelines. We may choose to "
#~ "rename function parameters when necessary in order to improve the Laravel "
#~ "codebase. Therefore, using named arguments when calling Laravel methods "
#~ "should be done cautiously and with the understanding that the parameter "
#~ "names may change in the future."
#~ msgstr ""
#~ "截至目前為止，PHP 的 [帶名稱引數](https://www.php.net/manual/en/functions."
#~ "arguments.php#functions.named-arguments) 尚未包含在 Laravel 的向下相容性方"
#~ "針內。我們可能會在有必要的時候更改函式的引數名稱以改進 Laravel 的程式碼。"
#~ "因此，在使用帶名稱引數呼叫 Laravel 方法時應格外注意，並瞭解到引數名稱未來"
#~ "可能會有所更改。"

# File: docs/8.x/releases.md, line: 24
# File: docs/master/releases.md, line: 24
#, no-wrap
#~ msgid "<a name=\"support-policy\"></a>\n"
#~ msgstr "<a name=\"support-policy\"></a>\n"

# File: docs/8.x/releases.md, line: 24
# File: docs/master/releases.md, line: 24
#, no-wrap
#~ msgid "Support Policy"
#~ msgstr "支援政策"

# File: docs/8.x/releases.md, line: 27
# File: docs/master/releases.md, line: 27
#~ msgid ""
#~ "For LTS releases, such as Laravel 6, bug fixes are provided for 2 years "
#~ "and security fixes are provided for 3 years. These releases provide the "
#~ "longest window of support and maintenance. For general releases, bug "
#~ "fixes are provided for 18 months and security fixes are provided for 2 "
#~ "years. For all additional libraries, including Lumen, only the latest "
#~ "release receives bug fixes. In addition, please review the database "
#~ "versions [supported by Laravel](/docs/{{version}}/database#introduction)."
#~ msgstr ""
#~ "LTS 版本，如 Laravel 6，提供 2 年的 Bug 修正以及 3 年的安全性修正。這些版"
#~ "本提供了最長的支援與維護期間。而一般性版本，則提供 18 個月的 Bug 修正以及 "
#~ "2 年的安全性更新。其他額外的函式庫，如 Lumen，則至為最新版本提供 Bug 修"
#~ "正。此外，請參考 [Laravel 支援的](/docs/{{version}}/"
#~ "database#introduction) 資料庫版本。"

# File: docs/8.x/releases.md, line: 35
# File: docs/master/releases.md, line: 35
#~ msgid ""
#~ "| Version | Release | Bug Fixes Until | Security Fixes Until | | --- | "
#~ "--- | --- | --- | | 6 (LTS) | September 3rd, 2019 | September 7th, 2021 | "
#~ "September 6th, 2022 | | 7 | March 3rd, 2020 | October 6th, 2020 | March "
#~ "3rd, 2021 | | 8 | September 8th, 2020 | March 1st, 2022 | September 6th, "
#~ "2022 | | 9 (LTS) | September, 2021 | September, 2023 | September, 2024 | "
#~ "| 10 | September, 2022 | March, 2024 | September, 2024 |"
#~ msgstr ""
#~ "| 版本 | 釋出日期 | Bug 修正至 | 安全性更新至 |\n"
#~ "| --- | --- | --- | --- |\n"
#~ "| 6 (LTS) | 2019 年 9 月 3 日 | 2021 年 9 月 7 日 | 2022 年 9 月 6 日 |\n"
#~ "| 7 | 2020 年 3 月 3 日 | 2020 年 10 月 6 日 | 2021 年 3 月 3 日 |\n"
#~ "| 8 | 2020 年 9 月 8 日 | 2022 年 3 月 1 日 | 2022 年 9 月 6 日 |\n"
#~ "| 9 (LTS) | 2021 年 9 月 | 2023 年 9 月 | 2024 年 9 月 |\n"
#~ "| 10 | 2022 年 9 月 | 2024 年 3 月 | 2024 年 9 月 |"

# File: docs/8.x/releases.md, line: 37
# File: docs/master/releases.md, line: 37
#, no-wrap
#~ msgid "<a name=\"laravel-8\"></a>\n"
#~ msgstr "<a name=\"laravel-8\"></a>\n"

# File: docs/8.x/releases.md, line: 37
# File: docs/master/releases.md, line: 37
#, no-wrap
#~ msgid "Laravel 8"
#~ msgstr "Laravel 8"

# File: docs/8.x/releases.md, line: 40
# File: docs/master/releases.md, line: 40
#~ msgid ""
#~ "Laravel 8 continues the improvements made in Laravel 7.x by introducing "
#~ "Laravel Jetstream, model factory classes, migration squashing, job "
#~ "batching, improved rate limiting, queue improvements, dynamic Blade "
#~ "components, Tailwind pagination views, time testing helpers, improvements "
#~ "to `artisan serve`, event listener improvements, and a variety of other "
#~ "bug fixes and usability improvements."
#~ msgstr ""
#~ "Laravel 8 持續地對 Laravel 7.x 進行改進，包含導入了 Laravel Jetstream、模"
#~ "型 Factory 類別、資料庫遷移壓縮、批次任務、改進頻率限制、佇列改進、動態 "
#~ "Blade 元件、Tailwind 分頁檢視器、測試時間用的輔助函式、對 `artisan serve` "
#~ "的改進、時間監聽程式改進、以及各種其他 Bug 修正以及使用性改進。"

# File: docs/8.x/releases.md, line: 42
# File: docs/8.x/starter-kits.md, line: 71
# File: docs/master/releases.md, line: 42
# File: docs/master/starter-kits.md, line: 54
#, no-wrap
#~ msgid "<a name=\"laravel-jetstream\"></a>\n"
#~ msgstr "<a name=\"laravel-jetstream\"></a>\n"

# File: docs/8.x/releases.md, line: 42
# File: docs/8.x/starter-kits.md, line: 71
# File: docs/master/releases.md, line: 42
# File: docs/master/starter-kits.md, line: 54
#, no-wrap
#~ msgid "Laravel Jetstream"
#~ msgstr "Laravel Jetstream"

# File: docs/8.x/releases.md, line: 45
# File: docs/master/releases.md, line: 45
#~ msgid ""
#~ "_Laravel Jetstream was written by [Taylor Otwell](https://github.com/"
#~ "taylorotwell)_."
#~ msgstr ""
#~ "_Laravel Jetstream 由 [Taylor Otwell](https://github.com/taylorotwell) 撰"
#~ "寫_。"

# File: docs/8.x/releases.md, line: 47
# File: docs/master/releases.md, line: 47
#~ msgid ""
#~ "[Laravel Jetstream](https://jetstream.laravel.com) is a beautifully "
#~ "designed application scaffolding for Laravel. Jetstream provides the "
#~ "perfect starting point for your next project and includes login, "
#~ "registration, email verification, two-factor authentication, session "
#~ "management, API support via Laravel Sanctum, and optional team "
#~ "management. Laravel Jetstream replaces and improves upon the legacy "
#~ "authentication UI scaffolding available for previous versions of Laravel."
#~ msgstr ""
#~ "[Laravel Jetstream](https://jetstream.laravel.com) 是一套用於 Laravel 的應"
#~ "用程式 Scaffolding，有漂亮的設計。Jetstream 為你的下一個專案提供了一個絕佳"
#~ "的開始點，包含登入、註冊、電子郵件驗證、二步驟驗證、Session 管理、通過 "
#~ "Laravel Sanctum 提供的 API 支援、以及選配的團隊管理。Laravel Jetstream 取"
#~ "代並改進了過往版本 Laravel 所提供的舊版驗證 UI Scaffolding。"

# File: docs/8.x/releases.md, line: 49
# File: docs/master/releases.md, line: 49
#~ msgid ""
#~ "Jetstream is designed using [Tailwind CSS](https://tailwindcss.com) and "
#~ "offers your choice of [Livewire](https://laravel-livewire.com) or "
#~ "[Inertia](https://inertiajs.com) scaffolding."
#~ msgstr ""
#~ "Jetstream 是使用 [Tailwind CSS](https://tailwindcss.com) 進行設計的，並提"
#~ "供了[Livewire](https://laravel-livewire.com) 或 [Inertia](https://"
#~ "inertiajs.com) Scaffolding 可進行選擇。"

# File: docs/8.x/releases.md, line: 51
# File: docs/master/releases.md, line: 51
#, no-wrap
#~ msgid "<a name=\"models-directory\"></a>\n"
#~ msgstr "<a name=\"models-directory\"></a>\n"

# File: docs/8.x/releases.md, line: 51
# File: docs/master/releases.md, line: 51
#, no-wrap
#~ msgid "Models Directory"
#~ msgstr "模型目錄"

# File: docs/8.x/releases.md, line: 54
# File: docs/master/releases.md, line: 54
#~ msgid ""
#~ "By overwhelming community demand, the default Laravel application "
#~ "skeleton now contains an `app/Models` directory. We hope you enjoy this "
#~ "new home for your Eloquent models! All relevant generator commands have "
#~ "been updated to assume models exist within the `app/Models` directory if "
#~ "it exists. If the directory does not exist, the framework will assume "
#~ "your models should be placed within the `app` directory."
#~ msgstr ""
#~ "為了回應來自社群的強烈要求，Laravel 應用程式的預設基本架構目前已包含了 "
#~ "`app/Models` 目錄。我們希望你能享受這個 Eloquent 模型的新家！所有相關的產"
#~ "生程式指令都已更新，並且這些程式會在 `app/Models` 目錄存在的時候假設模型放"
#~ "在該資料夾內。若該目錄不存在，則框架會假設模型放置與 `app` 目錄內。"

# File: docs/8.x/releases.md, line: 56
# File: docs/master/releases.md, line: 56
#, no-wrap
#~ msgid "<a name=\"model-factory-classes\"></a>\n"
#~ msgstr "<a name=\"model-factory-classes\"></a>\n"

# File: docs/8.x/releases.md, line: 56
# File: docs/master/releases.md, line: 56
#, no-wrap
#~ msgid "Model Factory Classes"
#~ msgstr "模型 Factory 類別"

# File: docs/8.x/releases.md, line: 59
# File: docs/master/releases.md, line: 59
#~ msgid ""
#~ "_Model factory classes were contributed by [Taylor Otwell](https://github."
#~ "com/taylorotwell)_."
#~ msgstr ""
#~ "_模型 Factory 類別由 [Taylor Otwell](https://github.com/taylorotwell) 貢獻"
#~ "_。"

# File: docs/8.x/releases.md, line: 61
# File: docs/master/releases.md, line: 61
#~ msgid ""
#~ "Eloquent [model factories](/docs/{{version}}/database-testing#defining-"
#~ "model-factories) have been entirely re-written as class based factories "
#~ "and improved to have first-class relationship support. For example, the "
#~ "`UserFactory` included with Laravel is written like so:"
#~ msgstr ""
#~ "Eloquent 的[模型 Factory](/docs/{{version}}/database-testing#defining-"
#~ "model-factories) 已經全面重寫為基於類別的 Factory 了，並且也經過改進來直接"
#~ "支援資料庫關聯。舉例來說，在 Laravel 中的 `UserFactory` 是這樣寫的："

# File: docs/8.x/releases.md, line: 97
# File: docs/master/releases.md, line: 97
#~ msgid ""
#~ "Thanks to the new `HasFactory` trait available on generated models, the "
#~ "model factory may be used like so:"
#~ msgstr ""
#~ "由於產生的模型中包含了新的 `HasFactory` Trait，模型 Factory 可以這樣使用："

# File: docs/8.x/releases.md, line: 101
# File: docs/master/releases.md, line: 101
#, no-wrap
#~ msgid "    User::factory()->count(50)->create();\n"
#~ msgstr "    User::factory()->count(50)->create();\n"

# File: docs/8.x/releases.md, line: 103
# File: docs/master/releases.md, line: 103
#~ msgid ""
#~ "Since model factories are now simple PHP classes, state transformations "
#~ "may be written as class methods. In addition, you may add any other "
#~ "helper classes to your Eloquent model factory as needed."
#~ msgstr ""
#~ "由於模型 Factory 目前基本上是 PHP 類別，因此 State 的變換應通過類別方法來"
#~ "撰寫。此外，也可以依照需求在 Eloquent 模型 Factory 內加上任何其他的輔助函"
#~ "式。"

# File: docs/8.x/releases.md, line: 105
# File: docs/master/releases.md, line: 105
#~ msgid ""
#~ "For example, your `User` model might have a `suspended` state that "
#~ "modifies one of its default attribute values. You may define your state "
#~ "transformations using the base factory's `state` method. You may name "
#~ "your state method anything you like. After all, it's just a typical PHP "
#~ "method:"
#~ msgstr ""
#~ "舉例來說，`User` 模型可能會有個 `suspended` 狀態，用於修改模型中預設的屬性"
#~ "值。可以通過基礎 Factory 的 `state` 方法來定義狀態變換。可以任意為狀態方法"
#~ "命名。不管怎麼樣，這個方法就只是個單純的 PHP 方法而已："

# File: docs/8.x/releases.md, line: 117
# File: docs/master/releases.md, line: 117
#, no-wrap
#~ msgid ""
#~ "    /**\n"
#~ "     * Indicate that the user is suspended.\n"
#~ "     *\n"
#~ "     * @return \\Illuminate\\Database\\Eloquent\\Factories\\Factory\n"
#~ "     */\n"
#~ "    public function suspended()\n"
#~ "    {\n"
#~ "        return $this->state([\n"
#~ "            'account_status' => 'suspended',\n"
#~ "        ]);\n"
#~ "    }\n"
#~ msgstr ""
#~ "    /**\n"
#~ "     * 用於標示該使用者已被停用。\n"
#~ "     *\n"
#~ "     * @return \\Illuminate\\Database\\Eloquent\\Factories\\Factory\n"
#~ "     */\n"
#~ "    public function suspended()\n"
#~ "    {\n"
#~ "        return $this->state([\n"
#~ "            'account_status' => 'suspended',\n"
#~ "        ]);\n"
#~ "    }\n"

# File: docs/8.x/releases.md, line: 119
# File: docs/master/releases.md, line: 119
#~ msgid ""
#~ "After defining the state transformation method, we may use it like so:"
#~ msgstr "定義好狀態變換方法後，我們可以這樣使用："

# File: docs/8.x/releases.md, line: 123
# File: docs/master/releases.md, line: 123
#, no-wrap
#~ msgid "    User::factory()->count(5)->suspended()->create();\n"
#~ msgstr "    User::factory()->count(5)->suspended()->create();\n"

# File: docs/8.x/releases.md, line: 125
# File: docs/master/releases.md, line: 125
#~ msgid ""
#~ "As mentioned, Laravel 8's model factories contain first class support for "
#~ "relationships. So, assuming our `User` model has a `posts` relationship "
#~ "method, we may simply run the following code to generate a user with "
#~ "three posts:"
#~ msgstr ""
#~ "就像前面提到的一樣，Laravel 8 的模型 Factory 包含了對關聯的第一手支援。因"
#~ "此，假設我們的 `User` 模型有個 `posts` 關聯方法，我們只需要執行下列程式碼"
#~ "就能產生一個有 3 篇貼文的使用者："

# File: docs/8.x/releases.md, line: 131
# File: docs/master/releases.md, line: 131
#, no-wrap
#~ msgid ""
#~ "    $users = User::factory()\n"
#~ "                ->hasPosts(3, [\n"
#~ "                    'published' => false,\n"
#~ "                ])\n"
#~ "                ->create();\n"
#~ msgstr ""
#~ "    $users = User::factory()\n"
#~ "                ->hasPosts(3, [\n"
#~ "                    'published' => false,\n"
#~ "                ])\n"
#~ "                ->create();\n"

# File: docs/8.x/releases.md, line: 133
# File: docs/master/releases.md, line: 133
#~ msgid ""
#~ "To ease the upgrade process, the [laravel/legacy-factories](https://"
#~ "github.com/laravel/legacy-factories) package has been released to provide "
#~ "support for the previous iteration of model factories within Laravel 8.x."
#~ msgstr ""
#~ "為了減緩升級的過程，我們提供了 [laravel/legacy-factories](https://github."
#~ "com/laravel/legacy-factories) 套件來在 Laravel 8.x 中提供舊版模型 Factory "
#~ "的支援。"

# File: docs/8.x/releases.md, line: 135
# File: docs/master/releases.md, line: 135
#~ msgid ""
#~ "Laravel's re-written factories contain many more features that we think "
#~ "you will love. To learn more about model factories, please consult the "
#~ "[database testing documentation](/docs/{{version}}/database-"
#~ "testing#defining-model-factories)."
#~ msgstr ""
#~ "Laravel 的全新 Factory 包含了其他更多我們認為你會喜歡的功能。要瞭解更多有"
#~ "關模型 Factory 的資訊，請參考 [資料庫測試說明文件](/docs/{{version}}/"
#~ "database-testing#defining-model-factories)。"

# File: docs/8.x/releases.md, line: 137
# File: docs/master/releases.md, line: 137
#, no-wrap
#~ msgid "<a name=\"migration-squashing\"></a>\n"
#~ msgstr "<a name=\"migration-squashing\"></a>\n"

# File: docs/8.x/releases.md, line: 137
# File: docs/master/releases.md, line: 137
#, no-wrap
#~ msgid "Migration Squashing"
#~ msgstr "資料庫遷移壓縮"

# File: docs/8.x/releases.md, line: 140
# File: docs/master/releases.md, line: 140
#~ msgid ""
#~ "_Migration squashing was contributed by [Taylor Otwell](https://github."
#~ "com/taylorotwell)_."
#~ msgstr ""
#~ "_資料庫遷移壓縮由 [Taylor Otwell](https://github.com/taylorotwell) 貢獻_。"

# File: docs/8.x/releases.md, line: 142
# File: docs/master/releases.md, line: 142
#~ msgid ""
#~ "As you build your application, you may accumulate more and more "
#~ "migrations over time. This can lead to your migration directory becoming "
#~ "bloated with potentially hundreds of migrations. If you're using MySQL or "
#~ "PostgreSQL, you may now \"squash\" your migrations into a single SQL "
#~ "file. To get started, execute the `schema:dump` command:"
#~ msgstr ""
#~ "隨著應用程式的建立，我們可能會逐漸累積出越來越多的資料庫遷移檔。這樣可能會"
#~ "導致遷移檔目錄中被數百個遷移檔給佔滿。若你使用 MySQL 或 PostgreSQL，現在可"
#~ "以將遷移檔「壓縮」進單一一個 SQL 檔內。要開始壓縮，請執行 `schema:dump` 指"
#~ "令："

# File: docs/8.x/releases.md, line: 149
# File: docs/master/releases.md, line: 149
#~ msgid ""
#~ "When you execute this command, Laravel will write a \"schema\" file to "
#~ "your `database/schema` directory. Now, when you attempt to migrate your "
#~ "database and no other migrations have been executed, Laravel will execute "
#~ "the schema file's SQL first. After executing the schema file's commands, "
#~ "Laravel will execute any remaining migrations that were not part of the "
#~ "schema dump."
#~ msgstr ""
#~ "執行該指令時，Laravel 會將一個「結構描述」檔案寫入 `database/schema` 目錄"
#~ "內。接著，當要遷移資料庫且尚未執行過任何遷移時，Laravel 會先執行該結構描述"
#~ "檔的 SQL。執行玩結構描述檔的指令後，Laravel 才會接著執行不在該結構描述傾印"
#~ "中剩下的遷移。"

# File: docs/8.x/releases.md, line: 154
# File: docs/master/releases.md, line: 154
#~ msgid ""
#~ "_Job batching was contributed by [Taylor Otwell](https://github.com/"
#~ "taylorotwell) & [Mohamed Said](https://github.com/themsaid)_."
#~ msgstr ""
#~ "_批次任務是由 [Taylor Otwell](https://github.com/taylorotwell) & [Mohamed "
#~ "Said](https://github.com/themsaid) 貢獻的_。"

# File: docs/8.x/releases.md, line: 156
# File: docs/master/releases.md, line: 156
#~ msgid ""
#~ "Laravel's job batching feature allows you to easily execute a batch of "
#~ "jobs and then perform some action when the batch of jobs has completed "
#~ "executing."
#~ msgstr ""
#~ "Laravel 的批次任務功能能讓你輕鬆地執行一系列的任務，並接著在這些任務完成後"
#~ "執行其他操作。"

# File: docs/8.x/releases.md, line: 158
# File: docs/master/releases.md, line: 158
#~ msgid ""
#~ "The new `batch` method of the `Bus` facade may be used to dispatch a "
#~ "batch of jobs. Of course, batching is primarily useful when combined with "
#~ "completion callbacks. So, you may use the `then`, `catch`, and `finally` "
#~ "methods to define completion callbacks for the batch. Each of these "
#~ "callbacks will receive an `Illuminate\\Bus\\Batch` instance when they are "
#~ "invoked:"
#~ msgstr ""
#~ "`Bus` Facade 的全新 `batch` 方法可以用來分派一批任務。當然，批次功能與完成"
#~ "回呼一起使用時是最有用。因此，可以使用 `then`, `catch` 與 `finally` 方法來"
#~ "為該批次定義完成回呼。這些回呼都會在被叫用時收到 `Illuminate\\Bus\\Batch` "
#~ "實體："

# File: docs/8.x/releases.md, line: 164
# File: docs/master/releases.md, line: 164
#, no-wrap
#~ msgid ""
#~ "    use App\\Jobs\\ProcessPodcast;\n"
#~ "    use App\\Podcast;\n"
#~ "    use Illuminate\\Bus\\Batch;\n"
#~ "    use Illuminate\\Support\\Facades\\Bus;\n"
#~ "    use Throwable;\n"
#~ msgstr ""
#~ "    use App\\Jobs\\ProcessPodcast;\n"
#~ "    use App\\Podcast;\n"
#~ "    use Illuminate\\Bus\\Batch;\n"
#~ "    use Illuminate\\Support\\Facades\\Bus;\n"
#~ "    use Throwable;\n"

# File: docs/8.x/releases.md, line: 178
# File: docs/master/releases.md, line: 178
#, no-wrap
#~ msgid ""
#~ "    $batch = Bus::batch([\n"
#~ "        new ProcessPodcast(Podcast::find(1)),\n"
#~ "        new ProcessPodcast(Podcast::find(2)),\n"
#~ "        new ProcessPodcast(Podcast::find(3)),\n"
#~ "        new ProcessPodcast(Podcast::find(4)),\n"
#~ "        new ProcessPodcast(Podcast::find(5)),\n"
#~ "    ])->then(function (Batch $batch) {\n"
#~ "        // All jobs completed successfully...\n"
#~ "    })->catch(function (Batch $batch, Throwable $e) {\n"
#~ "        // First batch job failure detected...\n"
#~ "    })->finally(function (Batch $batch) {\n"
#~ "        // The batch has finished executing...\n"
#~ "    })->dispatch();\n"
#~ msgstr ""
#~ "    $batch = Bus::batch([\n"
#~ "        new ProcessPodcast(Podcast::find(1)),\n"
#~ "        new ProcessPodcast(Podcast::find(2)),\n"
#~ "        new ProcessPodcast(Podcast::find(3)),\n"
#~ "        new ProcessPodcast(Podcast::find(4)),\n"
#~ "        new ProcessPodcast(Podcast::find(5)),\n"
#~ "    ])->then(function (Batch $batch) {\n"
#~ "        // 所有任務都已成功完成...\n"
#~ "    })->catch(function (Batch $batch, Throwable $e) {\n"
#~ "        // 偵測到第一個批次任務失敗...\n"
#~ "    })->finally(function (Batch $batch) {\n"
#~ "        // 已完成執行批次...\n"
#~ "    })->dispatch();\n"

# File: docs/8.x/releases.md, line: 182
# File: docs/master/releases.md, line: 182
#~ msgid ""
#~ "To learn more about job batching, please consult the [queue documentation]"
#~ "(/docs/{{version}}/queues#job-batching)."
#~ msgstr ""
#~ "要瞭解更多有關批次任務的資訊，請參考[佇列說明文件](/docs/{{version}}/"
#~ "queues#job-batching)。"

# File: docs/8.x/releases.md, line: 184
# File: docs/master/releases.md, line: 184
#, no-wrap
#~ msgid "<a name=\"improved-rate-limiting\"></a>\n"
#~ msgstr "<a name=\"improved-rate-limiting\"></a>\n"

# File: docs/8.x/releases.md, line: 184
# File: docs/master/releases.md, line: 184
#, no-wrap
#~ msgid "Improved Rate Limiting"
#~ msgstr "改進的頻率限制"

# File: docs/8.x/releases.md, line: 187
# File: docs/master/releases.md, line: 187
#~ msgid ""
#~ "_Rate limiting improvements were contributed by [Taylor Otwell](https://"
#~ "github.com/taylorotwell)_."
#~ msgstr ""
#~ "_頻率限制的改進由 [Taylor Otwell](https://github.com/taylorotwell) 貢獻_。"

# File: docs/8.x/releases.md, line: 189
# File: docs/master/releases.md, line: 189
#~ msgid ""
#~ "Laravel's request rate limiter feature has been augmented with more "
#~ "flexibility and power, while still maintaining backwards compatibility "
#~ "with previous release's `throttle` middleware API."
#~ msgstr ""
#~ "Laravel 的請求頻率限制功能現在有了更多的彈性與能力，且仍於過去版本的 "
#~ "`throttle` 中間層 API 保持向下相容性。"
