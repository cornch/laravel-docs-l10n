msgid ""
msgstr ""
"Content-Type: text/plain; charset=UTF-8\n"
"Language: zh_TW\n"
"Language-Team: Chinese Traditional\n"
"PO-Revision-Date: 2024-06-30 08:27\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Project-Id-Version: laravel-docs\n"
"X-Crowdin-File: /main/templates/middleware.pot\n"
"X-Crowdin-File-ID: 101\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "The `web` Middleware Group"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`Illuminate\\Cookie\\Middleware\\EncryptCookies`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`Illuminate\\Session\\Middleware\\StartSession`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`Illuminate\\View\\Middleware\\ShareErrorsFromSession`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`Illuminate\\Foundation\\Http\\Middleware\\ValidateCsrfToken`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`Illuminate\\Routing\\Middleware\\SubstituteBindings`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "The `api` Middleware Group"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "Alias"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`auth`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`Illuminate\\Auth\\Middleware\\Authenticate`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`auth.basic`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`Illuminate\\Auth\\Middleware\\AuthenticateWithBasicAuth`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`auth.session`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`Illuminate\\Session\\Middleware\\AuthenticateSession`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`cache.headers`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`Illuminate\\Http\\Middleware\\SetCacheHeaders`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`can`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`Illuminate\\Auth\\Middleware\\Authorize`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`guest`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`Illuminate\\Auth\\Middleware\\RedirectIfAuthenticated`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`password.confirm`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`Illuminate\\Auth\\Middleware\\RequirePassword`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`precognitive`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`Illuminate\\Foundation\\Http\\Middleware\\HandlePrecognitiveRequests`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`signed`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`Illuminate\\Routing\\Middleware\\ValidateSignature`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`subscribed`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`\\Spark\\Http\\Middleware\\VerifyBillableIsSubscribed`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`throttle`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`Illuminate\\Routing\\Middleware\\ThrottleRequests` or `Illuminate\\Routing\\Middleware\\ThrottleRequestsWithRedis`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`verified`"
msgstr ""

#: ./docs/11.x/middleware.md
#: ./docs/master/middleware.md
msgctxt "TD"
msgid "`Illuminate\\Auth\\Middleware\\EnsureEmailIsVerified`"
msgstr ""

#: ./docs/8.x/middleware.md:1
#: ./docs/9.x/middleware.md:1
#: ./docs/10.x/middleware.md:1
#: ./docs/11.x/middleware.md:1
#: ./docs/master/middleware.md:1
msgctxt "H1"
msgid "Middleware"
msgstr "中介軟體 - Middleware"

#: ./docs/8.x/middleware.md:3
#: ./docs/9.x/middleware.md:3
#: ./docs/10.x/middleware.md:3
#: ./docs/11.x/middleware.md:3
#: ./docs/master/middleware.md:3
msgctxt "P"
msgid "[Introduction](#introduction)"
msgstr "[簡介](#introduction)"

#: ./docs/8.x/middleware.md:4
#: ./docs/9.x/middleware.md:4
#: ./docs/10.x/middleware.md:4
#: ./docs/11.x/middleware.md:4
#: ./docs/master/middleware.md:4
msgctxt "P"
msgid "[Defining Middleware](#defining-middleware)"
msgstr "[定義 Middleware](#defining-middleware)"

#: ./docs/8.x/middleware.md:5
#: ./docs/9.x/middleware.md:5
#: ./docs/10.x/middleware.md:5
#: ./docs/11.x/middleware.md:5
#: ./docs/master/middleware.md:5
msgctxt "P"
msgid "[Registering Middleware](#registering-middleware)"
msgstr "[註冊 Middleware](#registering-middleware)"

#: ./docs/8.x/middleware.md:6
#: ./docs/9.x/middleware.md:6
#: ./docs/10.x/middleware.md:6
#: ./docs/11.x/middleware.md:6
#: ./docs/master/middleware.md:6
msgctxt "P"
msgid "[Global Middleware](#global-middleware)"
msgstr "[全域 Middleware](#global-middleware)"

#: ./docs/10.x/middleware.md:7
#: ./docs/11.x/middleware.md:7
#: ./docs/master/middleware.md:7
msgctxt "P"
msgid "[Assigning Middleware to Routes](#assigning-middleware-to-routes)"
msgstr ""

#: ./docs/8.x/middleware.md:7
#: ./docs/9.x/middleware.md:7
msgctxt "P"
msgid "[Assigning Middleware To Routes](#assigning-middleware-to-routes)"
msgstr "[將 Middleware 指派給 Route](#assigning-middleware-to-routes)"

#: ./docs/8.x/middleware.md:8
#: ./docs/9.x/middleware.md:8
#: ./docs/10.x/middleware.md:8
#: ./docs/11.x/middleware.md:8
#: ./docs/master/middleware.md:8
msgctxt "P"
msgid "[Middleware Groups](#middleware-groups)"
msgstr "[Middleware 群組](#middleware-groups)"

#: ./docs/11.x/middleware.md:9
#: ./docs/master/middleware.md:9
msgctxt "P"
msgid "[Middleware Aliases](#middleware-aliases)"
msgstr ""

#: ./docs/8.x/middleware.md:9
#: ./docs/9.x/middleware.md:9
#: ./docs/10.x/middleware.md:9
#: ./docs/11.x/middleware.md:10
#: ./docs/master/middleware.md:10
msgctxt "P"
msgid "[Sorting Middleware](#sorting-middleware)"
msgstr "[排序 Middleware](#sorting-middleware)"

#: ./docs/8.x/middleware.md:10
#: ./docs/9.x/middleware.md:10
#: ./docs/10.x/middleware.md:10
#: ./docs/11.x/middleware.md:11
#: ./docs/master/middleware.md:11
msgctxt "P"
msgid "[Middleware Parameters](#middleware-parameters)"
msgstr "[Middleware 參數](#middleware-parameters)"

#: ./docs/8.x/middleware.md:11
#: ./docs/9.x/middleware.md:11
#: ./docs/10.x/middleware.md:11
#: ./docs/11.x/middleware.md:12
#: ./docs/master/middleware.md:12
msgctxt "P"
msgid "[Terminable Middleware](#terminable-middleware)"
msgstr "[可終止的 Middleware](#terminable-middleware)"

#: ./docs/8.x/middleware.md:13
#: ./docs/9.x/middleware.md:13
#: ./docs/10.x/middleware.md:13
#: ./docs/11.x/middleware.md:14
#: ./docs/master/middleware.md:14
#~ msgctxt "P"
#~ msgid "<a name=\"introduction\"></a>"
#~ msgstr ""

#: ./docs/8.x/middleware.md:14
#: ./docs/9.x/middleware.md:14
#: ./docs/10.x/middleware.md:14
#: ./docs/11.x/middleware.md:15
#: ./docs/master/middleware.md:15
msgctxt "H2"
msgid "Introduction"
msgstr "簡介"

#: ./docs/8.x/middleware.md:16
#: ./docs/9.x/middleware.md:16
#: ./docs/10.x/middleware.md:16
#: ./docs/11.x/middleware.md:17
#: ./docs/master/middleware.md:17
msgctxt "P"
msgid "Middleware provide a convenient mechanism for inspecting and filtering HTTP requests entering your application. For example, Laravel includes a middleware that verifies the user of your application is authenticated. If the user is not authenticated, the middleware will redirect the user to your application's login screen. However, if the user is authenticated, the middleware will allow the request to proceed further into the application."
msgstr "Middleware 提供了一個機制，可檢驗與過濾進入應用程式的 HTTP Request。舉例來說，Laravel 中包含了一個可以認證使用者是否已登入的 Middleware。若使用者未登入，該 Middleware 會將使用者重新導向回登入畫面。不過，若使用者已登入，這個 Middleware 就會讓 Request 進一步進入程式中處理。"

#: ./docs/8.x/middleware.md:18
#: ./docs/9.x/middleware.md:18
#: ./docs/10.x/middleware.md:18
msgctxt "P"
msgid "Additional middleware can be written to perform a variety of tasks besides authentication. For example, a logging middleware might log all incoming requests to your application. There are several middleware included in the Laravel framework, including middleware for authentication and CSRF protection. All of these middleware are located in the `app/Http/Middleware` directory."
msgstr "除了登入認證外，我們還能撰寫追加的 Middleware 來進行各種任務。舉例來說，可以有個 Logging Middleware 來將程式的所有連入 Request 都紀錄到日誌裡。Laravel Framework 還包含了許多 Middleware，包含用於登入認證的 Middleware、以及用於 CSRF 保護的 Middleware。這些 Middleware 都放置在 `app/Http/Middleware` 目錄內。"

#: ./docs/11.x/middleware.md:19
#: ./docs/master/middleware.md:19
msgctxt "P"
msgid "Additional middleware can be written to perform a variety of tasks besides authentication. For example, a logging middleware might log all incoming requests to your application. A variety of middleware are included in Laravel, including middleware for authentication and CSRF protection; however, all user-defined middleware are typically located in your application's `app/Http/Middleware` directory."
msgstr ""

#: ./docs/8.x/middleware.md:20
#: ./docs/9.x/middleware.md:20
#: ./docs/10.x/middleware.md:20
#: ./docs/11.x/middleware.md:21
#: ./docs/master/middleware.md:21
#~ msgctxt "P"
#~ msgid "<a name=\"defining-middleware\"></a>"
#~ msgstr ""

#: ./docs/8.x/middleware.md:21
#: ./docs/9.x/middleware.md:21
#: ./docs/10.x/middleware.md:21
#: ./docs/11.x/middleware.md:22
#: ./docs/master/middleware.md:22
msgctxt "H2"
msgid "Defining Middleware"
msgstr "定義 Middleware"

#: ./docs/8.x/middleware.md:23
#: ./docs/9.x/middleware.md:23
#: ./docs/10.x/middleware.md:23
#: ./docs/11.x/middleware.md:24
#: ./docs/master/middleware.md:24
msgctxt "P"
msgid "To create a new middleware, use the `make:middleware` Artisan command:"
msgstr "若要建立新的 Middleware，請使用 `make:middleware` Artisan 指令："

#: ./docs/8.x/middleware.md:25
#: ./docs/9.x/middleware.md:25
#: ./docs/10.x/middleware.md:25
#: ./docs/11.x/middleware.md:26
#: ./docs/master/middleware.md:26
msgctxt "CODE"
msgid "php artisan make:middleware EnsureTokenIsValid"
msgstr ""

#: ./docs/8.x/middleware.md:27
#: ./docs/9.x/middleware.md:29
#: ./docs/10.x/middleware.md:29
#: ./docs/master/middleware.md:30
msgctxt "P"
msgid "This command will place a new `EnsureTokenIsValid` class within your `app/Http/Middleware` directory. In this middleware, we will only allow access to the route if the supplied `token` input matches a specified value. Otherwise, we will redirect the users back to the `home` URI:"
msgstr "該指令會在 `app/Http/Middleware` 目錄中放置一個新的 `EnsureTokenIsValid` 類別。在這個 Middleware 中，我們要只在提供的 `token` 符合特定的值時才允許存取該 Route。`token` 不符合時，會將使用者重新導向回到 `home` URI："

#: ./docs/8.x/middleware.md:29
#: ./docs/9.x/middleware.md:31
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Http\\Middleware;\n"
"\n"
"use Closure;\n"
"\n"
"class EnsureTokenIsValid\n"
"{\n"
"    /**\n"
"     * Handle an incoming request.\n"
"     *\n"
"     * @param  \\Illuminate\\Http\\Request  $request\n"
"     * @param  \\Closure  $next\n"
"     * @return mixed\n"
"     */\n"
"    public function handle($request, Closure $next)\n"
"    {\n"
"        if ($request->input('token') !== 'my-secret-token') {\n"
"            return redirect('home');\n"
"        }\n"
"\n"
"        return $next($request);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/11.x/middleware.md:30
msgctxt "P"
msgid "This command will place a new `EnsureTokenIsValid` class within your `app/Http/Middleware` directory. In this middleware, we will only allow access to the route if the supplied `token` input matches a specified value. Otherwise, we will redirect the users back to the `/home` URI:"
msgstr ""

#: ./docs/10.x/middleware.md:31
#: ./docs/master/middleware.md:32
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Http\\Middleware;\n"
"\n"
"use Closure;\n"
"use Illuminate\\Http\\Request;\n"
"use Symfony\\Component\\HttpFoundation\\Response;\n"
"\n"
"class EnsureTokenIsValid\n"
"{\n"
"    /**\n"
"     * Handle an incoming request.\n"
"     *\n"
"     * @param  \\Closure(\\Illuminate\\Http\\Request): (\\Symfony\\Component\\HttpFoundation\\Response)  $next\n"
"     */\n"
"    public function handle(Request $request, Closure $next): Response\n"
"    {\n"
"        if ($request->input('token') !== 'my-secret-token') {\n"
"            return redirect('home');\n"
"        }\n"
"\n"
"        return $next($request);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/11.x/middleware.md:32
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Http\\Middleware;\n"
"\n"
"use Closure;\n"
"use Illuminate\\Http\\Request;\n"
"use Symfony\\Component\\HttpFoundation\\Response;\n"
"\n"
"class EnsureTokenIsValid\n"
"{\n"
"    /**\n"
"     * Handle an incoming request.\n"
"     *\n"
"     * @param  \\Closure(\\Illuminate\\Http\\Request): (\\Symfony\\Component\\HttpFoundation\\Response)  $next\n"
"     */\n"
"    public function handle(Request $request, Closure $next): Response\n"
"    {\n"
"        if ($request->input('token') !== 'my-secret-token') {\n"
"            return redirect('/home');\n"
"        }\n"
"\n"
"        return $next($request);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/8.x/middleware.md:54
#: ./docs/9.x/middleware.md:56
#: ./docs/10.x/middleware.md:56
#: ./docs/11.x/middleware.md:57
#: ./docs/master/middleware.md:57
msgctxt "P"
msgid "As you can see, if the given `token` does not match our secret token, the middleware will return an HTTP redirect to the client; otherwise, the request will be passed further into the application. To pass the request deeper into the application (allowing the middleware to \"pass\"), you should call the `$next` callback with the `$request`."
msgstr "就像我們可以看到的一樣，若給定的 `token` 不符合我們的私密權杖 (Secret Token)，則這個 Middleware 會回傳一個 HTTP Redirect 給用戶端。`token` 符合時，這個 Request 就會進一步地傳給我們的程式。若要將 Request 進一步傳進我們的應用程式中 (即，讓 Middleware「通過 - Pass」)，應以 `$request` 呼叫 `$next` 回呼。"

#: ./docs/8.x/middleware.md:56
#: ./docs/9.x/middleware.md:58
#: ./docs/10.x/middleware.md:58
#: ./docs/11.x/middleware.md:59
#: ./docs/master/middleware.md:59
msgctxt "P"
msgid "It's best to envision middleware as a series of \"layers\" HTTP requests must pass through before they hit your application. Each layer can examine the request and even reject it entirely."
msgstr "最好想像成我們有「一層又一層」的 Middleware。HTTP Request 必須通過每一層的 Middleware，最後才能進入你的應用程式中。每一層 Middleware 都可以檢查 Request 的內容，甚至還能完全拒絕 Request。"

#: ./docs/8.x/middleware.md:58
#: ./docs/9.x/middleware.md:61
#: ./docs/10.x/middleware.md:61
#: ./docs/11.x/middleware.md:62
#: ./docs/master/middleware.md:62
msgctxt "P"
msgid "All middleware are resolved via the [service container](/docs/{{version}}/container), so you may type-hint any dependencies you need within a middleware's constructor."
msgstr "所有的 Middleware 都會經過 [Service Container] 解析，因此我們可以在 Middleware 的 Constructor (建構函式) 上型別提示 (Type-Hint) 任何需要的相依性。"

#: ./docs/8.x/middleware.md:60
#: ./docs/9.x/middleware.md:63
#: ./docs/10.x/middleware.md:63
#: ./docs/11.x/middleware.md:64
#~ msgctxt "P"
#~ msgid "<a name=\"middleware-and-responses\"></a>"
#~ msgstr ""

#: ./docs/8.x/middleware.md:61
#: ./docs/9.x/middleware.md:64
msgctxt "H4"
msgid "Middleware & Responses"
msgstr "Middleare 與 Response"

#: ./docs/8.x/middleware.md:63
#: ./docs/9.x/middleware.md:66
#: ./docs/10.x/middleware.md:66
#: ./docs/11.x/middleware.md:67
#: ./docs/master/middleware.md:68
msgctxt "P"
msgid "Of course, a middleware can perform tasks before or after passing the request deeper into the application. For example, the following middleware would perform some task **before** the request is handled by the application:"
msgstr "當然，Middleware 可以在將 Request 傳入應用程式的前後執行。舉例來說，下列 Middleware 會在 Request 被程式處理 **之後** 進行一些任務："

#: ./docs/10.x/middleware.md:64
#: ./docs/11.x/middleware.md:65
#: ./docs/master/middleware.md:66
msgctxt "H4"
msgid "Middleware and Responses"
msgstr ""

#: ./docs/master/middleware.md:64
#~ msgctxt "P"
#~ msgid ""
"<a name=\"before-after-middleware\"></a>\n"
"<a name=\"middleware-and-responses\"></a>"
#~ msgstr ""

#: ./docs/8.x/middleware.md:65
#: ./docs/9.x/middleware.md:68
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Http\\Middleware;\n"
"\n"
"use Closure;\n"
"\n"
"class BeforeMiddleware\n"
"{\n"
"    public function handle($request, Closure $next)\n"
"    {\n"
"        // Perform action\n"
"\n"
"        return $next($request);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/10.x/middleware.md:68
#: ./docs/11.x/middleware.md:69
#: ./docs/master/middleware.md:70
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Http\\Middleware;\n"
"\n"
"use Closure;\n"
"use Illuminate\\Http\\Request;\n"
"use Symfony\\Component\\HttpFoundation\\Response;\n"
"\n"
"class BeforeMiddleware\n"
"{\n"
"    public function handle(Request $request, Closure $next): Response\n"
"    {\n"
"        // Perform action\n"
"\n"
"        return $next($request);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/8.x/middleware.md:81
#: ./docs/9.x/middleware.md:84
#: ./docs/10.x/middleware.md:86
#: ./docs/11.x/middleware.md:87
#: ./docs/master/middleware.md:88
msgctxt "P"
msgid "However, this middleware would perform its task **after** the request is handled by the application:"
msgstr "不過，這個 Middleware 會在 Request 被程式處理 **之後** 才進行其任務："

#: ./docs/8.x/middleware.md:83
#: ./docs/9.x/middleware.md:86
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Http\\Middleware;\n"
"\n"
"use Closure;\n"
"\n"
"class AfterMiddleware\n"
"{\n"
"    public function handle($request, Closure $next)\n"
"    {\n"
"        $response = $next($request);\n"
"\n"
"        // Perform action\n"
"\n"
"        return $response;\n"
"    }\n"
"}"
msgstr ""

#: ./docs/10.x/middleware.md:88
#: ./docs/11.x/middleware.md:89
#: ./docs/master/middleware.md:90
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Http\\Middleware;\n"
"\n"
"use Closure;\n"
"use Illuminate\\Http\\Request;\n"
"use Symfony\\Component\\HttpFoundation\\Response;\n"
"\n"
"class AfterMiddleware\n"
"{\n"
"    public function handle(Request $request, Closure $next): Response\n"
"    {\n"
"        $response = $next($request);\n"
"\n"
"        // Perform action\n"
"\n"
"        return $response;\n"
"    }\n"
"}"
msgstr ""

#: ./docs/8.x/middleware.md:101
#: ./docs/9.x/middleware.md:104
#: ./docs/10.x/middleware.md:108
#: ./docs/11.x/middleware.md:109
#: ./docs/master/middleware.md:110
#~ msgctxt "P"
#~ msgid "<a name=\"registering-middleware\"></a>"
#~ msgstr ""

#: ./docs/8.x/middleware.md:102
#: ./docs/9.x/middleware.md:105
#: ./docs/10.x/middleware.md:109
#: ./docs/11.x/middleware.md:110
#: ./docs/master/middleware.md:111
msgctxt "H2"
msgid "Registering Middleware"
msgstr "註冊 Middleware"

#: ./docs/8.x/middleware.md:104
#: ./docs/9.x/middleware.md:107
#: ./docs/10.x/middleware.md:111
#: ./docs/11.x/middleware.md:112
#: ./docs/master/middleware.md:113
#~ msgctxt "P"
#~ msgid "<a name=\"global-middleware\"></a>"
#~ msgstr ""

#: ./docs/8.x/middleware.md:105
#: ./docs/9.x/middleware.md:108
#: ./docs/10.x/middleware.md:112
#: ./docs/11.x/middleware.md:113
#: ./docs/master/middleware.md:114
msgctxt "H3"
msgid "Global Middleware"
msgstr "全域 Middleware"

#: ./docs/8.x/middleware.md:107
#: ./docs/9.x/middleware.md:110
#: ./docs/10.x/middleware.md:114
msgctxt "P"
msgid "If you want a middleware to run during every HTTP request to your application, list the middleware class in the `$middleware` property of your `app/Http/Kernel.php` class."
msgstr "若想讓 Middleware 在每一個 HTTP Request 上都執行的話，請將該 Middleware 列在 `app/Http/Kernel.php` 類別中的 `$middleware` 屬性內。"

#: ./docs/8.x/middleware.md:109
#: ./docs/9.x/middleware.md:112
#: ./docs/10.x/middleware.md:116
#: ./docs/11.x/middleware.md:143
#: ./docs/master/middleware.md:144
#~ msgctxt "P"
#~ msgid "<a name=\"assigning-middleware-to-routes\"></a>"
#~ msgstr ""

#: ./docs/8.x/middleware.md:110
#: ./docs/9.x/middleware.md:113
msgctxt "H3"
msgid "Assigning Middleware To Routes"
msgstr "將 Middleware 指派給 Route"

#: ./docs/8.x/middleware.md:112
#: ./docs/9.x/middleware.md:115
msgctxt "P"
msgid "If you would like to assign middleware to specific routes, you should first assign the middleware a key in your application's `app/Http/Kernel.php` file. By default, the `$routeMiddleware` property of this class contains entries for the middleware included with Laravel. You may add your own middleware to this list and assign it a key of your choosing:"
msgstr "若想將 Middleware 指派給特定的 Route，請先在專案的 `app/Http/Kernel.php` 檔案中為該 Middleware 指派一個索引鍵。預設情況下，這個類別的 `$routeMiddleware` 屬性包含了 Laravel 附帶的 Middleware。我們可以在這個列表中列出我們自己的 Middleware，並為其指派一個自訂的索引鍵："

#: ./docs/8.x/middleware.md:114
#: ./docs/9.x/middleware.md:117
msgctxt "CODE"
msgid ""
"// Within App\\Http\\Kernel class...\n"
"\n"
"protected $routeMiddleware = [\n"
"    'auth' => \\App\\Http\\Middleware\\Authenticate::class,\n"
"    'auth.basic' => \\Illuminate\\Auth\\Middleware\\AuthenticateWithBasicAuth::class,\n"
"    'bindings' => \\Illuminate\\Routing\\Middleware\\SubstituteBindings::class,\n"
"    'cache.headers' => \\Illuminate\\Http\\Middleware\\SetCacheHeaders::class,\n"
"    'can' => \\Illuminate\\Auth\\Middleware\\Authorize::class,\n"
"    'guest' => \\App\\Http\\Middleware\\RedirectIfAuthenticated::class,\n"
"    'signed' => \\Illuminate\\Routing\\Middleware\\ValidateSignature::class,\n"
"    'throttle' => \\Illuminate\\Routing\\Middleware\\ThrottleRequests::class,\n"
"    'verified' => \\Illuminate\\Auth\\Middleware\\EnsureEmailIsVerified::class,\n"
"];"
msgstr ""

#: ./docs/11.x/middleware.md:115
#: ./docs/master/middleware.md:116
msgctxt "P"
msgid "If you want a middleware to run during every HTTP request to your application, you may append it to the global middleware stack in your application's `bootstrap/app.php` file:"
msgstr ""

#: ./docs/10.x/middleware.md:117
#: ./docs/11.x/middleware.md:144
#: ./docs/master/middleware.md:145
msgctxt "H3"
msgid "Assigning Middleware to Routes"
msgstr ""

#: ./docs/11.x/middleware.md:117
#: ./docs/master/middleware.md:118
msgctxt "CODE"
msgid ""
"use App\\Http\\Middleware\\EnsureTokenIsValid;\n"
"\n"
"->withMiddleware(function (Middleware $middleware) {\n"
"     $middleware->append(EnsureTokenIsValid::class);\n"
"})"
msgstr ""

#: ./docs/10.x/middleware.md:119
#: ./docs/11.x/middleware.md:146
#: ./docs/master/middleware.md:147
msgctxt "P"
msgid "If you would like to assign middleware to specific routes, you may invoke the `middleware` method when defining the route:"
msgstr "若想將 Middleware 指定到特定的 Route 中，可以在定義 Route 時呼叫 `middleware` 方法："

#: ./docs/10.x/middleware.md:121
msgctxt "CODE"
msgid ""
"use App\\Http\\Middleware\\Authenticate;\n"
"\n"
"Route::get('/profile', function () {\n"
"    // ...\n"
"})->middleware(Authenticate::class);"
msgstr ""

#: ./docs/11.x/middleware.md:123
#: ./docs/master/middleware.md:124
msgctxt "P"
msgid "The `$middleware` object provided to the `withMiddleware` closure is an instance of `Illuminate\\Foundation\\Configuration\\Middleware` and is responsible for managing the middleware assigned to your application's routes. The `append` method adds the middleware to the end of the list of global middleware. If you would like to add a middleware to the beginning of the list, you should use the `prepend` method."
msgstr ""

#: ./docs/11.x/middleware.md:125
#: ./docs/master/middleware.md:126
#~ msgctxt "P"
#~ msgid "<a name=\"manually-managing-laravels-default-global-middleware\"></a>"
#~ msgstr ""

#: ./docs/11.x/middleware.md:126
#: ./docs/master/middleware.md:127
msgctxt "H4"
msgid "Manually Managing Laravel's Default Global Middleware"
msgstr ""

#: ./docs/11.x/middleware.md:128
#: ./docs/master/middleware.md:129
msgctxt "P"
msgid "If you would like to manage Laravel's global middleware stack manually, you may provide Laravel's default stack of global middleware to the `use` method. Then, you may adjust the default middleware stack as necessary:"
msgstr ""

#: ./docs/8.x/middleware.md:128
#: ./docs/9.x/middleware.md:131
msgctxt "P"
msgid "Once the middleware has been defined in the HTTP kernel, you may use the `middleware` method to assign middleware to a route:"
msgstr "Middleware 被定義為 HTTP Kernel 後，就可以使用 `middleware` 方法來將 Middleware 指派給 Route："

#: ./docs/10.x/middleware.md:129
#: ./docs/11.x/middleware.md:156
#: ./docs/master/middleware.md:157
msgctxt "CODE"
msgid ""
"Route::get('/', function () {\n"
"    // ...\n"
"})->middleware([First::class, Second::class]);"
msgstr ""

#: ./docs/11.x/middleware.md:130
msgctxt "CODE"
msgid ""
"->withMiddleware(function (Middleware $middleware) {\n"
"    $middleware->use([\n"
"        \\Illuminate\\Foundation\\Http\\Middleware\\InvokeDeferredCallbacks::class,\n"
"        // \\Illuminate\\Http\\Middleware\\TrustHosts::class,\n"
"        \\Illuminate\\Http\\Middleware\\TrustProxies::class,\n"
"        \\Illuminate\\Http\\Middleware\\HandleCors::class,\n"
"        \\Illuminate\\Foundation\\Http\\Middleware\\PreventRequestsDuringMaintenance::class,\n"
"        \\Illuminate\\Http\\Middleware\\ValidatePostSize::class,\n"
"        \\Illuminate\\Foundation\\Http\\Middleware\\TrimStrings::class,\n"
"        \\Illuminate\\Foundation\\Http\\Middleware\\ConvertEmptyStringsToNull::class,\n"
"    ]);\n"
"})"
msgstr ""

#: ./docs/8.x/middleware.md:130
#: ./docs/9.x/middleware.md:133
msgctxt "CODE"
msgid ""
"Route::get('/profile', function () {\n"
"    //\n"
"})->middleware('auth');"
msgstr ""

#: ./docs/master/middleware.md:131
msgctxt "CODE"
msgid ""
"->withMiddleware(function (Middleware $middleware) {\n"
"    $middleware->use([\n"
"        // \\Illuminate\\Http\\Middleware\\TrustHosts::class,\n"
"        \\Illuminate\\Http\\Middleware\\TrustProxies::class,\n"
"        \\Illuminate\\Http\\Middleware\\HandleCors::class,\n"
"        \\Illuminate\\Foundation\\Http\\Middleware\\PreventRequestsDuringMaintenance::class,\n"
"        \\Illuminate\\Http\\Middleware\\ValidatePostSize::class,\n"
"        \\Illuminate\\Foundation\\Http\\Middleware\\TrimStrings::class,\n"
"        \\Illuminate\\Foundation\\Http\\Middleware\\ConvertEmptyStringsToNull::class,\n"
"    ]);\n"
"})"
msgstr ""

#: ./docs/10.x/middleware.md:133
msgctxt "P"
msgid "For convenience, you may assign aliases to middleware in your application's `app/Http/Kernel.php` file. By default, the `$middlewareAliases` property of this class contains entries for the middleware included with Laravel. You may add your own middleware to this list and assign it an alias of your choosing:"
msgstr "為了讓指定 Middleware 更簡單，也可以在專案的 `app/Http/Kernel.php` 檔案中為這些 Middleware 指定別名。預設情況下，該類別的 `$middlewareAliases` 屬性內包含了 Laravel 內建的一些 Middleware。可以根據需求自行在該屬性內為你的 Middleware 加上別名："

#: ./docs/8.x/middleware.md:134
#: ./docs/9.x/middleware.md:137
#: ./docs/10.x/middleware.md:127
#: ./docs/11.x/middleware.md:154
#: ./docs/master/middleware.md:155
msgctxt "P"
msgid "You may assign multiple middleware to the route by passing an array of middleware names to the `middleware` method:"
msgstr "也可以傳入一組 Middleware 陣列給 `middleware` 方法來指派多個 Middleware 給 Route："

#: ./docs/10.x/middleware.md:135
msgctxt "CODE"
msgid ""
"// Within App\\Http\\Kernel class...\n"
"\n"
"protected $middlewareAliases = [\n"
"    'auth' => \\App\\Http\\Middleware\\Authenticate::class,\n"
"    'auth.basic' => \\Illuminate\\Auth\\Middleware\\AuthenticateWithBasicAuth::class,\n"
"    'bindings' => \\Illuminate\\Routing\\Middleware\\SubstituteBindings::class,\n"
"    'cache.headers' => \\Illuminate\\Http\\Middleware\\SetCacheHeaders::class,\n"
"    'can' => \\Illuminate\\Auth\\Middleware\\Authorize::class,\n"
"    'guest' => \\App\\Http\\Middleware\\RedirectIfAuthenticated::class,\n"
"    'signed' => \\Illuminate\\Routing\\Middleware\\ValidateSignature::class,\n"
"    'throttle' => \\Illuminate\\Routing\\Middleware\\ThrottleRequests::class,\n"
"    'verified' => \\Illuminate\\Auth\\Middleware\\EnsureEmailIsVerified::class,\n"
"];"
msgstr ""

#: ./docs/8.x/middleware.md:136
#: ./docs/9.x/middleware.md:139
msgctxt "CODE"
msgid ""
"Route::get('/', function () {\n"
"    //\n"
"})->middleware(['first', 'second']);"
msgstr ""

#: ./docs/8.x/middleware.md:140
#: ./docs/9.x/middleware.md:143
msgctxt "P"
msgid "When assigning middleware, you may also pass the fully qualified class name:"
msgstr "指派 Middleware 時，也可以傳入完整類別名稱 (Fully Qualified Class Name)："

#: ./docs/8.x/middleware.md:142
#: ./docs/9.x/middleware.md:145
msgctxt "CODE"
msgid ""
"use App\\Http\\Middleware\\EnsureTokenIsValid;\n"
"\n"
"Route::get('/profile', function () {\n"
"    //\n"
"})->middleware(EnsureTokenIsValid::class);"
msgstr ""

#: ./docs/11.x/middleware.md:148
#: ./docs/master/middleware.md:149
msgctxt "CODE"
msgid ""
"use App\\Http\\Middleware\\EnsureTokenIsValid;\n"
"\n"
"Route::get('/profile', function () {\n"
"    // ...\n"
"})->middleware(EnsureTokenIsValid::class);"
msgstr ""

#: ./docs/8.x/middleware.md:148
#: ./docs/9.x/middleware.md:151
#: ./docs/10.x/middleware.md:155
#: ./docs/11.x/middleware.md:160
#: ./docs/master/middleware.md:161
#~ msgctxt "P"
#~ msgid "<a name=\"excluding-middleware\"></a>"
#~ msgstr ""

#: ./docs/10.x/middleware.md:149
msgctxt "P"
msgid "Once the middleware alias has been defined in the HTTP kernel, you may use the alias when assigning middleware to routes:"
msgstr "在 HTTP Kernel 中定義好 Middleware 別名後，就可以使用這些別名來在 Route 上指定 Middleware："

#: ./docs/8.x/middleware.md:149
#: ./docs/9.x/middleware.md:152
#: ./docs/10.x/middleware.md:156
#: ./docs/11.x/middleware.md:161
#: ./docs/master/middleware.md:162
msgctxt "H4"
msgid "Excluding Middleware"
msgstr "排除 Middleware"

#: ./docs/10.x/middleware.md:151
msgctxt "CODE"
msgid ""
"Route::get('/profile', function () {\n"
"    // ...\n"
"})->middleware('auth');"
msgstr ""

#: ./docs/8.x/middleware.md:151
#: ./docs/9.x/middleware.md:154
#: ./docs/10.x/middleware.md:158
#: ./docs/11.x/middleware.md:163
#: ./docs/master/middleware.md:164
msgctxt "P"
msgid "When assigning middleware to a group of routes, you may occasionally need to prevent the middleware from being applied to an individual route within the group. You may accomplish this using the `withoutMiddleware` method:"
msgstr "當我們將 Middleware 指派給 Route 群組時，我們有時候會需要讓某個 Middleware 不要被套用到群組中的個別 Route 上。我們可以使用 `withoutMiddleware` 方法來完成："

#: ./docs/8.x/middleware.md:153
#: ./docs/9.x/middleware.md:156
msgctxt "CODE"
msgid ""
"use App\\Http\\Middleware\\EnsureTokenIsValid;\n"
"\n"
"Route::middleware([EnsureTokenIsValid::class])->group(function () {\n"
"    Route::get('/', function () {\n"
"        //\n"
"    });\n"
"\n"
"    Route::get('/profile', function () {\n"
"        //\n"
"    })->withoutMiddleware([EnsureTokenIsValid::class]);\n"
"});"
msgstr ""

#: ./docs/10.x/middleware.md:160
#: ./docs/11.x/middleware.md:165
#: ./docs/master/middleware.md:166
msgctxt "CODE"
msgid ""
"use App\\Http\\Middleware\\EnsureTokenIsValid;\n"
"\n"
"Route::middleware([EnsureTokenIsValid::class])->group(function () {\n"
"    Route::get('/', function () {\n"
"        // ...\n"
"    });\n"
"\n"
"    Route::get('/profile', function () {\n"
"        // ...\n"
"    })->withoutMiddleware([EnsureTokenIsValid::class]);\n"
"});"
msgstr ""

#: ./docs/8.x/middleware.md:165
#: ./docs/9.x/middleware.md:168
#: ./docs/10.x/middleware.md:172
#: ./docs/11.x/middleware.md:177
#: ./docs/master/middleware.md:178
msgctxt "P"
msgid "You may also exclude a given set of middleware from an entire [group](/docs/{{version}}/routing#route-groups) of route definitions:"
msgstr "也可以將一組 Middleware 從整個 Route [群組](/docs/{{version}}/routing#route-groups)定義中排除："

#: ./docs/8.x/middleware.md:167
#: ./docs/9.x/middleware.md:170
msgctxt "CODE"
msgid ""
"use App\\Http\\Middleware\\EnsureTokenIsValid;\n"
"\n"
"Route::withoutMiddleware([EnsureTokenIsValid::class])->group(function () {\n"
"    Route::get('/profile', function () {\n"
"        //\n"
"    });\n"
"});"
msgstr ""

#: ./docs/10.x/middleware.md:174
#: ./docs/11.x/middleware.md:179
#: ./docs/master/middleware.md:180
msgctxt "CODE"
msgid ""
"use App\\Http\\Middleware\\EnsureTokenIsValid;\n"
"\n"
"Route::withoutMiddleware([EnsureTokenIsValid::class])->group(function () {\n"
"    Route::get('/profile', function () {\n"
"        // ...\n"
"    });\n"
"});"
msgstr ""

#: ./docs/8.x/middleware.md:175
#: ./docs/9.x/middleware.md:178
#: ./docs/10.x/middleware.md:182
#: ./docs/11.x/middleware.md:187
#: ./docs/master/middleware.md:188
msgctxt "P"
msgid "The `withoutMiddleware` method can only remove route middleware and does not apply to [global middleware](#global-middleware)."
msgstr "`withoutMiddleware` 方法只能移除 Route Middleware，不能移除[全域 Middleware](#global-middleware)。"

#: ./docs/8.x/middleware.md:177
#: ./docs/9.x/middleware.md:180
#: ./docs/10.x/middleware.md:184
#: ./docs/11.x/middleware.md:189
#: ./docs/master/middleware.md:190
#~ msgctxt "P"
#~ msgid "<a name=\"middleware-groups\"></a>"
#~ msgstr ""

#: ./docs/8.x/middleware.md:178
#: ./docs/9.x/middleware.md:181
#: ./docs/10.x/middleware.md:185
#: ./docs/11.x/middleware.md:190
#: ./docs/master/middleware.md:191
msgctxt "H3"
msgid "Middleware Groups"
msgstr "Middleware 群組"

#: ./docs/8.x/middleware.md:180
#: ./docs/9.x/middleware.md:183
#: ./docs/10.x/middleware.md:187
msgctxt "P"
msgid "Sometimes you may want to group several middleware under a single key to make them easier to assign to routes. You may accomplish this using the `$middlewareGroups` property of your HTTP kernel."
msgstr "有時候，我們會想將多個 Middleware 分組在單一索引鍵上，來讓我們可以輕鬆地將其指派給 Route。可以在 HTTP Kernel 中使用 `$middlewareGroups` 屬性來完成。"

#: ./docs/8.x/middleware.md:182
msgctxt "P"
msgid "Out of the box, Laravel comes with `web` and `api` middleware groups that contain common middleware you may want to apply to your web and API routes. Remember, these middleware groups are automatically applied by your application's `App\\Providers\\RouteServiceProvider` service provider to routes within your corresponding `web` and `api` route files:"
msgstr "Laravel 中安裝完後就自帶了 `web` 與 `api` 兩個 Middleware 群組，其中共包含了可用在網頁與 API Route 上的常見 Middleware。請記得，這些 Middleware 群組由 `App\\Providers\\RouteServiceProvider` Service Provider 自動套用到對應的 `web` 與 `api` Route 檔案："

#: ./docs/8.x/middleware.md:184
msgctxt "CODE"
msgid ""
"/**\n"
" * The application's route middleware groups.\n"
" *\n"
" * @var array\n"
" */\n"
"protected $middlewareGroups = [\n"
"    'web' => [\n"
"        \\App\\Http\\Middleware\\EncryptCookies::class,\n"
"        \\Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::class,\n"
"        \\Illuminate\\Session\\Middleware\\StartSession::class,\n"
"        // \\Illuminate\\Session\\Middleware\\AuthenticateSession::class,\n"
"        \\Illuminate\\View\\Middleware\\ShareErrorsFromSession::class,\n"
"        \\App\\Http\\Middleware\\VerifyCsrfToken::class,\n"
"        \\Illuminate\\Routing\\Middleware\\SubstituteBindings::class,\n"
"    ],\n"
"\n"
"    'api' => [\n"
"        'throttle:api',\n"
"        \\Illuminate\\Routing\\Middleware\\SubstituteBindings::class,\n"
"    ],\n"
"];"
msgstr ""

#: ./docs/9.x/middleware.md:185
#: ./docs/10.x/middleware.md:189
msgctxt "P"
msgid "Laravel includes predefined `web` and `api` middleware groups that contain common middleware you may want to apply to your web and API routes. Remember, these middleware groups are automatically applied by your application's `App\\Providers\\RouteServiceProvider` service provider to routes within your corresponding `web` and `api` route files:"
msgstr "Laravel 中包含了預先定義的 `web` 與 `api` 兩個 Middleware 群組，其中共包含了可用在網頁與 API Route 上的常見 Middleware。請記得，這些 Middleware 群組由 `App\\Providers\\RouteServiceProvider` Service Provider 自動套用到對應的 `web` 與 `api` Route 檔案："

#: ./docs/9.x/middleware.md:187
msgctxt "CODE"
msgid ""
"/**\n"
" * The application's route middleware groups.\n"
" *\n"
" * @var array\n"
" */\n"
"protected $middlewareGroups = [\n"
"    'web' => [\n"
"        \\App\\Http\\Middleware\\EncryptCookies::class,\n"
"        \\Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::class,\n"
"        \\Illuminate\\Session\\Middleware\\StartSession::class,\n"
"        \\Illuminate\\View\\Middleware\\ShareErrorsFromSession::class,\n"
"        \\App\\Http\\Middleware\\VerifyCsrfToken::class,\n"
"        \\Illuminate\\Routing\\Middleware\\SubstituteBindings::class,\n"
"    ],\n"
"\n"
"    'api' => [\n"
"        'throttle:api',\n"
"        \\Illuminate\\Routing\\Middleware\\SubstituteBindings::class,\n"
"    ],\n"
"];"
msgstr ""

#: ./docs/10.x/middleware.md:191
msgctxt "CODE"
msgid ""
"/**\n"
" * The application's route middleware groups.\n"
" *\n"
" * @var array\n"
" */\n"
"protected $middlewareGroups = [\n"
"    'web' => [\n"
"        \\App\\Http\\Middleware\\EncryptCookies::class,\n"
"        \\Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::class,\n"
"        \\Illuminate\\Session\\Middleware\\StartSession::class,\n"
"        \\Illuminate\\View\\Middleware\\ShareErrorsFromSession::class,\n"
"        \\App\\Http\\Middleware\\VerifyCsrfToken::class,\n"
"        \\Illuminate\\Routing\\Middleware\\SubstituteBindings::class,\n"
"    ],\n"
"\n"
"    'api' => [\n"
"        \\Illuminate\\Routing\\Middleware\\ThrottleRequests::class.':api',\n"
"        \\Illuminate\\Routing\\Middleware\\SubstituteBindings::class,\n"
"    ],\n"
"];"
msgstr ""

#: ./docs/11.x/middleware.md:192
#: ./docs/master/middleware.md:193
msgctxt "P"
msgid "Sometimes you may want to group several middleware under a single key to make them easier to assign to routes. You may accomplish this using the `appendToGroup` method within your application's `bootstrap/app.php` file:"
msgstr ""

#: ./docs/11.x/middleware.md:194
#: ./docs/master/middleware.md:195
msgctxt "CODE"
msgid ""
"use App\\Http\\Middleware\\First;\n"
"use App\\Http\\Middleware\\Second;\n"
"\n"
"->withMiddleware(function (Middleware $middleware) {\n"
"    $middleware->appendToGroup('group-name', [\n"
"        First::class,\n"
"        Second::class,\n"
"    ]);\n"
"\n"
"    $middleware->prependToGroup('group-name', [\n"
"        First::class,\n"
"        Second::class,\n"
"    ]);\n"
"})"
msgstr ""

#: ./docs/8.x/middleware.md:206
#: ./docs/9.x/middleware.md:208
#: ./docs/10.x/middleware.md:212
msgctxt "P"
msgid "Middleware groups may be assigned to routes and controller actions using the same syntax as individual middleware. Again, middleware groups make it more convenient to assign many middleware to a route at once:"
msgstr "也可以使用相同的語法來將 Middleware 群組作為個別 Middleware 一樣指派給 Route 與 Controller 動作。同樣的，使用 Middleware 群組來一次指派多個 Middleware 給 Route 比較方便："

#: ./docs/8.x/middleware.md:208
#: ./docs/9.x/middleware.md:210
msgctxt "CODE"
msgid ""
"Route::get('/', function () {\n"
"    //\n"
"})->middleware('web');\n"
"\n"
"Route::middleware(['web'])->group(function () {\n"
"    //\n"
"});"
msgstr ""

#: ./docs/11.x/middleware.md:209
#: ./docs/master/middleware.md:210
msgctxt "P"
msgid "Middleware groups may be assigned to routes and controller actions using the same syntax as individual middleware:"
msgstr ""

#: ./docs/11.x/middleware.md:211
#: ./docs/master/middleware.md:212
msgctxt "CODE"
msgid ""
"Route::get('/', function () {\n"
"    // ...\n"
"})->middleware('group-name');\n"
"\n"
"Route::middleware(['group-name'])->group(function () {\n"
"    // ...\n"
"});"
msgstr ""

#: ./docs/10.x/middleware.md:214
msgctxt "CODE"
msgid ""
"Route::get('/', function () {\n"
"    // ...\n"
"})->middleware('web');\n"
"\n"
"Route::middleware(['web'])->group(function () {\n"
"    // ...\n"
"});"
msgstr ""

#: ./docs/8.x/middleware.md:216
#: ./docs/9.x/middleware.md:219
#: ./docs/10.x/middleware.md:223
msgctxt "P"
msgid "Out of the box, the `web` and `api` middleware groups are automatically applied to your application's corresponding `routes/web.php` and `routes/api.php` files by the `App\\Providers\\RouteServiceProvider`."
msgstr "在新安裝的 Laravel 中隨附了 `web` 與 `api` Middleware 群組，並由 `App\\Providers\\RouteServiceProvider` 自動套用到對應的 `routes/web.php` 與 `routes/api.php` 檔上。"

#: ./docs/8.x/middleware.md:218
#: ./docs/9.x/middleware.md:221
#: ./docs/10.x/middleware.md:225
#: ./docs/11.x/middleware.md:341
#: ./docs/master/middleware.md:330
#~ msgctxt "P"
#~ msgid "<a name=\"sorting-middleware\"></a>"
#~ msgstr ""

#: ./docs/11.x/middleware.md:219
#: ./docs/master/middleware.md:220
#~ msgctxt "P"
#~ msgid "<a name=\"laravels-default-middleware-groups\"></a>"
#~ msgstr ""

#: ./docs/8.x/middleware.md:219
#: ./docs/9.x/middleware.md:222
#: ./docs/10.x/middleware.md:226
#: ./docs/11.x/middleware.md:342
#: ./docs/master/middleware.md:331
msgctxt "H3"
msgid "Sorting Middleware"
msgstr "排序 Middleware"

#: ./docs/11.x/middleware.md:220
#: ./docs/master/middleware.md:221
msgctxt "H4"
msgid "Laravel's Default Middleware Groups"
msgstr ""

#: ./docs/8.x/middleware.md:221
#: ./docs/9.x/middleware.md:224
#: ./docs/10.x/middleware.md:228
msgctxt "P"
msgid "Rarely, you may need your middleware to execute in a specific order but not have control over their order when they are assigned to the route. In this case, you may specify your middleware priority using the `$middlewarePriority` property of your `app/Http/Kernel.php` file. This property may not exist in your HTTP kernel by default. If it does not exist, you may copy its default definition below:"
msgstr "我們偶爾會需要讓 Middleware 以特定的順序執行，但有時候沒有辦法控制 Middleware 是以什麼順序指派給 Route 的。這時，我們可以使用 `app/Http/Kernel.php` 檔案中的 `$middlewarePriority` 屬性來執行 Middleware 的優先順序。這個屬性預設可能不存在 HTTP Kernel 中。若沒有這個屬性，可以複製下列預設定義來用："

#: ./docs/11.x/middleware.md:222
#: ./docs/master/middleware.md:223
msgctxt "P"
msgid "Laravel includes predefined `web` and `api` middleware groups that contain common middleware you may want to apply to your web and API routes. Remember, Laravel automatically applies these middleware groups to the corresponding `routes/web.php` and `routes/api.php` files:"
msgstr ""

#: ./docs/8.x/middleware.md:223
msgctxt "CODE"
msgid ""
"/**\n"
" * The priority-sorted list of middleware.\n"
" *\n"
" * This forces non-global middleware to always be in the given order.\n"
" *\n"
" * @var string[]\n"
" */\n"
"protected $middlewarePriority = [\n"
"    \\Illuminate\\Cookie\\Middleware\\EncryptCookies::class,\n"
"    \\Illuminate\\Session\\Middleware\\StartSession::class,\n"
"    \\Illuminate\\View\\Middleware\\ShareErrorsFromSession::class,\n"
"    \\Illuminate\\Contracts\\Auth\\Middleware\\AuthenticatesRequests::class,\n"
"    \\Illuminate\\Routing\\Middleware\\ThrottleRequests::class,\n"
"    \\Illuminate\\Routing\\Middleware\\ThrottleRequestsWithRedis::class,\n"
"    \\Illuminate\\Session\\Middleware\\AuthenticateSession::class,\n"
"    \\Illuminate\\Routing\\Middleware\\SubstituteBindings::class,\n"
"    \\Illuminate\\Auth\\Middleware\\Authorize::class,\n"
"];"
msgstr ""

#: ./docs/9.x/middleware.md:226
msgctxt "CODE"
msgid ""
"/**\n"
" * The priority-sorted list of middleware.\n"
" *\n"
" * This forces non-global middleware to always be in the given order.\n"
" *\n"
" * @var string[]\n"
" */\n"
"protected $middlewarePriority = [\n"
"    \\Illuminate\\Foundation\\Http\\Middleware\\HandlePrecognitiveRequests::class,\n"
"    \\Illuminate\\Cookie\\Middleware\\EncryptCookies::class,\n"
"    \\Illuminate\\Session\\Middleware\\StartSession::class,\n"
"    \\Illuminate\\View\\Middleware\\ShareErrorsFromSession::class,\n"
"    \\Illuminate\\Contracts\\Auth\\Middleware\\AuthenticatesRequests::class,\n"
"    \\Illuminate\\Routing\\Middleware\\ThrottleRequests::class,\n"
"    \\Illuminate\\Routing\\Middleware\\ThrottleRequestsWithRedis::class,\n"
"    \\Illuminate\\Contracts\\Session\\Middleware\\AuthenticatesSessions::class,\n"
"    \\Illuminate\\Routing\\Middleware\\SubstituteBindings::class,\n"
"    \\Illuminate\\Auth\\Middleware\\Authorize::class,\n"
"];"
msgstr ""

#: ./docs/10.x/middleware.md:230
msgctxt "CODE"
msgid ""
"/**\n"
" * The priority-sorted list of middleware.\n"
" *\n"
" * This forces non-global middleware to always be in the given order.\n"
" *\n"
" * @var string[]\n"
" */\n"
"protected $middlewarePriority = [\n"
"    \\Illuminate\\Foundation\\Http\\Middleware\\HandlePrecognitiveRequests::class,\n"
"    \\Illuminate\\Cookie\\Middleware\\EncryptCookies::class,\n"
"    \\Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::class,\n"
"    \\Illuminate\\Session\\Middleware\\StartSession::class,\n"
"    \\Illuminate\\View\\Middleware\\ShareErrorsFromSession::class,\n"
"    \\Illuminate\\Contracts\\Auth\\Middleware\\AuthenticatesRequests::class,\n"
"    \\Illuminate\\Routing\\Middleware\\ThrottleRequests::class,\n"
"    \\Illuminate\\Routing\\Middleware\\ThrottleRequestsWithRedis::class,\n"
"    \\Illuminate\\Contracts\\Session\\Middleware\\AuthenticatesSessions::class,\n"
"    \\Illuminate\\Routing\\Middleware\\SubstituteBindings::class,\n"
"    \\Illuminate\\Auth\\Middleware\\Authorize::class,\n"
"];"
msgstr ""

#: ./docs/8.x/middleware.md:242
#: ./docs/9.x/middleware.md:246
#: ./docs/10.x/middleware.md:251
#: ./docs/11.x/middleware.md:363
#: ./docs/master/middleware.md:352
#~ msgctxt "P"
#~ msgid "<a name=\"middleware-parameters\"></a>"
#~ msgstr ""

#: ./docs/8.x/middleware.md:243
#: ./docs/9.x/middleware.md:247
#: ./docs/10.x/middleware.md:252
#: ./docs/11.x/middleware.md:364
#: ./docs/master/middleware.md:353
msgctxt "H2"
msgid "Middleware Parameters"
msgstr "Middleware 參數"

#: ./docs/11.x/middleware.md:245
#: ./docs/master/middleware.md:238
msgctxt "P"
msgid "If you would like to append or prepend middleware to these groups, you may use the `web` and `api` methods within your application's `bootstrap/app.php` file. The `web` and `api` methods are convenient alternatives to the `appendToGroup` method:"
msgstr ""

#: ./docs/8.x/middleware.md:245
#: ./docs/9.x/middleware.md:249
#: ./docs/10.x/middleware.md:254
#: ./docs/11.x/middleware.md:366
#: ./docs/master/middleware.md:355
msgctxt "P"
msgid "Middleware can also receive additional parameters. For example, if your application needs to verify that the authenticated user has a given \"role\" before performing a given action, you could create an `EnsureUserHasRole` middleware that receives a role name as an additional argument."
msgstr "Middleware 也可以接收額外的參數。舉例來說，若你的程式需要在執行給定動作前認證登入的使用者是否有給定的「職位 (Role)」，則我們可以先建立一個 `EnsureUserHasRole` Middleware，讓該 Middleware 接收一個職位名稱來作為其額外的引數。"

#: ./docs/11.x/middleware.md:247
#: ./docs/master/middleware.md:240
msgctxt "CODE"
msgid ""
"use App\\Http\\Middleware\\EnsureTokenIsValid;\n"
"use App\\Http\\Middleware\\EnsureUserIsSubscribed;\n"
"\n"
"->withMiddleware(function (Middleware $middleware) {\n"
"    $middleware->web(append: [\n"
"        EnsureUserIsSubscribed::class,\n"
"    ]);\n"
"\n"
"    $middleware->api(prepend: [\n"
"        EnsureTokenIsValid::class,\n"
"    ]);\n"
"})"
msgstr ""

#: ./docs/8.x/middleware.md:247
#: ./docs/9.x/middleware.md:251
#: ./docs/10.x/middleware.md:256
#: ./docs/11.x/middleware.md:368
#: ./docs/master/middleware.md:357
msgctxt "P"
msgid "Additional middleware parameters will be passed to the middleware after the `$next` argument:"
msgstr "額外的 Middleware 引數會被放在 `$next` 引數之後傳遞給 Middleware："

#: ./docs/8.x/middleware.md:249
#: ./docs/9.x/middleware.md:253
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Http\\Middleware;\n"
"\n"
"use Closure;\n"
"\n"
"class EnsureUserHasRole\n"
"{\n"
"    /**\n"
"     * Handle the incoming request.\n"
"     *\n"
"     * @param  \\Illuminate\\Http\\Request  $request\n"
"     * @param  \\Closure  $next\n"
"     * @param  string  $role\n"
"     * @return mixed\n"
"     */\n"
"    public function handle($request, Closure $next, $role)\n"
"    {\n"
"        if (! $request->user()->hasRole($role)) {\n"
"            // Redirect...\n"
"        }\n"
"\n"
"        return $next($request);\n"
"    }\n"
"\n"
"}"
msgstr ""

#: ./docs/10.x/middleware.md:258
#: ./docs/11.x/middleware.md:370
#: ./docs/master/middleware.md:359
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Http\\Middleware;\n"
"\n"
"use Closure;\n"
"use Illuminate\\Http\\Request;\n"
"use Symfony\\Component\\HttpFoundation\\Response;\n"
"\n"
"class EnsureUserHasRole\n"
"{\n"
"    /**\n"
"     * Handle an incoming request.\n"
"     *\n"
"     * @param  \\Closure(\\Illuminate\\Http\\Request): (\\Symfony\\Component\\HttpFoundation\\Response)  $next\n"
"     */\n"
"    public function handle(Request $request, Closure $next, string $role): Response\n"
"    {\n"
"        if (! $request->user()->hasRole($role)) {\n"
"            // Redirect...\n"
"        }\n"
"\n"
"        return $next($request);\n"
"    }\n"
"\n"
"}"
msgstr ""

#: ./docs/11.x/middleware.md:260
#: ./docs/master/middleware.md:253
msgctxt "P"
msgid "You may even replace one of Laravel's default middleware group entries with a custom middleware of your own:"
msgstr ""

#: ./docs/11.x/middleware.md:262
#: ./docs/master/middleware.md:255
msgctxt "CODE"
msgid ""
"use App\\Http\\Middleware\\StartCustomSession;\n"
"use Illuminate\\Session\\Middleware\\StartSession;\n"
"\n"
"$middleware->web(replace: [\n"
"    StartSession::class => StartCustomSession::class,\n"
"]);"
msgstr ""

#: ./docs/11.x/middleware.md:269
#: ./docs/master/middleware.md:262
msgctxt "P"
msgid "Or, you may remove a middleware entirely:"
msgstr ""

#: ./docs/11.x/middleware.md:271
#: ./docs/master/middleware.md:264
msgctxt "CODE"
msgid ""
"$middleware->web(remove: [\n"
"    StartSession::class,\n"
"]);"
msgstr ""

#: ./docs/11.x/middleware.md:275
#: ./docs/master/middleware.md:268
#~ msgctxt "P"
#~ msgid "<a name=\"manually-managing-laravels-default-middleware-groups\"></a>"
#~ msgstr ""

#: ./docs/11.x/middleware.md:276
#: ./docs/master/middleware.md:269
msgctxt "H4"
msgid "Manually Managing Laravel's Default Middleware Groups"
msgstr ""

#: ./docs/8.x/middleware.md:276
#: ./docs/9.x/middleware.md:280
msgctxt "P"
msgid "Middleware parameters may be specified when defining the route by separating the middleware name and parameters with a `:`. Multiple parameters should be delimited by commas:"
msgstr "也可以在定義 Route 時使用 `:` 區分出 Middleware 名稱與參數來指定 Middleware 參數。多個參數請使用逗點 (,) 區隔："

#: ./docs/11.x/middleware.md:278
#: ./docs/master/middleware.md:271
msgctxt "P"
msgid "If you would like to manually manage all of the middleware within Laravel's default `web` and `api` middleware groups, you may redefine the groups entirely. The example below will define the `web` and `api` middleware groups with their default middleware, allowing you to customize them as necessary:"
msgstr ""

#: ./docs/8.x/middleware.md:278
#: ./docs/9.x/middleware.md:282
msgctxt "CODE"
msgid ""
"Route::put('/post/{id}', function ($id) {\n"
"    //\n"
"})->middleware('role:editor');"
msgstr ""

#: ./docs/11.x/middleware.md:280
#: ./docs/master/middleware.md:273
msgctxt "CODE"
msgid ""
"->withMiddleware(function (Middleware $middleware) {\n"
"    $middleware->group('web', [\n"
"        \\Illuminate\\Cookie\\Middleware\\EncryptCookies::class,\n"
"        \\Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::class,\n"
"        \\Illuminate\\Session\\Middleware\\StartSession::class,\n"
"        \\Illuminate\\View\\Middleware\\ShareErrorsFromSession::class,\n"
"        \\Illuminate\\Foundation\\Http\\Middleware\\ValidateCsrfToken::class,\n"
"        \\Illuminate\\Routing\\Middleware\\SubstituteBindings::class,\n"
"        // \\Illuminate\\Session\\Middleware\\AuthenticateSession::class,\n"
"    ]);\n"
"\n"
"    $middleware->group('api', [\n"
"        // \\Laravel\\Sanctum\\Http\\Middleware\\EnsureFrontendRequestsAreStateful::class,\n"
"        // 'throttle:api',\n"
"        \\Illuminate\\Routing\\Middleware\\SubstituteBindings::class,\n"
"    ]);\n"
"})"
msgstr ""

#: ./docs/8.x/middleware.md:282
#: ./docs/9.x/middleware.md:286
#: ./docs/10.x/middleware.md:296
#: ./docs/11.x/middleware.md:410
#: ./docs/master/middleware.md:397
#~ msgctxt "P"
#~ msgid "<a name=\"terminable-middleware\"></a>"
#~ msgstr ""

#: ./docs/8.x/middleware.md:283
#: ./docs/9.x/middleware.md:287
#: ./docs/10.x/middleware.md:297
#: ./docs/11.x/middleware.md:411
#: ./docs/master/middleware.md:398
msgctxt "H2"
msgid "Terminable Middleware"
msgstr "可終止的 Middleware"

#: ./docs/10.x/middleware.md:284
#: ./docs/11.x/middleware.md:396
#: ./docs/master/middleware.md:385
msgctxt "P"
msgid "Middleware parameters may be specified when defining the route by separating the middleware name and parameters with a `:`:"
msgstr ""

#: ./docs/8.x/middleware.md:285
#: ./docs/9.x/middleware.md:289
#: ./docs/10.x/middleware.md:299
#: ./docs/11.x/middleware.md:413
#: ./docs/master/middleware.md:400
msgctxt "P"
msgid "Sometimes a middleware may need to do some work after the HTTP response has been sent to the browser. If you define a `terminate` method on your middleware and your web server is using FastCGI, the `terminate` method will automatically be called after the response is sent to the browser:"
msgstr "有時候，某個 Middleware 可能需要在 HTTP Response 被傳送到瀏覽器後才進行某些動作。若我們在 Middleware 上定義一個 `terminate` 方法，且網頁伺服器 (Web Server) 使用 FastCGI，則會在 Response 傳送給瀏覽器後會自動呼叫 `terminate` 方法："

#: ./docs/10.x/middleware.md:286
#: ./docs/master/middleware.md:387
msgctxt "CODE"
msgid ""
"Route::put('/post/{id}', function (string $id) {\n"
"    // ...\n"
"})->middleware('role:editor');"
msgstr ""

#: ./docs/8.x/middleware.md:287
#: ./docs/9.x/middleware.md:291
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace Illuminate\\Session\\Middleware;\n"
"\n"
"use Closure;\n"
"\n"
"class TerminatingMiddleware\n"
"{\n"
"    /**\n"
"     * Handle an incoming request.\n"
"     *\n"
"     * @param  \\Illuminate\\Http\\Request  $request\n"
"     * @param  \\Closure  $next\n"
"     * @return mixed\n"
"     */\n"
"    public function handle($request, Closure $next)\n"
"    {\n"
"        return $next($request);\n"
"    }\n"
"\n"
"    /**\n"
"     * Handle tasks after the response has been sent to the browser.\n"
"     *\n"
"     * @param  \\Illuminate\\Http\\Request  $request\n"
"     * @param  \\Illuminate\\Http\\Response  $response\n"
"     * @return void\n"
"     */\n"
"    public function terminate($request, $response)\n"
"    {\n"
"        // ...\n"
"    }\n"
"}"
msgstr ""

#: ./docs/10.x/middleware.md:290
#: ./docs/11.x/middleware.md:404
#: ./docs/master/middleware.md:391
msgctxt "P"
msgid "Multiple parameters may be delimited by commas:"
msgstr ""

#: ./docs/10.x/middleware.md:292
#: ./docs/master/middleware.md:393
msgctxt "CODE"
msgid ""
"Route::put('/post/{id}', function (string $id) {\n"
"    // ...\n"
"})->middleware('role:editor,publisher');"
msgstr ""

#: ./docs/master/middleware.md:297
msgctxt "P"
msgid "You may assign aliases to middleware in your application's `bootstrap/app.php` file. Middleware aliases allows you to define a short alias for a given middleware class, which can be especially useful for middleware with long class names:"
msgstr ""

#: ./docs/11.x/middleware.md:299
#: ./docs/master/middleware.md:292
msgctxt "P"
msgid "By default, the `web` and `api` middleware groups are automatically applied to your application's corresponding `routes/web.php` and `routes/api.php` files by the `bootstrap/app.php` file."
msgstr ""

#: ./docs/10.x/middleware.md:301
#: ./docs/11.x/middleware.md:415
#: ./docs/master/middleware.md:402
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace Illuminate\\Session\\Middleware;\n"
"\n"
"use Closure;\n"
"use Illuminate\\Http\\Request;\n"
"use Symfony\\Component\\HttpFoundation\\Response;\n"
"\n"
"class TerminatingMiddleware\n"
"{\n"
"    /**\n"
"     * Handle an incoming request.\n"
"     *\n"
"     * @param  \\Closure(\\Illuminate\\Http\\Request): (\\Symfony\\Component\\HttpFoundation\\Response)  $next\n"
"     */\n"
"    public function handle(Request $request, Closure $next): Response\n"
"    {\n"
"        return $next($request);\n"
"    }\n"
"\n"
"    /**\n"
"     * Handle tasks after the response has been sent to the browser.\n"
"     */\n"
"    public function terminate(Request $request, Response $response): void\n"
"    {\n"
"        // ...\n"
"    }\n"
"}"
msgstr ""

#: ./docs/11.x/middleware.md:301
#: ./docs/master/middleware.md:294
#~ msgctxt "P"
#~ msgid "<a name=\"middleware-aliases\"></a>"
#~ msgstr ""

#: ./docs/11.x/middleware.md:302
#: ./docs/master/middleware.md:295
msgctxt "H3"
msgid "Middleware Aliases"
msgstr ""

#: ./docs/11.x/middleware.md:304
msgctxt "P"
msgid "You may assign aliases to middleware in your application's `bootstrap/app.php` file. Middleware aliases allow you to define a short alias for a given middleware class, which can be especially useful for middleware with long class names:"
msgstr ""

#: ./docs/11.x/middleware.md:306
#: ./docs/master/middleware.md:299
msgctxt "CODE"
msgid ""
"use App\\Http\\Middleware\\EnsureUserIsSubscribed;\n"
"\n"
"->withMiddleware(function (Middleware $middleware) {\n"
"    $middleware->alias([\n"
"        'subscribed' => EnsureUserIsSubscribed::class\n"
"    ]);\n"
"})"
msgstr ""

#: ./docs/11.x/middleware.md:314
#: ./docs/master/middleware.md:307
msgctxt "P"
msgid "Once the middleware alias has been defined in your application's `bootstrap/app.php` file, you may use the alias when assigning the middleware to routes:"
msgstr ""

#: ./docs/11.x/middleware.md:316
#: ./docs/master/middleware.md:309
msgctxt "CODE"
msgid ""
"Route::get('/profile', function () {\n"
"    // ...\n"
"})->middleware('subscribed');"
msgstr ""

#: ./docs/11.x/middleware.md:320
#: ./docs/master/middleware.md:313
msgctxt "P"
msgid "For convenience, some of Laravel's built-in middleware are aliased by default. For example, the `auth` middleware is an alias for the `Illuminate\\Auth\\Middleware\\Authenticate` middleware. Below is a list of the default middleware aliases:"
msgstr ""

#: ./docs/8.x/middleware.md:320
#: ./docs/9.x/middleware.md:324
#: ./docs/10.x/middleware.md:330
msgctxt "P"
msgid "The `terminate` method should receive both the request and the response. Once you have defined a terminable middleware, you should add it to the list of routes or global middleware in the `app/Http/Kernel.php` file."
msgstr "`terminate` 方法應接收 Request 與 Response。定義好可終止的 Middleware (Terminable Middleware) 後，請將其加到 Route 列表或 `app/Http/Kernel.php` 檔案中的全域 Middleware 內。"

#: ./docs/8.x/middleware.md:322
#: ./docs/9.x/middleware.md:326
#: ./docs/10.x/middleware.md:332
#: ./docs/11.x/middleware.md:446
#: ./docs/master/middleware.md:433
msgctxt "P"
msgid "When calling the `terminate` method on your middleware, Laravel will resolve a fresh instance of the middleware from the [service container](/docs/{{version}}/container). If you would like to use the same middleware instance when the `handle` and `terminate` methods are called, register the middleware with the container using the container's `singleton` method. Typically this should be done in the `register` method of your `AppServiceProvider`:"
msgstr "呼叫 Middleware 上的 `terminate` 方法時，Laravel 會從 [Service Container] 中解析出這個 Middleware 的新實體。若想讓 `handle` 與 `terminate` 都在同一個 Middleware 實體上呼叫的話，請使用 Container 的 `singleton` 方法來想 Container 註冊這個 Middleware。一般來說，這個註冊應在 `AppServiceProvider` 的 `register` 方法中進行："

#: ./docs/8.x/middleware.md:324
#: ./docs/9.x/middleware.md:328
msgctxt "CODE"
msgid ""
"use App\\Http\\Middleware\\TerminatingMiddleware;\n"
"\n"
"/**\n"
" * Register any application services.\n"
" *\n"
" * @return void\n"
" */\n"
"public function register()\n"
"{\n"
"    $this->app->singleton(TerminatingMiddleware::class);\n"
"}"
msgstr ""

#: ./docs/10.x/middleware.md:334
#: ./docs/11.x/middleware.md:448
#: ./docs/master/middleware.md:435
msgctxt "CODE"
msgid ""
"use App\\Http\\Middleware\\TerminatingMiddleware;\n"
"\n"
"/**\n"
" * Register any application services.\n"
" */\n"
"public function register(): void\n"
"{\n"
"    $this->app->singleton(TerminatingMiddleware::class);\n"
"}"
msgstr ""

#: ./docs/11.x/middleware.md:344
#: ./docs/master/middleware.md:333
msgctxt "P"
msgid "Rarely, you may need your middleware to execute in a specific order but not have control over their order when they are assigned to the route. In these situations, you may specify your middleware priority using the `priority` method in your application's `bootstrap/app.php` file:"
msgstr ""

#: ./docs/11.x/middleware.md:346
#: ./docs/master/middleware.md:335
msgctxt "CODE"
msgid ""
"->withMiddleware(function (Middleware $middleware) {\n"
"    $middleware->priority([\n"
"        \\Illuminate\\Foundation\\Http\\Middleware\\HandlePrecognitiveRequests::class,\n"
"        \\Illuminate\\Cookie\\Middleware\\EncryptCookies::class,\n"
"        \\Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::class,\n"
"        \\Illuminate\\Session\\Middleware\\StartSession::class,\n"
"        \\Illuminate\\View\\Middleware\\ShareErrorsFromSession::class,\n"
"        \\Illuminate\\Foundation\\Http\\Middleware\\ValidateCsrfToken::class,\n"
"        \\Laravel\\Sanctum\\Http\\Middleware\\EnsureFrontendRequestsAreStateful::class,\n"
"        \\Illuminate\\Routing\\Middleware\\ThrottleRequests::class,\n"
"        \\Illuminate\\Routing\\Middleware\\ThrottleRequestsWithRedis::class,\n"
"        \\Illuminate\\Routing\\Middleware\\SubstituteBindings::class,\n"
"        \\Illuminate\\Contracts\\Auth\\Middleware\\AuthenticatesRequests::class,\n"
"        \\Illuminate\\Auth\\Middleware\\Authorize::class,\n"
"    ]);\n"
"})"
msgstr ""

#: ./docs/11.x/middleware.md:398
msgctxt "CODE"
msgid ""
"use App\\Http\\Middleware\\EnsureUserHasRole;\n"
"\n"
"Route::put('/post/{id}', function (string $id) {\n"
"    // ...\n"
"})->middleware(EnsureUserHasRole::class.':editor');"
msgstr ""

#: ./docs/11.x/middleware.md:406
msgctxt "CODE"
msgid ""
"Route::put('/post/{id}', function (string $id) {\n"
"    // ...\n"
"})->middleware(EnsureUserHasRole::class.':editor,publisher');"
msgstr ""

#: ./docs/11.x/middleware.md:444
#: ./docs/master/middleware.md:431
msgctxt "P"
msgid "The `terminate` method should receive both the request and the response. Once you have defined a terminable middleware, you should add it to the list of routes or global middleware in your application's `bootstrap/app.php` file."
msgstr ""
