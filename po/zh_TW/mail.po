msgid ""
msgstr ""
"Project-Id-Version: laravel-docs\n"
"POT-Creation-Date: 2022-02-08 06:32+0000\n"
"PO-Revision-Date: 2022-02-11 07:04\n"
"Last-Translator: \n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2022-02-08 06:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: \n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2022-02-08 06:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: \n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/templates/mail.pot\n"
"X-Crowdin-File-ID: 99\n"

# File: docs/8.x/mail.md, line: 1
# File: docs/9.x/mail.md, line: 1
# File: docs/master/mail.md, line: 1
#. type: Title #
#, no-wrap
msgid "Mail"
msgstr "郵件"

# File: docs/8.x/mail.md, line: 27
#. type: Plain text
#, no-wrap
msgid "- [Introduction](#introduction)\n"
"    - [Configuration](#configuration)\n"
"    - [Driver Prerequisites](#driver-prerequisites)\n"
"    - [Failover Configuration](#failover-configuration)\n"
"- [Generating Mailables](#generating-mailables)\n"
"- [Writing Mailables](#writing-mailables)\n"
"    - [Configuring The Sender](#configuring-the-sender)\n"
"    - [Configuring The View](#configuring-the-view)\n"
"    - [View Data](#view-data)\n"
"    - [Attachments](#attachments)\n"
"    - [Inline Attachments](#inline-attachments)\n"
"    - [Customizing The SwiftMailer Message](#customizing-the-swiftmailer-message)\n"
"- [Markdown Mailables](#markdown-mailables)\n"
"    - [Generating Markdown Mailables](#generating-markdown-mailables)\n"
"    - [Writing Markdown Messages](#writing-markdown-messages)\n"
"    - [Customizing The Components](#customizing-the-components)\n"
"- [Sending Mail](#sending-mail)\n"
"    - [Queueing Mail](#queueing-mail)\n"
"- [Rendering Mailables](#rendering-mailables)\n"
"    - [Previewing Mailables In The Browser](#previewing-mailables-in-the-browser)\n"
"- [Localizing Mailables](#localizing-mailables)\n"
"- [Testing Mailables](#testing-mailables)\n"
"- [Mail & Local Development](#mail-and-local-development)\n"
"- [Events](#events)\n"
msgstr "- [簡介](#introduction)\n"
"    - [設定](#configuration)\n"
"    - [Driver 的前置需求](#driver-prerequisites)\n"
"    - [Failover 設定](#failover-configuration)\n"
"- [產生 Mailable](#generating-mailables)\n"
"- [撰寫 Mailable](#writing-mailables)\n"
"    - [設定寄件人](#configuring-the-sender)\n"
"    - [設定 View](#configuring-the-view)\n"
"    - [View 資料](#view-data)\n"
"    - [附加檔案](#attachments)\n"
"    - [內嵌附加檔案](#inline-attachments)\n"
"    - [自定 SwiftMailer 訊息](#customizing-the-swiftmailer-message)\n"
"- [Markdown 的 Mailable](#markdown-mailables)\n"
"    - [產生 Markdown 的 Mailable](#generating-markdown-mailables)\n"
"    - [撰寫 Markdown 訊息](#writing-markdown-messages)\n"
"    - [自定元件](#customizing-the-components)\n"
"- [傳送郵件](#sending-mail)\n"
"    - [將郵件放入佇列](#queueing-mail)\n"
"- [轉譯 Mailable](#rendering-mailables)\n"
"    - [在瀏覽器中預覽 Mailables](#previewing-mailables-in-the-browser)\n"
"- [本土化 Mailable](#localizing-mailables)\n"
"- [測試 Mailables](#testing-mailables)\n"
"- [郵件與本機開發](#mail-and-local-development)\n"
"- [事件](#events)\n"

# File: docs/8.x/mail.md, line: 29
# File: docs/9.x/mail.md, line: 31
# File: docs/master/mail.md, line: 31
#. type: Plain text
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr "<a name=\"introduction\"></a>\n"

# File: docs/8.x/mail.md, line: 29
# File: docs/9.x/mail.md, line: 31
# File: docs/master/mail.md, line: 31
#. type: Title ##
#, no-wrap
msgid "Introduction"
msgstr "簡介"

# File: docs/8.x/mail.md, line: 32
#. type: Plain text
msgid "Sending email doesn't have to be complicated. Laravel provides a clean, simple email API powered by the popular [SwiftMailer](https://swiftmailer.symfony.com/) library. Laravel and SwiftMailer provide drivers for sending email via SMTP, Mailgun, Postmark, Amazon SES, and `sendmail`, allowing you to quickly get started sending mail through a local or cloud based service of your choice."
msgstr "傳送郵件不會很複雜。Laravel 提供簡潔的 API，並由熱門的 [SwiftMailer](https://swiftmailer.symfony.com/) 函式庫驅動。Laravel 與 SwiftMailer 提供使用 SMTP、Mailgun、Postmark、Amazon SES、`sendmail` 等方式寄信的 Driver，可讓我們使用偏好的本機或雲端服務來快速開始傳送郵件。"

# File: docs/8.x/mail.md, line: 34
# File: docs/9.x/mail.md, line: 36
# File: docs/master/mail.md, line: 36
#. type: Plain text
#, no-wrap
msgid "<a name=\"configuration\"></a>\n"
msgstr "<a name=\"configuration\"></a>\n"

# File: docs/8.x/mail.md, line: 34
# File: docs/9.x/mail.md, line: 36
# File: docs/master/mail.md, line: 36
#. type: Title ###
#, no-wrap
msgid "Configuration"
msgstr "設定"

# File: docs/8.x/mail.md, line: 37
# File: docs/9.x/mail.md, line: 39
# File: docs/master/mail.md, line: 39
#. type: Plain text
msgid "Laravel's email services may be configured via your application's `config/mail.php` configuration file. Each mailer configured within this file may have its own unique configuration and even its own unique \"transport\", allowing your application to use different email services to send certain email messages. For example, your application might use Postmark to send transactional emails while using Amazon SES to send bulk emails."
msgstr "可以使用專案的 `config/mail.php` 設定檔來設定 Laravel 的郵件服務。在這個檔案中，每個 ^[Mailer](郵件傳送程式) 都可以有不同的設定，甚至還可以設定不同的「Transport」設定，這樣我們就可以在程式中使用不同的電子郵件服務來寄送不同的訊息。舉例來說，我們可以使用 Postmark 來寄送交易電子郵件，並使用 Amazon SES 來傳送大量寄送的電子郵件。"

# File: docs/8.x/mail.md, line: 39
# File: docs/9.x/mail.md, line: 41
# File: docs/master/mail.md, line: 41
#. type: Plain text
msgid "Within your `mail` configuration file, you will find a `mailers` configuration array. This array contains a sample configuration entry for each of the major mail drivers / transports supported by Laravel, while the `default` configuration value determines which mailer will be used by default when your application needs to send an email message."
msgstr "在 `mail` 設定檔中，可以看到一個 `mailers` 設定陣列。這個陣列中包含了 Laravel 支援的各個主要郵件 Driver / Transport 範例設定，而其中 `default` 設定值用來判斷專案預設要使用哪個 Mailer 來傳送電子郵件訊息。"

# File: docs/8.x/mail.md, line: 41
# File: docs/9.x/mail.md, line: 43
# File: docs/master/mail.md, line: 43
#. type: Plain text
#, no-wrap
msgid "<a name=\"driver-prerequisites\"></a>\n"
msgstr "<a name=\"driver-prerequisites\"></a>\n"

# File: docs/8.x/mail.md, line: 41
# File: docs/9.x/mail.md, line: 43
# File: docs/master/mail.md, line: 43
#. type: Title ###
#, no-wrap
msgid "Driver / Transport Prerequisites"
msgstr "Driver / Transport 的前置要求"

# File: docs/8.x/mail.md, line: 44
#. type: Plain text
msgid "The API based drivers such as Mailgun and Postmark are often simpler and faster than sending mail via SMTP servers. Whenever possible, we recommend that you use one of these drivers. All of the API based drivers require the Guzzle HTTP library, which may be installed via the Composer package manager:"
msgstr "如 Mailgun 與 Postmark 等基於 API 的 Driver 在寄送郵件時通常會比 SMTP 伺服器來得簡單快速。若可能的話，我們建議你從這幾個 Driver 中選一個使用。這些基於 API 的 Driver 都要求要有 Guzzle HTTP 函式庫，可以通過 Composer 套件管理員來安裝 Guzzle HTTP 函式庫："

# File: docs/8.x/mail.md, line: 46
#. type: Plain text
#, no-wrap
msgid "    composer require guzzlehttp/guzzle\n"
msgstr "    composer require guzzlehttp/guzzle\n"

# File: docs/8.x/mail.md, line: 48
# File: docs/9.x/mail.md, line: 48
# File: docs/master/mail.md, line: 48
#. type: Plain text
#, no-wrap
msgid "<a name=\"mailgun-driver\"></a>\n"
msgstr "<a name=\"mailgun-driver\"></a>\n"

# File: docs/8.x/mail.md, line: 48
# File: docs/9.x/mail.md, line: 48
# File: docs/master/mail.md, line: 48
#. type: Title ####
#, no-wrap
msgid "Mailgun Driver"
msgstr "Mailgun Driver"

# File: docs/8.x/mail.md, line: 51
#. type: Plain text
msgid "To use the Mailgun driver, first install the Guzzle HTTP library. Then, set the `default` option in your `config/mail.php` configuration file to `mailgun`. Next, verify that your `config/services.php` configuration file contains the following options:"
msgstr "若要使用 Mailgun Driver，請先安裝 Guzzle HTTP 函式庫。接著，在 `config/mail.php` 設定檔中將 `default` 選項設為 `mailgun`。接著，請確認一下 `config/services.php` 設定檔中是否包含下列選項："

# File: docs/8.x/mail.md, line: 56
# File: docs/9.x/mail.md, line: 62
# File: docs/master/mail.md, line: 62
#. type: Plain text
#, no-wrap
msgid "    'mailgun' => [\n"
"        'domain' => env('MAILGUN_DOMAIN'),\n"
"        'secret' => env('MAILGUN_SECRET'),\n"
"    ],\n"
msgstr "    'mailgun' => [\n"
"        'domain' => env('MAILGUN_DOMAIN'),\n"
"        'secret' => env('MAILGUN_SECRET'),\n"
"    ],\n"

# File: docs/8.x/mail.md, line: 58
# File: docs/9.x/mail.md, line: 64
# File: docs/master/mail.md, line: 64
#. type: Plain text
msgid "If you are not using the United States [Mailgun region](https://documentation.mailgun.com/en/latest/api-intro.html#mailgun-regions), you may define your region's endpoint in the `services` configuration file:"
msgstr "若你使用的 [Mailgun 地區](https://documentation.mailgun.com/en/latest/api-intro.html#mailgun-regions)不是美國的話，請在 `services` 設定檔中定義該地區的 Endpoint："

# File: docs/8.x/mail.md, line: 64
# File: docs/9.x/mail.md, line: 70
# File: docs/master/mail.md, line: 70
#. type: Plain text
#, no-wrap
msgid "    'mailgun' => [\n"
"        'domain' => env('MAILGUN_DOMAIN'),\n"
"        'secret' => env('MAILGUN_SECRET'),\n"
"        'endpoint' => env('MAILGUN_ENDPOINT', 'api.eu.mailgun.net'),\n"
"    ],\n"
msgstr "    'mailgun' => [\n"
"        'domain' => env('MAILGUN_DOMAIN'),\n"
"        'secret' => env('MAILGUN_SECRET'),\n"
"        'endpoint' => env('MAILGUN_ENDPOINT', 'api.eu.mailgun.net'),\n"
"    ],\n"

# File: docs/8.x/mail.md, line: 66
# File: docs/9.x/mail.md, line: 72
# File: docs/master/mail.md, line: 72
#. type: Plain text
#, no-wrap
msgid "<a name=\"postmark-driver\"></a>\n"
msgstr "<a name=\"postmark-driver\"></a>\n"

# File: docs/8.x/mail.md, line: 66
# File: docs/9.x/mail.md, line: 72
# File: docs/master/mail.md, line: 72
#. type: Title ####
#, no-wrap
msgid "Postmark Driver"
msgstr "Postmark Driver"

# File: docs/8.x/mail.md, line: 69
#. type: Plain text
msgid "To use the Postmark driver, install Postmark's SwiftMailer transport via Composer:"
msgstr "若要使用 Postmark Driver，請使用 Composer 安裝 Postmark 的 SwiftMailer Transport："

# File: docs/8.x/mail.md, line: 71
#. type: Plain text
#, no-wrap
msgid "    composer require wildbit/swiftmailer-postmark\n"
msgstr "    composer require wildbit/swiftmailer-postmark\n"

# File: docs/8.x/mail.md, line: 73
#. type: Plain text
msgid "Next, install the Guzzle HTTP library and set the `default` option in your `config/mail.php` configuration file to `postmark`. Finally, verify that your `config/services.php` configuration file contains the following options:"
msgstr "接著，請安裝 Guzzle HTTP 函式庫。然後，在 `config/mail.php` 設定檔中將 `default` 選項設為 `postmark`。最後，請確認一下 `config/services.php` 設定檔中是否包含下列選項："

# File: docs/8.x/mail.md, line: 77
# File: docs/9.x/mail.md, line: 85
# File: docs/master/mail.md, line: 85
#. type: Plain text
#, no-wrap
msgid "    'postmark' => [\n"
"        'token' => env('POSTMARK_TOKEN'),\n"
"    ],\n"
msgstr "    'postmark' => [\n"
"        'token' => env('POSTMARK_TOKEN'),\n"
"    ],\n"

# File: docs/8.x/mail.md, line: 79
# File: docs/9.x/mail.md, line: 87
# File: docs/master/mail.md, line: 87
#. type: Plain text
msgid "If you would like to specify the Postmark message stream that should be used by a given mailer, you may add the `message_stream_id` configuration option to the mailer's configuration array. This configuration array can be found in your application's `config/mail.php` configuration file:"
msgstr "若想為給定 Mailer 指定 Postmark ^[訊息串流](Message Stream)，請在該 Mailer 的設定陣列中加上 `message_stream_id` 設定選項。該設定陣列可在 `config/mail.php` 設定檔中找到："

# File: docs/8.x/mail.md, line: 84
# File: docs/9.x/mail.md, line: 92
# File: docs/master/mail.md, line: 92
#. type: Plain text
#, no-wrap
msgid "    'postmark' => [\n"
"        'transport' => 'postmark',\n"
"        'message_stream_id' => env('POSTMARK_MESSAGE_STREAM_ID'),\n"
"    ],\n"
msgstr "    'postmark' => [\n"
"        'transport' => 'postmark',\n"
"        'message_stream_id' => env('POSTMARK_MESSAGE_STREAM_ID'),\n"
"    ],\n"

# File: docs/8.x/mail.md, line: 86
# File: docs/9.x/mail.md, line: 94
# File: docs/master/mail.md, line: 94
#. type: Plain text
msgid "This way you are also able to set up multiple Postmark mailers with different message streams."
msgstr "這樣一來，我們就能設定多個 Postmark Mailer，並給不同 Mailer 設定不同的訊息串流。"

# File: docs/8.x/mail.md, line: 88
# File: docs/9.x/mail.md, line: 96
# File: docs/master/mail.md, line: 96
#. type: Plain text
#, no-wrap
msgid "<a name=\"ses-driver\"></a>\n"
msgstr "<a name=\"ses-driver\"></a>\n"

# File: docs/8.x/mail.md, line: 88
# File: docs/9.x/mail.md, line: 96
# File: docs/master/mail.md, line: 96
#. type: Title ####
#, no-wrap
msgid "SES Driver"
msgstr "SES Driver"

# File: docs/8.x/mail.md, line: 91
# File: docs/9.x/mail.md, line: 99
# File: docs/master/mail.md, line: 99
#. type: Plain text
msgid "To use the Amazon SES driver you must first install the Amazon AWS SDK for PHP. You may install this library via the Composer package manager:"
msgstr "若要使用 Amazon SES Driver，必須先安裝 PHP 版的 Amazon SDK。可使用 Composer 套件管理員來安裝這個函式庫："

# File: docs/8.x/mail.md, line: 92
#. type: Code fence info string
#, no-wrap
msgid "bash"
msgstr "bash"

# File: docs/8.x/mail.md, line: 92
# File: docs/9.x/mail.md, line: 100
# File: docs/master/mail.md, line: 100
#. type: Plain text
#, no-wrap
msgid "composer require aws/aws-sdk-php\n"
msgstr "composer require aws/aws-sdk-php\n"

# File: docs/8.x/mail.md, line: 97
# File: docs/9.x/mail.md, line: 105
# File: docs/master/mail.md, line: 105
#. type: Plain text
msgid "Next, set the `default` option in your `config/mail.php` configuration file to `ses` and verify that your `config/services.php` configuration file contains the following options:"
msgstr "接著，請在 `config/mail.php` 設定檔中將 `default` 選項設為 `ses`，然後確認一下 `config/services.php` 設定檔中是否包含下列選項："

# File: docs/8.x/mail.md, line: 103
# File: docs/9.x/mail.md, line: 111
# File: docs/master/mail.md, line: 111
#. type: Plain text
#, no-wrap
msgid "    'ses' => [\n"
"        'key' => env('AWS_ACCESS_KEY_ID'),\n"
"        'secret' => env('AWS_SECRET_ACCESS_KEY'),\n"
"        'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),\n"
"    ],\n"
msgstr "    'ses' => [\n"
"        'key' => env('AWS_ACCESS_KEY_ID'),\n"
"        'secret' => env('AWS_SECRET_ACCESS_KEY'),\n"
"        'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),\n"
"    ],\n"

# File: docs/8.x/mail.md, line: 105
# File: docs/9.x/mail.md, line: 113
# File: docs/master/mail.md, line: 113
#. type: Plain text
msgid "To utilize AWS [temporary credentials](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html) via a session token, you may add a `token` key to your application's SES configuration:"
msgstr "若要通過 Session Token 使用 AWS 的 [Temporary Credential](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html)，請在專案的 SES 設定中加上 `token` 索引鍵："

# File: docs/8.x/mail.md, line: 112
# File: docs/9.x/mail.md, line: 120
# File: docs/master/mail.md, line: 120
#. type: Plain text
#, no-wrap
msgid "    'ses' => [\n"
"        'key' => env('AWS_ACCESS_KEY_ID'),\n"
"        'secret' => env('AWS_SECRET_ACCESS_KEY'),\n"
"        'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),\n"
"        'token' => env('AWS_SESSION_TOKEN'),\n"
"    ],\n"
msgstr "    'ses' => [\n"
"        'key' => env('AWS_ACCESS_KEY_ID'),\n"
"        'secret' => env('AWS_SECRET_ACCESS_KEY'),\n"
"        'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),\n"
"        'token' => env('AWS_SESSION_TOKEN'),\n"
"    ],\n"

# File: docs/8.x/mail.md, line: 114
#. type: Plain text
msgid "If you would like to define [additional options](https://docs.aws.amazon.com/aws-sdk-php/v3/api/api-email-2010-12-01.html#sendrawemail) that Laravel should pass to the AWS SDK's `SendRawEmail` method when sending an email, you may define an `options` array within your `ses` configuration:"
msgstr "若想定義要讓 Laravel 在寄送郵件時要傳給 AWS SDK 之 `SendRawEmail` 方法的[額外的選項](https://docs.aws.amazon.com/aws-sdk-php/v3/api/api-email-2010-12-01.html#sendrawemail)，可在 `ses` 設定中定義一個 `options` 陣列："

# File: docs/8.x/mail.md, line: 126
#. type: Plain text
#, no-wrap
msgid "    'ses' => [\n"
"        'key' => env('AWS_ACCESS_KEY_ID'),\n"
"        'secret' => env('AWS_SECRET_ACCESS_KEY'),\n"
"        'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),\n"
"        'options' => [\n"
"            'ConfigurationSetName' => 'MyConfigurationSet',\n"
"            'Tags' => [\n"
"                ['Name' => 'foo', 'Value' => 'bar'],\n"
"            ],\n"
"        ],\n"
"    ],\n"
msgstr "    'ses' => [\n"
"        'key' => env('AWS_ACCESS_KEY_ID'),\n"
"        'secret' => env('AWS_SECRET_ACCESS_KEY'),\n"
"        'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),\n"
"        'options' => [\n"
"            'ConfigurationSetName' => 'MyConfigurationSet',\n"
"            'Tags' => [\n"
"                ['Name' => 'foo', 'Value' => 'bar'],\n"
"            ],\n"
"        ],\n"
"    ],\n"

# File: docs/8.x/mail.md, line: 128
# File: docs/9.x/mail.md, line: 136
# File: docs/master/mail.md, line: 136
#. type: Plain text
#, no-wrap
msgid "<a name=\"failover-configuration\"></a>\n"
msgstr "<a name=\"failover-configuration\"></a>\n"

# File: docs/8.x/mail.md, line: 128
# File: docs/9.x/mail.md, line: 136
# File: docs/master/mail.md, line: 136
#. type: Title ###
#, no-wrap
msgid "Failover Configuration"
msgstr "Failover 設定"

# File: docs/8.x/mail.md, line: 131
# File: docs/9.x/mail.md, line: 139
# File: docs/master/mail.md, line: 139
#. type: Plain text
msgid "Sometimes, an external service you have configured to send your application's mail may be down. In these cases, it can be useful to define one or more backup mail delivery configurations that will be used in case your primary delivery driver is down."
msgstr "有時候，我們設定要用來寄送郵件的外部服務可能沒辦法用。因為這種情況，所以最好定義一個或多個備用的郵件寄送設定，以免主要寄送 Driver 無法使用。"

# File: docs/8.x/mail.md, line: 133
# File: docs/9.x/mail.md, line: 141
# File: docs/master/mail.md, line: 141
#. type: Plain text
msgid "To accomplish this, you should define a mailer within your application's `mail` configuration file that uses the `failover` transport. The configuration array for your application's `failover` mailer should contain an array of `mailers` that reference the order in which mail drivers should be chosen for delivery:"
msgstr "若要定義備用 Mailer，請在 `mail` 設定檔中定義一個使用 `failover` Transport的 Mailer。`failover` Mailer的設定值呢列應包含一個 `mailers` 的陣列，並在其中參照用來寄送郵件之各個 Driver 的順序："

# File: docs/8.x/mail.md, line: 143
# File: docs/9.x/mail.md, line: 151
# File: docs/master/mail.md, line: 151
#. type: Plain text
#, no-wrap
msgid "    'mailers' => [\n"
"        'failover' => [\n"
"            'transport' => 'failover',\n"
"            'mailers' => [\n"
"                'postmark',\n"
"                'mailgun',\n"
"                'sendmail',\n"
"            ],\n"
"        ],\n"
msgstr "    'mailers' => [\n"
"        'failover' => [\n"
"            'transport' => 'failover',\n"
"            'mailers' => [\n"
"                'postmark',\n"
"                'mailgun',\n"
"                'sendmail',\n"
"            ],\n"
"        ],\n"

# File: docs/8.x/mail.md, line: 146
# File: docs/9.x/mail.md, line: 154
# File: docs/master/mail.md, line: 154
#. type: Plain text
#, no-wrap
msgid "        // ...\n"
"    ],\n"
msgstr "        // ...\n"
"    ],\n"

# File: docs/8.x/mail.md, line: 148
# File: docs/9.x/mail.md, line: 156
# File: docs/master/mail.md, line: 156
#. type: Plain text
msgid "Once your failover mailer has been defined, you should set this mailer as the default mailer used by your application by specifying its name as the value of the `default` configuration key within your application's `mail` configuration file:"
msgstr "定義好 Failover Mailer 後，請將 `mail` 設定檔中的 `default` 設定索引鍵設為該 Failover Mailer 的名稱，以將其設為預設 Mailer。"

# File: docs/8.x/mail.md, line: 150
# File: docs/9.x/mail.md, line: 158
# File: docs/master/mail.md, line: 158
#. type: Plain text
#, no-wrap
msgid "    'default' => env('MAIL_MAILER', 'failover'),\n"
msgstr "    'default' => env('MAIL_MAILER', 'failover'),\n"

# File: docs/8.x/mail.md, line: 152
# File: docs/9.x/mail.md, line: 160
# File: docs/master/mail.md, line: 160
#. type: Plain text
#, no-wrap
msgid "<a name=\"generating-mailables\"></a>\n"
msgstr "<a name=\"generating-mailables\"></a>\n"

# File: docs/8.x/mail.md, line: 152
# File: docs/9.x/mail.md, line: 160
# File: docs/master/mail.md, line: 160
#. type: Title ##
#, no-wrap
msgid "Generating Mailables"
msgstr "產生 Mailable"

# File: docs/8.x/mail.md, line: 155
# File: docs/9.x/mail.md, line: 163
# File: docs/master/mail.md, line: 163
#. type: Plain text
msgid "When building Laravel applications, each type of email sent by your application is represented as a \"mailable\" class. These classes are stored in the `app/Mail` directory. Don't worry if you don't see this directory in your application, since it will be generated for you when you create your first mailable class using the `make:mail` Artisan command:"
msgstr "在撰寫 Laravel 專案時，程式所寄出的所有郵件都以「Mailable」類別的形式呈現。這些類別保存在 `app/Mail` 目錄中。若沒看到這個目錄，請別擔心。使用 `make:mail` Artisan 指令初次建立 Mailable 類別時會自動產生該目錄："

# File: docs/8.x/mail.md, line: 157
#. type: Plain text
#, no-wrap
msgid "    php artisan make:mail OrderShipped\n"
msgstr "    php artisan make:mail OrderShipped\n"

# File: docs/8.x/mail.md, line: 159
# File: docs/9.x/mail.md, line: 169
# File: docs/master/mail.md, line: 169
#. type: Plain text
#, no-wrap
msgid "<a name=\"writing-mailables\"></a>\n"
msgstr "<a name=\"writing-mailables\"></a>\n"

# File: docs/8.x/mail.md, line: 159
# File: docs/9.x/mail.md, line: 169
# File: docs/master/mail.md, line: 169
#. type: Title ##
#, no-wrap
msgid "Writing Mailables"
msgstr "撰寫 Mailable"

# File: docs/8.x/mail.md, line: 162
# File: docs/9.x/mail.md, line: 172
# File: docs/master/mail.md, line: 172
#. type: Plain text
msgid "Once you have generated a mailable class, open it up so we can explore its contents. First, note that all of a mailable class' configuration is done in the `build` method. Within this method, you may call various methods such as `from`, `subject`, `view`, and `attach` to configure the email's presentation and delivery."
msgstr "產生好 Mailable 類別後，請打開該類別，我們來看看裡面的內容。首先，可以注意到所有的 Mailable 類別都在 `build` 方法內進行設定。在該方法中，可呼叫如 `form`、`view`、`attach` 等方法來設定 E-Mail 的顯示方式與寄送設定。"

# File: docs/8.x/mail.md, line: 164
# File: docs/9.x/mail.md, line: 174
# File: docs/master/mail.md, line: 174
#. type: Plain text
#, no-wrap
msgid "> {tip} You may type-hint dependencies on the mailable's `build` method. The Laravel [service container](/docs/{{version}}/container) automatically injects these dependencies.\n"
msgstr "> {tip} 也可以在 Mailable 的 `build` 方法上對相依性項目進行型別提示。Laravel 的 [Service Container](/docs/{{version}}/container) 會自動插入這些相依性項目。\n"

# File: docs/8.x/mail.md, line: 166
# File: docs/9.x/mail.md, line: 176
# File: docs/master/mail.md, line: 176
#. type: Plain text
#, no-wrap
msgid "<a name=\"configuring-the-sender\"></a>\n"
msgstr "<a name=\"configuring-the-sender\"></a>\n"

# File: docs/8.x/mail.md, line: 166
# File: docs/9.x/mail.md, line: 176
# File: docs/master/mail.md, line: 176
#. type: Title ###
#, no-wrap
msgid "Configuring The Sender"
msgstr "設定寄件人"

# File: docs/8.x/mail.md, line: 169
# File: docs/9.x/mail.md, line: 179
# File: docs/master/mail.md, line: 179
#. type: Plain text
#, no-wrap
msgid "<a name=\"using-the-from-method\"></a>\n"
msgstr "<a name=\"using-the-from-method\"></a>\n"

# File: docs/8.x/mail.md, line: 169
# File: docs/9.x/mail.md, line: 179
# File: docs/master/mail.md, line: 179
#. type: Title ####
#, no-wrap
msgid "Using The `from` Method"
msgstr "使用 `from` 方法"

# File: docs/8.x/mail.md, line: 172
# File: docs/9.x/mail.md, line: 182
# File: docs/master/mail.md, line: 182
#. type: Plain text
msgid "First, let's explore configuring the sender of the email. Or, in other words, who the email is going to be \"from\". There are two ways to configure the sender. First, you may use the `from` method within your mailable class' `build` method:"
msgstr "首先，我們先來看看如何設定寄件人。或者，換句話說，也就是郵件要「^[從](From)」誰那裡寄出。要設定寄件人，有兩種方法。第一種方法，我們可以在 Mailable 類別的 `build` 方法內使用 `from` 方法來設定："

# File: docs/8.x/mail.md, line: 183
# File: docs/9.x/mail.md, line: 193
# File: docs/master/mail.md, line: 193
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Build the message.\n"
"     *\n"
"     * @return $this\n"
"     */\n"
"    public function build()\n"
"    {\n"
"        return $this->from('example@example.com', 'Example')\n"
"                    ->view('emails.orders.shipped');\n"
"    }\n"
msgstr "    /**\n"
"     * Build the message.\n"
"     *\n"
"     * @return $this\n"
"     */\n"
"    public function build()\n"
"    {\n"
"        return $this->from('example@example.com', 'Example')\n"
"                    ->view('emails.orders.shipped');\n"
"    }\n"

# File: docs/8.x/mail.md, line: 185
# File: docs/9.x/mail.md, line: 195
# File: docs/master/mail.md, line: 195
#. type: Plain text
#, no-wrap
msgid "<a name=\"using-a-global-from-address\"></a>\n"
msgstr "<a name=\"using-a-global-from-address\"></a>\n"

# File: docs/8.x/mail.md, line: 185
# File: docs/9.x/mail.md, line: 195
# File: docs/master/mail.md, line: 195
#. type: Title ####
#, no-wrap
msgid "Using A Global `from` Address"
msgstr "使用全域的 `from` 位址"

# File: docs/8.x/mail.md, line: 188
# File: docs/9.x/mail.md, line: 198
# File: docs/master/mail.md, line: 198
#. type: Plain text
msgid "However, if your application uses the same \"from\" address for all of its emails, it can become cumbersome to call the `from` method in each mailable class you generate. Instead, you may specify a global \"from\" address in your `config/mail.php` configuration file. This address will be used if no other \"from\" address is specified within the mailable class:"
msgstr "不過，若你的專案中所有的郵件都使用相同的寄件人位址，在每個產生的 Mailable 類別內都呼叫 `from` 方法會很麻煩。比起在每個 Mailable 內呼叫 `from` 方法，我們可以在 `config/mail.php` 設定檔中指定一個全域的「from」位址。若 Mailable 類別內沒有指定「from」位址，就會使用這個全域的位址："

# File: docs/8.x/mail.md, line: 190
# File: docs/9.x/mail.md, line: 200
# File: docs/master/mail.md, line: 200
#. type: Plain text
#, no-wrap
msgid "    'from' => ['address' => 'example@example.com', 'name' => 'App Name'],\n"
msgstr "    'from' => ['address' => 'example@example.com', 'name' => 'App Name'],\n"

# File: docs/8.x/mail.md, line: 192
# File: docs/9.x/mail.md, line: 202
# File: docs/master/mail.md, line: 202
#. type: Plain text
msgid "In addition, you may define a global \"reply_to\" address within your `config/mail.php` configuration file:"
msgstr "​此外，也可以在 `config/mail.php` 設定檔中定義一個全域的「reply_to」位址："

# File: docs/8.x/mail.md, line: 194
# File: docs/9.x/mail.md, line: 204
# File: docs/master/mail.md, line: 204
#. type: Plain text
#, no-wrap
msgid "    'reply_to' => ['address' => 'example@example.com', 'name' => 'App Name'],\n"
msgstr "    'reply_to' => ['address' => 'example@example.com', 'name' => 'App Name'],\n"

# File: docs/8.x/mail.md, line: 196
# File: docs/9.x/mail.md, line: 206
# File: docs/master/mail.md, line: 206
#. type: Plain text
#, no-wrap
msgid "<a name=\"configuring-the-view\"></a>\n"
msgstr "<a name=\"configuring-the-view\"></a>\n"

# File: docs/8.x/mail.md, line: 196
# File: docs/9.x/mail.md, line: 206
# File: docs/master/mail.md, line: 206
#. type: Title ###
#, no-wrap
msgid "Configuring The View"
msgstr "​設定 View"

# File: docs/8.x/mail.md, line: 199
# File: docs/9.x/mail.md, line: 209
# File: docs/master/mail.md, line: 209
#. type: Plain text
msgid "Within a mailable class' `build` method, you may use the `view` method to specify which template should be used when rendering the email's contents. Since each email typically uses a [Blade template](/docs/{{version}}/blade) to render its contents, you have the full power and convenience of the Blade templating engine when building your email's HTML:"
msgstr "在 Mailable 類別的 `build` 方法中，可以使用 `view` 方法來指定在轉譯郵件內容時欲使用哪個樣板。由於一般來說大部分郵件都是使用 [Blade 樣板]來轉譯內容的，因此在建立郵件內容時，我們就可以使用 [Blade 樣板引擎](/docs/{{version}}/blade)的完整功能與便利："

# File: docs/8.x/mail.md, line: 209
# File: docs/9.x/mail.md, line: 219
# File: docs/master/mail.md, line: 219
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Build the message.\n"
"     *\n"
"     * @return $this\n"
"     */\n"
"    public function build()\n"
"    {\n"
"        return $this->view('emails.orders.shipped');\n"
"    }\n"
msgstr "    /**\n"
"     * Build the message.\n"
"     *\n"
"     * @return $this\n"
"     */\n"
"    public function build()\n"
"    {\n"
"        return $this->view('emails.orders.shipped');\n"
"    }\n"

# File: docs/8.x/mail.md, line: 211
# File: docs/9.x/mail.md, line: 221
# File: docs/master/mail.md, line: 221
#. type: Plain text
#, no-wrap
msgid "> {tip} You may wish to create a `resources/views/emails` directory to house all of your email templates; however, you are free to place them wherever you wish within your `resources/views` directory.\n"
msgstr "> {tip} 可以建立一個 `resources/views/emails` 目錄來放置所有的郵件樣板。不過，不一定要放在這個目錄，可以隨意放在 `resources/views` 目錄下。\n"

# File: docs/8.x/mail.md, line: 213
# File: docs/9.x/mail.md, line: 223
# File: docs/master/mail.md, line: 223
#. type: Plain text
#, no-wrap
msgid "<a name=\"plain-text-emails\"></a>\n"
msgstr "<a name=\"plain-text-emails\"></a>\n"

# File: docs/8.x/mail.md, line: 213
# File: docs/9.x/mail.md, line: 223
# File: docs/master/mail.md, line: 223
#. type: Title ####
#, no-wrap
msgid "Plain Text Emails"
msgstr "純文字郵件"

# File: docs/8.x/mail.md, line: 216
# File: docs/9.x/mail.md, line: 226
# File: docs/master/mail.md, line: 226
#. type: Plain text
msgid "If you would like to define a plain-text version of your email, you may use the `text` method. Like the `view` method, the `text` method accepts a template name which will be used to render the contents of the email. You are free to define both an HTML and plain-text version of your message:"
msgstr "若想為郵件定義純文字版本，可使用 `text` 方法。與 `view` 方法一樣，`text` 方法接受一個用來轉譯郵件內容的樣板名稱。可以同時為郵件定義 HTML 與純文字版本："

# File: docs/8.x/mail.md, line: 227
# File: docs/9.x/mail.md, line: 237
# File: docs/master/mail.md, line: 237
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Build the message.\n"
"     *\n"
"     * @return $this\n"
"     */\n"
"    public function build()\n"
"    {\n"
"        return $this->view('emails.orders.shipped')\n"
"                    ->text('emails.orders.shipped_plain');\n"
"    }\n"
msgstr "    /**\n"
"     * Build the message.\n"
"     *\n"
"     * @return $this\n"
"     */\n"
"    public function build()\n"
"    {\n"
"        return $this->view('emails.orders.shipped')\n"
"                    ->text('emails.orders.shipped_plain');\n"
"    }\n"

# File: docs/8.x/mail.md, line: 229
# File: docs/9.x/mail.md, line: 239
# File: docs/master/mail.md, line: 239
#. type: Plain text
#, no-wrap
msgid "<a name=\"view-data\"></a>\n"
msgstr "<a name=\"view-data\"></a>\n"

# File: docs/8.x/mail.md, line: 229
# File: docs/9.x/mail.md, line: 239
# File: docs/master/mail.md, line: 239
#. type: Title ###
#, no-wrap
msgid "View Data"
msgstr "View 資料"

# File: docs/8.x/mail.md, line: 232
# File: docs/9.x/mail.md, line: 242
# File: docs/master/mail.md, line: 242
#. type: Plain text
#, no-wrap
msgid "<a name=\"via-public-properties\"></a>\n"
msgstr "<a name=\"via-public-properties\"></a>\n"

# File: docs/8.x/mail.md, line: 232
# File: docs/9.x/mail.md, line: 242
# File: docs/master/mail.md, line: 242
#. type: Title ####
#, no-wrap
msgid "Via Public Properties"
msgstr "使用公開屬性"

# File: docs/8.x/mail.md, line: 235
# File: docs/9.x/mail.md, line: 245
# File: docs/master/mail.md, line: 245
#. type: Plain text
msgid "Typically, you will want to pass some data to your view that you can utilize when rendering the email's HTML. There are two ways you may make data available to your view. First, any public property defined on your mailable class will automatically be made available to the view. So, for example, you may pass data into your mailable class' constructor and set that data to public properties defined on the class:"
msgstr "一般來說，在轉譯 HTML 版本的郵件時，我們會需要將資料傳入 View 來在其中使用。要將資料傳入 View 有兩種方法。第一種方法，即是在 Mailable 類別裡的公用變數，在 View 裡面可以直接使用。因此，舉例來說，我們可以將資料傳入 Mailable 類別的 ^[Constructor](建構函式) 內，然後將資料設為該類別中定義的公用變數："

# File: docs/8.x/mail.md, line: 237
# File: docs/8.x/mail.md, line: 290
# File: docs/8.x/mail.md, line: 583
# File: docs/8.x/mail.md, line: 700
# File: docs/9.x/mail.md, line: 247
# File: docs/9.x/mail.md, line: 300
# File: docs/9.x/mail.md, line: 611
# File: docs/9.x/mail.md, line: 728
# File: docs/master/mail.md, line: 247
# File: docs/master/mail.md, line: 300
# File: docs/master/mail.md, line: 611
# File: docs/master/mail.md, line: 728
#. type: Plain text
#, no-wrap
msgid "    <?php\n"
msgstr "    <?php\n"

# File: docs/8.x/mail.md, line: 239
# File: docs/8.x/mail.md, line: 292
# File: docs/8.x/mail.md, line: 702
# File: docs/9.x/mail.md, line: 249
# File: docs/9.x/mail.md, line: 302
# File: docs/9.x/mail.md, line: 730
# File: docs/master/mail.md, line: 249
# File: docs/master/mail.md, line: 302
# File: docs/master/mail.md, line: 730
#. type: Plain text
#, no-wrap
msgid "    namespace App\\Mail;\n"
msgstr "    namespace App\\Mail;\n"

# File: docs/8.x/mail.md, line: 244
# File: docs/8.x/mail.md, line: 297
# File: docs/9.x/mail.md, line: 254
# File: docs/9.x/mail.md, line: 307
# File: docs/master/mail.md, line: 254
# File: docs/master/mail.md, line: 307
#. type: Plain text
#, no-wrap
msgid "    use App\\Models\\Order;\n"
"    use Illuminate\\Bus\\Queueable;\n"
"    use Illuminate\\Mail\\Mailable;\n"
"    use Illuminate\\Queue\\SerializesModels;\n"
msgstr "    use App\\Models\\Order;\n"
"    use Illuminate\\Bus\\Queueable;\n"
"    use Illuminate\\Mail\\Mailable;\n"
"    use Illuminate\\Queue\\SerializesModels;\n"

# File: docs/8.x/mail.md, line: 248
# File: docs/8.x/mail.md, line: 301
# File: docs/9.x/mail.md, line: 258
# File: docs/9.x/mail.md, line: 311
# File: docs/master/mail.md, line: 258
# File: docs/master/mail.md, line: 311
#. type: Plain text
#, no-wrap
msgid "    class OrderShipped extends Mailable\n"
"    {\n"
"        use Queueable, SerializesModels;\n"
msgstr "    class OrderShipped extends Mailable\n"
"    {\n"
"        use Queueable, SerializesModels;\n"

# File: docs/8.x/mail.md, line: 255
# File: docs/9.x/mail.md, line: 265
# File: docs/master/mail.md, line: 265
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * The order instance.\n"
"         *\n"
"         * @var \\App\\Models\\Order\n"
"         */\n"
"        public $order;\n"
msgstr "        /**\n"
"         * The order instance.\n"
"         *\n"
"         * @var \\App\\Models\\Order\n"
"         */\n"
"        public $order;\n"

# File: docs/8.x/mail.md, line: 266
# File: docs/8.x/mail.md, line: 319
# File: docs/9.x/mail.md, line: 276
# File: docs/9.x/mail.md, line: 329
# File: docs/master/mail.md, line: 276
# File: docs/master/mail.md, line: 329
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * Create a new message instance.\n"
"         *\n"
"         * @param  \\App\\Models\\Order  $order\n"
"         * @return void\n"
"         */\n"
"        public function __construct(Order $order)\n"
"        {\n"
"            $this->order = $order;\n"
"        }\n"
msgstr "        /**\n"
"         * Create a new message instance.\n"
"         *\n"
"         * @param  \\App\\Models\\Order  $order\n"
"         * @return void\n"
"         */\n"
"        public function __construct(Order $order)\n"
"        {\n"
"            $this->order = $order;\n"
"        }\n"

# File: docs/8.x/mail.md, line: 277
# File: docs/9.x/mail.md, line: 287
# File: docs/master/mail.md, line: 287
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * Build the message.\n"
"         *\n"
"         * @return $this\n"
"         */\n"
"        public function build()\n"
"        {\n"
"            return $this->view('emails.orders.shipped');\n"
"        }\n"
"    }\n"
msgstr "        /**\n"
"         * Build the message.\n"
"         *\n"
"         * @return $this\n"
"         */\n"
"        public function build()\n"
"        {\n"
"            return $this->view('emails.orders.shipped');\n"
"        }\n"
"    }\n"

# File: docs/8.x/mail.md, line: 279
# File: docs/9.x/mail.md, line: 289
# File: docs/master/mail.md, line: 289
#. type: Plain text
msgid "Once the data has been set to a public property, it will automatically be available in your view, so you may access it like you would access any other data in your Blade templates:"
msgstr "將資料設為公用變數後，在 View 中就自動可以使用該資料。因此在 Blade 樣板中，我們可以像存取其他資料一樣存取這些資料："

# File: docs/8.x/mail.md, line: 283
# File: docs/9.x/mail.md, line: 293
# File: docs/master/mail.md, line: 293
#. type: Plain text
#, no-wrap
msgid "    <div>\n"
"        Price: {{ $order->price }}\n"
"    </div>\n"
msgstr "    <div>\n"
"        Price: {{ $order->price }}\n"
"    </div>\n"

# File: docs/8.x/mail.md, line: 285
# File: docs/9.x/mail.md, line: 295
# File: docs/master/mail.md, line: 295
#. type: Plain text
#, no-wrap
msgid "<a name=\"via-the-with-method\"></a>\n"
msgstr "<a name=\"via-the-with-method\"></a>\n"

# File: docs/8.x/mail.md, line: 285
# File: docs/9.x/mail.md, line: 295
# File: docs/master/mail.md, line: 295
#. type: Title ####
#, no-wrap
msgid "Via The `with` Method:"
msgstr "通過 `with` 方法："

# File: docs/8.x/mail.md, line: 288
# File: docs/9.x/mail.md, line: 298
# File: docs/master/mail.md, line: 298
#. type: Plain text
msgid "If you would like to customize the format of your email's data before it is sent to the template, you may manually pass your data to the view via the `with` method. Typically, you will still pass data via the mailable class' constructor; however, you should set this data to `protected` or `private` properties so the data is not automatically made available to the template. Then, when calling the `with` method, pass an array of data that you wish to make available to the template:"
msgstr "若想在資料被傳給樣板前自訂其格式，可使用 `with` 方法來手動傳入資料。一般來說，我們還是會使用 Mailable 類別的 Constroctor 來傳入資料。不過，我們可以將該資料設為 `protected` 或 `private` 屬性，這樣樣板中才不會有這些資料。接著，呼叫 `with` 方法，傳入欲在樣板中使用的資料："

# File: docs/8.x/mail.md, line: 308
# File: docs/9.x/mail.md, line: 318
# File: docs/master/mail.md, line: 318
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * The order instance.\n"
"         *\n"
"         * @var \\App\\Models\\Order\n"
"         */\n"
"        protected $order;\n"
msgstr "        /**\n"
"         * The order instance.\n"
"         *\n"
"         * @var \\App\\Models\\Order\n"
"         */\n"
"        protected $order;\n"

# File: docs/8.x/mail.md, line: 334
# File: docs/9.x/mail.md, line: 344
# File: docs/master/mail.md, line: 344
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * Build the message.\n"
"         *\n"
"         * @return $this\n"
"         */\n"
"        public function build()\n"
"        {\n"
"            return $this->view('emails.orders.shipped')\n"
"                        ->with([\n"
"                            'orderName' => $this->order->name,\n"
"                            'orderPrice' => $this->order->price,\n"
"                        ]);\n"
"        }\n"
"    }\n"
msgstr "        /**\n"
"         * Build the message.\n"
"         *\n"
"         * @return $this\n"
"         */\n"
"        public function build()\n"
"        {\n"
"            return $this->view('emails.orders.shipped')\n"
"                        ->with([\n"
"                            'orderName' => $this->order->name,\n"
"                            'orderPrice' => $this->order->price,\n"
"                        ]);\n"
"        }\n"
"    }\n"

# File: docs/8.x/mail.md, line: 336
# File: docs/9.x/mail.md, line: 346
# File: docs/master/mail.md, line: 346
#. type: Plain text
msgid "Once the data has been passed to the `with` method, it will automatically be available in your view, so you may access it like you would access any other data in your Blade templates:"
msgstr "使用 `with` 方法傳入資料後，在 View 中就自動可以使用該資料。因此在 Blade 樣板中，我們可以像存取其他資料一樣存取這些資料："

# File: docs/8.x/mail.md, line: 340
# File: docs/9.x/mail.md, line: 350
# File: docs/master/mail.md, line: 350
#. type: Plain text
#, no-wrap
msgid "    <div>\n"
"        Price: {{ $orderPrice }}\n"
"    </div>\n"
msgstr "    <div>\n"
"        Price: {{ $orderPrice }}\n"
"    </div>\n"

# File: docs/8.x/mail.md, line: 342
# File: docs/9.x/mail.md, line: 352
# File: docs/master/mail.md, line: 352
#. type: Plain text
#, no-wrap
msgid "<a name=\"attachments\"></a>\n"
msgstr "<a name=\"attachments\"></a>\n"

# File: docs/8.x/mail.md, line: 342
# File: docs/9.x/mail.md, line: 352
# File: docs/master/mail.md, line: 352
#. type: Title ###
#, no-wrap
msgid "Attachments"
msgstr "附加檔案"

# File: docs/8.x/mail.md, line: 345
# File: docs/9.x/mail.md, line: 355
# File: docs/master/mail.md, line: 355
#. type: Plain text
msgid "To add attachments to an email, use the `attach` method within the mailable class' `build` method. The `attach` method accepts the full path to the file as its first argument:"
msgstr "若要將檔案附加至 E-Mail，請使用 Mailable 類別 `build` 方法中的 `attach` 方法。`attach` 方法接受檔案的完整路徑作為其第一個引數："

# File: docs/8.x/mail.md, line: 356
# File: docs/9.x/mail.md, line: 366
# File: docs/master/mail.md, line: 366
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Build the message.\n"
"     *\n"
"     * @return $this\n"
"     */\n"
"    public function build()\n"
"    {\n"
"        return $this->view('emails.orders.shipped')\n"
"                    ->attach('/path/to/file');\n"
"    }\n"
msgstr "    /**\n"
"     * Build the message.\n"
"     *\n"
"     * @return $this\n"
"     */\n"
"    public function build()\n"
"    {\n"
"        return $this->view('emails.orders.shipped')\n"
"                    ->attach('/path/to/file');\n"
"    }\n"

# File: docs/8.x/mail.md, line: 358
# File: docs/9.x/mail.md, line: 368
# File: docs/master/mail.md, line: 368
#. type: Plain text
msgid "When attaching files to a message, you may also specify the display name and / or MIME type by passing an `array` as the second argument to the `attach` method:"
msgstr "將檔案附加至訊息時，也可傳入一個陣列給 `attach` 方法來指定要顯示的檔案名稱與 / 或 MIME 類型："

# File: docs/8.x/mail.md, line: 372
# File: docs/9.x/mail.md, line: 382
# File: docs/master/mail.md, line: 382
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Build the message.\n"
"     *\n"
"     * @return $this\n"
"     */\n"
"    public function build()\n"
"    {\n"
"        return $this->view('emails.orders.shipped')\n"
"                    ->attach('/path/to/file', [\n"
"                        'as' => 'name.pdf',\n"
"                        'mime' => 'application/pdf',\n"
"                    ]);\n"
"    }\n"
msgstr "    /**\n"
"     * Build the message.\n"
"     *\n"
"     * @return $this\n"
"     */\n"
"    public function build()\n"
"    {\n"
"        return $this->view('emails.orders.shipped')\n"
"                    ->attach('/path/to/file', [\n"
"                        'as' => 'name.pdf',\n"
"                        'mime' => 'application/pdf',\n"
"                    ]);\n"
"    }\n"

# File: docs/8.x/mail.md, line: 374
# File: docs/9.x/mail.md, line: 384
# File: docs/master/mail.md, line: 384
#. type: Plain text
#, no-wrap
msgid "<a name=\"attaching-files-from-disk\"></a>\n"
msgstr "<a name=\"attaching-files-from-disk\"></a>\n"

# File: docs/8.x/mail.md, line: 374
# File: docs/9.x/mail.md, line: 384
# File: docs/master/mail.md, line: 384
#. type: Title ####
#, no-wrap
msgid "Attaching Files From Disk"
msgstr "從 Disk 中附加檔案"

# File: docs/8.x/mail.md, line: 377
# File: docs/9.x/mail.md, line: 387
# File: docs/master/mail.md, line: 387
#. type: Plain text
msgid "If you have stored a file on one of your [filesystem disks](/docs/{{version}}/filesystem), you may attach it to the email using the `attachFromStorage` method:"
msgstr "若有儲存在[檔案系統 Disk](/docs/{{version}}/filesystem)中的檔案，可使用 `attachFromStorage` 方法來將其附加至郵件中："

# File: docs/8.x/mail.md, line: 388
# File: docs/9.x/mail.md, line: 398
# File: docs/master/mail.md, line: 398
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Build the message.\n"
"     *\n"
"     * @return $this\n"
"     */\n"
"    public function build()\n"
"    {\n"
"       return $this->view('emails.orders.shipped')\n"
"                   ->attachFromStorage('/path/to/file');\n"
"    }\n"
msgstr "    /**\n"
"     * Build the message.\n"
"     *\n"
"     * @return $this\n"
"     */\n"
"    public function build()\n"
"    {\n"
"       return $this->view('emails.orders.shipped')\n"
"                   ->attachFromStorage('/path/to/file');\n"
"    }\n"

# File: docs/8.x/mail.md, line: 390
# File: docs/9.x/mail.md, line: 400
# File: docs/master/mail.md, line: 400
#. type: Plain text
msgid "If necessary, you may specify the file's attachment name and additional options using the second and third arguments to the `attachFromStorage` method:"
msgstr "若有需要，可使用 `attachFromStorage` 方法的第三與第四個引數來指定檔案名稱與其他額外的選項："

# File: docs/8.x/mail.md, line: 403
# File: docs/9.x/mail.md, line: 413
# File: docs/master/mail.md, line: 413
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Build the message.\n"
"     *\n"
"     * @return $this\n"
"     */\n"
"    public function build()\n"
"    {\n"
"       return $this->view('emails.orders.shipped')\n"
"                   ->attachFromStorage('/path/to/file', 'name.pdf', [\n"
"                       'mime' => 'application/pdf'\n"
"                   ]);\n"
"    }\n"
msgstr "    /**\n"
"     * Build the message.\n"
"     *\n"
"     * @return $this\n"
"     */\n"
"    public function build()\n"
"    {\n"
"       return $this->view('emails.orders.shipped')\n"
"                   ->attachFromStorage('/path/to/file', 'name.pdf', [\n"
"                       'mime' => 'application/pdf'\n"
"                   ]);\n"
"    }\n"

# File: docs/8.x/mail.md, line: 405
# File: docs/9.x/mail.md, line: 415
# File: docs/master/mail.md, line: 415
#. type: Plain text
msgid "The `attachFromStorageDisk` method may be used if you need to specify a storage disk other than your default disk:"
msgstr "若想指定預設以外的 Disk，可使用 `attachFromStorageDisk` 方法："

# File: docs/8.x/mail.md, line: 416
# File: docs/9.x/mail.md, line: 426
# File: docs/master/mail.md, line: 426
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Build the message.\n"
"     *\n"
"     * @return $this\n"
"     */\n"
"    public function build()\n"
"    {\n"
"       return $this->view('emails.orders.shipped')\n"
"                   ->attachFromStorageDisk('s3', '/path/to/file');\n"
"    }\n"
msgstr "    /**\n"
"     * Build the message.\n"
"     *\n"
"     * @return $this\n"
"     */\n"
"    public function build()\n"
"    {\n"
"       return $this->view('emails.orders.shipped')\n"
"                   ->attachFromStorageDisk('s3', '/path/to/file');\n"
"    }\n"

# File: docs/8.x/mail.md, line: 418
# File: docs/9.x/mail.md, line: 428
# File: docs/master/mail.md, line: 428
#. type: Plain text
#, no-wrap
msgid "<a name=\"raw-data-attachments\"></a>\n"
msgstr "<a name=\"raw-data-attachments\"></a>\n"

# File: docs/8.x/mail.md, line: 418
# File: docs/9.x/mail.md, line: 428
# File: docs/master/mail.md, line: 428
#. type: Title ####
#, no-wrap
msgid "Raw Data Attachments"
msgstr "原始資料附加檔案"

# File: docs/8.x/mail.md, line: 421
# File: docs/9.x/mail.md, line: 431
# File: docs/master/mail.md, line: 431
#. type: Plain text
msgid "The `attachData` method may be used to attach a raw string of bytes as an attachment. For example, you might use this method if you have generated a PDF in memory and want to attach it to the email without writing it to disk. The `attachData` method accepts the raw data bytes as its first argument, the name of the file as its second argument, and an array of options as its third argument:"
msgstr "可使用 `attachData` 方法來以位元組原始字串的形式作為附件附加。舉例來說，我們可能會在記憶體內產生 PDF，然後想在不寫入 Disk 的情況下將其附加到郵件上。`attachData` 方法接受原始資料位元組作為其第一個引數，檔案名稱為其第二個引數，然後是一組選項陣列作為其第三個引數："

# File: docs/8.x/mail.md, line: 434
# File: docs/9.x/mail.md, line: 444
# File: docs/master/mail.md, line: 444
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Build the message.\n"
"     *\n"
"     * @return $this\n"
"     */\n"
"    public function build()\n"
"    {\n"
"        return $this->view('emails.orders.shipped')\n"
"                    ->attachData($this->pdf, 'name.pdf', [\n"
"                        'mime' => 'application/pdf',\n"
"                    ]);\n"
"    }\n"
msgstr "    /**\n"
"     * Build the message.\n"
"     *\n"
"     * @return $this\n"
"     */\n"
"    public function build()\n"
"    {\n"
"        return $this->view('emails.orders.shipped')\n"
"                    ->attachData($this->pdf, 'name.pdf', [\n"
"                        'mime' => 'application/pdf',\n"
"                    ]);\n"
"    }\n"

# File: docs/8.x/mail.md, line: 436
# File: docs/9.x/mail.md, line: 446
# File: docs/master/mail.md, line: 446
#. type: Plain text
#, no-wrap
msgid "<a name=\"inline-attachments\"></a>\n"
msgstr "<a name=\"inline-attachments\"></a>\n"

# File: docs/8.x/mail.md, line: 436
# File: docs/9.x/mail.md, line: 446
# File: docs/master/mail.md, line: 446
#. type: Title ###
#, no-wrap
msgid "Inline Attachments"
msgstr "內嵌的附加檔案"

# File: docs/8.x/mail.md, line: 439
# File: docs/9.x/mail.md, line: 449
# File: docs/master/mail.md, line: 449
#. type: Plain text
msgid "Embedding inline images into your emails is typically cumbersome; however, Laravel provides a convenient way to attach images to your emails. To embed an inline image, use the `embed` method on the `$message` variable within your email template. Laravel automatically makes the `$message` variable available to all of your email templates, so you don't need to worry about passing it in manually:"
msgstr "一般來說，要把圖片內嵌到郵件裡面是很麻煩的。不過，Laravel 提供了一個方便的方法可以將圖片附加到郵件裡。若要內嵌圖片，請使用郵件樣板內 `$message` 變數中的 `embed` 方法。Laravel 會自動為所有的郵件樣板提供這個 `$message` 變數，所以我們不需要手動傳入："

# File: docs/8.x/mail.md, line: 442
#. type: Plain text
#, no-wrap
msgid "    <body>\n"
"        Here is an image:\n"
msgstr ""

# File: docs/8.x/mail.md, line: 445
#. type: Plain text
#, no-wrap
msgid "        <img src=\"{{ $message->embed($pathToImage) }}\">\n"
"    </body>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 447
# File: docs/9.x/mail.md, line: 459
# File: docs/master/mail.md, line: 459
#. type: Plain text
#, no-wrap
msgid "> {note} The `$message` variable is not available in plain-text message templates since plain-text messages do not utilize inline attachments.\n"
msgstr ""

# File: docs/8.x/mail.md, line: 449
# File: docs/9.x/mail.md, line: 461
# File: docs/master/mail.md, line: 461
#. type: Plain text
#, no-wrap
msgid "<a name=\"embedding-raw-data-attachments\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 449
# File: docs/9.x/mail.md, line: 461
# File: docs/master/mail.md, line: 461
#. type: Title ####
#, no-wrap
msgid "Embedding Raw Data Attachments"
msgstr ""

# File: docs/8.x/mail.md, line: 452
# File: docs/9.x/mail.md, line: 464
# File: docs/master/mail.md, line: 464
#. type: Plain text
msgid "If you already have a raw image data string you wish to embed into an email template, you may call the `embedData` method on the `$message` variable. When calling the `embedData` method, you will need to provide a filename that should be assigned to the embedded image:"
msgstr ""

# File: docs/8.x/mail.md, line: 455
#. type: Plain text
#, no-wrap
msgid "    <body>\n"
"        Here is an image from raw data:\n"
msgstr ""

# File: docs/8.x/mail.md, line: 458
#. type: Plain text
#, no-wrap
msgid "        <img src=\"{{ $message->embedData($data, 'example-image.jpg') }}\">\n"
"    </body>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 460
#. type: Plain text
#, no-wrap
msgid "<a name=\"customizing-the-swiftmailer-message\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 460
#. type: Title ###
#, no-wrap
msgid "Customizing The SwiftMailer Message"
msgstr ""

# File: docs/8.x/mail.md, line: 463
#. type: Plain text
msgid "The `withSwiftMessage` method of the `Mailable` base class allows you to register a closure which will be invoked with the SwiftMailer message instance before sending the message. This gives you an opportunity to deeply customize the message before it is delivered:"
msgstr ""

# File: docs/8.x/mail.md, line: 472
# File: docs/9.x/mail.md, line: 488
# File: docs/master/mail.md, line: 488
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Build the message.\n"
"     *\n"
"     * @return $this\n"
"     */\n"
"    public function build()\n"
"    {\n"
"        $this->view('emails.orders.shipped');\n"
msgstr ""

# File: docs/8.x/mail.md, line: 478
#. type: Plain text
#, no-wrap
msgid "        $this->withSwiftMessage(function ($message) {\n"
"            $message->getHeaders()->addTextHeader(\n"
"                'Custom-Header', 'Header Value'\n"
"            );\n"
"        });\n"
msgstr ""

# File: docs/8.x/mail.md, line: 481
# File: docs/9.x/mail.md, line: 497
# File: docs/master/mail.md, line: 497
#. type: Plain text
#, no-wrap
msgid "        return $this;\n"
"    }\n"
msgstr ""

# File: docs/8.x/mail.md, line: 483
# File: docs/9.x/mail.md, line: 499
# File: docs/master/mail.md, line: 499
#. type: Plain text
#, no-wrap
msgid "<a name=\"markdown-mailables\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 483
# File: docs/9.x/mail.md, line: 499
# File: docs/master/mail.md, line: 499
#. type: Title ##
#, no-wrap
msgid "Markdown Mailables"
msgstr ""

# File: docs/8.x/mail.md, line: 486
# File: docs/9.x/mail.md, line: 502
# File: docs/master/mail.md, line: 502
#. type: Plain text
msgid "Markdown mailable messages allow you to take advantage of the pre-built templates and components of [mail notifications](/docs/{{version}}/notifications#mail-notifications) in your mailables. Since the messages are written in Markdown, Laravel is able to render beautiful, responsive HTML templates for the messages while also automatically generating a plain-text counterpart."
msgstr ""

# File: docs/8.x/mail.md, line: 488
# File: docs/9.x/mail.md, line: 504
# File: docs/master/mail.md, line: 504
#. type: Plain text
#, no-wrap
msgid "<a name=\"generating-markdown-mailables\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 488
# File: docs/9.x/mail.md, line: 504
# File: docs/master/mail.md, line: 504
#. type: Title ###
#, no-wrap
msgid "Generating Markdown Mailables"
msgstr ""

# File: docs/8.x/mail.md, line: 491
# File: docs/9.x/mail.md, line: 507
# File: docs/master/mail.md, line: 507
#. type: Plain text
msgid "To generate a mailable with a corresponding Markdown template, you may use the `--markdown` option of the `make:mail` Artisan command:"
msgstr ""

# File: docs/8.x/mail.md, line: 493
#. type: Plain text
#, no-wrap
msgid "    php artisan make:mail OrderShipped --markdown=emails.orders.shipped\n"
msgstr ""

# File: docs/8.x/mail.md, line: 495
# File: docs/9.x/mail.md, line: 513
# File: docs/master/mail.md, line: 513
#. type: Plain text
msgid "Then, when configuring the mailable within its `build` method, call the `markdown` method instead of the `view` method. The `markdown` method accepts the name of the Markdown template and an optional array of data to make available to the template:"
msgstr ""

# File: docs/8.x/mail.md, line: 508
# File: docs/9.x/mail.md, line: 526
# File: docs/master/mail.md, line: 526
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Build the message.\n"
"     *\n"
"     * @return $this\n"
"     */\n"
"    public function build()\n"
"    {\n"
"        return $this->from('example@example.com')\n"
"                    ->markdown('emails.orders.shipped', [\n"
"                        'url' => $this->orderUrl,\n"
"                    ]);\n"
"    }\n"
msgstr ""

# File: docs/8.x/mail.md, line: 510
# File: docs/9.x/mail.md, line: 528
# File: docs/master/mail.md, line: 528
#. type: Plain text
#, no-wrap
msgid "<a name=\"writing-markdown-messages\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 510
# File: docs/9.x/mail.md, line: 528
# File: docs/master/mail.md, line: 528
#. type: Title ###
#, no-wrap
msgid "Writing Markdown Messages"
msgstr ""

# File: docs/8.x/mail.md, line: 513
# File: docs/9.x/mail.md, line: 531
# File: docs/master/mail.md, line: 531
#. type: Plain text
msgid "Markdown mailables use a combination of Blade components and Markdown syntax which allow you to easily construct mail messages while leveraging Laravel's pre-built email UI components:"
msgstr ""

# File: docs/8.x/mail.md, line: 516
#. type: Plain text
#, no-wrap
msgid "    @component('mail::message')\n"
"    # Order Shipped\n"
msgstr ""

# File: docs/8.x/mail.md, line: 518
#. type: Plain text
#, no-wrap
msgid "    Your order has been shipped!\n"
msgstr ""

# File: docs/8.x/mail.md, line: 522
#. type: Plain text
#, no-wrap
msgid "    @component('mail::button', ['url' => $url])\n"
"    View Order\n"
"    @endcomponent\n"
msgstr ""

# File: docs/8.x/mail.md, line: 526
#. type: Plain text
#, no-wrap
msgid "    Thanks,<br>\n"
"    {{ config('app.name') }}\n"
"    @endcomponent\n"
msgstr ""

# File: docs/8.x/mail.md, line: 528
# File: docs/9.x/mail.md, line: 548
# File: docs/master/mail.md, line: 548
#. type: Plain text
#, no-wrap
msgid "> {tip} Do not use excess indentation when writing Markdown emails. Per Markdown standards, Markdown parsers will render indented content as code blocks.\n"
msgstr ""

# File: docs/8.x/mail.md, line: 530
# File: docs/9.x/mail.md, line: 550
# File: docs/master/mail.md, line: 550
#. type: Plain text
#, no-wrap
msgid "<a name=\"button-component\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 530
# File: docs/9.x/mail.md, line: 550
# File: docs/master/mail.md, line: 550
#. type: Title ####
#, no-wrap
msgid "Button Component"
msgstr ""

# File: docs/8.x/mail.md, line: 533
# File: docs/9.x/mail.md, line: 553
# File: docs/master/mail.md, line: 553
#. type: Plain text
msgid "The button component renders a centered button link. The component accepts two arguments, a `url` and an optional `color`. Supported colors are `primary`, `success`, and `error`. You may add as many button components to a message as you wish:"
msgstr ""

# File: docs/8.x/mail.md, line: 537
#. type: Plain text
#, no-wrap
msgid "    @component('mail::button', ['url' => $url, 'color' => 'success'])\n"
"    View Order\n"
"    @endcomponent\n"
msgstr ""

# File: docs/8.x/mail.md, line: 539
# File: docs/9.x/mail.md, line: 561
# File: docs/master/mail.md, line: 561
#. type: Plain text
#, no-wrap
msgid "<a name=\"panel-component\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 539
# File: docs/9.x/mail.md, line: 561
# File: docs/master/mail.md, line: 561
#. type: Title ####
#, no-wrap
msgid "Panel Component"
msgstr ""

# File: docs/8.x/mail.md, line: 542
# File: docs/9.x/mail.md, line: 564
# File: docs/master/mail.md, line: 564
#. type: Plain text
msgid "The panel component renders the given block of text in a panel that has a slightly different background color than the rest of the message. This allows you to draw attention to a given block of text:"
msgstr ""

# File: docs/8.x/mail.md, line: 546
#. type: Plain text
#, no-wrap
msgid "    @component('mail::panel')\n"
"    This is the panel content.\n"
"    @endcomponent\n"
msgstr ""

# File: docs/8.x/mail.md, line: 548
# File: docs/9.x/mail.md, line: 572
# File: docs/master/mail.md, line: 572
#. type: Plain text
#, no-wrap
msgid "<a name=\"table-component\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 548
# File: docs/9.x/mail.md, line: 572
# File: docs/master/mail.md, line: 572
#. type: Title ####
#, no-wrap
msgid "Table Component"
msgstr ""

# File: docs/8.x/mail.md, line: 551
# File: docs/9.x/mail.md, line: 575
# File: docs/master/mail.md, line: 575
#. type: Plain text
msgid "The table component allows you to transform a Markdown table into an HTML table. The component accepts the Markdown table as its content. Table column alignment is supported using the default Markdown table alignment syntax:"
msgstr ""

# File: docs/8.x/mail.md, line: 558
#. type: Plain text
#, no-wrap
msgid "    @component('mail::table')\n"
"    | Laravel       | Table         | Example  |\n"
"    | ------------- |:-------------:| --------:|\n"
"    | Col 2 is      | Centered      | $10      |\n"
"    | Col 3 is      | Right-Aligned | $20      |\n"
"    @endcomponent\n"
msgstr ""

# File: docs/8.x/mail.md, line: 560
# File: docs/9.x/mail.md, line: 586
# File: docs/master/mail.md, line: 586
#. type: Plain text
#, no-wrap
msgid "<a name=\"customizing-the-components\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 560
# File: docs/9.x/mail.md, line: 586
# File: docs/master/mail.md, line: 586
#. type: Title ###
#, no-wrap
msgid "Customizing The Components"
msgstr ""

# File: docs/8.x/mail.md, line: 563
# File: docs/9.x/mail.md, line: 589
# File: docs/master/mail.md, line: 589
#. type: Plain text
msgid "You may export all of the Markdown mail components to your own application for customization. To export the components, use the `vendor:publish` Artisan command to publish the `laravel-mail` asset tag:"
msgstr ""

# File: docs/8.x/mail.md, line: 565
#. type: Plain text
#, no-wrap
msgid "    php artisan vendor:publish --tag=laravel-mail\n"
msgstr ""

# File: docs/8.x/mail.md, line: 567
# File: docs/9.x/mail.md, line: 595
# File: docs/master/mail.md, line: 595
#. type: Plain text
msgid "This command will publish the Markdown mail components to the `resources/views/vendor/mail` directory. The `mail` directory will contain an `html` and a `text` directory, each containing their respective representations of every available component. You are free to customize these components however you like."
msgstr ""

# File: docs/8.x/mail.md, line: 569
# File: docs/9.x/mail.md, line: 597
# File: docs/master/mail.md, line: 597
#. type: Plain text
#, no-wrap
msgid "<a name=\"customizing-the-css\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 569
# File: docs/9.x/mail.md, line: 597
# File: docs/master/mail.md, line: 597
#. type: Title ####
#, no-wrap
msgid "Customizing The CSS"
msgstr ""

# File: docs/8.x/mail.md, line: 572
# File: docs/9.x/mail.md, line: 600
# File: docs/master/mail.md, line: 600
#. type: Plain text
msgid "After exporting the components, the `resources/views/vendor/mail/html/themes` directory will contain a `default.css` file. You may customize the CSS in this file and your styles will automatically be converted to inline CSS styles within the HTML representations of your Markdown mail messages."
msgstr ""

# File: docs/8.x/mail.md, line: 574
# File: docs/9.x/mail.md, line: 602
# File: docs/master/mail.md, line: 602
#. type: Plain text
msgid "If you would like to build an entirely new theme for Laravel's Markdown components, you may place a CSS file within the `html/themes` directory. After naming and saving your CSS file, update the `theme` option of your application's `config/mail.php` configuration file to match the name of your new theme."
msgstr ""

# File: docs/8.x/mail.md, line: 576
# File: docs/9.x/mail.md, line: 604
# File: docs/master/mail.md, line: 604
#. type: Plain text
msgid "To customize the theme for an individual mailable, you may set the `$theme` property of the mailable class to the name of the theme that should be used when sending that mailable."
msgstr ""

# File: docs/8.x/mail.md, line: 578
# File: docs/9.x/mail.md, line: 606
# File: docs/master/mail.md, line: 606
#. type: Plain text
#, no-wrap
msgid "<a name=\"sending-mail\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 578
# File: docs/9.x/mail.md, line: 606
# File: docs/master/mail.md, line: 606
#. type: Title ##
#, no-wrap
msgid "Sending Mail"
msgstr ""

# File: docs/8.x/mail.md, line: 581
# File: docs/9.x/mail.md, line: 609
# File: docs/master/mail.md, line: 609
#. type: Plain text
msgid "To send a message, use the `to` method on the `Mail` [facade](/docs/{{version}}/facades). The `to` method accepts an email address, a user instance, or a collection of users. If you pass an object or collection of objects, the mailer will automatically use their `email` and `name` properties when determining the email's recipients, so make sure these attributes are available on your objects. Once you have specified your recipients, you may pass an instance of your mailable class to the `send` method:"
msgstr ""

# File: docs/8.x/mail.md, line: 585
# File: docs/9.x/mail.md, line: 613
# File: docs/master/mail.md, line: 613
#. type: Plain text
#, no-wrap
msgid "    namespace App\\Http\\Controllers;\n"
msgstr ""

# File: docs/8.x/mail.md, line: 591
# File: docs/9.x/mail.md, line: 619
# File: docs/master/mail.md, line: 619
#. type: Plain text
#, no-wrap
msgid "    use App\\Http\\Controllers\\Controller;\n"
"    use App\\Mail\\OrderShipped;\n"
"    use App\\Models\\Order;\n"
"    use Illuminate\\Http\\Request;\n"
"    use Illuminate\\Support\\Facades\\Mail;\n"
msgstr ""

# File: docs/8.x/mail.md, line: 603
# File: docs/9.x/mail.md, line: 631
# File: docs/master/mail.md, line: 631
#. type: Plain text
#, no-wrap
msgid "    class OrderShipmentController extends Controller\n"
"    {\n"
"        /**\n"
"         * Ship the given order.\n"
"         *\n"
"         * @param  \\Illuminate\\Http\\Request  $request\n"
"         * @return \\Illuminate\\Http\\Response\n"
"         */\n"
"        public function store(Request $request)\n"
"        {\n"
"            $order = Order::findOrFail($request->order_id);\n"
msgstr ""

# File: docs/8.x/mail.md, line: 605
# File: docs/9.x/mail.md, line: 633
# File: docs/master/mail.md, line: 633
#. type: Plain text
#, no-wrap
msgid "            // Ship the order...\n"
msgstr ""

# File: docs/8.x/mail.md, line: 609
# File: docs/9.x/mail.md, line: 637
# File: docs/master/mail.md, line: 637
#. type: Plain text
#, no-wrap
msgid "            Mail::to($request->user())->send(new OrderShipped($order));\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/mail.md, line: 611
# File: docs/9.x/mail.md, line: 639
# File: docs/master/mail.md, line: 639
#. type: Plain text
msgid "You are not limited to just specifying the \"to\" recipients when sending a message. You are free to set \"to\", \"cc\", and \"bcc\" recipients by chaining their respective methods together:"
msgstr ""

# File: docs/8.x/mail.md, line: 616
# File: docs/9.x/mail.md, line: 644
# File: docs/master/mail.md, line: 644
#. type: Plain text
#, no-wrap
msgid "    Mail::to($request->user())\n"
"        ->cc($moreUsers)\n"
"        ->bcc($evenMoreUsers)\n"
"        ->send(new OrderShipped($order));\n"
msgstr ""

# File: docs/8.x/mail.md, line: 618
# File: docs/9.x/mail.md, line: 646
# File: docs/master/mail.md, line: 646
#. type: Plain text
#, no-wrap
msgid "<a name=\"looping-over-recipients\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 618
# File: docs/9.x/mail.md, line: 646
# File: docs/master/mail.md, line: 646
#. type: Title ####
#, no-wrap
msgid "Looping Over Recipients"
msgstr ""

# File: docs/8.x/mail.md, line: 621
# File: docs/9.x/mail.md, line: 649
# File: docs/master/mail.md, line: 649
#. type: Plain text
msgid "Occasionally, you may need to send a mailable to a list of recipients by iterating over an array of recipients / email addresses. However, since the `to` method appends email addresses to the mailable's list of recipients, each iteration through the loop will send another email to every previous recipient. Therefore, you should always re-create the mailable instance for each recipient:"
msgstr ""

# File: docs/8.x/mail.md, line: 625
# File: docs/9.x/mail.md, line: 653
# File: docs/master/mail.md, line: 653
#. type: Plain text
#, no-wrap
msgid "    foreach (['taylor@example.com', 'dries@example.com'] as $recipient) {\n"
"        Mail::to($recipient)->send(new OrderShipped($order));\n"
"    }\n"
msgstr ""

# File: docs/8.x/mail.md, line: 627
# File: docs/9.x/mail.md, line: 655
# File: docs/master/mail.md, line: 655
#. type: Plain text
#, no-wrap
msgid "<a name=\"sending-mail-via-a-specific-mailer\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 627
# File: docs/9.x/mail.md, line: 655
# File: docs/master/mail.md, line: 655
#. type: Title ####
#, no-wrap
msgid "Sending Mail Via A Specific Mailer"
msgstr ""

# File: docs/8.x/mail.md, line: 630
# File: docs/9.x/mail.md, line: 658
# File: docs/master/mail.md, line: 658
#. type: Plain text
msgid "By default, Laravel will send email using the mailer configured as the `default` mailer in your application's `mail` configuration file. However, you may use the `mailer` method to send a message using a specific mailer configuration:"
msgstr ""

# File: docs/8.x/mail.md, line: 634
# File: docs/9.x/mail.md, line: 662
# File: docs/master/mail.md, line: 662
#. type: Plain text
#, no-wrap
msgid "    Mail::mailer('postmark')\n"
"            ->to($request->user())\n"
"            ->send(new OrderShipped($order));\n"
msgstr ""

# File: docs/8.x/mail.md, line: 636
# File: docs/9.x/mail.md, line: 664
# File: docs/master/mail.md, line: 664
#. type: Plain text
#, no-wrap
msgid "<a name=\"queueing-mail\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 636
# File: docs/9.x/mail.md, line: 664
# File: docs/master/mail.md, line: 664
#. type: Title ###
#, no-wrap
msgid "Queueing Mail"
msgstr ""

# File: docs/8.x/mail.md, line: 639
# File: docs/9.x/mail.md, line: 667
# File: docs/master/mail.md, line: 667
#. type: Plain text
#, no-wrap
msgid "<a name=\"queueing-a-mail-message\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 639
# File: docs/9.x/mail.md, line: 667
# File: docs/master/mail.md, line: 667
#. type: Title ####
#, no-wrap
msgid "Queueing A Mail Message"
msgstr ""

# File: docs/8.x/mail.md, line: 642
# File: docs/9.x/mail.md, line: 670
# File: docs/master/mail.md, line: 670
#. type: Plain text
msgid "Since sending email messages can negatively impact the response time of your application, many developers choose to queue email messages for background sending. Laravel makes this easy using its built-in [unified queue API](/docs/{{version}}/queues). To queue a mail message, use the `queue` method on the `Mail` facade after specifying the message's recipients:"
msgstr ""

# File: docs/8.x/mail.md, line: 647
# File: docs/9.x/mail.md, line: 675
# File: docs/master/mail.md, line: 675
#. type: Plain text
#, no-wrap
msgid "    Mail::to($request->user())\n"
"        ->cc($moreUsers)\n"
"        ->bcc($evenMoreUsers)\n"
"        ->queue(new OrderShipped($order));\n"
msgstr ""

# File: docs/8.x/mail.md, line: 649
# File: docs/9.x/mail.md, line: 677
# File: docs/master/mail.md, line: 677
#. type: Plain text
msgid "This method will automatically take care of pushing a job onto the queue so the message is sent in the background. You will need to [configure your queues](/docs/{{version}}/queues) before using this feature."
msgstr ""

# File: docs/8.x/mail.md, line: 651
# File: docs/9.x/mail.md, line: 679
# File: docs/master/mail.md, line: 679
#. type: Plain text
#, no-wrap
msgid "<a name=\"delayed-message-queueing\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 651
# File: docs/9.x/mail.md, line: 679
# File: docs/master/mail.md, line: 679
#. type: Title ####
#, no-wrap
msgid "Delayed Message Queueing"
msgstr ""

# File: docs/8.x/mail.md, line: 654
# File: docs/9.x/mail.md, line: 682
# File: docs/master/mail.md, line: 682
#. type: Plain text
msgid "If you wish to delay the delivery of a queued email message, you may use the `later` method. As its first argument, the `later` method accepts a `DateTime` instance indicating when the message should be sent:"
msgstr ""

# File: docs/8.x/mail.md, line: 659
# File: docs/9.x/mail.md, line: 687
# File: docs/master/mail.md, line: 687
#. type: Plain text
#, no-wrap
msgid "    Mail::to($request->user())\n"
"        ->cc($moreUsers)\n"
"        ->bcc($evenMoreUsers)\n"
"        ->later(now()->addMinutes(10), new OrderShipped($order));\n"
msgstr ""

# File: docs/8.x/mail.md, line: 661
# File: docs/9.x/mail.md, line: 689
# File: docs/master/mail.md, line: 689
#. type: Plain text
#, no-wrap
msgid "<a name=\"pushing-to-specific-queues\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 661
# File: docs/9.x/mail.md, line: 689
# File: docs/master/mail.md, line: 689
#. type: Title ####
#, no-wrap
msgid "Pushing To Specific Queues"
msgstr ""

# File: docs/8.x/mail.md, line: 664
# File: docs/9.x/mail.md, line: 692
# File: docs/master/mail.md, line: 692
#. type: Plain text
msgid "Since all mailable classes generated using the `make:mail` command make use of the `Illuminate\\Bus\\Queueable` trait, you may call the `onQueue` and `onConnection` methods on any mailable class instance, allowing you to specify the connection and queue name for the message:"
msgstr ""

# File: docs/8.x/mail.md, line: 668
# File: docs/9.x/mail.md, line: 696
# File: docs/master/mail.md, line: 696
#. type: Plain text
#, no-wrap
msgid "    $message = (new OrderShipped($order))\n"
"                    ->onConnection('sqs')\n"
"                    ->onQueue('emails');\n"
msgstr ""

# File: docs/8.x/mail.md, line: 673
# File: docs/9.x/mail.md, line: 701
# File: docs/master/mail.md, line: 701
#. type: Plain text
#, no-wrap
msgid "    Mail::to($request->user())\n"
"        ->cc($moreUsers)\n"
"        ->bcc($evenMoreUsers)\n"
"        ->queue($message);\n"
msgstr ""

# File: docs/8.x/mail.md, line: 675
# File: docs/9.x/mail.md, line: 703
# File: docs/master/mail.md, line: 703
#. type: Plain text
#, no-wrap
msgid "<a name=\"queueing-by-default\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 675
# File: docs/9.x/mail.md, line: 703
# File: docs/master/mail.md, line: 703
#. type: Title ####
#, no-wrap
msgid "Queueing By Default"
msgstr ""

# File: docs/8.x/mail.md, line: 678
# File: docs/9.x/mail.md, line: 706
# File: docs/master/mail.md, line: 706
#. type: Plain text
msgid "If you have mailable classes that you want to always be queued, you may implement the `ShouldQueue` contract on the class. Now, even if you call the `send` method when mailing, the mailable will still be queued since it implements the contract:"
msgstr ""

# File: docs/8.x/mail.md, line: 680
# File: docs/9.x/mail.md, line: 708
# File: docs/master/mail.md, line: 708
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Contracts\\Queue\\ShouldQueue;\n"
msgstr ""

# File: docs/8.x/mail.md, line: 685
# File: docs/9.x/mail.md, line: 713
# File: docs/master/mail.md, line: 713
#. type: Plain text
#, no-wrap
msgid "    class OrderShipped extends Mailable implements ShouldQueue\n"
"    {\n"
"        //\n"
"    }\n"
msgstr ""

# File: docs/8.x/mail.md, line: 687
# File: docs/9.x/mail.md, line: 715
# File: docs/master/mail.md, line: 715
#. type: Plain text
#, no-wrap
msgid "<a name=\"queued-mailables-and-database-transactions\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 687
# File: docs/9.x/mail.md, line: 715
# File: docs/master/mail.md, line: 715
#. type: Title ####
#, no-wrap
msgid "Queued Mailables & Database Transactions"
msgstr ""

# File: docs/8.x/mail.md, line: 690
# File: docs/9.x/mail.md, line: 718
# File: docs/master/mail.md, line: 718
#. type: Plain text
msgid "When queued mailables are dispatched within database transactions, they may be processed by the queue before the database transaction has committed. When this happens, any updates you have made to models or database records during the database transaction may not yet be reflected in the database. In addition, any models or database records created within the transaction may not exist in the database. If your mailable depends on these models, unexpected errors can occur when the job that sends the queued mailable is processed."
msgstr ""

# File: docs/8.x/mail.md, line: 692
# File: docs/9.x/mail.md, line: 720
# File: docs/master/mail.md, line: 720
#. type: Plain text
msgid "If your queue connection's `after_commit` configuration option is set to `false`, you may still indicate that a particular queued mailable should be dispatched after all open database transactions have been committed by calling the `afterCommit` method when sending the mail message:"
msgstr ""

# File: docs/8.x/mail.md, line: 696
# File: docs/9.x/mail.md, line: 724
# File: docs/master/mail.md, line: 724
#. type: Plain text
#, no-wrap
msgid "    Mail::to($request->user())->send(\n"
"        (new OrderShipped($order))->afterCommit()\n"
"    );\n"
msgstr ""

# File: docs/8.x/mail.md, line: 698
# File: docs/9.x/mail.md, line: 726
# File: docs/master/mail.md, line: 726
#. type: Plain text
msgid "Alternatively, you may call the `afterCommit` method from your mailable's constructor:"
msgstr ""

# File: docs/8.x/mail.md, line: 707
# File: docs/9.x/mail.md, line: 735
# File: docs/master/mail.md, line: 735
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Bus\\Queueable;\n"
"    use Illuminate\\Contracts\\Queue\\ShouldQueue;\n"
"    use Illuminate\\Mail\\Mailable;\n"
"    use Illuminate\\Queue\\SerializesModels;\n"
msgstr ""

# File: docs/8.x/mail.md, line: 711
# File: docs/9.x/mail.md, line: 739
# File: docs/master/mail.md, line: 739
#. type: Plain text
#, no-wrap
msgid "    class OrderShipped extends Mailable implements ShouldQueue\n"
"    {\n"
"        use Queueable, SerializesModels;\n"
msgstr ""

# File: docs/8.x/mail.md, line: 722
# File: docs/9.x/mail.md, line: 750
# File: docs/master/mail.md, line: 750
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * Create a new message instance.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function __construct()\n"
"        {\n"
"            $this->afterCommit();\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/mail.md, line: 724
# File: docs/9.x/mail.md, line: 752
# File: docs/master/mail.md, line: 752
#. type: Plain text
#, no-wrap
msgid "> {tip} To learn more about working around these issues, please review the documentation regarding [queued jobs and database transactions](/docs/{{version}}/queues#jobs-and-database-transactions).\n"
msgstr ""

# File: docs/8.x/mail.md, line: 726
# File: docs/9.x/mail.md, line: 754
# File: docs/master/mail.md, line: 754
#. type: Plain text
#, no-wrap
msgid "<a name=\"rendering-mailables\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 726
# File: docs/9.x/mail.md, line: 754
# File: docs/master/mail.md, line: 754
#. type: Title ##
#, no-wrap
msgid "Rendering Mailables"
msgstr ""

# File: docs/8.x/mail.md, line: 729
# File: docs/9.x/mail.md, line: 757
# File: docs/master/mail.md, line: 757
#. type: Plain text
msgid "Sometimes you may wish to capture the HTML content of a mailable without sending it. To accomplish this, you may call the `render` method of the mailable. This method will return the evaluated HTML content of the mailable as a string:"
msgstr ""

# File: docs/8.x/mail.md, line: 732
# File: docs/9.x/mail.md, line: 760
# File: docs/master/mail.md, line: 760
#. type: Plain text
#, no-wrap
msgid "    use App\\Mail\\InvoicePaid;\n"
"    use App\\Models\\Invoice;\n"
msgstr ""

# File: docs/8.x/mail.md, line: 734
# File: docs/9.x/mail.md, line: 762
# File: docs/master/mail.md, line: 762
#. type: Plain text
#, no-wrap
msgid "    $invoice = Invoice::find(1);\n"
msgstr ""

# File: docs/8.x/mail.md, line: 736
# File: docs/9.x/mail.md, line: 764
# File: docs/master/mail.md, line: 764
#. type: Plain text
#, no-wrap
msgid "    return (new InvoicePaid($invoice))->render();\n"
msgstr ""

# File: docs/8.x/mail.md, line: 738
# File: docs/9.x/mail.md, line: 766
# File: docs/master/mail.md, line: 766
#. type: Plain text
#, no-wrap
msgid "<a name=\"previewing-mailables-in-the-browser\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 738
# File: docs/9.x/mail.md, line: 766
# File: docs/master/mail.md, line: 766
#. type: Title ###
#, no-wrap
msgid "Previewing Mailables In The Browser"
msgstr ""

# File: docs/8.x/mail.md, line: 741
# File: docs/9.x/mail.md, line: 769
# File: docs/master/mail.md, line: 769
#. type: Plain text
msgid "When designing a mailable's template, it is convenient to quickly preview the rendered mailable in your browser like a typical Blade template. For this reason, Laravel allows you to return any mailable directly from a route closure or controller. When a mailable is returned, it will be rendered and displayed in the browser, allowing you to quickly preview its design without needing to send it to an actual email address:"
msgstr ""

# File: docs/8.x/mail.md, line: 744
# File: docs/9.x/mail.md, line: 772
# File: docs/master/mail.md, line: 772
#. type: Plain text
#, no-wrap
msgid "    Route::get('/mailable', function () {\n"
"        $invoice = App\\Models\\Invoice::find(1);\n"
msgstr ""

# File: docs/8.x/mail.md, line: 747
# File: docs/9.x/mail.md, line: 775
# File: docs/master/mail.md, line: 775
#. type: Plain text
#, no-wrap
msgid "        return new App\\Mail\\InvoicePaid($invoice);\n"
"    });\n"
msgstr ""

# File: docs/8.x/mail.md, line: 749
# File: docs/9.x/mail.md, line: 777
# File: docs/master/mail.md, line: 777
#. type: Plain text
#, no-wrap
msgid "> {note} [Inline attachments](#inline-attachments) will not be rendered when a mailable is previewed in your browser. To preview these mailables, you should send them to an email testing application such as [MailHog](https://github.com/mailhog/MailHog) or [HELO](https://usehelo.com).\n"
msgstr ""

# File: docs/8.x/mail.md, line: 751
# File: docs/9.x/mail.md, line: 779
# File: docs/master/mail.md, line: 779
#. type: Plain text
#, no-wrap
msgid "<a name=\"localizing-mailables\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 751
# File: docs/9.x/mail.md, line: 779
# File: docs/master/mail.md, line: 779
#. type: Title ##
#, no-wrap
msgid "Localizing Mailables"
msgstr ""

# File: docs/8.x/mail.md, line: 754
# File: docs/9.x/mail.md, line: 782
# File: docs/master/mail.md, line: 782
#. type: Plain text
msgid "Laravel allows you to send mailables in a locale other than the request's current locale, and will even remember this locale if the mail is queued."
msgstr ""

# File: docs/8.x/mail.md, line: 756
# File: docs/9.x/mail.md, line: 784
# File: docs/master/mail.md, line: 784
#. type: Plain text
msgid "To accomplish this, the `Mail` facade offers a `locale` method to set the desired language. The application will change into this locale when the mailable's template is being evaluated and then revert back to the previous locale when evaluation is complete:"
msgstr ""

# File: docs/8.x/mail.md, line: 760
# File: docs/9.x/mail.md, line: 788
# File: docs/master/mail.md, line: 788
#. type: Plain text
#, no-wrap
msgid "    Mail::to($request->user())->locale('es')->send(\n"
"        new OrderShipped($order)\n"
"    );\n"
msgstr ""

# File: docs/8.x/mail.md, line: 762
# File: docs/9.x/mail.md, line: 790
# File: docs/master/mail.md, line: 790
#. type: Plain text
#, no-wrap
msgid "<a name=\"user-preferred-locales\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 762
# File: docs/9.x/mail.md, line: 790
# File: docs/master/mail.md, line: 790
#. type: Title ###
#, no-wrap
msgid "User Preferred Locales"
msgstr ""

# File: docs/8.x/mail.md, line: 765
# File: docs/9.x/mail.md, line: 793
# File: docs/master/mail.md, line: 793
#. type: Plain text
msgid "Sometimes, applications store each user's preferred locale. By implementing the `HasLocalePreference` contract on one or more of your models, you may instruct Laravel to use this stored locale when sending mail:"
msgstr ""

# File: docs/8.x/mail.md, line: 767
# File: docs/9.x/mail.md, line: 795
# File: docs/master/mail.md, line: 795
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Contracts\\Translation\\HasLocalePreference;\n"
msgstr ""

# File: docs/8.x/mail.md, line: 780
# File: docs/9.x/mail.md, line: 808
# File: docs/master/mail.md, line: 808
#. type: Plain text
#, no-wrap
msgid "    class User extends Model implements HasLocalePreference\n"
"    {\n"
"        /**\n"
"         * Get the user's preferred locale.\n"
"         *\n"
"         * @return string\n"
"         */\n"
"        public function preferredLocale()\n"
"        {\n"
"            return $this->locale;\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/mail.md, line: 782
# File: docs/9.x/mail.md, line: 810
# File: docs/master/mail.md, line: 810
#. type: Plain text
msgid "Once you have implemented the interface, Laravel will automatically use the preferred locale when sending mailables and notifications to the model. Therefore, there is no need to call the `locale` method when using this interface:"
msgstr ""

# File: docs/8.x/mail.md, line: 784
# File: docs/9.x/mail.md, line: 812
# File: docs/master/mail.md, line: 812
#. type: Plain text
#, no-wrap
msgid "    Mail::to($request->user())->send(new OrderShipped($order));\n"
msgstr ""

# File: docs/8.x/mail.md, line: 786
# File: docs/9.x/mail.md, line: 814
# File: docs/master/mail.md, line: 814
#. type: Plain text
#, no-wrap
msgid "<a name=\"testing-mailables\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 786
# File: docs/9.x/mail.md, line: 814
# File: docs/master/mail.md, line: 814
#. type: Title ##
#, no-wrap
msgid "Testing Mailables"
msgstr ""

# File: docs/8.x/mail.md, line: 789
#. type: Plain text
msgid "Laravel provides several convenient methods for testing that your mailables contain the content that you expect. These methods are: `assertSeeInHtml`, `assertDontSeeInHtml`, `assertSeeInText`, and `assertDontSeeInText`."
msgstr ""

# File: docs/8.x/mail.md, line: 791
# File: docs/9.x/mail.md, line: 819
# File: docs/master/mail.md, line: 819
#. type: Plain text
msgid "As you might expect, the \"HTML\" assertions assert that the HTML version of your mailable contains a given string, while the \"text\" assertions assert that the plain-text version of your mailable contains a given string:"
msgstr ""

# File: docs/8.x/mail.md, line: 794
# File: docs/9.x/mail.md, line: 822
# File: docs/master/mail.md, line: 822
#. type: Plain text
#, no-wrap
msgid "    use App\\Mail\\InvoicePaid;\n"
"    use App\\Models\\User;\n"
msgstr ""

# File: docs/8.x/mail.md, line: 798
# File: docs/9.x/mail.md, line: 826
# File: docs/master/mail.md, line: 826
#. type: Plain text
#, no-wrap
msgid "    public function test_mailable_content()\n"
"    {\n"
"        $user = User::factory()->create();\n"
msgstr ""

# File: docs/8.x/mail.md, line: 800
# File: docs/9.x/mail.md, line: 828
# File: docs/master/mail.md, line: 828
#. type: Plain text
#, no-wrap
msgid "        $mailable = new InvoicePaid($user);\n"
msgstr ""

# File: docs/8.x/mail.md, line: 803
#. type: Plain text
#, no-wrap
msgid "        $mailable->assertSeeInHtml($user->email);\n"
"        $mailable->assertSeeInHtml('Invoice Paid');\n"
msgstr ""

# File: docs/8.x/mail.md, line: 807
#. type: Plain text
#, no-wrap
msgid "        $mailable->assertSeeInText($user->email);\n"
"        $mailable->assertSeeInText('Invoice Paid');\n"
"    }\n"
msgstr ""

# File: docs/8.x/mail.md, line: 809
# File: docs/9.x/mail.md, line: 838
# File: docs/master/mail.md, line: 838
#. type: Plain text
#, no-wrap
msgid "<a name=\"testing-mailable-sending\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 809
# File: docs/9.x/mail.md, line: 838
# File: docs/master/mail.md, line: 838
#. type: Title ####
#, no-wrap
msgid "Testing Mailable Sending"
msgstr ""

# File: docs/8.x/mail.md, line: 812
# File: docs/9.x/mail.md, line: 841
# File: docs/master/mail.md, line: 841
#. type: Plain text
msgid "We suggest testing the content of your mailables separately from your tests that assert that a given mailable was \"sent\" to a specific user. To learn how to test that mailables were sent, check out our documentation on the [Mail fake](/docs/{{version}}/mocking#mail-fake)."
msgstr ""

# File: docs/8.x/mail.md, line: 814
# File: docs/9.x/mail.md, line: 843
# File: docs/master/mail.md, line: 843
#. type: Plain text
#, no-wrap
msgid "<a name=\"mail-and-local-development\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 814
# File: docs/9.x/mail.md, line: 843
# File: docs/master/mail.md, line: 843
#. type: Title ##
#, no-wrap
msgid "Mail & Local Development"
msgstr ""

# File: docs/8.x/mail.md, line: 817
# File: docs/9.x/mail.md, line: 846
# File: docs/master/mail.md, line: 846
#. type: Plain text
msgid "When developing an application that sends email, you probably don't want to actually send emails to live email addresses. Laravel provides several ways to \"disable\" the actual sending of emails during local development."
msgstr ""

# File: docs/8.x/mail.md, line: 819
# File: docs/9.x/mail.md, line: 848
# File: docs/master/mail.md, line: 848
#. type: Plain text
#, no-wrap
msgid "<a name=\"log-driver\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 819
# File: docs/9.x/mail.md, line: 848
# File: docs/master/mail.md, line: 848
#. type: Title ####
#, no-wrap
msgid "Log Driver"
msgstr ""

# File: docs/8.x/mail.md, line: 822
# File: docs/9.x/mail.md, line: 851
# File: docs/master/mail.md, line: 851
#. type: Plain text
msgid "Instead of sending your emails, the `log` mail driver will write all email messages to your log files for inspection. Typically, this driver would only be used during local development. For more information on configuring your application per environment, check out the [configuration documentation](/docs/{{version}}/configuration#environment-configuration)."
msgstr ""

# File: docs/8.x/mail.md, line: 824
# File: docs/9.x/mail.md, line: 853
# File: docs/master/mail.md, line: 853
#. type: Plain text
#, no-wrap
msgid "<a name=\"mailtrap\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 824
# File: docs/9.x/mail.md, line: 853
# File: docs/master/mail.md, line: 853
#. type: Title ####
#, no-wrap
msgid "HELO / Mailtrap / MailHog"
msgstr ""

# File: docs/8.x/mail.md, line: 827
# File: docs/9.x/mail.md, line: 856
# File: docs/master/mail.md, line: 856
#. type: Plain text
msgid "Alternatively, you may use a service like [HELO](https://usehelo.com) or [Mailtrap](https://mailtrap.io) and the `smtp` driver to send your email messages to a \"dummy\" mailbox where you may view them in a true email client. This approach has the benefit of allowing you to actually inspect the final emails in Mailtrap's message viewer."
msgstr ""

# File: docs/8.x/mail.md, line: 829
# File: docs/9.x/mail.md, line: 858
# File: docs/master/mail.md, line: 858
#. type: Plain text
msgid "If you are using [Laravel Sail](/docs/{{version}}/sail), you may preview your messages using [MailHog](https://github.com/mailhog/MailHog). When Sail is running, you may access the MailHog interface at: `http://localhost:8025`."
msgstr ""

# File: docs/8.x/mail.md, line: 831
# File: docs/9.x/mail.md, line: 860
# File: docs/master/mail.md, line: 860
#. type: Plain text
#, no-wrap
msgid "<a name=\"using-a-global-to-address\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 831
# File: docs/9.x/mail.md, line: 860
# File: docs/master/mail.md, line: 860
#. type: Title ####
#, no-wrap
msgid "Using A Global `to` Address"
msgstr ""

# File: docs/8.x/mail.md, line: 834
# File: docs/9.x/mail.md, line: 863
# File: docs/master/mail.md, line: 863
#. type: Plain text
msgid "Finally, you may specify a global \"to\" address by invoking the `alwaysTo` method offered by the `Mail` facade. Typically, this method should be called from the `boot` method of one of your application's service providers:"
msgstr ""

# File: docs/8.x/mail.md, line: 836
# File: docs/9.x/mail.md, line: 865
# File: docs/master/mail.md, line: 865
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Support\\Facades\\Mail;\n"
msgstr ""

# File: docs/8.x/mail.md, line: 848
# File: docs/9.x/mail.md, line: 877
# File: docs/master/mail.md, line: 877
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Bootstrap any application services.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function boot()\n"
"    {\n"
"        if ($this->app->environment('local')) {\n"
"            Mail::alwaysTo('taylor@example.com');\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/mail.md, line: 850
# File: docs/9.x/mail.md, line: 879
# File: docs/master/mail.md, line: 879
#. type: Plain text
#, no-wrap
msgid "<a name=\"events\"></a>\n"
msgstr ""

# File: docs/8.x/mail.md, line: 850
# File: docs/9.x/mail.md, line: 879
# File: docs/master/mail.md, line: 879
#. type: Title ##
#, no-wrap
msgid "Events"
msgstr ""

# File: docs/8.x/mail.md, line: 853
# File: docs/9.x/mail.md, line: 882
# File: docs/master/mail.md, line: 882
#. type: Plain text
msgid "Laravel fires two events during the process of sending mail messages. The `MessageSending` event is fired prior to a message being sent, while the `MessageSent` event is fired after a message has been sent. Remember, these events are fired when the mail is being *sent*, not when it is queued. You may register event listeners for this event in your `App\\Providers\\EventServiceProvider` service provider:"
msgstr ""

# File: docs/8.x/mail.md, line: 866
# File: docs/9.x/mail.md, line: 896
# File: docs/master/mail.md, line: 896
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * The event listener mappings for the application.\n"
"     *\n"
"     * @var array\n"
"     */\n"
"    protected $listen = [\n"
"        'Illuminate\\Mail\\Events\\MessageSending' => [\n"
"            'App\\Listeners\\LogSendingMessage',\n"
"        ],\n"
"        'Illuminate\\Mail\\Events\\MessageSent' => [\n"
"            'App\\Listeners\\LogSentMessage',\n"
"        ],\n"
"    ];\n"
msgstr ""

# File: docs/9.x/mail.md, line: 29
# File: docs/master/mail.md, line: 29
#. type: Plain text
#, no-wrap
msgid "- [Introduction](#introduction)\n"
"    - [Configuration](#configuration)\n"
"    - [Driver Prerequisites](#driver-prerequisites)\n"
"    - [Failover Configuration](#failover-configuration)\n"
"- [Generating Mailables](#generating-mailables)\n"
"- [Writing Mailables](#writing-mailables)\n"
"    - [Configuring The Sender](#configuring-the-sender)\n"
"    - [Configuring The View](#configuring-the-view)\n"
"    - [View Data](#view-data)\n"
"    - [Attachments](#attachments)\n"
"    - [Inline Attachments](#inline-attachments)\n"
"    - [Customizing The Symfony Message](#customizing-the-symfony-message)\n"
"- [Markdown Mailables](#markdown-mailables)\n"
"    - [Generating Markdown Mailables](#generating-markdown-mailables)\n"
"    - [Writing Markdown Messages](#writing-markdown-messages)\n"
"    - [Customizing The Components](#customizing-the-components)\n"
"- [Sending Mail](#sending-mail)\n"
"    - [Queueing Mail](#queueing-mail)\n"
"- [Rendering Mailables](#rendering-mailables)\n"
"    - [Previewing Mailables In The Browser](#previewing-mailables-in-the-browser)\n"
"- [Localizing Mailables](#localizing-mailables)\n"
"- [Testing Mailables](#testing-mailables)\n"
"- [Mail & Local Development](#mail-and-local-development)\n"
"- [Events](#events)\n"
"- [Custom Transports](#custom-transports)\n"
"    - [Additional Symfony Transports](#additional-symfony-transports)\n"
msgstr ""

# File: docs/9.x/mail.md, line: 34
# File: docs/master/mail.md, line: 34
#. type: Plain text
msgid "Sending email doesn't have to be complicated. Laravel provides a clean, simple email API powered by the popular [Symfony Mailer](https://symfony.com/doc/6.0/mailer.html) component. Laravel and Symfony Mailer provide drivers for sending email via SMTP, Mailgun, Postmark, Amazon SES, and `sendmail`, allowing you to quickly get started sending mail through a local or cloud based service of your choice."
msgstr ""

# File: docs/9.x/mail.md, line: 46
# File: docs/master/mail.md, line: 46
#. type: Plain text
msgid "The API based drivers such as Mailgun and Postmark are often simpler and faster than sending mail via SMTP servers. Whenever possible, we recommend that you use one of these drivers."
msgstr ""

# File: docs/9.x/mail.md, line: 51
# File: docs/master/mail.md, line: 51
#. type: Plain text
msgid "To use the Mailgun driver, install Symfony's Mailgun Mailer transport via Composer:"
msgstr ""

# File: docs/9.x/mail.md, line: 52
# File: docs/9.x/mail.md, line: 76
# File: docs/9.x/mail.md, line: 100
# File: docs/9.x/mail.md, line: 164
# File: docs/9.x/mail.md, line: 508
# File: docs/9.x/mail.md, line: 590
# File: docs/master/mail.md, line: 52
# File: docs/master/mail.md, line: 76
# File: docs/master/mail.md, line: 100
# File: docs/master/mail.md, line: 164
# File: docs/master/mail.md, line: 508
# File: docs/master/mail.md, line: 590
#. type: Code fence info string
#, no-wrap
msgid "shell"
msgstr ""

# File: docs/9.x/mail.md, line: 52
# File: docs/master/mail.md, line: 52
#. type: Plain text
#, no-wrap
msgid "composer require symfony/mailgun-mailer\n"
msgstr ""

# File: docs/9.x/mail.md, line: 57
# File: docs/master/mail.md, line: 57
#. type: Plain text
msgid "Next, set the `default` option in your application's `config/mail.php` configuration file to `mailgun`. After configuring your application's default mailer, verify that your `config/services.php` configuration file contains the following options:"
msgstr ""

# File: docs/9.x/mail.md, line: 75
# File: docs/master/mail.md, line: 75
#. type: Plain text
msgid "To use the Postmark driver, install Symfony's Postmark Mailer transport via Composer:"
msgstr ""

# File: docs/9.x/mail.md, line: 76
# File: docs/master/mail.md, line: 76
#. type: Plain text
#, no-wrap
msgid "composer require symfony/postmark-mailer\n"
msgstr ""

# File: docs/9.x/mail.md, line: 81
# File: docs/master/mail.md, line: 81
#. type: Plain text
msgid "Next, set the `default` option in your application's `config/mail.php` configuration file to `postmark`. After configuring your application's default mailer, verify that your `config/services.php` configuration file contains the following options:"
msgstr ""

# File: docs/9.x/mail.md, line: 122
# File: docs/master/mail.md, line: 122
#. type: Plain text
msgid "If you would like to define [additional options](https://docs.aws.amazon.com/aws-sdk-php/v3/api/api-sesv2-2019-09-27.html#sendemail) that Laravel should pass to the AWS SDK's `SendEmail` method when sending an email, you may define an `options` array within your `ses` configuration:"
msgstr ""

# File: docs/9.x/mail.md, line: 134
# File: docs/master/mail.md, line: 134
#. type: Plain text
#, no-wrap
msgid "    'ses' => [\n"
"        'key' => env('AWS_ACCESS_KEY_ID'),\n"
"        'secret' => env('AWS_SECRET_ACCESS_KEY'),\n"
"        'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),\n"
"        'options' => [\n"
"            'ConfigurationSetName' => 'MyConfigurationSet',\n"
"            'EmailTags' => [\n"
"                ['Name' => 'foo', 'Value' => 'bar'],\n"
"            ],\n"
"        ],\n"
"    ],\n"
msgstr ""

# File: docs/9.x/mail.md, line: 164
# File: docs/master/mail.md, line: 164
#. type: Plain text
#, no-wrap
msgid "php artisan make:mail OrderShipped\n"
msgstr ""

# File: docs/9.x/mail.md, line: 450
# File: docs/9.x/mail.md, line: 465
# File: docs/9.x/mail.md, line: 532
# File: docs/9.x/mail.md, line: 554
# File: docs/9.x/mail.md, line: 565
# File: docs/9.x/mail.md, line: 576
# File: docs/master/mail.md, line: 450
# File: docs/master/mail.md, line: 465
# File: docs/master/mail.md, line: 532
# File: docs/master/mail.md, line: 554
# File: docs/master/mail.md, line: 565
# File: docs/master/mail.md, line: 576
#. type: Code fence info string
#, no-wrap
msgid "blade"
msgstr ""

# File: docs/9.x/mail.md, line: 450
# File: docs/master/mail.md, line: 450
#. type: Plain text
#, no-wrap
msgid "<body>\n"
"    Here is an image:\n\n"
"    <img src=\"{{ $message->embed($pathToImage) }}\">\n"
"</body>\n"
msgstr ""

# File: docs/9.x/mail.md, line: 465
# File: docs/master/mail.md, line: 465
#. type: Plain text
#, no-wrap
msgid "<body>\n"
"    Here is an image from raw data:\n\n"
"    <img src=\"{{ $message->embedData($data, 'example-image.jpg') }}\">\n"
"</body>\n"
msgstr ""

# File: docs/9.x/mail.md, line: 474
# File: docs/master/mail.md, line: 474
#. type: Plain text
#, no-wrap
msgid "<a name=\"customizing-the-symfony-message\"></a>\n"
msgstr ""

# File: docs/9.x/mail.md, line: 474
# File: docs/master/mail.md, line: 474
#. type: Title ###
#, no-wrap
msgid "Customizing The Symfony Message"
msgstr ""

# File: docs/9.x/mail.md, line: 477
# File: docs/master/mail.md, line: 477
#. type: Plain text
msgid "The `withSymfonyMessage` method of the `Mailable` base class allows you to register a closure which will be invoked with the Symfony Message instance before sending the message. This gives you an opportunity to deeply customize the message before it is delivered:"
msgstr ""

# File: docs/9.x/mail.md, line: 479
# File: docs/master/mail.md, line: 479
#. type: Plain text
#, no-wrap
msgid "    use Symfony\\Component\\Mime\\Email;\n"
msgstr ""

# File: docs/9.x/mail.md, line: 494
# File: docs/master/mail.md, line: 494
#. type: Plain text
#, no-wrap
msgid "        $this->withSymfonyMessage(function (Email $message) {\n"
"            $message->getHeaders()->addTextHeader(\n"
"                'Custom-Header', 'Header Value'\n"
"            );\n"
"        });\n"
msgstr ""

# File: docs/9.x/mail.md, line: 508
# File: docs/master/mail.md, line: 508
#. type: Plain text
#, no-wrap
msgid "php artisan make:mail OrderShipped --markdown=emails.orders.shipped\n"
msgstr ""

# File: docs/9.x/mail.md, line: 532
# File: docs/master/mail.md, line: 532
#. type: Plain text
#, no-wrap
msgid "@component('mail::message')\n"
"# Order Shipped\n\n"
"Your order has been shipped!\n\n"
"@component('mail::button', ['url' => $url])\n"
"View Order\n"
"@endcomponent\n\n"
"Thanks,<br>\n"
"{{ config('app.name') }}\n"
"@endcomponent\n"
msgstr ""

# File: docs/9.x/mail.md, line: 554
# File: docs/master/mail.md, line: 554
#. type: Plain text
#, no-wrap
msgid "@component('mail::button', ['url' => $url, 'color' => 'success'])\n"
"View Order\n"
"@endcomponent\n"
msgstr ""

# File: docs/9.x/mail.md, line: 565
# File: docs/master/mail.md, line: 565
#. type: Plain text
#, no-wrap
msgid "@component('mail::panel')\n"
"This is the panel content.\n"
"@endcomponent\n"
msgstr ""

# File: docs/9.x/mail.md, line: 576
# File: docs/master/mail.md, line: 576
#. type: Plain text
#, no-wrap
msgid "@component('mail::table')\n"
"| Laravel       | Table         | Example  |\n"
"| ------------- |:-------------:| --------:|\n"
"| Col 2 is      | Centered      | $10      |\n"
"| Col 3 is      | Right-Aligned | $20      |\n"
"@endcomponent\n"
msgstr ""

# File: docs/9.x/mail.md, line: 590
# File: docs/master/mail.md, line: 590
#. type: Plain text
#, no-wrap
msgid "php artisan vendor:publish --tag=laravel-mail\n"
msgstr ""

# File: docs/9.x/mail.md, line: 817
# File: docs/master/mail.md, line: 817
#. type: Plain text
msgid "Laravel provides several convenient methods for testing that your mailables contain the content that you expect. These methods are: `assertSeeInHtml`, `assertDontSeeInHtml`, `assertSeeInOrderInHtml`, `assertSeeInText`, `assertDontSeeInText`, and `assertSeeInOrderInText`."
msgstr ""

# File: docs/9.x/mail.md, line: 832
# File: docs/master/mail.md, line: 832
#. type: Plain text
#, no-wrap
msgid "        $mailable->assertSeeInHtml($user->email);\n"
"        $mailable->assertSeeInHtml('Invoice Paid');\n"
"        $mailable->assertSeeInOrderInHtml(['Invoice Paid', 'Thanks']);\n"
msgstr ""

# File: docs/9.x/mail.md, line: 836
# File: docs/master/mail.md, line: 836
#. type: Plain text
#, no-wrap
msgid "        $mailable->assertSeeInText($user->email);\n"
"        $mailable->assertSeeInOrderInText(['Invoice Paid', 'Thanks']);\n"
"    }\n"
msgstr ""

# File: docs/9.x/mail.md, line: 898
# File: docs/master/mail.md, line: 898
#. type: Plain text
#, no-wrap
msgid "<a name=\"custom-transports\"></a>\n"
msgstr ""

# File: docs/9.x/mail.md, line: 898
# File: docs/master/mail.md, line: 898
#. type: Title ##
#, no-wrap
msgid "Custom Transports"
msgstr ""

# File: docs/9.x/mail.md, line: 901
# File: docs/master/mail.md, line: 901
#. type: Plain text
msgid "Laravel includes a variety of mail transports; however, you may wish to write your own transports to deliver email via other services that Laravel does not support out of the box. To get started, define a class that extends the `Symfony\\Component\\Mailer\\Transport\\AbstractTransport` class. Then, implement the `doSend` and `__toString()` methods on your transport:"
msgstr ""

# File: docs/9.x/mail.md, line: 906
# File: docs/master/mail.md, line: 906
#. type: Plain text
#, no-wrap
msgid "    use MailchimpTransactional\\ApiClient;\n"
"    use Symfony\\Component\\Mailer\\SentMessage;\n"
"    use Symfony\\Component\\Mailer\\Transport\\AbstractTransport;\n"
"    use Symfony\\Component\\Mime\\MessageConverter;\n"
msgstr ""

# File: docs/9.x/mail.md, line: 915
# File: docs/master/mail.md, line: 915
#. type: Plain text
#, no-wrap
msgid "    class MailchimpTransport extends AbstractTransport\n"
"    {\n"
"        /**\n"
"         * The Mailchimp API client.\n"
"         *\n"
"         * @var \\MailchimpTransactional\\ApiClient\n"
"         */\n"
"        protected $client;\n"
msgstr ""

# File: docs/9.x/mail.md, line: 926
# File: docs/master/mail.md, line: 926
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * Create a new Mailchimp transport instance.\n"
"         *\n"
"         * @param  \\MailchimpTransactional\\ApiClient  $client\n"
"         * @return void\n"
"         */\n"
"        public function __construct(ApiClient $client)\n"
"        {\n"
"            $this->client = $client\n"
"        }\n"
msgstr ""

# File: docs/9.x/mail.md, line: 933
# File: docs/master/mail.md, line: 933
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * {@inheritDoc}\n"
"         */\n"
"        protected function doSend(SentMessage $message): void\n"
"        {\n"
"            $email = MessageConverter::toEmail($message->getOriginalMessage());\n"
msgstr ""

# File: docs/9.x/mail.md, line: 943
# File: docs/master/mail.md, line: 943
#. type: Plain text
#, no-wrap
msgid "            $this->client->messages->send(['message' => [\n"
"                'from_email' => $email->getFrom(),\n"
"                'to' => collect($email->getTo())->map(function ($email) {\n"
"                    return ['email' => $email->getAddress(), 'type' => 'to'];\n"
"                })->all(),\n"
"                'subject' => $email->getSubject(),\n"
"                'text' => $email->getTextBody(),\n"
"            ]]);\n"
"        }\n"
msgstr ""

# File: docs/9.x/mail.md, line: 954
# File: docs/master/mail.md, line: 954
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * Get the string representation of the transport.\n"
"         *\n"
"         * @return string\n"
"         */\n"
"        public function __toString(): string\n"
"        {\n"
"            return 'mailchimp';\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/9.x/mail.md, line: 956
# File: docs/master/mail.md, line: 956
#. type: Plain text
msgid "Once you've defined your custom transport, you may register it via the `extend` method provided by the `Mail` facade. Typically, this should be done within the `boot` method of your application's `AppServiceProvider` service provider. A `$config` argument will be passed to the closure provided to the `extend` method. This argument will contain the configuration array defined for the mailer in the application's `config/mail.php` configuration file:"
msgstr ""

# File: docs/9.x/mail.md, line: 959
# File: docs/master/mail.md, line: 959
#. type: Plain text
#, no-wrap
msgid "    use App\\Mail\\MailchimpTransport;\n"
"    use Illuminate\\Support\\Facades\\Mail;\n"
msgstr ""

# File: docs/9.x/mail.md, line: 971
# File: docs/master/mail.md, line: 971
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Bootstrap any application services.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function boot()\n"
"    {\n"
"        Mail::extend('mailchimp', function (array $config = []) {\n"
"            return new MailchimpTransport(...);\n"
"        })\n"
"    }\n"
msgstr ""

# File: docs/9.x/mail.md, line: 973
# File: docs/master/mail.md, line: 973
#. type: Plain text
msgid "Once your custom transport has been defined and registered, you may create a mailer definition within your application's `config/mail.php` configuration file that utilizes the new transport:"
msgstr ""

# File: docs/9.x/mail.md, line: 978
# File: docs/master/mail.md, line: 978
#. type: Plain text
#, no-wrap
msgid "    'mailchimp' => [\n"
"        'transport' => 'mailchimp',\n"
"        // ...\n"
"    ],\n"
msgstr ""

# File: docs/9.x/mail.md, line: 980
# File: docs/master/mail.md, line: 980
#. type: Plain text
#, no-wrap
msgid "<a name=\"additional-symfony-transports\"></a>\n"
msgstr ""

# File: docs/9.x/mail.md, line: 980
# File: docs/master/mail.md, line: 980
#. type: Title ###
#, no-wrap
msgid "Additional Symfony Transports"
msgstr ""

# File: docs/9.x/mail.md, line: 983
# File: docs/master/mail.md, line: 983
#. type: Plain text
msgid "Laravel includes support for some existing Symfony maintained mail transports like Mailgun and Postmark. However, you may wish to extend Laravel with support for additional Symfony maintained transports. You can do so by requiring the necessary Symfony mailer via Composer and registering the transport with Laravel. For example, you may install and register the \"Sendinblue\" Symfony mailer:"
msgstr ""

# File: docs/9.x/mail.md, line: 984
# File: docs/master/mail.md, line: 984
#. type: Code fence info string
#, no-wrap
msgid "none"
msgstr ""

# File: docs/9.x/mail.md, line: 984
# File: docs/master/mail.md, line: 984
#. type: Plain text
#, no-wrap
msgid "composer require symfony/sendinblue-mailer\n"
msgstr ""

# File: docs/9.x/mail.md, line: 989
# File: docs/master/mail.md, line: 989
#. type: Plain text
msgid "Once the Sendinblue mailer package has been installed, you may add an entry for your Sendinblue API credentials to your application's `services` configuration file:"
msgstr ""

# File: docs/9.x/mail.md, line: 993
# File: docs/master/mail.md, line: 993
#. type: Plain text
#, no-wrap
msgid "    'sendinblue' => [\n"
"        'key' => 'your-api-key',\n"
"    ],\n"
msgstr ""

# File: docs/9.x/mail.md, line: 995
# File: docs/master/mail.md, line: 995
#. type: Plain text
msgid "Finally, you may use the `Mail` facade's `extend` method to register the transport with Laravel. Typically, this should be done within the `boot` method of a service provider:"
msgstr ""

# File: docs/9.x/mail.md, line: 999
# File: docs/master/mail.md, line: 999
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Support\\Facades\\Mail;\n"
"    use Symfony\\Component\\Mailer\\Bridge\\Sendinblue\\Transport\\SendinblueTransportFactory;\n"
"    use Symfony\\Component\\Mailer\\Transport\\Dsn;\n"
msgstr ""

# File: docs/9.x/mail.md, line: 1016
# File: docs/master/mail.md, line: 1016
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Bootstrap any application services.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function boot()\n"
"    {\n"
"        Mail::extend('sendinblue', function () {\n"
"            return (new SendinblueTransportFactory)->create(\n"
"                new Dsn(\n"
"                    'sendinblue+api',\n"
"                    'default',\n"
"                    config('services.sendinblue.key')\n"
"                )\n"
"            );\n"
"        });\n"
"    }\n"
msgstr ""

