msgid ""
msgstr ""
"Content-Type: text/plain; charset=UTF-8\n"
"Language: zh_TW\n"
"Language-Team: Chinese Traditional\n"
"PO-Revision-Date: 2023-02-11 10:28\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Project-Id-Version: laravel-docs\n"
"X-Crowdin-File: /main/templates/redis.pot\n"
"X-Crowdin-File-ID: 133\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"

#: ./docs/8.x/redis.md:1
#: ./docs/9.x/redis.md:1
#: ./docs/10.x/redis.md:1
#: ./docs/11.x/redis.md:1
#: ./docs/master/redis.md:1
msgctxt "H1"
msgid "Redis"
msgstr "Redis"

#: ./docs/8.x/redis.md:3
#: ./docs/9.x/redis.md:3
#: ./docs/10.x/redis.md:3
#: ./docs/11.x/redis.md:3
#: ./docs/master/redis.md:3
msgctxt "P"
msgid "[Introduction](#introduction)"
msgstr "[簡介](#introduction)"

#: ./docs/8.x/redis.md:4
#: ./docs/9.x/redis.md:4
#: ./docs/10.x/redis.md:4
#: ./docs/11.x/redis.md:4
#: ./docs/master/redis.md:4
msgctxt "P"
msgid "[Configuration](#configuration)"
msgstr "[設定](#configuration)"

#: ./docs/8.x/redis.md:5
#: ./docs/9.x/redis.md:5
#: ./docs/10.x/redis.md:5
#: ./docs/11.x/redis.md:5
#: ./docs/master/redis.md:5
msgctxt "P"
msgid "[Clusters](#clusters)"
msgstr "[叢集](#clusters)"

#: ./docs/8.x/redis.md:6
#: ./docs/9.x/redis.md:6
#: ./docs/10.x/redis.md:6
#: ./docs/11.x/redis.md:6
#: ./docs/master/redis.md:6
msgctxt "P"
msgid "[Predis](#predis)"
msgstr "[Predis](#predis)"

#: ./docs/10.x/redis.md:7
#: ./docs/11.x/redis.md:7
#: ./docs/master/redis.md:7
msgctxt "P"
msgid "[PhpRedis](#phpredis)"
msgstr ""

#: ./docs/8.x/redis.md:7
#: ./docs/9.x/redis.md:7
msgctxt "P"
msgid "[phpredis](#phpredis)"
msgstr "[phpredis](#phpredis)"

#: ./docs/8.x/redis.md:8
#: ./docs/9.x/redis.md:8
#: ./docs/10.x/redis.md:8
#: ./docs/11.x/redis.md:8
#: ./docs/master/redis.md:8
msgctxt "P"
msgid "[Interacting With Redis](#interacting-with-redis)"
msgstr "[使用 Redis](#interacting-with-redis)"

#: ./docs/8.x/redis.md:9
#: ./docs/9.x/redis.md:9
#: ./docs/10.x/redis.md:9
#: ./docs/11.x/redis.md:9
#: ./docs/master/redis.md:9
msgctxt "P"
msgid "[Transactions](#transactions)"
msgstr "[Transaction](#transactions)"

#: ./docs/8.x/redis.md:10
#: ./docs/9.x/redis.md:10
#: ./docs/10.x/redis.md:10
#: ./docs/11.x/redis.md:10
#: ./docs/master/redis.md:10
msgctxt "P"
msgid "[Pipelining Commands](#pipelining-commands)"
msgstr "[指令管道](#pipelining-commands)"

#: ./docs/8.x/redis.md:11
#: ./docs/9.x/redis.md:11
#: ./docs/10.x/redis.md:11
#: ./docs/11.x/redis.md:11
#: ./docs/master/redis.md:11
msgctxt "P"
msgid "[Pub / Sub](#pubsub)"
msgstr "[Pub / Sub](#pubsub)"

#: ./docs/8.x/redis.md:13
#: ./docs/9.x/redis.md:13
#: ./docs/10.x/redis.md:13
#: ./docs/11.x/redis.md:13
#: ./docs/master/redis.md:13
#~ msgctxt "P"
#~ msgid "<a name=\"introduction\"></a>"
#~ msgstr ""

#: ./docs/8.x/redis.md:14
#: ./docs/9.x/redis.md:14
#: ./docs/10.x/redis.md:14
#: ./docs/11.x/redis.md:14
#: ./docs/master/redis.md:14
msgctxt "H2"
msgid "Introduction"
msgstr "簡介"

#: ./docs/10.x/redis.md:16
#: ./docs/11.x/redis.md:16
#: ./docs/master/redis.md:16
msgctxt "P"
msgid "[Redis](https://redis.io) is an open source, advanced key-value store. It is often referred to as a data structure server since keys can contain [strings](https://redis.io/docs/data-types/strings/), [hashes](https://redis.io/docs/data-types/hashes/), [lists](https://redis.io/docs/data-types/lists/), [sets](https://redis.io/docs/data-types/sets/), and [sorted sets](https://redis.io/docs/data-types/sorted-sets/)."
msgstr ""

#: ./docs/8.x/redis.md:16
#: ./docs/9.x/redis.md:16
msgctxt "P"
msgid "[Redis](https://redis.io) is an open source, advanced key-value store. It is often referred to as a data structure server since keys can contain [strings](https://redis.io/topics/data-types#strings), [hashes](https://redis.io/topics/data-types#hashes), [lists](https://redis.io/topics/data-types#lists), [sets](https://redis.io/topics/data-types#sets), and [sorted sets](https://redis.io/topics/data-types#sorted-sets)."
msgstr "[Redis](https://redis.io) 是一個開放原始碼的高階索引鍵／值存放空間。Redis 常被稱作資料結構伺服器，因為索引鍵中可以保存[字串 (String)](https://redis.io/topics/data-types#strings)、[雜湊 (Hash)](https://redis.io/topics/data-types#hashes)、[清單 (List)](https://redis.io/topics/data-types#lists)、[集合 (Set)](https://redis.io/topics/data-types#sets)、[有序集合 (Sorted Set)](https://redis.io/topics/data-types#sorted-sets)等。"

#: ./docs/10.x/redis.md:18
#: ./docs/11.x/redis.md:18
#: ./docs/master/redis.md:18
msgctxt "P"
msgid "Before using Redis with Laravel, we encourage you to install and use the [PhpRedis](https://github.com/phpredis/phpredis) PHP extension via PECL. The extension is more complex to install compared to \"user-land\" PHP packages but may yield better performance for applications that make heavy use of Redis. If you are using [Laravel Sail](/docs/{{version}}/sail), this extension is already installed in your application's Docker container."
msgstr ""

#: ./docs/8.x/redis.md:18
#: ./docs/9.x/redis.md:18
msgctxt "P"
msgid "Before using Redis with Laravel, we encourage you to install and use the [phpredis](https://github.com/phpredis/phpredis) PHP extension via PECL. The extension is more complex to install compared to \"user-land\" PHP packages but may yield better performance for applications that make heavy use of Redis. If you are using [Laravel Sail](/docs/{{version}}/sail), this extension is already installed in your application's Docker container."
msgstr "在 Laravel 中使用 Redis 前，我們建議先使用 PECL 安裝 [phpredis](https://github.com/phpredis/phpredis) PHP 擴充程式。比起安裝其他「User-Land (即，非 PHP 官方套件)」提供的 PHP 套件，要安裝 phpredis 比較複雜一點。不過，對於重度使用 Redis 的專案來說，使用 phpredis 的效能會比較好。若使用 [Laravel Sail](/docs/{{version}}/sail)，則該擴充程式已安裝在專案的 Docker Container 裡了。"

#: ./docs/10.x/redis.md:20
#: ./docs/11.x/redis.md:20
#: ./docs/master/redis.md:20
msgctxt "P"
msgid "If you are unable to install the PhpRedis extension, you may install the `predis/predis` package via Composer. Predis is a Redis client written entirely in PHP and does not require any additional extensions:"
msgstr ""

#: ./docs/8.x/redis.md:20
#: ./docs/9.x/redis.md:20
msgctxt "P"
msgid "If you are unable to install the phpredis extension, you may install the `predis/predis` package via Composer. Predis is a Redis client written entirely in PHP and does not require any additional extensions:"
msgstr "若無法安裝 phpredis 擴充程式，則可使用 Composer 安裝 `predis/predis` 套件。Predis 是完全以 PHP 撰寫的 Redis 用戶端。使用 Predis 就不需要安裝其他額外的擴充程式："

#: ./docs/11.x/redis.md:22
#: ./docs/master/redis.md:22
msgctxt "CODE: shell"
msgid "composer require predis/predis:^2.0"
msgstr ""

#: ./docs/8.x/redis.md:22
#: ./docs/9.x/redis.md:22
#: ./docs/10.x/redis.md:22
msgctxt "CODE: bash"
msgid "composer require predis/predis"
msgstr ""

#: ./docs/8.x/redis.md:26
#: ./docs/9.x/redis.md:26
#: ./docs/10.x/redis.md:26
#: ./docs/11.x/redis.md:26
#: ./docs/master/redis.md:26
#~ msgctxt "P"
#~ msgid "<a name=\"configuration\"></a>"
#~ msgstr ""

#: ./docs/8.x/redis.md:27
#: ./docs/9.x/redis.md:27
#: ./docs/10.x/redis.md:27
#: ./docs/11.x/redis.md:27
#: ./docs/master/redis.md:27
msgctxt "H2"
msgid "Configuration"
msgstr "設定"

#: ./docs/8.x/redis.md:29
#: ./docs/9.x/redis.md:29
#: ./docs/10.x/redis.md:29
#: ./docs/11.x/redis.md:29
#: ./docs/master/redis.md:29
msgctxt "P"
msgid "You may configure your application's Redis settings via the `config/database.php` configuration file. Within this file, you will see a `redis` array containing the Redis servers utilized by your application:"
msgstr "我們可以在 `config/database.php` 設定檔中設定專案的 Redis 設定。在該檔案中，可以看到一個 `redis` 陣列，其中存放的就是專案要使用的 Redis 伺服器："

#: ./docs/11.x/redis.md:31
#: ./docs/master/redis.md:31
msgctxt "CODE"
msgid ""
"'redis' => [\n"
"\n"
"    'client' => env('REDIS_CLIENT', 'phpredis'),\n"
"\n"
"    'options' => [\n"
"        'cluster' => env('REDIS_CLUSTER', 'redis'),\n"
"        'prefix' => env('REDIS_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_database_'),\n"
"    ],\n"
"\n"
"    'default' => [\n"
"        'url' => env('REDIS_URL'),\n"
"        'host' => env('REDIS_HOST', '127.0.0.1'),\n"
"        'username' => env('REDIS_USERNAME'),\n"
"        'password' => env('REDIS_PASSWORD'),\n"
"        'port' => env('REDIS_PORT', '6379'),\n"
"        'database' => env('REDIS_DB', '0'),\n"
"    ],\n"
"\n"
"    'cache' => [\n"
"        'url' => env('REDIS_URL'),\n"
"        'host' => env('REDIS_HOST', '127.0.0.1'),\n"
"        'username' => env('REDIS_USERNAME'),\n"
"        'password' => env('REDIS_PASSWORD'),\n"
"        'port' => env('REDIS_PORT', '6379'),\n"
"        'database' => env('REDIS_CACHE_DB', '1'),\n"
"    ],\n"
"\n"
"],"
msgstr ""

#: ./docs/8.x/redis.md:31
msgctxt "CODE"
msgid ""
"'redis' => [\n"
"\n"
"    'client' => env('REDIS_CLIENT', 'phpredis'),\n"
"\n"
"    'default' => [\n"
"        'host' => env('REDIS_HOST', '127.0.0.1'),\n"
"        'password' => env('REDIS_PASSWORD', null),\n"
"        'port' => env('REDIS_PORT', 6379),\n"
"        'database' => env('REDIS_DB', 0),\n"
"    ],\n"
"\n"
"    'cache' => [\n"
"        'host' => env('REDIS_HOST', '127.0.0.1'),\n"
"        'password' => env('REDIS_PASSWORD', null),\n"
"        'port' => env('REDIS_PORT', 6379),\n"
"        'database' => env('REDIS_CACHE_DB', 1),\n"
"    ],\n"
"\n"
"],"
msgstr ""

#: ./docs/9.x/redis.md:31
#: ./docs/10.x/redis.md:31
msgctxt "CODE"
msgid ""
"'redis' => [\n"
"\n"
"    'client' => env('REDIS_CLIENT', 'phpredis'),\n"
"\n"
"    'default' => [\n"
"        'host' => env('REDIS_HOST', '127.0.0.1'),\n"
"        'password' => env('REDIS_PASSWORD'),\n"
"        'port' => env('REDIS_PORT', 6379),\n"
"        'database' => env('REDIS_DB', 0),\n"
"    ],\n"
"\n"
"    'cache' => [\n"
"        'host' => env('REDIS_HOST', '127.0.0.1'),\n"
"        'password' => env('REDIS_PASSWORD'),\n"
"        'port' => env('REDIS_PORT', 6379),\n"
"        'database' => env('REDIS_CACHE_DB', 1),\n"
"    ],\n"
"\n"
"],"
msgstr ""

#: ./docs/8.x/redis.md:51
#: ./docs/9.x/redis.md:51
#: ./docs/10.x/redis.md:51
#: ./docs/11.x/redis.md:60
#: ./docs/master/redis.md:60
msgctxt "P"
msgid "Each Redis server defined in your configuration file is required to have a name, host, and a port unless you define a single URL to represent the Redis connection:"
msgstr "除非使用單一 URL 來代表 Redis 連線，否則該設定檔中所定義的每個 Redis 伺服器都必須有名稱、主機、連接埠："

#: ./docs/8.x/redis.md:53
#: ./docs/9.x/redis.md:53
#: ./docs/10.x/redis.md:53
msgctxt "CODE"
msgid ""
"'redis' => [\n"
"\n"
"    'client' => env('REDIS_CLIENT', 'phpredis'),\n"
"\n"
"    'default' => [\n"
"        'url' => 'tcp://127.0.0.1:6379?database=0',\n"
"    ],\n"
"\n"
"    'cache' => [\n"
"        'url' => 'tls://user:password@127.0.0.1:6380?database=1',\n"
"    ],\n"
"\n"
"],"
msgstr ""

#: ./docs/11.x/redis.md:62
#: ./docs/master/redis.md:62
msgctxt "CODE"
msgid ""
"'redis' => [\n"
"\n"
"    'client' => env('REDIS_CLIENT', 'phpredis'),\n"
"\n"
"    'options' => [\n"
"        'cluster' => env('REDIS_CLUSTER', 'redis'),\n"
"        'prefix' => env('REDIS_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_database_'),\n"
"    ],\n"
"\n"
"    'default' => [\n"
"        'url' => 'tcp://127.0.0.1:6379?database=0',\n"
"    ],\n"
"\n"
"    'cache' => [\n"
"        'url' => 'tls://user:password@127.0.0.1:6380?database=1',\n"
"    ],\n"
"\n"
"],"
msgstr ""

#: ./docs/8.x/redis.md:67
#: ./docs/9.x/redis.md:67
#: ./docs/10.x/redis.md:67
#: ./docs/11.x/redis.md:81
#: ./docs/master/redis.md:81
#~ msgctxt "P"
#~ msgid "<a name=\"configuring-the-connection-scheme\"></a>"
#~ msgstr ""

#: ./docs/10.x/redis.md:68
#: ./docs/11.x/redis.md:82
#: ./docs/master/redis.md:82
msgctxt "H4"
msgid "Configuring the Connection Scheme"
msgstr ""

#: ./docs/8.x/redis.md:68
#: ./docs/9.x/redis.md:68
msgctxt "H4"
msgid "Configuring The Connection Scheme"
msgstr "設定連線的 Scheme"

#: ./docs/8.x/redis.md:70
#: ./docs/9.x/redis.md:70
#: ./docs/10.x/redis.md:70
#: ./docs/11.x/redis.md:84
#: ./docs/master/redis.md:84
msgctxt "P"
msgid "By default, Redis clients will use the `tcp` scheme when connecting to your Redis servers; however, you may use TLS / SSL encryption by specifying a `scheme` configuration option in your Redis server's configuration array:"
msgstr "預設情況下，Redis 用戶端會使用 `tcp` ^[Scheme](配置) 來連線到 Redis 伺服器。不過，我們也可以在 Redis 伺服器設定陣列中指定 `scheme` 設定選項來使用 TLS / SSL 加密："

#: ./docs/8.x/redis.md:72
msgctxt "CODE"
msgid ""
"'redis' => [\n"
"\n"
"    'client' => env('REDIS_CLIENT', 'phpredis'),\n"
"\n"
"    'default' => [\n"
"        'scheme' => 'tls',\n"
"        'host' => env('REDIS_HOST', '127.0.0.1'),\n"
"        'password' => env('REDIS_PASSWORD', null),\n"
"        'port' => env('REDIS_PORT', 6379),\n"
"        'database' => env('REDIS_DB', 0),\n"
"    ],\n"
"\n"
"],"
msgstr ""

#: ./docs/9.x/redis.md:72
#: ./docs/10.x/redis.md:72
msgctxt "CODE"
msgid ""
"'redis' => [\n"
"\n"
"    'client' => env('REDIS_CLIENT', 'phpredis'),\n"
"\n"
"    'default' => [\n"
"        'scheme' => 'tls',\n"
"        'host' => env('REDIS_HOST', '127.0.0.1'),\n"
"        'password' => env('REDIS_PASSWORD'),\n"
"        'port' => env('REDIS_PORT', 6379),\n"
"        'database' => env('REDIS_DB', 0),\n"
"    ],\n"
"\n"
"],"
msgstr ""

#: ./docs/11.x/redis.md:86
#: ./docs/master/redis.md:86
msgctxt "CODE"
msgid ""
"'default' => [\n"
"    'scheme' => 'tls',\n"
"    'url' => env('REDIS_URL'),\n"
"    'host' => env('REDIS_HOST', '127.0.0.1'),\n"
"    'username' => env('REDIS_USERNAME'),\n"
"    'password' => env('REDIS_PASSWORD'),\n"
"    'port' => env('REDIS_PORT', '6379'),\n"
"    'database' => env('REDIS_DB', '0'),\n"
"],"
msgstr ""

#: ./docs/8.x/redis.md:86
#: ./docs/9.x/redis.md:86
#: ./docs/10.x/redis.md:86
#: ./docs/11.x/redis.md:96
#: ./docs/master/redis.md:96
#~ msgctxt "P"
#~ msgid "<a name=\"clusters\"></a>"
#~ msgstr ""

#: ./docs/8.x/redis.md:87
#: ./docs/9.x/redis.md:87
#: ./docs/10.x/redis.md:87
#: ./docs/11.x/redis.md:97
#: ./docs/master/redis.md:97
msgctxt "H3"
msgid "Clusters"
msgstr "叢集"

#: ./docs/8.x/redis.md:89
#: ./docs/9.x/redis.md:89
#: ./docs/10.x/redis.md:89
#: ./docs/11.x/redis.md:99
#: ./docs/master/redis.md:99
msgctxt "P"
msgid "If your application is utilizing a cluster of Redis servers, you should define these clusters within a `clusters` key of your Redis configuration. This configuration key does not exist by default so you will need to create it within your application's `config/database.php` configuration file:"
msgstr "若專案使用 Redis 伺服器叢集 (Cluster)，則應在 Redis 設定中的 `clusters` 索引鍵下定義這些叢集。預設情況下沒有該設定索引鍵，因此我們需要手動在 `config/database.php` 設定檔中建立該索引鍵："

#: ./docs/8.x/redis.md:91
msgctxt "CODE"
msgid ""
"'redis' => [\n"
"\n"
"    'client' => env('REDIS_CLIENT', 'phpredis'),\n"
"\n"
"    'clusters' => [\n"
"        'default' => [\n"
"            [\n"
"                'host' => env('REDIS_HOST', 'localhost'),\n"
"                'password' => env('REDIS_PASSWORD', null),\n"
"                'port' => env('REDIS_PORT', 6379),\n"
"                'database' => 0,\n"
"            ],\n"
"        ],\n"
"    ],\n"
"\n"
"],"
msgstr ""

#: ./docs/9.x/redis.md:91
#: ./docs/10.x/redis.md:91
msgctxt "CODE"
msgid ""
"'redis' => [\n"
"\n"
"    'client' => env('REDIS_CLIENT', 'phpredis'),\n"
"\n"
"    'clusters' => [\n"
"        'default' => [\n"
"            [\n"
"                'host' => env('REDIS_HOST', 'localhost'),\n"
"                'password' => env('REDIS_PASSWORD'),\n"
"                'port' => env('REDIS_PORT', 6379),\n"
"                'database' => 0,\n"
"            ],\n"
"        ],\n"
"    ],\n"
"\n"
"],"
msgstr ""

#: ./docs/11.x/redis.md:101
#: ./docs/master/redis.md:101
msgctxt "CODE"
msgid ""
"'redis' => [\n"
"\n"
"    'client' => env('REDIS_CLIENT', 'phpredis'),\n"
"\n"
"    'options' => [\n"
"        'cluster' => env('REDIS_CLUSTER', 'redis'),\n"
"        'prefix' => env('REDIS_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_database_'),\n"
"    ],\n"
"\n"
"    'clusters' => [\n"
"        'default' => [\n"
"            [\n"
"                'url' => env('REDIS_URL'),\n"
"                'host' => env('REDIS_HOST', '127.0.0.1'),\n"
"                'username' => env('REDIS_USERNAME'),\n"
"                'password' => env('REDIS_PASSWORD'),\n"
"                'port' => env('REDIS_PORT', '6379'),\n"
"                'database' => env('REDIS_DB', '0'),\n"
"            ],\n"
"        ],\n"
"    ],\n"
"\n"
"    // ...\n"
"],"
msgstr ""

#: ./docs/8.x/redis.md:108
#: ./docs/9.x/redis.md:108
#: ./docs/10.x/redis.md:108
msgctxt "P"
msgid "By default, clusters will perform client-side sharding across your nodes, allowing you to pool nodes and create a large amount of available RAM. However, client-side sharding does not handle failover; therefore, it is primarily suited for transient cached data that is available from another primary data store."
msgstr "預設情況下，叢集會在各個節點間做用戶端分區 (Sharding)，讓我們能集區化 (Pool) 節點，並儘量取得更多可用的 RAM。不過，使用用戶端分區將無法處理 ^[Failover](容錯移轉)。因此，這種做法主要只適合用在一些存放時間短的、快取的資料。這些資料應該要能從其他主要的資料存放空間內取得。"

#: ./docs/8.x/redis.md:110
#: ./docs/9.x/redis.md:110
#: ./docs/10.x/redis.md:110
msgctxt "P"
msgid "If you would like to use native Redis clustering instead of client-side sharding, you may specify this by setting the `options.cluster` configuration value to `redis` within your application's `config/database.php` configuration file:"
msgstr "若想使用 Redis 原生的叢集功能，而不使用用戶端分區，則我們可以在 `config/database.php` 設定檔中將 `options.cluster` 設定值設為 `redis`："

#: ./docs/8.x/redis.md:112
#: ./docs/9.x/redis.md:112
#: ./docs/10.x/redis.md:112
msgctxt "CODE"
msgid ""
"'redis' => [\n"
"\n"
"    'client' => env('REDIS_CLIENT', 'phpredis'),\n"
"\n"
"    'options' => [\n"
"        'cluster' => env('REDIS_CLUSTER', 'redis'),\n"
"    ],\n"
"\n"
"    'clusters' => [\n"
"        // ...\n"
"    ],\n"
"\n"
"],"
msgstr ""

#: ./docs/11.x/redis.md:126
#: ./docs/master/redis.md:126
msgctxt "P"
msgid "By default, Laravel will use native Redis clustering since the `options.cluster` configuration value is set to `redis`. Redis clustering is a great default option, as it gracefully handles failover."
msgstr ""

#: ./docs/8.x/redis.md:126
#: ./docs/9.x/redis.md:126
#: ./docs/10.x/redis.md:126
#: ./docs/11.x/redis.md:143
#: ./docs/master/redis.md:143
#~ msgctxt "P"
#~ msgid "<a name=\"predis\"></a>"
#~ msgstr ""

#: ./docs/8.x/redis.md:127
#: ./docs/9.x/redis.md:127
#: ./docs/10.x/redis.md:127
#: ./docs/11.x/redis.md:144
#: ./docs/master/redis.md:144
msgctxt "H3"
msgid "Predis"
msgstr "Predis"

#: ./docs/11.x/redis.md:128
#: ./docs/master/redis.md:128
msgctxt "P"
msgid "Laravel also supports client-side sharding. However, client-side sharding does not handle failover; therefore, it is primarily suited for transient cached data that is available from another primary data store."
msgstr ""

#: ./docs/8.x/redis.md:129
#: ./docs/9.x/redis.md:129
#: ./docs/10.x/redis.md:129
#: ./docs/11.x/redis.md:146
#: ./docs/master/redis.md:146
msgctxt "P"
msgid "If you would like your application to interact with Redis via the Predis package, you should ensure the `REDIS_CLIENT` environment variable's value is `predis`:"
msgstr "若專案通過 Predis 套件來使用 Redis，則請確定 `REDIS_CLIENT` 環境變數是否有設為 `predis`："

#: ./docs/11.x/redis.md:130
#: ./docs/master/redis.md:130
msgctxt "P"
msgid "If you would like to use client-side sharding instead of native Redis clustering, you may remove the `options.cluster` configuration value within your application's `config/database.php` configuration file:"
msgstr ""

#: ./docs/8.x/redis.md:131
#: ./docs/9.x/redis.md:131
#: ./docs/10.x/redis.md:131
#: ./docs/11.x/redis.md:148
#: ./docs/master/redis.md:148
msgctxt "CODE"
msgid ""
"'redis' => [\n"
"\n"
"    'client' => env('REDIS_CLIENT', 'predis'),\n"
"\n"
"    // ...\n"
"],"
msgstr ""

#: ./docs/11.x/redis.md:132
#: ./docs/master/redis.md:132
msgctxt "CODE"
msgid ""
"'redis' => [\n"
"\n"
"    'client' => env('REDIS_CLIENT', 'phpredis'),\n"
"\n"
"    'clusters' => [\n"
"        // ...\n"
"    ],\n"
"\n"
"    // ...\n"
"],"
msgstr ""

#: ./docs/8.x/redis.md:138
#: ./docs/9.x/redis.md:138
#: ./docs/10.x/redis.md:138
msgctxt "P"
msgid "In addition to the default `host`, `port`, `database`, and `password` server configuration options, Predis supports additional [connection parameters](https://github.com/nrk/predis/wiki/Connection-Parameters) that may be defined for each of your Redis servers. To utilize these additional configuration options, add them to your Redis server configuration in your application's `config/database.php` configuration file:"
msgstr "除了預設的 `host`、`port`、`database`、`password` 等伺服器設定選項外，Predis 還支援其他的[連線參數](https://github.com/nrk/predis/wiki/Connection-Parameters)，這些連線參數可以在每個 Redis 伺服器上定義。若要使用這些其他的設定選項，請將這些選項駕到 `config/database.php` 設定檔中的 Redis 伺服器設定內："

#: ./docs/8.x/redis.md:140
msgctxt "CODE"
msgid ""
"'default' => [\n"
"    'host' => env('REDIS_HOST', 'localhost'),\n"
"    'password' => env('REDIS_PASSWORD', null),\n"
"    'port' => env('REDIS_PORT', 6379),\n"
"    'database' => 0,\n"
"    'read_write_timeout' => 60,\n"
"],"
msgstr ""

#: ./docs/9.x/redis.md:140
#: ./docs/10.x/redis.md:140
msgctxt "CODE"
msgid ""
"'default' => [\n"
"    'host' => env('REDIS_HOST', 'localhost'),\n"
"    'password' => env('REDIS_PASSWORD'),\n"
"    'port' => env('REDIS_PORT', 6379),\n"
"    'database' => 0,\n"
"    'read_write_timeout' => 60,\n"
"],"
msgstr ""

#: ./docs/8.x/redis.md:148
#: ./docs/9.x/redis.md:148
#: ./docs/10.x/redis.md:148
#~ msgctxt "P"
#~ msgid "<a name=\"the-redis-facade-alias\"></a>"
#~ msgstr ""

#: ./docs/8.x/redis.md:149
#: ./docs/9.x/redis.md:149
#: ./docs/10.x/redis.md:149
msgctxt "H4"
msgid "The Redis Facade Alias"
msgstr "Redis Facade 的別名"

#: ./docs/10.x/redis.md:151
msgctxt "P"
msgid "Laravel's `config/app.php` configuration file contains an `aliases` array which defines all of the class aliases that will be registered by the framework. By default, no `Redis` alias is included because it would conflict with the `Redis` class name provided by the PhpRedis extension. If you are using the Predis client and would like to add a `Redis` alias, you may add it to the `aliases` array in your application's `config/app.php` configuration file:"
msgstr ""

#: ./docs/8.x/redis.md:151
msgctxt "P"
msgid "Laravel's `config/app.php` configuration file contains an `aliases` array which defines all of the class aliases that will be registered by the framework. For convenience, an alias entry is included for each [facade](/docs/{{version}}/facades) offered by Laravel; however, the `Redis` alias is disabled because it conflicts with the `Redis` class name provided by the phpredis extension. If you are using the Predis client and would like to enable this alias, you may un-comment the alias in your application's `config/app.php` configuration file."
msgstr "Laravel 的 `config/app.php` 設定檔中包含了一個 `aliases` 陣列，該陣列中定義了所有 Laravel 會註冊的類別別名。為了讓開發起來更方便，Laravel 已為各個 [Facade](/docs/{{version}}/facades) 定義了別名。不過，`Redis` 的別名並未啟用，因為該別名與 phpredis` 擴充程式的類別名稱衝突。若想使用 Predis 用戶端，且想啟用這個別名，則可在 `config/app.php` 設定檔中取消註解該別名。"

#: ./docs/9.x/redis.md:151
msgctxt "P"
msgid "Laravel's `config/app.php` configuration file contains an `aliases` array which defines all of the class aliases that will be registered by the framework. By default, no `Redis` alias is included because it would conflict with the `Redis` class name provided by the phpredis extension. If you are using the Predis client and would like to add a `Redis` alias, you may add it to the `aliases` array in your application's `config/app.php` configuration file:"
msgstr "Laravel 的 `config/app.php` 設定檔中包含了一個 `aliases` 陣列，該陣列中定義了所有 Laravel 會註冊的類別別名。預設情況下，該檔案中並未包含 `Redis` 別名，因為使用 `Redis` 會與 phpredis 擴充程式的 `Redis` 類別名稱衝突。在使用 Predis 用戶端時，若想新增使用 `Redis` 別名，則可將該別名加入到專案 `config/app.php` 設定檔中的 `aliases` 陣列中："

#: ./docs/8.x/redis.md:153
#: ./docs/9.x/redis.md:157
#: ./docs/10.x/redis.md:157
#: ./docs/11.x/redis.md:167
#: ./docs/master/redis.md:167
#~ msgctxt "P"
#~ msgid "<a name=\"phpredis\"></a>"
#~ msgstr ""

#: ./docs/9.x/redis.md:153
#: ./docs/10.x/redis.md:153
msgctxt "CODE"
msgid ""
"'aliases' => Facade::defaultAliases()->merge([\n"
"    'Redis' => Illuminate\\Support\\Facades\\Redis::class,\n"
"])->toArray(),"
msgstr ""

#: ./docs/8.x/redis.md:154
#: ./docs/9.x/redis.md:158
msgctxt "H3"
msgid "phpredis"
msgstr "phpredis"

#: ./docs/11.x/redis.md:155
#: ./docs/master/redis.md:155
msgctxt "P"
msgid "In addition to the default configuration options, Predis supports additional [connection parameters](https://github.com/nrk/predis/wiki/Connection-Parameters) that may be defined for each of your Redis servers. To utilize these additional configuration options, add them to your Redis server configuration in your application's `config/database.php` configuration file:"
msgstr ""

#: ./docs/8.x/redis.md:156
#: ./docs/9.x/redis.md:160
msgctxt "P"
msgid "By default, Laravel will use the phpredis extension to communicate with Redis. The client that Laravel will use to communicate with Redis is dictated by the value of the `redis.client` configuration option, which typically reflects the value of the `REDIS_CLIENT` environment variable:"
msgstr "預設情況下，Laravel 會使用 phpredis 擴充程式來與 Redis 溝通。Laravel 要用來與 Redis 溝通的用戶端是由 `redis.client` 設定選項來判斷的，一般來說這個設定選項的值就是 `REDIS_CLIENT` 環境變數值："

#: ./docs/11.x/redis.md:157
#: ./docs/master/redis.md:157
msgctxt "CODE"
msgid ""
"'default' => [\n"
"    'url' => env('REDIS_URL'),\n"
"    'host' => env('REDIS_HOST', '127.0.0.1'),\n"
"    'username' => env('REDIS_USERNAME'),\n"
"    'password' => env('REDIS_PASSWORD'),\n"
"    'port' => env('REDIS_PORT', '6379'),\n"
"    'database' => env('REDIS_DB', '0'),\n"
"    'read_write_timeout' => 60,\n"
"],"
msgstr ""

#: ./docs/10.x/redis.md:158
#: ./docs/11.x/redis.md:168
#: ./docs/master/redis.md:168
msgctxt "H3"
msgid "PhpRedis"
msgstr ""

#: ./docs/8.x/redis.md:158
#: ./docs/9.x/redis.md:162
#: ./docs/10.x/redis.md:162
msgctxt "CODE"
msgid ""
"'redis' => [\n"
"\n"
"    'client' => env('REDIS_CLIENT', 'phpredis'),\n"
"\n"
"    // Rest of Redis configuration...\n"
"],"
msgstr ""

#: ./docs/10.x/redis.md:160
#: ./docs/11.x/redis.md:170
#: ./docs/master/redis.md:170
msgctxt "P"
msgid "By default, Laravel will use the PhpRedis extension to communicate with Redis. The client that Laravel will use to communicate with Redis is dictated by the value of the `redis.client` configuration option, which typically reflects the value of the `REDIS_CLIENT` environment variable:"
msgstr ""

#: ./docs/8.x/redis.md:165
#: ./docs/9.x/redis.md:169
msgctxt "P"
msgid "In addition to the default `scheme`, `host`, `port`, `database`, and `password` server configuration options, phpredis supports the following additional connection parameters: `name`, `persistent`, `persistent_id`, `prefix`, `read_timeout`, `retry_interval`, `timeout`, and `context`. You may add any of these options to your Redis server configuration in the `config/database.php` configuration file:"
msgstr "出了預設的 `scheme`、`host`、`port`、`database`、`password` 等伺服器設定選項外，phpredis 還支援下列其他的連線參數：`name`、`persistent`、`persistent_id`、`prefix`、`read_timeout`、`retry_interval`、`timeout`、`context` 等。我們可以在 `config/database.php` 設定檔中將這些選項新增到 Redis 伺服器設定上："

#: ./docs/8.x/redis.md:167
msgctxt "CODE"
msgid ""
"'default' => [\n"
"    'host' => env('REDIS_HOST', 'localhost'),\n"
"    'password' => env('REDIS_PASSWORD', null),\n"
"    'port' => env('REDIS_PORT', 6379),\n"
"    'database' => 0,\n"
"    'read_timeout' => 60,\n"
"    'context' => [\n"
"        // 'auth' => ['username', 'secret'],\n"
"        // 'stream' => ['verify_peer' => false],\n"
"    ],\n"
"],"
msgstr ""

#: ./docs/10.x/redis.md:169
msgctxt "P"
msgid "In addition to the default `scheme`, `host`, `port`, `database`, and `password` server configuration options, PhpRedis supports the following additional connection parameters: `name`, `persistent`, `persistent_id`, `prefix`, `read_timeout`, `retry_interval`, `timeout`, and `context`. You may add any of these options to your Redis server configuration in the `config/database.php` configuration file:"
msgstr ""

#: ./docs/9.x/redis.md:171
#: ./docs/10.x/redis.md:171
msgctxt "CODE"
msgid ""
"'default' => [\n"
"    'host' => env('REDIS_HOST', 'localhost'),\n"
"    'password' => env('REDIS_PASSWORD'),\n"
"    'port' => env('REDIS_PORT', 6379),\n"
"    'database' => 0,\n"
"    'read_timeout' => 60,\n"
"    'context' => [\n"
"        // 'auth' => ['username', 'secret'],\n"
"        // 'stream' => ['verify_peer' => false],\n"
"    ],\n"
"],"
msgstr ""

#: ./docs/11.x/redis.md:172
#: ./docs/master/redis.md:172
msgctxt "CODE"
msgid ""
"'redis' => [\n"
"\n"
"    'client' => env('REDIS_CLIENT', 'phpredis'),\n"
"\n"
"    // ...\n"
"],"
msgstr ""

#: ./docs/11.x/redis.md:179
#: ./docs/master/redis.md:179
msgctxt "P"
msgid "In addition to the default configuration options, PhpRedis supports the following additional connection parameters: `name`, `persistent`, `persistent_id`, `prefix`, `read_timeout`, `retry_interval`, `timeout`, and `context`. You may add any of these options to your Redis server configuration in the `config/database.php` configuration file:"
msgstr ""

#: ./docs/8.x/redis.md:179
#: ./docs/9.x/redis.md:183
#: ./docs/10.x/redis.md:183
#: ./docs/11.x/redis.md:195
#: ./docs/master/redis.md:195
#~ msgctxt "P"
#~ msgid "<a name=\"phpredis-serialization\"></a>"
#~ msgstr ""

#: ./docs/8.x/redis.md:180
#: ./docs/9.x/redis.md:184
msgctxt "H4"
msgid "phpredis Serialization & Compression"
msgstr "phpredis 的序列化與壓縮"

#: ./docs/11.x/redis.md:181
#: ./docs/master/redis.md:181
msgctxt "CODE"
msgid ""
"'default' => [\n"
"    'url' => env('REDIS_URL'),\n"
"    'host' => env('REDIS_HOST', '127.0.0.1'),\n"
"    'username' => env('REDIS_USERNAME'),\n"
"    'password' => env('REDIS_PASSWORD'),\n"
"    'port' => env('REDIS_PORT', '6379'),\n"
"    'database' => env('REDIS_DB', '0'),\n"
"    'read_timeout' => 60,\n"
"    'context' => [\n"
"        // 'auth' => ['username', 'secret'],\n"
"        // 'stream' => ['verify_peer' => false],\n"
"    ],\n"
"],"
msgstr ""

#: ./docs/8.x/redis.md:182
msgctxt "P"
msgid "The phpredis extension may also be configured to use a variety serialization and compression algorithms. These algorithms can be configured via the `options` array of your Redis configuration:"
msgstr "phpredis 擴充程式可以設定各種各樣的序列化與壓縮演算法。可以在 Redis 設定的 `options` 陣列內設定這些演算法："

#: ./docs/10.x/redis.md:184
#: ./docs/11.x/redis.md:196
#: ./docs/master/redis.md:196
msgctxt "H4"
msgid "PhpRedis Serialization and Compression"
msgstr ""

#: ./docs/8.x/redis.md:184
msgctxt "CODE"
msgid ""
"use Redis;\n"
"\n"
"'redis' => [\n"
"\n"
"    'client' => env('REDIS_CLIENT', 'phpredis'),\n"
"\n"
"    'options' => [\n"
"        'serializer' => Redis::SERIALIZER_MSGPACK,\n"
"        'compression' => Redis::COMPRESSION_LZ4,\n"
"    ],\n"
"\n"
"    // Rest of Redis configuration...\n"
"],"
msgstr ""

#: ./docs/10.x/redis.md:186
#: ./docs/11.x/redis.md:198
#: ./docs/master/redis.md:198
msgctxt "P"
msgid "The PhpRedis extension may also be configured to use a variety of serializers and compression algorithms. These algorithms can be configured via the `options` array of your Redis configuration:"
msgstr ""

#: ./docs/9.x/redis.md:186
msgctxt "P"
msgid "The phpredis extension may also be configured to use a variety of serialization and compression algorithms. These algorithms can be configured via the `options` array of your Redis configuration:"
msgstr "phpredis 擴充程式可以設定各種各樣的序列化與壓縮演算法。可以在 Redis 設定的 `options` 陣列內設定這些演算法："

#: ./docs/9.x/redis.md:188
#: ./docs/10.x/redis.md:188
msgctxt "CODE"
msgid ""
"'redis' => [\n"
"\n"
"    'client' => env('REDIS_CLIENT', 'phpredis'),\n"
"\n"
"    'options' => [\n"
"        'serializer' => Redis::SERIALIZER_MSGPACK,\n"
"        'compression' => Redis::COMPRESSION_LZ4,\n"
"    ],\n"
"\n"
"    // Rest of Redis configuration...\n"
"],"
msgstr ""

#: ./docs/8.x/redis.md:198
#: ./docs/9.x/redis.md:200
msgctxt "P"
msgid "Currently supported serialization algorithms include: `Redis::SERIALIZER_NONE` (default), `Redis::SERIALIZER_PHP`, `Redis::SERIALIZER_JSON`, `Redis::SERIALIZER_IGBINARY`, and `Redis::SERIALIZER_MSGPACK`."
msgstr "目前所支援的序列化演算法有 `Redis::SERIALIZER_NONE` (預設)、`Redis::SERIALIZER_PHP`、`Redis::SERIALIZER_JSON`、`Redis::SERIALIZER_IGBINARY`、`Redis::SERIALIZER_MSGPACK` 。"

#: ./docs/10.x/redis.md:200
#: ./docs/11.x/redis.md:214
#: ./docs/master/redis.md:214
msgctxt "P"
msgid "Currently supported serializers include: `Redis::SERIALIZER_NONE` (default), `Redis::SERIALIZER_PHP`, `Redis::SERIALIZER_JSON`, `Redis::SERIALIZER_IGBINARY`, and `Redis::SERIALIZER_MSGPACK`."
msgstr ""

#: ./docs/11.x/redis.md:200
#: ./docs/master/redis.md:200
msgctxt "CODE"
msgid ""
"'redis' => [\n"
"\n"
"    'client' => env('REDIS_CLIENT', 'phpredis'),\n"
"\n"
"    'options' => [\n"
"        'cluster' => env('REDIS_CLUSTER', 'redis'),\n"
"        'prefix' => env('REDIS_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_database_'),\n"
"        'serializer' => Redis::SERIALIZER_MSGPACK,\n"
"        'compression' => Redis::COMPRESSION_LZ4,\n"
"    ],\n"
"\n"
"    // ...\n"
"],"
msgstr ""

#: ./docs/8.x/redis.md:200
#: ./docs/9.x/redis.md:202
#: ./docs/10.x/redis.md:202
#: ./docs/11.x/redis.md:216
#: ./docs/master/redis.md:216
msgctxt "P"
msgid "Supported compression algorithms include: `Redis::COMPRESSION_NONE` (default), `Redis::COMPRESSION_LZF`, `Redis::COMPRESSION_ZSTD`, and `Redis::COMPRESSION_LZ4`."
msgstr "支援的壓縮演算法包含：`Redis::COMPRESSION_NONE` (預設)、`Redis::COMPRESSION_LZF`、`Redis::COMPRESSION_ZSTD`、`Redis::COMPRESSION_LZ4`。"

#: ./docs/8.x/redis.md:202
#: ./docs/9.x/redis.md:204
#: ./docs/10.x/redis.md:204
#: ./docs/11.x/redis.md:218
#: ./docs/master/redis.md:218
#~ msgctxt "P"
#~ msgid "<a name=\"interacting-with-redis\"></a>"
#~ msgstr ""

#: ./docs/8.x/redis.md:203
#: ./docs/9.x/redis.md:205
#: ./docs/10.x/redis.md:205
#: ./docs/11.x/redis.md:219
#: ./docs/master/redis.md:219
msgctxt "H2"
msgid "Interacting With Redis"
msgstr "使用 Redis"

#: ./docs/8.x/redis.md:205
#: ./docs/9.x/redis.md:207
#: ./docs/10.x/redis.md:207
#: ./docs/11.x/redis.md:221
#: ./docs/master/redis.md:221
msgctxt "P"
msgid "You may interact with Redis by calling various methods on the `Redis` [facade](/docs/{{version}}/facades). The `Redis` facade supports dynamic methods, meaning you may call any [Redis command](https://redis.io/commands) on the facade and the command will be passed directly to Redis. In this example, we will call the Redis `GET` command by calling the `get` method on the `Redis` facade:"
msgstr "我們可以呼叫 `Redis` [Facade](/docs/{{version}}/facades) 上的各種方法來使用 Redis。`Redis` Facade 支援動態方法，著表示，我們可以在該 Facade 上呼叫任何的 [Redis 指令](https://redis.io/commands)，而該指令會被直接傳到 Redis 上。在這個範例中，我們會在 `Redis` Facade 上呼叫 `get` 方法，以呼叫 Redis 的 `GET` 指令："

#: ./docs/8.x/redis.md:207
#: ./docs/9.x/redis.md:209
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Http\\Controllers;\n"
"\n"
"use App\\Http\\Controllers\\Controller;\n"
"use Illuminate\\Support\\Facades\\Redis;\n"
"\n"
"class UserController extends Controller\n"
"{\n"
"    /**\n"
"     * Show the profile for the given user.\n"
"     *\n"
"     * @param  int  $id\n"
"     * @return \\Illuminate\\Http\\Response\n"
"     */\n"
"    public function show($id)\n"
"    {\n"
"        return view('user.profile', [\n"
"            'user' => Redis::get('user:profile:'.$id)\n"
"        ]);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/10.x/redis.md:209
#: ./docs/11.x/redis.md:223
#: ./docs/master/redis.md:223
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Http\\Controllers;\n"
"\n"
"use App\\Http\\Controllers\\Controller;\n"
"use Illuminate\\Support\\Facades\\Redis;\n"
"use Illuminate\\View\\View;\n"
"\n"
"class UserController extends Controller\n"
"{\n"
"    /**\n"
"     * Show the profile for the given user.\n"
"     */\n"
"    public function show(string $id): View\n"
"    {\n"
"        return view('user.profile', [\n"
"            'user' => Redis::get('user:profile:'.$id)\n"
"        ]);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/8.x/redis.md:230
#: ./docs/9.x/redis.md:232
#: ./docs/10.x/redis.md:230
#: ./docs/11.x/redis.md:244
#: ./docs/master/redis.md:244
msgctxt "P"
msgid "As mentioned above, you may call any of Redis' commands on the `Redis` facade. Laravel uses magic methods to pass the commands to the Redis server. If a Redis command expects arguments, you should pass those to the facade's corresponding method:"
msgstr "剛才也提到過，我們可以在 `Redis` Facade 上呼叫任何的 Redis 指令。Laravel 會使用 Magic Method 來將這些指令傳給 Redis 伺服器。若是有要求引數的 Redis 指令，則我們可以將引數傳給 Facade 上對應的方法："

#: ./docs/8.x/redis.md:232
#: ./docs/9.x/redis.md:234
#: ./docs/10.x/redis.md:232
#: ./docs/11.x/redis.md:246
#: ./docs/master/redis.md:246
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Redis;\n"
"\n"
"Redis::set('name', 'Taylor');\n"
"\n"
"$values = Redis::lrange('names', 5, 10);"
msgstr ""

#: ./docs/8.x/redis.md:238
#: ./docs/9.x/redis.md:240
#: ./docs/10.x/redis.md:238
#: ./docs/11.x/redis.md:252
#: ./docs/master/redis.md:252
msgctxt "P"
msgid "Alternatively, you may pass commands to the server using the `Redis` facade's `command` method, which accepts the name of the command as its first argument and an array of values as its second argument:"
msgstr "或者，我們也可以使用 `Redis` Facade 的 `command` 方法來將指令傳給 Redis 伺服器。`command` 方法的第一個引數是指令名稱，而第二個引數則是一個陣列："

#: ./docs/8.x/redis.md:240
#: ./docs/9.x/redis.md:242
#: ./docs/10.x/redis.md:240
#: ./docs/11.x/redis.md:254
#: ./docs/master/redis.md:254
msgctxt "CODE"
msgid "$values = Redis::command('lrange', ['name', 5, 10]);"
msgstr ""

#: ./docs/8.x/redis.md:242
#: ./docs/9.x/redis.md:244
#: ./docs/10.x/redis.md:242
#: ./docs/11.x/redis.md:256
#: ./docs/master/redis.md:256
#~ msgctxt "P"
#~ msgid "<a name=\"using-multiple-redis-connections\"></a>"
#~ msgstr ""

#: ./docs/8.x/redis.md:243
#: ./docs/9.x/redis.md:245
#: ./docs/10.x/redis.md:243
#: ./docs/11.x/redis.md:257
#: ./docs/master/redis.md:257
msgctxt "H4"
msgid "Using Multiple Redis Connections"
msgstr "使用多個 Redis 連線"

#: ./docs/8.x/redis.md:245
#: ./docs/9.x/redis.md:247
#: ./docs/10.x/redis.md:245
#: ./docs/11.x/redis.md:259
#: ./docs/master/redis.md:259
msgctxt "P"
msgid "Your application's `config/database.php` configuration file allows you to define multiple Redis connections / servers. You may obtain a connection to a specific Redis connection using the `Redis` facade's `connection` method:"
msgstr "在專案的 `config/database.php` 設定檔中，我們可以定義多個 Redis 連線／伺服器。我們可以使用 `Redis` Facade 上的 `connection` 方法來取得一個特定的 Redis 連線："

#: ./docs/8.x/redis.md:247
#: ./docs/9.x/redis.md:249
#: ./docs/10.x/redis.md:247
#: ./docs/11.x/redis.md:261
#: ./docs/master/redis.md:261
msgctxt "CODE"
msgid "$redis = Redis::connection('connection-name');"
msgstr ""

#: ./docs/8.x/redis.md:249
#: ./docs/9.x/redis.md:251
#: ./docs/10.x/redis.md:249
#: ./docs/11.x/redis.md:263
#: ./docs/master/redis.md:263
msgctxt "P"
msgid "To obtain an instance of the default Redis connection, you may call the `connection` method without any additional arguments:"
msgstr "若要取得預設的 Redis 連線，可直接呼叫 `connection` 方法而不帶任何引數："

#: ./docs/8.x/redis.md:251
#: ./docs/9.x/redis.md:253
#: ./docs/10.x/redis.md:251
#: ./docs/11.x/redis.md:265
#: ./docs/master/redis.md:265
msgctxt "CODE"
msgid "$redis = Redis::connection();"
msgstr ""

#: ./docs/8.x/redis.md:253
#: ./docs/9.x/redis.md:255
#: ./docs/10.x/redis.md:253
#: ./docs/11.x/redis.md:267
#: ./docs/master/redis.md:267
#~ msgctxt "P"
#~ msgid "<a name=\"transactions\"></a>"
#~ msgstr ""

#: ./docs/8.x/redis.md:254
#: ./docs/9.x/redis.md:256
#: ./docs/10.x/redis.md:254
#: ./docs/11.x/redis.md:268
#: ./docs/master/redis.md:268
msgctxt "H3"
msgid "Transactions"
msgstr "Transaction"

#: ./docs/8.x/redis.md:256
#: ./docs/9.x/redis.md:258
#: ./docs/10.x/redis.md:256
#: ./docs/11.x/redis.md:270
#: ./docs/master/redis.md:270
msgctxt "P"
msgid "The `Redis` facade's `transaction` method provides a convenient wrapper around Redis' native `MULTI` and `EXEC` commands. The `transaction` method accepts a closure as its only argument. This closure will receive a Redis connection instance and may issue any commands it would like to this instance. All of the Redis commands issued within the closure will be executed in a single, atomic transaction:"
msgstr "`Redis` Facade 的 `transaction` 方法提供了一個 Redis 原生 `MULTI` 與 `EXEC` 指令的方便包裝。`transaction` 方法只有一個引數，該引數為一個閉包。傳入的閉包會收到一個 Redis 連線實體，並可在該實體上下任何指令。在該閉包中所下的所有指令，都會被放在單一、不可部分完成 (Atomic) 的 Transaction 內執行："

#: ./docs/10.x/redis.md:258
#: ./docs/11.x/redis.md:272
#: ./docs/master/redis.md:272
msgctxt "CODE"
msgid ""
"use Redis;\n"
"use Illuminate\\Support\\Facades;\n"
"\n"
"Facades\\Redis::transaction(function (Redis $redis) {\n"
"    $redis->incr('user_visits', 1);\n"
"    $redis->incr('total_visits', 1);\n"
"});"
msgstr ""

#: ./docs/8.x/redis.md:258
#: ./docs/9.x/redis.md:260
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Redis;\n"
"\n"
"Redis::transaction(function ($redis) {\n"
"    $redis->incr('user_visits', 1);\n"
"    $redis->incr('total_visits', 1);\n"
"});"
msgstr ""

#: ./docs/8.x/redis.md:265
#: ./docs/9.x/redis.md:268
#: ./docs/10.x/redis.md:267
#: ./docs/11.x/redis.md:281
#: ./docs/master/redis.md:281
msgctxt "P"
msgid "When defining a Redis transaction, you may not retrieve any values from the Redis connection. Remember, your transaction is executed as a single, atomic operation and that operation is not executed until your entire closure has finished executing its commands."
msgstr "定義 Redis Transaction 時，無法從 Redis 連線中取值。請記得，Transaction 是以單一、不可部分完成的動作來執行的，因此這些動作會在整個閉包內的指令都執行完畢後才被執行。"

#: ./docs/8.x/redis.md:267
#: ./docs/9.x/redis.md:270
#: ./docs/10.x/redis.md:269
#: ./docs/11.x/redis.md:283
#: ./docs/master/redis.md:283
msgctxt "H4"
msgid "Lua Scripts"
msgstr "Lua Script"

#: ./docs/8.x/redis.md:269
#: ./docs/9.x/redis.md:272
#: ./docs/10.x/redis.md:271
#: ./docs/11.x/redis.md:285
#: ./docs/master/redis.md:285
msgctxt "P"
msgid "The `eval` method provides another method of executing multiple Redis commands in a single, atomic operation. However, the `eval` method has the benefit of being able to interact with and inspect Redis key values during that operation. Redis scripts are written in the [Lua programming language](https://www.lua.org)."
msgstr "`eval` 方法提供了另一種以單一、不可部分完成動作執行多個 Redis 指令的方法。不過，使用 `eval` 方法還有個好處，就是能在動作的期間處理與偵測 Redis 的索引鍵值。Redis Script 使用 [Lua 程式語言](https://www.lua.org)撰寫。"

#: ./docs/8.x/redis.md:271
#: ./docs/9.x/redis.md:274
#: ./docs/10.x/redis.md:273
#: ./docs/11.x/redis.md:287
#: ./docs/master/redis.md:287
msgctxt "P"
msgid "The `eval` method can be a bit scary at first, but we'll explore a basic example to break the ice. The `eval` method expects several arguments. First, you should pass the Lua script (as a string) to the method. Secondly, you should pass the number of keys (as an integer) that the script interacts with. Thirdly, you should pass the names of those keys. Finally, you may pass any other additional arguments that you need to access within your script."
msgstr "雖然，一開始，`eval` 方法可能有點可怕。不過我們會先來看看一個簡單的例子。`eval` 方法接受多個引數。首先，我們需要先 (以字串形式) 傳入 Lua Script 給該方法。然後。我們需要將該 Script 要處理的索引鍵數量 (以整數形式) 傳入。再來，我們需要傳入這些索引鍵的名稱。最後，我們可以傳入在該 Script 中需要存取的其他引數。"

#: ./docs/8.x/redis.md:273
#: ./docs/9.x/redis.md:276
#: ./docs/10.x/redis.md:275
#: ./docs/11.x/redis.md:289
#: ./docs/master/redis.md:289
msgctxt "P"
msgid "In this example, we will increment a counter, inspect its new value, and increment a second counter if the first counter's value is greater than five. Finally, we will return the value of the first counter:"
msgstr "在這個範例中，我們會遞增一個計數器，並取得該計數器的值，判斷該值是否大於 5。如果大於 5，就再遞增另一個計數器。最後，回傳第一個計數器的值："

#: ./docs/8.x/redis.md:275
#: ./docs/9.x/redis.md:278
#: ./docs/10.x/redis.md:277
#: ./docs/11.x/redis.md:291
#: ./docs/master/redis.md:291
msgctxt "CODE"
msgid ""
"$value = Redis::eval(<<<'LUA'\n"
"    local counter = redis.call(\"incr\", KEYS[1])\n"
"\n"
"    if counter > 5 then\n"
"        redis.call(\"incr\", KEYS[2])\n"
"    end\n"
"\n"
"    return counter\n"
"LUA, 2, 'first-counter', 'second-counter');"
msgstr ""

#: ./docs/8.x/redis.md:285
#: ./docs/9.x/redis.md:289
#: ./docs/10.x/redis.md:288
#: ./docs/11.x/redis.md:302
#: ./docs/master/redis.md:302
msgctxt "P"
msgid "Please consult the [Redis documentation](https://redis.io/commands/eval) for more information on Redis scripting."
msgstr "有關更多在 Redis 上撰寫 Script 的資訊，請參考 [Redis 的說明文件](https://redis.io/commands/eval)。"

#: ./docs/8.x/redis.md:287
#: ./docs/9.x/redis.md:291
#: ./docs/10.x/redis.md:290
#: ./docs/11.x/redis.md:304
#: ./docs/master/redis.md:304
#~ msgctxt "P"
#~ msgid "<a name=\"pipelining-commands\"></a>"
#~ msgstr ""

#: ./docs/8.x/redis.md:288
#: ./docs/9.x/redis.md:292
#: ./docs/10.x/redis.md:291
#: ./docs/11.x/redis.md:305
#: ./docs/master/redis.md:305
msgctxt "H3"
msgid "Pipelining Commands"
msgstr "指令管道"

#: ./docs/8.x/redis.md:290
#: ./docs/9.x/redis.md:294
#: ./docs/10.x/redis.md:293
#: ./docs/11.x/redis.md:307
#: ./docs/master/redis.md:307
msgctxt "P"
msgid "Sometimes you may need to execute dozens of Redis commands. Instead of making a network trip to your Redis server for each command, you may use the `pipeline` method. The `pipeline` method accepts one argument: a closure that receives a Redis instance. You may issue all of your commands to this Redis instance and they will all be sent to the Redis server at the same time to reduce network trips to the server. The commands will still be executed in the order they were issued:"
msgstr "有時候，我們會需要執行多個 Redis 指令。除了個別以網路連線將每個指令傳給 Redis，我們還可以使用 `pipeline` 方法。`pipeline` 方法只有一個引數：一個接收 Redis 實體的閉包。我們可以使用這個 Redis 實體來下指令，下的所有指令會被一次性地傳送給 Redis 伺服器，以減少網路使用。指令會依照所下的順序執行："

#: ./docs/8.x/redis.md:292
#: ./docs/9.x/redis.md:296
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Redis;\n"
"\n"
"Redis::pipeline(function ($pipe) {\n"
"    for ($i = 0; $i < 1000; $i++) {\n"
"        $pipe->set(\"key:$i\", $i);\n"
"    }\n"
"});"
msgstr ""

#: ./docs/10.x/redis.md:295
#: ./docs/11.x/redis.md:309
#: ./docs/master/redis.md:309
msgctxt "CODE"
msgid ""
"use Redis;\n"
"use Illuminate\\Support\\Facades;\n"
"\n"
"Facades\\Redis::pipeline(function (Redis $pipe) {\n"
"    for ($i = 0; $i < 1000; $i++) {\n"
"        $pipe->set(\"key:$i\", $i);\n"
"    }\n"
"});"
msgstr ""

#: ./docs/8.x/redis.md:300
#: ./docs/9.x/redis.md:304
#: ./docs/10.x/redis.md:304
#: ./docs/11.x/redis.md:318
#: ./docs/master/redis.md:318
#~ msgctxt "P"
#~ msgid "<a name=\"pubsub\"></a>"
#~ msgstr ""

#: ./docs/8.x/redis.md:301
#: ./docs/9.x/redis.md:305
#: ./docs/10.x/redis.md:305
#: ./docs/11.x/redis.md:319
#: ./docs/master/redis.md:319
msgctxt "H2"
msgid "Pub / Sub"
msgstr "Pub / Sub"

#: ./docs/8.x/redis.md:303
#: ./docs/9.x/redis.md:307
#: ./docs/10.x/redis.md:307
#: ./docs/11.x/redis.md:321
#: ./docs/master/redis.md:321
msgctxt "P"
msgid "Laravel provides a convenient interface to the Redis `publish` and `subscribe` commands. These Redis commands allow you to listen for messages on a given \"channel\". You may publish messages to the channel from another application, or even using another programming language, allowing easy communication between applications and processes."
msgstr "Laravel 中為 Redis 的 `publish` 與 `subscribe` 指令提供了一個方便的介面。使用這兩個 Redis 指令，我們就能在給定的「頻道 (Channel)」上監聽訊息。接著，我們可以在另一個專案內、甚至使用另一個程式語言來 ^[Publish](發佈) 訊息。這樣一來我們就能輕鬆地在不同專案或處理程序間進行溝通。"

#: ./docs/8.x/redis.md:305
#: ./docs/9.x/redis.md:309
#: ./docs/10.x/redis.md:309
#: ./docs/11.x/redis.md:323
#: ./docs/master/redis.md:323
msgctxt "P"
msgid "First, let's setup a channel listener using the `subscribe` method. We'll place this method call within an [Artisan command](/docs/{{version}}/artisan) since calling the `subscribe` method begins a long-running process:"
msgstr "首先，我們先使用 `subscribe` 方法來建立一個頻道的 ^[Listener](監聽程式)。我們將這個指令放在一個 [Artisan 指令](/docs/{{version}}/artisan)內呼叫。因為，呼叫 ^[`subscribe`](訂閱) 方法就代表要開啟一個執行時間較長的處理程序："

#: ./docs/8.x/redis.md:307
#: ./docs/9.x/redis.md:311
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Console\\Commands;\n"
"\n"
"use Illuminate\\Console\\Command;\n"
"use Illuminate\\Support\\Facades\\Redis;\n"
"\n"
"class RedisSubscribe extends Command\n"
"{\n"
"    /**\n"
"     * The name and signature of the console command.\n"
"     *\n"
"     * @var string\n"
"     */\n"
"    protected $signature = 'redis:subscribe';\n"
"\n"
"    /**\n"
"     * The console command description.\n"
"     *\n"
"     * @var string\n"
"     */\n"
"    protected $description = 'Subscribe to a Redis channel';\n"
"\n"
"    /**\n"
"     * Execute the console command.\n"
"     *\n"
"     * @return mixed\n"
"     */\n"
"    public function handle()\n"
"    {\n"
"        Redis::subscribe(['test-channel'], function ($message) {\n"
"            echo $message;\n"
"        });\n"
"    }\n"
"}"
msgstr ""

#: ./docs/10.x/redis.md:311
#: ./docs/11.x/redis.md:325
#: ./docs/master/redis.md:325
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Console\\Commands;\n"
"\n"
"use Illuminate\\Console\\Command;\n"
"use Illuminate\\Support\\Facades\\Redis;\n"
"\n"
"class RedisSubscribe extends Command\n"
"{\n"
"    /**\n"
"     * The name and signature of the console command.\n"
"     *\n"
"     * @var string\n"
"     */\n"
"    protected $signature = 'redis:subscribe';\n"
"\n"
"    /**\n"
"     * The console command description.\n"
"     *\n"
"     * @var string\n"
"     */\n"
"    protected $description = 'Subscribe to a Redis channel';\n"
"\n"
"    /**\n"
"     * Execute the console command.\n"
"     */\n"
"    public function handle(): void\n"
"    {\n"
"        Redis::subscribe(['test-channel'], function (string $message) {\n"
"            echo $message;\n"
"        });\n"
"    }\n"
"}"
msgstr ""

#: ./docs/8.x/redis.md:343
#: ./docs/9.x/redis.md:347
#: ./docs/10.x/redis.md:345
#: ./docs/11.x/redis.md:359
#: ./docs/master/redis.md:359
msgctxt "P"
msgid "Now we may publish messages to the channel using the `publish` method:"
msgstr "接著，我們就能使用 `publish` 方法來將訊息發佈到頻道上："

#: ./docs/8.x/redis.md:345
#: ./docs/9.x/redis.md:349
#: ./docs/10.x/redis.md:347
#: ./docs/11.x/redis.md:361
#: ./docs/master/redis.md:361
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Redis;\n"
"\n"
"Route::get('/publish', function () {\n"
"    // ...\n"
"\n"
"    Redis::publish('test-channel', json_encode([\n"
"        'name' => 'Adam Wathan'\n"
"    ]));\n"
"});"
msgstr ""

#: ./docs/8.x/redis.md:355
#: ./docs/9.x/redis.md:359
#: ./docs/10.x/redis.md:357
#: ./docs/11.x/redis.md:371
#: ./docs/master/redis.md:371
#~ msgctxt "P"
#~ msgid "<a name=\"wildcard-subscriptions\"></a>"
#~ msgstr ""

#: ./docs/8.x/redis.md:356
#: ./docs/9.x/redis.md:360
#: ./docs/10.x/redis.md:358
#: ./docs/11.x/redis.md:372
#: ./docs/master/redis.md:372
msgctxt "H4"
msgid "Wildcard Subscriptions"
msgstr "使用萬用字元來 Subscribe"

#: ./docs/8.x/redis.md:358
#: ./docs/9.x/redis.md:362
#: ./docs/10.x/redis.md:360
#: ./docs/11.x/redis.md:374
#: ./docs/master/redis.md:374
msgctxt "P"
msgid "Using the `psubscribe` method, you may subscribe to a wildcard channel, which may be useful for catching all messages on all channels. The channel name will be passed as the second argument to the provided closure:"
msgstr "使用 `psubscribe` 方法，我們就能以萬用字元來 Subscribe 頻道。若要從所有頻道中取得所有的訊息，就適合使用這個方法。頻道名稱會以第二個引數傳給所提供的閉包："

#: ./docs/8.x/redis.md:360
#: ./docs/9.x/redis.md:364
msgctxt "CODE"
msgid ""
"Redis::psubscribe(['*'], function ($message, $channel) {\n"
"    echo $message;\n"
"});\n"
"\n"
"Redis::psubscribe(['users.*'], function ($message, $channel) {\n"
"    echo $message;\n"
"});"
msgstr ""

#: ./docs/10.x/redis.md:362
#: ./docs/11.x/redis.md:376
#: ./docs/master/redis.md:376
msgctxt "CODE"
msgid ""
"Redis::psubscribe(['*'], function (string $message, string $channel) {\n"
"    echo $message;\n"
"});\n"
"\n"
"Redis::psubscribe(['users.*'], function (string $message, string $channel) {\n"
"    echo $message;\n"
"});"
msgstr ""
