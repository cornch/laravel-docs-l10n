msgid ""
msgstr ""
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/templates/pint.pot\n"
"X-Crowdin-File-ID: 178\n"
"Project-Id-Version: laravel-docs\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"PO-Revision-Date: 2023-01-25 14:53\n"

#: docs/9.x/pint.md:block 1 (header)
msgid "Laravel Pint"
msgstr "Laravel Pint"

#: docs/9.x/pint.md:block 2 (unordered list)
msgid "[Introduction](#introduction)"
msgstr "[簡介](#introduction)"

#: docs/9.x/pint.md:block 2 (unordered list)
msgid "[Installation](#installation)"
msgstr "[安裝](#installation)"

#: docs/9.x/pint.md:block 2 (unordered list)
msgid "[Running Pint](#running-pint)"
msgstr "[執行 Pint](#running-pint)"

#: docs/9.x/pint.md:block 2 (unordered list)
msgid "[Configuring Pint](#configuring-pint)"
msgstr "[設定 Pint](#configuring-pint)"

#: docs/9.x/pint.md:block 2 (unordered list)
msgid "[Presets](#presets)"
msgstr "[預設](#presets)"

#: docs/9.x/pint.md:block 2 (unordered list)
msgid "[Rules](#rules)"
msgstr "[規則](#rules)"

#: docs/9.x/pint.md:block 2 (unordered list)
msgid "[Excluding Files / Folders](#excluding-files-or-folders)"
msgstr "[排除檔案或資料夾](#excluding-files-or-folders)"

#: docs/9.x/pint.md:block 4 (header)
msgid "Introduction"
msgstr "簡介"

#: docs/9.x/pint.md:block 5 (paragraph)
msgid "[Laravel Pint](https://github.com/laravel/pint) is an opinionated PHP code style fixer for minimalists. Pint is built on top of PHP-CS-Fixer and makes it simple to ensure that your code style stays clean and consistent."
msgstr "[Laravel Pint](https://github.com/laravel/pint) 是一款專為極簡主義者涉及的主導性 (Opinionated) PHP ^[Code Style Fixer](程式碼風格修正程式)。Pint 以 PHP-CS-Fixer 為基礎，並讓其保持簡單，以確保你的 Code Style 保持乾淨與統一。"

#: docs/9.x/pint.md:block 6 (paragraph)
msgid "Pint is automatically installed with all new Laravel applications so you may start using it immediately. By default, Pint does not require any configuration and will fix code style issues in your code by following the opinionated coding style of Laravel."
msgstr "在所有新建立的 Laravel 專案中，會自動安裝 Pint，因此你可以馬上開始使用。預設情況下，Pint 並不需要任何設定，會自動使用 Laravel 的主導性 Coding Style 來修正程式碼中的 Coding Style 問題。"

#: docs/9.x/pint.md:block 8 (header)
msgid "Installation"
msgstr "安裝"

#: docs/9.x/pint.md:block 9 (paragraph)
msgid "Pint is included in recent releases of the Laravel framework, so installation is typically unnecessary. However, for older applications, you may install Laravel Pint via Composer:"
msgstr "Pint 已包含在最近釋出的 Laravel 框架中，因此通常不需要進行安裝。不過，在舊的專案中，可以使用 Composer 來安裝 Laravel Pint："

#: docs/9.x/pint.md:block 10 (code)
msgid "composer require laravel/pint --dev\n"
msgstr "composer require laravel/pint --dev\n"

#: docs/9.x/pint.md:block 12 (header)
msgid "Running Pint"
msgstr "執行 Pint"

#: docs/9.x/pint.md:block 13 (paragraph)
msgid "You can instruct Pint to fix code style issues by invoking the `pint` binary that is available in your project's `vendor/bin` directory:"
msgstr "只要呼叫專案 `vendor/bin` 目錄中的 `pint` 二進位檔案，就可以讓 Pint 修正 Coding Style 問題："

#: docs/9.x/pint.md:block 14 (code)
msgid "./vendor/bin/pint\n"
msgstr "./vendor/bin/pint\n"

#: docs/9.x/pint.md:block 15 (paragraph)
msgid "You may also run Pint on specific files or directories:"
msgstr "也可以針對特定檔案或目錄來執行 Pint："

#: docs/9.x/pint.md:block 16 (code)
msgid "./vendor/bin/pint app/Models\n\n"
"./vendor/bin/pint app/Models/User.php\n"
msgstr "./vendor/bin/pint app/Models\n\n"
"./vendor/bin/pint app/Models/User.php\n"

#: docs/9.x/pint.md:block 17 (paragraph)
msgid "Pint will display a thorough list of all of the files that it updates. You can view even more detail about Pint's changes by providing the `-v` option when invoking Pint:"
msgstr "Pint 會列出其更新的檔案列表。只要在呼叫 Pint 時提供 `-v` 選項，就可以檢視更多關於 Pint 所做出更改的詳情："

#: docs/9.x/pint.md:block 18 (code)
msgid "./vendor/bin/pint -v\n"
msgstr "./vendor/bin/pint -v\n"

#: docs/9.x/pint.md:block 19 (paragraph)
msgid "If you would like Pint to simply inspect your code for style errors without actually changing the files, you may use the `--test` option:"
msgstr "若只想讓 Pint 偵測程式碼中的 Coding Style 錯誤而不實際更改檔案，可以使用 `--test` 選項："

#: docs/9.x/pint.md:block 20 (code)
msgid "./vendor/bin/pint --test\n"
msgstr "./vendor/bin/pint --test\n"

#: docs/9.x/pint.md:block 21 (paragraph)
msgid "If you would like Pint to only modify the files that have uncommitted changes according to Git, you may use the `--dirty` option:"
msgstr "若要根據 Git 來讓 Pint 只修改包含未 Commit 更改的檔案，可使用 `--dirty` 選項："

#: docs/9.x/pint.md:block 22 (code)
msgid "./vendor/bin/pint --dirty\n"
msgstr "./vendor/bin/pint --dirty\n"

#: docs/9.x/pint.md:block 24 (header)
msgid "Configuring Pint"
msgstr "設定 Pint"

#: docs/9.x/pint.md:block 25 (paragraph)
msgid "As previously mentioned, Pint does not require any configuration. However, if you wish to customize the presets, rules, or inspected folders, you may do so by creating a `pint.json` file in your project's root directory:"
msgstr "剛才也提到過，Pint 不需要任何設定檔。不過，若有需要更改預設、規則、或是要檢查的資料夾，可在專案根目錄建立一個 `pint.json` 檔："

#: docs/9.x/pint.md:block 26 (code)
msgid "{\n"
"    \"preset\": \"laravel\"\n"
"}\n"
msgstr "{\n"
"    \"preset\": \"laravel\"\n"
"}\n"

#: docs/9.x/pint.md:block 27 (paragraph)
msgid "In addition, if you wish to use a `pint.json` from a specific directory, you may provide the `--config` option when invoking Pint:"
msgstr "此外，若要使用特定資料夾中的 `pint.json` 檔，可在呼叫 Pint 時提供 `--config` 選項："

#: docs/9.x/pint.md:block 28 (code)
msgid "pint --config vendor/my-company/coding-style/pint.json\n"
msgstr "pint --config vendor/my-company/coding-style/pint.json\n"

#: docs/9.x/pint.md:block 30 (header)
msgid "Presets"
msgstr "預設"

#: docs/9.x/pint.md:block 31 (paragraph)
msgid "Presets defines a set of rules that can be used to fix code style issues in your code. By default, Pint uses the `laravel` preset, which fixes issues by following the opinionated coding style of Laravel. However, you may specify a different preset by providing the `--preset` option to Pint:"
msgstr "「預設 (Preset)」定義了一組可用來修正程式碼中 Coding Style 的規則。預設情況下，Pint 使用了 `laravel` 預設，這個預設遵守 Laravel 的主導性 Coding Style。不過，也可與提供 `--preset` 選項給 Pint 來指定不同的預設："

#: docs/9.x/pint.md:block 32 (code)
msgid "pint --preset psr12\n"
msgstr "pint --preset psr12\n"

#: docs/9.x/pint.md:block 33 (paragraph)
msgid "If you wish, you may also set the preset in your project's `pint.json` file:"
msgstr "若有需要，也可以在專案的 `pint.json` 檔案中設定預設："

#: docs/9.x/pint.md:block 34 (code)
msgid "{\n"
"    \"preset\": \"psr12\"\n"
"}\n"
msgstr "{\n"
"    \"preset\": \"psr12\"\n"
"}\n"

#: docs/9.x/pint.md:block 35 (paragraph)
msgid "Pint's currently supported presets are: `laravel`, `psr12`, and `symfony`."
msgstr "Pint 目前支援的預設有：`laravel`、`psr12`、`symfony`。"

#: docs/9.x/pint.md:block 37 (header)
msgid "Rules"
msgstr "規則"

#: docs/9.x/pint.md:block 38 (paragraph)
msgid "Rules are style guidelines that Pint will use to fix code style issues in your code. As mentioned above, presets are predefined groups of rules that should be perfect for most PHP projects, so you typically will not need to worry about the individual rules they contain."
msgstr "「規則 (Rule)」是 Pint 要用來修正程式碼 Coding Style 問題的樣式準則。剛才提到過，「預設」預先定義了一組規則，這些規則應該適用於大多數的 PHP 專案，因此你通常不需要擔心個別的規則。"

#: docs/9.x/pint.md:block 39 (paragraph)
msgid "However, if you wish, you may enable or disable specific rules in your `pint.json` file:"
msgstr "不過，若有需要，也可以在 `pint.json` 檔中啟用或禁用特定的規則："

#: docs/9.x/pint.md:block 40 (code)
msgid "{\n"
"    \"preset\": \"laravel\",\n"
"    \"rules\": {\n"
"        \"simplified_null_return\": true,\n"
"        \"braces\": false,\n"
"        \"new_with_braces\": {\n"
"            \"anonymous_class\": false,\n"
"            \"named_class\": false\n"
"        }\n"
"    }\n"
"}\n"
msgstr "{\n"
"    \"preset\": \"laravel\",\n"
"    \"rules\": {\n"
"        \"simplified_null_return\": true,\n"
"        \"braces\": false,\n"
"        \"new_with_braces\": {\n"
"            \"anonymous_class\": false,\n"
"            \"named_class\": false\n"
"        }\n"
"    }\n"
"}\n"

#: docs/9.x/pint.md:block 41 (paragraph)
msgid "Pint is built on top of [PHP-CS-Fixer](https://github.com/FriendsOfPHP/PHP-CS-Fixer). Therefore, you may use any of its rules to fix code style issues in your project: [PHP-CS-Fixer Configurator](https://mlocati.github.io/php-cs-fixer-configurator)."
msgstr "Pint 以 [PHP-CS-Fixer](https://github.com/FriendsOfPHP/PHP-CS-Fixer) 為基礎製作，因此，你可以使用 PHP-CS-Fixer 的規則來修正專案中的 Coding Style 問題： [PHP-CS-Fixer Configurator](https://mlocati.github.io/php-cs-fixer-configurator)。"

#: docs/9.x/pint.md:block 43 (header)
msgid "Excluding Files / Folders"
msgstr "排除檔案或資料夾"

#: docs/9.x/pint.md:block 44 (paragraph)
msgid "By default, Pint will inspect all `.php` files in your project except those in the `vendor` directory. If you wish to exclude more folders, you may do so using the `exclude` configuration option:"
msgstr "預設情況下，Pint 會檢查專案中除了 `vendor` 目錄以外的所有 `.php` 檔案。若有需要排除其他目錄，可使用 `exclude` 設定選項："

#: docs/9.x/pint.md:block 45 (code)
msgid "{\n"
"    \"exclude\": [\n"
"        \"my-specific/folder\"\n"
"    ]\n"
"}\n"
msgstr "{\n"
"    \"exclude\": [\n"
"        \"my-specific/folder\"\n"
"    ]\n"
"}\n"

#: docs/9.x/pint.md:block 46 (paragraph)
msgid "If you wish to exclude all files that contain a given name pattern, you may do so using the `notName` configuration option:"
msgstr "若有需要排除所有符合特定檔名規則的檔案，可使用 `notName` 選項："

#: docs/9.x/pint.md:block 47 (code)
msgid "{\n"
"    \"notName\": [\n"
"        \"*-my-file.php\"\n"
"    ]\n"
"}\n"
msgstr "{\n"
"    \"notName\": [\n"
"        \"*-my-file.php\"\n"
"    ]\n"
"}\n"

#: docs/9.x/pint.md:block 48 (paragraph)
msgid "If you would like to exclude a file by providing an exact path to the file, you may do so using the `notPath` configuration option:"
msgstr "若有需要排除特定路徑的檔案，可使用 `notPath` 設定選項："

#: docs/9.x/pint.md:block 49 (code)
msgid "{\n"
"    \"notPath\": [\n"
"        \"path/to/excluded-file.php\"\n"
"    ]\n"
"}\n"
msgstr "{\n"
"    \"notPath\": [\n"
"        \"path/to/excluded-file.php\"\n"
"    ]\n"
"}\n"

