#
msgid ""
msgstr ""

#: docs/8.x/configuration.md:block 1 (header)
msgid "Configuration"
msgstr ""

#: docs/8.x/configuration.md:block 2 (unordered list)
msgid "[Introduction](#introduction)"
msgstr ""

#: docs/8.x/configuration.md:block 2 (unordered list)
msgid "[Environment Configuration](#environment-configuration)"
msgstr ""

#: docs/8.x/configuration.md:block 2 (unordered list)
msgid "[Environment Variable Types](#environment-variable-types)"
msgstr ""

#: docs/8.x/configuration.md:block 2 (unordered list)
msgid "[Retrieving Environment Configuration](#retrieving-environment-configuration)"
msgstr ""

#: docs/8.x/configuration.md:block 2 (unordered list)
msgid "[Determining The Current Environment](#determining-the-current-environment)"
msgstr ""

#: docs/8.x/configuration.md:block 2 (unordered list)
msgid "[Accessing Configuration Values](#accessing-configuration-values)"
msgstr ""

#: docs/8.x/configuration.md:block 2 (unordered list)
msgid "[Configuration Caching](#configuration-caching)"
msgstr ""

#: docs/8.x/configuration.md:block 2 (unordered list)
msgid "[Debug Mode](#debug-mode)"
msgstr ""

#: docs/8.x/configuration.md:block 2 (unordered list)
msgid "[Maintenance Mode](#maintenance-mode)"
msgstr ""

#: docs/8.x/configuration.md:block 4 (header)
msgid "Introduction"
msgstr ""

#: docs/8.x/configuration.md:block 5 (paragraph)
msgid "All of the configuration files for the Laravel framework are stored in the `config` directory. Each option is documented, so feel free to look through the files and get familiar with the options available to you."
msgstr ""

#: docs/8.x/configuration.md:block 6 (paragraph)
msgid "These configuration files allow you to configure things like your database connection information, your mail server information, as well as various other core configuration values such as your application timezone and encryption key."
msgstr ""

#: docs/8.x/configuration.md:block 8 (header)
msgid "Environment Configuration"
msgstr ""

#: docs/8.x/configuration.md:block 9 (paragraph)
msgid "It is often helpful to have different configuration values based on the environment where the application is running. For example, you may wish to use a different cache driver locally than you do on your production server."
msgstr ""

#: docs/8.x/configuration.md:block 10 (paragraph)
msgid "To make this a cinch, Laravel utilizes the [DotEnv](https://github.com/vlucas/phpdotenv) PHP library. In a fresh Laravel installation, the root directory of your application will contain a `.env.example` file that defines many common environment variables. During the Laravel installation process, this file will automatically be copied to `.env`."
msgstr ""

#: docs/8.x/configuration.md:block 11 (paragraph)
msgid "Laravel's default `.env` file contains some common configuration values that may differ based on whether your application is running locally or on a production web server. These values are then retrieved from various Laravel configuration files within the `config` directory using Laravel's `env` function."
msgstr ""

#: docs/8.x/configuration.md:block 12 (paragraph)
msgid "If you are developing with a team, you may wish to continue including a `.env.example` file with your application. By putting placeholder values in the example configuration file, other developers on your team can clearly see which environment variables are needed to run your application."
msgstr ""

#: docs/8.x/configuration.md:block 13 (quote)
msgid "{tip} Any variable in your `.env` file can be overridden by external environment variables such as server-level or system-level environment variables."
msgstr ""

#: docs/8.x/configuration.md:block 15 (header)
msgid "Environment File Security"
msgstr ""

#: docs/8.x/configuration.md:block 16 (paragraph)
msgid "Your `.env` file should not be committed to your application's source control, since each developer / server using your application could require a different environment configuration. Furthermore, this would be a security risk in the event an intruder gains access to your source control repository, since any sensitive credentials would get exposed."
msgstr ""

#: docs/8.x/configuration.md:block 18 (header)
msgid "Additional Environment Files"
msgstr ""

#: docs/8.x/configuration.md:block 19 (paragraph)
msgid "Before loading your application's environment variables, Laravel determines if either the `APP_ENV` environment variable has been externally provided or if the `--env` CLI argument has been specified. If so, Laravel will attempt to load an `.env.[APP_ENV]` file if it exists. If it does not exist, the default `.env` file will be loaded."
msgstr ""

#: docs/8.x/configuration.md:block 21 (header)
msgid "Environment Variable Types"
msgstr ""

#: docs/8.x/configuration.md:block 22 (paragraph)
msgid "All variables in your `.env` files are typically parsed as strings, so some reserved values have been created to allow you to return a wider range of types from the `env()` function:"
msgstr ""

#: docs/8.x/configuration.md:block 23 (table)
msgid "`.env` Value"
msgstr ""

#: docs/8.x/configuration.md:block 23 (table)
msgid "`env()` Value"
msgstr ""

#: docs/8.x/configuration.md:block 23 (table)
msgid "true"
msgstr ""

#: docs/8.x/configuration.md:block 23 (table)
msgid "(bool) true"
msgstr ""

#: docs/8.x/configuration.md:block 23 (table)
msgid "(true)"
msgstr ""

#: docs/8.x/configuration.md:block 23 (table)
msgid "false"
msgstr ""

#: docs/8.x/configuration.md:block 23 (table)
msgid "(bool) false"
msgstr ""

#: docs/8.x/configuration.md:block 23 (table)
msgid "(false)"
msgstr ""

#: docs/8.x/configuration.md:block 23 (table)
msgid "empty"
msgstr ""

#: docs/8.x/configuration.md:block 23 (table)
msgid "(string) ''"
msgstr ""

#: docs/8.x/configuration.md:block 23 (table)
msgid "(empty)"
msgstr ""

#: docs/8.x/configuration.md:block 23 (table)
msgid "null"
msgstr ""

#: docs/8.x/configuration.md:block 23 (table)
msgid "(null) null"
msgstr ""

#: docs/8.x/configuration.md:block 23 (table)
msgid "(null)"
msgstr ""

#: docs/8.x/configuration.md:block 24 (paragraph)
msgid "If you need to define an environment variable with a value that contains spaces, you may do so by enclosing the value in double quotes:"
msgstr ""

#: docs/8.x/configuration.md:block 25 (code)
msgid "APP_NAME=\"My Application\"\n"
msgstr ""

#: docs/8.x/configuration.md:block 27 (header)
msgid "Retrieving Environment Configuration"
msgstr ""

#: docs/8.x/configuration.md:block 28 (paragraph)
msgid "All of the variables listed in this file will be loaded into the `$_ENV` PHP super-global when your application receives a request. However, you may use the `env` helper to retrieve values from these variables in your configuration files. In fact, if you review the Laravel configuration files, you will notice many of the options are already using this helper:"
msgstr ""

#: docs/8.x/configuration.md:block 29 (code)
msgid "'debug' => env('APP_DEBUG', false),\n"
msgstr ""

#: docs/8.x/configuration.md:block 30 (paragraph)
msgid "The second value passed to the `env` function is the \"default value\". This value will be returned if no environment variable exists for the given key."
msgstr ""

#: docs/8.x/configuration.md:block 32 (header)
msgid "Determining The Current Environment"
msgstr ""

#: docs/8.x/configuration.md:block 33 (paragraph)
msgid "The current application environment is determined via the `APP_ENV` variable from your `.env` file. You may access this value via the `environment` method on the `App` [facade](/docs/{{version}}/facades):"
msgstr ""

#: docs/8.x/configuration.md:block 34 (code)
msgid ""
"use Illuminate\\Support\\Facades\\App;\n"
"\n"
"$environment = App::environment();\n"
msgstr ""

#: docs/8.x/configuration.md:block 35 (paragraph)
msgid "You may also pass arguments to the `environment` method to determine if the environment matches a given value. The method will return `true` if the environment matches any of the given values:"
msgstr ""

#: docs/8.x/configuration.md:block 36 (code)
msgid ""
"if (App::environment('local')) {\n"
"    // The environment is local\n"
"}\n"
"\n"
"if (App::environment(['local', 'staging'])) {\n"
"    // The environment is either local OR staging...\n"
"}\n"
msgstr ""

#: docs/8.x/configuration.md:block 37 (quote)
msgid "{tip} The current application environment detection can be overridden by defining a server-level `APP_ENV` environment variable."
msgstr ""

#: docs/8.x/configuration.md:block 39 (header)
msgid "Accessing Configuration Values"
msgstr ""

#: docs/8.x/configuration.md:block 40 (paragraph)
msgid "You may easily access your configuration values using the global `config` helper function from anywhere in your application. The configuration values may be accessed using \"dot\" syntax, which includes the name of the file and option you wish to access. A default value may also be specified and will be returned if the configuration option does not exist:"
msgstr ""

#: docs/8.x/configuration.md:block 41 (code)
msgid ""
"$value = config('app.timezone');\n"
"\n"
"// Retrieve a default value if the configuration value does not exist...\n"
"$value = config('app.timezone', 'Asia/Seoul');\n"
msgstr ""

#: docs/8.x/configuration.md:block 42 (paragraph)
msgid "To set configuration values at runtime, pass an array to the `config` helper:"
msgstr ""

#: docs/8.x/configuration.md:block 43 (code)
msgid "config(['app.timezone' => 'America/Chicago']);\n"
msgstr ""

#: docs/8.x/configuration.md:block 45 (header)
msgid "Configuration Caching"
msgstr ""

#: docs/8.x/configuration.md:block 46 (paragraph)
msgid "To give your application a speed boost, you should cache all of your configuration files into a single file using the `config:cache` Artisan command. This will combine all of the configuration options for your application into a single file which can be quickly loaded by the framework."
msgstr ""

#: docs/8.x/configuration.md:block 47 (paragraph)
msgid "You should typically run the `php artisan config:cache` command as part of your production deployment process. The command should not be run during local development as configuration options will frequently need to be changed during the course of your application's development."
msgstr ""

#: docs/8.x/configuration.md:block 48 (quote)
msgid "{note} If you execute the `config:cache` command during your deployment process, you should be sure that you are only calling the `env` function from within your configuration files. Once the configuration has been cached, the `.env` file will not be loaded; therefore, the `env` function will only return external, system level environment variables."
msgstr ""

#: docs/8.x/configuration.md:block 50 (header)
msgid "Debug Mode"
msgstr ""

#: docs/8.x/configuration.md:block 51 (paragraph)
msgid "The `debug` option in your `config/app.php` configuration file determines how much information about an error is actually displayed to the user. By default, this option is set to respect the value of the `APP_DEBUG` environment variable, which is stored in your `.env` file."
msgstr ""

#: docs/8.x/configuration.md:block 52 (paragraph)
msgid "For local development, you should set the `APP_DEBUG` environment variable to `true`. **In your production environment, this value should always be `false`. If the variable is set to `true` in production, you risk exposing sensitive configuration values to your application's end users.**"
msgstr ""

#: docs/8.x/configuration.md:block 54 (header)
msgid "Maintenance Mode"
msgstr ""

#: docs/8.x/configuration.md:block 55 (paragraph)
msgid "When your application is in maintenance mode, a custom view will be displayed for all requests into your application. This makes it easy to \"disable\" your application while it is updating or when you are performing maintenance. A maintenance mode check is included in the default middleware stack for your application. If the application is in maintenance mode, a `Symfony\\Component\\HttpKernel\\Exception\\HttpException` instance will be thrown with a status code of 503."
msgstr ""

#: docs/8.x/configuration.md:block 56 (paragraph)
msgid "To enable maintenance mode, execute the `down` Artisan command:"
msgstr ""

#: docs/8.x/configuration.md:block 57 (code)
msgid "php artisan down\n"
msgstr ""

#: docs/8.x/configuration.md:block 58 (paragraph)
msgid "If you would like the `Refresh` HTTP header to be sent with all maintenance mode responses, you may provide the `refresh` option when invoking the `down` command. The `Refresh` header will instruct the browser to automatically refresh the page after the specified number of seconds:"
msgstr ""

#: docs/8.x/configuration.md:block 59 (code)
msgid "php artisan down --refresh=15\n"
msgstr ""

#: docs/8.x/configuration.md:block 60 (paragraph)
msgid "You may also provide a `retry` option to the `down` command, which will be set as the `Retry-After` HTTP header's value, although browsers generally ignore this header:"
msgstr ""

#: docs/8.x/configuration.md:block 61 (code)
msgid "php artisan down --retry=60\n"
msgstr ""

#: docs/8.x/configuration.md:block 63 (header)
msgid "Bypassing Maintenance Mode"
msgstr ""

#: docs/8.x/configuration.md:block 64 (paragraph)
msgid "Even while in maintenance mode, you may use the `secret` option to specify a maintenance mode bypass token:"
msgstr ""

#: docs/8.x/configuration.md:block 65 (code)
msgid "php artisan down --secret=\"1630542a-246b-4b66-afa1-dd72a4c43515\"\n"
msgstr ""

#: docs/8.x/configuration.md:block 66 (paragraph)
msgid "After placing the application in maintenance mode, you may navigate to the application URL matching this token and Laravel will issue a maintenance mode bypass cookie to your browser:"
msgstr ""

#: docs/8.x/configuration.md:block 67 (code)
msgid "https://example.com/1630542a-246b-4b66-afa1-dd72a4c43515\n"
msgstr ""

#: docs/8.x/configuration.md:block 68 (paragraph)
msgid "When accessing this hidden route, you will then be redirected to the `/` route of the application. Once the cookie has been issued to your browser, you will be able to browse the application normally as if it was not in maintenance mode."
msgstr ""

#: docs/8.x/configuration.md:block 69 (quote)
msgid "{tip} Your maintenance mode secret should typically consist of alpha-numeric characters and, optionally, dashes. You should avoid using characters that have special meaning in URLs such as `?`."
msgstr ""

#: docs/8.x/configuration.md:block 71 (header)
msgid "Pre-Rendering The Maintenance Mode View"
msgstr ""

#: docs/8.x/configuration.md:block 72 (paragraph)
msgid "If you utilize the `php artisan down` command during deployment, your users may still occasionally encounter errors if they access the application while your Composer dependencies or other infrastructure components are updating. This occurs because a significant part of the Laravel framework must boot in order to determine your application is in maintenance mode and render the maintenance mode view using the templating engine."
msgstr ""

#: docs/8.x/configuration.md:block 73 (paragraph)
msgid "For this reason, Laravel allows you to pre-render a maintenance mode view that will be returned at the very beginning of the request cycle. This view is rendered before any of your application's dependencies have loaded. You may pre-render a template of your choice using the `down` command's `render` option:"
msgstr ""

#: docs/8.x/configuration.md:block 74 (code)
msgid "php artisan down --render=\"errors::503\"\n"
msgstr ""

#: docs/8.x/configuration.md:block 76 (header)
msgid "Redirecting Maintenance Mode Requests"
msgstr ""

#: docs/8.x/configuration.md:block 77 (paragraph)
msgid "While in maintenance mode, Laravel will display the maintenance mode view for all application URLs the user attempts to access. If you wish, you may instruct Laravel to redirect all requests to a specific URL. This may be accomplished using the `redirect` option. For example, you may wish to redirect all requests to the `/` URI:"
msgstr ""

#: docs/8.x/configuration.md:block 78 (code)
msgid "php artisan down --redirect=/\n"
msgstr ""

#: docs/8.x/configuration.md:block 80 (header)
msgid "Disabling Maintenance Mode"
msgstr ""

#: docs/8.x/configuration.md:block 81 (paragraph)
msgid "To disable maintenance mode, use the `up` command:"
msgstr ""

#: docs/8.x/configuration.md:block 82 (code)
msgid "php artisan up\n"
msgstr ""

#: docs/8.x/configuration.md:block 83 (quote)
msgid "{tip} You may customize the default maintenance mode template by defining your own template at `resources/views/errors/503.blade.php`."
msgstr ""

#: docs/8.x/configuration.md:block 85 (header)
msgid "Maintenance Mode & Queues"
msgstr ""

#: docs/8.x/configuration.md:block 86 (paragraph)
msgid "While your application is in maintenance mode, no [queued jobs](/docs/{{version}}/queues) will be handled. The jobs will continue to be handled as normal once the application is out of maintenance mode."
msgstr ""

#: docs/8.x/configuration.md:block 88 (header)
msgid "Alternatives To Maintenance Mode"
msgstr ""

#: docs/8.x/configuration.md:block 89 (paragraph)
msgid "Since maintenance mode requires your application to have several seconds of downtime, consider alternatives like [Laravel Vapor](https://vapor.laravel.com) and [Envoyer](https://envoyer.io) to accomplish zero-downtime deployment with Laravel."
msgstr ""

#: docs/9.x/configuration.md:block 8 (header)
msgid "Application Overview"
msgstr ""

#: docs/9.x/configuration.md:block 9 (paragraph)
msgid "In a hurry? You can get a quick overview of your application's configuration, drivers, and environment via the `about` Artisan command:"
msgstr ""

#: docs/9.x/configuration.md:block 10 (code)
msgid "php artisan about\n"
msgstr ""

#: docs/9.x/configuration.md:block 11 (paragraph)
msgid "If you're only interested in a particular section of the application overview output, you may filter for that section using the `--only` option:"
msgstr ""

#: docs/9.x/configuration.md:block 12 (code)
msgid "php artisan about --only=environment\n"
msgstr ""

#: docs/9.x/configuration.md:block 19 (quote)
msgid "**Note** Any variable in your `.env` file can be overridden by external environment variables such as server-level or system-level environment variables."
msgstr ""

#: docs/9.x/configuration.md:block 43 (quote)
msgid "**Note** The current application environment detection can be overridden by defining a server-level `APP_ENV` environment variable."
msgstr ""

#: docs/9.x/configuration.md:block 54 (quote)
msgid "**Warning** If you execute the `config:cache` command during your deployment process, you should be sure that you are only calling the `env` function from within your configuration files. Once the configuration has been cached, the `.env` file will not be loaded; therefore, the `env` function will only return external, system level environment variables."
msgstr ""

#: docs/9.x/configuration.md:block 75 (quote)
msgid "**Note** Your maintenance mode secret should typically consist of alpha-numeric characters and, optionally, dashes. You should avoid using characters that have special meaning in URLs such as `?`."
msgstr ""

#: docs/9.x/configuration.md:block 89 (quote)
msgid "**Note** You may customize the default maintenance mode template by defining your own template at `resources/views/errors/503.blade.php`."
msgstr ""
