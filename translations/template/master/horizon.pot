# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Taylor Otwell
# This file is distributed under the same license as the Laravel Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2021-04-05 10:11+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title #
#: docs/master/horizon.md:1
#, no-wrap
msgid "Laravel Horizon"
msgstr ""

#. type: Bullet: '- '
#: docs/master/horizon.md:16
msgid "[Introduction](#introduction)"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:16
#, no-wrap
msgid ""
"- [Installation](#installation)\n"
"    - [Configuration](#configuration)\n"
"    - [Balancing Strategies](#balancing-strategies)\n"
"    - [Dashboard Authorization](#dashboard-authorization)\n"
"- [Upgrading Horizon](#upgrading-horizon)\n"
"- [Running Horizon](#running-horizon)\n"
"    - [Deploying Horizon](#deploying-horizon)\n"
"- [Tags](#tags)\n"
"- [Notifications](#notifications)\n"
"- [Metrics](#metrics)\n"
"- [Deleting Failed Jobs](#deleting-failed-jobs)\n"
"- [Clearing Jobs From Queues](#clearing-jobs-from-queues)\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:18
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/horizon.md:18
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:21
#, no-wrap
msgid ""
"> {tip} Before digging into Laravel Horizon, you should familiarize yourself "
"with Laravel's base [queue services](/docs/{{version}}/queues). Horizon "
"augments Laravel's queue with additional features that may be confusing if "
"you are not already familiar with the basic queue features offered by "
"Laravel.\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:23
msgid ""
"Laravel Horizon provides a beautiful dashboard and code-driven configuration "
"for your Laravel powered [Redis queues](/docs/{{version}}/queues). Horizon "
"allows you to easily monitor key metrics of your queue system such as job "
"throughput, runtime, and job failures."
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:25
msgid ""
"When using Horizon, all of your queue worker configuration is stored in a "
"single, simple configuration file. By defining your application's worker "
"configuration in a version controlled file, you may easily scale or modify "
"your application's queue workers when deploying your application."
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:27
#, no-wrap
msgid "<img src=\"https://laravel.com/img/docs/horizon-example.png\">\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:29
#, no-wrap
msgid "<a name=\"installation\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/horizon.md:29
#, no-wrap
msgid "Installation"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:32
#, no-wrap
msgid ""
"> {note} Laravel Horizon requires that you use [Redis](https://redis.io) to "
"power your queue. Therefore, you should ensure that your queue connection is "
"set to `redis` in your application's `config/queue.php` configuration "
"file.\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:34
msgid ""
"You may install Horizon into your project using the Composer package "
"manager:"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:36
#, no-wrap
msgid "    composer require laravel/horizon\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:38
msgid ""
"After installing Horizon, publish its assets using the `horizon:install` "
"Artisan command:"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:40
#, no-wrap
msgid "    php artisan horizon:install\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:42
#, no-wrap
msgid "<a name=\"configuration\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/horizon.md:42
#, no-wrap
msgid "Configuration"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:45
msgid ""
"After publishing Horizon's assets, its primary configuration file will be "
"located at `config/horizon.php`. This configuration file allows you to "
"configure the queue worker options for your application. Each configuration "
"option includes a description of its purpose, so be sure to thoroughly "
"explore this file."
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:47
#, no-wrap
msgid "<a name=\"environments\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/horizon.md:47
#, no-wrap
msgid "Environments"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:50
msgid ""
"After installation, the primary Horizon configuration option that you should "
"familiarize yourself with is the `environments` configuration option. This "
"configuration option is an array of environments that your application runs "
"on and defines the worker process options for each environment. By default, "
"this entry contains a `production` and `local` environment. However, you are "
"free to add more environments as needed:"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:59
#, no-wrap
msgid ""
"    'environments' => [\n"
"        'production' => [\n"
"            'supervisor-1' => [\n"
"                'maxProcesses' => 10,\n"
"                'balanceMaxShift' => 1,\n"
"                'balanceCooldown' => 3,\n"
"            ],\n"
"        ],\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:66
#, no-wrap
msgid ""
"        'local' => [\n"
"            'supervisor-1' => [\n"
"                'maxProcesses' => 3,\n"
"            ],\n"
"        ],\n"
"    ],\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:68
msgid ""
"When you start Horizon, it will use the worker process configuration options "
"for the environment that your application is running on. Typically, the "
"environment is determined by the value of the `APP_ENV` [environment "
"variable](/docs/{{version}}/configuration#determining-the-current-environment). "
"For example, the default `local` Horizon environment is configured to start "
"three worker processes and automatically balance the number of worker "
"processes assigned to each queue. The default `production` environment is "
"configured to start a maximum of 10 worker processes and automatically "
"balance the number of worker processes assigned to each queue."
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:70
#, no-wrap
msgid ""
"> {note} You should ensure that the `environments` portion of your `horizon` "
"configuration file contains an entry for each "
"[environment](/docs/{{version}}/configuration#environment-configuration) on "
"which you plan to run Horizon.\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:72
#, no-wrap
msgid "<a name=\"supervisors\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/horizon.md:72
#, no-wrap
msgid "Supervisors"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:75
msgid ""
"As you can see in Horizon's default configuration file. Each environment can "
"contain one or more \"supervisors\". By default, the configuration file "
"defines this supervisor as `supervisor-1`; however, you are free to name "
"your supervisors whatever you want. Each supervisor is essentially "
"responsible for \"supervising\" a group of worker processes and takes care "
"of balancing worker processes across queues."
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:77
msgid ""
"You may add additional supervisors to a given environment if you would like "
"to define a new group of worker processes that should run in that "
"environment. You may choose to do this if you would like to define a "
"different balancing strategy or worker process count for a given queue used "
"by your application."
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:79
#, no-wrap
msgid "<a name=\"default-values\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/horizon.md:79
#, no-wrap
msgid "Default Values"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:82
msgid ""
"Within Horizon's default configuration file, you will notice a `defaults` "
"configuration option. This configuration option specifies the default values "
"for your application's [supervisors](#supervisors). The supervisor's default "
"configuration values will be merged into the supervisor's configuration for "
"each environment, allowing you to avoid unnecessary repetition when defining "
"your supervisors."
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:84
#, no-wrap
msgid "<a name=\"balancing-strategies\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/horizon.md:84
#, no-wrap
msgid "Balancing Strategies"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:87
msgid ""
"Unlike Laravel's default queue system, Horizon allows you to choose from "
"three worker balancing strategies: `simple`, `auto`, and `false`. The "
"`simple` strategy, which is the configuration file's default, splits "
"incoming jobs evenly between worker processes:"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:89
#, no-wrap
msgid "    'balance' => 'simple',\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:91
msgid ""
"The `auto` strategy adjusts the number of worker processes per queue based "
"on the current workload of the queue. For example, if your `notifications` "
"queue has 1,000 pending jobs while your `render` queue is empty, Horizon "
"will allocate more workers to your `notifications` queue until the queue is "
"empty."
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:93
msgid ""
"When using the `auto` strategy, you may define the `minProcesses` and "
"`maxProcesses` configuration options to control the minimum and the maximum "
"number of worker processes Horizon should scale up and down to:"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:108
#, no-wrap
msgid ""
"    'environments' => [\n"
"        'production' => [\n"
"            'supervisor-1' => [\n"
"                'connection' => 'redis',\n"
"                'queue' => ['default'],\n"
"                'balance' => 'auto',\n"
"                'minProcesses' => 1,\n"
"                'maxProcesses' => 10,\n"
"                'balanceMaxShift' => 1,\n"
"                'balanceCooldown' => 3,\n"
"                'tries' => 3,\n"
"            ],\n"
"        ],\n"
"    ],\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:110
msgid ""
"The `balanceMaxShift` and `balanceCooldown` configuration values to "
"determine how quickly Horizon will scale to meet worker demand. In the "
"example above, a maximum of one new process will be created or destroyed "
"every three seconds. You are free to tweak these values as necessary based "
"on your application's needs."
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:112
msgid ""
"When the `balance` option is set to `false`, the default Laravel behavior "
"will be used, which processes queues in the order they are listed in your "
"configuration."
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:114
#, no-wrap
msgid "<a name=\"dashboard-authorization\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/horizon.md:114
#, no-wrap
msgid "Dashboard Authorization"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:117
msgid ""
"Horizon exposes a dashboard at the `/horizon` URI. By default, you will only "
"be able to access this dashboard in the `local` environment. However, within "
"your `app/Providers/HorizonServiceProvider.php` file, there is an "
"[authorization gate](/docs/{{version}}/authorization#gates) definition. This "
"authorization gate controls access to Horizon in **non-local** "
"environments. You are free to modify this gate as needed to restrict access "
"to your Horizon installation:"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:133
#, no-wrap
msgid ""
"    /**\n"
"     * Register the Horizon gate.\n"
"     *\n"
"     * This gate determines who can access Horizon in non-local "
"environments.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    protected function gate()\n"
"    {\n"
"        Gate::define('viewHorizon', function ($user) {\n"
"            return in_array($user->email, [\n"
"                'taylor@laravel.com',\n"
"            ]);\n"
"        });\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:135
#, no-wrap
msgid "<a name=\"alternative-authentication-strategies\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/horizon.md:135
#, no-wrap
msgid "Alternative Authentication Strategies"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:138
msgid ""
"Remember that Laravel automatically injects the authenticated user into the "
"gate closure. If your application is providing Horizon security via another "
"method, such as IP restrictions, then your Horizon users may not need to "
"\"login\". Therefore, you will need to change `function ($user)` closure "
"signature above to `function ($user = null)` in order to force Laravel to "
"not require authentication."
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:140
#, no-wrap
msgid "<a name=\"upgrading-horizon\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/horizon.md:140
#, no-wrap
msgid "Upgrading Horizon"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:143
msgid ""
"When upgrading to a new major version of Horizon, it's important that you "
"carefully review [the upgrade "
"guide](https://github.com/laravel/horizon/blob/master/UPGRADE.md). In "
"addition, when upgrading to any new Horizon version, you should re-publish "
"Horizon's assets:"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:145
#, no-wrap
msgid "    php artisan horizon:publish\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:147
msgid ""
"To keep the assets up-to-date and avoid issues in future updates, you may "
"add the `horizon:publish` command to the `post-update-cmd` scripts in your "
"application's `composer.json` file:"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:155
#, no-wrap
msgid ""
"    {\n"
"        \"scripts\": {\n"
"            \"post-update-cmd\": [\n"
"                \"@php artisan horizon:publish --ansi\"\n"
"            ]\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:157
#, no-wrap
msgid "<a name=\"running-horizon\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/horizon.md:157
#, no-wrap
msgid "Running Horizon"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:160
msgid ""
"Once you have configured your supervisors and workers in your application's "
"`config/horizon.php` configuration file, you may start Horizon using the "
"`horizon` Artisan command. This single command will start all of the "
"configured worker processes for the current environment:"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:162
#, no-wrap
msgid "    php artisan horizon\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:164
msgid ""
"You may pause the Horizon process and instruct it to continue processing "
"jobs using the `horizon:pause` and `horizon:continue` Artisan commands:"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:166
#, no-wrap
msgid "    php artisan horizon:pause\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:168
#, no-wrap
msgid "    php artisan horizon:continue\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:170
msgid ""
"You may also pause and continue specific Horizon [supervisors](#supervisors) "
"using the `horizon:pause-supervisor` and `horizon:continue-supervisor` "
"Artisan commands:"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:172
#, no-wrap
msgid "    php artisan horizon:pause-supervisor supervisor-1\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:174
#, no-wrap
msgid "    php artisan horizon:continue-supervisor supervisor-1\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:176
msgid ""
"You may check the current status of the Horizon process using the "
"`horizon:status` Artisan command:"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:178
#, no-wrap
msgid "    php artisan horizon:status\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:180
msgid ""
"You may gracefully terminate the Horizon process using the "
"`horizon:terminate` Artisan command. Any jobs that are currently being "
"processed by will be completed and then Horizon will stop executing:"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:182 docs/master/horizon.md:191
#, no-wrap
msgid "    php artisan horizon:terminate\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:184
#, no-wrap
msgid "<a name=\"deploying-horizon\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/master/horizon.md:184
#, no-wrap
msgid "Deploying Horizon"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:187
msgid ""
"When you're ready to deploy Horizon to your application's actual server, you "
"should configure a process monitor to monitor the `php artisan horizon` "
"command and restart it if it exits unexpectedly. Don't worry, we'll discuss "
"how to install a process monitor below."
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:189
msgid ""
"During your application's deployment process, you should instruct the "
"Horizon process to terminate so that it will be restarted by your process "
"monitor and receive your code changes:"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:193
#, no-wrap
msgid "<a name=\"installing-supervisor\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/horizon.md:193
#, no-wrap
msgid "Installing Supervisor"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:196
msgid ""
"Supervisor is a process monitor for the Linux operating system and will "
"automatically restart your `horizon` process if it stops executing. To "
"install Supervisor on Ubuntu, you may use the following command. If you are "
"not using Ubuntu, you can likely install Supervisor using your operating "
"system's package manager:"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:198
#, no-wrap
msgid "    sudo apt-get install supervisor\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:200
#, no-wrap
msgid ""
"> {tip} If configuring Supervisor yourself sounds overwhelming, consider "
"using [Laravel Forge](https://forge.laravel.com), which will automatically "
"install and configure Supervisor for your Laravel projects.\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:202
#, no-wrap
msgid "<a name=\"supervisor-configuration\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/horizon.md:202
#, no-wrap
msgid "Supervisor Configuration"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:205
msgid ""
"Supervisor configuration files are typically stored within your server's "
"`/etc/supervisor/conf.d` directory. Within this directory, you may create "
"any number of configuration files that instruct supervisor how your "
"processes should be monitored. For example, let's create a `horizon.conf` "
"file that starts and monitors a `horizon` process:"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:215
#, no-wrap
msgid ""
"    [program:horizon]\n"
"    process_name=%(program_name)s\n"
"    command=php /home/forge/example.com/artisan horizon\n"
"    autostart=true\n"
"    autorestart=true\n"
"    user=forge\n"
"    redirect_stderr=true\n"
"    stdout_logfile=/home/forge/example.com/horizon.log\n"
"    stopwaitsecs=3600\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:217
#, no-wrap
msgid ""
"> {note} You should ensure that the value of `stopwaitsecs` is greater than "
"the number of seconds consumed by your longest running job. Otherwise, "
"Supervisor may kill the job before it is finished processing.\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:219
#, no-wrap
msgid "<a name=\"starting-supervisor\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/horizon.md:219
#, no-wrap
msgid "Starting Supervisor"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:222
msgid ""
"Once the configuration file has been created, you may update the Supervisor "
"configuration and start the monitored processes using the following "
"commands:"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:224
#, no-wrap
msgid "    sudo supervisorctl reread\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:226
#, no-wrap
msgid "    sudo supervisorctl update\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:228
#, no-wrap
msgid "    sudo supervisorctl start horizon\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:230
#, no-wrap
msgid ""
"> {tip} For more information on running Supervisor, consult the [Supervisor "
"documentation](http://supervisord.org/index.html).\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:232
#, no-wrap
msgid "<a name=\"tags\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/horizon.md:232
#, no-wrap
msgid "Tags"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:235
msgid ""
"Horizon allows you to assign “tags” to jobs, including mailables, broadcast "
"events, notifications, and queued event listeners. In fact, Horizon will "
"intelligently and automatically tag most jobs depending on the Eloquent "
"models that are attached to the job. For example, take a look at the "
"following job:"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:237
#, no-wrap
msgid "    <?php\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:239
#, no-wrap
msgid "    namespace App\\Jobs;\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:246
#, no-wrap
msgid ""
"    use App\\Models\\Video;\n"
"    use Illuminate\\Bus\\Queueable;\n"
"    use Illuminate\\Contracts\\Queue\\ShouldQueue;\n"
"    use Illuminate\\Foundation\\Bus\\Dispatchable;\n"
"    use Illuminate\\Queue\\InteractsWithQueue;\n"
"    use Illuminate\\Queue\\SerializesModels;\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:250
#, no-wrap
msgid ""
"    class RenderVideo implements ShouldQueue\n"
"    {\n"
"        use Dispatchable, InteractsWithQueue, Queueable, SerializesModels;\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:257
#, no-wrap
msgid ""
"        /**\n"
"         * The video instance.\n"
"         *\n"
"         * @var \\App\\Models\\Video\n"
"         */\n"
"        public $video;\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:268
#, no-wrap
msgid ""
"        /**\n"
"         * Create a new job instance.\n"
"         *\n"
"         * @param  \\App\\Models\\Video  $video\n"
"         * @return void\n"
"         */\n"
"        public function __construct(Video $video)\n"
"        {\n"
"            $this->video = $video;\n"
"        }\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:279
#, no-wrap
msgid ""
"        /**\n"
"         * Execute the job.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function handle()\n"
"        {\n"
"            //\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:281
msgid ""
"If this job is queued with an `App\\Models\\Video` instance that has an `id` "
"attribute of `1`, it will automatically receive the tag "
"`App\\Models\\Video:1`. This is because Horizon will search the job's "
"properties for any Eloquent models. If Eloquent models are found, Horizon "
"will intelligently tag the job using the model's class name and primary key:"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:284
#, no-wrap
msgid ""
"    use App\\Jobs\\RenderVideo;\n"
"    use App\\Models\\Video;\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:286
#, no-wrap
msgid "    $video = Video::find(1);\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:288
#, no-wrap
msgid "    RenderVideo::dispatch($video);\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:290
#, no-wrap
msgid "<a name=\"manually-tagging-jobs\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/horizon.md:290
#, no-wrap
msgid "Manually Tagging Jobs"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:293
msgid ""
"If you would like to manually define the tags for one of your queueable "
"objects, you may define a `tags` method on the class:"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:306
#, no-wrap
msgid ""
"    class RenderVideo implements ShouldQueue\n"
"    {\n"
"        /**\n"
"         * Get the tags that should be assigned to the job.\n"
"         *\n"
"         * @return array\n"
"         */\n"
"        public function tags()\n"
"        {\n"
"            return ['render', 'video:'.$this->video->id];\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:308
#, no-wrap
msgid "<a name=\"notifications\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/horizon.md:308
#, no-wrap
msgid "Notifications"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:311
#, no-wrap
msgid ""
"> {note} When configuring Horizon to send Slack or SMS notifications, you "
"should review the [prerequisites for the relevant notification "
"channel](/docs/{{version}}/notifications).\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:313
msgid ""
"If you would like to be notified when one of your queues has a long wait "
"time, you may use the `Horizon::routeMailNotificationsTo`, "
"`Horizon::routeSlackNotificationsTo`, and `Horizon::routeSmsNotificationsTo` "
"methods. You may call these methods from the `boot` method of your "
"application's `App\\Providers\\HorizonServiceProvider`:"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:322
#, no-wrap
msgid ""
"    /**\n"
"     * Bootstrap any application services.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function boot()\n"
"    {\n"
"        parent::boot();\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:327
#, no-wrap
msgid ""
"        Horizon::routeSmsNotificationsTo('15556667777');\n"
"        Horizon::routeMailNotificationsTo('example@example.com');\n"
"        Horizon::routeSlackNotificationsTo('slack-webhook-url', "
"'#channel');\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:329
#, no-wrap
msgid "<a name=\"configuring-notification-wait-time-thresholds\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/master/horizon.md:329
#, no-wrap
msgid "Configuring Notification Wait Time Thresholds"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:332
msgid ""
"You may configure how many seconds are considered a \"long wait\" within "
"your application's `config/horizon.php` configuration file. The `waits` "
"configuration option within this file allows you to control the long wait "
"threshold for each connection / queue combination:"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:337
#, no-wrap
msgid ""
"    'waits' => [\n"
"        'redis:default' => 60,\n"
"        'redis:critical,high' => 90,\n"
"    ],\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:339
#, no-wrap
msgid "<a name=\"metrics\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/horizon.md:339
#, no-wrap
msgid "Metrics"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:342
msgid ""
"Horizon includes a metrics dashboard which provides information regarding "
"your job and queue wait times and throughput. In order to populate this "
"dashboard, you should configure Horizon's `snapshot` Artisan command to run "
"every five minutes via your application's "
"[scheduler](/docs/{{version}}/scheduling):"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:353
#, no-wrap
msgid ""
"    /**\n"
"     * Define the application's command schedule.\n"
"     *\n"
"     * @param  \\Illuminate\\Console\\Scheduling\\Schedule  $schedule\n"
"     * @return void\n"
"     */\n"
"    protected function schedule(Schedule $schedule)\n"
"    {\n"
"        $schedule->command('horizon:snapshot')->everyFiveMinutes();\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:355
#, no-wrap
msgid "<a name=\"deleting-failed-jobs\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/horizon.md:355
#, no-wrap
msgid "Deleting Failed Jobs"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:358
msgid ""
"If you would like to delete a failed job, you may use the `horizon:forget` "
"command. The `horizon:forget` command accepts the ID of the failed job as "
"its only argument:"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:360
#, no-wrap
msgid "    php artisan horizon:forget 5\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:362
#, no-wrap
msgid "<a name=\"clearing-jobs-from-queues\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/master/horizon.md:362
#, no-wrap
msgid "Clearing Jobs From Queues"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:365
msgid ""
"If you would like to delete all jobs from your application's default queue, "
"you may do so using the `horizon:clear` Artisan command:"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:367
#, no-wrap
msgid "    php artisan horizon:clear\n"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:369
msgid "You may provide the `queue` option to delete jobs from a specific queue:"
msgstr ""

#. type: Plain text
#: docs/master/horizon.md:370
#, no-wrap
msgid "    php artisan horizon:clear --queue=emails\n"
msgstr ""
