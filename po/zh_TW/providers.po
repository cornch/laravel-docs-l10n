msgid ""
msgstr ""
"Project-Id-Version: laravel-docs\n"
"POT-Creation-Date: 2022-01-29 05:35+0000\n"
"PO-Revision-Date: 2022-02-01 05:12\n"
"Last-Translator: \n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/templates/providers.pot\n"
"X-Crowdin-File-ID: 121\n"

# File: docs/8.x/providers.md, line: 1
# File: docs/master/providers.md, line: 1
#. type: Title #
#, no-wrap
msgid "Service Providers"
msgstr "Service Provider"

# File: docs/8.x/providers.md, line: 9
# File: docs/master/providers.md, line: 9
#. type: Bullet: '- '
msgid "[Introduction](#introduction)"
msgstr "[簡介](#introduction)"

# File: docs/8.x/providers.md, line: 9
# File: docs/master/providers.md, line: 9
#. type: Plain text
#, no-wrap
msgid "- [Writing Service Providers](#writing-service-providers)\n"
"    - [The Register Method](#the-register-method)\n"
"    - [The Boot Method](#the-boot-method)\n"
"- [Registering Providers](#registering-providers)\n"
"- [Deferred Providers](#deferred-providers)\n"
msgstr "- [撰寫 Service Provider](#writing-service-providers)\n"
"    - [Register 方法](#the-register-method)\n"
"    - [Boot 方法](#the-boot-method)\n"
"- [註冊 Provider](#registering-providers)\n"
"- [延遲的 Provider](#deferred-providers)\n"

# File: docs/8.x/providers.md, line: 11
# File: docs/master/providers.md, line: 11
#. type: Plain text
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr "<a name=\"introduction\"></a>\n"

# File: docs/8.x/providers.md, line: 11
# File: docs/master/providers.md, line: 11
#. type: Title ##
#, no-wrap
msgid "Introduction"
msgstr "簡介"

# File: docs/8.x/providers.md, line: 14
# File: docs/master/providers.md, line: 14
#. type: Plain text
msgid "Service providers are the central place of all Laravel application bootstrapping. Your own application, as well as all of Laravel's core services, are bootstrapped via service providers."
msgstr "Service Provider 是 Laravel 中負責啟動應用程式的中心點。不過是你自己開發的應用程式，還是 Laravel 的核心服務，都是使用 Service Provider 啟動的。"

# File: docs/8.x/providers.md, line: 16
# File: docs/master/providers.md, line: 16
#. type: Plain text
msgid "But, what do we mean by \"bootstrapped\"? In general, we mean **registering** things, including registering service container bindings, event listeners, middleware, and even routes. Service providers are the central place to configure your application."
msgstr "不過，「啟動」是什麼意思呢？一般來說，我們指的是 **註冊** 一些東西，包含註冊 Service Container 的繫結、事件監聽常式、Middleware、甚至是 Route。Service Provider 是用來設定應用程式的中心點。"

# File: docs/8.x/providers.md, line: 18
# File: docs/master/providers.md, line: 18
#. type: Plain text
msgid "If you open the `config/app.php` file included with Laravel, you will see a `providers` array. These are all of the service provider classes that will be loaded for your application. By default, a set of Laravel core service providers are listed in this array. These providers bootstrap the core Laravel components, such as the mailer, queue, cache, and others. Many of these providers are \"deferred\" providers, meaning they will not be loaded on every request, but only when the services they provide are actually needed."
msgstr "若打開 Laravel 中的 `config/app.php`，可以看到一個 `providers` 陣列。這個陣列中的就是你的程式會載入的所有 Service Provider。預設情況下，這個陣列中列出了一組 Laravel 的核心 Service Provider。這些 Provider 會啟動 Laravel 的核心元件，如：Mailer、佇列 (Queue)⋯⋯等。其中的許多 Provider 是屬於「延遲的」Provider，延遲的 Provider 是指：不是所有 Request 中都會載入這些 Provider，只有在我們有需要這些 Provider 提供的服務時才會載入。"

# File: docs/8.x/providers.md, line: 20
# File: docs/master/providers.md, line: 20
#. type: Plain text
msgid "In this overview, you will learn how to write your own service providers and register them with your Laravel application."
msgstr "在本篇概覽中，讀者將可以學習到如何撰寫你自己的 Service Provider，並將這些 Provider 註冊到 Laravel 專案上。"

# File: docs/8.x/providers.md, line: 22
# File: docs/master/providers.md, line: 22
#. type: Plain text
#, no-wrap
msgid "> {tip} If you would like to learn more about how Laravel handles requests and works internally, check out our documentation on the Laravel [request lifecycle](/docs/{{version}}/lifecycle).\n"
msgstr "> {tip} 若想瞭解 Laravel 如何處理 Request 以及其內部如何運作，請參考我們有關 Laravel [Request 的生命週期](/docs/{{version}}/lifecycle)說明文件。\n"

# File: docs/8.x/providers.md, line: 24
# File: docs/master/providers.md, line: 24
#. type: Plain text
#, no-wrap
msgid "<a name=\"writing-service-providers\"></a>\n"
msgstr "<a name=\"writing-service-providers\"></a>\n"

# File: docs/8.x/providers.md, line: 24
# File: docs/master/providers.md, line: 24
#. type: Title ##
#, no-wrap
msgid "Writing Service Providers"
msgstr "撰寫 Service Provider"

# File: docs/8.x/providers.md, line: 27
# File: docs/master/providers.md, line: 27
#. type: Plain text
msgid "All service providers extend the `Illuminate\\Support\\ServiceProvider` class. Most service providers contain a `register` and a `boot` method. Within the `register` method, you should **only bind things into the [service container](/docs/{{version}}/container)**. You should never attempt to register any event listeners, routes, or any other piece of functionality within the `register` method."
msgstr "所有的 Service Provider 都繼承自 `Illuminate\\Support\\ServiceProvider`。大多數的 Service Provider 都包含了 `registe` 與 `boot` 方法。`register` 方法 **只負責將事物繫結到 [Service Container](/docs/{{version}}/container)** 上。請絕對不要在 `register` 方法中註冊任何事件監聽常式、Route、或是任何其他的功能。"

# File: docs/8.x/providers.md, line: 29
# File: docs/master/providers.md, line: 29
#. type: Plain text
msgid "The Artisan CLI can generate a new provider via the `make:provider` command:"
msgstr "Artisan CLI 提供了一個 `make:provider` 指令來新增新 Provider："

# File: docs/8.x/providers.md, line: 31
# File: docs/master/providers.md, line: 31
#. type: Plain text
#, no-wrap
msgid "    php artisan make:provider RiakServiceProvider\n"
msgstr "    php artisan make:provider RiakServiceProvider\n"

# File: docs/8.x/providers.md, line: 33
# File: docs/master/providers.md, line: 33
#. type: Plain text
#, no-wrap
msgid "<a name=\"the-register-method\"></a>\n"
msgstr "<a name=\"the-register-method\"></a>\n"

# File: docs/8.x/providers.md, line: 33
# File: docs/master/providers.md, line: 33
#. type: Title ###
#, no-wrap
msgid "The Register Method"
msgstr "Register 方法"

# File: docs/8.x/providers.md, line: 36
# File: docs/master/providers.md, line: 36
#. type: Plain text
msgid "As mentioned previously, within the `register` method, you should only bind things into the [service container](/docs/{{version}}/container). You should never attempt to register any event listeners, routes, or any other piece of functionality within the `register` method. Otherwise, you may accidentally use a service that is provided by a service provider which has not loaded yet."
msgstr "剛才也提到過，在 `register` 方法中應只能將東西註冊到 [Service Provider] 內。絕對不要嘗試在 `register` 方法內註冊事件監聽常式、Route、或其他任何功能。否則，我們可能會不小心使用到還沒載入的 Service Provider 提供的服務。"

# File: docs/8.x/providers.md, line: 38
# File: docs/master/providers.md, line: 38
#. type: Plain text
msgid "Let's take a look at a basic service provider. Within any of your service provider methods, you always have access to the `$app` property which provides access to the service container:"
msgstr ""

# File: docs/8.x/providers.md, line: 40
# File: docs/8.x/providers.md, line: 69
# File: docs/8.x/providers.md, line: 107
# File: docs/8.x/providers.md, line: 171
# File: docs/master/providers.md, line: 40
# File: docs/master/providers.md, line: 69
# File: docs/master/providers.md, line: 107
# File: docs/master/providers.md, line: 171
#. type: Plain text
#, no-wrap
msgid "    <?php\n"
msgstr ""

# File: docs/8.x/providers.md, line: 42
# File: docs/8.x/providers.md, line: 71
# File: docs/8.x/providers.md, line: 109
# File: docs/8.x/providers.md, line: 173
# File: docs/master/providers.md, line: 42
# File: docs/master/providers.md, line: 71
# File: docs/master/providers.md, line: 109
# File: docs/master/providers.md, line: 173
#. type: Plain text
#, no-wrap
msgid "    namespace App\\Providers;\n"
msgstr ""

# File: docs/8.x/providers.md, line: 45
# File: docs/master/providers.md, line: 45
#. type: Plain text
#, no-wrap
msgid "    use App\\Services\\Riak\\Connection;\n"
"    use Illuminate\\Support\\ServiceProvider;\n"
msgstr ""

# File: docs/8.x/providers.md, line: 60
# File: docs/master/providers.md, line: 60
#. type: Plain text
#, no-wrap
msgid "    class RiakServiceProvider extends ServiceProvider\n"
"    {\n"
"        /**\n"
"         * Register any application services.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function register()\n"
"        {\n"
"            $this->app->singleton(Connection::class, function ($app) {\n"
"                return new Connection(config('riak'));\n"
"            });\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/providers.md, line: 62
# File: docs/master/providers.md, line: 62
#. type: Plain text
msgid "This service provider only defines a `register` method, and uses that method to define an implementation of `App\\Services\\Riak\\Connection` in the service container. If you're not yet familiar with Laravel's service container, check out [its documentation](/docs/{{version}}/container)."
msgstr ""

# File: docs/8.x/providers.md, line: 64
# File: docs/master/providers.md, line: 64
#. type: Plain text
#, no-wrap
msgid "<a name=\"the-bindings-and-singletons-properties\"></a>\n"
msgstr ""

# File: docs/8.x/providers.md, line: 64
# File: docs/master/providers.md, line: 64
#. type: Title ####
#, no-wrap
msgid "The `bindings` And `singletons` Properties"
msgstr ""

# File: docs/8.x/providers.md, line: 67
# File: docs/master/providers.md, line: 67
#. type: Plain text
msgid "If your service provider registers many simple bindings, you may wish to use the `bindings` and `singletons` properties instead of manually registering each container binding. When the service provider is loaded by the framework, it will automatically check for these properties and register their bindings:"
msgstr ""

# File: docs/8.x/providers.md, line: 78
# File: docs/master/providers.md, line: 78
#. type: Plain text
#, no-wrap
msgid "    use App\\Contracts\\DowntimeNotifier;\n"
"    use App\\Contracts\\ServerProvider;\n"
"    use App\\Services\\DigitalOceanServerProvider;\n"
"    use App\\Services\\PingdomDowntimeNotifier;\n"
"    use App\\Services\\ServerToolsProvider;\n"
"    use Illuminate\\Support\\ServiceProvider;\n"
msgstr ""

# File: docs/8.x/providers.md, line: 89
# File: docs/master/providers.md, line: 89
#. type: Plain text
#, no-wrap
msgid "    class AppServiceProvider extends ServiceProvider\n"
"    {\n"
"        /**\n"
"         * All of the container bindings that should be registered.\n"
"         *\n"
"         * @var array\n"
"         */\n"
"        public $bindings = [\n"
"            ServerProvider::class => DigitalOceanServerProvider::class,\n"
"        ];\n"
msgstr ""

# File: docs/8.x/providers.md, line: 100
# File: docs/master/providers.md, line: 100
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * All of the container singletons that should be registered.\n"
"         *\n"
"         * @var array\n"
"         */\n"
"        public $singletons = [\n"
"            DowntimeNotifier::class => PingdomDowntimeNotifier::class,\n"
"            ServerProvider::class => ServerToolsProvider::class,\n"
"        ];\n"
"    }\n"
msgstr ""

# File: docs/8.x/providers.md, line: 102
# File: docs/master/providers.md, line: 102
#. type: Plain text
#, no-wrap
msgid "<a name=\"the-boot-method\"></a>\n"
msgstr ""

# File: docs/8.x/providers.md, line: 102
# File: docs/master/providers.md, line: 102
#. type: Title ###
#, no-wrap
msgid "The Boot Method"
msgstr ""

# File: docs/8.x/providers.md, line: 105
# File: docs/master/providers.md, line: 105
#. type: Plain text
msgid "So, what if we need to register a [view composer](/docs/{{version}}/views#view-composers) within our service provider? This should be done within the `boot` method. **This method is called after all other service providers have been registered**, meaning you have access to all other services that have been registered by the framework:"
msgstr ""

# File: docs/8.x/providers.md, line: 112
# File: docs/master/providers.md, line: 112
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Support\\Facades\\View;\n"
"    use Illuminate\\Support\\ServiceProvider;\n"
msgstr ""

# File: docs/8.x/providers.md, line: 127
# File: docs/master/providers.md, line: 127
#. type: Plain text
#, no-wrap
msgid "    class ComposerServiceProvider extends ServiceProvider\n"
"    {\n"
"        /**\n"
"         * Bootstrap any application services.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function boot()\n"
"        {\n"
"            View::composer('view', function () {\n"
"                //\n"
"            });\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/providers.md, line: 129
# File: docs/master/providers.md, line: 129
#. type: Plain text
#, no-wrap
msgid "<a name=\"boot-method-dependency-injection\"></a>\n"
msgstr ""

# File: docs/8.x/providers.md, line: 129
# File: docs/master/providers.md, line: 129
#. type: Title ####
#, no-wrap
msgid "Boot Method Dependency Injection"
msgstr ""

# File: docs/8.x/providers.md, line: 132
# File: docs/master/providers.md, line: 132
#. type: Plain text
msgid "You may type-hint dependencies for your service provider's `boot` method. The [service container](/docs/{{version}}/container) will automatically inject any dependencies you need:"
msgstr ""

# File: docs/8.x/providers.md, line: 134
# File: docs/master/providers.md, line: 134
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Contracts\\Routing\\ResponseFactory;\n"
msgstr ""

# File: docs/8.x/providers.md, line: 147
# File: docs/master/providers.md, line: 147
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Bootstrap any application services.\n"
"     *\n"
"     * @param  \\Illuminate\\Contracts\\Routing\\ResponseFactory  $response\n"
"     * @return void\n"
"     */\n"
"    public function boot(ResponseFactory $response)\n"
"    {\n"
"        $response->macro('serialized', function ($value) {\n"
"            //\n"
"        });\n"
"    }\n"
msgstr ""

# File: docs/8.x/providers.md, line: 149
# File: docs/master/providers.md, line: 149
#. type: Plain text
#, no-wrap
msgid "<a name=\"registering-providers\"></a>\n"
msgstr ""

# File: docs/8.x/providers.md, line: 149
# File: docs/master/providers.md, line: 149
#. type: Title ##
#, no-wrap
msgid "Registering Providers"
msgstr ""

# File: docs/8.x/providers.md, line: 152
# File: docs/master/providers.md, line: 152
#. type: Plain text
msgid "All service providers are registered in the `config/app.php` configuration file. This file contains a `providers` array where you can list the class names of your service providers. By default, a set of Laravel core service providers are listed in this array. These providers bootstrap the core Laravel components, such as the mailer, queue, cache, and others."
msgstr ""

# File: docs/8.x/providers.md, line: 154
# File: docs/master/providers.md, line: 154
#. type: Plain text
msgid "To register your provider, add it to the array:"
msgstr ""

# File: docs/8.x/providers.md, line: 157
# File: docs/master/providers.md, line: 157
#. type: Plain text
#, no-wrap
msgid "    'providers' => [\n"
"        // Other Service Providers\n"
msgstr ""

# File: docs/8.x/providers.md, line: 160
# File: docs/master/providers.md, line: 160
#. type: Plain text
#, no-wrap
msgid "        App\\Providers\\ComposerServiceProvider::class,\n"
"    ],\n"
msgstr ""

# File: docs/8.x/providers.md, line: 162
# File: docs/master/providers.md, line: 162
#. type: Plain text
#, no-wrap
msgid "<a name=\"deferred-providers\"></a>\n"
msgstr ""

# File: docs/8.x/providers.md, line: 162
# File: docs/master/providers.md, line: 162
#. type: Title ##
#, no-wrap
msgid "Deferred Providers"
msgstr ""

# File: docs/8.x/providers.md, line: 165
# File: docs/master/providers.md, line: 165
#. type: Plain text
msgid "If your provider is **only** registering bindings in the [service container](/docs/{{version}}/container), you may choose to defer its registration until one of the registered bindings is actually needed. Deferring the loading of such a provider will improve the performance of your application, since it is not loaded from the filesystem on every request."
msgstr ""

# File: docs/8.x/providers.md, line: 167
# File: docs/master/providers.md, line: 167
#. type: Plain text
msgid "Laravel compiles and stores a list of all of the services supplied by deferred service providers, along with the name of its service provider class. Then, only when you attempt to resolve one of these services does Laravel load the service provider."
msgstr ""

# File: docs/8.x/providers.md, line: 169
# File: docs/master/providers.md, line: 169
#. type: Plain text
msgid "To defer the loading of a provider, implement the `\\Illuminate\\Contracts\\Support\\DeferrableProvider` interface and define a `provides` method. The `provides` method should return the service container bindings registered by the provider:"
msgstr ""

# File: docs/8.x/providers.md, line: 177
# File: docs/master/providers.md, line: 177
#. type: Plain text
#, no-wrap
msgid "    use App\\Services\\Riak\\Connection;\n"
"    use Illuminate\\Contracts\\Support\\DeferrableProvider;\n"
"    use Illuminate\\Support\\ServiceProvider;\n"
msgstr ""

# File: docs/8.x/providers.md, line: 191
# File: docs/master/providers.md, line: 191
#. type: Plain text
#, no-wrap
msgid "    class RiakServiceProvider extends ServiceProvider implements DeferrableProvider\n"
"    {\n"
"        /**\n"
"         * Register any application services.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function register()\n"
"        {\n"
"            $this->app->singleton(Connection::class, function ($app) {\n"
"                return new Connection($app['config']['riak']);\n"
"            });\n"
"        }\n"
msgstr ""

# File: docs/8.x/providers.md, line: 201
# File: docs/master/providers.md, line: 201
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * Get the services provided by the provider.\n"
"         *\n"
"         * @return array\n"
"         */\n"
"        public function provides()\n"
"        {\n"
"            return [Connection::class];\n"
"        }\n"
"    }\n"
msgstr ""

