msgid ""
msgstr ""
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/templates/facades.pot\n"
"X-Crowdin-File-ID: 71\n"
"Project-Id-Version: laravel-docs\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"PO-Revision-Date: 2023-01-25 12:14\n"

#: docs/8.x/facades.md:block 1 (header)
msgid "Facades"
msgstr "Facade"

#: docs/8.x/facades.md:block 2 (unordered list)
msgid "[Introduction](#introduction)"
msgstr "[簡介](#introduction)"

#: docs/8.x/facades.md:block 2 (unordered list)
msgid "[When To Use Facades](#when-to-use-facades)"
msgstr "[什麼時候使用 Facade](#when-to-use-contracts)"

#: docs/8.x/facades.md:block 2 (unordered list)
msgid "[Facades Vs. Dependency Injection](#facades-vs-dependency-injection)"
msgstr "[Facades Vs. 相依性插入](#facades-vs-dependency-injection)"

#: docs/8.x/facades.md:block 2 (unordered list)
msgid "[Facades Vs. Helper Functions](#facades-vs-helper-functions)"
msgstr "[Facades Vs. 輔助函式](#facades-vs-helper-functions)"

#: docs/8.x/facades.md:block 2 (unordered list)
msgid "[How Facades Work](#how-facades-work)"
msgstr "[Facade 是怎麼運作的](#how-facades-work)"

#: docs/8.x/facades.md:block 2 (unordered list)
msgid "[Real-Time Facades](#real-time-facades)"
msgstr "[即時 Facade](#real-time-facades)"

#: docs/8.x/facades.md:block 2 (unordered list)
msgid "[Facade Class Reference](#facade-class-reference)"
msgstr "[Facade 類別參照](#facade-class-reference)"

#: docs/8.x/facades.md:block 4 (header)
msgid "Introduction"
msgstr "簡介"

#: docs/8.x/facades.md:block 5 (paragraph)
msgid "Throughout the Laravel documentation, you will see examples of code that interacts with Laravel's features via \"facades\". Facades provide a \"static\" interface to classes that are available in the application's [service container](/docs/{{version}}/container). Laravel ships with many facades which provide access to almost all of Laravel's features."
msgstr "在 Laravel 的說明文件中，我們可以看到範例程式碼都使用「Facade」來操作 Laravel 的功能。Facade 提供了一個「靜態 (Static)」介面來存取 [Service Container](/docs/{{version}}/container) 中提供的類別。Laravel 隨附了許多 Facade，幾乎可以存取所有的 Laravel 功能。"

#: docs/8.x/facades.md:block 6 (paragraph)
msgid "Laravel facades serve as \"static proxies\" to underlying classes in the service container, providing the benefit of a terse, expressive syntax while maintaining more testability and flexibility than traditional static methods. It's perfectly fine if you don't totally understand how facades work under the hood - just go with the flow and continue learning about Laravel."
msgstr "Laravel Facade 是一個用來存取 Service Container 中類別的一個「靜態代理 (Static Proxy)」，讓我們能使用簡潔、語意化的語法，卻由不像傳統靜態方法一樣要犧牲可測試性與靈活性。若你還不了解 Facade 如何運作，完全沒關係 —— 只要繼續使用並持續學習 Laravel 就好。"

#: docs/8.x/facades.md:block 7 (paragraph)
msgid "All of Laravel's facades are defined in the `Illuminate\\Support\\Facades` namespace. So, we can easily access a facade like so:"
msgstr "Laravel 中所有的 Facade 都定義在 `Illuminate\\Support\\Facades` Namespace 下。因此，我們可以像這樣輕鬆地存取 Facade："

#: docs/8.x/facades.md:block 8 (code)
msgid "use Illuminate\\Support\\Facades\\Cache;\n"
"use Illuminate\\Support\\Facades\\Route;\n\n"
"Route::get('/cache', function () {\n"
"    return Cache::get('key');\n"
"});\n"
msgstr "use Illuminate\\Support\\Facades\\Cache;\n"
"use Illuminate\\Support\\Facades\\Route;\n\n"
"Route::get('/cache', function () {\n"
"    return Cache::get('key');\n"
"});\n"

#: docs/8.x/facades.md:block 9 (paragraph)
msgid "Throughout the Laravel documentation, many of the examples will use facades to demonstrate various features of the framework."
msgstr "在 Laravel 說明文件中，有許多的範例都使用 Facade 來示範 Laravel 的許多功能："

#: docs/8.x/facades.md:block 11 (header)
msgid "Helper Functions"
msgstr "輔助函式"

#: docs/8.x/facades.md:block 12 (paragraph)
msgid "To complement facades, Laravel offers a variety of global \"helper functions\" that make it even easier to interact with common Laravel features. Some of the common helper functions you may interact with are `view`, `response`, `url`, `config`, and more. Each helper function offered by Laravel is documented with their corresponding feature; however, a complete list is available within the dedicated [helper documentation](/docs/{{version}}/helpers)."
msgstr "為了能與 Facade 互補，Laravel 還提供了一系列的全域「輔助函式」，能讓你更輕鬆的使用常見的 Laravel 功能。其中，你可能常使用到的輔助函式包含：`view`、`response`、`url`、`config`⋯⋯等。Laravel 中提供的每個輔助函式都有說明文件來說明其功能。關於輔助函式完整的列表列在專門的[輔助函式說明文件](/docs/{{version}}/helpers)。"

#: docs/8.x/facades.md:block 13 (paragraph)
msgid "For example, instead of using the `Illuminate\\Support\\Facades\\Response` facade to generate a JSON response, we may simply use the `response` function. Because helper functions are globally available, you do not need to import any classes in order to use them:"
msgstr "舉例來說，除了使用 `Illuminate\\Support\\Facades\\Response` Facade 來產生 JSON 回應以外，我們也可以使用 `response` 韓式。由於輔助函式在全域都可使用，因此我們不需要特別 Import 任何函式就可以使用："

#: docs/8.x/facades.md:block 14 (code)
msgid "use Illuminate\\Support\\Facades\\Response;\n\n"
"Route::get('/users', function () {\n"
"    return Response::json([\n"
"        // ...\n"
"    ]);\n"
"});\n\n"
"Route::get('/users', function () {\n"
"    return response()->json([\n"
"        // ...\n"
"    ]);\n"
"});\n"
msgstr "use Illuminate\\Support\\Facades\\Response;\n\n"
"Route::get('/users', function () {\n"
"    return Response::json([\n"
"        // ...\n"
"    ]);\n"
"});\n\n"
"Route::get('/users', function () {\n"
"    return response()->json([\n"
"        // ...\n"
"    ]);\n"
"});\n"

#: docs/8.x/facades.md:block 16 (header)
msgid "When To Use Facades"
msgstr "什麼時候要使用 Facade？"

#: docs/8.x/facades.md:block 17 (paragraph)
msgid "Facades have many benefits. They provide a terse, memorable syntax that allows you to use Laravel's features without remembering long class names that must be injected or configured manually. Furthermore, because of their unique usage of PHP's dynamic methods, they are easy to test."
msgstr "Facade 提供了許多的好處。Facade 提供了簡介、好記憶的語法，能讓你不需記著長長的類別名稱、不需手動插入或設定類別，就能使用 Laravel 的功能。此外，由於 Facade 使用了獨特的 PHP 動態方法，因此要測試 Facade 也很簡單。"

#: docs/8.x/facades.md:block 18 (paragraph)
msgid "However, some care must be taken when using facades. The primary danger of facades is class \"scope creep\". Since facades are so easy to use and do not require injection, it can be easy to let your classes continue to grow and use many facades in a single class. Using dependency injection, this potential is mitigated by the visual feedback a large constructor gives you that your class is growing too large. So, when using facades, pay special attention to the size of your class so that its scope of responsibility stays narrow. If your class is getting too large, consider splitting it into multiple smaller classes."
msgstr "不過，在使用 Facade 的時候有幾點需要注意。第一個要注意的點是，Facade 是類別的「作用範圍陷阱 (Scope Creep)」。由於 Facade 很容易使用，而且不需要做相依性插入，所以我們很容易讓類別不斷增長、並在單一類別中使用太多的 Facade。在使用相依性插入時，這種問題很容易一眼看出，因為我們看到類別的 Constructor (建構函式) 就知道類別太肥大了。因此，在使用 Facade 時，請特別注意類別的大小，讓類別的功能範圍保持專一。若類別變的太大，請考慮將其拆分為多個小類別。"

#: docs/8.x/facades.md:block 20 (header)
msgid "Facades Vs. Dependency Injection"
msgstr "Facades Vs. 相依性插入"

#: docs/8.x/facades.md:block 21 (paragraph)
msgid "One of the primary benefits of dependency injection is the ability to swap implementations of the injected class. This is useful during testing since you can inject a mock or stub and assert that various methods were called on the stub."
msgstr "使用相依性插入的主要好處就是我們能替換掉要插入類別的實作。在測試時這點特別適用，因為這樣我們就能插入 Mock (模擬) 或 Stub (虛設常式)，並在 Stub 上檢查各種方法是否真的有被呼叫。"

#: docs/8.x/facades.md:block 22 (paragraph)
msgid "Typically, it would not be possible to mock or stub a truly static class method. However, since facades use dynamic methods to proxy method calls to objects resolved from the service container, we actually can test facades just as we would test an injected class instance. For example, given the following route:"
msgstr "一般來說，對真正的靜態類別方法來說，我們是不可能去 Mock 或 Stub 的。不過，因為 Facade 使用動態方法來代理這些方法呼叫到 Service Container 解析的物件上，因此我們就可以測試這些 Facade，就像我們在測試插入的類別實體一樣。舉例來說，假設有下列 Route："

#: docs/8.x/facades.md:block 23 (code)
msgid "use Illuminate\\Support\\Facades\\Cache;\n\n"
"Route::get('/cache', function () {\n"
"    return Cache::get('key');\n"
"});\n"
msgstr "use Illuminate\\Support\\Facades\\Cache;\n\n"
"Route::get('/cache', function () {\n"
"    return Cache::get('key');\n"
"});\n"

#: docs/8.x/facades.md:block 24 (paragraph)
msgid "Using Laravel's facade testing methods, we can write the following test to verify that the `Cache::get` method was called with the argument we expected:"
msgstr "使用 Laravel 的 Facade 測試方法，我們就能撰寫下列測試，並驗證 `Cache::get` 方法是否有使用預期的引數呼叫："

#: docs/8.x/facades.md:block 25 (code)
msgid "use Illuminate\\Support\\Facades\\Cache;\n\n"
"/**\n"
" * A basic functional test example.\n"
" *\n"
" * @return void\n"
" */\n"
"public function testBasicExample()\n"
"{\n"
"    Cache::shouldReceive('get')\n"
"         ->with('key')\n"
"         ->andReturn('value');\n\n"
"    $response = $this->get('/cache');\n\n"
"    $response->assertSee('value');\n"
"}\n"
msgstr "use Illuminate\\Support\\Facades\\Cache;\n\n"
"/**\n"
" * A basic functional test example.\n"
" *\n"
" * @return void\n"
" */\n"
"public function testBasicExample()\n"
"{\n"
"    Cache::shouldReceive('get')\n"
"         ->with('key')\n"
"         ->andReturn('value');\n\n"
"    $response = $this->get('/cache');\n\n"
"    $response->assertSee('value');\n"
"}\n"

#: docs/8.x/facades.md:block 27 (header)
msgid "Facades Vs. Helper Functions"
msgstr "Facades Vs. 輔助函式"

#: docs/8.x/facades.md:block 28 (paragraph)
msgid "In addition to facades, Laravel includes a variety of \"helper\" functions which can perform common tasks like generating views, firing events, dispatching jobs, or sending HTTP responses. Many of these helper functions perform the same function as a corresponding facade. For example, this facade call and helper call are equivalent:"
msgstr "除了 Facade 外，Laravel 也提供了多個「輔助」函式，可用來處理像是產生 View、觸發事件、分派任務、送出 HTTP Response⋯⋯等常見的工作，其中許多的輔助函式都與對應的 Facade 提供相同的功能。舉例來說，下列的 Facade 呼叫與輔助函式的呼叫是相同的："

#: docs/8.x/facades.md:block 29 (code)
msgid "return Illuminate\\Support\\Facades\\View::make('profile');\n\n"
"return view('profile');\n"
msgstr "return Illuminate\\Support\\Facades\\View::make('profile');\n\n"
"return view('profile');\n"

#: docs/8.x/facades.md:block 30 (paragraph)
msgid "There is absolutely no practical difference between facades and helper functions. When using helper functions, you may still test them exactly as you would the corresponding facade. For example, given the following route:"
msgstr "在實務上，使用 Facade 方法與輔助函式並沒有不同，使用輔助函式時，我們還是可以像對 Facade 一樣測試這些功能。舉例來說，假設有下列 Route："

#: docs/8.x/facades.md:block 31 (code)
msgid "Route::get('/cache', function () {\n"
"    return cache('key');\n"
"});\n"
msgstr "Route::get('/cache', function () {\n"
"    return cache('key');\n"
"});\n"

#: docs/8.x/facades.md:block 32 (paragraph)
msgid "Under the hood, the `cache` helper is going to call the `get` method on the class underlying the `Cache` facade. So, even though we are using the helper function, we can write the following test to verify that the method was called with the argument we expected:"
msgstr "在 Laravel 中，`cache` 輔助函式會去呼叫 `Cache` Facade 底層類別的 `get` 方法。因此，雖然我們在使用的是輔助函式，但我們可以撰寫下列這樣的測試來驗證該方法是否有用我們給定的引數呼叫："

#: docs/8.x/facades.md:block 35 (header)
msgid "How Facades Work"
msgstr "Facade 是如何運作的？"

#: docs/8.x/facades.md:block 36 (paragraph)
msgid "In a Laravel application, a facade is a class that provides access to an object from the container. The machinery that makes this work is in the `Facade` class. Laravel's facades, and any custom facades you create, will extend the base `Illuminate\\Support\\Facades\\Facade` class."
msgstr "在 Laravel 程式中，Facade 能讓我們從 Container 內存取物件。為什麼我們能這麼做？答案就藏在 `Facade` 類別中。Laravel 的 Facade 與你自己建立的自訂 Facade 都繼承一個基礎的 `Illuminate\\Support\\Facades\\Facade` 類別。"

#: docs/8.x/facades.md:block 37 (paragraph)
msgid "The `Facade` base class makes use of the `__callStatic()` magic-method to defer calls from your facade to an object resolved from the container. In the example below, a call is made to the Laravel cache system. By glancing at this code, one might assume that the static `get` method is being called on the `Cache` class:"
msgstr "`Facade ` 的基礎類別使用 `__callStatic()` 魔法方法來將所有對 Facade 的呼叫轉移到從 Container 中解析出來的物件上。在上面的例子中，我們呼叫了 Laravel 快取系統。看一眼這個程式碼，有人可能會假設我們是在呼叫 `Cache` 類別的靜態 `get` 方法："

#: docs/8.x/facades.md:block 38 (code)
msgid "<?php\n\n"
"namespace App\\Http\\Controllers;\n\n"
"use App\\Http\\Controllers\\Controller;\n"
"use Illuminate\\Support\\Facades\\Cache;\n\n"
"class UserController extends Controller\n"
"{\n"
"    /**\n"
"     * Show the profile for the given user.\n"
"     *\n"
"     * @param  int  $id\n"
"     * @return Response\n"
"     */\n"
"    public function showProfile($id)\n"
"    {\n"
"        $user = Cache::get('user:'.$id);\n\n"
"        return view('profile', ['user' => $user]);\n"
"    }\n"
"}\n"
msgstr "<?php\n\n"
"namespace App\\Http\\Controllers;\n\n"
"use App\\Http\\Controllers\\Controller;\n"
"use Illuminate\\Support\\Facades\\Cache;\n\n"
"class UserController extends Controller\n"
"{\n"
"    /**\n"
"     * Show the profile for the given user.\n"
"     *\n"
"     * @param  int  $id\n"
"     * @return Response\n"
"     */\n"
"    public function showProfile($id)\n"
"    {\n"
"        $user = Cache::get('user:'.$id);\n\n"
"        return view('profile', ['user' => $user]);\n"
"    }\n"
"}\n"

#: docs/8.x/facades.md:block 39 (paragraph)
msgid "Notice that near the top of the file we are \"importing\" the `Cache` facade. This facade serves as a proxy for accessing the underlying implementation of the `Illuminate\\Contracts\\Cache\\Factory` interface. Any calls we make using the facade will be passed to the underlying instance of Laravel's cache service."
msgstr "可以注意到，在檔案最上端，我們「Import」了 `Cache` Facade。這個 Facade 會作為代理來讓我們存取底層 `Illuminate\\Contracts\\Cache\\Factory` 介面的實作。使用 Facade 呼叫的所有方法都會被傳到 Laravel 快取系統的底層實體上。"

#: docs/8.x/facades.md:block 40 (paragraph)
msgid "If we look at that `Illuminate\\Support\\Facades\\Cache` class, you'll see that there is no static method `get`:"
msgstr "若我們打開 `Illuminate\\Support\\Facades\\Cache` 類別看，會發現裡面沒有靜態的 `get` 方法："

#: docs/8.x/facades.md:block 41 (code)
msgid "class Cache extends Facade\n"
"{\n"
"    /**\n"
"     * Get the registered name of the component.\n"
"     *\n"
"     * @return string\n"
"     */\n"
"    protected static function getFacadeAccessor() { return 'cache'; }\n"
"}\n"
msgstr "class Cache extends Facade\n"
"{\n"
"    /**\n"
"     * Get the registered name of the component.\n"
"     *\n"
"     * @return string\n"
"     */\n"
"    protected static function getFacadeAccessor() { return 'cache'; }\n"
"}\n"

#: docs/8.x/facades.md:block 42 (paragraph)
msgid "Instead, the `Cache` facade extends the base `Facade` class and defines the method `getFacadeAccessor()`. This method's job is to return the name of a service container binding. When a user references any static method on the `Cache` facade, Laravel resolves the `cache` binding from the [service container](/docs/{{version}}/container) and runs the requested method (in this case, `get`) against that object."
msgstr "沒有 `get` 方法，`Cache` Facade 只有繼承了基礎的 `Facade` 類別並定義了 `getFacadeAccessor()` 方法。這個方法的功能就是用來回傳 Service Container 繫結的名稱。當使用者在 `Cache` Facade 上參照任何靜態方法時，Laravel 會去從 [Service Container](/docs/{{version}}/container) 中解析出 `cache` 繫結，然後在這個物件上執行要求的方法 (在這個例子中就是 `get`)。"

#: docs/8.x/facades.md:block 44 (header)
msgid "Real-Time Facades"
msgstr "即時 Facade"

#: docs/8.x/facades.md:block 45 (paragraph)
msgid "Using real-time facades, you may treat any class in your application as if it was a facade. To illustrate how this can be used, let's first examine some code that does not use real-time facades. For example, let's assume our `Podcast` model has a `publish` method. However, in order to publish the podcast, we need to inject a `Publisher` instance:"
msgstr "使用即時 Facade 時，我們可以把程式內的任何類別都當作 Facade 來使用。為了說明這個功能，我們先來看一些不使用即時 Facade 的例子。舉例來說，我們先假設 `Podcast` Model 有個 `publish` 方法。不過，為了要發布 (Publish) 這個 Podcast，我們還需要插入 `Publisher` 實體："

#: docs/8.x/facades.md:block 46 (code)
msgid "<?php\n\n"
"namespace App\\Models;\n\n"
"use App\\Contracts\\Publisher;\n"
"use Illuminate\\Database\\Eloquent\\Model;\n\n"
"class Podcast extends Model\n"
"{\n"
"    /**\n"
"     * Publish the podcast.\n"
"     *\n"
"     * @param  Publisher  $publisher\n"
"     * @return void\n"
"     */\n"
"    public function publish(Publisher $publisher)\n"
"    {\n"
"        $this->update(['publishing' => now()]);\n\n"
"        $publisher->publish($this);\n"
"    }\n"
"}\n"
msgstr "<?php\n\n"
"namespace App\\Models;\n\n"
"use App\\Contracts\\Publisher;\n"
"use Illuminate\\Database\\Eloquent\\Model;\n\n"
"class Podcast extends Model\n"
"{\n"
"    /**\n"
"     * Publish the podcast.\n"
"     *\n"
"     * @param  Publisher  $publisher\n"
"     * @return void\n"
"     */\n"
"    public function publish(Publisher $publisher)\n"
"    {\n"
"        $this->update(['publishing' => now()]);\n\n"
"        $publisher->publish($this);\n"
"    }\n"
"}\n"

#: docs/8.x/facades.md:block 47 (paragraph)
msgid "Injecting a publisher implementation into the method allows us to easily test the method in isolation since we can mock the injected publisher. However, it requires us to always pass a publisher instance each time we call the `publish` method. Using real-time facades, we can maintain the same testability while not being required to explicitly pass a `Publisher` instance. To generate a real-time facade, prefix the namespace of the imported class with `Facades`:"
msgstr "將 Publisher 實作插入到這個方法後，只要 Mock 這個插入的 Publisher，我們就能輕鬆地在分離的狀態下測試這個方法。不過，這樣一來每次我們呼叫 `publish` 方法也都需要傳入一個 Publisher 實體。使用即時 Facade，我們一樣可以能保有可測試性，又不需要顯式傳入 `Publisher` 實體。若要產生即時 Facade，請在 Import 類別的 Namespace 前方加上 `Facades`："

#: docs/8.x/facades.md:block 48 (code)
msgid "<?php\n\n"
"namespace App\\Models;\n\n"
"use Facades\\App\\Contracts\\Publisher;\n"
"use Illuminate\\Database\\Eloquent\\Model;\n\n"
"class Podcast extends Model\n"
"{\n"
"    /**\n"
"     * Publish the podcast.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function publish()\n"
"    {\n"
"        $this->update(['publishing' => now()]);\n\n"
"        Publisher::publish($this);\n"
"    }\n"
"}\n"
msgstr "<?php\n\n"
"namespace App\\Models;\n\n"
"use Facades\\App\\Contracts\\Publisher;\n"
"use Illuminate\\Database\\Eloquent\\Model;\n\n"
"class Podcast extends Model\n"
"{\n"
"    /**\n"
"     * Publish the podcast.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function publish()\n"
"    {\n"
"        $this->update(['publishing' => now()]);\n\n"
"        Publisher::publish($this);\n"
"    }\n"
"}\n"

#: docs/8.x/facades.md:block 49 (paragraph)
msgid "When the real-time facade is used, the publisher implementation will be resolved out of the service container using the portion of the interface or class name that appears after the `Facades` prefix. When testing, we can use Laravel's built-in facade testing helpers to mock this method call:"
msgstr "在使用即時 Facade 時，Laravel 會使用 `Facades` 前置詞後方的介面或類別名稱來從 Service Container 上解析出 Publisher 實作。測試時，我們可以使用 Laravel 的內建 Facade 測試工具來 Mock 這個方法呼叫："

#: docs/8.x/facades.md:block 50 (code)
msgid "<?php\n\n"
"namespace Tests\\Feature;\n\n"
"use App\\Models\\Podcast;\n"
"use Facades\\App\\Contracts\\Publisher;\n"
"use Illuminate\\Foundation\\Testing\\RefreshDatabase;\n"
"use Tests\\TestCase;\n\n"
"class PodcastTest extends TestCase\n"
"{\n"
"    use RefreshDatabase;\n\n"
"    /**\n"
"     * A test example.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function test_podcast_can_be_published()\n"
"    {\n"
"        $podcast = Podcast::factory()->create();\n\n"
"        Publisher::shouldReceive('publish')->once()->with($podcast);\n\n"
"        $podcast->publish();\n"
"    }\n"
"}\n"
msgstr "<?php\n\n"
"namespace Tests\\Feature;\n\n"
"use App\\Models\\Podcast;\n"
"use Facades\\App\\Contracts\\Publisher;\n"
"use Illuminate\\Foundation\\Testing\\RefreshDatabase;\n"
"use Tests\\TestCase;\n\n"
"class PodcastTest extends TestCase\n"
"{\n"
"    use RefreshDatabase;\n\n"
"    /**\n"
"     * A test example.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function test_podcast_can_be_published()\n"
"    {\n"
"        $podcast = Podcast::factory()->create();\n\n"
"        Publisher::shouldReceive('publish')->once()->with($podcast);\n\n"
"        $podcast->publish();\n"
"    }\n"
"}\n"

#: docs/8.x/facades.md:block 52 (header)
msgid "Facade Class Reference"
msgstr "Facade 類別參照"

#: docs/8.x/facades.md:block 53 (paragraph)
msgid "Below you will find every facade and its underlying class. This is a useful tool for quickly digging into the API documentation for a given facade root. The [service container binding](/docs/{{version}}/container) key is also included where applicable."
msgstr "在下表中，讀者可以找到所有的 Facade 與其底層的類別。對於像在 API 說明文件中找到某個 Facade 來源的時候，下表是很實用的工具。若有 [Service container 的繫結](/docs/{{version}}/container)索引鍵時，下表中也會列出。"

#: docs/8.x/facades.md:block 54 (table)
msgid "Facade"
msgstr "Facade"

#: docs/8.x/facades.md:block 54 (table)
msgid "Class"
msgstr "類別"

#: docs/8.x/facades.md:block 54 (table)
msgid "Service Container Binding"
msgstr "Service Container 的繫結"

#: docs/8.x/facades.md:block 54 (table)
msgid "App"
msgstr "App"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Foundation\\Application](https://laravel.com/api/{{version}}/Illuminate/Foundation/Application.html)"
msgstr "[Illuminate\\Foundation\\Application](https://laravel.com/api/{{version}}/Illuminate/Foundation/Application.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`app`"
msgstr "`app`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Artisan"
msgstr "Artisan"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Contracts\\Console\\Kernel](https://laravel.com/api/{{version}}/Illuminate/Contracts/Console/Kernel.html)"
msgstr "[Illuminate\\Contracts\\Console\\Kernel](https://laravel.com/api/{{version}}/Illuminate/Contracts/Console/Kernel.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`artisan`"
msgstr "`artisan`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Auth"
msgstr "Auth"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Auth\\AuthManager](https://laravel.com/api/{{version}}/Illuminate/Auth/AuthManager.html)"
msgstr "[Illuminate\\Auth\\AuthManager](https://laravel.com/api/{{version}}/Illuminate/Auth/AuthManager.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`auth`"
msgstr "`auth`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Auth (Instance)"
msgstr "Auth (實體)"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Contracts\\Auth\\Guard](https://laravel.com/api/{{version}}/Illuminate/Contracts/Auth/Guard.html)"
msgstr "[Illuminate\\Contracts\\Auth\\Guard](https://laravel.com/api/{{version}}/Illuminate/Contracts/Auth/Guard.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`auth.driver`"
msgstr "`auth.driver`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Blade"
msgstr "Blade"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\View\\Compilers\\BladeCompiler](https://laravel.com/api/{{version}}/Illuminate/View/Compilers/BladeCompiler.html)"
msgstr "[Illuminate\\View\\Compilers\\BladeCompiler](https://laravel.com/api/{{version}}/Illuminate/View/Compilers/BladeCompiler.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`blade.compiler`"
msgstr "`blade.compiler`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Broadcast"
msgstr "Broadcast"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Contracts\\Broadcasting\\Factory](https://laravel.com/api/{{version}}/Illuminate/Contracts/Broadcasting/Factory.html)"
msgstr "[Illuminate\\Contracts\\Broadcasting\\Factory](https://laravel.com/api/{{version}}/Illuminate/Contracts/Broadcasting/Factory.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "&nbsp;"
msgstr "&nbsp;"

#: docs/8.x/facades.md:block 54 (table)
msgid "Broadcast (Instance)"
msgstr "Broadcast (實體)"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Contracts\\Broadcasting\\Broadcaster](https://laravel.com/api/{{version}}/Illuminate/Contracts/Broadcasting/Broadcaster.html)"
msgstr "[Illuminate\\Contracts\\Broadcasting\\Broadcaster](https://laravel.com/api/{{version}}/Illuminate/Contracts/Broadcasting/Broadcaster.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "Bus"
msgstr "Bus"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Contracts\\Bus\\Dispatcher](https://laravel.com/api/{{version}}/Illuminate/Contracts/Bus/Dispatcher.html)"
msgstr "[Illuminate\\Contracts\\Bus\\Dispatcher](https://laravel.com/api/{{version}}/Illuminate/Contracts/Bus/Dispatcher.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "Cache"
msgstr "Cache"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Cache\\CacheManager](https://laravel.com/api/{{version}}/Illuminate/Cache/CacheManager.html)"
msgstr "[Illuminate\\Cache\\CacheManager](https://laravel.com/api/{{version}}/Illuminate/Cache/CacheManager.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`cache`"
msgstr "`cache`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Cache (Instance)"
msgstr "Cache (實體)"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Cache\\Repository](https://laravel.com/api/{{version}}/Illuminate/Cache/Repository.html)"
msgstr "[Illuminate\\Cache\\Repository](https://laravel.com/api/{{version}}/Illuminate/Cache/Repository.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`cache.store`"
msgstr "`cache.store`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Config"
msgstr "Config"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Config\\Repository](https://laravel.com/api/{{version}}/Illuminate/Config/Repository.html)"
msgstr "[Illuminate\\Config\\Repository](https://laravel.com/api/{{version}}/Illuminate/Config/Repository.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`config`"
msgstr "`config`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Cookie"
msgstr "Cookie"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Cookie\\CookieJar](https://laravel.com/api/{{version}}/Illuminate/Cookie/CookieJar.html)"
msgstr "[Illuminate\\Cookie\\CookieJar](https://laravel.com/api/{{version}}/Illuminate/Cookie/CookieJar.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`cookie`"
msgstr "`cookie`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Crypt"
msgstr "Crypt"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Encryption\\Encrypter](https://laravel.com/api/{{version}}/Illuminate/Encryption/Encrypter.html)"
msgstr "[Illuminate\\Encryption\\Encrypter](https://laravel.com/api/{{version}}/Illuminate/Encryption/Encrypter.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`encrypter`"
msgstr "`encrypter`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Date"
msgstr "Date"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Support\\DateFactory](https://laravel.com/api/{{version}}/Illuminate/Support/DateFactory.html)"
msgstr "[Illuminate\\Support\\DateFactory](https://laravel.com/api/{{version}}/Illuminate/Support/DateFactory.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`date`"
msgstr "`date`"

#: docs/8.x/facades.md:block 54 (table)
msgid "DB"
msgstr "DB"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Database\\DatabaseManager](https://laravel.com/api/{{version}}/Illuminate/Database/DatabaseManager.html)"
msgstr "[Illuminate\\Database\\DatabaseManager](https://laravel.com/api/{{version}}/Illuminate/Database/DatabaseManager.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`db`"
msgstr "`db`"

#: docs/8.x/facades.md:block 54 (table)
msgid "DB (Instance)"
msgstr "DB (實體)"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Database\\Connection](https://laravel.com/api/{{version}}/Illuminate/Database/Connection.html)"
msgstr "[Illuminate\\Database\\Connection](https://laravel.com/api/{{version}}/Illuminate/Database/Connection.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`db.connection`"
msgstr "`db.connection`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Event"
msgstr "Event"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Events\\Dispatcher](https://laravel.com/api/{{version}}/Illuminate/Events/Dispatcher.html)"
msgstr "[Illuminate\\Events\\Dispatcher](https://laravel.com/api/{{version}}/Illuminate/Events/Dispatcher.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`events`"
msgstr "`events`"

#: docs/8.x/facades.md:block 54 (table)
msgid "File"
msgstr "File"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Filesystem\\Filesystem](https://laravel.com/api/{{version}}/Illuminate/Filesystem/Filesystem.html)"
msgstr "[Illuminate\\Filesystem\\Filesystem](https://laravel.com/api/{{version}}/Illuminate/Filesystem/Filesystem.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`files`"
msgstr "`files`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Gate"
msgstr "Gate"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Contracts\\Auth\\Access\\Gate](https://laravel.com/api/{{version}}/Illuminate/Contracts/Auth/Access/Gate.html)"
msgstr "[Illuminate\\Contracts\\Auth\\Access\\Gate](https://laravel.com/api/{{version}}/Illuminate/Contracts/Auth/Access/Gate.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "Hash"
msgstr "Hash"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Contracts\\Hashing\\Hasher](https://laravel.com/api/{{version}}/Illuminate/Contracts/Hashing/Hasher.html)"
msgstr "[Illuminate\\Contracts\\Hashing\\Hasher](https://laravel.com/api/{{version}}/Illuminate/Contracts/Hashing/Hasher.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`hash`"
msgstr "`hash`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Http"
msgstr "Http"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Http\\Client\\Factory](https://laravel.com/api/{{version}}/Illuminate/Http/Client/Factory.html)"
msgstr "[Illuminate\\Http\\Client\\Factory](https://laravel.com/api/{{version}}/Illuminate/Http/Client/Factory.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "Lang"
msgstr "Lang"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Translation\\Translator](https://laravel.com/api/{{version}}/Illuminate/Translation/Translator.html)"
msgstr "[Illuminate\\Translation\\Translator](https://laravel.com/api/{{version}}/Illuminate/Translation/Translator.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`translator`"
msgstr "`translator`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Log"
msgstr "Log"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Log\\LogManager](https://laravel.com/api/{{version}}/Illuminate/Log/LogManager.html)"
msgstr "[Illuminate\\Log\\LogManager](https://laravel.com/api/{{version}}/Illuminate/Log/LogManager.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`log`"
msgstr "`log`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Mail"
msgstr "Mail"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Mail\\Mailer](https://laravel.com/api/{{version}}/Illuminate/Mail/Mailer.html)"
msgstr "[Illuminate\\Mail\\Mailer](https://laravel.com/api/{{version}}/Illuminate/Mail/Mailer.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`mailer`"
msgstr "`mailer`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Notification"
msgstr "Notification"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Notifications\\ChannelManager](https://laravel.com/api/{{version}}/Illuminate/Notifications/ChannelManager.html)"
msgstr "[Illuminate\\Notifications\\ChannelManager](https://laravel.com/api/{{version}}/Illuminate/Notifications/ChannelManager.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "Password"
msgstr "Password"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Auth\\Passwords\\PasswordBrokerManager](https://laravel.com/api/{{version}}/Illuminate/Auth/Passwords/PasswordBrokerManager.html)"
msgstr "[Illuminate\\Auth\\Passwords\\PasswordBrokerManager](https://laravel.com/api/{{version}}/Illuminate/Auth/Passwords/PasswordBrokerManager.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`auth.password`"
msgstr "`auth.password`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Password (Instance)"
msgstr "Password (實體)"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Auth\\Passwords\\PasswordBroker](https://laravel.com/api/{{version}}/Illuminate/Auth/Passwords/PasswordBroker.html)"
msgstr "[Illuminate\\Auth\\Passwords\\PasswordBroker](https://laravel.com/api/{{version}}/Illuminate/Auth/Passwords/PasswordBroker.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`auth.password.broker`"
msgstr "`auth.password.broker`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Queue"
msgstr "Queue"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Queue\\QueueManager](https://laravel.com/api/{{version}}/Illuminate/Queue/QueueManager.html)"
msgstr "[Illuminate\\Queue\\QueueManager](https://laravel.com/api/{{version}}/Illuminate/Queue/QueueManager.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`queue`"
msgstr "`queue`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Queue (Instance)"
msgstr "Queue (實體)"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Contracts\\Queue\\Queue](https://laravel.com/api/{{version}}/Illuminate/Contracts/Queue/Queue.html)"
msgstr "[Illuminate\\Contracts\\Queue\\Queue](https://laravel.com/api/{{version}}/Illuminate/Contracts/Queue/Queue.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`queue.connection`"
msgstr "`queue.connection`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Queue (Base Class)"
msgstr "Queue (基礎類別)"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Queue\\Queue](https://laravel.com/api/{{version}}/Illuminate/Queue/Queue.html)"
msgstr "[Illuminate\\Queue\\Queue](https://laravel.com/api/{{version}}/Illuminate/Queue/Queue.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "Redirect"
msgstr "Redirect"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Routing\\Redirector](https://laravel.com/api/{{version}}/Illuminate/Routing/Redirector.html)"
msgstr "[Illuminate\\Routing\\Redirector](https://laravel.com/api/{{version}}/Illuminate/Routing/Redirector.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`redirect`"
msgstr "`redirect`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Redis"
msgstr "Redis"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Redis\\RedisManager](https://laravel.com/api/{{version}}/Illuminate/Redis/RedisManager.html)"
msgstr "[Illuminate\\Redis\\RedisManager](https://laravel.com/api/{{version}}/Illuminate/Redis/RedisManager.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`redis`"
msgstr "`redis`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Redis (Instance)"
msgstr "Redis (實體)"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Redis\\Connections\\Connection](https://laravel.com/api/{{version}}/Illuminate/Redis/Connections/Connection.html)"
msgstr "[Illuminate\\Redis\\Connections\\Connection](https://laravel.com/api/{{version}}/Illuminate/Redis/Connections/Connection.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`redis.connection`"
msgstr "`redis.connection`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Request"
msgstr "Request"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Http\\Request](https://laravel.com/api/{{version}}/Illuminate/Http/Request.html)"
msgstr "[Illuminate\\Http\\Request](https://laravel.com/api/{{version}}/Illuminate/Http/Request.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`request`"
msgstr "`request`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Response"
msgstr "Response"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Contracts\\Routing\\ResponseFactory](https://laravel.com/api/{{version}}/Illuminate/Contracts/Routing/ResponseFactory.html)"
msgstr "[Illuminate\\Contracts\\Routing\\ResponseFactory](https://laravel.com/api/{{version}}/Illuminate/Contracts/Routing/ResponseFactory.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "Response (Instance)"
msgstr "Response (實體)"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Http\\Response](https://laravel.com/api/{{version}}/Illuminate/Http/Response.html)"
msgstr "[Illuminate\\Http\\Response](https://laravel.com/api/{{version}}/Illuminate/Http/Response.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "Route"
msgstr "Route"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Routing\\Router](https://laravel.com/api/{{version}}/Illuminate/Routing/Router.html)"
msgstr "[Illuminate\\Routing\\Router](https://laravel.com/api/{{version}}/Illuminate/Routing/Router.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`router`"
msgstr "`router`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Schema"
msgstr "Schema"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Database\\Schema\\Builder](https://laravel.com/api/{{version}}/Illuminate/Database/Schema/Builder.html)"
msgstr "[Illuminate\\Database\\Schema\\Builder](https://laravel.com/api/{{version}}/Illuminate/Database/Schema/Builder.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "Session"
msgstr "Session"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Session\\SessionManager](https://laravel.com/api/{{version}}/Illuminate/Session/SessionManager.html)"
msgstr "[Illuminate\\Session\\SessionManager](https://laravel.com/api/{{version}}/Illuminate/Session/SessionManager.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`session`"
msgstr "`session`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Session (Instance)"
msgstr "Session (實體)"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Session\\Store](https://laravel.com/api/{{version}}/Illuminate/Session/Store.html)"
msgstr "[Illuminate\\Session\\Store](https://laravel.com/api/{{version}}/Illuminate/Session/Store.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`session.store`"
msgstr "`session.store`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Storage"
msgstr "Storage"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Filesystem\\FilesystemManager](https://laravel.com/api/{{version}}/Illuminate/Filesystem/FilesystemManager.html)"
msgstr "[Illuminate\\Filesystem\\FilesystemManager](https://laravel.com/api/{{version}}/Illuminate/Filesystem/FilesystemManager.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`filesystem`"
msgstr "`filesystem`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Storage (Instance)"
msgstr "Storage (實體)"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Contracts\\Filesystem\\Filesystem](https://laravel.com/api/{{version}}/Illuminate/Contracts/Filesystem/Filesystem.html)"
msgstr "[Illuminate\\Contracts\\Filesystem\\Filesystem](https://laravel.com/api/{{version}}/Illuminate/Contracts/Filesystem/Filesystem.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`filesystem.disk`"
msgstr "`filesystem.disk`"

#: docs/8.x/facades.md:block 54 (table)
msgid "URL"
msgstr "URL"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Routing\\UrlGenerator](https://laravel.com/api/{{version}}/Illuminate/Routing/UrlGenerator.html)"
msgstr "[Illuminate\\Routing\\UrlGenerator](https://laravel.com/api/{{version}}/Illuminate/Routing/UrlGenerator.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`url`"
msgstr "`url`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Validator"
msgstr "Validator"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Validation\\Factory](https://laravel.com/api/{{version}}/Illuminate/Validation/Factory.html)"
msgstr "[Illuminate\\Validation\\Factory](https://laravel.com/api/{{version}}/Illuminate/Validation/Factory.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`validator`"
msgstr "`validator`"

#: docs/8.x/facades.md:block 54 (table)
msgid "Validator (Instance)"
msgstr "Validator (實體)"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\Validation\\Validator](https://laravel.com/api/{{version}}/Illuminate/Validation/Validator.html)"
msgstr "[Illuminate\\Validation\\Validator](https://laravel.com/api/{{version}}/Illuminate/Validation/Validator.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "View"
msgstr "View"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\View\\Factory](https://laravel.com/api/{{version}}/Illuminate/View/Factory.html)"
msgstr "[Illuminate\\View\\Factory](https://laravel.com/api/{{version}}/Illuminate/View/Factory.html)"

#: docs/8.x/facades.md:block 54 (table)
msgid "`view`"
msgstr "`view`"

#: docs/8.x/facades.md:block 54 (table)
msgid "View (Instance)"
msgstr "View (實體)"

#: docs/8.x/facades.md:block 54 (table)
msgid "[Illuminate\\View\\View](https://laravel.com/api/{{version}}/Illuminate/View/View.html)"
msgstr "[Illuminate\\View\\View](https://laravel.com/api/{{version}}/Illuminate/View/View.html)"

#: docs/9.x/facades.md:block 6 (paragraph)
msgid "Laravel facades serve as \"static proxies\" to underlying classes in the service container, providing the benefit of a terse, expressive syntax while maintaining more testability and flexibility than traditional static methods. It's perfectly fine if you don't totally understand how facades work - just go with the flow and continue learning about Laravel."
msgstr "Laravel Facade 是一個用來存取 Service Container 中類別的一個「靜態代理 (Static Proxy)」，讓我們能使用簡潔、語意化的語法，卻由不像傳統靜態方法一樣要犧牲可測試性與靈活性。若你還不了解 Facade 如何運作，完全沒關係 —— 只要繼續使用並持續學習 Laravel 就好。"

#: docs/9.x/facades.md:block 32 (paragraph)
msgid "The `cache` helper is going to call the `get` method on the class underlying the `Cache` facade. So, even though we are using the helper function, we can write the following test to verify that the method was called with the argument we expected:"
msgstr "在 Laravel 中，`cache` 輔助函式會去呼叫 `Cache` Facade 底層類別的 `get` 方法。因此，雖然我們在使用的是輔助函式，但我們可以撰寫下列這樣的測試來驗證該方法是否有用我們給定的引數呼叫："

#: docs/9.x/facades.md:block 54 (table)
msgid "Vite"
msgstr "Vite"

#: docs/9.x/facades.md:block 54 (table)
msgid "[Illuminate\\Foundation\\Vite](https://laravel.com/api/{{version}}/Illuminate/Foundation/Vite.html)"
msgstr "[Illuminate\\Foundation\\Vite](https://laravel.com/api/{{version}}/Illuminate/Foundation/Vite.html)"

#: docs/master/facades.md:block 25 (code)
msgid "use Illuminate\\Support\\Facades\\Cache;\n\n"
"/**\n"
" * A basic functional test example.\n"
" */\n"
"public function test_basic_example(): void\n"
"{\n"
"    Cache::shouldReceive('get')\n"
"         ->with('key')\n"
"         ->andReturn('value');\n\n"
"    $response = $this->get('/cache');\n\n"
"    $response->assertSee('value');\n"
"}\n"
msgstr "use Illuminate\\Support\\Facades\\Cache;\n\n"
"/**\n"
" * A basic functional test example.\n"
" */\n"
"public function test_basic_example(): void\n"
"{\n"
"    Cache::shouldReceive('get')\n"
"         ->with('key')\n"
"         ->andReturn('value');\n\n"
"    $response = $this->get('/cache');\n\n"
"    $response->assertSee('value');\n"
"}\n"

#: docs/master/facades.md:block 38 (code)
msgid "<?php\n\n"
"namespace App\\Http\\Controllers;\n\n"
"use App\\Http\\Controllers\\Controller;\n"
"use Illuminate\\Support\\Facades\\Cache;\n"
"use Illuminate\\View\\View;\n\n"
"class UserController extends Controller\n"
"{\n"
"    /**\n"
"     * Show the profile for the given user.\n"
"     */\n"
"    public function showProfile(string $id): View\n"
"    {\n"
"        $user = Cache::get('user:'.$id);\n\n"
"        return view('profile', ['user' => $user]);\n"
"    }\n"
"}\n"
msgstr "<?php\n\n"
"namespace App\\Http\\Controllers;\n\n"
"use App\\Http\\Controllers\\Controller;\n"
"use Illuminate\\Support\\Facades\\Cache;\n"
"use Illuminate\\View\\View;\n\n"
"class UserController extends Controller\n"
"{\n"
"    /**\n"
"     * Show the profile for the given user.\n"
"     */\n"
"    public function showProfile(string $id): View\n"
"    {\n"
"        $user = Cache::get('user:'.$id);\n\n"
"        return view('profile', ['user' => $user]);\n"
"    }\n"
"}\n"

#: docs/master/facades.md:block 41 (code)
msgid "class Cache extends Facade\n"
"{\n"
"    /**\n"
"     * Get the registered name of the component.\n"
"     */\n"
"    protected static function getFacadeAccessor(): string\n"
"    {\n"
"        return 'cache';\n"
"    }\n"
"}\n"
msgstr "class Cache extends Facade\n"
"{\n"
"    /**\n"
"     * Get the registered name of the component.\n"
"     */\n"
"    protected static function getFacadeAccessor(): string\n"
"    {\n"
"        return 'cache';\n"
"    }\n"
"}\n"

#: docs/master/facades.md:block 46 (code)
msgid "<?php\n\n"
"namespace App\\Models;\n\n"
"use App\\Contracts\\Publisher;\n"
"use Illuminate\\Database\\Eloquent\\Model;\n\n"
"class Podcast extends Model\n"
"{\n"
"    /**\n"
"     * Publish the podcast.\n"
"     */\n"
"    public function publish(Publisher $publisher): void\n"
"    {\n"
"        $this->update(['publishing' => now()]);\n\n"
"        $publisher->publish($this);\n"
"    }\n"
"}\n"
msgstr "<?php\n\n"
"namespace App\\Models;\n\n"
"use App\\Contracts\\Publisher;\n"
"use Illuminate\\Database\\Eloquent\\Model;\n\n"
"class Podcast extends Model\n"
"{\n"
"    /**\n"
"     * Publish the podcast.\n"
"     */\n"
"    public function publish(Publisher $publisher): void\n"
"    {\n"
"        $this->update(['publishing' => now()]);\n\n"
"        $publisher->publish($this);\n"
"    }\n"
"}\n"

#: docs/master/facades.md:block 48 (code)
msgid "<?php\n\n"
"namespace App\\Models;\n\n"
"use Facades\\App\\Contracts\\Publisher;\n"
"use Illuminate\\Database\\Eloquent\\Model;\n\n"
"class Podcast extends Model\n"
"{\n"
"    /**\n"
"     * Publish the podcast.\n"
"     */\n"
"    public function publish(): void\n"
"    {\n"
"        $this->update(['publishing' => now()]);\n\n"
"        Publisher::publish($this);\n"
"    }\n"
"}\n"
msgstr "<?php\n\n"
"namespace App\\Models;\n\n"
"use Facades\\App\\Contracts\\Publisher;\n"
"use Illuminate\\Database\\Eloquent\\Model;\n\n"
"class Podcast extends Model\n"
"{\n"
"    /**\n"
"     * Publish the podcast.\n"
"     */\n"
"    public function publish(): void\n"
"    {\n"
"        $this->update(['publishing' => now()]);\n\n"
"        Publisher::publish($this);\n"
"    }\n"
"}\n"

#: docs/master/facades.md:block 50 (code)
msgid "<?php\n\n"
"namespace Tests\\Feature;\n\n"
"use App\\Models\\Podcast;\n"
"use Facades\\App\\Contracts\\Publisher;\n"
"use Illuminate\\Foundation\\Testing\\RefreshDatabase;\n"
"use Tests\\TestCase;\n\n"
"class PodcastTest extends TestCase\n"
"{\n"
"    use RefreshDatabase;\n\n"
"    /**\n"
"     * A test example.\n"
"     */\n"
"    public function test_podcast_can_be_published(): void\n"
"    {\n"
"        $podcast = Podcast::factory()->create();\n\n"
"        Publisher::shouldReceive('publish')->once()->with($podcast);\n\n"
"        $podcast->publish();\n"
"    }\n"
"}\n"
msgstr "<?php\n\n"
"namespace Tests\\Feature;\n\n"
"use App\\Models\\Podcast;\n"
"use Facades\\App\\Contracts\\Publisher;\n"
"use Illuminate\\Foundation\\Testing\\RefreshDatabase;\n"
"use Tests\\TestCase;\n\n"
"class PodcastTest extends TestCase\n"
"{\n"
"    use RefreshDatabase;\n\n"
"    /**\n"
"     * A test example.\n"
"     */\n"
"    public function test_podcast_can_be_published(): void\n"
"    {\n"
"        $podcast = Podcast::factory()->create();\n\n"
"        Publisher::shouldReceive('publish')->once()->with($podcast);\n\n"
"        $podcast->publish();\n"
"    }\n"
"}\n"

