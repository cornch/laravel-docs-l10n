# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Taylor Otwell
# This file is distributed under the same license as the Laravel Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2021-04-05 10:07+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title #
#: docs/8.x/envoy.md:1
#, no-wrap
msgid "Laravel Envoy"
msgstr ""

#. type: Bullet: '- '
#: docs/8.x/envoy.md:18
msgid "[Introduction](#introduction)"
msgstr ""

#. type: Bullet: '- '
#: docs/8.x/envoy.md:18
msgid "[Installation](#installation)"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:18
#, no-wrap
msgid ""
"- [Writing Tasks](#writing-tasks)\n"
"    - [Defining Tasks](#defining-tasks)\n"
"    - [Multiple Servers](#multiple-servers)\n"
"    - [Setup](#setup)\n"
"    - [Variables](#variables)\n"
"    - [Stories](#stories)\n"
"    - [Completion Hooks](#completion-hooks)\n"
"- [Running Tasks](#running-tasks)\n"
"    - [Confirming Task Execution](#confirming-task-execution)\n"
"- [Notifications](#notifications)\n"
"    - [Slack](#slack)\n"
"    - [Discord](#discord)\n"
"    - [Telegram](#telegram)\n"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:20
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/envoy.md:20
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:23
msgid ""
"[Laravel Envoy](https://github.com/laravel/envoy) is a tool for executing "
"common tasks you run on your remote servers. Using "
"[Blade](/docs/{{version}}/blade) style syntax, you can easily setup tasks "
"for deployment, Artisan commands, and more. Currently, Envoy only supports "
"the Mac and Linux operating systems. However, Windows support is achievable "
"using [WSL2](https://docs.microsoft.com/en-us/windows/wsl/install-win10)."
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:25
#, no-wrap
msgid "<a name=\"installation\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/envoy.md:25
#, no-wrap
msgid "Installation"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:28
msgid "First, install Envoy into your project using the Composer package manager:"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:30
#, no-wrap
msgid "    composer require laravel/envoy --dev\n"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:32
msgid ""
"Once Envoy has been installed, the Envoy binary will be available in your "
"application's `vendor/bin` directory:"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:34
#, no-wrap
msgid "    php vendor/bin/envoy\n"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:36
#, no-wrap
msgid "<a name=\"writing-tasks\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/envoy.md:36
#, no-wrap
msgid "Writing Tasks"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:39
#, no-wrap
msgid "<a name=\"defining-tasks\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/envoy.md:39
#, no-wrap
msgid "Defining Tasks"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:42
msgid ""
"Tasks are the basic building block of Envoy. Tasks define the shell commands "
"that should execute on your remote servers when the task is invoked. For "
"example, you might define a task that executes the `php artisan "
"queue:restart` command on all of your application's queue worker servers."
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:44
msgid ""
"All of your Envoy tasks should be defined in an `Envoy.blade.php` file at "
"the root of your application. Here's an example to get you started:"
msgstr ""

#. type: Code fence info string
#: docs/8.x/envoy.md:45 docs/8.x/envoy.md:61 docs/8.x/envoy.md:70 docs/8.x/envoy.md:79 docs/8.x/envoy.md:94 docs/8.x/envoy.md:117 docs/8.x/envoy.md:134 docs/8.x/envoy.md:153 docs/8.x/envoy.md:214 docs/8.x/envoy.md:225 docs/8.x/envoy.md:245
#, no-wrap
msgid "bash"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:45
#, no-wrap
msgid ""
"@servers(['web' => ['user@192.168.1.1'], 'workers' => "
"['user@192.168.1.2']])\n"
"\n"
"@task('restart-queues', ['on' => 'workers'])\n"
"    cd /home/user/example.com\n"
"    php artisan queue:restart\n"
"@endtask\n"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:55
msgid ""
"As you can see, an array of `@servers` is defined at the top of the file, "
"allowing you to reference these servers via the `on` option of your task "
"declarations. The `@servers` declaration should always be placed on a single "
"line. Within your `@task` declarations, you should place the shell commands "
"that should execute on your servers when the task is invoked."
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:57
#, no-wrap
msgid "<a name=\"local-tasks\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/envoy.md:57
#, no-wrap
msgid "Local Tasks"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:60
msgid ""
"You can force a script to run on your local computer by specifying the "
"server's IP address as `127.0.0.1`:"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:61
#, no-wrap
msgid "@servers(['localhost' => '127.0.0.1'])\n"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:66
#, no-wrap
msgid "<a name=\"importing-envoy-tasks\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/envoy.md:66
#, no-wrap
msgid "Importing Envoy Tasks"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:69
msgid ""
"Using the `@import` directive, you may import other Envoy files so their "
"stories and tasks are added to yours. After the files have been imported, "
"you may execute the tasks they contain as if they were defined in your own "
"Envoy file:"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:70
#, no-wrap
msgid "@import('vendor/package/Envoy.blade.php')\n"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:75
#, no-wrap
msgid "<a name=\"multiple-servers\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/envoy.md:75
#, no-wrap
msgid "Multiple Servers"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:78
msgid ""
"Envoy allows you to easily run a task across multiple servers. First, add "
"additional servers to your `@servers` declaration. Each server should be "
"assigned a unique name. Once you have defined your additional servers you "
"may list each of the servers in the task's `on` array:"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:79
#, no-wrap
msgid ""
"@servers(['web-1' => '192.168.1.1', 'web-2' => '192.168.1.2'])\n"
"\n"
"@task('deploy', ['on' => ['web-1', 'web-2']])\n"
"    cd /home/user/example.com\n"
"    git pull origin {{ $branch }}\n"
"    php artisan migrate --force\n"
"@endtask\n"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:90
#, no-wrap
msgid "<a name=\"parallel-execution\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/envoy.md:90
#, no-wrap
msgid "Parallel Execution"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:93
msgid ""
"By default, tasks will be executed on each server serially. In other words, "
"a task will finish running on the first server before proceeding to execute "
"on the second server. If you would like to run a task across multiple "
"servers in parallel, add the `parallel` option to your task declaration:"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:94
#, no-wrap
msgid ""
"@servers(['web-1' => '192.168.1.1', 'web-2' => '192.168.1.2'])\n"
"\n"
"@task('deploy', ['on' => ['web-1', 'web-2'], 'parallel' => true])\n"
"    cd /home/user/example.com\n"
"    git pull origin {{ $branch }}\n"
"    php artisan migrate --force\n"
"@endtask\n"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:105
#, no-wrap
msgid "<a name=\"setup\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/envoy.md:105
#, no-wrap
msgid "Setup"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:108
msgid ""
"Sometimes, you may need to execute arbitrary PHP code before running your "
"Envoy tasks. You may use the `@setup` directive to define a block of PHP "
"code that should execute before your tasks:"
msgstr ""

#. type: Code fence info string
#: docs/8.x/envoy.md:109 docs/8.x/envoy.md:188 docs/8.x/envoy.md:201
#, no-wrap
msgid "php"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:109
#, no-wrap
msgid ""
"@setup\n"
"    $now = new DateTime;\n"
"@endsetup\n"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:116
msgid ""
"If you need to require other PHP files before your task is executed, you may "
"use the `@include` directive at the top of your `Envoy.blade.php` file:"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:117
#, no-wrap
msgid ""
"@include('vendor/autoload.php')\n"
"\n"
"@task('restart-queues')\n"
"    # ...\n"
"@endtask\n"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:126
#, no-wrap
msgid "<a name=\"variables\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/envoy.md:126
#, no-wrap
msgid "Variables"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:129
msgid ""
"If needed, you may pass arguments to Envoy tasks by specifying them on the "
"command line when invoking Envoy:"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:131
#, no-wrap
msgid "    php vendor/bin/envoy run deploy --branch=master\n"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:133
msgid ""
"You may access the options within your tasks using Blade's \"echo\" "
"syntax. You may also define Blade `if` statements and loops within your "
"tasks. For example, let's verify the presence of the `$branch` variable "
"before executing the `git pull` command:"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:134
#, no-wrap
msgid ""
"@servers(['web' => ['user@192.168.1.1']])\n"
"\n"
"@task('deploy', ['on' => 'web'])\n"
"    cd /home/user/example.com\n"
"\n"
"    @if ($branch)\n"
"        git pull origin {{ $branch }}\n"
"    @endif\n"
"\n"
"    php artisan migrate --force\n"
"@endtask\n"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:149
#, no-wrap
msgid "<a name=\"stories\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/envoy.md:149
#, no-wrap
msgid "Stories"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:152
msgid ""
"Stories group a set of tasks under a single, convenient name. For instance, "
"a `deploy` story may run the `update-code` and `install-dependencies` tasks "
"by listing the task names within its definition:"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:153
#, no-wrap
msgid ""
"@servers(['web' => ['user@192.168.1.1']])\n"
"\n"
"@story('deploy')\n"
"    update-code\n"
"    install-dependencies\n"
"@endstory\n"
"\n"
"@task('update-code')\n"
"    cd /home/user/example.com\n"
"    git pull origin master\n"
"@endtask\n"
"\n"
"@task('install-dependencies')\n"
"    cd /home/user/example.com\n"
"    composer install\n"
"@endtask\n"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:173
msgid ""
"Once the story has been written, you may invoke it in the same way you would "
"invoke a task:"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:175 docs/8.x/envoy.md:239
#, no-wrap
msgid "    php vendor/bin/envoy run deploy\n"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:177
#, no-wrap
msgid "<a name=\"completion-hooks\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/envoy.md:177
#, no-wrap
msgid "Completion Hooks"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:180
msgid ""
"When tasks and stories finish, a number of hooks are executed. The hook "
"types supported by Envoy are `@after`, `@error`, `@success`, and "
"`@finished`. All of the code in these hooks is interpreted as PHP and "
"executed locally, not on the remote servers that your tasks interact with."
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:182
msgid ""
"You may define as many of each of these hooks as you like. They will be "
"executed in the order that they appear in your Envoy script."
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:184
#, no-wrap
msgid "<a name=\"completion-after\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/envoy.md:184
#, no-wrap
msgid "`@after`"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:187
msgid ""
"After each task execution, all of the `@after` hooks registered in your "
"Envoy script will execute. The `@after` hooks receive the name of the task "
"that was executed:"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:188
#, no-wrap
msgid ""
"@after\n"
"    if ($task === 'deploy') {\n"
"        // ...\n"
"    }\n"
"@endafter\n"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:197
#, no-wrap
msgid "<a name=\"completion-error\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/envoy.md:197
#, no-wrap
msgid "`@error`"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:200
msgid ""
"After every task failure (exits with a status code greater than `0`), all of "
"the `@error` hooks registered in your Envoy script will execute. The "
"`@error` hooks receive the name of the task that was executed:"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:201
#, no-wrap
msgid ""
"@error\n"
"    if ($task === 'deploy') {\n"
"        // ...\n"
"    }\n"
"@enderror\n"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:210
#, no-wrap
msgid "<a name=\"completion-success\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/envoy.md:210
#, no-wrap
msgid "`@success`"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:213
msgid ""
"If all tasks have executed without errors, all of the `@success` hooks "
"registered in your Envoy script will execute:"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:214
#, no-wrap
msgid ""
"@success\n"
"    // ...\n"
"@endsuccess\n"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:221
#, no-wrap
msgid "<a name=\"completion-finished\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/envoy.md:221
#, no-wrap
msgid "`@finished`"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:224
msgid ""
"After all tasks have been executed (regardless of exit status), all of the "
"`@finished` hooks will be executed. The `@finished` hooks receive the status "
"code of the completed task, which may be `null` or an `integer` greater than "
"or equal to `0`:"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:225
#, no-wrap
msgid ""
"@finished\n"
"    if ($exitCode > 0) {\n"
"        // There were errors in one of the tasks...\n"
"    }\n"
"@endfinished\n"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:234
#, no-wrap
msgid "<a name=\"running-tasks\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/envoy.md:234
#, no-wrap
msgid "Running Tasks"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:237
msgid ""
"To run a task or story that is defined in your application's "
"`Envoy.blade.php` file, execute Envoy's `run` command, passing the name of "
"the task or story you would like to execute. Envoy will execute the task and "
"display the output from your remote servers as the task is running:"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:241
#, no-wrap
msgid "<a name=\"confirming-task-execution\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/envoy.md:241
#, no-wrap
msgid "Confirming Task Execution"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:244
msgid ""
"If you would like to be prompted for confirmation before running a given "
"task on your servers, you should add the `confirm` directive to your task "
"declaration. This option is particularly useful for destructive operations:"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:245
#, no-wrap
msgid ""
"@task('deploy', ['on' => 'web', 'confirm' => true])\n"
"    cd /home/user/example.com\n"
"    git pull origin {{ $branch }}\n"
"    php artisan migrate\n"
"@endtask\n"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:254
#, no-wrap
msgid "<a name=\"notifications\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/envoy.md:254
#, no-wrap
msgid "Notifications"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:257
#, no-wrap
msgid "<a name=\"slack\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/envoy.md:257
#, no-wrap
msgid "Slack"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:260
msgid ""
"Envoy supports sending notifications to [Slack](https://slack.com) after "
"each task is executed. The `@slack` directive accepts a Slack hook URL and a "
"channel / user name. You may retrieve your webhook URL by creating an "
"\"Incoming WebHooks\" integration in your Slack control panel."
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:262
msgid ""
"You should pass the entire webhook URL as the first argument given to the "
"`@slack` directive. The second argument given to the `@slack` directive "
"should be a channel name (`#channel`) or a user name (`@user`):"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:266
#, no-wrap
msgid ""
"    @finished\n"
"        @slack('webhook-url', '#bots')\n"
"    @endfinished\n"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:268
msgid ""
"By default, Envoy notifications will send a message to the notification "
"channel describing the task that was executed. However, you may overwrite "
"this message with your own custom message by passing a third argument to the "
"`@slack` directive:"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:272
#, no-wrap
msgid ""
"    @finished\n"
"        @slack('webhook-url', '#bots', 'Hello, Slack.')\n"
"    @endfinished\n"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:274
#, no-wrap
msgid "<a name=\"discord\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/envoy.md:274
#, no-wrap
msgid "Discord"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:277
msgid ""
"Envoy also supports sending notifications to [Discord](https://discord.com) "
"after each task is executed. The `@discord` directive accepts a Discord hook "
"URL and a message. You may retrieve your webhook URL by creating a "
"\"Webhook\" in your Server Settings and choosing which channel the webhook "
"should post to. You should pass the entire Webhook URL into the `@discord` "
"directive:"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:281
#, no-wrap
msgid ""
"    @finished\n"
"        @discord('discord-webhook-url')\n"
"    @endfinished\n"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:283
#, no-wrap
msgid "<a name=\"telegram\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/envoy.md:283
#, no-wrap
msgid "Telegram"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:286
msgid ""
"Envoy also supports sending notifications to "
"[Telegram](https://telegram.org) after each task is executed. The "
"`@telegram` directive accepts a Telegram Bot ID and a Chat ID. You may "
"retrieve your Bot ID by creating a new bot using "
"[BotFather](https://t.me/botfather). You can retrieve a valid Chat ID using "
"[@username_to_id_bot](https://t.me/username_to_id_bot). You should pass the "
"entire Bot ID and Chat ID into the `@telegram` directive:"
msgstr ""

#. type: Plain text
#: docs/8.x/envoy.md:289
#, no-wrap
msgid ""
"    @finished\n"
"        @telegram('bot-id','chat-id')\n"
"    @endfinished\n"
msgstr ""
