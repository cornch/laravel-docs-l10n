msgid ""
msgstr ""
"Project-Id-Version: laravel-docs\n"
"POT-Creation-Date: 2022-02-08 06:32+0000\n"
"PO-Revision-Date: 2022-02-08 13:43\n"
"Last-Translator: \n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2022-02-08 06:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: \n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2022-02-08 06:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: \n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/templates/filesystem.pot\n"
"X-Crowdin-File-ID: 73\n"

# File: docs/8.x/filesystem.md, line: 1
# File: docs/9.x/filesystem.md, line: 1
# File: docs/master/filesystem.md, line: 1
#. type: Title #
#, no-wrap
msgid "File Storage"
msgstr "檔案存放空間"

# File: docs/8.x/filesystem.md, line: 22
# File: docs/9.x/filesystem.md, line: 21
# File: docs/master/filesystem.md, line: 21
#. type: Bullet: '- '
msgid "[Introduction](#introduction)"
msgstr "[簡介](#introduction)"

# File: docs/8.x/filesystem.md, line: 22
#. type: Plain text
#, no-wrap
msgid "- [Configuration](#configuration)\n"
"    - [The Local Driver](#the-local-driver)\n"
"    - [The Public Disk](#the-public-disk)\n"
"    - [Driver Prerequisites](#driver-prerequisites)\n"
"    - [Amazon S3 Compatible Filesystems](#amazon-s3-compatible-filesystems)\n"
"    - [Caching](#caching)\n"
"- [Obtaining Disk Instances](#obtaining-disk-instances)\n"
"    - [On-Demand Disks](#on-demand-disks)\n"
"- [Retrieving Files](#retrieving-files)\n"
"    - [Downloading Files](#downloading-files)\n"
"    - [File URLs](#file-urls)\n"
"    - [File Metadata](#file-metadata)\n"
"- [Storing Files](#storing-files)\n"
"    - [File Uploads](#file-uploads)\n"
"    - [File Visibility](#file-visibility)\n"
"- [Deleting Files](#deleting-files)\n"
"- [Directories](#directories)\n"
"- [Custom Filesystems](#custom-filesystems)\n"
msgstr "- [設定](#configuration)\n"
"    - [「Local」Driver](#the-local-driver)\n"
"    - [「Public」Disk](#the-public-disk)\n"
"    - [Driver 的前置要求](#driver-prerequisites)\n"
"    - [相容於 Amazon S3 的檔案系統](#amazon-s3-compatible-filesystems)\n"
"    - [快取](#caching)\n"
"- [取得 Disk 實體](#obtaining-disk-instances)\n"
"    - [隨需提供的 Disks](#on-demand-disks)\n"
"- [取得檔案](#retrieving-files)\n"
"    - [下載檔案](#downloading-files)\n"
"    - [檔案 URL](#file-urls)\n"
"    - [檔案的詮釋資料](#file-metadata)\n"
"- [保存檔案](#storing-files)\n"
"    - [檔案上傳](#file-uploads)\n"
"    - [檔案的可見度](#file-visibility)\n"
"- [刪除檔案](#deleting-files)\n"
"- [目錄](#directories)\n"
"- [自訂檔案系統](#custom-filesystems)\n"

# File: docs/8.x/filesystem.md, line: 24
# File: docs/9.x/filesystem.md, line: 23
# File: docs/master/filesystem.md, line: 23
#. type: Plain text
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr "<a name=\"introduction\"></a>\n"

# File: docs/8.x/filesystem.md, line: 24
# File: docs/9.x/filesystem.md, line: 23
# File: docs/master/filesystem.md, line: 23
#. type: Title ##
#, no-wrap
msgid "Introduction"
msgstr "簡介"

# File: docs/8.x/filesystem.md, line: 27
# File: docs/9.x/filesystem.md, line: 26
# File: docs/master/filesystem.md, line: 26
#. type: Plain text
msgid "Laravel provides a powerful filesystem abstraction thanks to the wonderful [Flysystem](https://github.com/thephpleague/flysystem) PHP package by Frank de Jonge. The Laravel Flysystem integration provides simple drivers for working with local filesystems, SFTP, and Amazon S3. Even better, it's amazingly simple to switch between these storage options between your local development machine and production server as the API remains the same for each system."
msgstr "多虧了 [Flysystem](https://github.com/thephpleague/flysystem)，Laravel 提供了強大的檔案系統抽象介面。Flysystem 是 Frank de Jonge 提供的一個 PHP 套件。Laravel 整合 Flysystem 來提供多個簡單的 Driver，可處理本機檔案系統、SFTP、Amazon S3 等。甚至，在本機開發環境與正式伺服器間交換使用各個不同的儲存空間非常地簡單，且每個儲存系統都有相同的 API。"

# File: docs/8.x/filesystem.md, line: 29
# File: docs/9.x/filesystem.md, line: 28
# File: docs/master/filesystem.md, line: 28
#. type: Plain text
#, no-wrap
msgid "<a name=\"configuration\"></a>\n"
msgstr "<a name=\"configuration\"></a>\n"

# File: docs/8.x/filesystem.md, line: 29
# File: docs/9.x/filesystem.md, line: 28
# File: docs/master/filesystem.md, line: 28
#. type: Title ##
#, no-wrap
msgid "Configuration"
msgstr "設定"

# File: docs/8.x/filesystem.md, line: 32
# File: docs/9.x/filesystem.md, line: 31
# File: docs/master/filesystem.md, line: 31
#. type: Plain text
msgid "Laravel's filesystem configuration file is located at `config/filesystems.php`. Within this file, you may configure all of your filesystem \"disks\". Each disk represents a particular storage driver and storage location. Example configurations for each supported driver are included in the configuration file so you can modify the configuration to reflect your storage preferences and credentials."
msgstr "Laravel 的檔案系統設定檔位在 `config/filesystems.php`。在這個檔案中，我們可以設定所有的檔案系統「^[Disk](磁碟)」。各個 Disk 都代表了一個特定的儲存空間 Driver 與儲存位置。該設定檔內已包含了各個支援 Driver 的範例設定，讓你能修改這些設定來反映出儲存空間偏好與認證方式。"

# File: docs/8.x/filesystem.md, line: 34
# File: docs/9.x/filesystem.md, line: 33
# File: docs/master/filesystem.md, line: 33
#. type: Plain text
msgid "The `local` driver interacts with files stored locally on the server running the Laravel application while the `s3` driver is used to write to Amazon's S3 cloud storage service."
msgstr "`local` Driver 負責處理保存在執行該 Laravel 專案之本機伺服器上的檔案。而 `s3` Driver 則用來將檔案寫入 Amazon 的 S3 雲端儲存服務。"

# File: docs/8.x/filesystem.md, line: 36
# File: docs/9.x/filesystem.md, line: 35
# File: docs/master/filesystem.md, line: 35
#. type: Plain text
#, no-wrap
msgid "> {tip} You may configure as many disks as you like and may even have multiple disks that use the same driver.\n"
msgstr "> {tip} 可以隨意設定多個 Disk，甚至也可以設定多個使用相同 Driver 的 Disk。\n"

# File: docs/8.x/filesystem.md, line: 38
# File: docs/9.x/filesystem.md, line: 37
# File: docs/master/filesystem.md, line: 37
#. type: Plain text
#, no-wrap
msgid "<a name=\"the-local-driver\"></a>\n"
msgstr "<a name=\"the-local-driver\"></a>\n"

# File: docs/8.x/filesystem.md, line: 38
# File: docs/9.x/filesystem.md, line: 37
# File: docs/master/filesystem.md, line: 37
#. type: Title ###
#, no-wrap
msgid "The Local Driver"
msgstr "「Local」Driver"

# File: docs/8.x/filesystem.md, line: 41
# File: docs/9.x/filesystem.md, line: 40
# File: docs/master/filesystem.md, line: 40
#. type: Plain text
msgid "When using the `local` driver, all file operations are relative to the `root` directory defined in your `filesystems` configuration file. By default, this value is set to the `storage/app` directory. Therefore, the following method would write to `storage/app/example.txt`:"
msgstr "使用 `local` Driver 時，所有的檔案操作都相對於 `filesystems` 設定檔中定義的 `root` 根目錄。預設情況下，這個值設為 `storage/app` 目錄。因此，下列方法會寫入 `storage/app/example.txt`："

# File: docs/8.x/filesystem.md, line: 43
# File: docs/8.x/filesystem.md, line: 162
# File: docs/8.x/filesystem.md, line: 219
# File: docs/8.x/filesystem.md, line: 232
# File: docs/8.x/filesystem.md, line: 295
# File: docs/8.x/filesystem.md, line: 308
# File: docs/8.x/filesystem.md, line: 317
# File: docs/8.x/filesystem.md, line: 453
# File: docs/8.x/filesystem.md, line: 498
# File: docs/8.x/filesystem.md, line: 506
# File: docs/8.x/filesystem.md, line: 518
# File: docs/9.x/filesystem.md, line: 42
# File: docs/9.x/filesystem.md, line: 142
# File: docs/9.x/filesystem.md, line: 199
# File: docs/9.x/filesystem.md, line: 212
# File: docs/9.x/filesystem.md, line: 275
# File: docs/9.x/filesystem.md, line: 288
# File: docs/9.x/filesystem.md, line: 297
# File: docs/9.x/filesystem.md, line: 433
# File: docs/9.x/filesystem.md, line: 478
# File: docs/9.x/filesystem.md, line: 486
# File: docs/9.x/filesystem.md, line: 498
# File: docs/master/filesystem.md, line: 42
# File: docs/master/filesystem.md, line: 142
# File: docs/master/filesystem.md, line: 199
# File: docs/master/filesystem.md, line: 212
# File: docs/master/filesystem.md, line: 275
# File: docs/master/filesystem.md, line: 288
# File: docs/master/filesystem.md, line: 297
# File: docs/master/filesystem.md, line: 433
# File: docs/master/filesystem.md, line: 478
# File: docs/master/filesystem.md, line: 486
# File: docs/master/filesystem.md, line: 498
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Support\\Facades\\Storage;\n"
msgstr "    use Illuminate\\Support\\Facades\\Storage;\n"

# File: docs/8.x/filesystem.md, line: 45
# File: docs/9.x/filesystem.md, line: 44
# File: docs/master/filesystem.md, line: 44
#. type: Plain text
#, no-wrap
msgid "    Storage::disk('local')->put('example.txt', 'Contents');\n"
msgstr "    Storage::disk('local')->put('example.txt', 'Contents');\n"

# File: docs/8.x/filesystem.md, line: 47
# File: docs/9.x/filesystem.md, line: 46
# File: docs/master/filesystem.md, line: 46
#. type: Plain text
#, no-wrap
msgid "<a name=\"the-public-disk\"></a>\n"
msgstr "<a name=\"the-public-disk\"></a>\n"

# File: docs/8.x/filesystem.md, line: 47
# File: docs/9.x/filesystem.md, line: 46
# File: docs/master/filesystem.md, line: 46
#. type: Title ###
#, no-wrap
msgid "The Public Disk"
msgstr "「Public」Disk"

# File: docs/8.x/filesystem.md, line: 50
# File: docs/9.x/filesystem.md, line: 49
# File: docs/master/filesystem.md, line: 49
#. type: Plain text
msgid "The `public` disk included in your application's `filesystems` configuration file is intended for files that are going to be publicly accessible. By default, the `public` disk uses the `local` driver and stores its files in `storage/app/public`."
msgstr "專案中的 `filesystems` 設定檔內有個 `public` Disk，`public` Disk 是用來處理要提供公開存取的檔案。預設情況下，`public` Disk 使用 `local` Driver，並將檔案保存在 `storage/app/public`。"

# File: docs/8.x/filesystem.md, line: 52
# File: docs/9.x/filesystem.md, line: 51
# File: docs/master/filesystem.md, line: 51
#. type: Plain text
msgid "To make these files accessible from the web, you should create a symbolic link from `public/storage` to `storage/app/public`. Utilizing this folder convention will keep your publicly accessible files in one directory that can be easily shared across deployments when using zero down-time deployment systems like [Envoyer](https://envoyer.io)."
msgstr "為了這些檔案可在網頁上存取，請建立一個 `public/storage` 到 `storage/app/public` 的^[符號連結](Symbolic Link)。使用這個資料夾慣例來把所有可公開存取的檔案放到同一個資料夾內，就你在使用如 [Envoyer](https://envoyer.io) 這類不停機部署系統時也能輕鬆的在多個部署間共用這個資料夾。"

# File: docs/8.x/filesystem.md, line: 54
# File: docs/9.x/filesystem.md, line: 53
# File: docs/master/filesystem.md, line: 53
#. type: Plain text
msgid "To create the symbolic link, you may use the `storage:link` Artisan command:"
msgstr "若要建立符號連結，可使用 `storage:link` Artisan 指令："

# File: docs/8.x/filesystem.md, line: 56
#. type: Plain text
#, no-wrap
msgid "    php artisan storage:link\n"
msgstr "    php artisan storage:link\n"

# File: docs/8.x/filesystem.md, line: 58
# File: docs/9.x/filesystem.md, line: 59
# File: docs/master/filesystem.md, line: 59
#. type: Plain text
msgid "Once a file has been stored and the symbolic link has been created, you can create a URL to the files using the `asset` helper:"
msgstr "保存檔案並建立好符號連結後，就可以使用 `asset` 輔助函式來建立該檔案的 URL："

# File: docs/8.x/filesystem.md, line: 60
# File: docs/9.x/filesystem.md, line: 61
# File: docs/master/filesystem.md, line: 61
#. type: Plain text
#, no-wrap
msgid "    echo asset('storage/file.txt');\n"
msgstr "    echo asset('storage/file.txt');\n"

# File: docs/8.x/filesystem.md, line: 62
# File: docs/9.x/filesystem.md, line: 63
# File: docs/master/filesystem.md, line: 63
#. type: Plain text
msgid "You may configure additional symbolic links in your `filesystems` configuration file. Each of the configured links will be created when you run the `storage:link` command:"
msgstr "也可以在 `filesystems` 設定檔中設定其他符號連結。在執行 `storage:link` 指令時，會建立設定中的各個符號連結："

# File: docs/8.x/filesystem.md, line: 67
# File: docs/9.x/filesystem.md, line: 68
# File: docs/master/filesystem.md, line: 68
#. type: Plain text
#, no-wrap
msgid "    'links' => [\n"
"        public_path('storage') => storage_path('app/public'),\n"
"        public_path('images') => storage_path('app/images'),\n"
"    ],\n"
msgstr "    'links' => [\n"
"        public_path('storage') => storage_path('app/public'),\n"
"        public_path('images') => storage_path('app/images'),\n"
"    ],\n"

# File: docs/8.x/filesystem.md, line: 69
# File: docs/9.x/filesystem.md, line: 70
# File: docs/master/filesystem.md, line: 70
#. type: Plain text
#, no-wrap
msgid "<a name=\"driver-prerequisites\"></a>\n"
msgstr "<a name=\"driver-prerequisites\"></a>\n"

# File: docs/8.x/filesystem.md, line: 69
# File: docs/9.x/filesystem.md, line: 70
# File: docs/master/filesystem.md, line: 70
#. type: Title ###
#, no-wrap
msgid "Driver Prerequisites"
msgstr "Driver 的前置需求"

# File: docs/8.x/filesystem.md, line: 72
# File: docs/9.x/filesystem.md, line: 73
# File: docs/master/filesystem.md, line: 73
#. type: Plain text
#, no-wrap
msgid "<a name=\"composer-packages\"></a>\n"
msgstr "<a name=\"composer-packages\"></a>\n"

# File: docs/8.x/filesystem.md, line: 72
# File: docs/9.x/filesystem.md, line: 73
# File: docs/master/filesystem.md, line: 73
#. type: Title ####
#, no-wrap
msgid "Composer Packages"
msgstr "Composer 套件"

# File: docs/8.x/filesystem.md, line: 75
# File: docs/9.x/filesystem.md, line: 76
# File: docs/master/filesystem.md, line: 76
#. type: Plain text
msgid "Before using the S3 or SFTP drivers, you will need to install the appropriate package via the Composer package manager:"
msgstr "使用 S3 或 SFTP Driver 前，需要使用 Composer 套件管理員安裝適當的套件："

# File: docs/8.x/filesystem.md, line: 78
#. type: Plain text
msgid "- Amazon S3: `composer require --with-all-dependencies league/flysystem-aws-s3-v3 \"^1.0\"` - SFTP: `composer require league/flysystem-sftp \"~1.0\"`"
msgstr "- Amazon S3: `composer require --with-all-dependencies league/flysystem-aws-s3-v3 \"^1.0\"`\n"
"- SFTP: `composer require league/flysystem-sftp \"~1.0\"`"

# File: docs/8.x/filesystem.md, line: 80
#. type: Plain text
msgid "In addition, you may choose to install a cached adapter for increased performance:"
msgstr "此外，也可選擇安裝 ^[Cached Adapter](快取配接器) 來增加效能："

# File: docs/8.x/filesystem.md, line: 82
#. type: Plain text
msgid "- CachedAdapter: `composer require league/flysystem-cached-adapter \"~1.0\"`"
msgstr "- CachedAdapter: `composer require league/flysystem-cached-adapter \"~1.0\"`"

# File: docs/8.x/filesystem.md, line: 84
# File: docs/9.x/filesystem.md, line: 81
# File: docs/master/filesystem.md, line: 81
#. type: Plain text
#, no-wrap
msgid "<a name=\"s3-driver-configuration\"></a>\n"
msgstr "<a name=\"s3-driver-configuration\"></a>\n"

# File: docs/8.x/filesystem.md, line: 84
# File: docs/9.x/filesystem.md, line: 81
# File: docs/master/filesystem.md, line: 81
#. type: Title ####
#, no-wrap
msgid "S3 Driver Configuration"
msgstr "S3 Driver 設定"

# File: docs/8.x/filesystem.md, line: 87
# File: docs/9.x/filesystem.md, line: 84
# File: docs/master/filesystem.md, line: 84
#. type: Plain text
msgid "The S3 driver configuration information is located in your `config/filesystems.php` configuration file. This file contains an example configuration array for an S3 driver. You are free to modify this array with your own S3 configuration and credentials. For convenience, these environment variables match the naming convention used by the AWS CLI."
msgstr "S3 Driver 的設定資訊保存在 `config/filesystems.php` 設定檔內。這個檔案中包含了用於 S3 Driver 的範例設定。可以自行將陣列改為你的 S3 設定與認證資訊。為了方便起見，這些環境變數的名稱都符合 AWS CLI 使用的命名慣例。"

# File: docs/8.x/filesystem.md, line: 89
# File: docs/9.x/filesystem.md, line: 86
# File: docs/master/filesystem.md, line: 86
#. type: Plain text
#, no-wrap
msgid "<a name=\"ftp-driver-configuration\"></a>\n"
msgstr "<a name=\"ftp-driver-configuration\"></a>\n"

# File: docs/8.x/filesystem.md, line: 89
# File: docs/9.x/filesystem.md, line: 86
# File: docs/master/filesystem.md, line: 86
#. type: Title ####
#, no-wrap
msgid "FTP Driver Configuration"
msgstr "FTP Driver 設定"

# File: docs/8.x/filesystem.md, line: 92
# File: docs/9.x/filesystem.md, line: 89
# File: docs/master/filesystem.md, line: 89
#. type: Plain text
msgid "Laravel's Flysystem integrations work great with FTP; however, a sample configuration is not included with the framework's default `filesystems.php` configuration file. If you need to configure an FTP filesystem, you may use the configuration example below:"
msgstr "Laravel 的 Flysystem 整合可以完美配合 FTP。不過，Laravel 的預設 `filesystems.php` 設定檔中並未包含 FTP 的範例設定。若有需要設定 FTP 檔案系統，可使用下列範例設定："

# File: docs/8.x/filesystem.md, line: 98
# File: docs/9.x/filesystem.md, line: 95
# File: docs/master/filesystem.md, line: 95
#. type: Plain text
#, no-wrap
msgid "    'ftp' => [\n"
"        'driver' => 'ftp',\n"
"        'host' => env('FTP_HOST'),\n"
"        'username' => env('FTP_USERNAME'),\n"
"        'password' => env('FTP_PASSWORD'),\n"
msgstr "    'ftp' => [\n"
"        'driver' => 'ftp',\n"
"        'host' => env('FTP_HOST'),\n"
"        'username' => env('FTP_USERNAME'),\n"
"        'password' => env('FTP_PASSWORD'),\n"

# File: docs/8.x/filesystem.md, line: 106
# File: docs/9.x/filesystem.md, line: 103
# File: docs/master/filesystem.md, line: 103
#. type: Plain text
#, no-wrap
msgid "        // Optional FTP Settings...\n"
"        // 'port' => env('FTP_PORT', 21),\n"
"        // 'root' => env('FTP_ROOT'),\n"
"        // 'passive' => true,\n"
"        // 'ssl' => true,\n"
"        // 'timeout' => 30,\n"
"    ],\n"
msgstr "        // 可選的 FTP 設定...\n"
"        // 'port' => env('FTP_PORT', 21),\n"
"        // 'root' => env('FTP_ROOT'),\n"
"        // 'passive' => true,\n"
"        // 'ssl' => true,\n"
"        // 'timeout' => 30,\n"
"    ],\n"

# File: docs/8.x/filesystem.md, line: 108
# File: docs/9.x/filesystem.md, line: 105
# File: docs/master/filesystem.md, line: 105
#. type: Plain text
#, no-wrap
msgid "<a name=\"sftp-driver-configuration\"></a>\n"
msgstr "<a name=\"sftp-driver-configuration\"></a>\n"

# File: docs/8.x/filesystem.md, line: 108
# File: docs/9.x/filesystem.md, line: 105
# File: docs/master/filesystem.md, line: 105
#. type: Title ####
#, no-wrap
msgid "SFTP Driver Configuration"
msgstr "SFTP Driver 設定"

# File: docs/8.x/filesystem.md, line: 111
# File: docs/9.x/filesystem.md, line: 108
# File: docs/master/filesystem.md, line: 108
#. type: Plain text
msgid "Laravel's Flysystem integrations work great with SFTP; however, a sample configuration is not included with the framework's default `filesystems.php` configuration file. If you need to configure an SFTP filesystem, you may use the configuration example below:"
msgstr "Laravel 的 Flysystem 整合可以完美配合 SFTP。不過，Laravel 的預設 `filesystems.php` 設定檔中並未包含 SFTP 的範例設定。若有需要設定 SFTP 檔案系統，可使用下列範例設定："

# File: docs/8.x/filesystem.md, line: 115
# File: docs/9.x/filesystem.md, line: 112
# File: docs/master/filesystem.md, line: 112
#. type: Plain text
#, no-wrap
msgid "    'sftp' => [\n"
"        'driver' => 'sftp',\n"
"        'host' => env('SFTP_HOST'),\n"
msgstr "    'sftp' => [\n"
"        'driver' => 'sftp',\n"
"        'host' => env('SFTP_HOST'),\n"

# File: docs/8.x/filesystem.md, line: 119
# File: docs/9.x/filesystem.md, line: 116
# File: docs/master/filesystem.md, line: 116
#. type: Plain text
#, no-wrap
msgid "        // Settings for basic authentication...\n"
"        'username' => env('SFTP_USERNAME'),\n"
"        'password' => env('SFTP_PASSWORD'),\n"
msgstr "        // 設定基礎認證...\n"
"        'username' => env('SFTP_USERNAME'),\n"
"        'password' => env('SFTP_PASSWORD'),\n"

# File: docs/8.x/filesystem.md, line: 123
# File: docs/9.x/filesystem.md, line: 120
# File: docs/master/filesystem.md, line: 120
#. type: Plain text
#, no-wrap
msgid "        // Settings for SSH key based authentication with encryption password...\n"
"        'privateKey' => env('SFTP_PRIVATE_KEY'),\n"
"        'password' => env('SFTP_PASSWORD'),\n"
msgstr "        // 設定有加密密碼之基於 SSH 密鑰的認證...\n"
"        'privateKey' => env('SFTP_PRIVATE_KEY'),\n"
"        'password' => env('SFTP_PASSWORD'),\n"

# File: docs/8.x/filesystem.md, line: 129
# File: docs/9.x/filesystem.md, line: 126
# File: docs/master/filesystem.md, line: 126
#. type: Plain text
#, no-wrap
msgid "        // Optional SFTP Settings...\n"
"        // 'port' => env('SFTP_PORT', 22),\n"
"        // 'root' => env('SFTP_ROOT'),\n"
"        // 'timeout' => 30,\n"
"    ],\n"
msgstr "        // 可選的 SFTP 設定...\n"
"        // 'port' => env('SFTP_PORT', 22),\n"
"        // 'root' => env('SFTP_ROOT'),\n"
"        // 'timeout' => 30,\n"
"    ],\n"

# File: docs/8.x/filesystem.md, line: 131
# File: docs/9.x/filesystem.md, line: 128
# File: docs/master/filesystem.md, line: 128
#. type: Plain text
#, no-wrap
msgid "<a name=\"amazon-s3-compatible-filesystems\"></a>\n"
msgstr "<a name=\"amazon-s3-compatible-filesystems\"></a>\n"

# File: docs/8.x/filesystem.md, line: 131
# File: docs/9.x/filesystem.md, line: 128
# File: docs/master/filesystem.md, line: 128
#. type: Title ###
#, no-wrap
msgid "Amazon S3 Compatible Filesystems"
msgstr "相容於 Amazon S3 的檔案系統"

# File: docs/8.x/filesystem.md, line: 134
# File: docs/9.x/filesystem.md, line: 131
# File: docs/master/filesystem.md, line: 131
#. type: Plain text
msgid "By default, your application's `filesystems` configuration file contains a disk configuration for the `s3` disk. In addition to using this disk to interact with Amazon S3, you may use it to interact with any S3 compatible file storage service such as [MinIO](https://github.com/minio/minio) or [DigitalOcean Spaces](https://www.digitalocean.com/products/spaces/)."
msgstr "預設情況下，專案的 `filesystems` 設定檔中已包含了一個 `s3` Disk 設定。除了以該 Disk 來使用 Amazon S3 外，還可以通過這個 Disk 來使用相容於 S3 的檔案存放服務，如 [MinIO](https://github.com/minio/minio) 或 [DigitalOcean Spaces](https://www.digitalocean.com/products/spaces/)。"

# File: docs/8.x/filesystem.md, line: 136
# File: docs/9.x/filesystem.md, line: 133
# File: docs/master/filesystem.md, line: 133
#. type: Plain text
msgid "Typically, after updating the disk's credentials to match the credentials of the service you are planning to use, you only need to update the value of the `url` configuration option. This option's value is typically defined via the `AWS_ENDPOINT` environment variable:"
msgstr "一般來說，為 Disk 設定要使用服務的認證資訊後，就只需要更改 `url` 設定選項即可。這個選項值通常是以 `AWS_ENGPOINT` 環境變數定義的："

# File: docs/8.x/filesystem.md, line: 138
# File: docs/9.x/filesystem.md, line: 135
# File: docs/master/filesystem.md, line: 135
#. type: Plain text
#, no-wrap
msgid "    'endpoint' => env('AWS_ENDPOINT', 'https://minio:9000'),\n"
msgstr "    'endpoint' => env('AWS_ENDPOINT', 'https://minio:9000'),\n"

# File: docs/8.x/filesystem.md, line: 140
#. type: Plain text
#, no-wrap
msgid "<a name=\"caching\"></a>\n"
msgstr "<a name=\"caching\"></a>\n"

# File: docs/8.x/filesystem.md, line: 140
#. type: Title ###
#, no-wrap
msgid "Caching"
msgstr "快取"

# File: docs/8.x/filesystem.md, line: 143
#. type: Plain text
msgid "To enable caching for a given disk, you may add a `cache` directive to the disk's configuration options. The `cache` option should be an array of caching options containing the `disk` name, the `expire` time in seconds, and the cache `prefix`:"
msgstr "若要在給定 Disk 上啟用快取，只需要在該 Disk 的設定選項中加上 `cache` 指示詞即可。`cache` 選項應為一個快取選項陣列，其中包含：`disk` 名稱、`expire` 單位為秒的有效期間、`prefix` 快取前置詞等："

# File: docs/8.x/filesystem.md, line: 146
#. type: Plain text
#, no-wrap
msgid "    's3' => [\n"
"        'driver' => 's3',\n"
msgstr "    's3' => [\n"
"        'driver' => 's3',\n"

# File: docs/8.x/filesystem.md, line: 148
#. type: Plain text
#, no-wrap
msgid "        // Other Disk Options...\n"
msgstr "        // 其他 Disk 選項...\n"

# File: docs/8.x/filesystem.md, line: 155
#. type: Plain text
#, no-wrap
msgid "        'cache' => [\n"
"            'store' => 'memcached',\n"
"            'expire' => 600,\n"
"            'prefix' => 'cache-prefix',\n"
"        ],\n"
"    ],\n"
msgstr "        'cache' => [\n"
"            'store' => 'memcached',\n"
"            'expire' => 600,\n"
"            'prefix' => 'cache-prefix',\n"
"        ],\n"
"    ],\n"

# File: docs/8.x/filesystem.md, line: 157
# File: docs/9.x/filesystem.md, line: 137
# File: docs/master/filesystem.md, line: 137
#. type: Plain text
#, no-wrap
msgid "<a name=\"obtaining-disk-instances\"></a>\n"
msgstr "<a name=\"obtaining-disk-instances\"></a>\n"

# File: docs/8.x/filesystem.md, line: 157
# File: docs/9.x/filesystem.md, line: 137
# File: docs/master/filesystem.md, line: 137
#. type: Title ##
#, no-wrap
msgid "Obtaining Disk Instances"
msgstr "取得 Disk 實體"

# File: docs/8.x/filesystem.md, line: 160
# File: docs/9.x/filesystem.md, line: 140
# File: docs/master/filesystem.md, line: 140
#. type: Plain text
msgid "The `Storage` facade may be used to interact with any of your configured disks. For example, you may use the `put` method on the facade to store an avatar on the default disk. If you call methods on the `Storage` facade without first calling the `disk` method, the method will automatically be passed to the default disk:"
msgstr "可通過 `Storage` Facade 來與設定好的任一 Disk 互動。舉例來說，可以使用 Facade 上的 `put` 方法來將使用者圖片保存在預設 Disk 內。若在呼叫方法時沒有在 `Storage` Facade 上先呼叫 `disk` 方法，則這個方法呼叫會自動被傳到預設的 Disk 上："

# File: docs/8.x/filesystem.md, line: 164
# File: docs/9.x/filesystem.md, line: 144
# File: docs/master/filesystem.md, line: 144
#. type: Plain text
#, no-wrap
msgid "    Storage::put('avatars/1', $content);\n"
msgstr "    Storage::put('avatars/1', $content);\n"

# File: docs/8.x/filesystem.md, line: 166
# File: docs/9.x/filesystem.md, line: 146
# File: docs/master/filesystem.md, line: 146
#. type: Plain text
msgid "If your application interacts with multiple disks, you may use the `disk` method on the `Storage` facade to work with files on a particular disk:"
msgstr "若你的專案使用多個 Disk，可使用 `Storage` Facade 上的 `disk` 方法來在特定 Disk 上處理檔案："

# File: docs/8.x/filesystem.md, line: 168
# File: docs/9.x/filesystem.md, line: 148
# File: docs/master/filesystem.md, line: 148
#. type: Plain text
#, no-wrap
msgid "    Storage::disk('s3')->put('avatars/1', $content);\n"
msgstr "    Storage::disk('s3')->put('avatars/1', $content);\n"

# File: docs/8.x/filesystem.md, line: 170
# File: docs/9.x/filesystem.md, line: 150
# File: docs/master/filesystem.md, line: 150
#. type: Plain text
#, no-wrap
msgid "<a name=\"on-demand-disks\"></a>\n"
msgstr "<a name=\"on-demand-disks\"></a>\n"

# File: docs/8.x/filesystem.md, line: 170
# File: docs/9.x/filesystem.md, line: 150
# File: docs/master/filesystem.md, line: 150
#. type: Title ###
#, no-wrap
msgid "On-Demand Disks"
msgstr "隨需提供的 Disk"

# File: docs/8.x/filesystem.md, line: 173
# File: docs/9.x/filesystem.md, line: 153
# File: docs/master/filesystem.md, line: 153
#. type: Plain text
msgid "Sometimes you may wish to create a disk at runtime using a given configuration without that configuration actually being present in your application's `filesystems` configuration file. To accomplish this, you may pass a configuration array to the `Storage` facade's `build` method:"
msgstr "有時候，我們會想在不實際將設定寫入 `filesystems` 設定檔的情況下，在執行階段直接通過給定的一組設定來建立 Disk。若要在執行階段建立 Disk，請將一組設定陣列傳給 `Storage` Facade 的 `build` 方法："

# File: docs/8.x/filesystem.md, line: 174
# File: docs/9.x/filesystem.md, line: 154
# File: docs/master/filesystem.md, line: 154
#. type: Code fence info string
#, no-wrap
msgid "php"
msgstr "php"

# File: docs/8.x/filesystem.md, line: 174
# File: docs/9.x/filesystem.md, line: 154
# File: docs/master/filesystem.md, line: 154
#. type: Plain text
#, no-wrap
msgid "use Illuminate\\Support\\Facades\\Storage;\n\n"
"$disk = Storage::build([\n"
"    'driver' => 'local',\n"
"    'root' => '/path/to/root',\n"
"]);\n\n"
"$disk->put('image.jpg', $content);\n"
msgstr "use Illuminate\\Support\\Facades\\Storage;\n\n"
"$disk = Storage::build([\n"
"    'driver' => 'local',\n"
"    'root' => '/path/to/root',\n"
"]);\n\n"
"$disk->put('image.jpg', $content);\n"

# File: docs/8.x/filesystem.md, line: 186
# File: docs/9.x/filesystem.md, line: 166
# File: docs/master/filesystem.md, line: 166
#. type: Plain text
#, no-wrap
msgid "<a name=\"retrieving-files\"></a>\n"
msgstr "<a name=\"retrieving-files\"></a>\n"

# File: docs/8.x/filesystem.md, line: 186
# File: docs/9.x/filesystem.md, line: 166
# File: docs/master/filesystem.md, line: 166
#. type: Title ##
#, no-wrap
msgid "Retrieving Files"
msgstr "取得檔案"

# File: docs/8.x/filesystem.md, line: 189
# File: docs/9.x/filesystem.md, line: 169
# File: docs/master/filesystem.md, line: 169
#. type: Plain text
msgid "The `get` method may be used to retrieve the contents of a file. The raw string contents of the file will be returned by the method. Remember, all file paths should be specified relative to the disk's \"root\" location:"
msgstr "`get` 方法可用來取得檔案內容。該方法會回傳檔案的原始字串內容。請記得，所有檔案路徑都是相對於該 Disk 所指定的「root」根目錄："

# File: docs/8.x/filesystem.md, line: 191
# File: docs/9.x/filesystem.md, line: 171
# File: docs/master/filesystem.md, line: 171
#. type: Plain text
#, no-wrap
msgid "    $contents = Storage::get('file.jpg');\n"
msgstr "    $contents = Storage::get('file.jpg');\n"

# File: docs/8.x/filesystem.md, line: 193
# File: docs/9.x/filesystem.md, line: 173
# File: docs/master/filesystem.md, line: 173
#. type: Plain text
msgid "The `exists` method may be used to determine if a file exists on the disk:"
msgstr "`exists` 方法可用來判斷某個檔案是否存在於 Disk 上："

# File: docs/8.x/filesystem.md, line: 197
# File: docs/9.x/filesystem.md, line: 177
# File: docs/master/filesystem.md, line: 177
#. type: Plain text
#, no-wrap
msgid "    if (Storage::disk('s3')->exists('file.jpg')) {\n"
"        // ...\n"
"    }\n"
msgstr "    if (Storage::disk('s3')->exists('file.jpg')) {\n"
"        // ...\n"
"    }\n"

# File: docs/8.x/filesystem.md, line: 199
# File: docs/9.x/filesystem.md, line: 179
# File: docs/master/filesystem.md, line: 179
#. type: Plain text
msgid "The `missing` method may be used to determine if a file is missing from the disk:"
msgstr "可使用 `missing` 方法來判斷 Disk 上是否不存在這個檔案："

# File: docs/8.x/filesystem.md, line: 203
# File: docs/9.x/filesystem.md, line: 183
# File: docs/master/filesystem.md, line: 183
#. type: Plain text
#, no-wrap
msgid "    if (Storage::disk('s3')->missing('file.jpg')) {\n"
"        // ...\n"
"    }\n"
msgstr "    if (Storage::disk('s3')->missing('file.jpg')) {\n"
"        // ...\n"
"    }\n"

# File: docs/8.x/filesystem.md, line: 205
# File: docs/9.x/filesystem.md, line: 185
# File: docs/master/filesystem.md, line: 185
#. type: Plain text
#, no-wrap
msgid "<a name=\"downloading-files\"></a>\n"
msgstr "<a name=\"downloading-files\"></a>\n"

# File: docs/8.x/filesystem.md, line: 205
# File: docs/9.x/filesystem.md, line: 185
# File: docs/master/filesystem.md, line: 185
#. type: Title ###
#, no-wrap
msgid "Downloading Files"
msgstr "下載檔案"

# File: docs/8.x/filesystem.md, line: 208
# File: docs/9.x/filesystem.md, line: 188
# File: docs/master/filesystem.md, line: 188
#. type: Plain text
msgid "The `download` method may be used to generate a response that forces the user's browser to download the file at the given path. The `download` method accepts a filename as the second argument to the method, which will determine the filename that is seen by the user downloading the file. Finally, you may pass an array of HTTP headers as the third argument to the method:"
msgstr "可使用 `download` 方法來產生一個強制使用者在給定路徑上下載檔案的 Response。`download` 方法接受檔案名稱作為其第二個引數，該引數用來判斷使用者看到的檔案名稱。最後，我們可以傳入一組包含 HTTP 標頭的陣列作為該方法的第三個引數："

# File: docs/8.x/filesystem.md, line: 210
# File: docs/9.x/filesystem.md, line: 190
# File: docs/master/filesystem.md, line: 190
#. type: Plain text
#, no-wrap
msgid "    return Storage::download('file.jpg');\n"
msgstr "    return Storage::download('file.jpg');\n"

# File: docs/8.x/filesystem.md, line: 212
# File: docs/9.x/filesystem.md, line: 192
# File: docs/master/filesystem.md, line: 192
#. type: Plain text
#, no-wrap
msgid "    return Storage::download('file.jpg', $name, $headers);\n"
msgstr "    return Storage::download('file.jpg', $name, $headers);\n"

# File: docs/8.x/filesystem.md, line: 214
# File: docs/9.x/filesystem.md, line: 194
# File: docs/master/filesystem.md, line: 194
#. type: Plain text
#, no-wrap
msgid "<a name=\"file-urls\"></a>\n"
msgstr "<a name=\"file-urls\"></a>\n"

# File: docs/8.x/filesystem.md, line: 214
# File: docs/9.x/filesystem.md, line: 194
# File: docs/master/filesystem.md, line: 194
#. type: Title ###
#, no-wrap
msgid "File URLs"
msgstr "檔案 URL"

# File: docs/8.x/filesystem.md, line: 217
# File: docs/9.x/filesystem.md, line: 197
# File: docs/master/filesystem.md, line: 197
#. type: Plain text
msgid "You may use the `url` method to get the URL for a given file. If you are using the `local` driver, this will typically just prepend `/storage` to the given path and return a relative URL to the file. If you are using the `s3` driver, the fully qualified remote URL will be returned:"
msgstr "可以使用 `url` 來取得給定檔案的 URL。若使用 `local` Driver，通常這個網址就只是在給定路徑前方加上 `/storage` 然後回傳該檔案的相對 URL 而已。若使用 `s3` Driver，則會回傳完整的遠端 URL："

# File: docs/8.x/filesystem.md, line: 221
# File: docs/9.x/filesystem.md, line: 201
# File: docs/master/filesystem.md, line: 201
#. type: Plain text
#, no-wrap
msgid "    $url = Storage::url('file.jpg');\n"
msgstr "    $url = Storage::url('file.jpg');\n"

# File: docs/8.x/filesystem.md, line: 223
# File: docs/9.x/filesystem.md, line: 203
# File: docs/master/filesystem.md, line: 203
#. type: Plain text
msgid "When using the `local` driver, all files that should be publicly accessible should be placed in the `storage/app/public` directory. Furthermore, you should [create a symbolic link](#the-public-disk) at `public/storage` which points to the `storage/app/public` directory."
msgstr "使用 `local` Driver 時，所有要供公開存取的檔案都應放在 `storage/app/public` 目錄內。此外，也應[建立一個符號連結](#the-public-disk)來將 `public/storage` 指向 `storage/app/public` 目錄。"

# File: docs/8.x/filesystem.md, line: 225
# File: docs/9.x/filesystem.md, line: 205
# File: docs/master/filesystem.md, line: 205
#. type: Plain text
#, no-wrap
msgid "> {note} When using the `local` driver, the return value of `url` is not URL encoded. For this reason, we recommend always storing your files using names that will create valid URLs.\n"
msgstr "> {note} 使用 `local` Driver 時，`url` 的回傳值未經過 URL 編碼。因此，我們建議你只使用能產生有效 URL 的檔名來保存檔案。\n"

# File: docs/8.x/filesystem.md, line: 227
# File: docs/9.x/filesystem.md, line: 207
# File: docs/master/filesystem.md, line: 207
#. type: Plain text
#, no-wrap
msgid "<a name=\"temporary-urls\"></a>\n"
msgstr "<a name=\"temporary-urls\"></a>\n"

# File: docs/8.x/filesystem.md, line: 227
# File: docs/9.x/filesystem.md, line: 207
# File: docs/master/filesystem.md, line: 207
#. type: Title ####
#, no-wrap
msgid "Temporary URLs"
msgstr "時效性 URL"

# File: docs/8.x/filesystem.md, line: 230
# File: docs/9.x/filesystem.md, line: 210
# File: docs/master/filesystem.md, line: 210
#. type: Plain text
msgid "Using the `temporaryUrl` method, you may create temporary URLs to files stored using the `s3` driver. This method accepts a path and a `DateTime` instance specifying when the URL should expire:"
msgstr "使用 `temporaryUrl` 方法，就可以為儲存在 `s3` Driver 上的檔案建立時效性 URL。這個方法接受一個路徑、以及一個用來指定 URL 何時過期的 `DateTime` 實體："

# File: docs/8.x/filesystem.md, line: 236
# File: docs/9.x/filesystem.md, line: 216
# File: docs/master/filesystem.md, line: 216
#. type: Plain text
#, no-wrap
msgid "    $url = Storage::temporaryUrl(\n"
"        'file.jpg', now()->addMinutes(5)\n"
"    );\n"
msgstr "    $url = Storage::temporaryUrl(\n"
"        'file.jpg', now()->addMinutes(5)\n"
"    );\n"

# File: docs/8.x/filesystem.md, line: 238
# File: docs/9.x/filesystem.md, line: 218
# File: docs/master/filesystem.md, line: 218
#. type: Plain text
msgid "If you need to specify additional [S3 request parameters](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectGET.html#RESTObjectGET-requests), you may pass the array of request parameters as the third argument to the `temporaryUrl` method:"
msgstr "若想指定額外的 [S3 Request 參數](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectGET.html#RESTObjectGET-requests)，只需要將 Request 參數陣列作為第三個引數傳給 `temporaryUrl` 方法即可："

# File: docs/8.x/filesystem.md, line: 247
# File: docs/9.x/filesystem.md, line: 227
# File: docs/master/filesystem.md, line: 227
#. type: Plain text
#, no-wrap
msgid "    $url = Storage::temporaryUrl(\n"
"        'file.jpg',\n"
"        now()->addMinutes(5),\n"
"        [\n"
"            'ResponseContentType' => 'application/octet-stream',\n"
"            'ResponseContentDisposition' => 'attachment; filename=file2.jpg',\n"
"        ]\n"
"    );\n"
msgstr "    $url = Storage::temporaryUrl(\n"
"        'file.jpg',\n"
"        now()->addMinutes(5),\n"
"        [\n"
"            'ResponseContentType' => 'application/octet-stream',\n"
"            'ResponseContentDisposition' => 'attachment; filename=file2.jpg',\n"
"        ]\n"
"    );\n"

# File: docs/8.x/filesystem.md, line: 249
# File: docs/9.x/filesystem.md, line: 229
# File: docs/master/filesystem.md, line: 229
#. type: Plain text
msgid "If you need to customize how temporary URLs are created for a specific storage disk, you can use the `buildTemporaryUrlsUsing` method. For example, this can be useful if you have a controller that allows you to download files stored via a disk that doesn't typically support temporary URLs. Usually, this method should be called from the `boot` method of a service provider:"
msgstr "若有需要自訂某個存放 Disk 要如何產生臨時 URL，可以使用 `buildTemporaryUrlsUsing` 方法。舉例來說，若有檔案儲存在不支援時效性 URL 的 Driver 上，而在某個 Controller 上我們又想讓使用者能下載這些檔案，就很適合使用這個方法。一般來說，應在某個 Service Provider 的 `boot` 方法內呼叫這個方法："

# File: docs/8.x/filesystem.md, line: 251
# File: docs/8.x/filesystem.md, line: 366
# File: docs/8.x/filesystem.md, line: 558
# File: docs/9.x/filesystem.md, line: 231
# File: docs/9.x/filesystem.md, line: 346
# File: docs/9.x/filesystem.md, line: 540
# File: docs/master/filesystem.md, line: 231
# File: docs/master/filesystem.md, line: 346
# File: docs/master/filesystem.md, line: 540
#. type: Plain text
#, no-wrap
msgid "    <?php\n"
msgstr "    <?php\n"

# File: docs/8.x/filesystem.md, line: 253
# File: docs/8.x/filesystem.md, line: 560
# File: docs/9.x/filesystem.md, line: 233
# File: docs/9.x/filesystem.md, line: 542
# File: docs/master/filesystem.md, line: 233
# File: docs/master/filesystem.md, line: 542
#. type: Plain text
#, no-wrap
msgid "    namespace App\\Providers;\n"
msgstr "    namespace App\\Providers;\n"

# File: docs/8.x/filesystem.md, line: 257
# File: docs/9.x/filesystem.md, line: 237
# File: docs/master/filesystem.md, line: 237
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Support\\Facades\\Storage;\n"
"    use Illuminate\\Support\\Facades\\URL;\n"
"    use Illuminate\\Support\\ServiceProvider;\n"
msgstr "    use Illuminate\\Support\\Facades\\Storage;\n"
"    use Illuminate\\Support\\Facades\\URL;\n"
"    use Illuminate\\Support\\ServiceProvider;\n"

# File: docs/8.x/filesystem.md, line: 276
# File: docs/9.x/filesystem.md, line: 256
# File: docs/master/filesystem.md, line: 256
#. type: Plain text
#, no-wrap
msgid "    class AppServiceProvider extends ServiceProvider\n"
"    {\n"
"        /**\n"
"         * Bootstrap any application services.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function boot()\n"
"        {\n"
"            Storage::disk('local')->buildTemporaryUrlsUsing(function ($path, $expiration, $options) {\n"
"                return URL::temporarySignedRoute(\n"
"                    'files.download',\n"
"                    $expiration,\n"
"                    array_merge($options, ['path' => $path])\n"
"                );\n"
"            });\n"
"        }\n"
"    }\n"
msgstr "    class AppServiceProvider extends ServiceProvider\n"
"    {\n"
"        /**\n"
"         * Bootstrap any application services.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function boot()\n"
"        {\n"
"            Storage::disk('local')->buildTemporaryUrlsUsing(function ($path, $expiration, $options) {\n"
"                return URL::temporarySignedRoute(\n"
"                    'files.download',\n"
"                    $expiration,\n"
"                    array_merge($options, ['path' => $path])\n"
"                );\n"
"            });\n"
"        }\n"
"    }\n"

# File: docs/8.x/filesystem.md, line: 278
# File: docs/9.x/filesystem.md, line: 258
# File: docs/master/filesystem.md, line: 258
#. type: Plain text
#, no-wrap
msgid "<a name=\"url-host-customization\"></a>\n"
msgstr "<a name=\"url-host-customization\"></a>\n"

# File: docs/8.x/filesystem.md, line: 278
# File: docs/9.x/filesystem.md, line: 258
# File: docs/master/filesystem.md, line: 258
#. type: Title ####
#, no-wrap
msgid "URL Host Customization"
msgstr "自訂 URL 主機"

# File: docs/8.x/filesystem.md, line: 281
# File: docs/9.x/filesystem.md, line: 261
# File: docs/master/filesystem.md, line: 261
#. type: Plain text
msgid "If you would like to pre-define the host for URLs generated using the `Storage` facade, you may add a `url` option to the disk's configuration array:"
msgstr "若想為 `Storage` Facade 產生的 URL 預先定義主機，可在 Disk 設定陣列內加上一個 `url` 選項："

# File: docs/8.x/filesystem.md, line: 288
# File: docs/9.x/filesystem.md, line: 268
# File: docs/master/filesystem.md, line: 268
#. type: Plain text
#, no-wrap
msgid "    'public' => [\n"
"        'driver' => 'local',\n"
"        'root' => storage_path('app/public'),\n"
"        'url' => env('APP_URL').'/storage',\n"
"        'visibility' => 'public',\n"
"    ],\n"
msgstr "    'public' => [\n"
"        'driver' => 'local',\n"
"        'root' => storage_path('app/public'),\n"
"        'url' => env('APP_URL').'/storage',\n"
"        'visibility' => 'public',\n"
"    ],\n"

# File: docs/8.x/filesystem.md, line: 290
# File: docs/9.x/filesystem.md, line: 270
# File: docs/master/filesystem.md, line: 270
#. type: Plain text
#, no-wrap
msgid "<a name=\"file-metadata\"></a>\n"
msgstr "<a name=\"file-metadata\"></a>\n"

# File: docs/8.x/filesystem.md, line: 290
# File: docs/9.x/filesystem.md, line: 270
# File: docs/master/filesystem.md, line: 270
#. type: Title ###
#, no-wrap
msgid "File Metadata"
msgstr "檔案詮釋資料"

# File: docs/8.x/filesystem.md, line: 293
# File: docs/9.x/filesystem.md, line: 273
# File: docs/master/filesystem.md, line: 273
#. type: Plain text
msgid "In addition to reading and writing files, Laravel can also provide information about the files themselves. For example, the `size` method may be used to get the size of a file in bytes:"
msgstr "除了讀寫檔案外，Laravel 還提供了一些有關檔案本身的資訊。舉例來說，`size` 方法可用來取得單位為^[位元組](Bytes)的檔案大小："

# File: docs/8.x/filesystem.md, line: 297
# File: docs/9.x/filesystem.md, line: 277
# File: docs/master/filesystem.md, line: 277
#. type: Plain text
#, no-wrap
msgid "    $size = Storage::size('file.jpg');\n"
msgstr "    $size = Storage::size('file.jpg');\n"

# File: docs/8.x/filesystem.md, line: 299
# File: docs/9.x/filesystem.md, line: 279
# File: docs/master/filesystem.md, line: 279
#. type: Plain text
msgid "The `lastModified` method returns the UNIX timestamp of the last time the file was modified:"
msgstr "`lastModified` 方法回傳以 UNIX ^[時戳](Timestamp)表示的檔案最後修改時間："

# File: docs/8.x/filesystem.md, line: 301
# File: docs/9.x/filesystem.md, line: 281
# File: docs/master/filesystem.md, line: 281
#. type: Plain text
#, no-wrap
msgid "    $time = Storage::lastModified('file.jpg');\n"
msgstr "    $time = Storage::lastModified('file.jpg');\n"

# File: docs/8.x/filesystem.md, line: 303
# File: docs/9.x/filesystem.md, line: 283
# File: docs/master/filesystem.md, line: 283
#. type: Plain text
#, no-wrap
msgid "<a name=\"file-paths\"></a>\n"
msgstr "<a name=\"file-paths\"></a>\n"

# File: docs/8.x/filesystem.md, line: 303
# File: docs/9.x/filesystem.md, line: 283
# File: docs/master/filesystem.md, line: 283
#. type: Title ####
#, no-wrap
msgid "File Paths"
msgstr "檔案路徑"

# File: docs/8.x/filesystem.md, line: 306
# File: docs/9.x/filesystem.md, line: 286
# File: docs/master/filesystem.md, line: 286
#. type: Plain text
msgid "You may use the `path` method to get the path for a given file. If you are using the `local` driver, this will return the absolute path to the file. If you are using the `s3` driver, this method will return the relative path to the file in the S3 bucket:"
msgstr "可以使用 `path` 方法來取得給定檔案的路徑。若使用 `local` Driver，該方法會回傳檔案的絕對路徑。若使用 `s3` Driver，該方法會回傳在 S3 Bucket 中的相對路徑："

# File: docs/8.x/filesystem.md, line: 310
# File: docs/9.x/filesystem.md, line: 290
# File: docs/master/filesystem.md, line: 290
#. type: Plain text
#, no-wrap
msgid "    $path = Storage::path('file.jpg');\n"
msgstr "    $path = Storage::path('file.jpg');\n"

# File: docs/8.x/filesystem.md, line: 312
# File: docs/9.x/filesystem.md, line: 292
# File: docs/master/filesystem.md, line: 292
#. type: Plain text
#, no-wrap
msgid "<a name=\"storing-files\"></a>\n"
msgstr "<a name=\"storing-files\"></a>\n"

# File: docs/8.x/filesystem.md, line: 312
# File: docs/9.x/filesystem.md, line: 292
# File: docs/master/filesystem.md, line: 292
#. type: Title ##
#, no-wrap
msgid "Storing Files"
msgstr "保存檔案"

# File: docs/8.x/filesystem.md, line: 315
# File: docs/9.x/filesystem.md, line: 295
# File: docs/master/filesystem.md, line: 295
#. type: Plain text
msgid "The `put` method may be used to store file contents on a disk. You may also pass a PHP `resource` to the `put` method, which will use Flysystem's underlying stream support. Remember, all file paths should be specified relative to the \"root\" location configured for the disk:"
msgstr "可使用 `put` 方法來將檔案內容保存到 Disk 上。也可以傳入一個 PHP `resource` 給 `put` 方法，Laravel 會使用 Flysystem 的底層串流支援來保存檔案。請記得，所有的檔案路徑都是相對於 Disk 設定中「root」根目錄的路徑："

# File: docs/8.x/filesystem.md, line: 319
# File: docs/9.x/filesystem.md, line: 299
# File: docs/master/filesystem.md, line: 299
#. type: Plain text
#, no-wrap
msgid "    Storage::put('file.jpg', $contents);\n"
msgstr "    Storage::put('file.jpg', $contents);\n"

# File: docs/8.x/filesystem.md, line: 321
# File: docs/9.x/filesystem.md, line: 301
# File: docs/master/filesystem.md, line: 301
#. type: Plain text
#, no-wrap
msgid "    Storage::put('file.jpg', $resource);\n"
msgstr "    Storage::put('file.jpg', $resource);\n"

# File: docs/8.x/filesystem.md, line: 323
# File: docs/9.x/filesystem.md, line: 303
# File: docs/master/filesystem.md, line: 303
#. type: Plain text
#, no-wrap
msgid "<a name=\"automatic-streaming\"></a>\n"
msgstr "<a name=\"automatic-streaming\"></a>\n"

# File: docs/8.x/filesystem.md, line: 323
# File: docs/9.x/filesystem.md, line: 303
# File: docs/master/filesystem.md, line: 303
#. type: Title ####
#, no-wrap
msgid "Automatic Streaming"
msgstr "自動串流"

# File: docs/8.x/filesystem.md, line: 326
# File: docs/9.x/filesystem.md, line: 306
# File: docs/master/filesystem.md, line: 306
#. type: Plain text
msgid "Streaming files to storage offers significantly reduced memory usage. If you would like Laravel to automatically manage streaming a given file to your storage location, you may use the `putFile` or `putFileAs` method. This method accepts either an `Illuminate\\Http\\File` or `Illuminate\\Http\\UploadedFile` instance and will automatically stream the file to your desired location:"
msgstr "使用串流將檔案到寫入存放空間可顯著降低記憶體使用。若想讓 Laravel 自動管理存放路徑中給定檔案的串流，可使用 `putFile` 或 `putFileAs` 方法。這兩個方法接受 `Illuminate\\Http\\File` 或 `Illuminate\\Http\\UploadedFile` 實體，會自動將該檔案串流到指定的路徑上："

# File: docs/8.x/filesystem.md, line: 329
# File: docs/9.x/filesystem.md, line: 309
# File: docs/master/filesystem.md, line: 309
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Http\\File;\n"
"    use Illuminate\\Support\\Facades\\Storage;\n"
msgstr "    use Illuminate\\Http\\File;\n"
"    use Illuminate\\Support\\Facades\\Storage;\n"

# File: docs/8.x/filesystem.md, line: 332
# File: docs/9.x/filesystem.md, line: 312
# File: docs/master/filesystem.md, line: 312
#. type: Plain text
#, no-wrap
msgid "    // Automatically generate a unique ID for filename...\n"
"    $path = Storage::putFile('photos', new File('/path/to/photo'));\n"
msgstr "    // 自動產生不重複 ID 作為檔案名稱...\n"
"    $path = Storage::putFile('photos', new File('/path/to/photo'));\n"

# File: docs/8.x/filesystem.md, line: 335
# File: docs/9.x/filesystem.md, line: 315
# File: docs/master/filesystem.md, line: 315
#. type: Plain text
#, no-wrap
msgid "    // Manually specify a filename...\n"
"    $path = Storage::putFileAs('photos', new File('/path/to/photo'), 'photo.jpg');\n"
msgstr "    // 手動指定檔案名稱...\n"
"    $path = Storage::putFileAs('photos', new File('/path/to/photo'), 'photo.jpg');\n"

# File: docs/8.x/filesystem.md, line: 337
# File: docs/9.x/filesystem.md, line: 317
# File: docs/master/filesystem.md, line: 317
#. type: Plain text
msgid "There are a few important things to note about the `putFile` method. Note that we only specified a directory name and not a filename. By default, the `putFile` method will generate a unique ID to serve as the filename. The file's extension will be determined by examining the file's MIME type. The path to the file will be returned by the `putFile` method so you can store the path, including the generated filename, in your database."
msgstr "有關 `putFile` 方法，還有幾點重要事項要注意。請注意，我們只有指定資料夾名稱，而未指定檔案名稱。預設情況下，`putFile` 會自動產生一個不重複 ID 來作為檔案名稱。檔案的副檔名會依照該檔案的 MIME 來判斷。`putFile` 方法會回傳該檔案包含檔名的路徑，好讓我們能保存該路徑到資料庫中。"

# File: docs/8.x/filesystem.md, line: 339
# File: docs/9.x/filesystem.md, line: 319
# File: docs/master/filesystem.md, line: 319
#. type: Plain text
msgid "The `putFile` and `putFileAs` methods also accept an argument to specify the \"visibility\" of the stored file. This is particularly useful if you are storing the file on a cloud disk such as Amazon S3 and would like the file to be publicly accessible via generated URLs:"
msgstr "`putFile` 與 `putFileAs` 方法也接受一個用來指定保存檔案「^[可見度](Visibility)」的引數。若你使用 Amazon S3 等雲端 Disk 來儲存檔案且想產生能公開存取的 URL，這個功能就特別實用："

# File: docs/8.x/filesystem.md, line: 341
# File: docs/9.x/filesystem.md, line: 321
# File: docs/master/filesystem.md, line: 321
#. type: Plain text
#, no-wrap
msgid "    Storage::putFile('photos', new File('/path/to/photo'), 'public');\n"
msgstr "    Storage::putFile('photos', new File('/path/to/photo'), 'public');\n"

# File: docs/8.x/filesystem.md, line: 343
# File: docs/9.x/filesystem.md, line: 323
# File: docs/master/filesystem.md, line: 323
#. type: Plain text
#, no-wrap
msgid "<a name=\"prepending-appending-to-files\"></a>\n"
msgstr "<a name=\"prepending-appending-to-files\"></a>\n"

# File: docs/8.x/filesystem.md, line: 343
# File: docs/9.x/filesystem.md, line: 323
# File: docs/master/filesystem.md, line: 323
#. type: Title ####
#, no-wrap
msgid "Prepending & Appending To Files"
msgstr "將內容加到檔案的最前面或最後面"

# File: docs/8.x/filesystem.md, line: 346
# File: docs/9.x/filesystem.md, line: 326
# File: docs/master/filesystem.md, line: 326
#. type: Plain text
msgid "The `prepend` and `append` methods allow you to write to the beginning or end of a file:"
msgstr "使用 `prepend` 或 `append` 方法，就可以讓我們將內容寫入到檔案的最前端或最後端："

# File: docs/8.x/filesystem.md, line: 348
# File: docs/9.x/filesystem.md, line: 328
# File: docs/master/filesystem.md, line: 328
#. type: Plain text
#, no-wrap
msgid "    Storage::prepend('file.log', 'Prepended Text');\n"
msgstr "    Storage::prepend('file.log', '寫到最前端的文字');\n"

# File: docs/8.x/filesystem.md, line: 350
# File: docs/9.x/filesystem.md, line: 330
# File: docs/master/filesystem.md, line: 330
#. type: Plain text
#, no-wrap
msgid "    Storage::append('file.log', 'Appended Text');\n"
msgstr "    Storage::append('file.log', '寫到最後端的文字');\n"

# File: docs/8.x/filesystem.md, line: 352
# File: docs/9.x/filesystem.md, line: 332
# File: docs/master/filesystem.md, line: 332
#. type: Plain text
#, no-wrap
msgid "<a name=\"copying-moving-files\"></a>\n"
msgstr "<a name=\"copying-moving-files\"></a>\n"

# File: docs/8.x/filesystem.md, line: 352
# File: docs/9.x/filesystem.md, line: 332
# File: docs/master/filesystem.md, line: 332
#. type: Title ####
#, no-wrap
msgid "Copying & Moving Files"
msgstr "複製與移動檔案"

# File: docs/8.x/filesystem.md, line: 355
# File: docs/9.x/filesystem.md, line: 335
# File: docs/master/filesystem.md, line: 335
#. type: Plain text
msgid "The `copy` method may be used to copy an existing file to a new location on the disk, while the `move` method may be used to rename or move an existing file to a new location:"
msgstr "可使用 `copy` 方法來將現有的檔案複製到 Disk 中的新路徑。而 `move` 方法則可用來重新命名現有檔案或將現有檔案移至新路徑："

# File: docs/8.x/filesystem.md, line: 357
# File: docs/9.x/filesystem.md, line: 337
# File: docs/master/filesystem.md, line: 337
#. type: Plain text
#, no-wrap
msgid "    Storage::copy('old/file.jpg', 'new/file.jpg');\n"
msgstr "    Storage::copy('old/file.jpg', 'new/file.jpg');\n"

# File: docs/8.x/filesystem.md, line: 359
# File: docs/9.x/filesystem.md, line: 339
# File: docs/master/filesystem.md, line: 339
#. type: Plain text
#, no-wrap
msgid "    Storage::move('old/file.jpg', 'new/file.jpg');\n"
msgstr "    Storage::move('old/file.jpg', 'new/file.jpg');\n"

# File: docs/8.x/filesystem.md, line: 361
# File: docs/9.x/filesystem.md, line: 341
# File: docs/master/filesystem.md, line: 341
#. type: Plain text
#, no-wrap
msgid "<a name=\"file-uploads\"></a>\n"
msgstr "<a name=\"file-uploads\"></a>\n"

# File: docs/8.x/filesystem.md, line: 361
# File: docs/9.x/filesystem.md, line: 341
# File: docs/master/filesystem.md, line: 341
#. type: Title ###
#, no-wrap
msgid "File Uploads"
msgstr "檔案上傳"

# File: docs/8.x/filesystem.md, line: 364
# File: docs/9.x/filesystem.md, line: 344
# File: docs/master/filesystem.md, line: 344
#. type: Plain text
msgid "In web applications, one of the most common use-cases for storing files is storing user uploaded files such as photos and documents. Laravel makes it very easy to store uploaded files using the `store` method on an uploaded file instance. Call the `store` method with the path at which you wish to store the uploaded file:"
msgstr "在 Web App 中，儲存檔案最常見的例子就是保存使用者上傳的檔案了 (如：照片、文件)。在 Laravel 中，要保存上傳的檔案非常簡單，只要在上傳的檔案實體上使用 `store` 方法即可。呼叫 `store` 方法並傳入要上傳檔案要保存的位置即可："

# File: docs/8.x/filesystem.md, line: 368
# File: docs/9.x/filesystem.md, line: 348
# File: docs/master/filesystem.md, line: 348
#. type: Plain text
#, no-wrap
msgid "    namespace App\\Http\\Controllers;\n"
msgstr "    namespace App\\Http\\Controllers;\n"

# File: docs/8.x/filesystem.md, line: 371
# File: docs/9.x/filesystem.md, line: 351
# File: docs/master/filesystem.md, line: 351
#. type: Plain text
#, no-wrap
msgid "    use App\\Http\\Controllers\\Controller;\n"
"    use Illuminate\\Http\\Request;\n"
msgstr "    use App\\Http\\Controllers\\Controller;\n"
"    use Illuminate\\Http\\Request;\n"

# File: docs/8.x/filesystem.md, line: 383
# File: docs/9.x/filesystem.md, line: 363
# File: docs/master/filesystem.md, line: 363
#. type: Plain text
#, no-wrap
msgid "    class UserAvatarController extends Controller\n"
"    {\n"
"        /**\n"
"         * Update the avatar for the user.\n"
"         *\n"
"         * @param  \\Illuminate\\Http\\Request  $request\n"
"         * @return \\Illuminate\\Http\\Response\n"
"         */\n"
"        public function update(Request $request)\n"
"        {\n"
"            $path = $request->file('avatar')->store('avatars');\n"
msgstr "    class UserAvatarController extends Controller\n"
"    {\n"
"        /**\n"
"         * Update the avatar for the user.\n"
"         *\n"
"         * @param  \\Illuminate\\Http\\Request  $request\n"
"         * @return \\Illuminate\\Http\\Response\n"
"         */\n"
"        public function update(Request $request)\n"
"        {\n"
"            $path = $request->file('avatar')->store('avatars');\n"

# File: docs/8.x/filesystem.md, line: 387
# File: docs/9.x/filesystem.md, line: 367
# File: docs/master/filesystem.md, line: 367
#. type: Plain text
#, no-wrap
msgid "            return $path;\n"
"        }\n"
"    }\n"
msgstr "            return $path;\n"
"        }\n"
"    }\n"

# File: docs/8.x/filesystem.md, line: 389
# File: docs/9.x/filesystem.md, line: 369
# File: docs/master/filesystem.md, line: 369
#. type: Plain text
msgid "There are a few important things to note about this example. Note that we only specified a directory name, not a filename. By default, the `store` method will generate a unique ID to serve as the filename. The file's extension will be determined by examining the file's MIME type. The path to the file will be returned by the `store` method so you can store the path, including the generated filename, in your database."
msgstr "在這個範例中還有幾點重要事項要注意。請注意，我們只有指定資料夾名稱，而未指定檔案名稱。預設情況下，`store` 會自動產生一個不重複 ID 來作為檔案名稱。檔案的副檔名會依照該檔案的 MIME 來判斷。`store` 方法會回傳該檔案包含檔名的路徑，好讓我們能保存該路徑到資料庫中。"

# File: docs/8.x/filesystem.md, line: 391
# File: docs/9.x/filesystem.md, line: 371
# File: docs/master/filesystem.md, line: 371
#. type: Plain text
msgid "You may also call the `putFile` method on the `Storage` facade to perform the same file storage operation as the example above:"
msgstr "也可以呼叫 `Storage` Facade 上的 `putFile` 方法進行與上方範例相同的檔案存放操作："

# File: docs/8.x/filesystem.md, line: 393
# File: docs/9.x/filesystem.md, line: 373
# File: docs/master/filesystem.md, line: 373
#. type: Plain text
#, no-wrap
msgid "    $path = Storage::putFile('avatars', $request->file('avatar'));\n"
msgstr "    $path = Storage::putFile('avatars', $request->file('avatar'));\n"

# File: docs/8.x/filesystem.md, line: 395
# File: docs/9.x/filesystem.md, line: 375
# File: docs/master/filesystem.md, line: 375
#. type: Plain text
#, no-wrap
msgid "<a name=\"specifying-a-file-name\"></a>\n"
msgstr "<a name=\"specifying-a-file-name\"></a>\n"

# File: docs/8.x/filesystem.md, line: 395
# File: docs/9.x/filesystem.md, line: 375
# File: docs/master/filesystem.md, line: 375
#. type: Title ####
#, no-wrap
msgid "Specifying A File Name"
msgstr "指定檔案名稱"

# File: docs/8.x/filesystem.md, line: 398
# File: docs/9.x/filesystem.md, line: 378
# File: docs/master/filesystem.md, line: 378
#. type: Plain text
msgid "If you do not want a filename to be automatically assigned to your stored file, you may use the `storeAs` method, which receives the path, the filename, and the (optional) disk as its arguments:"
msgstr "若不想使用自動指派給保存檔案的檔名，可使用 `storeAs` 方法。該方法的引數是路徑、檔名、以及 (可選的) Disk："

# File: docs/8.x/filesystem.md, line: 402
# File: docs/9.x/filesystem.md, line: 382
# File: docs/master/filesystem.md, line: 382
#. type: Plain text
#, no-wrap
msgid "    $path = $request->file('avatar')->storeAs(\n"
"        'avatars', $request->user()->id\n"
"    );\n"
msgstr "    $path = $request->file('avatar')->storeAs(\n"
"        'avatars', $request->user()->id\n"
"    );\n"

# File: docs/8.x/filesystem.md, line: 404
# File: docs/9.x/filesystem.md, line: 384
# File: docs/master/filesystem.md, line: 384
#. type: Plain text
msgid "You may also use the `putFileAs` method on the `Storage` facade, which will perform the same file storage operation as the example above:"
msgstr "也可以呼叫 `Storage` Facade 上的 `putFileAs` 方法進行與上方範例相同的檔案存放操作："

# File: docs/8.x/filesystem.md, line: 408
# File: docs/9.x/filesystem.md, line: 388
# File: docs/master/filesystem.md, line: 388
#. type: Plain text
#, no-wrap
msgid "    $path = Storage::putFileAs(\n"
"        'avatars', $request->file('avatar'), $request->user()->id\n"
"    );\n"
msgstr "    $path = Storage::putFileAs(\n"
"        'avatars', $request->file('avatar'), $request->user()->id\n"
"    );\n"

# File: docs/8.x/filesystem.md, line: 410
# File: docs/9.x/filesystem.md, line: 390
# File: docs/master/filesystem.md, line: 390
#. type: Plain text
#, no-wrap
msgid "> {note} Unprintable and invalid unicode characters will automatically be removed from file paths. Therefore, you may wish to sanitize your file paths before passing them to Laravel's file storage methods. File paths are normalized using the `League\\Flysystem\\Util::normalizePath` method.\n"
msgstr "> {note} 路徑中若有^[不可列印](Unprintable)或無效的 Unicode 字元，則會被自動移除。因此，在將檔案路徑傳給 Laravel 的檔案存放方法前，我們可能會想先^[消毒](Sanitize)檔案路徑。可使用 `League\\Flysystem\\Util::normalizePath` 來^[正常化](Normalize)檔案路徑。\n"

# File: docs/8.x/filesystem.md, line: 412
# File: docs/9.x/filesystem.md, line: 392
# File: docs/master/filesystem.md, line: 392
#. type: Plain text
#, no-wrap
msgid "<a name=\"specifying-a-disk\"></a>\n"
msgstr "<a name=\"specifying-a-disk\"></a>\n"

# File: docs/8.x/filesystem.md, line: 412
# File: docs/9.x/filesystem.md, line: 392
# File: docs/master/filesystem.md, line: 392
#. type: Title ####
#, no-wrap
msgid "Specifying A Disk"
msgstr "指定 Disk"

# File: docs/8.x/filesystem.md, line: 415
# File: docs/9.x/filesystem.md, line: 395
# File: docs/master/filesystem.md, line: 395
#. type: Plain text
msgid "By default, this uploaded file's `store` method will use your default disk. If you would like to specify another disk, pass the disk name as the second argument to the `store` method:"
msgstr "預設情況下，上傳檔案的 `store` 方法會使用預設的 Disk。若想指定另一個 Disk，請將 Disk 名稱作為第三個引數傳給 `store` 方法："

# File: docs/8.x/filesystem.md, line: 419
# File: docs/9.x/filesystem.md, line: 399
# File: docs/master/filesystem.md, line: 399
#. type: Plain text
#, no-wrap
msgid "    $path = $request->file('avatar')->store(\n"
"        'avatars/'.$request->user()->id, 's3'\n"
"    );\n"
msgstr "    $path = $request->file('avatar')->store(\n"
"        'avatars/'.$request->user()->id, 's3'\n"
"    );\n"

# File: docs/8.x/filesystem.md, line: 421
# File: docs/9.x/filesystem.md, line: 401
# File: docs/master/filesystem.md, line: 401
#. type: Plain text
msgid "If you are using the `storeAs` method, you may pass the disk name as the third argument to the method:"
msgstr "若使用 `storeAs` 方法，則可將 Disk 名稱作為第三引數傳給該方法："

# File: docs/8.x/filesystem.md, line: 427
# File: docs/9.x/filesystem.md, line: 407
# File: docs/master/filesystem.md, line: 407
#. type: Plain text
#, no-wrap
msgid "    $path = $request->file('avatar')->storeAs(\n"
"        'avatars',\n"
"        $request->user()->id,\n"
"        's3'\n"
"    );\n"
msgstr "    $path = $request->file('avatar')->storeAs(\n"
"        'avatars',\n"
"        $request->user()->id,\n"
"        's3'\n"
"    );\n"

# File: docs/8.x/filesystem.md, line: 429
# File: docs/9.x/filesystem.md, line: 409
# File: docs/master/filesystem.md, line: 409
#. type: Plain text
#, no-wrap
msgid "<a name=\"other-uploaded-file-information\"></a>\n"
msgstr "<a name=\"other-uploaded-file-information\"></a>\n"

# File: docs/8.x/filesystem.md, line: 429
# File: docs/9.x/filesystem.md, line: 409
# File: docs/master/filesystem.md, line: 409
#. type: Title ####
#, no-wrap
msgid "Other Uploaded File Information"
msgstr "其他上傳檔案的資訊"

# File: docs/8.x/filesystem.md, line: 432
# File: docs/9.x/filesystem.md, line: 412
# File: docs/master/filesystem.md, line: 412
#. type: Plain text
msgid "If you would like to get the original name and extension of the uploaded file, you may do so using the `getClientOriginalName` and `getClientOriginalExtension` methods:"
msgstr "若想取得上傳檔案的原始名稱與副檔名，可使用 `getClientOriginalName` 與 `getClientOriginalExtension` 方法："

# File: docs/8.x/filesystem.md, line: 434
# File: docs/8.x/filesystem.md, line: 441
# File: docs/9.x/filesystem.md, line: 414
# File: docs/9.x/filesystem.md, line: 421
# File: docs/master/filesystem.md, line: 414
# File: docs/master/filesystem.md, line: 421
#. type: Plain text
#, no-wrap
msgid "    $file = $request->file('avatar');\n"
msgstr "    $file = $request->file('avatar');\n"

# File: docs/8.x/filesystem.md, line: 437
# File: docs/9.x/filesystem.md, line: 417
# File: docs/master/filesystem.md, line: 417
#. type: Plain text
#, no-wrap
msgid "    $name = $file->getClientOriginalName();\n"
"    $extension = $file->getClientOriginalExtension();\n"
msgstr "    $name = $file->getClientOriginalName();\n"
"    $extension = $file->getClientOriginalExtension();\n"

# File: docs/8.x/filesystem.md, line: 439
# File: docs/9.x/filesystem.md, line: 419
# File: docs/master/filesystem.md, line: 419
#. type: Plain text
msgid "However, keep in mind that the `getClientOriginalName` and `getClientOriginalExtension` methods are considered unsafe, as the file name and extension may be tampered with by a malicious user. For this reason, you should typically prefer the `hashName` and `extension` methods to get a name and an extension for the given file upload:"
msgstr "不過，請注意，應將 `getClientOriginalName` 與 `getClientOriginalExtension` 方法視為不安全的，因為惡意使用者可以偽造檔案名稱與副檔名。因此，建議一般還是使用 `hashName` 與 `extension` 方法來取得給定上傳檔案的檔名與副檔名："

# File: docs/8.x/filesystem.md, line: 444
# File: docs/9.x/filesystem.md, line: 424
# File: docs/master/filesystem.md, line: 424
#. type: Plain text
#, no-wrap
msgid "    $name = $file->hashName(); // Generate a unique, random name...\n"
"    $extension = $file->extension(); // Determine the file's extension based on the file's MIME type...\n"
msgstr "    $name = $file->hashName(); // 產生一個不重複、隨機的名稱...\n"
"    $extension = $file->extension(); // 依據檔案 MIME 型別判斷檔案副檔名...\n"

# File: docs/8.x/filesystem.md, line: 446
# File: docs/9.x/filesystem.md, line: 426
# File: docs/master/filesystem.md, line: 426
#. type: Plain text
#, no-wrap
msgid "<a name=\"file-visibility\"></a>\n"
msgstr "<a name=\"file-visibility\"></a>\n"

# File: docs/8.x/filesystem.md, line: 446
# File: docs/9.x/filesystem.md, line: 426
# File: docs/master/filesystem.md, line: 426
#. type: Title ###
#, no-wrap
msgid "File Visibility"
msgstr "檔案可見度"

# File: docs/8.x/filesystem.md, line: 449
# File: docs/9.x/filesystem.md, line: 429
# File: docs/master/filesystem.md, line: 429
#. type: Plain text
msgid "In Laravel's Flysystem integration, \"visibility\" is an abstraction of file permissions across multiple platforms. Files may either be declared `public` or `private`. When a file is declared `public`, you are indicating that the file should generally be accessible to others. For example, when using the S3 driver, you may retrieve URLs for `public` files."
msgstr "在 Laravel 的 Flysystem 整合中，「^[可見度](Visibility)」是在多個平台間抽象化的檔案權限。檔案可以被定義為 `public`，或是被定義為 `private`。若將檔案定義為 `public`，即代表該檔案是可以被其他人正常存取的。舉例來說，若使用 S3 Driver，可以取得 `public` 檔案的 URL。"

# File: docs/8.x/filesystem.md, line: 451
# File: docs/9.x/filesystem.md, line: 431
# File: docs/master/filesystem.md, line: 431
#. type: Plain text
msgid "You can set the visibility when writing the file via the `put` method:"
msgstr "在使用 `put` 方法寫入檔案時，可以設定可見度："

# File: docs/8.x/filesystem.md, line: 455
# File: docs/9.x/filesystem.md, line: 435
# File: docs/master/filesystem.md, line: 435
#. type: Plain text
#, no-wrap
msgid "    Storage::put('file.jpg', $contents, 'public');\n"
msgstr "    Storage::put('file.jpg', $contents, 'public');\n"

# File: docs/8.x/filesystem.md, line: 457
# File: docs/9.x/filesystem.md, line: 437
# File: docs/master/filesystem.md, line: 437
#. type: Plain text
msgid "If the file has already been stored, its visibility can be retrieved and set via the `getVisibility` and `setVisibility` methods:"
msgstr "若檔案已被保存，則可使用 `getVisibility` 來取得可見度，並使用 `setVisibility` 來設定可見度："

# File: docs/8.x/filesystem.md, line: 459
# File: docs/9.x/filesystem.md, line: 439
# File: docs/master/filesystem.md, line: 439
#. type: Plain text
#, no-wrap
msgid "    $visibility = Storage::getVisibility('file.jpg');\n"
msgstr "    $visibility = Storage::getVisibility('file.jpg');\n"

# File: docs/8.x/filesystem.md, line: 461
# File: docs/9.x/filesystem.md, line: 441
# File: docs/master/filesystem.md, line: 441
#. type: Plain text
#, no-wrap
msgid "    Storage::setVisibility('file.jpg', 'public');\n"
msgstr "    Storage::setVisibility('file.jpg', 'public');\n"

# File: docs/8.x/filesystem.md, line: 463
# File: docs/9.x/filesystem.md, line: 443
# File: docs/master/filesystem.md, line: 443
#. type: Plain text
msgid "When interacting with uploaded files, you may use the `storePublicly` and `storePubliclyAs` methods to store the uploaded file with `public` visibility:"
msgstr "在處理上傳的檔案時，應使用 `storePublicly` 與 `storePubliclyAs` 方法來以 `public` 可見度保存上傳的檔案："

# File: docs/8.x/filesystem.md, line: 465
# File: docs/9.x/filesystem.md, line: 445
# File: docs/master/filesystem.md, line: 445
#. type: Plain text
#, no-wrap
msgid "    $path = $request->file('avatar')->storePublicly('avatars', 's3');\n"
msgstr "    $path = $request->file('avatar')->storePublicly('avatars', 's3');\n"

# File: docs/8.x/filesystem.md, line: 471
# File: docs/9.x/filesystem.md, line: 451
# File: docs/master/filesystem.md, line: 451
#. type: Plain text
#, no-wrap
msgid "    $path = $request->file('avatar')->storePubliclyAs(\n"
"        'avatars',\n"
"        $request->user()->id,\n"
"        's3'\n"
"    );\n"
msgstr "    $path = $request->file('avatar')->storePubliclyAs(\n"
"        'avatars',\n"
"        $request->user()->id,\n"
"        's3'\n"
"    );\n"

# File: docs/8.x/filesystem.md, line: 473
# File: docs/9.x/filesystem.md, line: 453
# File: docs/master/filesystem.md, line: 453
#. type: Plain text
#, no-wrap
msgid "<a name=\"local-files-and-visibility\"></a>\n"
msgstr "<a name=\"local-files-and-visibility\"></a>\n"

# File: docs/8.x/filesystem.md, line: 473
# File: docs/9.x/filesystem.md, line: 453
# File: docs/master/filesystem.md, line: 453
#. type: Title ####
#, no-wrap
msgid "Local Files & Visibility"
msgstr "本機檔案與可見度"

# File: docs/8.x/filesystem.md, line: 476
# File: docs/9.x/filesystem.md, line: 456
# File: docs/master/filesystem.md, line: 456
#. type: Plain text
msgid "When using the `local` driver, `public` [visibility](#file-visibility) translates to `0755` permissions for directories and `0644` permissions for files. You can modify the permissions mappings in your application's `filesystems` configuration file:"
msgstr "使用 `local` Driver 時，`public` [可見度](#file-visibility) 對於目錄來說可翻譯為 `0755` 權限，而檔案則可翻譯為 `0644` 權限。可以在 `filesystems` 設定當中修改這個權限映射："

# File: docs/8.x/filesystem.md, line: 491
# File: docs/9.x/filesystem.md, line: 471
# File: docs/master/filesystem.md, line: 471
#. type: Plain text
#, no-wrap
msgid "    'local' => [\n"
"        'driver' => 'local',\n"
"        'root' => storage_path('app'),\n"
"        'permissions' => [\n"
"            'file' => [\n"
"                'public' => 0644,\n"
"                'private' => 0600,\n"
"            ],\n"
"            'dir' => [\n"
"                'public' => 0755,\n"
"                'private' => 0700,\n"
"            ],\n"
"        ],\n"
"    ],\n"
msgstr "    'local' => [\n"
"        'driver' => 'local',\n"
"        'root' => storage_path('app'),\n"
"        'permissions' => [\n"
"            'file' => [\n"
"                'public' => 0644,\n"
"                'private' => 0600,\n"
"            ],\n"
"            'dir' => [\n"
"                'public' => 0755,\n"
"                'private' => 0700,\n"
"            ],\n"
"        ],\n"
"    ],\n"

# File: docs/8.x/filesystem.md, line: 493
# File: docs/9.x/filesystem.md, line: 473
# File: docs/master/filesystem.md, line: 473
#. type: Plain text
#, no-wrap
msgid "<a name=\"deleting-files\"></a>\n"
msgstr "<a name=\"deleting-files\"></a>\n"

# File: docs/8.x/filesystem.md, line: 493
# File: docs/9.x/filesystem.md, line: 473
# File: docs/master/filesystem.md, line: 473
#. type: Title ##
#, no-wrap
msgid "Deleting Files"
msgstr "刪除檔案"

# File: docs/8.x/filesystem.md, line: 496
# File: docs/9.x/filesystem.md, line: 476
# File: docs/master/filesystem.md, line: 476
#. type: Plain text
msgid "The `delete` method accepts a single filename or an array of files to delete:"
msgstr "`delete` 方法接受要刪除的單一檔案名稱，或是一組檔案名稱陣列："

# File: docs/8.x/filesystem.md, line: 500
# File: docs/9.x/filesystem.md, line: 480
# File: docs/master/filesystem.md, line: 480
#. type: Plain text
#, no-wrap
msgid "    Storage::delete('file.jpg');\n"
msgstr "    Storage::delete('file.jpg');\n"

# File: docs/8.x/filesystem.md, line: 502
# File: docs/9.x/filesystem.md, line: 482
# File: docs/master/filesystem.md, line: 482
#. type: Plain text
#, no-wrap
msgid "    Storage::delete(['file.jpg', 'file2.jpg']);\n"
msgstr "    Storage::delete(['file.jpg', 'file2.jpg']);\n"

# File: docs/8.x/filesystem.md, line: 504
# File: docs/9.x/filesystem.md, line: 484
# File: docs/master/filesystem.md, line: 484
#. type: Plain text
msgid "If necessary, you may specify the disk that the file should be deleted from:"
msgstr "若有需要，也可指定要在哪個 Disk 上刪除檔案："

# File: docs/8.x/filesystem.md, line: 508
# File: docs/9.x/filesystem.md, line: 488
# File: docs/master/filesystem.md, line: 488
#. type: Plain text
#, no-wrap
msgid "    Storage::disk('s3')->delete('path/file.jpg');\n"
msgstr "    Storage::disk('s3')->delete('path/file.jpg');\n"

# File: docs/8.x/filesystem.md, line: 510
# File: docs/9.x/filesystem.md, line: 490
# File: docs/master/filesystem.md, line: 490
#. type: Plain text
#, no-wrap
msgid "<a name=\"directories\"></a>\n"
msgstr "<a name=\"directories\"></a>\n"

# File: docs/8.x/filesystem.md, line: 510
# File: docs/9.x/filesystem.md, line: 490
# File: docs/master/filesystem.md, line: 490
#. type: Title ##
#, no-wrap
msgid "Directories"
msgstr "目錄"

# File: docs/8.x/filesystem.md, line: 513
# File: docs/9.x/filesystem.md, line: 493
# File: docs/master/filesystem.md, line: 493
#. type: Plain text
#, no-wrap
msgid "<a name=\"get-all-files-within-a-directory\"></a>\n"
msgstr "<a name=\"get-all-files-within-a-directory\"></a>\n"

# File: docs/8.x/filesystem.md, line: 513
# File: docs/9.x/filesystem.md, line: 493
# File: docs/master/filesystem.md, line: 493
#. type: Title ####
#, no-wrap
msgid "Get All Files Within A Directory"
msgstr "取得目錄中的所有檔案"

# File: docs/8.x/filesystem.md, line: 516
# File: docs/9.x/filesystem.md, line: 496
# File: docs/master/filesystem.md, line: 496
#. type: Plain text
msgid "The `files` method returns an array of all of the files in a given directory. If you would like to retrieve a list of all files within a given directory including all subdirectories, you may use the `allFiles` method:"
msgstr "`files` 方法回傳一組包含給定目錄中所有檔案的陣列。若想取得包含子目錄在內的給定目錄內所有檔案的清單，可使用 `allFiles` 方法："

# File: docs/8.x/filesystem.md, line: 520
# File: docs/9.x/filesystem.md, line: 500
# File: docs/master/filesystem.md, line: 500
#. type: Plain text
#, no-wrap
msgid "    $files = Storage::files($directory);\n"
msgstr "    $files = Storage::files($directory);\n"

# File: docs/8.x/filesystem.md, line: 522
# File: docs/9.x/filesystem.md, line: 502
# File: docs/master/filesystem.md, line: 502
#. type: Plain text
#, no-wrap
msgid "    $files = Storage::allFiles($directory);\n"
msgstr "    $files = Storage::allFiles($directory);\n"

# File: docs/8.x/filesystem.md, line: 524
# File: docs/9.x/filesystem.md, line: 504
# File: docs/master/filesystem.md, line: 504
#. type: Plain text
#, no-wrap
msgid "<a name=\"get-all-directories-within-a-directory\"></a>\n"
msgstr "<a name=\"get-all-directories-within-a-directory\"></a>\n"

# File: docs/8.x/filesystem.md, line: 524
# File: docs/9.x/filesystem.md, line: 504
# File: docs/master/filesystem.md, line: 504
#. type: Title ####
#, no-wrap
msgid "Get All Directories Within A Directory"
msgstr "取得目錄內的所有目錄"

# File: docs/8.x/filesystem.md, line: 527
# File: docs/9.x/filesystem.md, line: 507
# File: docs/master/filesystem.md, line: 507
#. type: Plain text
msgid "The `directories` method returns an array of all the directories within a given directory. Additionally, you may use the `allDirectories` method to get a list of all directories within a given directory and all of its subdirectories:"
msgstr "`directories` 方法回傳一組包含給定目錄內所有目錄的陣列。此外，也可以使用 `allDirectories` 方法來取得給定目錄內包含子目錄的所有目錄清單："

# File: docs/8.x/filesystem.md, line: 529
# File: docs/9.x/filesystem.md, line: 509
# File: docs/master/filesystem.md, line: 509
#. type: Plain text
#, no-wrap
msgid "    $directories = Storage::directories($directory);\n"
msgstr "    $directories = Storage::directories($directory);\n"

# File: docs/8.x/filesystem.md, line: 531
# File: docs/9.x/filesystem.md, line: 511
# File: docs/master/filesystem.md, line: 511
#. type: Plain text
#, no-wrap
msgid "    $directories = Storage::allDirectories($directory);\n"
msgstr "    $directories = Storage::allDirectories($directory);\n"

# File: docs/8.x/filesystem.md, line: 533
# File: docs/9.x/filesystem.md, line: 513
# File: docs/master/filesystem.md, line: 513
#. type: Plain text
#, no-wrap
msgid "<a name=\"create-a-directory\"></a>\n"
msgstr "<a name=\"create-a-directory\"></a>\n"

# File: docs/8.x/filesystem.md, line: 533
# File: docs/9.x/filesystem.md, line: 513
# File: docs/master/filesystem.md, line: 513
#. type: Title ####
#, no-wrap
msgid "Create A Directory"
msgstr "建立目錄"

# File: docs/8.x/filesystem.md, line: 536
# File: docs/9.x/filesystem.md, line: 516
# File: docs/master/filesystem.md, line: 516
#. type: Plain text
msgid "The `makeDirectory` method will create the given directory, including any needed subdirectories:"
msgstr "`makeDirectory` 方法會建立給定的目錄，包含所有需要的子目錄："

# File: docs/8.x/filesystem.md, line: 538
# File: docs/9.x/filesystem.md, line: 518
# File: docs/master/filesystem.md, line: 518
#. type: Plain text
#, no-wrap
msgid "    Storage::makeDirectory($directory);\n"
msgstr "    Storage::makeDirectory($directory);\n"

# File: docs/8.x/filesystem.md, line: 540
# File: docs/9.x/filesystem.md, line: 520
# File: docs/master/filesystem.md, line: 520
#. type: Plain text
#, no-wrap
msgid "<a name=\"delete-a-directory\"></a>\n"
msgstr "<a name=\"delete-a-directory\"></a>\n"

# File: docs/8.x/filesystem.md, line: 540
# File: docs/9.x/filesystem.md, line: 520
# File: docs/master/filesystem.md, line: 520
#. type: Title ####
#, no-wrap
msgid "Delete A Directory"
msgstr "刪除目錄"

# File: docs/8.x/filesystem.md, line: 543
# File: docs/9.x/filesystem.md, line: 523
# File: docs/master/filesystem.md, line: 523
#. type: Plain text
msgid "Finally, the `deleteDirectory` method may be used to remove a directory and all of its files:"
msgstr "最後，可使用 `deleteDirectory` 方法來移除某個目錄與其中所有檔案："

# File: docs/8.x/filesystem.md, line: 545
# File: docs/9.x/filesystem.md, line: 525
# File: docs/master/filesystem.md, line: 525
#. type: Plain text
#, no-wrap
msgid "    Storage::deleteDirectory($directory);\n"
msgstr "    Storage::deleteDirectory($directory);\n"

# File: docs/8.x/filesystem.md, line: 547
# File: docs/9.x/filesystem.md, line: 527
# File: docs/master/filesystem.md, line: 527
#. type: Plain text
#, no-wrap
msgid "<a name=\"custom-filesystems\"></a>\n"
msgstr "<a name=\"custom-filesystems\"></a>\n"

# File: docs/8.x/filesystem.md, line: 547
# File: docs/9.x/filesystem.md, line: 527
# File: docs/master/filesystem.md, line: 527
#. type: Title ##
#, no-wrap
msgid "Custom Filesystems"
msgstr "自訂 Filesystem"

# File: docs/8.x/filesystem.md, line: 550
# File: docs/9.x/filesystem.md, line: 530
# File: docs/master/filesystem.md, line: 530
#. type: Plain text
msgid "Laravel's Flysystem integration provides support for several \"drivers\" out of the box; however, Flysystem is not limited to these and has adapters for many other storage systems. You can create a custom driver if you want to use one of these additional adapters in your Laravel application."
msgstr "Laravel 的 Flysystem 整合預設提供了多種可用的「Driver」。不過，Flysystem 也不是只能使用這些 Driver，還有許多其他的存放系統 Adapter 可使用。若想在 Laravel 專案中使用這些額外的 Adapter 的話，則可建立一個自訂的 Driver。"

# File: docs/8.x/filesystem.md, line: 552
# File: docs/9.x/filesystem.md, line: 532
# File: docs/master/filesystem.md, line: 532
#. type: Plain text
msgid "In order to define a custom filesystem you will need a Flysystem adapter. Let's add a community maintained Dropbox adapter to our project:"
msgstr "若要定義自訂檔案系統，我們首先需要一個 Flysystem Adapter。我們先來在專案中新增一個由社群維護的 Dropbox Adapter："

# File: docs/8.x/filesystem.md, line: 554
#. type: Plain text
#, no-wrap
msgid "    composer require spatie/flysystem-dropbox\n"
msgstr "    composer require spatie/flysystem-dropbox\n"

# File: docs/8.x/filesystem.md, line: 556
# File: docs/9.x/filesystem.md, line: 538
# File: docs/master/filesystem.md, line: 538
#. type: Plain text
msgid "Next, you can register the driver within the `boot` method of one of your application's [service providers](/docs/{{version}}/providers). To accomplish this, you should use the `extend` method of the `Storage` facade:"
msgstr "接著，我們可以在專案的其中一個 [Service Provider](/docs/{{version}}/providers) 中 `boot` 方法內註冊這個 Driver。若要註冊 Driver，請使用 `Storage` Facade 的 `extend` 方法："

# File: docs/8.x/filesystem.md, line: 566
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Support\\Facades\\Storage;\n"
"    use Illuminate\\Support\\ServiceProvider;\n"
"    use League\\Flysystem\\Filesystem;\n"
"    use Spatie\\Dropbox\\Client as DropboxClient;\n"
"    use Spatie\\FlysystemDropbox\\DropboxAdapter;\n"
msgstr "    use Illuminate\\Support\\Facades\\Storage;\n"
"    use Illuminate\\Support\\ServiceProvider;\n"
"    use League\\Flysystem\\Filesystem;\n"
"    use Spatie\\Dropbox\\Client as DropboxClient;\n"
"    use Spatie\\FlysystemDropbox\\DropboxAdapter;\n"

# File: docs/8.x/filesystem.md, line: 578
# File: docs/9.x/filesystem.md, line: 561
# File: docs/master/filesystem.md, line: 561
#. type: Plain text
#, no-wrap
msgid "    class AppServiceProvider extends ServiceProvider\n"
"    {\n"
"        /**\n"
"         * Register any application services.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function register()\n"
"        {\n"
"            //\n"
"        }\n"
msgstr "    class AppServiceProvider extends ServiceProvider\n"
"    {\n"
"        /**\n"
"         * Register any application services.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function register()\n"
"        {\n"
"            //\n"
"        }\n"

# File: docs/8.x/filesystem.md, line: 590
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * Bootstrap any application services.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function boot()\n"
"        {\n"
"            Storage::extend('dropbox', function ($app, $config) {\n"
"                $client = new DropboxClient(\n"
"                    $config['authorization_token']\n"
"                );\n"
msgstr "        /**\n"
"         * Bootstrap any application services.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function boot()\n"
"        {\n"
"            Storage::extend('dropbox', function ($app, $config) {\n"
"                $client = new DropboxClient(\n"
"                    $config['authorization_token']\n"
"                );\n"

# File: docs/8.x/filesystem.md, line: 595
#. type: Plain text
#, no-wrap
msgid "                return new Filesystem(new DropboxAdapter($client));\n"
"            });\n"
"        }\n"
"    }\n"
msgstr "                return new Filesystem(new DropboxAdapter($client));\n"
"            });\n"
"        }\n"
"    }\n"

# File: docs/8.x/filesystem.md, line: 597
#. type: Plain text
msgid "The first argument of the `extend` method is the name of the driver and the second is a closure that receives the `$app` and `$config` variables. The closure must return an instance of `League\\Flysystem\\Filesystem`. The `$config` variable contains the values defined in `config/filesystems.php` for the specified disk."
msgstr "傳入 `extend` 方法的第一個引數是 Driver 的名稱，而第二個引數則是一本接收了 `$app` 與 `$config` 變數的閉包。該閉包應回傳 `League\\Flysystem\\Filesystem` 的實體。`$config` 變數則包含了定義在 `config/filesystems.php` 中指定 Disk 的設定值。"

# File: docs/8.x/filesystem.md, line: 598
# File: docs/9.x/filesystem.md, line: 585
# File: docs/master/filesystem.md, line: 585
#. type: Plain text
msgid "Once you have created and registered the extension's service provider, you may use the `dropbox` driver in your `config/filesystems.php` configuration file."
msgstr "建立並註冊好擴充的 Service Provider 後，就可以在 `config/filesystems.php` 設定當中使用 `dropbox` Driver。"

# File: docs/9.x/filesystem.md, line: 21
# File: docs/master/filesystem.md, line: 21
#. type: Plain text
#, no-wrap
msgid "- [Configuration](#configuration)\n"
"    - [The Local Driver](#the-local-driver)\n"
"    - [The Public Disk](#the-public-disk)\n"
"    - [Driver Prerequisites](#driver-prerequisites)\n"
"    - [Amazon S3 Compatible Filesystems](#amazon-s3-compatible-filesystems)\n"
"- [Obtaining Disk Instances](#obtaining-disk-instances)\n"
"    - [On-Demand Disks](#on-demand-disks)\n"
"- [Retrieving Files](#retrieving-files)\n"
"    - [Downloading Files](#downloading-files)\n"
"    - [File URLs](#file-urls)\n"
"    - [File Metadata](#file-metadata)\n"
"- [Storing Files](#storing-files)\n"
"    - [File Uploads](#file-uploads)\n"
"    - [File Visibility](#file-visibility)\n"
"- [Deleting Files](#deleting-files)\n"
"- [Directories](#directories)\n"
"- [Custom Filesystems](#custom-filesystems)\n"
msgstr "- [設定](#configuration)\n"
"    - [「Local」Driver](#the-local-driver)\n"
"    - [「Public」Disk](#the-public-disk)\n"
"    - [Driver 的前置要求](#driver-prerequisites)\n"
"    - [相容於 Amazon S3 的檔案系統](#amazon-s3-compatible-filesystems)\n"
"- [取得 Disk 實體](#obtaining-disk-instances)\n"
"    - [隨需提供的 Disks](#on-demand-disks)\n"
"- [取得檔案](#retrieving-files)\n"
"    - [下載檔案](#downloading-files)\n"
"    - [檔案 URL](#file-urls)\n"
"    - [檔案的詮釋資料](#file-metadata)\n"
"- [保存檔案](#storing-files)\n"
"    - [檔案上傳](#file-uploads)\n"
"    - [檔案的可見度](#file-visibility)\n"
"- [刪除檔案](#deleting-files)\n"
"- [目錄](#directories)\n"
"- [自訂檔案系統](#custom-filesystems)\n"

# File: docs/9.x/filesystem.md, line: 54
# File: docs/9.x/filesystem.md, line: 533
# File: docs/master/filesystem.md, line: 54
# File: docs/master/filesystem.md, line: 533
#. type: Code fence info string
#, no-wrap
msgid "shell"
msgstr "shell"

# File: docs/9.x/filesystem.md, line: 54
# File: docs/master/filesystem.md, line: 54
#. type: Plain text
#, no-wrap
msgid "php artisan storage:link\n"
msgstr "php artisan storage:link\n"

# File: docs/9.x/filesystem.md, line: 79
# File: docs/master/filesystem.md, line: 79
#. type: Plain text
msgid "- Amazon S3: `composer require --with-all-dependencies league/flysystem-aws-s3-v3 \"^3.0\"` - SFTP: `composer require league/flysystem-sftp-v3 \"^3.0\"`"
msgstr "- Amazon S3: `composer require --with-all-dependencies league/flysystem-aws-s3-v3 \"^3.0\"`\n"
"- SFTP: `composer require league/flysystem-sftp-v3 \"^3.0\"`"

# File: docs/9.x/filesystem.md, line: 533
# File: docs/master/filesystem.md, line: 533
#. type: Plain text
#, no-wrap
msgid "composer require spatie/flysystem-dropbox\n"
msgstr "composer require spatie/flysystem-dropbox\n"

# File: docs/9.x/filesystem.md, line: 549
# File: docs/master/filesystem.md, line: 549
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Filesystem\\FilesystemAdapter;\n"
"    use Illuminate\\Support\\Facades\\Storage;\n"
"    use Illuminate\\Support\\ServiceProvider;\n"
"    use League\\Flysystem\\Filesystem;\n"
"    use Spatie\\Dropbox\\Client as DropboxClient;\n"
"    use Spatie\\FlysystemDropbox\\DropboxAdapter;\n"
msgstr "    use Illuminate\\Filesystem\\FilesystemAdapter;\n"
"    use Illuminate\\Support\\Facades\\Storage;\n"
"    use Illuminate\\Support\\ServiceProvider;\n"
"    use League\\Flysystem\\Filesystem;\n"
"    use Spatie\\Dropbox\\Client as DropboxClient;\n"
"    use Spatie\\FlysystemDropbox\\DropboxAdapter;\n"

# File: docs/9.x/filesystem.md, line: 573
# File: docs/master/filesystem.md, line: 573
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * Bootstrap any application services.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function boot()\n"
"        {\n"
"            Storage::extend('dropbox', function ($app, $config) {\n"
"                $adapter = new DropboxAdapter(new DropboxClient(\n"
"                    $config['authorization_token']\n"
"                ););\n"
msgstr "        /**\n"
"         * Bootstrap any application services.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function boot()\n"
"        {\n"
"            Storage::extend('dropbox', function ($app, $config) {\n"
"                $adapter = new DropboxAdapter(new DropboxClient(\n"
"                    $config['authorization_token']\n"
"                ););\n"

# File: docs/9.x/filesystem.md, line: 582
# File: docs/master/filesystem.md, line: 582
#. type: Plain text
#, no-wrap
msgid "                return new FilesystemAdapter(\n"
"                    new Filesystem($adapter, $config),\n"
"                    $adapter,\n"
"                    $config\n"
"                );\n"
"            });\n"
"        }\n"
"    }\n"
msgstr "                return new FilesystemAdapter(\n"
"                    new Filesystem($adapter, $config),\n"
"                    $adapter,\n"
"                    $config\n"
"                );\n"
"            });\n"
"        }\n"
"    }\n"

# File: docs/9.x/filesystem.md, line: 584
# File: docs/master/filesystem.md, line: 584
#. type: Plain text
msgid "The first argument of the `extend` method is the name of the driver and the second is a closure that receives the `$app` and `$config` variables. The closure must return an instance of `Illuminate\\Filesystem\\FilesystemAdapter`. The `$config` variable contains the values defined in `config/filesystems.php` for the specified disk."
msgstr "傳入 `extend` 方法的第一個引數是 Driver 的名稱，而第二個引數則是一本接收了 `$app` 與 `$config` 變數的閉包。該閉包應回傳 `Illuminate\\Filesystem\\FilesystemAdapter` 的實體。`$config` 變數則包含了定義在 `config/filesystems.php` 中指定 Disk 的設定值。"

