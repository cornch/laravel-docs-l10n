msgid ""
msgstr ""
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/templates/cashier-paddle.pot\n"
"X-Crowdin-File-ID: 23\n"
"Project-Id-Version: laravel-docs\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"PO-Revision-Date: 2024-11-30 06:47\n"

#: ./docs/8.x/cashier-paddle.md:1
#: ./docs/9.x/cashier-paddle.md:1
#: ./docs/10.x/cashier-paddle.md:1
#: ./docs/11.x/cashier-paddle.md:1
#: ./docs/master/cashier-paddle.md:1
msgctxt "H1"
msgid "Laravel Cashier (Paddle)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:3
#: ./docs/9.x/cashier-paddle.md:3
#: ./docs/10.x/cashier-paddle.md:3
#: ./docs/11.x/cashier-paddle.md:3
#: ./docs/master/cashier-paddle.md:3
msgctxt "P"
msgid "[Introduction](#introduction)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:4
#: ./docs/9.x/cashier-paddle.md:4
#: ./docs/10.x/cashier-paddle.md:4
#: ./docs/11.x/cashier-paddle.md:4
#: ./docs/master/cashier-paddle.md:4
msgctxt "P"
msgid "[Upgrading Cashier](#upgrading-cashier)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:5
#: ./docs/9.x/cashier-paddle.md:5
#: ./docs/10.x/cashier-paddle.md:5
#: ./docs/11.x/cashier-paddle.md:5
#: ./docs/master/cashier-paddle.md:5
msgctxt "P"
msgid "[Installation](#installation)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:6
#: ./docs/9.x/cashier-paddle.md:6
#: ./docs/10.x/cashier-paddle.md:6
#: ./docs/11.x/cashier-paddle.md:6
#: ./docs/master/cashier-paddle.md:6
msgctxt "P"
msgid "[Paddle Sandbox](#paddle-sandbox)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:7
#: ./docs/9.x/cashier-paddle.md:7
msgctxt "P"
msgid "[Database Migrations](#database-migrations)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:8
#: ./docs/9.x/cashier-paddle.md:8
#: ./docs/10.x/cashier-paddle.md:7
#: ./docs/11.x/cashier-paddle.md:7
#: ./docs/master/cashier-paddle.md:7
msgctxt "P"
msgid "[Configuration](#configuration)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:9
#: ./docs/9.x/cashier-paddle.md:9
#: ./docs/10.x/cashier-paddle.md:8
#: ./docs/11.x/cashier-paddle.md:8
#: ./docs/master/cashier-paddle.md:8
msgctxt "P"
msgid "[Billable Model](#billable-model)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:10
#: ./docs/9.x/cashier-paddle.md:10
#: ./docs/10.x/cashier-paddle.md:9
#: ./docs/11.x/cashier-paddle.md:9
#: ./docs/master/cashier-paddle.md:9
msgctxt "P"
msgid "[API Keys](#api-keys)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:11
#: ./docs/9.x/cashier-paddle.md:11
#: ./docs/10.x/cashier-paddle.md:10
#: ./docs/11.x/cashier-paddle.md:10
#: ./docs/master/cashier-paddle.md:10
msgctxt "P"
msgid "[Paddle JS](#paddle-js)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:12
#: ./docs/9.x/cashier-paddle.md:12
#: ./docs/10.x/cashier-paddle.md:11
#: ./docs/11.x/cashier-paddle.md:11
#: ./docs/master/cashier-paddle.md:11
msgctxt "P"
msgid "[Currency Configuration](#currency-configuration)"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:13
#: ./docs/11.x/cashier-paddle.md:13
#: ./docs/master/cashier-paddle.md:13
msgctxt "P"
msgid "[Quickstart](#quickstart)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:13
#: ./docs/9.x/cashier-paddle.md:13
#: ./docs/10.x/cashier-paddle.md:12
#: ./docs/11.x/cashier-paddle.md:12
#: ./docs/master/cashier-paddle.md:12
msgctxt "P"
msgid "[Overriding Default Models](#overriding-default-models)"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:14
#: ./docs/11.x/cashier-paddle.md:14
#: ./docs/master/cashier-paddle.md:14
msgctxt "P"
msgid "[Selling Products](#quickstart-selling-products)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:14
#: ./docs/9.x/cashier-paddle.md:14
msgctxt "P"
msgid "[Core Concepts](#core-concepts)"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:15
#: ./docs/11.x/cashier-paddle.md:15
#: ./docs/master/cashier-paddle.md:15
msgctxt "P"
msgid "[Selling Subscriptions](#quickstart-selling-subscriptions)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:15
#: ./docs/9.x/cashier-paddle.md:15
msgctxt "P"
msgid "[Pay Links](#pay-links)"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:16
#: ./docs/11.x/cashier-paddle.md:16
#: ./docs/master/cashier-paddle.md:16
msgctxt "P"
msgid "[Checkout Sessions](#checkout-sessions)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:16
#: ./docs/9.x/cashier-paddle.md:16
#: ./docs/10.x/cashier-paddle.md:18
#: ./docs/11.x/cashier-paddle.md:18
#: ./docs/master/cashier-paddle.md:18
msgctxt "P"
msgid "[Inline Checkout](#inline-checkout)"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:17
#: ./docs/11.x/cashier-paddle.md:17
#: ./docs/master/cashier-paddle.md:17
msgctxt "P"
msgid "[Overlay Checkout](#overlay-checkout)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:17
#: ./docs/9.x/cashier-paddle.md:17
msgctxt "P"
msgid "[User Identification](#user-identification)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:18
#: ./docs/9.x/cashier-paddle.md:18
msgctxt "P"
msgid "[Prices](#prices)"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:19
#: ./docs/11.x/cashier-paddle.md:19
#: ./docs/master/cashier-paddle.md:19
msgctxt "P"
msgid "[Guest Checkouts](#guest-checkouts)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:19
#: ./docs/9.x/cashier-paddle.md:19
#: ./docs/10.x/cashier-paddle.md:23
#: ./docs/11.x/cashier-paddle.md:23
#: ./docs/master/cashier-paddle.md:23
msgctxt "P"
msgid "[Customers](#customers)"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:20
#: ./docs/11.x/cashier-paddle.md:20
#: ./docs/master/cashier-paddle.md:20
msgctxt "P"
msgid "[Price Previews](#price-previews)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:20
#: ./docs/9.x/cashier-paddle.md:20
#: ./docs/10.x/cashier-paddle.md:24
#: ./docs/11.x/cashier-paddle.md:24
#: ./docs/master/cashier-paddle.md:24
msgctxt "P"
msgid "[Customer Defaults](#customer-defaults)"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:21
#: ./docs/11.x/cashier-paddle.md:21
#: ./docs/master/cashier-paddle.md:21
msgctxt "P"
msgid "[Customer Price Previews](#customer-price-previews)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:21
#: ./docs/9.x/cashier-paddle.md:21
#: ./docs/10.x/cashier-paddle.md:27
#: ./docs/11.x/cashier-paddle.md:27
#: ./docs/master/cashier-paddle.md:27
msgctxt "P"
msgid "[Subscriptions](#subscriptions)"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:22
#: ./docs/11.x/cashier-paddle.md:22
#: ./docs/master/cashier-paddle.md:22
msgctxt "P"
msgid "[Discounts](#price-discounts)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:22
#: ./docs/9.x/cashier-paddle.md:22
#: ./docs/10.x/cashier-paddle.md:28
#: ./docs/11.x/cashier-paddle.md:28
#: ./docs/master/cashier-paddle.md:28
msgctxt "P"
msgid "[Creating Subscriptions](#creating-subscriptions)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:23
#: ./docs/9.x/cashier-paddle.md:23
#: ./docs/10.x/cashier-paddle.md:29
#: ./docs/11.x/cashier-paddle.md:29
#: ./docs/master/cashier-paddle.md:29
msgctxt "P"
msgid "[Checking Subscription Status](#checking-subscription-status)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:24
#: ./docs/9.x/cashier-paddle.md:24
#: ./docs/10.x/cashier-paddle.md:30
#: ./docs/11.x/cashier-paddle.md:30
#: ./docs/master/cashier-paddle.md:30
msgctxt "P"
msgid "[Subscription Single Charges](#subscription-single-charges)"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:25
#: ./docs/11.x/cashier-paddle.md:25
#: ./docs/master/cashier-paddle.md:25
msgctxt "P"
msgid "[Retrieving Customers](#retrieving-customers)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:25
#: ./docs/9.x/cashier-paddle.md:25
#: ./docs/10.x/cashier-paddle.md:31
#: ./docs/11.x/cashier-paddle.md:31
#: ./docs/master/cashier-paddle.md:31
msgctxt "P"
msgid "[Updating Payment Information](#updating-payment-information)"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:26
#: ./docs/11.x/cashier-paddle.md:26
#: ./docs/master/cashier-paddle.md:26
msgctxt "P"
msgid "[Creating Customers](#creating-customers)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:26
#: ./docs/9.x/cashier-paddle.md:26
#: ./docs/10.x/cashier-paddle.md:32
#: ./docs/11.x/cashier-paddle.md:32
#: ./docs/master/cashier-paddle.md:32
msgctxt "P"
msgid "[Changing Plans](#changing-plans)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:27
#: ./docs/9.x/cashier-paddle.md:27
#: ./docs/10.x/cashier-paddle.md:33
#: ./docs/11.x/cashier-paddle.md:33
#: ./docs/master/cashier-paddle.md:33
msgctxt "P"
msgid "[Subscription Quantity](#subscription-quantity)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:28
#: ./docs/9.x/cashier-paddle.md:28
msgctxt "P"
msgid "[Subscription Modifiers](#subscription-modifiers)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:29
#: ./docs/9.x/cashier-paddle.md:30
#: ./docs/10.x/cashier-paddle.md:36
#: ./docs/11.x/cashier-paddle.md:36
#: ./docs/master/cashier-paddle.md:36
msgctxt "P"
msgid "[Pausing Subscriptions](#pausing-subscriptions)"
msgstr ""

#: ./docs/9.x/cashier-paddle.md:29
#: ./docs/10.x/cashier-paddle.md:35
#: ./docs/11.x/cashier-paddle.md:35
#: ./docs/master/cashier-paddle.md:35
msgctxt "P"
msgid "[Multiple Subscriptions](#multiple-subscriptions)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:30
#: ./docs/9.x/cashier-paddle.md:31
msgctxt "P"
msgid "[Cancelling Subscriptions](#cancelling-subscriptions)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:31
#: ./docs/9.x/cashier-paddle.md:32
#: ./docs/10.x/cashier-paddle.md:38
#: ./docs/11.x/cashier-paddle.md:38
#: ./docs/master/cashier-paddle.md:38
msgctxt "P"
msgid "[Subscription Trials](#subscription-trials)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:32
#: ./docs/9.x/cashier-paddle.md:33
#: ./docs/10.x/cashier-paddle.md:39
#: ./docs/11.x/cashier-paddle.md:39
#: ./docs/master/cashier-paddle.md:39
msgctxt "P"
msgid "[With Payment Method Up Front](#with-payment-method-up-front)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:33
#: ./docs/9.x/cashier-paddle.md:34
#: ./docs/10.x/cashier-paddle.md:40
#: ./docs/11.x/cashier-paddle.md:40
#: ./docs/master/cashier-paddle.md:40
msgctxt "P"
msgid "[Without Payment Method Up Front](#without-payment-method-up-front)"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:34
#: ./docs/11.x/cashier-paddle.md:34
#: ./docs/master/cashier-paddle.md:34
msgctxt "P"
msgid "[Subscriptions With Multiple Products](#subscriptions-with-multiple-products)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:34
#: ./docs/9.x/cashier-paddle.md:35
#: ./docs/10.x/cashier-paddle.md:42
#: ./docs/11.x/cashier-paddle.md:42
#: ./docs/master/cashier-paddle.md:42
msgctxt "P"
msgid "[Handling Paddle Webhooks](#handling-paddle-webhooks)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:35
#: ./docs/9.x/cashier-paddle.md:36
#: ./docs/10.x/cashier-paddle.md:43
#: ./docs/11.x/cashier-paddle.md:43
#: ./docs/master/cashier-paddle.md:43
msgctxt "P"
msgid "[Defining Webhook Event Handlers](#defining-webhook-event-handlers)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:36
#: ./docs/9.x/cashier-paddle.md:37
#: ./docs/10.x/cashier-paddle.md:44
#: ./docs/11.x/cashier-paddle.md:44
#: ./docs/master/cashier-paddle.md:44
msgctxt "P"
msgid "[Verifying Webhook Signatures](#verifying-webhook-signatures)"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:37
#: ./docs/11.x/cashier-paddle.md:37
#: ./docs/master/cashier-paddle.md:37
msgctxt "P"
msgid "[Canceling Subscriptions](#canceling-subscriptions)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:37
#: ./docs/9.x/cashier-paddle.md:38
#: ./docs/10.x/cashier-paddle.md:45
#: ./docs/11.x/cashier-paddle.md:45
#: ./docs/master/cashier-paddle.md:45
msgctxt "P"
msgid "[Single Charges](#single-charges)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:38
#: ./docs/9.x/cashier-paddle.md:39
msgctxt "P"
msgid "[Simple Charge](#simple-charge)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:39
#: ./docs/9.x/cashier-paddle.md:40
msgctxt "P"
msgid "[Charging Products](#charging-products)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:40
#: ./docs/9.x/cashier-paddle.md:41
msgctxt "P"
msgid "[Refunding Orders](#refunding-orders)"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:41
#: ./docs/11.x/cashier-paddle.md:41
#: ./docs/master/cashier-paddle.md:41
msgctxt "P"
msgid "[Extend or Activate a Trial](#extend-or-activate-a-trial)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:41
#: ./docs/9.x/cashier-paddle.md:42
msgctxt "P"
msgid "[Receipts](#receipts)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:42
#: ./docs/9.x/cashier-paddle.md:43
msgctxt "P"
msgid "[Past & Upcoming Payments](#past-and-upcoming-payments)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:43
#: ./docs/9.x/cashier-paddle.md:44
msgctxt "P"
msgid "[Handling Failed Payments](#handling-failed-payments)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:44
#: ./docs/9.x/cashier-paddle.md:45
#: ./docs/10.x/cashier-paddle.md:51
#: ./docs/11.x/cashier-paddle.md:51
#: ./docs/master/cashier-paddle.md:51
msgctxt "P"
msgid "[Testing](#testing)"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:46
#: ./docs/11.x/cashier-paddle.md:46
#: ./docs/master/cashier-paddle.md:46
msgctxt "P"
msgid "[Charging for Products](#charging-for-products)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:46
#: ./docs/9.x/cashier-paddle.md:47
#: ./docs/10.x/cashier-paddle.md:53
#: ./docs/11.x/cashier-paddle.md:53
#: ./docs/master/cashier-paddle.md:53
#~ msgctxt "P"
#~ msgid "<a name=\"introduction\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:47
#: ./docs/11.x/cashier-paddle.md:47
#: ./docs/master/cashier-paddle.md:47
msgctxt "P"
msgid "[Refunding Transactions](#refunding-transactions)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:47
#: ./docs/9.x/cashier-paddle.md:48
#: ./docs/10.x/cashier-paddle.md:54
#: ./docs/11.x/cashier-paddle.md:54
#: ./docs/master/cashier-paddle.md:54
msgctxt "H2"
msgid "Introduction"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:48
#: ./docs/11.x/cashier-paddle.md:48
#: ./docs/master/cashier-paddle.md:48
msgctxt "P"
msgid "[Crediting Transactions](#crediting-transactions)"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:49
#: ./docs/11.x/cashier-paddle.md:49
#: ./docs/master/cashier-paddle.md:49
msgctxt "P"
msgid "[Transactions](#transactions)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:49
#: ./docs/9.x/cashier-paddle.md:50
msgctxt "P"
msgid "[Laravel Cashier Paddle](https://github.com/laravel/cashier-paddle) provides an expressive, fluent interface to [Paddle's](https://paddle.com) subscription billing services. It handles almost all of the boilerplate subscription billing code you are dreading. In addition to basic subscription management, Cashier can handle: coupons, swapping subscription, subscription \"quantities\", cancellation grace periods, and more."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:50
#: ./docs/11.x/cashier-paddle.md:50
#: ./docs/master/cashier-paddle.md:50
msgctxt "P"
msgid "[Past and Upcoming Payments](#past-and-upcoming-payments)"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:51
msgctxt "P"
msgid "While working with Cashier we recommend you also review Paddle's [user guides](https://developer.paddle.com/guides) and [API documentation](https://developer.paddle.com/api-reference/intro)."
msgstr ""

#: ./docs/9.x/cashier-paddle.md:52
msgctxt "P"
msgid "While working with Cashier we recommend you also review Paddle's [user guides](https://developer.paddle.com/guides) and [API documentation](https://developer.paddle.com/api-reference)."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:53
#: ./docs/9.x/cashier-paddle.md:54
#: ./docs/10.x/cashier-paddle.md:63
#: ./docs/11.x/cashier-paddle.md:63
#: ./docs/master/cashier-paddle.md:63
#~ msgctxt "P"
#~ msgid "<a name=\"upgrading-cashier\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:54
#: ./docs/9.x/cashier-paddle.md:55
#: ./docs/10.x/cashier-paddle.md:64
#: ./docs/11.x/cashier-paddle.md:64
#: ./docs/master/cashier-paddle.md:64
msgctxt "H2"
msgid "Upgrading Cashier"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:56
#: ./docs/9.x/cashier-paddle.md:57
#: ./docs/10.x/cashier-paddle.md:66
#: ./docs/11.x/cashier-paddle.md:66
#: ./docs/master/cashier-paddle.md:66
msgctxt "P"
msgid "When upgrading to a new version of Cashier, it's important that you carefully review [the upgrade guide](https://github.com/laravel/cashier-paddle/blob/master/UPGRADE.md)."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:57
#: ./docs/11.x/cashier-paddle.md:57
#: ./docs/master/cashier-paddle.md:57
msgctxt "P"
msgid "This documentation is for Cashier Paddle 2.x's integration with Paddle Billing. If you're still using Paddle Classic, you should use [Cashier Paddle 1.x](https://github.com/laravel/cashier-paddle/tree/1.x)."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:58
#: ./docs/9.x/cashier-paddle.md:59
#: ./docs/10.x/cashier-paddle.md:68
#: ./docs/11.x/cashier-paddle.md:68
#: ./docs/master/cashier-paddle.md:68
#~ msgctxt "P"
#~ msgid "<a name=\"installation\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:59
#: ./docs/11.x/cashier-paddle.md:59
#: ./docs/master/cashier-paddle.md:59
msgctxt "P"
msgid "[Laravel Cashier Paddle](https://github.com/laravel/cashier-paddle) provides an expressive, fluent interface to [Paddle's](https://paddle.com) subscription billing services. It handles almost all of the boilerplate subscription billing code you are dreading. In addition to basic subscription management, Cashier can handle: swapping subscriptions, subscription \"quantities\", subscription pausing, cancelation grace periods, and more."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:59
#: ./docs/9.x/cashier-paddle.md:60
#: ./docs/10.x/cashier-paddle.md:69
#: ./docs/11.x/cashier-paddle.md:69
#: ./docs/master/cashier-paddle.md:69
msgctxt "H2"
msgid "Installation"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:61
#: ./docs/11.x/cashier-paddle.md:61
#: ./docs/master/cashier-paddle.md:61
msgctxt "P"
msgid "Before digging into Cashier Paddle, we recommend you also review Paddle's [concept guides](https://developer.paddle.com/concepts/overview) and [API documentation](https://developer.paddle.com/api-reference/overview)."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:61
#: ./docs/9.x/cashier-paddle.md:62
#: ./docs/10.x/cashier-paddle.md:71
#: ./docs/11.x/cashier-paddle.md:71
#: ./docs/master/cashier-paddle.md:71
msgctxt "P"
msgid "First, install the Cashier package for Paddle using the Composer package manager:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:63
#: ./docs/9.x/cashier-paddle.md:64
#: ./docs/10.x/cashier-paddle.md:73
#: ./docs/11.x/cashier-paddle.md:73
#: ./docs/master/cashier-paddle.md:73
msgctxt "CODE"
msgid "composer require laravel/cashier-paddle"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:65
#: ./docs/9.x/cashier-paddle.md:69
#: ./docs/10.x/cashier-paddle.md:90
#: ./docs/11.x/cashier-paddle.md:90
#: ./docs/master/cashier-paddle.md:90
msgctxt "P"
msgid "To ensure Cashier properly handles all Paddle events, remember to [set up Cashier's webhook handling](#handling-paddle-webhooks)."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:67
#: ./docs/9.x/cashier-paddle.md:71
#: ./docs/10.x/cashier-paddle.md:92
#: ./docs/11.x/cashier-paddle.md:92
#: ./docs/master/cashier-paddle.md:92
#~ msgctxt "P"
#~ msgid "<a name=\"paddle-sandbox\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:68
#: ./docs/9.x/cashier-paddle.md:72
#: ./docs/10.x/cashier-paddle.md:93
#: ./docs/11.x/cashier-paddle.md:93
#: ./docs/master/cashier-paddle.md:93
msgctxt "H3"
msgid "Paddle Sandbox"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:70
#: ./docs/9.x/cashier-paddle.md:74
msgctxt "P"
msgid "During local and staging development, you should [register a Paddle Sandbox account](https://developer.paddle.com/getting-started/sandbox). This account will give you a sandboxed environment to test and develop your applications without making actual payments. You may use Paddle's [test card numbers](https://developer.paddle.com/getting-started/sandbox#test-cards) to simulate various payment scenarios."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:72
#: ./docs/9.x/cashier-paddle.md:76
#: ./docs/10.x/cashier-paddle.md:97
#: ./docs/11.x/cashier-paddle.md:97
#: ./docs/master/cashier-paddle.md:97
msgctxt "P"
msgid "When using the Paddle Sandbox environment, you should set the `PADDLE_SANDBOX` environment variable to `true` within your application's `.env` file:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:74
#: ./docs/9.x/cashier-paddle.md:78
#: ./docs/10.x/cashier-paddle.md:99
#: ./docs/11.x/cashier-paddle.md:99
#: ./docs/master/cashier-paddle.md:99
msgctxt "P"
msgid "PADDLE_SANDBOX=true"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:76
msgctxt "P"
msgid "After you have finished developing your application you may [apply for a Paddle vendor account](https://paddle.com)."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:77
#: ./docs/11.x/cashier-paddle.md:77
#: ./docs/master/cashier-paddle.md:77
msgctxt "P"
msgid "Next, you should publish the Cashier migration files using the `vendor:publish` Artisan command:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:78
#: ./docs/9.x/cashier-paddle.md:84
#~ msgctxt "P"
#~ msgid "<a name=\"database-migrations\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:79
#: ./docs/9.x/cashier-paddle.md:85
msgctxt "H3"
msgid "Database Migrations"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:81
#: ./docs/9.x/cashier-paddle.md:87
msgctxt "P"
msgid "The Cashier service provider registers its own database migration directory, so remember to migrate your database after installing the package. The Cashier migrations will create a new `customers` table. In addition, a new `subscriptions` table will be created to store all of your customer's subscriptions. Finally, a new `receipts` table will be created to store all of your application's receipt information:"
msgstr ""

#: ./docs/9.x/cashier-paddle.md:82
#: ./docs/10.x/cashier-paddle.md:103
#: ./docs/11.x/cashier-paddle.md:103
#: ./docs/master/cashier-paddle.md:103
msgctxt "P"
msgid "After you have finished developing your application you may [apply for a Paddle vendor account](https://paddle.com). Before your application is placed into production, Paddle will need to approve your application's domain."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:83
#: ./docs/11.x/cashier-paddle.md:83
#: ./docs/master/cashier-paddle.md:83
msgctxt "P"
msgid "Then, you should run your application's database migrations. The Cashier migrations will create a new `customers` table. In addition, new `subscriptions` and `subscription_items` tables will be created to store all of your customer's subscriptions. Lastly, a new `transactions` table will be created to store all of the Paddle transactions associated with your customers:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:83
#: ./docs/9.x/cashier-paddle.md:89
#: ./docs/10.x/cashier-paddle.md:85
#: ./docs/11.x/cashier-paddle.md:85
#: ./docs/master/cashier-paddle.md:85
msgctxt "CODE"
msgid "php artisan migrate"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:85
#: ./docs/9.x/cashier-paddle.md:93
msgctxt "P"
msgid "If you need to overwrite the migrations that are included with Cashier, you can publish them using the `vendor:publish` Artisan command:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:87
#: ./docs/9.x/cashier-paddle.md:95
#: ./docs/10.x/cashier-paddle.md:79
#: ./docs/11.x/cashier-paddle.md:79
#: ./docs/master/cashier-paddle.md:79
msgctxt "CODE"
msgid "php artisan vendor:publish --tag=\"cashier-migrations\""
msgstr ""

#: ./docs/8.x/cashier-paddle.md:89
#: ./docs/9.x/cashier-paddle.md:99
msgctxt "P"
msgid "If you would like to prevent Cashier's migrations from running entirely, you may use the `ignoreMigrations` provided by Cashier. Typically, this method should be called in the `register` method of your `AppServiceProvider`:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:91
#: ./docs/9.x/cashier-paddle.md:101
msgctxt "CODE"
msgid "use Laravel\\Paddle\\Cashier;\n\n"
"/**\n"
" * Register any application services.\n"
" *\n"
" * @return void\n"
" */\n"
"public function register()\n"
"{\n"
"    Cashier::ignoreMigrations();\n"
"}"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:95
#: ./docs/11.x/cashier-paddle.md:95
#: ./docs/master/cashier-paddle.md:95
msgctxt "P"
msgid "During local and staging development, you should [register a Paddle Sandbox account](https://sandbox-login.paddle.com/signup). This account will give you a sandboxed environment to test and develop your applications without making actual payments. You may use Paddle's [test card numbers](https://developer.paddle.com/concepts/payment-methods/credit-debit-card) to simulate various payment scenarios."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:103
#: ./docs/9.x/cashier-paddle.md:113
#: ./docs/10.x/cashier-paddle.md:105
#: ./docs/11.x/cashier-paddle.md:105
#: ./docs/master/cashier-paddle.md:105
#~ msgctxt "P"
#~ msgid "<a name=\"configuration\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:104
#: ./docs/9.x/cashier-paddle.md:114
#: ./docs/10.x/cashier-paddle.md:106
#: ./docs/11.x/cashier-paddle.md:106
#: ./docs/master/cashier-paddle.md:106
msgctxt "H2"
msgid "Configuration"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:106
#: ./docs/9.x/cashier-paddle.md:116
#: ./docs/10.x/cashier-paddle.md:108
#: ./docs/11.x/cashier-paddle.md:108
#: ./docs/master/cashier-paddle.md:108
#~ msgctxt "P"
#~ msgid "<a name=\"billable-model\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:107
#: ./docs/9.x/cashier-paddle.md:117
#: ./docs/10.x/cashier-paddle.md:109
#: ./docs/11.x/cashier-paddle.md:109
#: ./docs/master/cashier-paddle.md:109
msgctxt "H3"
msgid "Billable Model"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:109
#: ./docs/9.x/cashier-paddle.md:119
msgctxt "P"
msgid "Before using Cashier, you must add the `Billable` trait to your user model definition. This trait provides various methods to allow you to perform common billing tasks, such as creating subscriptions, applying coupons and updating payment method information:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:111
#: ./docs/11.x/cashier-paddle.md:111
#: ./docs/master/cashier-paddle.md:111
msgctxt "P"
msgid "Before using Cashier, you must add the `Billable` trait to your user model definition. This trait provides various methods to allow you to perform common billing tasks, such as creating subscriptions and updating payment method information:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:111
#: ./docs/9.x/cashier-paddle.md:121
#: ./docs/10.x/cashier-paddle.md:113
#: ./docs/11.x/cashier-paddle.md:113
#: ./docs/master/cashier-paddle.md:113
msgctxt "CODE"
msgid "use Laravel\\Paddle\\Billable;\n\n"
"class User extends Authenticatable\n"
"{\n"
"    use Billable;\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:118
#: ./docs/9.x/cashier-paddle.md:128
#: ./docs/10.x/cashier-paddle.md:120
#: ./docs/11.x/cashier-paddle.md:120
#: ./docs/master/cashier-paddle.md:120
msgctxt "P"
msgid "If you have billable entities that are not users, you may also add the trait to those classes:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:120
#: ./docs/9.x/cashier-paddle.md:130
#: ./docs/10.x/cashier-paddle.md:122
#: ./docs/11.x/cashier-paddle.md:122
#: ./docs/master/cashier-paddle.md:122
msgctxt "CODE"
msgid "use Illuminate\\Database\\Eloquent\\Model;\n"
"use Laravel\\Paddle\\Billable;\n\n"
"class Team extends Model\n"
"{\n"
"    use Billable;\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:128
#: ./docs/9.x/cashier-paddle.md:138
#: ./docs/10.x/cashier-paddle.md:130
#: ./docs/11.x/cashier-paddle.md:130
#: ./docs/master/cashier-paddle.md:130
#~ msgctxt "P"
#~ msgid "<a name=\"api-keys\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:129
#: ./docs/9.x/cashier-paddle.md:139
#: ./docs/10.x/cashier-paddle.md:131
#: ./docs/11.x/cashier-paddle.md:131
#: ./docs/master/cashier-paddle.md:131
msgctxt "H3"
msgid "API Keys"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:131
#: ./docs/9.x/cashier-paddle.md:141
#: ./docs/10.x/cashier-paddle.md:133
#: ./docs/11.x/cashier-paddle.md:133
#: ./docs/master/cashier-paddle.md:133
msgctxt "P"
msgid "Next, you should configure your Paddle keys in your application's `.env` file. You can retrieve your Paddle API keys from the Paddle control panel:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:133
#: ./docs/9.x/cashier-paddle.md:143
msgctxt "CODE"
msgid "PADDLE_VENDOR_ID=your-paddle-vendor-id\n"
"PADDLE_VENDOR_AUTH_CODE=your-paddle-vendor-auth-code\n"
"PADDLE_PUBLIC_KEY=\"your-paddle-public-key\"\n"
"PADDLE_SANDBOX=true"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:135
#: ./docs/11.x/cashier-paddle.md:135
#: ./docs/master/cashier-paddle.md:135
msgctxt "CODE: ini"
msgid "PADDLE_CLIENT_SIDE_TOKEN=your-paddle-client-side-token\n"
"PADDLE_API_KEY=your-paddle-api-key\n"
"PADDLE_RETAIN_KEY=your-paddle-retain-key\n"
"PADDLE_WEBHOOK_SECRET=\"your-paddle-webhook-secret\"\n"
"PADDLE_SANDBOX=true"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:138
#: ./docs/9.x/cashier-paddle.md:150
#: ./docs/10.x/cashier-paddle.md:143
#: ./docs/11.x/cashier-paddle.md:143
#: ./docs/master/cashier-paddle.md:143
msgctxt "P"
msgid "The `PADDLE_SANDBOX` environment variable should be set to `true` when you are using [Paddle's Sandbox environment](#paddle-sandbox). The `PADDLE_SANDBOX` variable should be set to `false` if you are deploying your application to production and are using Paddle's live vendor environment."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:140
#: ./docs/9.x/cashier-paddle.md:152
#: ./docs/10.x/cashier-paddle.md:147
#: ./docs/11.x/cashier-paddle.md:147
#: ./docs/master/cashier-paddle.md:147
#~ msgctxt "P"
#~ msgid "<a name=\"paddle-js\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:141
#: ./docs/9.x/cashier-paddle.md:153
#: ./docs/10.x/cashier-paddle.md:148
#: ./docs/11.x/cashier-paddle.md:148
#: ./docs/master/cashier-paddle.md:148
msgctxt "H3"
msgid "Paddle JS"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:143
#: ./docs/9.x/cashier-paddle.md:155
#: ./docs/10.x/cashier-paddle.md:150
#: ./docs/11.x/cashier-paddle.md:150
#: ./docs/master/cashier-paddle.md:150
msgctxt "P"
msgid "Paddle relies on its own JavaScript library to initiate the Paddle checkout widget. You can load the JavaScript library by placing the `@paddleJS` Blade directive right before your application layout's closing `</head>` tag:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:145
#: ./docs/11.x/cashier-paddle.md:145
#: ./docs/master/cashier-paddle.md:145
msgctxt "P"
msgid "The `PADDLE_RETAIN_KEY` is optional and should only be set if you're using Paddle with [Retain](https://developer.paddle.com/paddlejs/retain)."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:145
#: ./docs/9.x/cashier-paddle.md:157
#: ./docs/10.x/cashier-paddle.md:152
#: ./docs/11.x/cashier-paddle.md:152
#: ./docs/master/cashier-paddle.md:152
msgctxt "CODE"
msgid "<head>\n"
"    ...\n\n"
"    @paddleJS\n"
"</head>"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:151
#: ./docs/9.x/cashier-paddle.md:165
#: ./docs/10.x/cashier-paddle.md:160
#: ./docs/11.x/cashier-paddle.md:160
#: ./docs/master/cashier-paddle.md:160
#~ msgctxt "P"
#~ msgid "<a name=\"currency-configuration\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:152
#: ./docs/9.x/cashier-paddle.md:166
#: ./docs/10.x/cashier-paddle.md:161
#: ./docs/11.x/cashier-paddle.md:161
#: ./docs/master/cashier-paddle.md:161
msgctxt "H3"
msgid "Currency Configuration"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:154
#: ./docs/9.x/cashier-paddle.md:168
msgctxt "P"
msgid "The default Cashier currency is United States Dollars (USD). You can change the default currency by defining a `CASHIER_CURRENCY` environment variable within your application's `.env` file:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:156
#: ./docs/8.x/cashier-paddle.md:1052
#: ./docs/9.x/cashier-paddle.md:170
#: ./docs/9.x/cashier-paddle.md:1124
msgctxt "CODE"
msgid "CASHIER_CURRENCY=EUR"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:158
#: ./docs/9.x/cashier-paddle.md:174
msgctxt "P"
msgid "In addition to configuring Cashier's currency, you may also specify a locale to be used when formatting money values for display on invoices. Internally, Cashier utilizes [PHP's `NumberFormatter` class](https://www.php.net/manual/en/class.numberformatter.php) to set the currency locale:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:160
#: ./docs/9.x/cashier-paddle.md:176
#: ./docs/10.x/cashier-paddle.md:165
#: ./docs/11.x/cashier-paddle.md:165
#: ./docs/master/cashier-paddle.md:165
msgctxt "CODE"
msgid "CASHIER_CURRENCY_LOCALE=nl_BE"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:162
#: ./docs/9.x/cashier-paddle.md:181
#: ./docs/10.x/cashier-paddle.md:170
#: ./docs/11.x/cashier-paddle.md:170
#: ./docs/master/cashier-paddle.md:170
msgctxt "P"
msgid "In order to use locales other than `en`, ensure the `ext-intl` PHP extension is installed and configured on your server."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:163
#: ./docs/master/cashier-paddle.md:163
msgctxt "P"
msgid "You can specify a locale to be used when formatting money values for display on invoices. Internally, Cashier utilizes [PHP's `NumberFormatter` class](https://www.php.net/manual/en/class.numberformatter.php) class to set the currency locale:"
msgstr ""

#: ./docs/11.x/cashier-paddle.md:163
msgctxt "P"
msgid "You can specify a locale to be used when formatting money values for display on invoices. Internally, Cashier utilizes [PHP's `NumberFormatter` class](https://www.php.net/manual/en/class.numberformatter.php) to set the currency locale:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:164
#: ./docs/9.x/cashier-paddle.md:183
#: ./docs/10.x/cashier-paddle.md:172
#: ./docs/11.x/cashier-paddle.md:172
#: ./docs/master/cashier-paddle.md:172
#~ msgctxt "P"
#~ msgid "<a name=\"overriding-default-models\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:165
#: ./docs/9.x/cashier-paddle.md:184
#: ./docs/10.x/cashier-paddle.md:173
#: ./docs/11.x/cashier-paddle.md:173
#: ./docs/master/cashier-paddle.md:173
msgctxt "H3"
msgid "Overriding Default Models"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:167
#: ./docs/9.x/cashier-paddle.md:186
#: ./docs/10.x/cashier-paddle.md:175
#: ./docs/11.x/cashier-paddle.md:175
#: ./docs/master/cashier-paddle.md:175
msgctxt "P"
msgid "You are free to extend the models used internally by Cashier by defining your own model and extending the corresponding Cashier model:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:169
#: ./docs/9.x/cashier-paddle.md:188
#: ./docs/10.x/cashier-paddle.md:177
#: ./docs/11.x/cashier-paddle.md:177
#: ./docs/master/cashier-paddle.md:177
msgctxt "CODE"
msgid "use Laravel\\Paddle\\Subscription as CashierSubscription;\n\n"
"class Subscription extends CashierSubscription\n"
"{\n"
"    // ...\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:176
#: ./docs/9.x/cashier-paddle.md:195
#: ./docs/10.x/cashier-paddle.md:184
#: ./docs/11.x/cashier-paddle.md:184
#: ./docs/master/cashier-paddle.md:184
msgctxt "P"
msgid "After defining your model, you may instruct Cashier to use your custom model via the `Laravel\\Paddle\\Cashier` class. Typically, you should inform Cashier about your custom models in the `boot` method of your application's `App\\Providers\\AppServiceProvider` class:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:178
#: ./docs/9.x/cashier-paddle.md:197
msgctxt "CODE"
msgid "use App\\Models\\Cashier\\Receipt;\n"
"use App\\Models\\Cashier\\Subscription;\n\n"
"/**\n"
" * Bootstrap any application services.\n"
" *\n"
" * @return void\n"
" */\n"
"public function boot()\n"
"{\n"
"    Cashier::useReceiptModel(Receipt::class);\n"
"    Cashier::useSubscriptionModel(Subscription::class);\n"
"}"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:186
#: ./docs/11.x/cashier-paddle.md:186
#: ./docs/master/cashier-paddle.md:186
msgctxt "CODE"
msgid "use App\\Models\\Cashier\\Subscription;\n"
"use App\\Models\\Cashier\\Transaction;\n\n"
"/**\n"
" * Bootstrap any application services.\n"
" */\n"
"public function boot(): void\n"
"{\n"
"    Cashier::useSubscriptionModel(Subscription::class);\n"
"    Cashier::useTransactionModel(Transaction::class);\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:192
#: ./docs/9.x/cashier-paddle.md:211
#~ msgctxt "P"
#~ msgid "<a name=\"core-concepts\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:193
#: ./docs/9.x/cashier-paddle.md:212
msgctxt "H2"
msgid "Core Concepts"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:195
#: ./docs/9.x/cashier-paddle.md:214
#~ msgctxt "P"
#~ msgid "<a name=\"pay-links\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:196
#: ./docs/9.x/cashier-paddle.md:215
msgctxt "H3"
msgid "Pay Links"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:198
#: ./docs/11.x/cashier-paddle.md:198
#: ./docs/master/cashier-paddle.md:198
#~ msgctxt "P"
#~ msgid "<a name=\"quickstart\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:198
#: ./docs/9.x/cashier-paddle.md:217
msgctxt "P"
msgid "Paddle lacks an extensive CRUD API to perform subscription state changes. Therefore, most interactions with Paddle are done through its [checkout widget](https://developer.paddle.com/guides/how-tos/checkout/paddle-checkout). Before we can display the checkout widget, we must generate a \"pay link\" using Cashier. A \"pay link\" will inform the checkout widget of the billing operation we wish to perform:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:199
#: ./docs/11.x/cashier-paddle.md:199
#: ./docs/master/cashier-paddle.md:199
msgctxt "H2"
msgid "Quickstart"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:200
#: ./docs/9.x/cashier-paddle.md:219
msgctxt "CODE"
msgid "use App\\Models\\User;\n"
"use Illuminate\\Http\\Request;\n\n"
"Route::get('/user/subscribe', function (Request $request) {\n"
"    $payLink = $request->user()->newSubscription('default', $premium = 34567)\n"
"        ->returnTo(route('home'))\n"
"        ->create();\n\n"
"    return view('billing', ['payLink' => $payLink]);\n"
"});"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:201
#: ./docs/11.x/cashier-paddle.md:201
#: ./docs/master/cashier-paddle.md:201
#~ msgctxt "P"
#~ msgid "<a name=\"quickstart-selling-products\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:202
#: ./docs/11.x/cashier-paddle.md:202
#: ./docs/master/cashier-paddle.md:202
msgctxt "H3"
msgid "Selling Products"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:205
#: ./docs/10.x/cashier-paddle.md:303
#: ./docs/11.x/cashier-paddle.md:205
#: ./docs/11.x/cashier-paddle.md:303
#: ./docs/master/cashier-paddle.md:205
#: ./docs/master/cashier-paddle.md:303
msgctxt "P"
msgid "Before utilizing Paddle Checkout, you should define Products with fixed prices in your Paddle dashboard. In addition, you should [configure Paddle's webhook handling](#handling-paddle-webhooks)."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:207
#: ./docs/10.x/cashier-paddle.md:305
#: ./docs/11.x/cashier-paddle.md:207
#: ./docs/11.x/cashier-paddle.md:305
#: ./docs/master/cashier-paddle.md:207
#: ./docs/master/cashier-paddle.md:305
msgctxt "P"
msgid "Offering product and subscription billing via your application can be intimidating. However, thanks to Cashier and [Paddle's Checkout Overlay](https://www.paddle.com/billing/checkout), you can easily build modern, robust payment integrations."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:209
#: ./docs/11.x/cashier-paddle.md:209
#: ./docs/master/cashier-paddle.md:209
msgctxt "P"
msgid "To charge customers for non-recurring, single-charge products, we'll utilize Cashier to charge customers with Paddle's Checkout Overlay, where they will provide their payment details and confirm their purchase. Once the payment has been made via the Checkout Overlay, the customer will be redirected to a success URL of your choosing within your application:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:211
#: ./docs/11.x/cashier-paddle.md:211
#: ./docs/master/cashier-paddle.md:211
msgctxt "CODE"
msgid "use Illuminate\\Http\\Request;\n\n"
"Route::get('/buy', function (Request $request) {\n"
"    $checkout = $request->user()->checkout('pri_deluxe_album')\n"
"        ->returnTo(route('dashboard'));\n\n"
"    return view('buy', ['checkout' => $checkout]);\n"
"})->name('checkout');"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:211
#: ./docs/9.x/cashier-paddle.md:230
msgctxt "P"
msgid "Cashier includes a `paddle-button` [Blade component](/docs/{{version}}/blade#components). We may pass the pay link URL to this component as a \"prop\". When this button is clicked, Paddle's checkout widget will be displayed:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:213
#: ./docs/8.x/cashier-paddle.md:482
#: ./docs/9.x/cashier-paddle.md:232
#: ./docs/9.x/cashier-paddle.md:510
msgctxt "CODE: html"
msgid "<x-paddle-button :url=\"$payLink\" class=\"px-8 py-4\">\n"
"    Subscribe\n"
"</x-paddle-button>"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:219
#: ./docs/9.x/cashier-paddle.md:238
msgctxt "P"
msgid "By default, this will display a button with the standard Paddle styling. You can remove all Paddle styling by adding the `data-theme=\"none\"` attribute to the component:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:220
#: ./docs/11.x/cashier-paddle.md:220
#: ./docs/master/cashier-paddle.md:220
msgctxt "P"
msgid "As you can see in the example above, we will utilize Cashier's provided `checkout` method to create a checkout object to present the customer the Paddle Checkout Overlay for a given \"price identifier\". When using Paddle, \"prices\" refer to [defined prices for specific products](https://developer.paddle.com/build/products/create-products-prices)."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:221
#: ./docs/9.x/cashier-paddle.md:240
msgctxt "CODE: html"
msgid "<x-paddle-button :url=\"$payLink\" class=\"px-8 py-4\" data-theme=\"none\">\n"
"    Subscribe\n"
"</x-paddle-button>"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:222
#: ./docs/11.x/cashier-paddle.md:222
#: ./docs/master/cashier-paddle.md:222
msgctxt "P"
msgid "If necessary, the `checkout` method will automatically create a customer in Paddle and connect that Paddle customer record to the corresponding user in your application's database. After completing the checkout session, the customer will be redirected to a dedicated success page where you can display an informational message to the customer."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:224
#: ./docs/11.x/cashier-paddle.md:224
#: ./docs/master/cashier-paddle.md:224
msgctxt "P"
msgid "In the `buy` view, we will include a button to display the Checkout Overlay. The `paddle-button` Blade component is included with Cashier Paddle; however, you may also [manually render an overlay checkout](#manually-rendering-an-overlay-checkout):"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:226
#: ./docs/11.x/cashier-paddle.md:226
#: ./docs/master/cashier-paddle.md:226
msgctxt "CODE: html"
msgid "<x-paddle-button :checkout=\"$checkout\" class=\"px-8 py-4\">\n"
"    Buy Product\n"
"</x-paddle-button>"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:227
#: ./docs/9.x/cashier-paddle.md:246
msgctxt "P"
msgid "The Paddle checkout widget is asynchronous. Once the user creates or updates a subscription within the widget, Paddle will send your application webhooks so that you may properly update the subscription state in our own database. Therefore, it's important that you properly [set up webhooks](#handling-paddle-webhooks) to accommodate for state changes from Paddle."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:229
#: ./docs/9.x/cashier-paddle.md:248
msgctxt "P"
msgid "For more information on pay links, you may review [the Paddle API documentation on pay link generation](https://developer.paddle.com/api-reference/product-api/pay-links/createpaylink)."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:231
#: ./docs/9.x/cashier-paddle.md:251
#: ./docs/10.x/cashier-paddle.md:455
#: ./docs/11.x/cashier-paddle.md:455
#: ./docs/master/cashier-paddle.md:455
msgctxt "P"
msgid "After a subscription state change, the delay for receiving the corresponding webhook is typically minimal but you should account for this in your application by considering that your user's subscription might not be immediately available after completing the checkout."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:232
#: ./docs/11.x/cashier-paddle.md:232
#: ./docs/master/cashier-paddle.md:232
#~ msgctxt "P"
#~ msgid "<a name=\"providing-meta-data-to-paddle-checkout\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:233
#: ./docs/11.x/cashier-paddle.md:233
#: ./docs/master/cashier-paddle.md:233
msgctxt "H4"
msgid "Providing Meta Data to Paddle Checkout"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:233
#: ./docs/9.x/cashier-paddle.md:253
#~ msgctxt "P"
#~ msgid "<a name=\"manually-rendering-pay-links\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:234
#: ./docs/9.x/cashier-paddle.md:254
msgctxt "H4"
msgid "Manually Rendering Pay Links"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:235
#: ./docs/11.x/cashier-paddle.md:235
#: ./docs/master/cashier-paddle.md:235
msgctxt "P"
msgid "When selling products, it's common to keep track of completed orders and purchased products via `Cart` and `Order` models defined by your own application. When redirecting customers to Paddle's Checkout Overlay to complete a purchase, you may need to provide an existing order identifier so that you can associate the completed purchase with the corresponding order when the customer is redirected back to your application."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:236
#: ./docs/9.x/cashier-paddle.md:256
msgctxt "P"
msgid "You may also manually render a pay link without using Laravel's built-in Blade components. To get started, generate the pay link URL as demonstrated in previous examples:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:237
#: ./docs/11.x/cashier-paddle.md:237
#: ./docs/master/cashier-paddle.md:237
msgctxt "P"
msgid "To accomplish this, you may provide an array of custom data to the `checkout` method. Let's imagine that a pending `Order` is created within our application when a user begins the checkout process. Remember, the `Cart` and `Order` models in this example are illustrative and not provided by Cashier. You are free to implement these concepts based on the needs of your own application:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:238
#: ./docs/9.x/cashier-paddle.md:258
msgctxt "CODE"
msgid "$payLink = $request->user()->newSubscription('default', $premium = 34567)\n"
"    ->returnTo(route('home'))\n"
"    ->create();"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:239
#: ./docs/11.x/cashier-paddle.md:239
#: ./docs/master/cashier-paddle.md:239
msgctxt "CODE"
msgid "use App\\Models\\Cart;\n"
"use App\\Models\\Order;\n"
"use Illuminate\\Http\\Request;\n\n"
"Route::get('/cart/{cart}/checkout', function (Request $request, Cart $cart) {\n"
"    $order = Order::create([\n"
"        'cart_id' => $cart->id,\n"
"        'price_ids' => $cart->price_ids,\n"
"        'status' => 'incomplete',\n"
"    ]);\n\n"
"    $checkout = $request->user()->checkout($order->price_ids)\n"
"        ->customData(['order_id' => $order->id]);\n\n"
"    return view('billing', ['checkout' => $checkout]);\n"
"})->name('checkout');"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:242
#: ./docs/9.x/cashier-paddle.md:262
msgctxt "P"
msgid "Next, simply attach the pay link URL to an `a` element in your HTML:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:244
#: ./docs/9.x/cashier-paddle.md:264
msgctxt "CODE"
msgid "<a href=\"#!\" class=\"ml-4 paddle_button\" data-override=\"{{ $payLink }}\">\n"
"    Paddle Checkout\n"
"</a>"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:248
#: ./docs/9.x/cashier-paddle.md:268
#~ msgctxt "P"
#~ msgid "<a name=\"payments-requiring-additional-confirmation\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:249
#: ./docs/9.x/cashier-paddle.md:269
msgctxt "H4"
msgid "Payments Requiring Additional Confirmation"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:251
#: ./docs/9.x/cashier-paddle.md:271
msgctxt "P"
msgid "Sometimes additional verification is required in order to confirm and process a payment. When this happens, Paddle will present a payment confirmation screen. Payment confirmation screens presented by Paddle or Cashier may be tailored to a specific bank or card issuer's payment flow and can include additional card confirmation, a temporary small charge, separate device authentication, or other forms of verification."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:253
#: ./docs/9.x/cashier-paddle.md:273
#: ./docs/10.x/cashier-paddle.md:492
#: ./docs/11.x/cashier-paddle.md:492
#: ./docs/master/cashier-paddle.md:492
#~ msgctxt "P"
#~ msgid "<a name=\"inline-checkout\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:254
#: ./docs/9.x/cashier-paddle.md:274
#: ./docs/10.x/cashier-paddle.md:493
#: ./docs/11.x/cashier-paddle.md:493
#: ./docs/master/cashier-paddle.md:493
msgctxt "H3"
msgid "Inline Checkout"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:256
#: ./docs/11.x/cashier-paddle.md:256
#: ./docs/master/cashier-paddle.md:256
msgctxt "P"
msgid "As you can see in the example above, when a user begins the checkout process, we will provide all of the cart / order's associated Paddle price identifiers to the `checkout` method. Of course, your application is responsible for associating these items with the \"shopping cart\" or order as a customer adds them. We also provide the order's ID to the Paddle Checkout Overlay via the `customData` method."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:256
#: ./docs/9.x/cashier-paddle.md:276
#: ./docs/10.x/cashier-paddle.md:495
#: ./docs/11.x/cashier-paddle.md:495
#: ./docs/master/cashier-paddle.md:495
msgctxt "P"
msgid "If you don't want to make use of Paddle's \"overlay\" style checkout widget, Paddle also provides the option to display the widget inline. While this approach does not allow you to adjust any of the checkout's HTML fields, it allows you to embed the widget within your application."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:258
#: ./docs/11.x/cashier-paddle.md:258
#: ./docs/master/cashier-paddle.md:258
msgctxt "P"
msgid "Of course, you will likely want to mark the order as \"complete\" once the customer has finished the checkout process. To accomplish this, you may listen to the webhooks dispatched by Paddle and raised via events by Cashier to store order information in your database."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:258
#: ./docs/9.x/cashier-paddle.md:278
msgctxt "P"
msgid "To make it easy for you to get started with inline checkout, Cashier includes a `paddle-checkout` Blade component. To get started, you should [generate a pay link](#pay-links) and pass the pay link to the component's `override` attribute:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:260
msgctxt "P"
msgid "To get started, listen for the `TransactionCompleted` event dispatched by Cashier. Typically, you should register the event listener in the `boot` method of one of your application's service providers:"
msgstr ""

#: ./docs/11.x/cashier-paddle.md:260
#: ./docs/master/cashier-paddle.md:260
msgctxt "P"
msgid "To get started, listen for the `TransactionCompleted` event dispatched by Cashier. Typically, you should register the event listener in the `boot` method of your application's `AppServiceProvider`:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:260
#: ./docs/9.x/cashier-paddle.md:280
msgctxt "CODE: html"
msgid "<x-paddle-checkout :override=\"$payLink\" class=\"w-full\" />"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:262
#: ./docs/11.x/cashier-paddle.md:262
#: ./docs/master/cashier-paddle.md:262
msgctxt "CODE"
msgid "use App\\Listeners\\CompleteOrder;\n"
"use Illuminate\\Support\\Facades\\Event;\n"
"use Laravel\\Paddle\\Events\\TransactionCompleted;\n\n"
"/**\n"
" * Bootstrap any application services.\n"
" */\n"
"public function boot(): void\n"
"{\n"
"    Event::listen(TransactionCompleted::class, CompleteOrder::class);\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:264
#: ./docs/9.x/cashier-paddle.md:284
#: ./docs/10.x/cashier-paddle.md:514
#: ./docs/11.x/cashier-paddle.md:514
#: ./docs/master/cashier-paddle.md:514
msgctxt "P"
msgid "To adjust the height of the inline checkout component, you may pass the `height` attribute to the Blade component:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:266
#: ./docs/9.x/cashier-paddle.md:286
msgctxt "CODE"
msgid "<x-paddle-checkout :override=\"$payLink\" class=\"w-full\" height=\"500\" />"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:268
#: ./docs/9.x/cashier-paddle.md:290
#~ msgctxt "P"
#~ msgid "<a name=\"inline-checkout-without-pay-links\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:269
#: ./docs/9.x/cashier-paddle.md:291
msgctxt "H4"
msgid "Inline Checkout Without Pay Links"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:271
#: ./docs/9.x/cashier-paddle.md:293
msgctxt "P"
msgid "Alternatively, you may customize the widget with custom options instead of using a pay link:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:273
msgctxt "CODE"
msgid "$options = [\n"
"    'product' => $productId,\n"
"    'title' => 'Product Title',\n"
"];\n\n"
"<x-paddle-checkout :options=\"$options\" class=\"w-full\" />"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:274
#: ./docs/11.x/cashier-paddle.md:274
#: ./docs/master/cashier-paddle.md:274
msgctxt "P"
msgid "In this example, the `CompleteOrder` listener might look like the following:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:276
#: ./docs/master/cashier-paddle.md:276
msgctxt "CODE"
msgid "namespace App\\Listeners;\n\n"
"use App\\Models\\Order;\n"
"use Laravel\\Cashier\\Cashier;\n"
"use Laravel\\Cashier\\Events\\TransactionCompleted;\n\n"
"class CompleteOrder\n"
"{\n"
"    /**\n"
"     * Handle the incoming Cashier webhook event.\n"
"     */\n"
"    public function handle(TransactionCompleted $event): void\n"
"    {\n"
"        $orderId = $event->payload['data']['custom_data']['order_id'] ?? null;\n\n"
"        $order = Order::findOrFail($orderId);\n\n"
"        $order->update(['status' => 'completed']);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/11.x/cashier-paddle.md:276
msgctxt "CODE"
msgid "namespace App\\Listeners;\n\n"
"use App\\Models\\Order;\n"
"use Laravel\\Paddle\\Cashier;\n"
"use Laravel\\Paddle\\Events\\TransactionCompleted;\n\n"
"class CompleteOrder\n"
"{\n"
"    /**\n"
"     * Handle the incoming Cashier webhook event.\n"
"     */\n"
"    public function handle(TransactionCompleted $event): void\n"
"    {\n"
"        $orderId = $event->payload['data']['custom_data']['order_id'] ?? null;\n\n"
"        $order = Order::findOrFail($orderId);\n\n"
"        $order->update(['status' => 'completed']);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:280
#: ./docs/9.x/cashier-paddle.md:306
msgctxt "P"
msgid "Please consult Paddle's [guide on Inline Checkout](https://developer.paddle.com/guides/how-tos/checkout/inline-checkout) as well as their [parameter reference](https://developer.paddle.com/reference/paddle-js/parameters) for further details on the inline checkout's available options."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:282
#: ./docs/9.x/cashier-paddle.md:309
msgctxt "P"
msgid "If you would like to also use the `passthrough` option when specifying custom options, you should provide a key / value array as its value. Cashier will automatically handle converting the array to a JSON string. In addition, the `customer_id` passthrough option is reserved for internal Cashier usage."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:284
#: ./docs/9.x/cashier-paddle.md:311
#: ./docs/10.x/cashier-paddle.md:522
#: ./docs/11.x/cashier-paddle.md:522
#: ./docs/master/cashier-paddle.md:522
#~ msgctxt "P"
#~ msgid "<a name=\"manually-rendering-an-inline-checkout\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:285
#: ./docs/9.x/cashier-paddle.md:312
msgctxt "H4"
msgid "Manually Rendering An Inline Checkout"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:287
#: ./docs/9.x/cashier-paddle.md:314
msgctxt "P"
msgid "You may also manually render an inline checkout without using Laravel's built-in Blade components. To get started, generate the pay link URL [as demonstrated in previous examples](#pay-links)."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:289
#: ./docs/9.x/cashier-paddle.md:316
msgctxt "P"
msgid "Next, you may use Paddle.js to initialize the checkout. To keep this example simple, we will demonstrate this using [Alpine.js](https://github.com/alpinejs/alpine); however, you are free to translate this example to your own frontend stack:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:291
#: ./docs/9.x/cashier-paddle.md:318
msgctxt "CODE: html"
msgid "<div class=\"paddle-checkout\" x-data=\"{}\" x-init=\"\n"
"    Paddle.Checkout.open({\n"
"        override: {{ $payLink }},\n"
"        method: 'inline',\n"
"        frameTarget: 'paddle-checkout',\n"
"        frameInitialHeight: 366,\n"
"        frameStyle: 'width: 100%; background-color: transparent; border: none;'\n"
"    });\n"
"\">\n"
"</div>"
msgstr ""

#: ./docs/9.x/cashier-paddle.md:295
msgctxt "CODE: blade"
msgid "@php\n"
"$options = [\n"
"    'product' => $productId,\n"
"    'title' => 'Product Title',\n"
"];\n"
"@endphp\n\n"
"<x-paddle-checkout :options=\"$options\" class=\"w-full\" />"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:297
#: ./docs/11.x/cashier-paddle.md:297
#: ./docs/master/cashier-paddle.md:297
msgctxt "P"
msgid "Please refer to Paddle's documentation for more information on the [data contained by the `transaction.completed` event](https://developer.paddle.com/webhooks/transactions/transaction-completed)."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:299
#: ./docs/11.x/cashier-paddle.md:299
#: ./docs/master/cashier-paddle.md:299
#~ msgctxt "P"
#~ msgid "<a name=\"quickstart-selling-subscriptions\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:300
#: ./docs/11.x/cashier-paddle.md:300
#: ./docs/master/cashier-paddle.md:300
msgctxt "H3"
msgid "Selling Subscriptions"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:304
#: ./docs/9.x/cashier-paddle.md:331
#~ msgctxt "P"
#~ msgid "<a name=\"user-identification\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:305
#: ./docs/9.x/cashier-paddle.md:332
msgctxt "H3"
msgid "User Identification"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:307
#: ./docs/11.x/cashier-paddle.md:307
#: ./docs/master/cashier-paddle.md:307
msgctxt "P"
msgid "To learn how to sell subscriptions using Cashier and Paddle's Checkout Overlay, let's consider the simple scenario of a subscription service with a basic monthly (`price_basic_monthly`) and yearly (`price_basic_yearly`) plan. These two prices could be grouped under a \"Basic\" product (`pro_basic`) in our Paddle dashboard. In addition, our subscription service might offer an Expert plan as `pro_expert`."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:307
#: ./docs/9.x/cashier-paddle.md:334
msgctxt "P"
msgid "In contrast to Stripe, Paddle users are unique across all of Paddle, not unique per Paddle account. Because of this, Paddle's API's do not currently provide a method to update a user's details such as their email address. When generating pay links, Paddle identifies users using the `customer_email` parameter. When creating a subscription, Paddle will try to match the user provided email to an existing Paddle user."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:309
#: ./docs/11.x/cashier-paddle.md:309
#: ./docs/master/cashier-paddle.md:309
msgctxt "P"
msgid "First, let's discover how a customer can subscribe to our services. Of course, you can imagine the customer might click a \"subscribe\" button for the Basic plan on our application's pricing page. This button will invoke a Paddle Checkout Overlay for their chosen plan. To get started, let's initiate a checkout session via the `checkout` method:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:309
#: ./docs/9.x/cashier-paddle.md:336
msgctxt "P"
msgid "In light of this behavior, there are some important things to keep in mind when using Cashier and Paddle. First, you should be aware that even though subscriptions in Cashier are tied to the same application user, **they could be tied to different users within Paddle's internal systems**. Secondly, each subscription has its own connected payment method information and could also have different email addresses within Paddle's internal systems (depending on which email was assigned to the user when the subscription was created)."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:311
#: ./docs/11.x/cashier-paddle.md:311
#: ./docs/master/cashier-paddle.md:311
msgctxt "CODE"
msgid "use Illuminate\\Http\\Request;\n\n"
"Route::get('/subscribe', function (Request $request) {\n"
"    $checkout = $request->user()->checkout('price_basic_monthly')\n"
"        ->returnTo(route('dashboard'));\n\n"
"    return view('subscribe', ['checkout' => $checkout]);\n"
"})->name('subscribe');"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:311
#: ./docs/9.x/cashier-paddle.md:338
msgctxt "P"
msgid "Therefore, when displaying subscriptions you should always inform the user which email address or payment method information is connected to the subscription on a per-subscription basis. Retrieving this information can be done with the following methods provided by the `Laravel\\Paddle\\Subscription` model:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:313
#: ./docs/9.x/cashier-paddle.md:340
msgctxt "CODE"
msgid "$subscription = $user->subscription('default');\n\n"
"$subscription->paddleEmail();\n"
"$subscription->paymentMethod();\n"
"$subscription->cardBrand();\n"
"$subscription->cardLastFour();\n"
"$subscription->cardExpirationDate();"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:320
#: ./docs/11.x/cashier-paddle.md:320
#: ./docs/master/cashier-paddle.md:320
msgctxt "P"
msgid "In the `subscribe` view, we will include a button to display the Checkout Overlay. The `paddle-button` Blade component is included with Cashier Paddle; however, you may also [manually render an overlay checkout](#manually-rendering-an-overlay-checkout):"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:321
#: ./docs/9.x/cashier-paddle.md:348
msgctxt "P"
msgid "There is currently no way to modify a user's email address through the Paddle API. When a user wants to update their email address within Paddle, the only way for them to do so is to contact Paddle customer support. When communicating with Paddle, they need to provide the `paddleEmail` value of the subscription to assist Paddle in updating the correct user."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:322
#: ./docs/10.x/cashier-paddle.md:438
#: ./docs/10.x/cashier-paddle.md:714
#: ./docs/11.x/cashier-paddle.md:322
#: ./docs/11.x/cashier-paddle.md:438
#: ./docs/11.x/cashier-paddle.md:714
#: ./docs/master/cashier-paddle.md:322
#: ./docs/master/cashier-paddle.md:438
#: ./docs/master/cashier-paddle.md:714
msgctxt "CODE: html"
msgid "<x-paddle-button :checkout=\"$checkout\" class=\"px-8 py-4\">\n"
"    Subscribe\n"
"</x-paddle-button>"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:323
#: ./docs/9.x/cashier-paddle.md:350
#~ msgctxt "P"
#~ msgid "<a name=\"prices\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:324
#: ./docs/9.x/cashier-paddle.md:351
msgctxt "H2"
msgid "Prices"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:326
#: ./docs/9.x/cashier-paddle.md:353
msgctxt "P"
msgid "Paddle allows you to customize prices per currency, essentially allowing you to configure different prices for different countries. Cashier Paddle allows you to retrieve all of the prices for a given product using the `productPrices` method. This method accepts the product IDs of the products you wish to retrieve prices for:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:328
#: ./docs/11.x/cashier-paddle.md:328
#: ./docs/master/cashier-paddle.md:328
msgctxt "P"
msgid "Now, when the Subscribe button is clicked, the customer will be able to enter their payment details and initiate their subscription. To know when their subscription has actually started (since some payment methods require a few seconds to process), you should also [configure Cashier's webhook handling](#handling-paddle-webhooks)."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:328
#: ./docs/9.x/cashier-paddle.md:355
msgctxt "CODE"
msgid "use Laravel\\Paddle\\Cashier;\n\n"
"$prices = Cashier::productPrices([123, 456]);"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:330
#: ./docs/11.x/cashier-paddle.md:330
#: ./docs/master/cashier-paddle.md:330
msgctxt "P"
msgid "Now that customers can start subscriptions, we need to restrict certain portions of our application so that only subscribed users can access them. Of course, we can always determine a user's current subscription status via the `subscribed` method provided by Cashier's `Billable` trait:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:332
#: ./docs/11.x/cashier-paddle.md:332
#: ./docs/master/cashier-paddle.md:332
msgctxt "CODE: blade"
msgid "@if ($user->subscribed())\n"
"    <p>You are subscribed.</p>\n"
"@endif"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:332
#: ./docs/9.x/cashier-paddle.md:359
#: ./docs/10.x/cashier-paddle.md:578
#: ./docs/11.x/cashier-paddle.md:578
#: ./docs/master/cashier-paddle.md:578
msgctxt "P"
msgid "The currency will be determined based on the IP address of the request; however, you may optionally provide a specific country to retrieve prices for:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:334
#: ./docs/9.x/cashier-paddle.md:361
msgctxt "CODE"
msgid "use Laravel\\Paddle\\Cashier;\n\n"
"$prices = Cashier::productPrices([123, 456], ['customer_country' => 'BE']);"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:338
#: ./docs/11.x/cashier-paddle.md:338
#: ./docs/master/cashier-paddle.md:338
msgctxt "P"
msgid "We can even easily determine if a user is subscribed to specific product or price:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:338
#: ./docs/9.x/cashier-paddle.md:365
#: ./docs/10.x/cashier-paddle.md:587
#: ./docs/11.x/cashier-paddle.md:587
#: ./docs/master/cashier-paddle.md:587
msgctxt "P"
msgid "After retrieving the prices you may display them however you wish:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:340
#: ./docs/11.x/cashier-paddle.md:340
#: ./docs/master/cashier-paddle.md:340
msgctxt "CODE: blade"
msgid "@if ($user->subscribedToProduct('pro_basic'))\n"
"    <p>You are subscribed to our Basic product.</p>\n"
"@endif\n\n"
"@if ($user->subscribedToPrice('price_basic_monthly'))\n"
"    <p>You are subscribed to our monthly Basic plan.</p>\n"
"@endif"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:340
#: ./docs/8.x/cashier-paddle.md:394
#: ./docs/9.x/cashier-paddle.md:367
#: ./docs/9.x/cashier-paddle.md:421
msgctxt "CODE: html"
msgid "<ul>\n"
"    @foreach ($prices as $price)\n"
"        <li>{{ $price->product_title }} - {{ $price->price()->gross() }}</li>\n"
"    @endforeach\n"
"</ul>"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:348
#: ./docs/9.x/cashier-paddle.md:375
msgctxt "P"
msgid "You may also display the net price (excludes tax) and display the tax amount separately:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:350
#: ./docs/11.x/cashier-paddle.md:350
#: ./docs/master/cashier-paddle.md:350
#~ msgctxt "P"
#~ msgid "<a name=\"quickstart-building-a-subscribed-middleware\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:350
#: ./docs/9.x/cashier-paddle.md:377
msgctxt "CODE: html"
msgid "<ul>\n"
"    @foreach ($prices as $price)\n"
"        <li>{{ $price->product_title }} - {{ $price->price()->net() }} (+ {{ $price->price()->tax() }} tax)</li>\n"
"    @endforeach\n"
"</ul>"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:351
#: ./docs/11.x/cashier-paddle.md:351
#: ./docs/master/cashier-paddle.md:351
msgctxt "H4"
msgid "Building a Subscribed Middleware"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:353
#: ./docs/11.x/cashier-paddle.md:353
#: ./docs/master/cashier-paddle.md:353
msgctxt "P"
msgid "For convenience, you may wish to create a [middleware](/docs/{{version}}/middleware) which determines if the incoming request is from a subscribed user. Once this middleware has been defined, you may easily assign it to a route to prevent users that are not subscribed from accessing the route:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:355
#: ./docs/11.x/cashier-paddle.md:355
#: ./docs/master/cashier-paddle.md:355
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Http\\Middleware;\n\n"
"use Closure;\n"
"use Illuminate\\Http\\Request;\n"
"use Symfony\\Component\\HttpFoundation\\Response;\n\n"
"class Subscribed\n"
"{\n"
"    /**\n"
"     * Handle an incoming request.\n"
"     */\n"
"    public function handle(Request $request, Closure $next): Response\n"
"    {\n"
"        if (! $request->user()?->subscribed()) {\n"
"            // Redirect user to billing page and ask them to subscribe...\n"
"            return redirect('/subscribe');\n"
"        }\n\n"
"        return $next($request);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:358
#: ./docs/9.x/cashier-paddle.md:385
msgctxt "P"
msgid "If you retrieved prices for subscription plans you can display their initial and recurring price separately:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:360
#: ./docs/9.x/cashier-paddle.md:387
msgctxt "CODE: html"
msgid "<ul>\n"
"    @foreach ($prices as $price)\n"
"        <li>{{ $price->product_title }} - Initial: {{ $price->initialPrice()->gross() }} - Recurring: {{ $price->recurringPrice()->gross() }}</li>\n"
"    @endforeach\n"
"</ul>"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:368
#: ./docs/9.x/cashier-paddle.md:395
msgctxt "P"
msgid "For more information, [check Paddle's API documentation on prices](https://developer.paddle.com/api-reference/checkout-api/prices/getprices)."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:370
#: ./docs/9.x/cashier-paddle.md:397
#~ msgctxt "P"
#~ msgid "<a name=\"prices-customers\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:371
#: ./docs/8.x/cashier-paddle.md:415
#: ./docs/9.x/cashier-paddle.md:398
#: ./docs/9.x/cashier-paddle.md:443
#: ./docs/10.x/cashier-paddle.md:642
#: ./docs/11.x/cashier-paddle.md:642
#: ./docs/master/cashier-paddle.md:642
msgctxt "H4"
msgid "Customers"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:373
#: ./docs/9.x/cashier-paddle.md:400
#: ./docs/10.x/cashier-paddle.md:612
#: ./docs/11.x/cashier-paddle.md:612
#: ./docs/master/cashier-paddle.md:612
msgctxt "P"
msgid "If a user is already a customer and you would like to display the prices that apply to that customer, you may do so by retrieving the prices directly from the customer instance:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:375
#: ./docs/9.x/cashier-paddle.md:402
msgctxt "CODE"
msgid "use App\\Models\\User;\n\n"
"$prices = User::find(1)->productPrices([123, 456]);"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:379
#: ./docs/11.x/cashier-paddle.md:379
#: ./docs/master/cashier-paddle.md:379
msgctxt "P"
msgid "Once the middleware has been defined, you may assign it to a route:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:379
#: ./docs/9.x/cashier-paddle.md:406
msgctxt "P"
msgid "Internally, Cashier will use the user's [`paddleCountry` method](#customer-defaults) to retrieve the prices in their currency. So, for example, a user living in the United States will see prices in USD while a user in Belgium will see prices in EUR. If no matching currency can be found the default currency of the product will be used. You can customize all prices of a product or subscription plan in the Paddle control panel."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:381
#: ./docs/11.x/cashier-paddle.md:381
#: ./docs/master/cashier-paddle.md:381
msgctxt "CODE"
msgid "use App\\Http\\Middleware\\Subscribed;\n\n"
"Route::get('/dashboard', function () {\n"
"    // ...\n"
"})->middleware([Subscribed::class]);"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:381
#: ./docs/9.x/cashier-paddle.md:408
#~ msgctxt "P"
#~ msgid "<a name=\"prices-coupons\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:382
#: ./docs/8.x/cashier-paddle.md:502
#: ./docs/9.x/cashier-paddle.md:409
#: ./docs/9.x/cashier-paddle.md:530
msgctxt "H4"
msgid "Coupons"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:384
#: ./docs/9.x/cashier-paddle.md:411
msgctxt "P"
msgid "You may also choose to display prices after a coupon reduction. When calling the `productPrices` method, coupons may be passed as a comma delimited string:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:386
#: ./docs/9.x/cashier-paddle.md:413
msgctxt "CODE"
msgid "use Laravel\\Paddle\\Cashier;\n\n"
"$prices = Cashier::productPrices([123, 456], [\n"
"    'coupons' => 'SUMMERSALE,20PERCENTOFF'\n"
"]);"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:387
#: ./docs/11.x/cashier-paddle.md:387
#: ./docs/master/cashier-paddle.md:387
#~ msgctxt "P"
#~ msgid "<a name=\"quickstart-allowing-customers-to-manage-their-billing-plan\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:388
#: ./docs/11.x/cashier-paddle.md:388
#: ./docs/master/cashier-paddle.md:388
msgctxt "H4"
msgid "Allowing Customers to Manage Their Billing Plan"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:390
#: ./docs/11.x/cashier-paddle.md:390
#: ./docs/master/cashier-paddle.md:390
msgctxt "P"
msgid "Of course, customers may want to change their subscription plan to another product or \"tier\". In our example from above, we'd want to allow the customer to change their plan from a monthly subscription to a yearly subscription. For this you'll need to implement something like a button that leads to the below route:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:392
#: ./docs/11.x/cashier-paddle.md:392
#: ./docs/master/cashier-paddle.md:392
msgctxt "CODE"
msgid "use Illuminate\\Http\\Request;\n\n"
"Route::put('/subscription/{price}/swap', function (Request $request, $price) {\n"
"    $user->subscription()->swap($price); // With \"$price\" being \"price_basic_yearly\" for this example.\n\n"
"    return redirect()->route('dashboard');\n"
"})->name('subscription.swap');"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:392
#: ./docs/9.x/cashier-paddle.md:419
msgctxt "P"
msgid "Then, display the calculated prices using the `price` method:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:400
#: ./docs/11.x/cashier-paddle.md:400
#: ./docs/master/cashier-paddle.md:400
msgctxt "P"
msgid "Besides swapping plans you'll also need to allow your customers to cancel their subscription. Like swapping plans, provide a button that leads to the following route:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:402
#: ./docs/11.x/cashier-paddle.md:402
#: ./docs/master/cashier-paddle.md:402
msgctxt "CODE"
msgid "use Illuminate\\Http\\Request;\n\n"
"Route::put('/subscription/cancel', function (Request $request, $price) {\n"
"    $user->subscription()->cancel();\n\n"
"    return redirect()->route('dashboard');\n"
"})->name('subscription.cancel');"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:402
#: ./docs/9.x/cashier-paddle.md:429
msgctxt "P"
msgid "You may display the original listed prices (without coupon discounts) using the `listPrice` method:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:404
#: ./docs/9.x/cashier-paddle.md:431
msgctxt "CODE: html"
msgid "<ul>\n"
"    @foreach ($prices as $price)\n"
"        <li>{{ $price->product_title }} - {{ $price->listPrice()->gross() }}</li>\n"
"    @endforeach\n"
"</ul>"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:410
#: ./docs/master/cashier-paddle.md:410
msgctxt "P"
msgid "And now your subscription will get cancelled at the end of its billing period."
msgstr ""

#: ./docs/11.x/cashier-paddle.md:410
msgctxt "P"
msgid "And now your subscription will get canceled at the end of its billing period."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:412
#: ./docs/9.x/cashier-paddle.md:440
msgctxt "P"
msgid "When using the prices API, Paddle only allows applying coupons to one-time purchase products and not to subscription plans."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:413
#: ./docs/master/cashier-paddle.md:413
msgctxt "P"
msgid "As long as you have configured Cashier's webhook handling, Cashier will automatically keep your application's Cashier-related database tables in sync by inspecting the incoming webhooks from Paddle. So, for example, when you cancel a customer's subscription via Paddle's dashboard, Cashier will receive the corresponding webhook and mark the subscription as \"cancelled\" in your application's database."
msgstr ""

#: ./docs/11.x/cashier-paddle.md:413
msgctxt "P"
msgid "As long as you have configured Cashier's webhook handling, Cashier will automatically keep your application's Cashier-related database tables in sync by inspecting the incoming webhooks from Paddle. So, for example, when you cancel a customer's subscription via Paddle's dashboard, Cashier will receive the corresponding webhook and mark the subscription as \"canceled\" in your application's database."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:414
#: ./docs/9.x/cashier-paddle.md:442
#: ./docs/10.x/cashier-paddle.md:641
#: ./docs/11.x/cashier-paddle.md:641
#: ./docs/master/cashier-paddle.md:641
#~ msgctxt "P"
#~ msgid "<a name=\"customers\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:415
#: ./docs/11.x/cashier-paddle.md:415
#: ./docs/master/cashier-paddle.md:415
#~ msgctxt "P"
#~ msgid "<a name=\"checkout-sessions\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:416
#: ./docs/11.x/cashier-paddle.md:416
#: ./docs/master/cashier-paddle.md:416
msgctxt "H2"
msgid "Checkout Sessions"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:417
#: ./docs/9.x/cashier-paddle.md:445
#: ./docs/10.x/cashier-paddle.md:644
#: ./docs/11.x/cashier-paddle.md:644
#: ./docs/master/cashier-paddle.md:644
#~ msgctxt "P"
#~ msgid "<a name=\"customer-defaults\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:418
#: ./docs/11.x/cashier-paddle.md:418
#: ./docs/master/cashier-paddle.md:418
msgctxt "P"
msgid "Most operations to bill customers are performed using \"checkouts\" via Paddle's [Checkout Overlay widget](https://developer.paddle.com/build/checkout/build-overlay-checkout) or by utilizing [inline checkout](https://developer.paddle.com/build/checkout/build-branded-inline-checkout)."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:418
#: ./docs/9.x/cashier-paddle.md:446
#: ./docs/10.x/cashier-paddle.md:645
#: ./docs/11.x/cashier-paddle.md:645
#: ./docs/master/cashier-paddle.md:645
msgctxt "H3"
msgid "Customer Defaults"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:420
#: ./docs/11.x/cashier-paddle.md:420
#: ./docs/master/cashier-paddle.md:420
msgctxt "P"
msgid "Before processing checkout payments using Paddle, you should define your application's [default payment link](https://developer.paddle.com/build/transactions/default-payment-link#set-default-link) in your Paddle checkout settings dashboard."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:420
#: ./docs/9.x/cashier-paddle.md:448
msgctxt "P"
msgid "Cashier allows you to define some useful defaults for your customers when creating pay links. Setting these defaults allow you to pre-fill a customer's email address, country, and postal code so that they can immediately move on to the payment portion of the checkout widget. You can set these defaults by overriding the following methods on your billable model:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:422
#: ./docs/11.x/cashier-paddle.md:422
#: ./docs/master/cashier-paddle.md:422
#~ msgctxt "P"
#~ msgid "<a name=\"overlay-checkout\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:422
#: ./docs/9.x/cashier-paddle.md:450
msgctxt "CODE"
msgid "/**\n"
" * Get the customer's email address to associate with Paddle.\n"
" *\n"
" * @return string|null\n"
" */\n"
"public function paddleEmail()\n"
"{\n"
"    return $this->email;\n"
"}\n\n"
"/**\n"
" * Get the customer's country to associate with Paddle.\n"
" *\n"
" * This needs to be a 2 letter code. See the link below for supported countries.\n"
" *\n"
" * @return string|null\n"
" * @link https://developer.paddle.com/reference/platform-parameters/supported-countries\n"
" */\n"
"public function paddleCountry()\n"
"{\n"
"    //\n"
"}\n\n"
"/**\n"
" * Get the customer's postal code to associate with Paddle.\n"
" *\n"
" * See the link below for countries which require this.\n"
" *\n"
" * @return string|null\n"
" * @link https://developer.paddle.com/reference/platform-parameters/supported-countries#countries-requiring-postcode\n"
" */\n"
"public function paddlePostcode()\n"
"{\n"
"    //\n"
"}"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:423
#: ./docs/11.x/cashier-paddle.md:423
#: ./docs/master/cashier-paddle.md:423
msgctxt "H3"
msgid "Overlay Checkout"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:425
#: ./docs/11.x/cashier-paddle.md:425
#: ./docs/master/cashier-paddle.md:425
msgctxt "P"
msgid "Before displaying the Checkout Overlay widget, you must generate a checkout session using Cashier. A checkout session will inform the checkout widget of the billing operation that should be performed:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:427
#: ./docs/10.x/cashier-paddle.md:462
#: ./docs/10.x/cashier-paddle.md:499
#: ./docs/10.x/cashier-paddle.md:527
#: ./docs/11.x/cashier-paddle.md:427
#: ./docs/11.x/cashier-paddle.md:462
#: ./docs/11.x/cashier-paddle.md:499
#: ./docs/11.x/cashier-paddle.md:527
#: ./docs/master/cashier-paddle.md:427
#: ./docs/master/cashier-paddle.md:462
#: ./docs/master/cashier-paddle.md:499
#: ./docs/master/cashier-paddle.md:527
msgctxt "CODE"
msgid "use Illuminate\\Http\\Request;\n\n"
"Route::get('/buy', function (Request $request) {\n"
"    $checkout = $user->checkout('pri_34567')\n"
"        ->returnTo(route('dashboard'));\n\n"
"    return view('billing', ['checkout' => $checkout]);\n"
"});"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:436
#: ./docs/11.x/cashier-paddle.md:436
#: ./docs/master/cashier-paddle.md:436
msgctxt "P"
msgid "Cashier includes a `paddle-button` [Blade component](/docs/{{version}}/blade#components). You may pass the checkout session to this component as a \"prop\". Then, when this button is clicked, Paddle's checkout widget will be displayed:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:444
#: ./docs/11.x/cashier-paddle.md:444
#: ./docs/master/cashier-paddle.md:444
msgctxt "P"
msgid "By default, this will display the widget using Paddle's default styling. You can customize the widget by adding [Paddle supported attributes](https://developer.paddle.com/paddlejs/html-data-attributes) like the  `data-theme='light'` attribute to the component:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:446
#: ./docs/11.x/cashier-paddle.md:446
#: ./docs/master/cashier-paddle.md:446
msgctxt "CODE: html"
msgid "<x-paddle-button :url=\"$payLink\" class=\"px-8 py-4\" data-theme=\"light\">\n"
"    Subscribe\n"
"</x-paddle-button>"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:452
#: ./docs/11.x/cashier-paddle.md:452
#: ./docs/master/cashier-paddle.md:452
msgctxt "P"
msgid "The Paddle checkout widget is asynchronous. Once the user creates a subscription within the widget, Paddle will send your application a webhook so that you may properly update the subscription state in your application's database. Therefore, it's important that you properly [set up webhooks](#handling-paddle-webhooks) to accommodate for state changes from Paddle."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:457
#: ./docs/11.x/cashier-paddle.md:457
#: ./docs/master/cashier-paddle.md:457
#~ msgctxt "P"
#~ msgid "<a name=\"manually-rendering-an-overlay-checkout\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:458
#: ./docs/11.x/cashier-paddle.md:458
#: ./docs/master/cashier-paddle.md:458
msgctxt "H4"
msgid "Manually Rendering an Overlay Checkout"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:458
#: ./docs/9.x/cashier-paddle.md:486
msgctxt "P"
msgid "These defaults will be used for every action in Cashier that generates a [pay link](#pay-links)."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:460
#: ./docs/11.x/cashier-paddle.md:460
#: ./docs/master/cashier-paddle.md:460
msgctxt "P"
msgid "You may also manually render an overlay checkout without using Laravel's built-in Blade components. To get started, generate the checkout session [as demonstrated in previous examples](#overlay-checkout):"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:460
#: ./docs/9.x/cashier-paddle.md:488
#: ./docs/10.x/cashier-paddle.md:687
#: ./docs/11.x/cashier-paddle.md:687
#: ./docs/master/cashier-paddle.md:687
#~ msgctxt "P"
#~ msgid "<a name=\"subscriptions\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:461
#: ./docs/9.x/cashier-paddle.md:489
#: ./docs/10.x/cashier-paddle.md:688
#: ./docs/11.x/cashier-paddle.md:688
#: ./docs/master/cashier-paddle.md:688
msgctxt "H2"
msgid "Subscriptions"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:463
#: ./docs/9.x/cashier-paddle.md:491
#: ./docs/10.x/cashier-paddle.md:690
#: ./docs/11.x/cashier-paddle.md:690
#: ./docs/master/cashier-paddle.md:690
#~ msgctxt "P"
#~ msgid "<a name=\"creating-subscriptions\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:464
#: ./docs/9.x/cashier-paddle.md:492
#: ./docs/10.x/cashier-paddle.md:691
#: ./docs/11.x/cashier-paddle.md:691
#: ./docs/master/cashier-paddle.md:691
msgctxt "H3"
msgid "Creating Subscriptions"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:466
msgctxt "P"
msgid "To create a subscription, first retrieve an instance of your billable model, which typically will be an instance of `App\\Models\\User`. Once you have retrieved the model instance, you may use the `newSubscription` method to create the model's subscription pay link:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:468
msgctxt "CODE"
msgid "use Illuminate\\Http\\Request;\n\n"
"Route::get('/user/subscribe', function (Request $request) {\n"
"    $payLink = $user->newSubscription('default', $premium = 12345)\n"
"        ->returnTo(route('home'))\n"
"        ->create();\n\n"
"    return view('billing', ['payLink' => $payLink]);\n"
"});"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:471
#: ./docs/11.x/cashier-paddle.md:471
#: ./docs/master/cashier-paddle.md:471
msgctxt "P"
msgid "Next, you may use Paddle.js to initialize the checkout. In this example, we will create a link that is assigned the `paddle_button` class. Paddle.js will detect this class and display the overlay checkout when the link is clicked:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:473
#: ./docs/11.x/cashier-paddle.md:473
#: ./docs/master/cashier-paddle.md:473
msgctxt "CODE: blade"
msgid "<?php\n"
"$items = $checkout->getItems();\n"
"$customer = $checkout->getCustomer();\n"
"$custom = $checkout->getCustomData();\n"
"?>\n\n"
"<a\n"
"    href='#!'\n"
"    class='paddle_button'\n"
"    data-items='{!! json_encode($items) !!}'\n"
"    @if ($customer) data-customer-id='{{ $customer->paddle_id }}' @endif\n"
"    @if ($custom) data-custom-data='{{ json_encode($custom) }}' @endif\n"
"    @if ($returnUrl = $checkout->getReturnUrl()) data-success-url='{{ $returnUrl }}' @endif\n"
">\n"
"    Buy Product\n"
"</a>"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:478
#: ./docs/9.x/cashier-paddle.md:506
msgctxt "P"
msgid "The first argument passed to the `newSubscription` method should be the internal name of the subscription. If your application only offers a single subscription, you might call this `default` or `primary`. This subscription name is only for internal application usage and is not meant to be shown to users. In addition, it should not contain spaces and it should never be changed after creating the subscription. The second argument given to the `newSubscription` method is the specific plan the user is subscribing to. This value should correspond to the plan's identifier in Paddle. The `returnTo` method accepts a URL that your user will be redirected to after they successfully complete the checkout."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:480
#: ./docs/9.x/cashier-paddle.md:508
msgctxt "P"
msgid "The `create` method will create a pay link which you can use to generate a payment button. The payment button can be generated using the `paddle-button` [Blade component](/docs/{{version}}/blade#components) that is included with Cashier Paddle:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:488
#: ./docs/9.x/cashier-paddle.md:516
#: ./docs/10.x/cashier-paddle.md:720
#: ./docs/11.x/cashier-paddle.md:720
#: ./docs/master/cashier-paddle.md:720
msgctxt "P"
msgid "After the user has finished their checkout, a `subscription_created` webhook will be dispatched from Paddle. Cashier will receive this webhook and setup the subscription for your customer. In order to make sure all webhooks are properly received and handled by your application, ensure you have properly [setup webhook handling](#handling-paddle-webhooks)."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:490
#: ./docs/9.x/cashier-paddle.md:518
#~ msgctxt "P"
#~ msgid "<a name=\"additional-details\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:491
#: ./docs/9.x/cashier-paddle.md:519
msgctxt "H4"
msgid "Additional Details"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:493
#: ./docs/9.x/cashier-paddle.md:521
msgctxt "P"
msgid "If you would like to specify additional customer or subscription details, you may do so by passing them as an array of key / value pairs to the `create` method. To learn more about the additional fields supported by Paddle, check out Paddle's documentation on [generating pay links](https://developer.paddle.com/api-reference/product-api/pay-links/createpaylink):"
msgstr ""

#: ./docs/9.x/cashier-paddle.md:494
msgctxt "P"
msgid "To create a subscription, first retrieve an instance of your billable model from your database, which typically will be an instance of `App\\Models\\User`. Once you have retrieved the model instance, you may use the `newSubscription` method to create the model's subscription pay link:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:495
#: ./docs/9.x/cashier-paddle.md:523
msgctxt "CODE"
msgid "$payLink = $user->newSubscription('default', $monthly = 12345)\n"
"    ->returnTo(route('home'))\n"
"    ->create([\n"
"        'vat_number' => $vatNumber,\n"
"    ]);"
msgstr ""

#: ./docs/9.x/cashier-paddle.md:496
msgctxt "CODE"
msgid "use Illuminate\\Http\\Request;\n\n"
"Route::get('/user/subscribe', function (Request $request) {\n"
"    $payLink = $request->user()->newSubscription('default', $premium = 12345)\n"
"        ->returnTo(route('home'))\n"
"        ->create();\n\n"
"    return view('billing', ['payLink' => $payLink]);\n"
"});"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:497
#: ./docs/11.x/cashier-paddle.md:497
#: ./docs/master/cashier-paddle.md:497
msgctxt "P"
msgid "To make it easy for you to get started with inline checkout, Cashier includes a `paddle-checkout` Blade component. To get started, you should [generate a checkout session](#overlay-checkout):"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:501
#: ./docs/9.x/cashier-paddle.md:529
#~ msgctxt "P"
#~ msgid "<a name=\"subscriptions-coupons\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:504
#: ./docs/9.x/cashier-paddle.md:532
msgctxt "P"
msgid "If you would like to apply a coupon when creating the subscription, you may use the `withCoupon` method:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:506
#: ./docs/9.x/cashier-paddle.md:534
msgctxt "CODE"
msgid "$payLink = $user->newSubscription('default', $monthly = 12345)\n"
"    ->returnTo(route('home'))\n"
"    ->withCoupon('code')\n"
"    ->create();"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:508
#: ./docs/11.x/cashier-paddle.md:508
#: ./docs/master/cashier-paddle.md:508
msgctxt "P"
msgid "Then, you may pass the checkout session to the component's `checkout` attribute:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:510
#: ./docs/11.x/cashier-paddle.md:510
#: ./docs/master/cashier-paddle.md:510
msgctxt "CODE: blade"
msgid "<x-paddle-checkout :checkout=\"$checkout\" class=\"w-full\" />"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:511
#: ./docs/9.x/cashier-paddle.md:539
#~ msgctxt "P"
#~ msgid "<a name=\"metadata\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:512
#: ./docs/9.x/cashier-paddle.md:540
msgctxt "H4"
msgid "Metadata"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:514
#: ./docs/9.x/cashier-paddle.md:542
msgctxt "P"
msgid "You can also pass an array of metadata using the `withMetadata` method:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:516
#: ./docs/11.x/cashier-paddle.md:516
#: ./docs/master/cashier-paddle.md:516
msgctxt "CODE: blade"
msgid "<x-paddle-checkout :checkout=\"$checkout\" class=\"w-full\" height=\"500\" />"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:516
#: ./docs/9.x/cashier-paddle.md:544
msgctxt "CODE"
msgid "$payLink = $user->newSubscription('default', $monthly = 12345)\n"
"    ->returnTo(route('home'))\n"
"    ->withMetadata(['key' => 'value'])\n"
"    ->create();"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:520
#: ./docs/11.x/cashier-paddle.md:520
#: ./docs/master/cashier-paddle.md:520
msgctxt "P"
msgid "Please consult Paddle's [guide on Inline Checkout](https://developer.paddle.com/build/checkout/build-branded-inline-checkout) and [available checkout settings](https://developer.paddle.com/build/checkout/set-up-checkout-default-settings) for further details on the inline checkout's customization options."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:521
#: ./docs/9.x/cashier-paddle.md:550
msgctxt "P"
msgid "When providing metadata, please avoid using `subscription_name` as a metadata key. This key is reserved for internal use by Cashier."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:523
#: ./docs/11.x/cashier-paddle.md:523
#: ./docs/master/cashier-paddle.md:523
msgctxt "H4"
msgid "Manually Rendering an Inline Checkout"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:523
#: ./docs/9.x/cashier-paddle.md:552
#: ./docs/10.x/cashier-paddle.md:722
#: ./docs/11.x/cashier-paddle.md:722
#: ./docs/master/cashier-paddle.md:722
#~ msgctxt "P"
#~ msgid "<a name=\"checking-subscription-status\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:524
#: ./docs/9.x/cashier-paddle.md:553
#: ./docs/10.x/cashier-paddle.md:723
#: ./docs/11.x/cashier-paddle.md:723
#: ./docs/master/cashier-paddle.md:723
msgctxt "H3"
msgid "Checking Subscription Status"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:525
#: ./docs/11.x/cashier-paddle.md:525
#: ./docs/master/cashier-paddle.md:525
msgctxt "P"
msgid "You may also manually render an inline checkout without using Laravel's built-in Blade components. To get started, generate the checkout session [as demonstrated in previous examples](#inline-checkout):"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:526
#: ./docs/9.x/cashier-paddle.md:555
msgctxt "P"
msgid "Once a user is subscribed to your application, you may check their subscription status using a variety of convenient methods. First, the `subscribed` method returns `true` if the user has an active subscription, even if the subscription is currently within its trial period:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:528
#: ./docs/9.x/cashier-paddle.md:557
msgctxt "CODE"
msgid "if ($user->subscribed('default')) {\n"
"    //\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:532
#: ./docs/9.x/cashier-paddle.md:561
#: ./docs/10.x/cashier-paddle.md:737
#: ./docs/11.x/cashier-paddle.md:737
#: ./docs/master/cashier-paddle.md:737
msgctxt "P"
msgid "The `subscribed` method also makes a great candidate for a [route middleware](/docs/{{version}}/middleware), allowing you to filter access to routes and controllers based on the user's subscription status:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:534
#: ./docs/9.x/cashier-paddle.md:563
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Http\\Middleware;\n\n"
"use Closure;\n\n"
"class EnsureUserIsSubscribed\n"
"{\n"
"    /**\n"
"     * Handle an incoming request.\n"
"     *\n"
"     * @param  \\Illuminate\\Http\\Request  $request\n"
"     * @param  \\Closure  $next\n"
"     * @return mixed\n"
"     */\n"
"    public function handle($request, Closure $next)\n"
"    {\n"
"        if ($request->user() && ! $request->user()->subscribed('default')) {\n"
"            // This user is not a paying customer...\n"
"            return redirect('billing');\n"
"        }\n\n"
"        return $next($request);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:536
#: ./docs/11.x/cashier-paddle.md:536
#: ./docs/master/cashier-paddle.md:536
msgctxt "P"
msgid "Next, you may use Paddle.js to initialize the checkout. In this example, we will demonstrate this using [Alpine.js](https://github.com/alpinejs/alpine); however, you are free to modify this example for your own frontend stack:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:538
#: ./docs/11.x/cashier-paddle.md:538
#: ./docs/master/cashier-paddle.md:538
msgctxt "CODE: blade"
msgid "<?php\n"
"$options = $checkout->options();\n\n"
"$options['settings']['frameTarget'] = 'paddle-checkout';\n"
"$options['settings']['frameInitialHeight'] = 366;\n"
"?>\n\n"
"<div class=\"paddle-checkout\" x-data=\"{}\" x-init=\"\n"
"    Paddle.Checkout.open(@json($options));\n"
"\">\n"
"</div>"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:552
#: ./docs/11.x/cashier-paddle.md:552
#: ./docs/master/cashier-paddle.md:552
#~ msgctxt "P"
#~ msgid "<a name=\"guest-checkouts\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:553
#: ./docs/11.x/cashier-paddle.md:553
#: ./docs/master/cashier-paddle.md:553
msgctxt "H3"
msgid "Guest Checkouts"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:555
#: ./docs/11.x/cashier-paddle.md:555
#: ./docs/master/cashier-paddle.md:555
msgctxt "P"
msgid "Sometimes, you may need to create a checkout session for users that do not need an account with your application. To do so, you may use the `guest` method:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:557
#: ./docs/11.x/cashier-paddle.md:557
#: ./docs/master/cashier-paddle.md:557
msgctxt "CODE"
msgid "use Illuminate\\Http\\Request;\n"
"use Laravel\\Paddle\\Checkout;\n\n"
"Route::get('/buy', function (Request $request) {\n"
"    $checkout = Checkout::guest('pri_34567')\n"
"        ->returnTo(route('home'));\n\n"
"    return view('billing', ['checkout' => $checkout]);\n"
"});"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:560
#: ./docs/9.x/cashier-paddle.md:589
#: ./docs/10.x/cashier-paddle.md:765
#: ./docs/11.x/cashier-paddle.md:765
#: ./docs/master/cashier-paddle.md:765
msgctxt "P"
msgid "If you would like to determine if a user is still within their trial period, you may use the `onTrial` method. This method can be useful for determining if you should display a warning to the user that they are still on their trial period:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:562
#: ./docs/9.x/cashier-paddle.md:591
msgctxt "CODE"
msgid "if ($user->subscription('default')->onTrial()) {\n"
"    //\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:566
#: ./docs/9.x/cashier-paddle.md:595
msgctxt "P"
msgid "The `subscribedToPlan` method may be used to determine if the user is subscribed to a given plan based on a given Paddle plan ID. In this example, we will determine if the user's `default` subscription is actively subscribed to the monthly plan:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:567
#: ./docs/11.x/cashier-paddle.md:567
#: ./docs/master/cashier-paddle.md:567
msgctxt "P"
msgid "Then, you may provide the checkout session to the [Paddle button](#overlay-checkout) or [inline checkout](#inline-checkout) Blade components."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:568
#: ./docs/9.x/cashier-paddle.md:597
msgctxt "CODE"
msgid "if ($user->subscribedToPlan($monthly = 12345, 'default')) {\n"
"    //\n"
"}"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:569
#: ./docs/11.x/cashier-paddle.md:569
#: ./docs/master/cashier-paddle.md:569
#~ msgctxt "P"
#~ msgid "<a name=\"price-previews\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:570
#: ./docs/11.x/cashier-paddle.md:570
#: ./docs/master/cashier-paddle.md:570
msgctxt "H2"
msgid "Price Previews"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:572
#: ./docs/11.x/cashier-paddle.md:572
#: ./docs/master/cashier-paddle.md:572
msgctxt "P"
msgid "Paddle allows you to customize prices per currency, essentially allowing you to configure different prices for different countries. Cashier Paddle allows you to retrieve all of these prices using the `previewPrices` method. This method accepts the price IDs you wish to retrieve prices for:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:572
#: ./docs/9.x/cashier-paddle.md:601
msgctxt "P"
msgid "By passing an array to the `subscribedToPlan` method, you may determine if the user's `default` subscription is actively subscribed to the monthly or the yearly plan:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:574
#: ./docs/11.x/cashier-paddle.md:574
#: ./docs/master/cashier-paddle.md:574
msgctxt "CODE"
msgid "use Laravel\\Paddle\\Cashier;\n\n"
"$prices = Cashier::previewPrices(['pri_123', 'pri_456']);"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:574
#: ./docs/9.x/cashier-paddle.md:603
msgctxt "CODE"
msgid "if ($user->subscribedToPlan([$monthly = 12345, $yearly = 54321], 'default')) {\n"
"    //\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:578
#: ./docs/9.x/cashier-paddle.md:607
msgctxt "P"
msgid "The `recurring` method may be used to determine if the user is currently subscribed and is no longer within their trial period:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:580
#: ./docs/master/cashier-paddle.md:580
msgctxt "CODE"
msgid "use Laravel\\Paddle\\Cashier;\n\n"
"$prices = Cashier::productPrices(['pri_123', 'pri_456'], ['address' => [\n"
"    'country_code' => 'BE',\n"
"    'postal_code' => '1234',\n"
"]]);"
msgstr ""

#: ./docs/11.x/cashier-paddle.md:580
msgctxt "CODE"
msgid "use Laravel\\Paddle\\Cashier;\n\n"
"$prices = Cashier::previewPrices(['pri_123', 'pri_456'], ['address' => [\n"
"    'country_code' => 'BE',\n"
"    'postal_code' => '1234',\n"
"]]);"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:580
#: ./docs/9.x/cashier-paddle.md:609
msgctxt "CODE"
msgid "if ($user->subscription('default')->recurring()) {\n"
"    //\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:584
#: ./docs/9.x/cashier-paddle.md:613
#~ msgctxt "P"
#~ msgid "<a name=\"cancelled-subscription-status\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:585
#: ./docs/9.x/cashier-paddle.md:614
msgctxt "H4"
msgid "Cancelled Subscription Status"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:587
#: ./docs/9.x/cashier-paddle.md:616
msgctxt "P"
msgid "To determine if the user was once an active subscriber but has cancelled their subscription, you may use the `cancelled` method:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:589
#: ./docs/10.x/cashier-paddle.md:633
#: ./docs/11.x/cashier-paddle.md:589
#: ./docs/11.x/cashier-paddle.md:633
#: ./docs/master/cashier-paddle.md:589
#: ./docs/master/cashier-paddle.md:633
msgctxt "CODE: blade"
msgid "<ul>\n"
"    @foreach ($prices as $price)\n"
"        <li>{{ $price->product['name'] }} - {{ $price->total() }}</li>\n"
"    @endforeach\n"
"</ul>"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:589
#: ./docs/9.x/cashier-paddle.md:618
msgctxt "CODE"
msgid "if ($user->subscription('default')->cancelled()) {\n"
"    //\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:593
#: ./docs/9.x/cashier-paddle.md:622
msgctxt "P"
msgid "You may also determine if a user has cancelled their subscription, but are still on their \"grace period\" until the subscription fully expires. For example, if a user cancels a subscription on March 5th that was originally scheduled to expire on March 10th, the user is on their \"grace period\" until March 10th. Note that the `subscribed` method still returns `true` during this time:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:595
#: ./docs/8.x/cashier-paddle.md:816
#: ./docs/9.x/cashier-paddle.md:624
#: ./docs/9.x/cashier-paddle.md:873
msgctxt "CODE"
msgid "if ($user->subscription('default')->onGracePeriod()) {\n"
"    //\n"
"}"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:597
#: ./docs/11.x/cashier-paddle.md:597
#: ./docs/master/cashier-paddle.md:597
msgctxt "P"
msgid "You may also display the subtotal price and tax amount separately:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:599
#: ./docs/master/cashier-paddle.md:599
msgctxt "CODE: blade"
msgid "<ul>\n"
"    @foreach ($prices as $price)\n"
"        <li>{{ $price->product_title }} - {{ $price->subtotal() }} (+ {{ $price->tax() }} tax)</li>\n"
"    @endforeach\n"
"</ul>"
msgstr ""

#: ./docs/11.x/cashier-paddle.md:599
msgctxt "CODE: blade"
msgid "<ul>\n"
"    @foreach ($prices as $price)\n"
"        <li>{{ $price->product['name'] }} - {{ $price->subtotal() }} (+ {{ $price->tax() }} tax)</li>\n"
"    @endforeach\n"
"</ul>"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:599
#: ./docs/9.x/cashier-paddle.md:628
msgctxt "P"
msgid "To determine if the user has cancelled their subscription and is no longer within their \"grace period\", you may use the `ended` method:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:601
#: ./docs/9.x/cashier-paddle.md:630
msgctxt "CODE"
msgid "if ($user->subscription('default')->ended()) {\n"
"    //\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:605
#: ./docs/9.x/cashier-paddle.md:634
#: ./docs/10.x/cashier-paddle.md:798
#: ./docs/11.x/cashier-paddle.md:798
#: ./docs/master/cashier-paddle.md:798
#~ msgctxt "P"
#~ msgid "<a name=\"past-due-status\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:606
#: ./docs/9.x/cashier-paddle.md:635
#: ./docs/10.x/cashier-paddle.md:799
#: ./docs/11.x/cashier-paddle.md:799
#: ./docs/master/cashier-paddle.md:799
msgctxt "H4"
msgid "Past Due Status"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:607
#: ./docs/11.x/cashier-paddle.md:607
#: ./docs/master/cashier-paddle.md:607
msgctxt "P"
msgid "For more information, [checkout Paddle's API documentation regarding price previews](https://developer.paddle.com/api-reference/pricing-preview/preview-prices)."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:608
#: ./docs/9.x/cashier-paddle.md:637
#: ./docs/10.x/cashier-paddle.md:801
#: ./docs/11.x/cashier-paddle.md:801
#: ./docs/master/cashier-paddle.md:801
msgctxt "P"
msgid "If a payment fails for a subscription, it will be marked as `past_due`. When your subscription is in this state it will not be active until the customer has updated their payment information. You may determine if a subscription is past due using the `pastDue` method on the subscription instance:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:609
#: ./docs/11.x/cashier-paddle.md:609
#: ./docs/master/cashier-paddle.md:609
#~ msgctxt "P"
#~ msgid "<a name=\"customer-price-previews\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:610
#: ./docs/11.x/cashier-paddle.md:610
#: ./docs/master/cashier-paddle.md:610
msgctxt "H3"
msgid "Customer Price Previews"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:610
#: ./docs/9.x/cashier-paddle.md:639
msgctxt "CODE"
msgid "if ($user->subscription('default')->pastDue()) {\n"
"    //\n"
"}"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:614
#: ./docs/11.x/cashier-paddle.md:614
#: ./docs/master/cashier-paddle.md:614
msgctxt "CODE"
msgid "use App\\Models\\User;\n\n"
"$prices = User::find(1)->previewPrices(['pri_123', 'pri_456']);"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:614
#: ./docs/9.x/cashier-paddle.md:643
msgctxt "P"
msgid "When a subscription is past due, you should instruct the user to [update their payment information](#updating-payment-information). You may configure how past due subscriptions are handled in your [Paddle subscription settings](https://vendors.paddle.com/subscription-settings)."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:616
#: ./docs/9.x/cashier-paddle.md:645
msgctxt "P"
msgid "If you would like subscriptions to still be considered active when they are `past_due`, you may use the `keepPastDueSubscriptionsActive` method provided by Cashier. Typically, this method should be called in the `register` method of your `AppServiceProvider`:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:618
#: ./docs/11.x/cashier-paddle.md:618
#: ./docs/master/cashier-paddle.md:618
msgctxt "P"
msgid "Internally, Cashier will use the user's customer ID to retrieve the prices in their currency. So, for example, a user living in the United States will see prices in US dollars while a user in Belgium will see prices in Euros. If no matching currency can be found, the default currency of the product will be used. You can customize all prices of a product or subscription plan in the Paddle control panel."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:618
#: ./docs/9.x/cashier-paddle.md:647
msgctxt "CODE"
msgid "use Laravel\\Paddle\\Cashier;\n\n"
"/**\n"
" * Register any application services.\n"
" *\n"
" * @return void\n"
" */\n"
"public function register()\n"
"{\n"
"    Cashier::keepPastDueSubscriptionsActive();\n"
"}"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:620
#: ./docs/11.x/cashier-paddle.md:620
#: ./docs/master/cashier-paddle.md:620
#~ msgctxt "P"
#~ msgid "<a name=\"price-discounts\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:621
#: ./docs/11.x/cashier-paddle.md:621
#: ./docs/master/cashier-paddle.md:621
msgctxt "H3"
msgid "Discounts"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:623
#: ./docs/11.x/cashier-paddle.md:623
#: ./docs/master/cashier-paddle.md:623
msgctxt "P"
msgid "You may also choose to display prices after a discount. When calling the `previewPrices` method, you provide the discount ID via the `discount_id` option:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:625
#: ./docs/11.x/cashier-paddle.md:625
#: ./docs/master/cashier-paddle.md:625
msgctxt "CODE"
msgid "use Laravel\\Paddle\\Cashier;\n\n"
"$prices = Cashier::previewPrices(['pri_123', 'pri_456'], [\n"
"    'discount_id' => 'dsc_123'\n"
"]);"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:630
#: ./docs/9.x/cashier-paddle.md:660
#: ./docs/10.x/cashier-paddle.md:822
#: ./docs/11.x/cashier-paddle.md:822
#: ./docs/master/cashier-paddle.md:822
msgctxt "P"
msgid "When a subscription is in a `past_due` state it cannot be changed until payment information has been updated. Therefore, the `swap` and `updateQuantity` methods will throw an exception when the subscription is in a `past_due` state."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:631
#: ./docs/11.x/cashier-paddle.md:631
#: ./docs/master/cashier-paddle.md:631
msgctxt "P"
msgid "Then, display the calculated prices:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:632
#: ./docs/9.x/cashier-paddle.md:662
#: ./docs/10.x/cashier-paddle.md:824
#: ./docs/11.x/cashier-paddle.md:824
#: ./docs/master/cashier-paddle.md:824
#~ msgctxt "P"
#~ msgid "<a name=\"subscription-scopes\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:633
#: ./docs/9.x/cashier-paddle.md:663
#: ./docs/10.x/cashier-paddle.md:825
#: ./docs/11.x/cashier-paddle.md:825
#: ./docs/master/cashier-paddle.md:825
msgctxt "H4"
msgid "Subscription Scopes"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:635
#: ./docs/9.x/cashier-paddle.md:665
#: ./docs/10.x/cashier-paddle.md:827
#: ./docs/11.x/cashier-paddle.md:827
#: ./docs/master/cashier-paddle.md:827
msgctxt "P"
msgid "Most subscription states are also available as query scopes so that you may easily query your database for subscriptions that are in a given state:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:637
#: ./docs/9.x/cashier-paddle.md:667
msgctxt "CODE"
msgid "// Get all active subscriptions...\n"
"$subscriptions = Subscription::query()->active()->get();\n\n"
"// Get all of the cancelled subscriptions for a user...\n"
"$subscriptions = $user->subscriptions()->cancelled()->get();"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:643
#: ./docs/9.x/cashier-paddle.md:673
#: ./docs/10.x/cashier-paddle.md:835
#: ./docs/11.x/cashier-paddle.md:835
#: ./docs/master/cashier-paddle.md:835
msgctxt "P"
msgid "A complete list of available scopes is available below:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:645
#: ./docs/9.x/cashier-paddle.md:675
msgctxt "CODE"
msgid "Subscription::query()->active();\n"
"Subscription::query()->onTrial();\n"
"Subscription::query()->notOnTrial();\n"
"Subscription::query()->pastDue();\n"
"Subscription::query()->recurring();\n"
"Subscription::query()->ended();\n"
"Subscription::query()->paused();\n"
"Subscription::query()->notPaused();\n"
"Subscription::query()->onPausedGracePeriod();\n"
"Subscription::query()->notOnPausedGracePeriod();\n"
"Subscription::query()->cancelled();\n"
"Subscription::query()->notCancelled();\n"
"Subscription::query()->onGracePeriod();\n"
"Subscription::query()->notOnGracePeriod();"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:647
#: ./docs/11.x/cashier-paddle.md:647
#: ./docs/master/cashier-paddle.md:647
msgctxt "P"
msgid "Cashier allows you to define some useful defaults for your customers when creating checkout sessions. Setting these defaults allow you to pre-fill a customer's email address and name so that they can immediately move on to the payment portion of the checkout widget. You can set these defaults by overriding the following methods on your billable model:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:649
#: ./docs/11.x/cashier-paddle.md:649
#: ./docs/master/cashier-paddle.md:649
msgctxt "CODE"
msgid "/**\n"
" * Get the customer's name to associate with Paddle.\n"
" */\n"
"public function paddleName(): string|null\n"
"{\n"
"    return $this->name;\n"
"}\n\n"
"/**\n"
" * Get the customer's email address to associate with Paddle.\n"
" */\n"
"public function paddleEmail(): string|null\n"
"{\n"
"    return $this->email;\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:660
#: ./docs/9.x/cashier-paddle.md:690
#: ./docs/10.x/cashier-paddle.md:853
#: ./docs/11.x/cashier-paddle.md:853
#: ./docs/master/cashier-paddle.md:853
#~ msgctxt "P"
#~ msgid "<a name=\"subscription-single-charges\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:661
#: ./docs/9.x/cashier-paddle.md:691
#: ./docs/10.x/cashier-paddle.md:854
#: ./docs/11.x/cashier-paddle.md:854
#: ./docs/master/cashier-paddle.md:854
msgctxt "H3"
msgid "Subscription Single Charges"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:663
#: ./docs/9.x/cashier-paddle.md:693
msgctxt "P"
msgid "Subscription single charges allow you to charge subscribers with a one-time charge on top of their subscriptions:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:665
#: ./docs/11.x/cashier-paddle.md:665
#: ./docs/master/cashier-paddle.md:665
msgctxt "P"
msgid "These defaults will be used for every action in Cashier that generates a [checkout session](#checkout-sessions)."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:665
#: ./docs/9.x/cashier-paddle.md:695
msgctxt "CODE"
msgid "$response = $user->subscription('default')->charge(12.99, 'Support Add-on');"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:667
#: ./docs/11.x/cashier-paddle.md:667
#: ./docs/master/cashier-paddle.md:667
#~ msgctxt "P"
#~ msgid "<a name=\"retrieving-customers\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:667
#: ./docs/9.x/cashier-paddle.md:697
msgctxt "P"
msgid "In contrast to [single charges](#single-charges), this method will immediately charge the customer's stored payment method for the subscription. The charge amount should always be defined in the currency of the subscription."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:668
#: ./docs/11.x/cashier-paddle.md:668
#: ./docs/master/cashier-paddle.md:668
msgctxt "H3"
msgid "Retrieving Customers"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:669
#: ./docs/9.x/cashier-paddle.md:699
#: ./docs/10.x/cashier-paddle.md:868
#: ./docs/11.x/cashier-paddle.md:868
#: ./docs/master/cashier-paddle.md:868
#~ msgctxt "P"
#~ msgid "<a name=\"updating-payment-information\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:670
#: ./docs/11.x/cashier-paddle.md:670
#: ./docs/master/cashier-paddle.md:670
msgctxt "P"
msgid "You can retrieve a customer by their Paddle Customer ID using the `Cashier::findBillable` method. This method will return an instance of the billable model:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:670
#: ./docs/9.x/cashier-paddle.md:700
#: ./docs/10.x/cashier-paddle.md:869
#: ./docs/11.x/cashier-paddle.md:869
#: ./docs/master/cashier-paddle.md:869
msgctxt "H3"
msgid "Updating Payment Information"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:672
#: ./docs/master/cashier-paddle.md:672
msgctxt "CODE"
msgid "use Laravel\\Cashier\\Cashier;\n\n"
"$user = Cashier::findBillable($customerId);"
msgstr ""

#: ./docs/11.x/cashier-paddle.md:672
msgctxt "CODE"
msgid "use Laravel\\Paddle\\Cashier;\n\n"
"$user = Cashier::findBillable($customerId);"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:672
#: ./docs/9.x/cashier-paddle.md:702
msgctxt "P"
msgid "Paddle always saves a payment method per subscription. If you want to update the default payment method for a subscription, you should first generate a subscription \"update URL\" using the `updateUrl` method on the subscription model:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:674
#: ./docs/9.x/cashier-paddle.md:704
msgctxt "CODE"
msgid "use App\\Models\\User;\n\n"
"$user = User::find(1);\n\n"
"$updateUrl = $user->subscription('default')->updateUrl();"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:676
#: ./docs/11.x/cashier-paddle.md:676
#: ./docs/master/cashier-paddle.md:676
#~ msgctxt "P"
#~ msgid "<a name=\"creating-customers\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:677
#: ./docs/11.x/cashier-paddle.md:677
#: ./docs/master/cashier-paddle.md:677
msgctxt "H3"
msgid "Creating Customers"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:679
#: ./docs/11.x/cashier-paddle.md:679
#: ./docs/master/cashier-paddle.md:679
msgctxt "P"
msgid "Occasionally, you may wish to create a Paddle customer without beginning a subscription. You may accomplish this using the `createAsCustomer` method:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:680
#: ./docs/9.x/cashier-paddle.md:710
msgctxt "P"
msgid "Then, you may use the generated URL in combination with Cashier's provided `paddle-button` Blade component to allow the user to initiate the Paddle widget and update their payment information:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:681
#: ./docs/11.x/cashier-paddle.md:681
#: ./docs/master/cashier-paddle.md:681
msgctxt "CODE"
msgid "$customer = $user->createAsCustomer();"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:682
#: ./docs/9.x/cashier-paddle.md:712
msgctxt "CODE: html"
msgid "<x-paddle-button :url=\"$updateUrl\" class=\"px-8 py-4\">\n"
"    Update Card\n"
"</x-paddle-button>"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:683
#: ./docs/11.x/cashier-paddle.md:683
#: ./docs/master/cashier-paddle.md:683
msgctxt "P"
msgid "An instance of `Laravel\\Paddle\\Customer` is returned. Once the customer has been created in Paddle, you may begin a subscription at a later date. You may provide an optional `$options` array to pass in any additional [customer creation parameters that are supported by the Paddle API](https://developer.paddle.com/api-reference/customers/create-customer):"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:685
#: ./docs/11.x/cashier-paddle.md:685
#: ./docs/master/cashier-paddle.md:685
msgctxt "CODE"
msgid "$customer = $user->createAsCustomer($options);"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:688
#: ./docs/9.x/cashier-paddle.md:718
#: ./docs/10.x/cashier-paddle.md:881
#: ./docs/11.x/cashier-paddle.md:881
#: ./docs/master/cashier-paddle.md:881
msgctxt "P"
msgid "When a user has finished updating their information, a `subscription_updated` webhook will be dispatched by Paddle and the subscription details will be updated in your application's database."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:690
#: ./docs/9.x/cashier-paddle.md:720
#: ./docs/10.x/cashier-paddle.md:883
#: ./docs/11.x/cashier-paddle.md:883
#: ./docs/master/cashier-paddle.md:883
#~ msgctxt "P"
#~ msgid "<a name=\"changing-plans\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:691
#: ./docs/9.x/cashier-paddle.md:721
#: ./docs/10.x/cashier-paddle.md:884
#: ./docs/11.x/cashier-paddle.md:884
#: ./docs/master/cashier-paddle.md:884
msgctxt "H3"
msgid "Changing Plans"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:693
#: ./docs/11.x/cashier-paddle.md:693
#: ./docs/master/cashier-paddle.md:693
msgctxt "P"
msgid "To create a subscription, first retrieve an instance of your billable model from your database, which will typically be an instance of `App\\Models\\User`. Once you have retrieved the model instance, you may use the `subscribe` method to create the model's checkout session:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:693
#: ./docs/9.x/cashier-paddle.md:723
msgctxt "P"
msgid "After a user has subscribed to your application, they may occasionally want to change to a new subscription plan. To update the subscription plan for a user, you should pass the Paddle plan's identifier to the subscription's `swap` method:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:695
#: ./docs/11.x/cashier-paddle.md:695
#: ./docs/master/cashier-paddle.md:695
msgctxt "CODE"
msgid "use Illuminate\\Http\\Request;\n\n"
"Route::get('/user/subscribe', function (Request $request) {\n"
"    $checkout = $request->user()->subscribe($premium = 12345, 'default')\n"
"        ->returnTo(route('home'));\n\n"
"    return view('billing', ['checkout' => $checkout]);\n"
"});"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:695
#: ./docs/9.x/cashier-paddle.md:725
msgctxt "CODE"
msgid "use App\\Models\\User;\n\n"
"$user = User::find(1);\n\n"
"$user->subscription('default')->swap($premium = 34567);"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:701
#: ./docs/9.x/cashier-paddle.md:731
#: ./docs/10.x/cashier-paddle.md:894
#: ./docs/11.x/cashier-paddle.md:894
#: ./docs/master/cashier-paddle.md:894
msgctxt "P"
msgid "If you would like to swap plans and immediately invoice the user instead of waiting for their next billing cycle, you may use the `swapAndInvoice` method:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:703
#: ./docs/9.x/cashier-paddle.md:733
msgctxt "CODE"
msgid "$user = User::find(1);\n\n"
"$user->subscription('default')->swapAndInvoice($premium = 34567);"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:704
#: ./docs/11.x/cashier-paddle.md:704
#: ./docs/master/cashier-paddle.md:704
msgctxt "P"
msgid "The first argument given to the `subscribe` method is the specific price the user is subscribing to. This value should correspond to the price's identifier in Paddle. The `returnTo` method accepts a URL that your user will be redirected to after they successfully complete the checkout. The second argument passed to the `subscribe` method should be the internal \"type\" of the subscription. If your application only offers a single subscription, you might call this `default` or `primary`. This subscription type is only for internal application usage and is not meant to be displayed to users. In addition, it should not contain spaces and it should never be changed after creating the subscription."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:706
#: ./docs/master/cashier-paddle.md:706
msgctxt "P"
msgid "You may also provide an array of custom meta data regarding the subscription using the `customData` method:"
msgstr ""

#: ./docs/11.x/cashier-paddle.md:706
msgctxt "P"
msgid "You may also provide an array of custom metadata regarding the subscription using the `customData` method:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:707
#: ./docs/9.x/cashier-paddle.md:738
msgctxt "P"
msgid "Plans may not be swapped when a trial is active. For additional information regarding this limitation, please see the [Paddle documentation](https://developer.paddle.com/api-reference/subscription-api/users/updateuser#usage-notes)."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:708
#: ./docs/11.x/cashier-paddle.md:708
#: ./docs/master/cashier-paddle.md:708
msgctxt "CODE"
msgid "$checkout = $request->user()->subscribe($premium = 12345, 'default')\n"
"    ->customData(['key' => 'value'])\n"
"    ->returnTo(route('home'));"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:709
#: ./docs/9.x/cashier-paddle.md:740
#: ./docs/10.x/cashier-paddle.md:900
#: ./docs/11.x/cashier-paddle.md:900
#: ./docs/master/cashier-paddle.md:900
#~ msgctxt "P"
#~ msgid "<a name=\"prorations\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:710
#: ./docs/9.x/cashier-paddle.md:741
#: ./docs/10.x/cashier-paddle.md:901
#: ./docs/11.x/cashier-paddle.md:901
#: ./docs/master/cashier-paddle.md:901
msgctxt "H4"
msgid "Prorations"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:712
#: ./docs/11.x/cashier-paddle.md:712
#: ./docs/master/cashier-paddle.md:712
msgctxt "P"
msgid "Once a subscription checkout session has been created, the checkout session may be provided to the `paddle-button` [Blade component](#overlay-checkout) that is included with Cashier Paddle:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:712
msgctxt "P"
msgid "By default, Paddle prorates charges when swapping between plans. The `noProrate` method may be used to update the subscription's without prorating the charges:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:714
#: ./docs/9.x/cashier-paddle.md:745
msgctxt "CODE"
msgid "$user->subscription('default')->noProrate()->swap($premium = 34567);"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:716
#: ./docs/9.x/cashier-paddle.md:747
#: ./docs/10.x/cashier-paddle.md:917
#: ./docs/11.x/cashier-paddle.md:917
#: ./docs/master/cashier-paddle.md:917
#~ msgctxt "P"
#~ msgid "<a name=\"subscription-quantity\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:717
#: ./docs/9.x/cashier-paddle.md:748
#: ./docs/10.x/cashier-paddle.md:918
#: ./docs/11.x/cashier-paddle.md:918
#: ./docs/master/cashier-paddle.md:918
msgctxt "H3"
msgid "Subscription Quantity"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:719
#: ./docs/9.x/cashier-paddle.md:750
#: ./docs/10.x/cashier-paddle.md:920
#: ./docs/11.x/cashier-paddle.md:920
#: ./docs/master/cashier-paddle.md:920
msgctxt "P"
msgid "Sometimes subscriptions are affected by \"quantity\". For example, a project management application might charge $10 per month per project. To easily increment or decrement your subscription's quantity, use the `incrementQuantity` and `decrementQuantity` methods:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:721
#: ./docs/9.x/cashier-paddle.md:752
msgctxt "CODE"
msgid "$user = User::find(1);\n\n"
"$user->subscription('default')->incrementQuantity();\n\n"
"// Add five to the subscription's current quantity...\n"
"$user->subscription('default')->incrementQuantity(5);\n\n"
"$user->subscription('default')->decrementQuantity();\n\n"
"// Subtract five from the subscription's current quantity...\n"
"$user->subscription('default')->decrementQuantity(5);"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:725
#: ./docs/master/cashier-paddle.md:725
msgctxt "P"
msgid "Once a user is subscribed to your application, you may check their subscription status using a variety of convenient methods. First, the `subscribed` method returns `true` if the user has an valid subscription, even if the subscription is currently within its trial period:"
msgstr ""

#: ./docs/11.x/cashier-paddle.md:725
msgctxt "P"
msgid "Once a user is subscribed to your application, you may check their subscription status using a variety of convenient methods. First, the `subscribed` method returns `true` if the user has a valid subscription, even if the subscription is currently within its trial period:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:727
#: ./docs/11.x/cashier-paddle.md:727
#: ./docs/master/cashier-paddle.md:727
msgctxt "CODE"
msgid "if ($user->subscribed()) {\n"
"    // ...\n"
"}"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:731
#: ./docs/11.x/cashier-paddle.md:731
#: ./docs/master/cashier-paddle.md:731
msgctxt "P"
msgid "If your application offers multiple subscriptions, you may specify the subscription when invoking the `subscribed` method:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:733
#: ./docs/11.x/cashier-paddle.md:733
#: ./docs/master/cashier-paddle.md:733
msgctxt "CODE"
msgid "if ($user->subscribed('default')) {\n"
"    // ...\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:733
#: ./docs/9.x/cashier-paddle.md:764
#: ./docs/10.x/cashier-paddle.md:934
#: ./docs/11.x/cashier-paddle.md:934
#: ./docs/master/cashier-paddle.md:934
msgctxt "P"
msgid "Alternatively, you may set a specific quantity using the `updateQuantity` method:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:735
#: ./docs/9.x/cashier-paddle.md:766
msgctxt "CODE"
msgid "$user->subscription('default')->updateQuantity(10);"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:737
#: ./docs/9.x/cashier-paddle.md:768
#: ./docs/10.x/cashier-paddle.md:938
#: ./docs/11.x/cashier-paddle.md:938
#: ./docs/master/cashier-paddle.md:938
msgctxt "P"
msgid "The `noProrate` method may be used to update the subscription's quantity without prorating the charges:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:739
#: ./docs/master/cashier-paddle.md:739
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Http\\Middleware;\n\n"
"use Closure;\n"
"use Illuminate\\Http\\Request;\n"
"use Symfony\\Component\\HttpFoundation\\Response;\n\n"
"class EnsureUserIsSubscribed\n"
"{\n"
"    /**\n"
"     * Handle an incoming request.\n"
"     *\n"
"     * @param  \\Closure(\\Illuminate\\Http\\Request): (\\Symfony\\Component\\HttpFoundation\\Response)  $next\n"
"     */\n"
"    public function handle(Request $request, Closure $next): Response\n"
"    {\n"
"        if ($request->user() && ! $request->user()->subscribed()) {\n"
"            // This user is not a paying customer...\n"
"            return redirect('billing');\n"
"        }\n\n"
"        return $next($request);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/11.x/cashier-paddle.md:739
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Http\\Middleware;\n\n"
"use Closure;\n"
"use Illuminate\\Http\\Request;\n"
"use Symfony\\Component\\HttpFoundation\\Response;\n\n"
"class EnsureUserIsSubscribed\n"
"{\n"
"    /**\n"
"     * Handle an incoming request.\n"
"     *\n"
"     * @param  \\Closure(\\Illuminate\\Http\\Request): (\\Symfony\\Component\\HttpFoundation\\Response)  $next\n"
"     */\n"
"    public function handle(Request $request, Closure $next): Response\n"
"    {\n"
"        if ($request->user() && ! $request->user()->subscribed()) {\n"
"            // This user is not a paying customer...\n"
"            return redirect('/billing');\n"
"        }\n\n"
"        return $next($request);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:739
#: ./docs/9.x/cashier-paddle.md:770
msgctxt "CODE"
msgid "$user->subscription('default')->noProrate()->updateQuantity(10);"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:741
#: ./docs/9.x/cashier-paddle.md:772
#~ msgctxt "P"
#~ msgid "<a name=\"subscription-modifiers\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:742
#: ./docs/9.x/cashier-paddle.md:773
msgctxt "H3"
msgid "Subscription Modifiers"
msgstr ""

#: ./docs/9.x/cashier-paddle.md:743
#: ./docs/10.x/cashier-paddle.md:903
#: ./docs/11.x/cashier-paddle.md:903
#: ./docs/master/cashier-paddle.md:903
msgctxt "P"
msgid "By default, Paddle prorates charges when swapping between plans. The `noProrate` method may be used to update the subscriptions without prorating the charges:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:744
#: ./docs/9.x/cashier-paddle.md:775
msgctxt "P"
msgid "Subscription modifiers allow you to implement [metered billing](https://developer.paddle.com/guides/how-tos/subscriptions/metered-billing#using-subscription-price-modifiers) or extend subscriptions with add-ons."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:746
#: ./docs/9.x/cashier-paddle.md:777
msgctxt "P"
msgid "For example, you might want to offer a \"Premium Support\" add-on with your standard subscription. You can create this modifier like so:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:748
#: ./docs/9.x/cashier-paddle.md:779
msgctxt "CODE"
msgid "$modifier = $user->subscription('default')->newModifier(12.99)->create();"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:750
#: ./docs/9.x/cashier-paddle.md:781
msgctxt "P"
msgid "The example above will add a $12.99 add-on to the subscription. By default, this charge will recur on every interval you have configured for the subscription. If you would like, you can add a readable description to the modifier using the modifier's `description` method:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:752
#: ./docs/9.x/cashier-paddle.md:783
msgctxt "CODE"
msgid "$modifier = $user->subscription('default')->newModifier(12.99)\n"
"    ->description('Premium Support')\n"
"    ->create();"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:756
#: ./docs/9.x/cashier-paddle.md:787
msgctxt "P"
msgid "To illustrate how to implement metered billing using modifiers, imagine your application charges per SMS message sent by the user. First, you should create a $0 plan in your Paddle dashboard. Once the user has been subscribed to this plan, you can add modifiers representing each individual charge to the subscription:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:758
#: ./docs/9.x/cashier-paddle.md:789
msgctxt "CODE"
msgid "$modifier = $user->subscription('default')->newModifier(0.99)\n"
"    ->description('New text message')\n"
"    ->oneTime()\n"
"    ->create();"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:763
#: ./docs/9.x/cashier-paddle.md:794
msgctxt "P"
msgid "As you can see, we invoked the `oneTime` method when creating this modifier. This method will ensure the modifier is only charged once and does not recur every billing interval."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:765
#: ./docs/9.x/cashier-paddle.md:796
#~ msgctxt "P"
#~ msgid "<a name=\"retrieving-modifiers\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:766
#: ./docs/9.x/cashier-paddle.md:797
msgctxt "H4"
msgid "Retrieving Modifiers"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:767
#: ./docs/11.x/cashier-paddle.md:767
#: ./docs/master/cashier-paddle.md:767
msgctxt "CODE"
msgid "if ($user->subscription()->onTrial()) {\n"
"    // ...\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:768
#: ./docs/9.x/cashier-paddle.md:799
msgctxt "P"
msgid "You may retrieve a list of all modifiers for a subscription via the `modifiers` method:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:770
#: ./docs/9.x/cashier-paddle.md:801
msgctxt "CODE"
msgid "$modifiers = $user->subscription('default')->modifiers();\n\n"
"foreach ($modifiers as $modifier) {\n"
"    $modifier->amount(); // $0.99\n"
"    $modifier->description; // New text message.\n"
"}"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:771
#: ./docs/11.x/cashier-paddle.md:771
#: ./docs/master/cashier-paddle.md:771
msgctxt "P"
msgid "The `subscribedToPrice` method may be used to determine if the user is subscribed to a given plan based on a given Paddle price ID. In this example, we will determine if the user's `default` subscription is actively subscribed to the monthly price:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:773
#: ./docs/11.x/cashier-paddle.md:773
#: ./docs/master/cashier-paddle.md:773
msgctxt "CODE"
msgid "if ($user->subscribedToPrice($monthly = 'pri_123', 'default')) {\n"
"    // ...\n"
"}"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:777
#: ./docs/11.x/cashier-paddle.md:777
#: ./docs/master/cashier-paddle.md:777
msgctxt "P"
msgid "The `recurring` method may be used to determine if the user is currently on an active subscription and is no longer within their trial period or on a grace period:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:777
#: ./docs/9.x/cashier-paddle.md:808
#~ msgctxt "P"
#~ msgid "<a name=\"deleting-modifiers\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:778
#: ./docs/9.x/cashier-paddle.md:809
msgctxt "H4"
msgid "Deleting Modifiers"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:779
#: ./docs/11.x/cashier-paddle.md:779
#: ./docs/master/cashier-paddle.md:779
msgctxt "CODE"
msgid "if ($user->subscription()->recurring()) {\n"
"    // ...\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:780
#: ./docs/9.x/cashier-paddle.md:811
msgctxt "P"
msgid "Modifiers may be deleted by invoking the `delete` method on a `Laravel\\Paddle\\Modifier` instance:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:782
#: ./docs/9.x/cashier-paddle.md:813
msgctxt "CODE"
msgid "$modifier->delete();"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:783
#: ./docs/11.x/cashier-paddle.md:783
#: ./docs/master/cashier-paddle.md:783
#~ msgctxt "P"
#~ msgid "<a name=\"canceled-subscription-status\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:784
#: ./docs/11.x/cashier-paddle.md:784
#: ./docs/master/cashier-paddle.md:784
msgctxt "H4"
msgid "Canceled Subscription Status"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:784
#: ./docs/9.x/cashier-paddle.md:840
#: ./docs/10.x/cashier-paddle.md:1013
#: ./docs/11.x/cashier-paddle.md:1013
#: ./docs/master/cashier-paddle.md:1013
#~ msgctxt "P"
#~ msgid "<a name=\"pausing-subscriptions\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:785
#: ./docs/9.x/cashier-paddle.md:841
#: ./docs/10.x/cashier-paddle.md:1014
#: ./docs/11.x/cashier-paddle.md:1014
#: ./docs/master/cashier-paddle.md:1014
msgctxt "H3"
msgid "Pausing Subscriptions"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:786
#: ./docs/11.x/cashier-paddle.md:786
#: ./docs/master/cashier-paddle.md:786
msgctxt "P"
msgid "To determine if the user was once an active subscriber but has canceled their subscription, you may use the `canceled` method:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:787
#: ./docs/9.x/cashier-paddle.md:843
#: ./docs/10.x/cashier-paddle.md:1016
#: ./docs/11.x/cashier-paddle.md:1016
#: ./docs/master/cashier-paddle.md:1016
msgctxt "P"
msgid "To pause a subscription, call the `pause` method on the user's subscription:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:788
#: ./docs/11.x/cashier-paddle.md:788
#: ./docs/master/cashier-paddle.md:788
msgctxt "CODE"
msgid "if ($user->subscription()->canceled()) {\n"
"    // ...\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:789
#: ./docs/9.x/cashier-paddle.md:845
msgctxt "CODE"
msgid "$user->subscription('default')->pause();"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:791
#: ./docs/9.x/cashier-paddle.md:847
msgctxt "P"
msgid "When a subscription is paused, Cashier will automatically set the `paused_from` column in your database. This column is used to know when the `paused` method should begin returning `true`. For example, if a customer pauses a subscription on March 1st, but the subscription was not scheduled to recur until March 5th, the `paused` method will continue to return `false` until March 5th. This is done because a user is typically allowed to continue using an application until the end of their billing cycle."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:792
#: ./docs/11.x/cashier-paddle.md:792
#: ./docs/master/cashier-paddle.md:792
msgctxt "P"
msgid "You may also determine if a user has canceled their subscription, but are still on their \"grace period\" until the subscription fully expires. For example, if a user cancels a subscription on March 5th that was originally scheduled to expire on March 10th, the user is on their \"grace period\" until March 10th. In addition, the `subscribed` method will still return `true` during this time:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:793
#: ./docs/9.x/cashier-paddle.md:849
#: ./docs/10.x/cashier-paddle.md:1034
#: ./docs/11.x/cashier-paddle.md:1034
#: ./docs/master/cashier-paddle.md:1034
msgctxt "P"
msgid "You may determine if a user has paused their subscription but are still on their \"grace period\" using the `onPausedGracePeriod` method:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:794
#: ./docs/10.x/cashier-paddle.md:1058
#: ./docs/11.x/cashier-paddle.md:794
#: ./docs/11.x/cashier-paddle.md:1058
#: ./docs/master/cashier-paddle.md:794
#: ./docs/master/cashier-paddle.md:1058
msgctxt "CODE"
msgid "if ($user->subscription()->onGracePeriod()) {\n"
"    // ...\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:795
#: ./docs/9.x/cashier-paddle.md:851
msgctxt "CODE"
msgid "if ($user->subscription('default')->onPausedGracePeriod()) {\n"
"    //\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:799
#: ./docs/9.x/cashier-paddle.md:855
msgctxt "P"
msgid "To resume a paused a subscription, you may call the `unpause` method on the user's subscription:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:801
#: ./docs/9.x/cashier-paddle.md:857
msgctxt "CODE"
msgid "$user->subscription('default')->unpause();"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:803
#: ./docs/11.x/cashier-paddle.md:803
#: ./docs/master/cashier-paddle.md:803
msgctxt "CODE"
msgid "if ($user->subscription()->pastDue()) {\n"
"    // ...\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:803
#: ./docs/9.x/cashier-paddle.md:860
#: ./docs/10.x/cashier-paddle.md:1045
#: ./docs/11.x/cashier-paddle.md:1045
#: ./docs/master/cashier-paddle.md:1045
msgctxt "P"
msgid "A subscription cannot be modified while it is paused. If you want to swap to a different plan or update quantities you must resume the subscription first."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:805
#: ./docs/9.x/cashier-paddle.md:862
#~ msgctxt "P"
#~ msgid "<a name=\"cancelling-subscriptions\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:806
#: ./docs/9.x/cashier-paddle.md:863
msgctxt "H3"
msgid "Cancelling Subscriptions"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:807
#: ./docs/11.x/cashier-paddle.md:807
#: ./docs/master/cashier-paddle.md:807
msgctxt "P"
msgid "When a subscription is past due, you should instruct the user to [update their payment information](#updating-payment-information)."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:808
#: ./docs/9.x/cashier-paddle.md:865
#: ./docs/10.x/cashier-paddle.md:1050
#: ./docs/11.x/cashier-paddle.md:1050
#: ./docs/master/cashier-paddle.md:1050
msgctxt "P"
msgid "To cancel a subscription, call the `cancel` method on the user's subscription:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:809
#: ./docs/11.x/cashier-paddle.md:809
#: ./docs/master/cashier-paddle.md:809
msgctxt "P"
msgid "If you would like subscriptions to still be considered valid when they are `past_due`, you may use the `keepPastDueSubscriptionsActive` method provided by Cashier. Typically, this method should be called in the `register` method of your `AppServiceProvider`:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:810
#: ./docs/9.x/cashier-paddle.md:867
msgctxt "CODE"
msgid "$user->subscription('default')->cancel();"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:811
#: ./docs/11.x/cashier-paddle.md:811
#: ./docs/master/cashier-paddle.md:811
msgctxt "CODE"
msgid "use Laravel\\Paddle\\Cashier;\n\n"
"/**\n"
" * Register any application services.\n"
" */\n"
"public function register(): void\n"
"{\n"
"    Cashier::keepPastDueSubscriptionsActive();\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:812
#: ./docs/9.x/cashier-paddle.md:869
msgctxt "P"
msgid "When a subscription is cancelled, Cashier will automatically set the `ends_at` column in your database. This column is used to know when the `subscribed` method should begin returning `false`. For example, if a customer cancels a subscription on March 1st, but the subscription was not scheduled to end until March 5th, the `subscribed` method will continue to return `true` until March 5th. This is done because a user is typically allowed to continue using an application until the end of their billing cycle."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:814
#: ./docs/9.x/cashier-paddle.md:871
msgctxt "P"
msgid "You may determine if a user has cancelled their subscription but are still on their \"grace period\" using the `onGracePeriod` method:"
msgstr ""

#: ./docs/9.x/cashier-paddle.md:815
#: ./docs/10.x/cashier-paddle.md:990
#: ./docs/11.x/cashier-paddle.md:990
#: ./docs/master/cashier-paddle.md:990
#~ msgctxt "P"
#~ msgid "<a name=\"multiple-subscriptions\"></a>"
#~ msgstr ""

#: ./docs/9.x/cashier-paddle.md:816
#: ./docs/10.x/cashier-paddle.md:991
#: ./docs/11.x/cashier-paddle.md:991
#: ./docs/master/cashier-paddle.md:991
msgctxt "H3"
msgid "Multiple Subscriptions"
msgstr ""

#: ./docs/9.x/cashier-paddle.md:818
#: ./docs/10.x/cashier-paddle.md:993
#: ./docs/11.x/cashier-paddle.md:993
#: ./docs/master/cashier-paddle.md:993
msgctxt "P"
msgid "Paddle allows your customers to have multiple subscriptions simultaneously. For example, you may run a gym that offers a swimming subscription and a weight-lifting subscription, and each subscription may have different pricing. Of course, customers should be able to subscribe to either or both plans."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:820
#: ./docs/9.x/cashier-paddle.md:877
msgctxt "P"
msgid "If you wish to cancel a subscription immediately, you may call the `cancelNow` method on the user's subscription:"
msgstr ""

#: ./docs/9.x/cashier-paddle.md:820
msgctxt "P"
msgid "When your application creates subscriptions, you may provide the name of the subscription to the `newSubscription` method. The name may be any string that represents the type of subscription the user is initiating:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:822
#: ./docs/9.x/cashier-paddle.md:879
msgctxt "CODE"
msgid "$user->subscription('default')->cancelNow();"
msgstr ""

#: ./docs/9.x/cashier-paddle.md:822
msgctxt "CODE"
msgid "use Illuminate\\Http\\Request;\n\n"
"Route::post('/swimming/subscribe', function (Request $request) {\n"
"    $request->user()\n"
"        ->newSubscription('swimming', $swimmingMonthly = 12345)\n"
"        ->create($request->paymentMethodId);\n\n"
"    // ...\n"
"});"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:824
#: ./docs/9.x/cashier-paddle.md:882
msgctxt "P"
msgid "Paddle's subscriptions cannot be resumed after cancellation. If your customer wishes to resume their subscription, they will have to subscribe to a new subscription."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:826
#: ./docs/9.x/cashier-paddle.md:884
#: ./docs/10.x/cashier-paddle.md:1073
#: ./docs/11.x/cashier-paddle.md:1073
#: ./docs/master/cashier-paddle.md:1073
#~ msgctxt "P"
#~ msgid "<a name=\"subscription-trials\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:827
#: ./docs/9.x/cashier-paddle.md:885
#: ./docs/10.x/cashier-paddle.md:1074
#: ./docs/11.x/cashier-paddle.md:1074
#: ./docs/master/cashier-paddle.md:1074
msgctxt "H2"
msgid "Subscription Trials"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:829
#: ./docs/11.x/cashier-paddle.md:829
#: ./docs/master/cashier-paddle.md:829
msgctxt "CODE"
msgid "// Get all valid subscriptions...\n"
"$subscriptions = Subscription::query()->valid()->get();\n\n"
"// Get all of the canceled subscriptions for a user...\n"
"$subscriptions = $user->subscriptions()->canceled()->get();"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:829
#: ./docs/9.x/cashier-paddle.md:887
#: ./docs/10.x/cashier-paddle.md:1076
#: ./docs/11.x/cashier-paddle.md:1076
#: ./docs/master/cashier-paddle.md:1076
#~ msgctxt "P"
#~ msgid "<a name=\"with-payment-method-up-front\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:830
#: ./docs/9.x/cashier-paddle.md:888
#: ./docs/10.x/cashier-paddle.md:1077
#: ./docs/11.x/cashier-paddle.md:1077
#: ./docs/master/cashier-paddle.md:1077
msgctxt "H3"
msgid "With Payment Method Up Front"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:832
#: ./docs/9.x/cashier-paddle.md:891
msgctxt "P"
msgid "While trialing and collecting payment method details up front, Paddle prevents any subscription changes such as swapping plans or updating quantities. If you want to allow a customer to swap plans during a trial the subscription must be cancelled and recreated."
msgstr ""

#: ./docs/9.x/cashier-paddle.md:832
#: ./docs/10.x/cashier-paddle.md:1005
#: ./docs/11.x/cashier-paddle.md:1005
#: ./docs/master/cashier-paddle.md:1005
msgctxt "P"
msgid "In this example, we initiated a monthly swimming subscription for the customer. However, they may want to swap to a yearly subscription at a later time. When adjusting the customer's subscription, we can simply swap the price on the `swimming` subscription:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:834
#: ./docs/9.x/cashier-paddle.md:893
msgctxt "P"
msgid "If you would like to offer trial periods to your customers while still collecting payment method information up front, you should use the `trialDays` method when creating your subscription pay links:"
msgstr ""

#: ./docs/9.x/cashier-paddle.md:834
msgctxt "CODE"
msgid "$user->subscription('swimming')->swap($swimmingYearly = 34567);"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:836
#: ./docs/9.x/cashier-paddle.md:895
msgctxt "CODE"
msgid "use Illuminate\\Http\\Request;\n\n"
"Route::get('/user/subscribe', function (Request $request) {\n"
"    $payLink = $request->user()->newSubscription('default', $monthly = 12345)\n"
"                ->returnTo(route('home'))\n"
"                ->trialDays(10)\n"
"                ->create();\n\n"
"    return view('billing', ['payLink' => $payLink]);\n"
"});"
msgstr ""

#: ./docs/9.x/cashier-paddle.md:836
#: ./docs/10.x/cashier-paddle.md:1009
#: ./docs/11.x/cashier-paddle.md:1009
#: ./docs/master/cashier-paddle.md:1009
msgctxt "P"
msgid "Of course, you may also cancel the subscription entirely:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:837
#: ./docs/11.x/cashier-paddle.md:837
#: ./docs/master/cashier-paddle.md:837
msgctxt "CODE"
msgid "Subscription::query()->valid();\n"
"Subscription::query()->onTrial();\n"
"Subscription::query()->expiredTrial();\n"
"Subscription::query()->notOnTrial();\n"
"Subscription::query()->active();\n"
"Subscription::query()->recurring();\n"
"Subscription::query()->pastDue();\n"
"Subscription::query()->paused();\n"
"Subscription::query()->notPaused();\n"
"Subscription::query()->onPausedGracePeriod();\n"
"Subscription::query()->notOnPausedGracePeriod();\n"
"Subscription::query()->canceled();\n"
"Subscription::query()->notCanceled();\n"
"Subscription::query()->onGracePeriod();\n"
"Subscription::query()->notOnGracePeriod();"
msgstr ""

#: ./docs/9.x/cashier-paddle.md:838
#: ./docs/10.x/cashier-paddle.md:1011
#: ./docs/11.x/cashier-paddle.md:1011
#: ./docs/master/cashier-paddle.md:1011
msgctxt "CODE"
msgid "$user->subscription('swimming')->cancel();"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:847
#: ./docs/9.x/cashier-paddle.md:906
msgctxt "P"
msgid "This method will set the trial period ending date on the subscription record within your application's database, as well as instruct Paddle to not begin billing the customer until after this date."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:849
#: ./docs/9.x/cashier-paddle.md:909
msgctxt "P"
msgid "If the customer's subscription is not cancelled before the trial ending date they will be charged as soon as the trial expires, so you should be sure to notify your users of their trial ending date."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:851
#: ./docs/9.x/cashier-paddle.md:911
#: ./docs/10.x/cashier-paddle.md:1095
#: ./docs/11.x/cashier-paddle.md:1095
#: ./docs/master/cashier-paddle.md:1095
msgctxt "P"
msgid "You may determine if the user is within their trial period using either the `onTrial` method of the user instance or the `onTrial` method of the subscription instance. The two examples below are equivalent:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:853
#: ./docs/9.x/cashier-paddle.md:913
msgctxt "CODE"
msgid "if ($user->onTrial('default')) {\n"
"    //\n"
"}\n\n"
"if ($user->subscription('default')->onTrial()) {\n"
"    //\n"
"}"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:856
#: ./docs/11.x/cashier-paddle.md:856
#: ./docs/master/cashier-paddle.md:856
msgctxt "P"
msgid "Subscription single charges allow you to charge subscribers with a one-time charge on top of their subscriptions. You must provide one or multiple price ID's when invoking the `charge` method:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:858
#: ./docs/11.x/cashier-paddle.md:858
#: ./docs/master/cashier-paddle.md:858
msgctxt "CODE"
msgid "// Charge a single price...\n"
"$response = $user->subscription()->charge('pri_123');\n\n"
"// Charge multiple prices at once...\n"
"$response = $user->subscription()->charge(['pri_123', 'pri_456']);"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:861
#: ./docs/9.x/cashier-paddle.md:931
#~ msgctxt "P"
#~ msgid "<a name=\"defining-trial-days-in-paddle-cashier\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:862
#: ./docs/9.x/cashier-paddle.md:932
msgctxt "H4"
msgid "Defining Trial Days In Paddle / Cashier"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:864
#: ./docs/11.x/cashier-paddle.md:864
#: ./docs/master/cashier-paddle.md:864
msgctxt "P"
msgid "The `charge` method will not actually charge the customer until the next billing interval of their subscription. If you would like to bill the customer immediately, you may use the `chargeAndInvoice` method instead:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:864
#: ./docs/9.x/cashier-paddle.md:934
msgctxt "P"
msgid "You may choose to define how many trial days your plan's receive in the Paddle dashboard or always pass them explicitly using Cashier. If you choose to define your plan's trial days in Paddle you should be aware that new subscriptions, including new subscriptions for a customer that had a subscription in the past, will always receive a trial period unless you explicitly call the `trialDays(0)` method."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:866
#: ./docs/11.x/cashier-paddle.md:866
#: ./docs/master/cashier-paddle.md:866
msgctxt "CODE"
msgid "$response = $user->subscription()->chargeAndInvoice('pri_123');"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:866
#: ./docs/9.x/cashier-paddle.md:936
#: ./docs/10.x/cashier-paddle.md:1124
#: ./docs/11.x/cashier-paddle.md:1124
#: ./docs/master/cashier-paddle.md:1124
#~ msgctxt "P"
#~ msgid "<a name=\"without-payment-method-up-front\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:867
#: ./docs/9.x/cashier-paddle.md:937
#: ./docs/10.x/cashier-paddle.md:1125
#: ./docs/11.x/cashier-paddle.md:1125
#: ./docs/master/cashier-paddle.md:1125
msgctxt "H3"
msgid "Without Payment Method Up Front"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:869
#: ./docs/9.x/cashier-paddle.md:939
#: ./docs/10.x/cashier-paddle.md:1127
#: ./docs/11.x/cashier-paddle.md:1127
#: ./docs/master/cashier-paddle.md:1127
msgctxt "P"
msgid "If you would like to offer trial periods without collecting the user's payment method information up front, you may set the `trial_ends_at` column on the customer record attached to your user to your desired trial ending date. This is typically done during user registration:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:871
#: ./docs/11.x/cashier-paddle.md:871
#: ./docs/master/cashier-paddle.md:871
msgctxt "P"
msgid "Paddle always saves a payment method per subscription. If you want to update the default payment method for a subscription, you should redirect your customer to Paddle's hosted payment method update page using the `redirectToUpdatePaymentMethod` method on the subscription model:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:871
#: ./docs/9.x/cashier-paddle.md:941
#: ./docs/10.x/cashier-paddle.md:1129
#: ./docs/11.x/cashier-paddle.md:1129
#: ./docs/master/cashier-paddle.md:1129
msgctxt "CODE"
msgid "use App\\Models\\User;\n\n"
"$user = User::create([\n"
"    // ...\n"
"]);\n\n"
"$user->createAsCustomer([\n"
"    'trial_ends_at' => now()->addDays(10)\n"
"]);"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:873
#: ./docs/11.x/cashier-paddle.md:873
#: ./docs/master/cashier-paddle.md:873
msgctxt "CODE"
msgid "use Illuminate\\Http\\Request;\n\n"
"Route::get('/update-payment-method', function (Request $request) {\n"
"    $user = $request->user();\n\n"
"    return $user->subscription()->redirectToUpdatePaymentMethod();\n"
"});"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:881
#: ./docs/9.x/cashier-paddle.md:951
#: ./docs/10.x/cashier-paddle.md:1139
#: ./docs/11.x/cashier-paddle.md:1139
#: ./docs/master/cashier-paddle.md:1139
msgctxt "P"
msgid "Cashier refers to this type of trial as a \"generic trial\", since it is not attached to any existing subscription. The `onTrial` method on the `User` instance will return `true` if the current date is not past the value of `trial_ends_at`:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:883
#: ./docs/9.x/cashier-paddle.md:953
#: ./docs/10.x/cashier-paddle.md:1141
#: ./docs/11.x/cashier-paddle.md:1141
#: ./docs/master/cashier-paddle.md:1141
msgctxt "CODE"
msgid "if ($user->onTrial()) {\n"
"    // User is within their trial period...\n"
"}"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:886
#: ./docs/11.x/cashier-paddle.md:886
#: ./docs/master/cashier-paddle.md:886
msgctxt "P"
msgid "After a user has subscribed to your application, they may occasionally want to change to a new subscription plan. To update the subscription plan for a user, you should pass the Paddle price's identifier to the subscription's `swap` method:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:887
#: ./docs/9.x/cashier-paddle.md:957
msgctxt "P"
msgid "Once you are ready to create an actual subscription for the user, you may use the `newSubscription` method as usual:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:888
#: ./docs/11.x/cashier-paddle.md:888
#: ./docs/master/cashier-paddle.md:888
msgctxt "CODE"
msgid "use App\\Models\\User;\n\n"
"$user = User::find(1);\n\n"
"$user->subscription()->swap($premium = 'pri_456');"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:889
#: ./docs/9.x/cashier-paddle.md:959
msgctxt "CODE"
msgid "use Illuminate\\Http\\Request;\n\n"
"Route::get('/user/subscribe', function (Request $request) {\n"
"    $payLink = $user->newSubscription('default', $monthly = 12345)\n"
"        ->returnTo(route('home'))\n"
"        ->create();\n\n"
"    return view('billing', ['payLink' => $payLink]);\n"
"});"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:896
#: ./docs/11.x/cashier-paddle.md:896
#: ./docs/master/cashier-paddle.md:896
msgctxt "CODE"
msgid "$user = User::find(1);\n\n"
"$user->subscription()->swapAndInvoice($premium = 'pri_456');"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:899
#: ./docs/9.x/cashier-paddle.md:969
msgctxt "P"
msgid "To retrieve the user's trial ending date, you may use the `trialEndsAt` method. This method will return a Carbon date instance if a user is on a trial or `null` if they aren't. You may also pass an optional subscription name parameter if you would like to get the trial ending date for a specific subscription other than the default one:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:901
#: ./docs/9.x/cashier-paddle.md:971
msgctxt "CODE"
msgid "if ($user->onTrial()) {\n"
"    $trialEndsAt = $user->trialEndsAt('main');\n"
"}"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:905
#: ./docs/11.x/cashier-paddle.md:905
#: ./docs/master/cashier-paddle.md:905
msgctxt "CODE"
msgid "$user->subscription('default')->noProrate()->swap($premium = 'pri_456');"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:905
#: ./docs/9.x/cashier-paddle.md:975
#: ./docs/10.x/cashier-paddle.md:1162
#: ./docs/11.x/cashier-paddle.md:1162
#: ./docs/master/cashier-paddle.md:1162
msgctxt "P"
msgid "You may use the `onGenericTrial` method if you wish to know specifically that the user is within their \"generic\" trial period and has not created an actual subscription yet:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:907
#: ./docs/11.x/cashier-paddle.md:907
#: ./docs/master/cashier-paddle.md:907
msgctxt "P"
msgid "If you would like to disable proration and invoice customers immediately, you may use the `swapAndInvoice` method in combination with `noProrate`:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:907
#: ./docs/9.x/cashier-paddle.md:977
#: ./docs/10.x/cashier-paddle.md:1164
#: ./docs/11.x/cashier-paddle.md:1164
#: ./docs/master/cashier-paddle.md:1164
msgctxt "CODE"
msgid "if ($user->onGenericTrial()) {\n"
"    // User is within their \"generic\" trial period...\n"
"}"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:909
#: ./docs/11.x/cashier-paddle.md:909
#: ./docs/master/cashier-paddle.md:909
msgctxt "CODE"
msgid "$user->subscription('default')->noProrate()->swapAndInvoice($premium = 'pri_456');"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:911
#: ./docs/11.x/cashier-paddle.md:911
#: ./docs/master/cashier-paddle.md:911
msgctxt "P"
msgid "Or, to not bill your customer for a subscription change, you may utilize the `doNotBill` method:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:911
#: ./docs/9.x/cashier-paddle.md:982
msgctxt "P"
msgid "There is no way to extend or modify a trial period on a Paddle subscription after it has been created."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:913
#: ./docs/11.x/cashier-paddle.md:913
#: ./docs/master/cashier-paddle.md:913
msgctxt "CODE"
msgid "$user->subscription('default')->doNotBill()->swap($premium = 'pri_456');"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:913
#: ./docs/9.x/cashier-paddle.md:984
#: ./docs/10.x/cashier-paddle.md:1179
#: ./docs/11.x/cashier-paddle.md:1179
#: ./docs/master/cashier-paddle.md:1179
#~ msgctxt "P"
#~ msgid "<a name=\"handling-paddle-webhooks\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:914
#: ./docs/9.x/cashier-paddle.md:985
#: ./docs/10.x/cashier-paddle.md:1180
#: ./docs/11.x/cashier-paddle.md:1180
#: ./docs/master/cashier-paddle.md:1180
msgctxt "H2"
msgid "Handling Paddle Webhooks"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:915
#: ./docs/11.x/cashier-paddle.md:915
#: ./docs/master/cashier-paddle.md:915
msgctxt "P"
msgid "For more information on Paddle's proration policies, please consult Paddle's [proration documentation](https://developer.paddle.com/concepts/subscriptions/proration)."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:916
#: ./docs/9.x/cashier-paddle.md:987
#: ./docs/10.x/cashier-paddle.md:1182
#: ./docs/11.x/cashier-paddle.md:1182
#: ./docs/master/cashier-paddle.md:1182
msgctxt "P"
msgid "Paddle can notify your application of a variety of events via webhooks. By default, a route that points to Cashier's webhook controller is registered by the Cashier service provider. This controller will handle all incoming webhook requests."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:918
msgctxt "P"
msgid "By default, this controller will automatically handle cancelling subscriptions that have too many failed charges ([as defined by your Paddle subscription settings](https://vendors.paddle.com/subscription-settings)), subscription updates, and payment method changes; however, as we'll soon discover, you can extend this controller to handle any Paddle webhook event you like."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:920
#: ./docs/9.x/cashier-paddle.md:991
#: ./docs/10.x/cashier-paddle.md:1186
#: ./docs/11.x/cashier-paddle.md:1186
#: ./docs/master/cashier-paddle.md:1186
msgctxt "P"
msgid "To ensure your application can handle Paddle webhooks, be sure to [configure the webhook URL in the Paddle control panel](https://vendors.paddle.com/alerts-webhooks). By default, Cashier's webhook controller responds to the `/paddle/webhook` URL path. The full list of all webhooks you should enable in the Paddle control panel are:"
msgstr ""

#: ./docs/9.x/cashier-paddle.md:921
#: ./docs/10.x/cashier-paddle.md:1104
#: ./docs/11.x/cashier-paddle.md:1104
#: ./docs/master/cashier-paddle.md:1104
msgctxt "P"
msgid "To determine if an existing trial has expired, you may use the `hasExpiredTrial` methods:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:922
#: ./docs/11.x/cashier-paddle.md:922
#: ./docs/master/cashier-paddle.md:922
msgctxt "CODE"
msgid "$user = User::find(1);\n\n"
"$user->subscription()->incrementQuantity();\n\n"
"// Add five to the subscription's current quantity...\n"
"$user->subscription()->incrementQuantity(5);\n\n"
"$user->subscription()->decrementQuantity();\n\n"
"// Subtract five from the subscription's current quantity...\n"
"$user->subscription()->decrementQuantity(5);"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:922
#: ./docs/9.x/cashier-paddle.md:993
#: ./docs/10.x/cashier-paddle.md:1191
#: ./docs/11.x/cashier-paddle.md:1191
#: ./docs/master/cashier-paddle.md:1191
msgctxt "P"
msgid "Subscription Created"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:923
#: ./docs/9.x/cashier-paddle.md:994
#: ./docs/10.x/cashier-paddle.md:1192
#: ./docs/11.x/cashier-paddle.md:1192
#: ./docs/master/cashier-paddle.md:1192
msgctxt "P"
msgid "Subscription Updated"
msgstr ""

#: ./docs/9.x/cashier-paddle.md:923
msgctxt "CODE"
msgid "if ($user->hasExpiredTrial('default')) {\n"
"    //\n"
"}\n\n"
"if ($user->subscription('default')->hasExpiredTrial()) {\n"
"    //\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:924
#: ./docs/9.x/cashier-paddle.md:995
msgctxt "P"
msgid "Subscription Cancelled"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:925
#: ./docs/9.x/cashier-paddle.md:996
msgctxt "P"
msgid "Payment Succeeded"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:926
#: ./docs/9.x/cashier-paddle.md:997
msgctxt "P"
msgid "Subscription Payment Succeeded"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:928
#: ./docs/9.x/cashier-paddle.md:1000
#: ./docs/10.x/cashier-paddle.md:1197
#: ./docs/11.x/cashier-paddle.md:1197
#: ./docs/master/cashier-paddle.md:1197
msgctxt "P"
msgid "Make sure you protect incoming requests with Cashier's included [webhook signature verification](/docs/{{version}}/cashier-paddle#verifying-webhook-signatures) middleware."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:930
#: ./docs/9.x/cashier-paddle.md:1002
#: ./docs/10.x/cashier-paddle.md:1199
#: ./docs/11.x/cashier-paddle.md:1199
#: ./docs/master/cashier-paddle.md:1199
#~ msgctxt "P"
#~ msgid "<a name=\"webhooks-csrf-protection\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:931
#: ./docs/9.x/cashier-paddle.md:1003
msgctxt "H4"
msgid "Webhooks & CSRF Protection"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:933
#: ./docs/9.x/cashier-paddle.md:1005
#: ./docs/10.x/cashier-paddle.md:1202
msgctxt "P"
msgid "Since Paddle webhooks need to bypass Laravel's [CSRF protection](/docs/{{version}}/csrf), be sure to list the URI as an exception in your `App\\Http\\Middleware\\VerifyCsrfToken` middleware or list the route outside of the `web` middleware group:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:935
#: ./docs/9.x/cashier-paddle.md:1007
#: ./docs/10.x/cashier-paddle.md:1204
msgctxt "CODE"
msgid "protected $except = [\n"
"    'paddle/*',\n"
"];"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:936
#: ./docs/11.x/cashier-paddle.md:936
#: ./docs/master/cashier-paddle.md:936
msgctxt "CODE"
msgid "$user->subscription()->updateQuantity(10);"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:939
#: ./docs/9.x/cashier-paddle.md:1011
#: ./docs/10.x/cashier-paddle.md:1208
#: ./docs/11.x/cashier-paddle.md:1210
#: ./docs/master/cashier-paddle.md:1210
#~ msgctxt "P"
#~ msgid "<a name=\"webhooks-local-development\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:940
#: ./docs/11.x/cashier-paddle.md:940
#: ./docs/master/cashier-paddle.md:940
msgctxt "CODE"
msgid "$user->subscription()->noProrate()->updateQuantity(10);"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:940
#: ./docs/9.x/cashier-paddle.md:1012
msgctxt "H4"
msgid "Webhooks & Local Development"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:942
#: ./docs/11.x/cashier-paddle.md:942
#: ./docs/master/cashier-paddle.md:942
#~ msgctxt "P"
#~ msgid "<a name=\"quantities-for-subscription-with-multiple-products\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:942
#: ./docs/9.x/cashier-paddle.md:1014
#: ./docs/10.x/cashier-paddle.md:1211
#: ./docs/11.x/cashier-paddle.md:1213
#: ./docs/master/cashier-paddle.md:1213
msgctxt "P"
msgid "For Paddle to be able to send your application webhooks during local development, you will need to expose your application via a site sharing service such as [Ngrok](https://ngrok.com/) or [Expose](https://expose.dev/docs/introduction). If you are developing your application locally using [Laravel Sail](/docs/{{version}}/sail), you may use Sail's [site sharing command](/docs/{{version}}/sail#sharing-your-site)."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:943
#: ./docs/11.x/cashier-paddle.md:943
#: ./docs/master/cashier-paddle.md:943
msgctxt "H4"
msgid "Quantities for Subscriptions With Multiple Products"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:944
#: ./docs/9.x/cashier-paddle.md:1016
#: ./docs/10.x/cashier-paddle.md:1213
#: ./docs/11.x/cashier-paddle.md:1215
#: ./docs/master/cashier-paddle.md:1215
#~ msgctxt "P"
#~ msgid "<a name=\"defining-webhook-event-handlers\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:945
#: ./docs/11.x/cashier-paddle.md:945
#: ./docs/master/cashier-paddle.md:945
msgctxt "P"
msgid "If your subscription is a [subscription with multiple products](#subscriptions-with-multiple-products), you should pass the ID of the price whose quantity you wish to increment or decrement as the second argument to the increment / decrement methods:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:945
#: ./docs/9.x/cashier-paddle.md:1017
#: ./docs/10.x/cashier-paddle.md:1214
#: ./docs/11.x/cashier-paddle.md:1216
#: ./docs/master/cashier-paddle.md:1216
msgctxt "H3"
msgid "Defining Webhook Event Handlers"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:947
#: ./docs/11.x/cashier-paddle.md:947
#: ./docs/master/cashier-paddle.md:947
msgctxt "CODE"
msgid "$user->subscription()->incrementQuantity(1, 'price_chat');"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:947
#: ./docs/9.x/cashier-paddle.md:1019
msgctxt "P"
msgid "Cashier automatically handles subscription cancellation on failed charges and other common Paddle webhooks. However, if you have additional webhook events you would like to handle, you may do so by listening to the following events that are dispatched by Cashier:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:949
#: ./docs/11.x/cashier-paddle.md:949
#: ./docs/master/cashier-paddle.md:949
#~ msgctxt "P"
#~ msgid "<a name=\"subscriptions-with-multiple-products\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:949
#: ./docs/9.x/cashier-paddle.md:1021
#: ./docs/10.x/cashier-paddle.md:1218
#: ./docs/11.x/cashier-paddle.md:1220
#: ./docs/master/cashier-paddle.md:1220
msgctxt "P"
msgid "`Laravel\\Paddle\\Events\\WebhookReceived`"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:950
#: ./docs/11.x/cashier-paddle.md:950
#: ./docs/master/cashier-paddle.md:950
msgctxt "H3"
msgid "Subscriptions With Multiple Products"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:950
#: ./docs/9.x/cashier-paddle.md:1022
#: ./docs/10.x/cashier-paddle.md:1219
#: ./docs/11.x/cashier-paddle.md:1221
#: ./docs/master/cashier-paddle.md:1221
msgctxt "P"
msgid "`Laravel\\Paddle\\Events\\WebhookHandled`"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:952
#: ./docs/11.x/cashier-paddle.md:952
#: ./docs/master/cashier-paddle.md:952
msgctxt "P"
msgid "[Subscription with multiple products](https://developer.paddle.com/build/subscriptions/add-remove-products-prices-addons) allow you to assign multiple billing products to a single subscription. For example, imagine you are building a customer service \"helpdesk\" application that has a base subscription price of $10 per month but offers a live chat add-on product for an additional $15 per month."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:952
#: ./docs/9.x/cashier-paddle.md:1024
msgctxt "P"
msgid "Both events contain the full payload of the Paddle webhook. For example, if you wish to handle the `invoice.payment_succeeded` webhook, you may register a [listener](/docs/{{version}}/events#defining-listeners) that will handle the event:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:954
#: ./docs/11.x/cashier-paddle.md:954
#: ./docs/master/cashier-paddle.md:954
msgctxt "P"
msgid "When creating subscription checkout sessions, you may specify multiple products for a given subscription by passing an array of prices as the first argument to the `subscribe` method:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:954
#: ./docs/9.x/cashier-paddle.md:1026
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Listeners;\n\n"
"use Laravel\\Paddle\\Events\\WebhookReceived;\n\n"
"class PaddleEventListener\n"
"{\n"
"    /**\n"
"     * Handle received Paddle webhooks.\n"
"     *\n"
"     * @param  \\Laravel\\Paddle\\Events\\WebhookReceived  $event\n"
"     * @return void\n"
"     */\n"
"    public function handle(WebhookReceived $event)\n"
"    {\n"
"        if ($event->payload['alert_name'] === 'payment_succeeded') {\n"
"            // Handle the incoming event...\n"
"        }\n"
"    }\n"
"}"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:956
#: ./docs/11.x/cashier-paddle.md:956
#: ./docs/master/cashier-paddle.md:956
msgctxt "CODE"
msgid "use Illuminate\\Http\\Request;\n\n"
"Route::post('/user/subscribe', function (Request $request) {\n"
"    $checkout = $request->user()->subscribe([\n"
"        'price_monthly',\n"
"        'price_chat',\n"
"    ]);\n\n"
"    return view('billing', ['checkout' => $checkout]);\n"
"});"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:967
#: ./docs/11.x/cashier-paddle.md:967
#: ./docs/master/cashier-paddle.md:967
msgctxt "P"
msgid "In the example above, the customer will have two prices attached to their `default` subscription. Both prices will be charged on their respective billing intervals. If necessary, you may pass an associative array of key / value pairs to indicate a specific quantity for each price:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:969
#: ./docs/11.x/cashier-paddle.md:969
#: ./docs/master/cashier-paddle.md:969
msgctxt "CODE"
msgid "$user = User::find(1);\n\n"
"$checkout = $user->subscribe('default', ['price_monthly', 'price_chat' => 5]);"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:973
#: ./docs/11.x/cashier-paddle.md:973
#: ./docs/master/cashier-paddle.md:973
msgctxt "P"
msgid "If you would like to add another price to an existing subscription, you must use the subscription's `swap` method. When invoking the `swap` method, you should also include the subscription's current prices and quantities as well:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:975
#: ./docs/11.x/cashier-paddle.md:975
#: ./docs/master/cashier-paddle.md:975
msgctxt "CODE"
msgid "$user = User::find(1);\n\n"
"$user->subscription()->swap(['price_chat', 'price_original' => 2]);"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:976
#: ./docs/9.x/cashier-paddle.md:1048
#: ./docs/10.x/cashier-paddle.md:1242
msgctxt "P"
msgid "Once your listener has been defined, you may register it within your application's `EventServiceProvider`:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:978
#: ./docs/9.x/cashier-paddle.md:1050
#: ./docs/9.x/cashier-paddle.md:1262
#: ./docs/10.x/cashier-paddle.md:1244
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Providers;\n\n"
"use App\\Listeners\\PaddleEventListener;\n"
"use Illuminate\\Foundation\\Support\\Providers\\EventServiceProvider as ServiceProvider;\n"
"use Laravel\\Paddle\\Events\\WebhookReceived;\n\n"
"class EventServiceProvider extends ServiceProvider\n"
"{\n"
"    protected $listen = [\n"
"        WebhookReceived::class => [\n"
"            PaddleEventListener::class,\n"
"        ],\n"
"    ];\n"
"}"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:979
#: ./docs/11.x/cashier-paddle.md:979
#: ./docs/master/cashier-paddle.md:979
msgctxt "P"
msgid "The example above will add the new price, but the customer will not be billed for it until their next billing cycle. If you would like to bill the customer immediately you may use the `swapAndInvoice` method:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:981
#: ./docs/11.x/cashier-paddle.md:981
#: ./docs/master/cashier-paddle.md:981
msgctxt "CODE"
msgid "$user->subscription()->swapAndInvoice(['price_chat', 'price_original' => 2]);"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:983
#: ./docs/11.x/cashier-paddle.md:983
#: ./docs/master/cashier-paddle.md:983
msgctxt "P"
msgid "You may remove prices from subscriptions using the `swap` method and omitting the price you want to remove:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:985
#: ./docs/11.x/cashier-paddle.md:985
#: ./docs/master/cashier-paddle.md:985
msgctxt "CODE"
msgid "$user->subscription()->swap(['price_original' => 2]);"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:988
#: ./docs/11.x/cashier-paddle.md:988
#: ./docs/master/cashier-paddle.md:988
msgctxt "P"
msgid "You may not remove the last price on a subscription. Instead, you should simply cancel the subscription."
msgstr ""

#: ./docs/9.x/cashier-paddle.md:989
msgctxt "P"
msgid "By default, this controller will automatically handle cancelling subscriptions that have too many failed charges ([as defined by your Paddle dunning settings](https://vendors.paddle.com/recover-settings#dunning-form-id)), subscription updates, and payment method changes; however, as we'll soon discover, you can extend this controller to handle any Paddle webhook event you like."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:995
#: ./docs/11.x/cashier-paddle.md:995
#: ./docs/master/cashier-paddle.md:995
msgctxt "P"
msgid "When your application creates subscriptions, you may provide the type of the subscription to the `subscribe` method as the second argument. The type may be any string that represents the type of subscription the user is initiating:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:995
#: ./docs/9.x/cashier-paddle.md:1067
#: ./docs/10.x/cashier-paddle.md:1261
#: ./docs/11.x/cashier-paddle.md:1244
#: ./docs/master/cashier-paddle.md:1244
msgctxt "P"
msgid "Cashier also emit events dedicated to the type of the received webhook. In addition to the full payload from Paddle, they also contain the relevant models that were used to process the webhook such as the billable model, the subscription, or the receipt:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:997
#: ./docs/11.x/cashier-paddle.md:997
#: ./docs/master/cashier-paddle.md:997
msgctxt "CODE"
msgid "use Illuminate\\Http\\Request;\n\n"
"Route::post('/swimming/subscribe', function (Request $request) {\n"
"    $checkout = $request->user()->subscribe($swimmingMonthly = 'pri_123', 'swimming');\n\n"
"    return view('billing', ['checkout' => $checkout]);\n"
"});"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:999
#: ./docs/9.x/cashier-paddle.md:1071
msgctxt "P"
msgid "`Laravel\\Paddle\\Events\\PaymentSucceeded`"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1000
#: ./docs/9.x/cashier-paddle.md:1072
msgctxt "P"
msgid "`Laravel\\Paddle\\Events\\SubscriptionPaymentSucceeded`"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1001
#: ./docs/9.x/cashier-paddle.md:1073
#: ./docs/10.x/cashier-paddle.md:1268
#: ./docs/11.x/cashier-paddle.md:1251
#: ./docs/master/cashier-paddle.md:1251
msgctxt "P"
msgid "`Laravel\\Paddle\\Events\\SubscriptionCreated`"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1002
#: ./docs/9.x/cashier-paddle.md:1074
#: ./docs/10.x/cashier-paddle.md:1269
#: ./docs/11.x/cashier-paddle.md:1252
#: ./docs/master/cashier-paddle.md:1252
msgctxt "P"
msgid "`Laravel\\Paddle\\Events\\SubscriptionUpdated`"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1003
#: ./docs/9.x/cashier-paddle.md:1075
msgctxt "P"
msgid "`Laravel\\Paddle\\Events\\SubscriptionCancelled`"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1007
#: ./docs/11.x/cashier-paddle.md:1007
#: ./docs/master/cashier-paddle.md:1007
msgctxt "CODE"
msgid "$user->subscription('swimming')->swap($swimmingYearly = 'pri_456');"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1007
#: ./docs/9.x/cashier-paddle.md:1079
#: ./docs/10.x/cashier-paddle.md:1275
#: ./docs/11.x/cashier-paddle.md:1258
#: ./docs/master/cashier-paddle.md:1258
msgctxt "P"
msgid "You can also override the default, built-in webhook route by defining the `CASHIER_WEBHOOK` environment variable in your application's `.env` file. This value should be the full URL to your webhook route and needs to match the URL set in your Paddle control panel:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1009
#: ./docs/9.x/cashier-paddle.md:1081
#: ./docs/10.x/cashier-paddle.md:1277
#: ./docs/11.x/cashier-paddle.md:1260
#: ./docs/master/cashier-paddle.md:1260
msgctxt "CODE: bash"
msgid "CASHIER_WEBHOOK=https://example.com/my-paddle-webhook-url"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1013
#: ./docs/9.x/cashier-paddle.md:1085
#: ./docs/10.x/cashier-paddle.md:1281
#: ./docs/11.x/cashier-paddle.md:1264
#: ./docs/master/cashier-paddle.md:1264
#~ msgctxt "P"
#~ msgid "<a name=\"verifying-webhook-signatures\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:1014
#: ./docs/9.x/cashier-paddle.md:1086
#: ./docs/10.x/cashier-paddle.md:1282
#: ./docs/11.x/cashier-paddle.md:1265
#: ./docs/master/cashier-paddle.md:1265
msgctxt "H3"
msgid "Verifying Webhook Signatures"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1016
#: ./docs/9.x/cashier-paddle.md:1088
#: ./docs/10.x/cashier-paddle.md:1284
#: ./docs/11.x/cashier-paddle.md:1267
#: ./docs/master/cashier-paddle.md:1267
msgctxt "P"
msgid "To secure your webhooks, you may use [Paddle's webhook signatures](https://developer.paddle.com/webhook-reference/verifying-webhooks). For convenience, Cashier automatically includes a middleware which validates that the incoming Paddle webhook request is valid."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1018
#: ./docs/11.x/cashier-paddle.md:1018
#: ./docs/master/cashier-paddle.md:1018
msgctxt "CODE"
msgid "$user->subscription()->pause();"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1018
#: ./docs/9.x/cashier-paddle.md:1090
msgctxt "P"
msgid "To enable webhook verification, ensure that the `PADDLE_PUBLIC_KEY` environment variable is defined in your application's `.env` file. The public key may be retrieved from your Paddle account dashboard."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1020
#: ./docs/11.x/cashier-paddle.md:1020
#: ./docs/master/cashier-paddle.md:1020
msgctxt "P"
msgid "When a subscription is paused, Cashier will automatically set the `paused_at` column in your database. This column is used to determine when the `paused` method should begin returning `true`. For example, if a customer pauses a subscription on March 1st, but the subscription was not scheduled to recur until March 5th, the `paused` method will continue to return `false` until March 5th. This is because a user is typically allowed to continue using an application until the end of their billing cycle."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1020
#: ./docs/9.x/cashier-paddle.md:1092
#: ./docs/10.x/cashier-paddle.md:1288
#: ./docs/11.x/cashier-paddle.md:1271
#: ./docs/master/cashier-paddle.md:1271
#~ msgctxt "P"
#~ msgid "<a name=\"single-charges\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:1021
#: ./docs/9.x/cashier-paddle.md:1093
#: ./docs/10.x/cashier-paddle.md:1289
#: ./docs/11.x/cashier-paddle.md:1272
#: ./docs/master/cashier-paddle.md:1272
msgctxt "H2"
msgid "Single Charges"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1022
#: ./docs/11.x/cashier-paddle.md:1022
#: ./docs/master/cashier-paddle.md:1022
msgctxt "P"
msgid "By default, pausing happens at the next billing interval so the customer can use the remainder of the period they paid for. If you want to pause a subscription immediately, you may use the `pauseNow` method:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1023
#: ./docs/9.x/cashier-paddle.md:1095
#~ msgctxt "P"
#~ msgid "<a name=\"simple-charge\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:1024
#: ./docs/11.x/cashier-paddle.md:1024
#: ./docs/master/cashier-paddle.md:1024
msgctxt "CODE"
msgid "$user->subscription()->pauseNow();"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1024
#: ./docs/9.x/cashier-paddle.md:1096
msgctxt "H3"
msgid "Simple Charge"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1026
#: ./docs/11.x/cashier-paddle.md:1026
#: ./docs/master/cashier-paddle.md:1026
msgctxt "P"
msgid "Using the `pauseUntil` method, you can pause the subscription until a specific moment in time:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1026
#: ./docs/9.x/cashier-paddle.md:1098
msgctxt "P"
msgid "If you would like to make a one-time charge against a customer, you may use the `charge` method on a billable model instance to generate a pay link for the charge. The `charge` method accepts the charge amount (float) as its first argument and a charge description as its second argument:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1028
#: ./docs/11.x/cashier-paddle.md:1028
#: ./docs/master/cashier-paddle.md:1028
msgctxt "CODE"
msgid "$user->subscription()->pauseUntil(now()->addMonth());"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1028
#: ./docs/9.x/cashier-paddle.md:1100
msgctxt "CODE"
msgid "use Illuminate\\Http\\Request;\n\n"
"Route::get('/store', function (Request $request) {\n"
"    return view('store', [\n"
"        'payLink' => $user->charge(12.99, 'Action Figure')\n"
"    ]);\n"
"});"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1030
#: ./docs/11.x/cashier-paddle.md:1030
#: ./docs/master/cashier-paddle.md:1030
msgctxt "P"
msgid "Or, you may use the `pauseNowUntil` method to immediately pause the subscription until a given point in time:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1032
#: ./docs/11.x/cashier-paddle.md:1032
#: ./docs/master/cashier-paddle.md:1032
msgctxt "CODE"
msgid "$user->subscription()->pauseNowUntil(now()->addMonth());"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1036
#: ./docs/11.x/cashier-paddle.md:1036
#: ./docs/master/cashier-paddle.md:1036
msgctxt "CODE"
msgid "if ($user->subscription()->onPausedGracePeriod()) {\n"
"    // ...\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1036
#: ./docs/9.x/cashier-paddle.md:1108
msgctxt "P"
msgid "After generating the pay link, you may use Cashier's provided `paddle-button` Blade component to allow the user to initiate the Paddle widget and complete the charge:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1038
#: ./docs/8.x/cashier-paddle.md:1078
#: ./docs/9.x/cashier-paddle.md:1110
#: ./docs/9.x/cashier-paddle.md:1150
msgctxt "CODE: html"
msgid "<x-paddle-button :url=\"$payLink\" class=\"px-8 py-4\">\n"
"    Buy\n"
"</x-paddle-button>"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1040
#: ./docs/11.x/cashier-paddle.md:1040
#: ./docs/master/cashier-paddle.md:1040
msgctxt "P"
msgid "To resume a paused subscription, you may invoke the `resume` method on the subscription:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1042
#: ./docs/11.x/cashier-paddle.md:1042
#: ./docs/master/cashier-paddle.md:1042
msgctxt "CODE"
msgid "$user->subscription()->resume();"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1044
#: ./docs/9.x/cashier-paddle.md:1116
msgctxt "P"
msgid "The `charge` method accepts an array as its third argument, allowing you to pass any options you wish to the underlying Paddle pay link creation. Please consult [the Paddle documentation](https://developer.paddle.com/api-reference/product-api/pay-links/createpaylink) to learn more about the options available to you when creating charges:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1046
#: ./docs/9.x/cashier-paddle.md:1118
msgctxt "CODE"
msgid "$payLink = $user->charge(12.99, 'Action Figure', [\n"
"    'custom_option' => $value,\n"
"]);"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1047
#: ./docs/11.x/cashier-paddle.md:1047
#: ./docs/master/cashier-paddle.md:1047
#~ msgctxt "P"
#~ msgid "<a name=\"canceling-subscriptions\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:1048
#: ./docs/11.x/cashier-paddle.md:1048
#: ./docs/master/cashier-paddle.md:1048
msgctxt "H3"
msgid "Canceling Subscriptions"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1050
#: ./docs/9.x/cashier-paddle.md:1122
msgctxt "P"
msgid "Charges happen in the currency specified in the `cashier.currency` configuration option. By default, this is set to USD. You may override the default currency by defining the `CASHIER_CURRENCY` environment variable in your application's `.env` file:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1052
#: ./docs/11.x/cashier-paddle.md:1052
#: ./docs/master/cashier-paddle.md:1052
msgctxt "CODE"
msgid "$user->subscription()->cancel();"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1054
#: ./docs/11.x/cashier-paddle.md:1054
#: ./docs/master/cashier-paddle.md:1054
msgctxt "P"
msgid "When a subscription is canceled, Cashier will automatically set the `ends_at` column in your database. This column is used to determine when the `subscribed` method should begin returning `false`. For example, if a customer cancels a subscription on March 1st, but the subscription was not scheduled to end until March 5th, the `subscribed` method will continue to return `true` until March 5th. This is done because a user is typically allowed to continue using an application until the end of their billing cycle."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1056
#: ./docs/11.x/cashier-paddle.md:1056
#: ./docs/master/cashier-paddle.md:1056
msgctxt "P"
msgid "You may determine if a user has canceled their subscription but are still on their \"grace period\" using the `onGracePeriod` method:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1056
#: ./docs/9.x/cashier-paddle.md:1128
msgctxt "P"
msgid "You can also [override prices per currency](https://developer.paddle.com/api-reference/product-api/pay-links/createpaylink#price-overrides) using Paddle's dynamic pricing matching system. To do so, pass an array of prices instead of a fixed amount:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1058
#: ./docs/9.x/cashier-paddle.md:1130
msgctxt "CODE"
msgid "$payLink = $user->charge([\n"
"    'USD:19.99',\n"
"    'EUR:15.99',\n"
"], 'Action Figure');"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1062
#: ./docs/11.x/cashier-paddle.md:1062
#: ./docs/master/cashier-paddle.md:1062
msgctxt "P"
msgid "If you wish to cancel a subscription immediately, you may call the `cancelNow` method on the subscription:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1063
#: ./docs/9.x/cashier-paddle.md:1135
#~ msgctxt "P"
#~ msgid "<a name=\"charging-products\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:1064
#: ./docs/11.x/cashier-paddle.md:1064
#: ./docs/master/cashier-paddle.md:1064
msgctxt "CODE"
msgid "$user->subscription()->cancelNow();"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1064
#: ./docs/9.x/cashier-paddle.md:1136
msgctxt "H3"
msgid "Charging Products"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1066
#: ./docs/11.x/cashier-paddle.md:1066
#: ./docs/master/cashier-paddle.md:1066
msgctxt "P"
msgid "To stop a subscription on its grace period from canceling, you may invoke the `stopCancelation` method:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1066
#: ./docs/9.x/cashier-paddle.md:1138
msgctxt "P"
msgid "If you would like to make a one-time charge against a specific product configured within Paddle, you may use the `chargeProduct` method on a billable model instance to generate a pay link:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1068
#: ./docs/11.x/cashier-paddle.md:1068
#: ./docs/master/cashier-paddle.md:1068
msgctxt "CODE"
msgid "$user->subscription()->stopCancelation();"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1068
#: ./docs/9.x/cashier-paddle.md:1140
msgctxt "CODE"
msgid "use Illuminate\\Http\\Request;\n\n"
"Route::get('/store', function (Request $request) {\n"
"    return view('store', [\n"
"        'payLink' => $request->user()->chargeProduct($productId = 123)\n"
"    ]);\n"
"});"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1071
#: ./docs/11.x/cashier-paddle.md:1071
#: ./docs/master/cashier-paddle.md:1071
msgctxt "P"
msgid "Paddle's subscriptions cannot be resumed after cancelation. If your customer wishes to resume their subscription, they will have to create a new subscription."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1076
#: ./docs/9.x/cashier-paddle.md:1148
msgctxt "P"
msgid "Then, you may provide the pay link to the `paddle-button` component to allow the user to initialize the Paddle widget:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1079
#: ./docs/11.x/cashier-paddle.md:1079
#: ./docs/master/cashier-paddle.md:1079
msgctxt "P"
msgid "If you would like to offer trial periods to your customers while still collecting payment method information up front, you should use set a trial time in the Paddle dashboard on the price your customer is subscribing to. Then, initiate the checkout session as normal:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1081
#: ./docs/11.x/cashier-paddle.md:1081
#: ./docs/master/cashier-paddle.md:1081
msgctxt "CODE"
msgid "use Illuminate\\Http\\Request;\n\n"
"Route::get('/user/subscribe', function (Request $request) {\n"
"    $checkout = $request->user()->subscribe('pri_monthly')\n"
"                ->returnTo(route('home'));\n\n"
"    return view('billing', ['checkout' => $checkout]);\n"
"});"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1084
#: ./docs/9.x/cashier-paddle.md:1156
msgctxt "P"
msgid "The `chargeProduct` method accepts an array as its second argument, allowing you to pass any options you wish to the underlying Paddle pay link creation. Please consult [the Paddle documentation](https://developer.paddle.com/api-reference/product-api/pay-links/createpaylink) regarding the options that are available to you when creating charges:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1086
#: ./docs/9.x/cashier-paddle.md:1158
msgctxt "CODE"
msgid "$payLink = $user->chargeProduct($productId, [\n"
"    'custom_option' => $value,\n"
"]);"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1090
#: ./docs/11.x/cashier-paddle.md:1090
#: ./docs/master/cashier-paddle.md:1090
msgctxt "P"
msgid "When your application receives the `subscription_created` event, Cashier will set the trial period ending date on the subscription record within your application's database as well as instruct Paddle to not begin billing the customer until after this date."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1090
#: ./docs/9.x/cashier-paddle.md:1162
#~ msgctxt "P"
#~ msgid "<a name=\"refunding-orders\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:1091
#: ./docs/9.x/cashier-paddle.md:1163
msgctxt "H3"
msgid "Refunding Orders"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1093
#: ./docs/11.x/cashier-paddle.md:1093
#: ./docs/master/cashier-paddle.md:1093
msgctxt "P"
msgid "If the customer's subscription is not canceled before the trial ending date they will be charged as soon as the trial expires, so you should be sure to notify your users of their trial ending date."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1093
#: ./docs/9.x/cashier-paddle.md:1165
msgctxt "P"
msgid "If you need to refund a Paddle order, you may use the `refund` method. This method accepts the Paddle order ID as its first argument. You may retrieve the receipts for a given billable model using the `receipts` method:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1095
#: ./docs/9.x/cashier-paddle.md:1167
msgctxt "CODE"
msgid "use App\\Models\\User;\n\n"
"$user = User::find(1);\n\n"
"$receipt = $user->receipts()->first();\n\n"
"$refundRequestId = $user->refund($receipt->order_id);"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1097
#: ./docs/11.x/cashier-paddle.md:1097
#: ./docs/master/cashier-paddle.md:1097
msgctxt "CODE"
msgid "if ($user->onTrial()) {\n"
"    // ...\n"
"}\n\n"
"if ($user->subscription()->onTrial()) {\n"
"    // ...\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1103
#: ./docs/9.x/cashier-paddle.md:1175
msgctxt "P"
msgid "You may optionally specify a specific amount to refund as well as a reason for the refund:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1105
#: ./docs/9.x/cashier-paddle.md:1177
msgctxt "CODE"
msgid "$receipt = $user->receipts()->first();\n\n"
"$refundRequestId = $user->refund(\n"
"    $receipt->order_id, 5.00, 'Unused product time'\n"
");"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1106
#: ./docs/11.x/cashier-paddle.md:1106
#: ./docs/master/cashier-paddle.md:1106
msgctxt "CODE"
msgid "if ($user->hasExpiredTrial()) {\n"
"    // ...\n"
"}\n\n"
"if ($user->subscription()->hasExpiredTrial()) {\n"
"    // ...\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1111
#: ./docs/9.x/cashier-paddle.md:1184
msgctxt "P"
msgid "You can use the `$refundRequestId` as a reference for the refund when contacting Paddle support."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1113
#: ./docs/9.x/cashier-paddle.md:1186
#~ msgctxt "P"
#~ msgid "<a name=\"receipts\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:1114
#: ./docs/11.x/cashier-paddle.md:1114
#: ./docs/master/cashier-paddle.md:1114
msgctxt "P"
msgid "To determine if a user is on trial for a specific subscription type, you may provide the type to the `onTrial` or `hasExpiredTrial` methods:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1114
#: ./docs/9.x/cashier-paddle.md:1187
msgctxt "H2"
msgid "Receipts"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1116
#: ./docs/11.x/cashier-paddle.md:1116
#: ./docs/master/cashier-paddle.md:1116
msgctxt "CODE"
msgid "if ($user->onTrial('default')) {\n"
"    // ...\n"
"}\n\n"
"if ($user->hasExpiredTrial('default')) {\n"
"    // ...\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1116
#: ./docs/9.x/cashier-paddle.md:1189
msgctxt "P"
msgid "You may easily retrieve an array of a billable model's receipts via the `receipts` property:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1118
#: ./docs/9.x/cashier-paddle.md:1191
msgctxt "CODE"
msgid "use App\\Models\\User;\n\n"
"$user = User::find(1);\n\n"
"$receipts = $user->receipts;"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1124
#: ./docs/9.x/cashier-paddle.md:1197
msgctxt "P"
msgid "When listing the receipts for the customer, you may use the receipt instance's methods to display the relevant receipt information. For example, you may wish to list every receipt in a table, allowing the user to easily download any of the receipts:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1126
#: ./docs/9.x/cashier-paddle.md:1199
msgctxt "CODE: html"
msgid "<table>\n"
"    @foreach ($receipts as $receipt)\n"
"        <tr>\n"
"            <td>{{ $receipt->paid_at->toFormattedDateString() }}</td>\n"
"            <td>{{ $receipt->amount() }}</td>\n"
"            <td><a href=\"{{ $receipt->receipt_url }}\" target=\"_blank\">Download</a></td>\n"
"        </tr>\n"
"    @endforeach\n"
"</table>"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1138
#: ./docs/9.x/cashier-paddle.md:1211
#: ./docs/10.x/cashier-paddle.md:1398
#: ./docs/11.x/cashier-paddle.md:1381
#: ./docs/master/cashier-paddle.md:1381
#~ msgctxt "P"
#~ msgid "<a name=\"past-and-upcoming-payments\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:1139
#: ./docs/9.x/cashier-paddle.md:1212
msgctxt "H3"
msgid "Past & Upcoming Payments"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1141
#: ./docs/9.x/cashier-paddle.md:1214
#: ./docs/10.x/cashier-paddle.md:1401
#: ./docs/11.x/cashier-paddle.md:1384
#: ./docs/master/cashier-paddle.md:1384
msgctxt "P"
msgid "You may use the `lastPayment` and `nextPayment` methods to retrieve and display a customer's past or upcoming payments for recurring subscriptions:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1143
#: ./docs/9.x/cashier-paddle.md:1216
msgctxt "CODE"
msgid "use App\\Models\\User;\n\n"
"$user = User::find(1);\n\n"
"$subscription = $user->subscription('default');\n\n"
"$lastPayment = $subscription->lastPayment();\n"
"$nextPayment = $subscription->nextPayment();"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1145
#: ./docs/11.x/cashier-paddle.md:1145
#: ./docs/master/cashier-paddle.md:1145
msgctxt "P"
msgid "Once you are ready to create an actual subscription for the user, you may use the `subscribe` method as usual:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1147
#: ./docs/11.x/cashier-paddle.md:1147
#: ./docs/master/cashier-paddle.md:1147
msgctxt "CODE"
msgid "use Illuminate\\Http\\Request;\n\n"
"Route::get('/user/subscribe', function (Request $request) {\n"
"    $checkout = $user->subscribe('pri_monthly')\n"
"        ->returnTo(route('home'));\n\n"
"    return view('billing', ['checkout' => $checkout]);\n"
"});"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1152
#: ./docs/9.x/cashier-paddle.md:1225
msgctxt "P"
msgid "Both of these methods will return an instance of `Laravel\\Paddle\\Payment`; however, `nextPayment` will return `null` when the billing cycle has ended (such as when a subscription has been cancelled):"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1154
#: ./docs/9.x/cashier-paddle.md:1227
#: ./docs/10.x/cashier-paddle.md:1414
#: ./docs/11.x/cashier-paddle.md:1397
#: ./docs/master/cashier-paddle.md:1397
msgctxt "CODE"
msgid "Next payment: {{ $nextPayment->amount() }} due on {{ $nextPayment->date()->format('d/m/Y') }}"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1156
#: ./docs/11.x/cashier-paddle.md:1156
#: ./docs/master/cashier-paddle.md:1156
msgctxt "P"
msgid "To retrieve the user's trial ending date, you may use the `trialEndsAt` method. This method will return a Carbon date instance if a user is on a trial or `null` if they aren't. You may also pass an optional subscription type parameter if you would like to get the trial ending date for a specific subscription other than the default one:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1156
#: ./docs/9.x/cashier-paddle.md:1231
#~ msgctxt "P"
#~ msgid "<a name=\"handling-failed-payments\"></a>"
#~ msgstr ""

#: ./docs/8.x/cashier-paddle.md:1157
#: ./docs/9.x/cashier-paddle.md:1232
msgctxt "H2"
msgid "Handling Failed Payments"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1158
#: ./docs/11.x/cashier-paddle.md:1158
#: ./docs/master/cashier-paddle.md:1158
msgctxt "CODE"
msgid "if ($user->onTrial('default')) {\n"
"    $trialEndsAt = $user->trialEndsAt();\n"
"}"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1159
#: ./docs/9.x/cashier-paddle.md:1234
msgctxt "P"
msgid "Subscription payments fail for various reasons, such as expired cards or a card having insufficient funds. When this happens, we recommend that you let Paddle handle payment failures for you. Specifically, you may [setup Paddle's automatic billing emails](https://vendors.paddle.com/subscription-settings) in your Paddle dashboard."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1161
msgctxt "P"
msgid "Alternatively, you can perform more precise customization by catching the [`subscription_payment_failed`](https://developer.paddle.com/webhook-reference/subscription-alerts/subscription-payment-failed) webhook and enabling the \"Subscription Payment Failed\" option in the Webhook settings of your Paddle dashboard:"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1163
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Http\\Controllers;\n\n"
"use Laravel\\Paddle\\Http\\Controllers\\WebhookController as CashierController;\n\n"
"class WebhookController extends CashierController\n"
"{\n"
"    /**\n"
"     * Handle subscription payment failed.\n"
"     *\n"
"     * @param  array  $payload\n"
"     * @return void\n"
"     */\n"
"    public function handleSubscriptionPaymentFailed($payload)\n"
"    {\n"
"        // Handle the failed subscription payment...\n"
"    }\n"
"}"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1168
#: ./docs/11.x/cashier-paddle.md:1168
#: ./docs/master/cashier-paddle.md:1168
#~ msgctxt "P"
#~ msgid "<a name=\"extend-or-activate-a-trial\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:1169
#: ./docs/11.x/cashier-paddle.md:1169
#: ./docs/master/cashier-paddle.md:1169
msgctxt "H3"
msgid "Extend or Activate a Trial"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1171
#: ./docs/11.x/cashier-paddle.md:1171
#: ./docs/master/cashier-paddle.md:1171
msgctxt "P"
msgid "You can extend an existing trial period on a subscription by invoking the `extendTrial` method and specifying the moment in time that the trial should end:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1173
#: ./docs/master/cashier-paddle.md:1173
msgctxt "CODE"
msgid "$user->subsription()->extendTrial(now()->addDays(5));"
msgstr ""

#: ./docs/11.x/cashier-paddle.md:1173
msgctxt "CODE"
msgid "$user->subscription()->extendTrial(now()->addDays(5));"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1175
#: ./docs/11.x/cashier-paddle.md:1175
#: ./docs/master/cashier-paddle.md:1175
msgctxt "P"
msgid "Or, you may immediately activate a subscription by ending its trial by calling the `activate` method on the subscription:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1177
#: ./docs/11.x/cashier-paddle.md:1177
#: ./docs/master/cashier-paddle.md:1177
msgctxt "CODE"
msgid "$user->subscription()->activate();"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1183
#: ./docs/9.x/cashier-paddle.md:1279
#: ./docs/10.x/cashier-paddle.md:1418
#: ./docs/11.x/cashier-paddle.md:1401
#: ./docs/master/cashier-paddle.md:1401
#~ msgctxt "P"
#~ msgid "<a name=\"testing\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:1184
#: ./docs/11.x/cashier-paddle.md:1184
#: ./docs/master/cashier-paddle.md:1184
msgctxt "P"
msgid "By default, this controller will automatically handle canceling subscriptions that have too many failed charges, subscription updates, and payment method changes; however, as we'll soon discover, you can extend this controller to handle any Paddle webhook event you like."
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1184
#: ./docs/9.x/cashier-paddle.md:1280
#: ./docs/10.x/cashier-paddle.md:1419
#: ./docs/11.x/cashier-paddle.md:1402
#: ./docs/master/cashier-paddle.md:1402
msgctxt "H2"
msgid "Testing"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1186
#: ./docs/9.x/cashier-paddle.md:1282
#: ./docs/10.x/cashier-paddle.md:1421
#: ./docs/11.x/cashier-paddle.md:1404
#: ./docs/master/cashier-paddle.md:1404
msgctxt "P"
msgid "While testing, you should manually test your billing flow to make sure your integration works as expected."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1188
#: ./docs/11.x/cashier-paddle.md:1188
#: ./docs/master/cashier-paddle.md:1188
msgctxt "P"
msgid "Customer Updated"
msgstr ""

#: ./docs/8.x/cashier-paddle.md:1188
#: ./docs/9.x/cashier-paddle.md:1284
#: ./docs/10.x/cashier-paddle.md:1423
#: ./docs/11.x/cashier-paddle.md:1406
#: ./docs/master/cashier-paddle.md:1406
msgctxt "P"
msgid "For automated tests, including those executed within a CI environment, you may use [Laravel's HTTP Client](/docs/{{version}}/http-client#testing) to fake HTTP calls made to Paddle. Although this does not test the actual responses from Paddle, it does provide a way to test your application without actually calling Paddle's API."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1189
#: ./docs/11.x/cashier-paddle.md:1189
#: ./docs/master/cashier-paddle.md:1189
msgctxt "P"
msgid "Transaction Completed"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1190
#: ./docs/11.x/cashier-paddle.md:1190
#: ./docs/master/cashier-paddle.md:1190
msgctxt "P"
msgid "Transaction Updated"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1193
#: ./docs/11.x/cashier-paddle.md:1193
#: ./docs/master/cashier-paddle.md:1193
msgctxt "P"
msgid "Subscription Paused"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1194
#: ./docs/11.x/cashier-paddle.md:1194
#: ./docs/master/cashier-paddle.md:1194
msgctxt "P"
msgid "Subscription Canceled"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1200
#: ./docs/11.x/cashier-paddle.md:1200
#: ./docs/master/cashier-paddle.md:1200
msgctxt "H4"
msgid "Webhooks and CSRF Protection"
msgstr ""

#: ./docs/11.x/cashier-paddle.md:1202
#: ./docs/master/cashier-paddle.md:1202
msgctxt "P"
msgid "Since Paddle webhooks need to bypass Laravel's [CSRF protection](/docs/{{version}}/csrf), you should ensure that Laravel does not attempt to verify the CSRF token for incoming Paddle webhooks. To accomplish this, you should exclude `paddle/*` from CSRF protection in your application's `bootstrap/app.php` file:"
msgstr ""

#: ./docs/11.x/cashier-paddle.md:1204
#: ./docs/master/cashier-paddle.md:1204
msgctxt "CODE"
msgid "->withMiddleware(function (Middleware $middleware) {\n"
"    $middleware->validateCsrfTokens(except: [\n"
"        'paddle/*',\n"
"    ]);\n"
"})"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1209
#: ./docs/11.x/cashier-paddle.md:1211
#: ./docs/master/cashier-paddle.md:1211
msgctxt "H4"
msgid "Webhooks and Local Development"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1216
#: ./docs/11.x/cashier-paddle.md:1218
#: ./docs/master/cashier-paddle.md:1218
msgctxt "P"
msgid "Cashier automatically handles subscription cancelation on failed charges and other common Paddle webhooks. However, if you have additional webhook events you would like to handle, you may do so by listening to the following events that are dispatched by Cashier:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1221
#: ./docs/master/cashier-paddle.md:1223
msgctxt "P"
msgid "Both events contain the full payload of the Paddle webhook. For example, if you wish to handle the `transaction_billed` webhook, you may register a [listener](/docs/{{version}}/events#defining-listeners) that will handle the event:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1223
#: ./docs/master/cashier-paddle.md:1225
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Listeners;\n\n"
"use Laravel\\Paddle\\Events\\WebhookReceived;\n\n"
"class PaddleEventListener\n"
"{\n"
"    /**\n"
"     * Handle received Paddle webhooks.\n"
"     */\n"
"    public function handle(WebhookReceived $event): void\n"
"    {\n"
"        if ($event->payload['alert_name'] === 'transaction_billed') {\n"
"            // Handle the incoming event...\n"
"        }\n"
"    }\n"
"}"
msgstr ""

#: ./docs/11.x/cashier-paddle.md:1223
msgctxt "P"
msgid "Both events contain the full payload of the Paddle webhook. For example, if you wish to handle the `transaction.billed` webhook, you may register a [listener](/docs/{{version}}/events#defining-listeners) that will handle the event:"
msgstr ""

#: ./docs/11.x/cashier-paddle.md:1225
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Listeners;\n\n"
"use Laravel\\Paddle\\Events\\WebhookReceived;\n\n"
"class PaddleEventListener\n"
"{\n"
"    /**\n"
"     * Handle received Paddle webhooks.\n"
"     */\n"
"    public function handle(WebhookReceived $event): void\n"
"    {\n"
"        if ($event->payload['event_type'] === 'transaction.billed') {\n"
"            // Handle the incoming event...\n"
"        }\n"
"    }\n"
"}"
msgstr ""

#: ./docs/9.x/cashier-paddle.md:1236
msgctxt "P"
msgid "Alternatively, you can perform more precise customization by [listening](/docs/{{version}}/events) for the `subscription_payment_failed` Paddle event via the `WebhookReceived` event dispatched by Cashier. You should also ensure the \"Subscription Payment Failed\" option is enabled in the Webhook settings of your Paddle dashboard:"
msgstr ""

#: ./docs/9.x/cashier-paddle.md:1238
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Listeners;\n\n"
"use Laravel\\Paddle\\Events\\WebhookReceived;\n\n"
"class PaddleEventListener\n"
"{\n"
"    /**\n"
"     * Handle received Paddle webhooks.\n"
"     *\n"
"     * @param  \\Laravel\\Paddle\\Events\\WebhookReceived  $event\n"
"     * @return void\n"
"     */\n"
"    public function handle(WebhookReceived $event)\n"
"    {\n"
"        if ($event->payload['alert_name'] === 'subscription_payment_failed') {\n"
"            // Handle the failed subscription payment...\n"
"        }\n"
"    }\n"
"}"
msgstr ""

#: ./docs/9.x/cashier-paddle.md:1260
msgctxt "P"
msgid "Once your listener has been defined, you should register it within your application's `EventServiceProvider`:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1265
#: ./docs/11.x/cashier-paddle.md:1248
#: ./docs/master/cashier-paddle.md:1248
msgctxt "P"
msgid "`Laravel\\Paddle\\Events\\CustomerUpdated`"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1266
#: ./docs/11.x/cashier-paddle.md:1249
#: ./docs/master/cashier-paddle.md:1249
msgctxt "P"
msgid "`Laravel\\Paddle\\Events\\TransactionCompleted`"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1267
#: ./docs/11.x/cashier-paddle.md:1250
#: ./docs/master/cashier-paddle.md:1250
msgctxt "P"
msgid "`Laravel\\Paddle\\Events\\TransactionUpdated`"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1270
#: ./docs/11.x/cashier-paddle.md:1253
#: ./docs/master/cashier-paddle.md:1253
msgctxt "P"
msgid "`Laravel\\Paddle\\Events\\SubscriptionPaused`"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1271
#: ./docs/11.x/cashier-paddle.md:1254
#: ./docs/master/cashier-paddle.md:1254
msgctxt "P"
msgid "`Laravel\\Paddle\\Events\\SubscriptionCanceled`"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1286
#: ./docs/11.x/cashier-paddle.md:1269
#: ./docs/master/cashier-paddle.md:1269
msgctxt "P"
msgid "To enable webhook verification, ensure that the `PADDLE_WEBHOOK_SECRET` environment variable is defined in your application's `.env` file. The webhook secret may be retrieved from your Paddle account dashboard."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1291
#: ./docs/11.x/cashier-paddle.md:1274
#: ./docs/master/cashier-paddle.md:1274
#~ msgctxt "P"
#~ msgid "<a name=\"charging-for-products\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:1292
#: ./docs/11.x/cashier-paddle.md:1275
#: ./docs/master/cashier-paddle.md:1275
msgctxt "H3"
msgid "Charging for Products"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1294
#: ./docs/11.x/cashier-paddle.md:1277
#: ./docs/master/cashier-paddle.md:1277
msgctxt "P"
msgid "If you would like to initiate a product purchase for a customer, you may use the `checkout` method on a billable model instance to generate a checkout session for the purchase. The `checkout` method accepts one or multiple price ID's. If necessary, an associative array may be used to provide the quantity of the product that is being purchased:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1296
#: ./docs/11.x/cashier-paddle.md:1279
#: ./docs/master/cashier-paddle.md:1279
msgctxt "CODE"
msgid "use Illuminate\\Http\\Request;\n\n"
"Route::get('/buy', function (Request $request) {\n"
"    $checkout = $request->user()->checkout(['pri_tshirt', 'pri_socks' => 5]);\n\n"
"    return view('buy', ['checkout' => $checkout]);\n"
"});"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1304
#: ./docs/11.x/cashier-paddle.md:1287
#: ./docs/master/cashier-paddle.md:1287
msgctxt "P"
msgid "After generating the checkout session, you may use Cashier's provided `paddle-button` [Blade component](#overlay-checkout) to allow the user to view the Paddle checkout widget and complete the purchase:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1306
#: ./docs/11.x/cashier-paddle.md:1289
#: ./docs/master/cashier-paddle.md:1289
msgctxt "CODE: blade"
msgid "<x-paddle-button :checkout=\"$checkout\" class=\"px-8 py-4\">\n"
"    Buy\n"
"</x-paddle-button>"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1312
#: ./docs/11.x/cashier-paddle.md:1295
#: ./docs/master/cashier-paddle.md:1295
msgctxt "P"
msgid "A checkout session has a `customData` method, allowing you to pass any custom data you wish to the underlying transaction creation. Please consult [the Paddle documentation](https://developer.paddle.com/build/transactions/custom-data) to learn more about the options available to you when passing custom data:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1314
#: ./docs/11.x/cashier-paddle.md:1297
#: ./docs/master/cashier-paddle.md:1297
msgctxt "CODE"
msgid "$checkout = $user->checkout('pri_tshirt')\n"
"    ->customData([\n"
"        'custom_option' => $value,\n"
"    ]);"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1319
#: ./docs/11.x/cashier-paddle.md:1302
#: ./docs/master/cashier-paddle.md:1302
#~ msgctxt "P"
#~ msgid "<a name=\"refunding-transactions\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:1320
#: ./docs/11.x/cashier-paddle.md:1303
#: ./docs/master/cashier-paddle.md:1303
msgctxt "H3"
msgid "Refunding Transactions"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1322
#: ./docs/11.x/cashier-paddle.md:1305
#: ./docs/master/cashier-paddle.md:1305
msgctxt "P"
msgid "Refunding transactions will return the refunded amount to your customer's payment method that was used at the time of purchase. If you need to refund a Paddle purchase, you may use the `refund` method on a `Cashier\\Paddle\\Transaction` model. This method accepts a reason as the first argument, one or more price ID's to refund with optional amounts as an associative array. You may retrieve the transactions for a given billable model using the `transactions` method."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1324
#: ./docs/11.x/cashier-paddle.md:1307
#: ./docs/master/cashier-paddle.md:1307
msgctxt "P"
msgid "For example, imagine we want to refund a specific transaction for prices `pri_123` and `pri_456`. We want to fully refund `pri_123`, but only refund two dollars for `pri_456`:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1326
#: ./docs/11.x/cashier-paddle.md:1309
#: ./docs/master/cashier-paddle.md:1309
msgctxt "CODE"
msgid "use App\\Models\\User;\n\n"
"$user = User::find(1);\n\n"
"$transaction = $user->transactions()->first();\n\n"
"$response = $transaction->refund('Accidental charge', [\n"
"    'pri_123', // Fully refund this price...\n"
"    'pri_456' => 200, // Only partially refund this price...\n"
"]);"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1337
#: ./docs/11.x/cashier-paddle.md:1320
#: ./docs/master/cashier-paddle.md:1320
msgctxt "P"
msgid "The example above refunds specific line items in a transaction. If you want to refund the entire transaction, simply provide a reason:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1339
#: ./docs/11.x/cashier-paddle.md:1322
#: ./docs/master/cashier-paddle.md:1322
msgctxt "CODE"
msgid "$response = $transaction->refund('Accidental charge');"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1341
#: ./docs/11.x/cashier-paddle.md:1324
#: ./docs/master/cashier-paddle.md:1324
msgctxt "P"
msgid "For more information on refunds, please consult [Paddle's refund documentation](https://developer.paddle.com/build/transactions/create-transaction-adjustments)."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1344
#: ./docs/11.x/cashier-paddle.md:1327
#: ./docs/master/cashier-paddle.md:1327
msgctxt "P"
msgid "Refunds must always be approved by Paddle before fully processing."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1346
#: ./docs/11.x/cashier-paddle.md:1329
#: ./docs/master/cashier-paddle.md:1329
#~ msgctxt "P"
#~ msgid "<a name=\"crediting-transactions\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:1347
#: ./docs/11.x/cashier-paddle.md:1330
#: ./docs/master/cashier-paddle.md:1330
msgctxt "H3"
msgid "Crediting Transactions"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1349
#: ./docs/11.x/cashier-paddle.md:1332
#: ./docs/master/cashier-paddle.md:1332
msgctxt "P"
msgid "Just like refunding, you can also credit transactions. Crediting transactions will add the funds to the customer's balance so it may be used for future purchases. Crediting transactions can only be done for manually-collected transactions and not for automatically-collected transactions (like subscriptions) since Paddle handles subscription credits automatically:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1351
#: ./docs/11.x/cashier-paddle.md:1334
#: ./docs/master/cashier-paddle.md:1334
msgctxt "CODE"
msgid "$transaction = $user->transactions()->first();\n\n"
"// Credit a specific line item fully...\n"
"$response = $transaction->credit('Compensation', 'pri_123');"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1356
#: ./docs/11.x/cashier-paddle.md:1339
#: ./docs/master/cashier-paddle.md:1339
msgctxt "P"
msgid "For more info, [see Paddle's documentation on crediting](https://developer.paddle.com/build/transactions/create-transaction-adjustments)."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1359
#: ./docs/11.x/cashier-paddle.md:1342
#: ./docs/master/cashier-paddle.md:1342
msgctxt "P"
msgid "Credits can only be applied for manually-collected transactions. Automatically-collected transactions are credited by Paddle themselves."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1361
#: ./docs/11.x/cashier-paddle.md:1344
#: ./docs/master/cashier-paddle.md:1344
#~ msgctxt "P"
#~ msgid "<a name=\"transactions\"></a>"
#~ msgstr ""

#: ./docs/10.x/cashier-paddle.md:1362
#: ./docs/11.x/cashier-paddle.md:1345
#: ./docs/master/cashier-paddle.md:1345
msgctxt "H2"
msgid "Transactions"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1364
#: ./docs/11.x/cashier-paddle.md:1347
#: ./docs/master/cashier-paddle.md:1347
msgctxt "P"
msgid "You may easily retrieve an array of a billable model's transactions via the `transactions` property:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1366
#: ./docs/11.x/cashier-paddle.md:1349
#: ./docs/master/cashier-paddle.md:1349
msgctxt "CODE"
msgid "use App\\Models\\User;\n\n"
"$user = User::find(1);\n\n"
"$transactions = $user->transactions;"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1372
#: ./docs/11.x/cashier-paddle.md:1355
#: ./docs/master/cashier-paddle.md:1355
msgctxt "P"
msgid "Transactions represent payments for your products and purchases and are accompanied by invoices. Only completed transactions are stored in your application's database."
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1374
#: ./docs/11.x/cashier-paddle.md:1357
#: ./docs/master/cashier-paddle.md:1357
msgctxt "P"
msgid "When listing the transactions for a customer, you may use the transaction instance's methods to display the relevant payment information. For example, you may wish to list every transaction in a table, allowing the user to easily download any of the invoices:"
msgstr ""

#: ./docs/11.x/cashier-paddle.md:1374
msgctxt "CODE"
msgid "use Illuminate\\Http\\Request;\n"
"use Laravel\\Paddle\\Transaction;\n\n"
"Route::get('/download-invoice/{transaction}', function (Request $request, Transaction $transaction) {\n"
"    return $transaction->redirectToInvoicePdf();\n"
"})->name('download-invoice');"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1376
#: ./docs/11.x/cashier-paddle.md:1359
#: ./docs/master/cashier-paddle.md:1359
msgctxt "CODE: html"
msgid "<table>\n"
"    @foreach ($transactions as $transaction)\n"
"        <tr>\n"
"            <td>{{ $transaction->billed_at->toFormattedDateString() }}</td>\n"
"            <td>{{ $transaction->total() }}</td>\n"
"            <td>{{ $transaction->tax() }}</td>\n"
"            <td><a href=\"{{ route('download-invoice', $transaction->id) }}\" target=\"_blank\">Download</a></td>\n"
"        </tr>\n"
"    @endforeach\n"
"</table>"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1389
#: ./docs/11.x/cashier-paddle.md:1372
#: ./docs/master/cashier-paddle.md:1372
msgctxt "P"
msgid "The `download-invoice` route may look like the following:"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1391
#: ./docs/master/cashier-paddle.md:1374
msgctxt "CODE"
msgid "use Illuminate\\Http\\Request;\n"
"use Laravel\\Cashier\\Transaction;\n\n"
"Route::get('/download-invoice/{transaction}', function (Request $request, Transaction $transaction) {\n"
"    return $transaction->redirectToInvoicePdf();\n"
"})->name('download-invoice');"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1399
#: ./docs/11.x/cashier-paddle.md:1382
#: ./docs/master/cashier-paddle.md:1382
msgctxt "H3"
msgid "Past and Upcoming Payments"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1403
#: ./docs/11.x/cashier-paddle.md:1386
#: ./docs/master/cashier-paddle.md:1386
msgctxt "CODE"
msgid "use App\\Models\\User;\n\n"
"$user = User::find(1);\n\n"
"$subscription = $user->subscription();\n\n"
"$lastPayment = $subscription->lastPayment();\n"
"$nextPayment = $subscription->nextPayment();"
msgstr ""

#: ./docs/10.x/cashier-paddle.md:1412
#: ./docs/11.x/cashier-paddle.md:1395
#: ./docs/master/cashier-paddle.md:1395
msgctxt "P"
msgid "Both of these methods will return an instance of `Laravel\\Paddle\\Payment`; however, `lastPayment` will return `null` when transactions have not been synced by webhooks yet, while `nextPayment` will return `null` when the billing cycle has ended (such as when a subscription has been canceled):"
msgstr ""

