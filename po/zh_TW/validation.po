msgid ""
msgstr ""
"Project-Id-Version: laravel-docs\n"
"POT-Creation-Date: 2022-01-30 12:42+0000\n"
"PO-Revision-Date: 2022-01-30 12:45\n"
"Last-Translator: \n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/templates/validation.pot\n"
"X-Crowdin-File-ID: 171\n"

# File: docs/8.x/validation.md, line: 1
# File: docs/master/validation.md, line: 1
#. type: Title #
#, no-wrap
msgid "Validation"
msgstr ""

# File: docs/8.x/validation.md, line: 36
# File: docs/master/validation.md, line: 35
#. type: Bullet: '- '
msgid "[Introduction](#introduction)"
msgstr ""

# File: docs/8.x/validation.md, line: 36
#. type: Plain text
#, no-wrap
msgid "- [Validation Quickstart](#validation-quickstart)\n"
"    - [Defining The Routes](#quick-defining-the-routes)\n"
"    - [Creating The Controller](#quick-creating-the-controller)\n"
"    - [Writing The Validation Logic](#quick-writing-the-validation-logic)\n"
"    - [Displaying The Validation Errors](#quick-displaying-the-validation-errors)\n"
"    - [Repopulating Forms](#repopulating-forms)\n"
"    - [A Note On Optional Fields](#a-note-on-optional-fields)\n"
"- [Form Request Validation](#form-request-validation)\n"
"    - [Creating Form Requests](#creating-form-requests)\n"
"    - [Authorizing Form Requests](#authorizing-form-requests)\n"
"    - [Customizing The Error Messages](#customizing-the-error-messages)\n"
"    - [Preparing Input For Validation](#preparing-input-for-validation)\n"
"- [Manually Creating Validators](#manually-creating-validators)\n"
"    - [Automatic Redirection](#automatic-redirection)\n"
"    - [Named Error Bags](#named-error-bags)\n"
"    - [Customizing The Error Messages](#manual-customizing-the-error-messages)\n"
"    - [After Validation Hook](#after-validation-hook)\n"
"- [Working With Validated Input](#working-with-validated-input)\n"
"- [Working With Error Messages](#working-with-error-messages)\n"
"    - [Specifying Custom Messages In Language Files](#specifying-custom-messages-in-language-files)\n"
"    - [Specifying Attributes In Language Files](#specifying-attribute-in-language-files)\n"
"    - [Specifying Values In Language Files](#specifying-values-in-language-files)\n"
"- [Available Validation Rules](#available-validation-rules)\n"
"- [Conditionally Adding Rules](#conditionally-adding-rules)\n"
"- [Validating Arrays](#validating-arrays)\n"
"    - [Excluding Unvalidated Array Keys](#excluding-unvalidated-array-keys)\n"
"    - [Validating Nested Array Input](#validating-nested-array-input)\n"
"- [Validating Passwords](#validating-passwords)\n"
"- [Custom Validation Rules](#custom-validation-rules)\n"
"    - [Using Rule Objects](#using-rule-objects)\n"
"    - [Using Closures](#using-closures)\n"
"    - [Implicit Rules](#implicit-rules)\n"
msgstr ""

# File: docs/8.x/validation.md, line: 38
# File: docs/master/validation.md, line: 37
#. type: Plain text
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 38
# File: docs/master/validation.md, line: 37
#. type: Title ##
#, no-wrap
msgid "Introduction"
msgstr ""

# File: docs/8.x/validation.md, line: 41
# File: docs/master/validation.md, line: 40
#. type: Plain text
msgid "Laravel provides several different approaches to validate your application's incoming data. It is most common to use the `validate` method available on all incoming HTTP requests. However, we will discuss other approaches to validation as well."
msgstr ""

# File: docs/8.x/validation.md, line: 43
# File: docs/master/validation.md, line: 42
#. type: Plain text
msgid "Laravel includes a wide variety of convenient validation rules that you may apply to data, even providing the ability to validate if values are unique in a given database table. We'll cover each of these validation rules in detail so that you are familiar with all of Laravel's validation features."
msgstr ""

# File: docs/8.x/validation.md, line: 45
# File: docs/master/validation.md, line: 44
#. type: Plain text
#, no-wrap
msgid "<a name=\"validation-quickstart\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 45
# File: docs/master/validation.md, line: 44
#. type: Title ##
#, no-wrap
msgid "Validation Quickstart"
msgstr ""

# File: docs/8.x/validation.md, line: 48
# File: docs/master/validation.md, line: 47
#. type: Plain text
msgid "To learn about Laravel's powerful validation features, let's look at a complete example of validating a form and displaying the error messages back to the user. By reading this high-level overview, you'll be able to gain a good general understanding of how to validate incoming request data using Laravel:"
msgstr ""

# File: docs/8.x/validation.md, line: 50
# File: docs/master/validation.md, line: 49
#. type: Plain text
#, no-wrap
msgid "<a name=\"quick-defining-the-routes\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 50
# File: docs/master/validation.md, line: 49
#. type: Title ###
#, no-wrap
msgid "Defining The Routes"
msgstr ""

# File: docs/8.x/validation.md, line: 53
# File: docs/master/validation.md, line: 52
#. type: Plain text
msgid "First, let's assume we have the following routes defined in our `routes/web.php` file:"
msgstr ""

# File: docs/8.x/validation.md, line: 55
# File: docs/master/validation.md, line: 54
#. type: Plain text
#, no-wrap
msgid "    use App\\Http\\Controllers\\PostController;\n"
msgstr ""

# File: docs/8.x/validation.md, line: 58
# File: docs/master/validation.md, line: 57
#. type: Plain text
#, no-wrap
msgid "    Route::get('/post/create', [PostController::class, 'create']);\n"
"    Route::post('/post', [PostController::class, 'store']);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 60
# File: docs/master/validation.md, line: 59
#. type: Plain text
msgid "The `GET` route will display a form for the user to create a new blog post, while the `POST` route will store the new blog post in the database."
msgstr ""

# File: docs/8.x/validation.md, line: 62
# File: docs/master/validation.md, line: 61
#. type: Plain text
#, no-wrap
msgid "<a name=\"quick-creating-the-controller\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 62
# File: docs/master/validation.md, line: 61
#. type: Title ###
#, no-wrap
msgid "Creating The Controller"
msgstr ""

# File: docs/8.x/validation.md, line: 65
# File: docs/master/validation.md, line: 64
#. type: Plain text
msgid "Next, let's take a look at a simple controller that handles incoming requests to these routes. We'll leave the `store` method empty for now:"
msgstr ""

# File: docs/8.x/validation.md, line: 67
# File: docs/8.x/validation.md, line: 464
# File: docs/8.x/validation.md, line: 1785
# File: docs/8.x/validation.md, line: 1840
# File: docs/8.x/validation.md, line: 1874
# File: docs/master/validation.md, line: 66
# File: docs/master/validation.md, line: 463
# File: docs/master/validation.md, line: 1767
# File: docs/master/validation.md, line: 1822
# File: docs/master/validation.md, line: 1856
#. type: Plain text
#, no-wrap
msgid "    <?php\n"
msgstr ""

# File: docs/8.x/validation.md, line: 69
# File: docs/8.x/validation.md, line: 466
# File: docs/master/validation.md, line: 68
# File: docs/master/validation.md, line: 465
#. type: Plain text
#, no-wrap
msgid "    namespace App\\Http\\Controllers;\n"
msgstr ""

# File: docs/8.x/validation.md, line: 72
# File: docs/master/validation.md, line: 71
#. type: Plain text
#, no-wrap
msgid "    use App\\Http\\Controllers\\Controller;\n"
"    use Illuminate\\Http\\Request;\n"
msgstr ""

# File: docs/8.x/validation.md, line: 84
# File: docs/master/validation.md, line: 83
#. type: Plain text
#, no-wrap
msgid "    class PostController extends Controller\n"
"    {\n"
"        /**\n"
"         * Show the form to create a new blog post.\n"
"         *\n"
"         * @return \\Illuminate\\View\\View\n"
"         */\n"
"        public function create()\n"
"        {\n"
"            return view('post.create');\n"
"        }\n"
msgstr ""

# File: docs/8.x/validation.md, line: 96
# File: docs/master/validation.md, line: 95
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * Store a new blog post.\n"
"         *\n"
"         * @param  \\Illuminate\\Http\\Request  $request\n"
"         * @return \\Illuminate\\Http\\Response\n"
"         */\n"
"        public function store(Request $request)\n"
"        {\n"
"            // Validate and store the blog post...\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/validation.md, line: 98
# File: docs/master/validation.md, line: 97
#. type: Plain text
#, no-wrap
msgid "<a name=\"quick-writing-the-validation-logic\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 98
# File: docs/master/validation.md, line: 97
#. type: Title ###
#, no-wrap
msgid "Writing The Validation Logic"
msgstr ""

# File: docs/8.x/validation.md, line: 101
# File: docs/master/validation.md, line: 100
#. type: Plain text
msgid "Now we are ready to fill in our `store` method with the logic to validate the new blog post. To do this, we will use the `validate` method provided by the `Illuminate\\Http\\Request` object. If the validation rules pass, your code will keep executing normally; however, if validation fails, an `Illuminate\\Validation\\ValidationException` exception will be thrown and the proper error response will automatically be sent back to the user."
msgstr ""

# File: docs/8.x/validation.md, line: 103
# File: docs/master/validation.md, line: 102
#. type: Plain text
msgid "If validation fails during a traditional HTTP request, a redirect response to the previous URL will be generated. If the incoming request is an XHR request, a JSON response containing the validation error messages will be returned."
msgstr ""

# File: docs/8.x/validation.md, line: 105
# File: docs/master/validation.md, line: 104
#. type: Plain text
msgid "To get a better understanding of the `validate` method, let's jump back into the `store` method:"
msgstr ""

# File: docs/8.x/validation.md, line: 118
# File: docs/master/validation.md, line: 117
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Store a new blog post.\n"
"     *\n"
"     * @param  \\Illuminate\\Http\\Request  $request\n"
"     * @return \\Illuminate\\Http\\Response\n"
"     */\n"
"    public function store(Request $request)\n"
"    {\n"
"        $validated = $request->validate([\n"
"            'title' => 'required|unique:posts|max:255',\n"
"            'body' => 'required',\n"
"        ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 121
# File: docs/master/validation.md, line: 120
#. type: Plain text
#, no-wrap
msgid "        // The blog post is valid...\n"
"    }\n"
msgstr ""

# File: docs/8.x/validation.md, line: 123
# File: docs/master/validation.md, line: 122
#. type: Plain text
msgid "As you can see, the validation rules are passed into the `validate` method. Don't worry - all available validation rules are [documented](#available-validation-rules). Again, if the validation fails, the proper response will automatically be generated. If the validation passes, our controller will continue executing normally."
msgstr ""

# File: docs/8.x/validation.md, line: 125
# File: docs/master/validation.md, line: 124
#. type: Plain text
msgid "Alternatively, validation rules may be specified as arrays of rules instead of a single `|` delimited string:"
msgstr ""

# File: docs/8.x/validation.md, line: 130
# File: docs/master/validation.md, line: 129
#. type: Plain text
#, no-wrap
msgid "    $validatedData = $request->validate([\n"
"        'title' => ['required', 'unique:posts', 'max:255'],\n"
"        'body' => ['required'],\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 132
# File: docs/master/validation.md, line: 131
#. type: Plain text
msgid "In addition, you may use the `validateWithBag` method to validate a request and store any error messages within a [named error bag](#named-error-bags):"
msgstr ""

# File: docs/8.x/validation.md, line: 137
# File: docs/master/validation.md, line: 136
#. type: Plain text
#, no-wrap
msgid "    $validatedData = $request->validateWithBag('post', [\n"
"        'title' => ['required', 'unique:posts', 'max:255'],\n"
"        'body' => ['required'],\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 139
# File: docs/master/validation.md, line: 138
#. type: Plain text
#, no-wrap
msgid "<a name=\"stopping-on-first-validation-failure\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 139
# File: docs/8.x/validation.md, line: 507
# File: docs/master/validation.md, line: 138
# File: docs/master/validation.md, line: 506
#. type: Title ####
#, no-wrap
msgid "Stopping On First Validation Failure"
msgstr ""

# File: docs/8.x/validation.md, line: 142
# File: docs/master/validation.md, line: 141
#. type: Plain text
msgid "Sometimes you may wish to stop running validation rules on an attribute after the first validation failure. To do so, assign the `bail` rule to the attribute:"
msgstr ""

# File: docs/8.x/validation.md, line: 147
# File: docs/master/validation.md, line: 146
#. type: Plain text
#, no-wrap
msgid "    $request->validate([\n"
"        'title' => 'bail|required|unique:posts|max:255',\n"
"        'body' => 'required',\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 149
# File: docs/master/validation.md, line: 148
#. type: Plain text
msgid "In this example, if the `unique` rule on the `title` attribute fails, the `max` rule will not be checked. Rules will be validated in the order they are assigned."
msgstr ""

# File: docs/8.x/validation.md, line: 151
# File: docs/master/validation.md, line: 150
#. type: Plain text
#, no-wrap
msgid "<a name=\"a-note-on-nested-attributes\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 151
# File: docs/master/validation.md, line: 150
#. type: Title ####
#, no-wrap
msgid "A Note On Nested Attributes"
msgstr ""

# File: docs/8.x/validation.md, line: 154
# File: docs/master/validation.md, line: 153
#. type: Plain text
msgid "If the incoming HTTP request contains \"nested\" field data, you may specify these fields in your validation rules using \"dot\" syntax:"
msgstr ""

# File: docs/8.x/validation.md, line: 160
# File: docs/master/validation.md, line: 159
#. type: Plain text
#, no-wrap
msgid "    $request->validate([\n"
"        'title' => 'required|unique:posts|max:255',\n"
"        'author.name' => 'required',\n"
"        'author.description' => 'required',\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 162
# File: docs/master/validation.md, line: 161
#. type: Plain text
msgid "On the other hand, if your field name contains a literal period, you can explicitly prevent this from being interpreted as \"dot\" syntax by escaping the period with a backslash:"
msgstr ""

# File: docs/8.x/validation.md, line: 167
# File: docs/master/validation.md, line: 166
#. type: Plain text
#, no-wrap
msgid "    $request->validate([\n"
"        'title' => 'required|unique:posts|max:255',\n"
"        'v1\\.0' => 'required',\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 169
# File: docs/master/validation.md, line: 168
#. type: Plain text
#, no-wrap
msgid "<a name=\"quick-displaying-the-validation-errors\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 169
# File: docs/master/validation.md, line: 168
#. type: Title ###
#, no-wrap
msgid "Displaying The Validation Errors"
msgstr ""

# File: docs/8.x/validation.md, line: 172
# File: docs/master/validation.md, line: 171
#. type: Plain text
msgid "So, what if the incoming request fields do not pass the given validation rules? As mentioned previously, Laravel will automatically redirect the user back to their previous location. In addition, all of the validation errors and [request input](/docs/{{version}}/requests#retrieving-old-input) will automatically be [flashed to the session](/docs/{{version}}/session#flash-data)."
msgstr ""

# File: docs/8.x/validation.md, line: 174
# File: docs/master/validation.md, line: 173
#. type: Plain text
msgid "An `$errors` variable is shared with all of your application's views by the `Illuminate\\View\\Middleware\\ShareErrorsFromSession` middleware, which is provided by the `web` middleware group. When this middleware is applied an `$errors` variable will always be available in your views, allowing you to conveniently assume the `$errors` variable is always defined and can be safely used. The `$errors` variable will be an instance of `Illuminate\\Support\\MessageBag`. For more information on working with this object, [check out its documentation](#working-with-error-messages)."
msgstr ""

# File: docs/8.x/validation.md, line: 176
# File: docs/master/validation.md, line: 175
#. type: Plain text
msgid "So, in our example, the user will be redirected to our controller's `create` method when validation fails, allowing us to display the error messages in the view:"
msgstr ""

# File: docs/8.x/validation.md, line: 177
# File: docs/8.x/validation.md, line: 212
# File: docs/8.x/validation.md, line: 226
# File: docs/master/validation.md, line: 176
# File: docs/master/validation.md, line: 211
# File: docs/master/validation.md, line: 225
#. type: Code fence info string
#, no-wrap
msgid "html"
msgstr ""

# File: docs/8.x/validation.md, line: 177
# File: docs/master/validation.md, line: 176
#. type: Plain text
#, no-wrap
msgid "<!-- /resources/views/post/create.blade.php -->\n\n"
"<h1>Create Post</h1>\n\n"
"@if ($errors->any())\n"
"    <div class=\"alert alert-danger\">\n"
"        <ul>\n"
"            @foreach ($errors->all() as $error)\n"
"                <li>{{ $error }}</li>\n"
"            @endforeach\n"
"        </ul>\n"
"    </div>\n"
"@endif\n\n"
"<!-- Create Post Form -->\n"
msgstr ""

# File: docs/8.x/validation.md, line: 196
# File: docs/master/validation.md, line: 195
#. type: Plain text
#, no-wrap
msgid "<a name=\"quick-customizing-the-error-messages\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 196
# File: docs/8.x/validation.md, line: 405
# File: docs/8.x/validation.md, line: 544
# File: docs/master/validation.md, line: 195
# File: docs/master/validation.md, line: 404
# File: docs/master/validation.md, line: 543
#. type: Title ###
#, no-wrap
msgid "Customizing The Error Messages"
msgstr ""

# File: docs/8.x/validation.md, line: 199
# File: docs/8.x/validation.md, line: 686
# File: docs/master/validation.md, line: 198
# File: docs/master/validation.md, line: 685
#. type: Plain text
msgid "Laravel's built-in validation rules each has an error message that is located in your application's `resources/lang/en/validation.php` file. Within this file, you will find a translation entry for each validation rule. You are free to change or modify these messages based on the needs of your application."
msgstr ""

# File: docs/8.x/validation.md, line: 201
# File: docs/8.x/validation.md, line: 688
# File: docs/master/validation.md, line: 200
# File: docs/master/validation.md, line: 687
#. type: Plain text
msgid "In addition, you may copy this file to another translation language directory to translate the messages for your application's language. To learn more about Laravel localization, check out the complete [localization documentation](/docs/{{version}}/localization)."
msgstr ""

# File: docs/8.x/validation.md, line: 203
# File: docs/master/validation.md, line: 202
#. type: Plain text
#, no-wrap
msgid "<a name=\"quick-xhr-requests-and-validation\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 203
# File: docs/master/validation.md, line: 202
#. type: Title ####
#, no-wrap
msgid "XHR Requests & Validation"
msgstr ""

# File: docs/8.x/validation.md, line: 206
# File: docs/master/validation.md, line: 205
#. type: Plain text
msgid "In this example, we used a traditional form to send data to the application. However, many applications receive XHR requests from a JavaScript powered frontend. When using the `validate` method during an XHR request, Laravel will not generate a redirect response. Instead, Laravel generates a JSON response containing all of the validation errors. This JSON response will be sent with a 422 HTTP status code."
msgstr ""

# File: docs/8.x/validation.md, line: 208
# File: docs/master/validation.md, line: 207
#. type: Plain text
#, no-wrap
msgid "<a name=\"the-at-error-directive\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 208
# File: docs/master/validation.md, line: 207
#. type: Title ####
#, no-wrap
msgid "The `@error` Directive"
msgstr ""

# File: docs/8.x/validation.md, line: 211
# File: docs/master/validation.md, line: 210
#. type: Plain text
msgid "You may use the `@error` [Blade](/docs/{{version}}/blade) directive to quickly determine if validation error messages exist for a given attribute. Within an `@error` directive, you may echo the `$message` variable to display the error message:"
msgstr ""

# File: docs/8.x/validation.md, line: 212
# File: docs/master/validation.md, line: 211
#. type: Plain text
#, no-wrap
msgid "<!-- /resources/views/post/create.blade.php -->\n\n"
"<label for=\"title\">Post Title</label>\n\n"
"<input id=\"title\" type=\"text\" name=\"title\" class=\"@error('title') is-invalid @enderror\">\n\n"
"@error('title')\n"
"    <div class=\"alert alert-danger\">{{ $message }}</div>\n"
"@enderror\n"
msgstr ""

# File: docs/8.x/validation.md, line: 225
# File: docs/master/validation.md, line: 224
#. type: Plain text
msgid "If you are using [named error bags](#named-error-bags), you may pass the name of the error bag as the second argument to the `@error` directive:"
msgstr ""

# File: docs/8.x/validation.md, line: 226
# File: docs/master/validation.md, line: 225
#. type: Plain text
#, no-wrap
msgid "<input ... class=\"@error('title', 'post') is-invalid @enderror\">\n"
msgstr ""

# File: docs/8.x/validation.md, line: 231
# File: docs/master/validation.md, line: 230
#. type: Plain text
#, no-wrap
msgid "<a name=\"repopulating-forms\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 231
# File: docs/master/validation.md, line: 230
#. type: Title ###
#, no-wrap
msgid "Repopulating Forms"
msgstr ""

# File: docs/8.x/validation.md, line: 234
# File: docs/master/validation.md, line: 233
#. type: Plain text
msgid "When Laravel generates a redirect response due to a validation error, the framework will automatically [flash all of the request's input to the session](/docs/{{version}}/session#flash-data). This is done so that you may conveniently access the input during the next request and repopulate the form that the user attempted to submit."
msgstr ""

# File: docs/8.x/validation.md, line: 236
# File: docs/master/validation.md, line: 235
#. type: Plain text
msgid "To retrieve flashed input from the previous request, invoke the `old` method on an instance of `Illuminate\\Http\\Request`. The `old` method will pull the previously flashed input data from the [session](/docs/{{version}}/session):"
msgstr ""

# File: docs/8.x/validation.md, line: 238
# File: docs/master/validation.md, line: 237
#. type: Plain text
#, no-wrap
msgid "    $title = $request->old('title');\n"
msgstr ""

# File: docs/8.x/validation.md, line: 240
# File: docs/master/validation.md, line: 239
#. type: Plain text
msgid "Laravel also provides a global `old` helper. If you are displaying old input within a [Blade template](/docs/{{version}}/blade), it is more convenient to use the `old` helper to repopulate the form. If no old input exists for the given field, `null` will be returned:"
msgstr ""

# File: docs/8.x/validation.md, line: 242
# File: docs/master/validation.md, line: 241
#. type: Plain text
#, no-wrap
msgid "    <input type=\"text\" name=\"title\" value=\"{{ old('title') }}\">\n"
msgstr ""

# File: docs/8.x/validation.md, line: 244
# File: docs/master/validation.md, line: 243
#. type: Plain text
#, no-wrap
msgid "<a name=\"a-note-on-optional-fields\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 244
# File: docs/master/validation.md, line: 243
#. type: Title ###
#, no-wrap
msgid "A Note On Optional Fields"
msgstr ""

# File: docs/8.x/validation.md, line: 247
# File: docs/master/validation.md, line: 246
#. type: Plain text
msgid "By default, Laravel includes the `TrimStrings` and `ConvertEmptyStringsToNull` middleware in your application's global middleware stack. These middleware are listed in the stack by the `App\\Http\\Kernel` class. Because of this, you will often need to mark your \"optional\" request fields as `nullable` if you do not want the validator to consider `null` values as invalid. For example:"
msgstr ""

# File: docs/8.x/validation.md, line: 253
# File: docs/master/validation.md, line: 252
#. type: Plain text
#, no-wrap
msgid "    $request->validate([\n"
"        'title' => 'required|unique:posts|max:255',\n"
"        'body' => 'required',\n"
"        'publish_at' => 'nullable|date',\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 255
# File: docs/master/validation.md, line: 254
#. type: Plain text
msgid "In this example, we are specifying that the `publish_at` field may be either `null` or a valid date representation. If the `nullable` modifier is not added to the rule definition, the validator would consider `null` an invalid date."
msgstr ""

# File: docs/8.x/validation.md, line: 257
# File: docs/master/validation.md, line: 256
#. type: Plain text
#, no-wrap
msgid "<a name=\"form-request-validation\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 257
# File: docs/master/validation.md, line: 256
#. type: Title ##
#, no-wrap
msgid "Form Request Validation"
msgstr ""

# File: docs/8.x/validation.md, line: 260
# File: docs/master/validation.md, line: 259
#. type: Plain text
#, no-wrap
msgid "<a name=\"creating-form-requests\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 260
# File: docs/master/validation.md, line: 259
#. type: Title ###
#, no-wrap
msgid "Creating Form Requests"
msgstr ""

# File: docs/8.x/validation.md, line: 263
# File: docs/master/validation.md, line: 262
#. type: Plain text
msgid "For more complex validation scenarios, you may wish to create a \"form request\". Form requests are custom request classes that encapsulate their own validation and authorization logic. To create a form request class, you may use the `make:request` Artisan CLI command:"
msgstr ""

# File: docs/8.x/validation.md, line: 265
# File: docs/master/validation.md, line: 264
#. type: Plain text
#, no-wrap
msgid "    php artisan make:request StorePostRequest\n"
msgstr ""

# File: docs/8.x/validation.md, line: 267
# File: docs/master/validation.md, line: 266
#. type: Plain text
msgid "The generated form request class will be placed in the `app/Http/Requests` directory. If this directory does not exist, it will be created when you run the `make:request` command. Each form request generated by Laravel has two methods: `authorize` and `rules`."
msgstr ""

# File: docs/8.x/validation.md, line: 269
# File: docs/master/validation.md, line: 268
#. type: Plain text
msgid "As you might have guessed, the `authorize` method is responsible for determining if the currently authenticated user can perform the action represented by the request, while the `rules` method returns the validation rules that should apply to the request's data:"
msgstr ""

# File: docs/8.x/validation.md, line: 282
# File: docs/master/validation.md, line: 281
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the validation rules that apply to the request.\n"
"     *\n"
"     * @return array\n"
"     */\n"
"    public function rules()\n"
"    {\n"
"        return [\n"
"            'title' => 'required|unique:posts|max:255',\n"
"            'body' => 'required',\n"
"        ];\n"
"    }\n"
msgstr ""

# File: docs/8.x/validation.md, line: 284
# File: docs/master/validation.md, line: 283
#. type: Plain text
#, no-wrap
msgid "> {tip} You may type-hint any dependencies you require within the `rules` method's signature. They will automatically be resolved via the Laravel [service container](/docs/{{version}}/container).\n"
msgstr ""

# File: docs/8.x/validation.md, line: 286
# File: docs/master/validation.md, line: 285
#. type: Plain text
msgid "So, how are the validation rules evaluated? All you need to do is type-hint the request on your controller method. The incoming form request is validated before the controller method is called, meaning you do not need to clutter your controller with any validation logic:"
msgstr ""

# File: docs/8.x/validation.md, line: 296
# File: docs/master/validation.md, line: 295
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Store a new blog post.\n"
"     *\n"
"     * @param  \\App\\Http\\Requests\\StorePostRequest  $request\n"
"     * @return Illuminate\\Http\\Response\n"
"     */\n"
"    public function store(StorePostRequest $request)\n"
"    {\n"
"        // The incoming request is valid...\n"
msgstr ""

# File: docs/8.x/validation.md, line: 299
# File: docs/master/validation.md, line: 298
#. type: Plain text
#, no-wrap
msgid "        // Retrieve the validated input data...\n"
"        $validated = $request->validated();\n"
msgstr ""

# File: docs/8.x/validation.md, line: 304
# File: docs/master/validation.md, line: 303
#. type: Plain text
#, no-wrap
msgid "        // Retrieve a portion of the validated input data...\n"
"        $validated = $request->safe()->only(['name', 'email']);\n"
"        $validated = $request->safe()->except(['name', 'email']);\n"
"    }\n"
msgstr ""

# File: docs/8.x/validation.md, line: 306
# File: docs/master/validation.md, line: 305
#. type: Plain text
msgid "If validation fails, a redirect response will be generated to send the user back to their previous location. The errors will also be flashed to the session so they are available for display. If the request was an XHR request, an HTTP response with a 422 status code will be returned to the user including a JSON representation of the validation errors."
msgstr ""

# File: docs/8.x/validation.md, line: 308
# File: docs/master/validation.md, line: 307
#. type: Plain text
#, no-wrap
msgid "<a name=\"adding-after-hooks-to-form-requests\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 308
# File: docs/master/validation.md, line: 307
#. type: Title ####
#, no-wrap
msgid "Adding After Hooks To Form Requests"
msgstr ""

# File: docs/8.x/validation.md, line: 311
# File: docs/master/validation.md, line: 310
#. type: Plain text
msgid "If you would like to add an \"after\" validation hook to a form request, you may use the `withValidator` method. This method receives the fully constructed validator, allowing you to call any of its methods before the validation rules are actually evaluated:"
msgstr ""

# File: docs/8.x/validation.md, line: 326
# File: docs/master/validation.md, line: 325
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Configure the validator instance.\n"
"     *\n"
"     * @param  \\Illuminate\\Validation\\Validator  $validator\n"
"     * @return void\n"
"     */\n"
"    public function withValidator($validator)\n"
"    {\n"
"        $validator->after(function ($validator) {\n"
"            if ($this->somethingElseIsInvalid()) {\n"
"                $validator->errors()->add('field', 'Something is wrong with this field!');\n"
"            }\n"
"        });\n"
"    }\n"
msgstr ""

# File: docs/8.x/validation.md, line: 329
# File: docs/master/validation.md, line: 328
#. type: Plain text
#, no-wrap
msgid "<a name=\"request-stopping-on-first-validation-rule-failure\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 329
# File: docs/master/validation.md, line: 328
#. type: Title ####
#, no-wrap
msgid "Stopping On First Validation Failure Attribute"
msgstr ""

# File: docs/8.x/validation.md, line: 332
# File: docs/master/validation.md, line: 331
#. type: Plain text
msgid "By adding a `stopOnFirstFailure` property to your request class, you may inform the validator that it should stop validating all attributes once a single validation failure has occurred:"
msgstr ""

# File: docs/8.x/validation.md, line: 339
# File: docs/master/validation.md, line: 338
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Indicates if the validator should stop on the first rule failure.\n"
"     *\n"
"     * @var bool\n"
"     */\n"
"    protected $stopOnFirstFailure = true;\n"
msgstr ""

# File: docs/8.x/validation.md, line: 341
# File: docs/master/validation.md, line: 340
#. type: Plain text
#, no-wrap
msgid "<a name=\"customizing-the-redirect-location\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 341
# File: docs/master/validation.md, line: 340
#. type: Title ####
#, no-wrap
msgid "Customizing The Redirect Location"
msgstr ""

# File: docs/8.x/validation.md, line: 344
# File: docs/master/validation.md, line: 343
#. type: Plain text
msgid "As previously discussed, a redirect response will be generated to send the user back to their previous location when form request validation fails. However, you are free to customize this behavior. To do so, define a `$redirect` property on your form request:"
msgstr ""

# File: docs/8.x/validation.md, line: 351
# File: docs/master/validation.md, line: 350
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * The URI that users should be redirected to if validation fails.\n"
"     *\n"
"     * @var string\n"
"     */\n"
"    protected $redirect = '/dashboard';\n"
msgstr ""

# File: docs/8.x/validation.md, line: 353
# File: docs/master/validation.md, line: 352
#. type: Plain text
msgid "Or, if you would like to redirect users to a named route, you may define a `$redirectRoute` property instead:"
msgstr ""

# File: docs/8.x/validation.md, line: 360
# File: docs/master/validation.md, line: 359
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * The route that users should be redirected to if validation fails.\n"
"     *\n"
"     * @var string\n"
"     */\n"
"    protected $redirectRoute = 'dashboard';\n"
msgstr ""

# File: docs/8.x/validation.md, line: 362
# File: docs/master/validation.md, line: 361
#. type: Plain text
#, no-wrap
msgid "<a name=\"authorizing-form-requests\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 362
# File: docs/master/validation.md, line: 361
#. type: Title ###
#, no-wrap
msgid "Authorizing Form Requests"
msgstr ""

# File: docs/8.x/validation.md, line: 365
# File: docs/master/validation.md, line: 364
#. type: Plain text
msgid "The form request class also contains an `authorize` method. Within this method, you may determine if the authenticated user actually has the authority to update a given resource. For example, you may determine if a user actually owns a blog comment they are attempting to update. Most likely, you will interact with your [authorization gates and policies](/docs/{{version}}/authorization) within this method:"
msgstr ""

# File: docs/8.x/validation.md, line: 367
# File: docs/master/validation.md, line: 366
#. type: Plain text
#, no-wrap
msgid "    use App\\Models\\Comment;\n"
msgstr ""

# File: docs/8.x/validation.md, line: 376
# File: docs/master/validation.md, line: 375
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Determine if the user is authorized to make this request.\n"
"     *\n"
"     * @return bool\n"
"     */\n"
"    public function authorize()\n"
"    {\n"
"        $comment = Comment::find($this->route('comment'));\n"
msgstr ""

# File: docs/8.x/validation.md, line: 379
# File: docs/master/validation.md, line: 378
#. type: Plain text
#, no-wrap
msgid "        return $comment && $this->user()->can('update', $comment);\n"
"    }\n"
msgstr ""

# File: docs/8.x/validation.md, line: 381
# File: docs/master/validation.md, line: 380
#. type: Plain text
msgid "Since all form requests extend the base Laravel request class, we may use the `user` method to access the currently authenticated user. Also, note the call to the `route` method in the example above. This method grants you access to the URI parameters defined on the route being called, such as the `{comment}` parameter in the example below:"
msgstr ""

# File: docs/8.x/validation.md, line: 383
# File: docs/master/validation.md, line: 382
#. type: Plain text
#, no-wrap
msgid "    Route::post('/comment/{comment}');\n"
msgstr ""

# File: docs/8.x/validation.md, line: 385
# File: docs/master/validation.md, line: 384
#. type: Plain text
msgid "Therefore, if your application is taking advantage of [route model binding](/docs/{{version}}/routing#route-model-binding), your code may be made even more succinct by accessing the resolved model as a property of the request:"
msgstr ""

# File: docs/8.x/validation.md, line: 387
# File: docs/master/validation.md, line: 386
#. type: Plain text
#, no-wrap
msgid "    return $this->user()->can('update', $this->comment);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 389
# File: docs/master/validation.md, line: 388
#. type: Plain text
msgid "If the `authorize` method returns `false`, an HTTP response with a 403 status code will automatically be returned and your controller method will not execute."
msgstr ""

# File: docs/8.x/validation.md, line: 391
# File: docs/master/validation.md, line: 390
#. type: Plain text
msgid "If you plan to handle authorization logic for the request in another part of your application, you may simply return `true` from the `authorize` method:"
msgstr ""

# File: docs/8.x/validation.md, line: 401
# File: docs/master/validation.md, line: 400
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Determine if the user is authorized to make this request.\n"
"     *\n"
"     * @return bool\n"
"     */\n"
"    public function authorize()\n"
"    {\n"
"        return true;\n"
"    }\n"
msgstr ""

# File: docs/8.x/validation.md, line: 403
# File: docs/master/validation.md, line: 402
#. type: Plain text
#, no-wrap
msgid "> {tip} You may type-hint any dependencies you need within the `authorize` method's signature. They will automatically be resolved via the Laravel [service container](/docs/{{version}}/container).\n"
msgstr ""

# File: docs/8.x/validation.md, line: 405
# File: docs/master/validation.md, line: 404
#. type: Plain text
#, no-wrap
msgid "<a name=\"customizing-the-error-messages\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 408
# File: docs/master/validation.md, line: 407
#. type: Plain text
msgid "You may customize the error messages used by the form request by overriding the `messages` method. This method should return an array of attribute / rule pairs and their corresponding error messages:"
msgstr ""

# File: docs/8.x/validation.md, line: 421
# File: docs/master/validation.md, line: 420
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the error messages for the defined validation rules.\n"
"     *\n"
"     * @return array\n"
"     */\n"
"    public function messages()\n"
"    {\n"
"        return [\n"
"            'title.required' => 'A title is required',\n"
"            'body.required' => 'A message is required',\n"
"        ];\n"
"    }\n"
msgstr ""

# File: docs/8.x/validation.md, line: 423
# File: docs/master/validation.md, line: 422
#. type: Plain text
#, no-wrap
msgid "<a name=\"customizing-the-validation-attributes\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 423
# File: docs/master/validation.md, line: 422
#. type: Title ####
#, no-wrap
msgid "Customizing The Validation Attributes"
msgstr ""

# File: docs/8.x/validation.md, line: 426
# File: docs/master/validation.md, line: 425
#. type: Plain text
msgid "Many of Laravel's built-in validation rule error messages contain an `:attribute` placeholder. If you would like the `:attribute` placeholder of your validation message to be replaced with a custom attribute name, you may specify the custom names by overriding the `attributes` method. This method should return an array of attribute / name pairs:"
msgstr ""

# File: docs/8.x/validation.md, line: 438
# File: docs/master/validation.md, line: 437
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get custom attributes for validator errors.\n"
"     *\n"
"     * @return array\n"
"     */\n"
"    public function attributes()\n"
"    {\n"
"        return [\n"
"            'email' => 'email address',\n"
"        ];\n"
"    }\n"
msgstr ""

# File: docs/8.x/validation.md, line: 440
# File: docs/master/validation.md, line: 439
#. type: Plain text
#, no-wrap
msgid "<a name=\"preparing-input-for-validation\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 440
# File: docs/master/validation.md, line: 439
#. type: Title ###
#, no-wrap
msgid "Preparing Input For Validation"
msgstr ""

# File: docs/8.x/validation.md, line: 443
# File: docs/master/validation.md, line: 442
#. type: Plain text
msgid "If you need to prepare or sanitize any data from the request before you apply your validation rules, you may use the `prepareForValidation` method:"
msgstr ""

# File: docs/8.x/validation.md, line: 445
# File: docs/master/validation.md, line: 444
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Support\\Str;\n"
msgstr ""

# File: docs/8.x/validation.md, line: 457
# File: docs/master/validation.md, line: 456
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Prepare the data for validation.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    protected function prepareForValidation()\n"
"    {\n"
"        $this->merge([\n"
"            'slug' => Str::slug($this->slug),\n"
"        ]);\n"
"    }\n"
msgstr ""

# File: docs/8.x/validation.md, line: 459
# File: docs/master/validation.md, line: 458
#. type: Plain text
#, no-wrap
msgid "<a name=\"manually-creating-validators\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 459
# File: docs/master/validation.md, line: 458
#. type: Title ##
#, no-wrap
msgid "Manually Creating Validators"
msgstr ""

# File: docs/8.x/validation.md, line: 462
# File: docs/master/validation.md, line: 461
#. type: Plain text
msgid "If you do not want to use the `validate` method on the request, you may create a validator instance manually using the `Validator` [facade](/docs/{{version}}/facades). The `make` method on the facade generates a new validator instance:"
msgstr ""

# File: docs/8.x/validation.md, line: 470
# File: docs/master/validation.md, line: 469
#. type: Plain text
#, no-wrap
msgid "    use App\\Http\\Controllers\\Controller;\n"
"    use Illuminate\\Http\\Request;\n"
"    use Illuminate\\Support\\Facades\\Validator;\n"
msgstr ""

# File: docs/8.x/validation.md, line: 485
# File: docs/master/validation.md, line: 484
#. type: Plain text
#, no-wrap
msgid "    class PostController extends Controller\n"
"    {\n"
"        /**\n"
"         * Store a new blog post.\n"
"         *\n"
"         * @param  Request  $request\n"
"         * @return Response\n"
"         */\n"
"        public function store(Request $request)\n"
"        {\n"
"            $validator = Validator::make($request->all(), [\n"
"                'title' => 'required|unique:posts|max:255',\n"
"                'body' => 'required',\n"
"            ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 491
# File: docs/master/validation.md, line: 490
#. type: Plain text
#, no-wrap
msgid "            if ($validator->fails()) {\n"
"                return redirect('post/create')\n"
"                            ->withErrors($validator)\n"
"                            ->withInput();\n"
"            }\n"
msgstr ""

# File: docs/8.x/validation.md, line: 494
# File: docs/master/validation.md, line: 493
#. type: Plain text
#, no-wrap
msgid "            // Retrieve the validated input...\n"
"            $validated = $validator->validated();\n"
msgstr ""

# File: docs/8.x/validation.md, line: 498
# File: docs/master/validation.md, line: 497
#. type: Plain text
#, no-wrap
msgid "            // Retrieve a portion of the validated input...\n"
"            $validated = $validator->safe()->only(['name', 'email']);\n"
"            $validated = $validator->safe()->except(['name', 'email']);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 502
# File: docs/master/validation.md, line: 501
#. type: Plain text
#, no-wrap
msgid "            // Store the blog post...\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/validation.md, line: 504
# File: docs/master/validation.md, line: 503
#. type: Plain text
msgid "The first argument passed to the `make` method is the data under validation. The second argument is an array of the validation rules that should be applied to the data."
msgstr ""

# File: docs/8.x/validation.md, line: 506
# File: docs/master/validation.md, line: 505
#. type: Plain text
msgid "After determining whether the request validation failed, you may use the `withErrors` method to flash the error messages to the session. When using this method, the `$errors` variable will automatically be shared with your views after redirection, allowing you to easily display them back to the user. The `withErrors` method accepts a validator, a `MessageBag`, or a PHP `array`."
msgstr ""

# File: docs/8.x/validation.md, line: 510
# File: docs/master/validation.md, line: 509
#. type: Plain text
msgid "The `stopOnFirstFailure` method will inform the validator that it should stop validating all attributes once a single validation failure has occurred:"
msgstr ""

# File: docs/8.x/validation.md, line: 514
# File: docs/8.x/validation.md, line: 930
# File: docs/master/validation.md, line: 513
# File: docs/master/validation.md, line: 913
#. type: Plain text
#, no-wrap
msgid "    if ($validator->stopOnFirstFailure()->fails()) {\n"
"        // ...\n"
"    }\n"
msgstr ""

# File: docs/8.x/validation.md, line: 516
# File: docs/master/validation.md, line: 515
#. type: Plain text
#, no-wrap
msgid "<a name=\"automatic-redirection\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 516
# File: docs/master/validation.md, line: 515
#. type: Title ###
#, no-wrap
msgid "Automatic Redirection"
msgstr ""

# File: docs/8.x/validation.md, line: 519
# File: docs/master/validation.md, line: 518
#. type: Plain text
msgid "If you would like to create a validator instance manually but still take advantage of the automatic redirection offered by the HTTP request's `validate` method, you may call the `validate` method on an existing validator instance. If validation fails, the user will automatically be redirected or, in the case of an XHR request, a JSON response will be returned:"
msgstr ""

# File: docs/8.x/validation.md, line: 524
# File: docs/master/validation.md, line: 523
#. type: Plain text
#, no-wrap
msgid "    Validator::make($request->all(), [\n"
"        'title' => 'required|unique:posts|max:255',\n"
"        'body' => 'required',\n"
"    ])->validate();\n"
msgstr ""

# File: docs/8.x/validation.md, line: 526
# File: docs/master/validation.md, line: 525
#. type: Plain text
msgid "You may use the `validateWithBag` method to store the error messages in a [named error bag](#named-error-bags) if validation fails:"
msgstr ""

# File: docs/8.x/validation.md, line: 531
# File: docs/master/validation.md, line: 530
#. type: Plain text
#, no-wrap
msgid "    Validator::make($request->all(), [\n"
"        'title' => 'required|unique:posts|max:255',\n"
"        'body' => 'required',\n"
"    ])->validateWithBag('post');\n"
msgstr ""

# File: docs/8.x/validation.md, line: 533
# File: docs/master/validation.md, line: 532
#. type: Plain text
#, no-wrap
msgid "<a name=\"named-error-bags\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 533
# File: docs/master/validation.md, line: 532
#. type: Title ###
#, no-wrap
msgid "Named Error Bags"
msgstr ""

# File: docs/8.x/validation.md, line: 536
# File: docs/master/validation.md, line: 535
#. type: Plain text
msgid "If you have multiple forms on a single page, you may wish to name the `MessageBag` containing the validation errors, allowing you to retrieve the error messages for a specific form. To achieve this, pass a name as the second argument to `withErrors`:"
msgstr ""

# File: docs/8.x/validation.md, line: 538
# File: docs/master/validation.md, line: 537
#. type: Plain text
#, no-wrap
msgid "    return redirect('register')->withErrors($validator, 'login');\n"
msgstr ""

# File: docs/8.x/validation.md, line: 540
# File: docs/master/validation.md, line: 539
#. type: Plain text
msgid "You may then access the named `MessageBag` instance from the `$errors` variable:"
msgstr ""

# File: docs/8.x/validation.md, line: 542
# File: docs/master/validation.md, line: 541
#. type: Plain text
#, no-wrap
msgid "    {{ $errors->login->first('email') }}\n"
msgstr ""

# File: docs/8.x/validation.md, line: 544
# File: docs/master/validation.md, line: 543
#. type: Plain text
#, no-wrap
msgid "<a name=\"manual-customizing-the-error-messages\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 547
# File: docs/master/validation.md, line: 546
#. type: Plain text
msgid "If needed, you may provide custom error messages that a validator instance should use instead of the default error messages provided by Laravel. There are several ways to specify custom messages. First, you may pass the custom messages as the third argument to the `Validator::make` method:"
msgstr ""

# File: docs/8.x/validation.md, line: 551
# File: docs/master/validation.md, line: 550
#. type: Plain text
#, no-wrap
msgid "    $validator = Validator::make($input, $rules, $messages = [\n"
"        'required' => 'The :attribute field is required.',\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 553
# File: docs/master/validation.md, line: 552
#. type: Plain text
msgid "In this example, the `:attribute` placeholder will be replaced by the actual name of the field under validation. You may also utilize other placeholders in validation messages. For example:"
msgstr ""

# File: docs/8.x/validation.md, line: 560
# File: docs/master/validation.md, line: 559
#. type: Plain text
#, no-wrap
msgid "    $messages = [\n"
"        'same' => 'The :attribute and :other must match.',\n"
"        'size' => 'The :attribute must be exactly :size.',\n"
"        'between' => 'The :attribute value :input is not between :min - :max.',\n"
"        'in' => 'The :attribute must be one of the following types: :values',\n"
"    ];\n"
msgstr ""

# File: docs/8.x/validation.md, line: 562
# File: docs/master/validation.md, line: 561
#. type: Plain text
#, no-wrap
msgid "<a name=\"specifying-a-custom-message-for-a-given-attribute\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 562
# File: docs/master/validation.md, line: 561
#. type: Title ####
#, no-wrap
msgid "Specifying A Custom Message For A Given Attribute"
msgstr ""

# File: docs/8.x/validation.md, line: 565
# File: docs/master/validation.md, line: 564
#. type: Plain text
msgid "Sometimes you may wish to specify a custom error message only for a specific attribute. You may do so using \"dot\" notation. Specify the attribute's name first, followed by the rule:"
msgstr ""

# File: docs/8.x/validation.md, line: 569
# File: docs/master/validation.md, line: 568
#. type: Plain text
#, no-wrap
msgid "    $messages = [\n"
"        'email.required' => 'We need to know your email address!',\n"
"    ];\n"
msgstr ""

# File: docs/8.x/validation.md, line: 571
# File: docs/master/validation.md, line: 570
#. type: Plain text
#, no-wrap
msgid "<a name=\"specifying-custom-attribute-values\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 571
# File: docs/master/validation.md, line: 570
#. type: Title ####
#, no-wrap
msgid "Specifying Custom Attribute Values"
msgstr ""

# File: docs/8.x/validation.md, line: 574
# File: docs/master/validation.md, line: 573
#. type: Plain text
msgid "Many of Laravel's built-in error messages include an `:attribute` placeholder that is replaced with the name of the field or attribute under validation. To customize the values used to replace these placeholders for specific fields, you may pass an array of custom attributes as the fourth argument to the `Validator::make` method:"
msgstr ""

# File: docs/8.x/validation.md, line: 578
# File: docs/master/validation.md, line: 577
#. type: Plain text
#, no-wrap
msgid "    $validator = Validator::make($input, $rules, $messages, [\n"
"        'email' => 'email address',\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 580
# File: docs/master/validation.md, line: 579
#. type: Plain text
#, no-wrap
msgid "<a name=\"after-validation-hook\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 580
# File: docs/master/validation.md, line: 579
#. type: Title ###
#, no-wrap
msgid "After Validation Hook"
msgstr ""

# File: docs/8.x/validation.md, line: 583
# File: docs/master/validation.md, line: 582
#. type: Plain text
msgid "You may also attach callbacks to be run after validation is completed. This allows you to easily perform further validation and even add more error messages to the message collection. To get started, call the `after` method on a validator instance:"
msgstr ""

# File: docs/8.x/validation.md, line: 585
# File: docs/master/validation.md, line: 584
#. type: Plain text
#, no-wrap
msgid "    $validator = Validator::make(...);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 593
# File: docs/master/validation.md, line: 592
#. type: Plain text
#, no-wrap
msgid "    $validator->after(function ($validator) {\n"
"        if ($this->somethingElseIsInvalid()) {\n"
"            $validator->errors()->add(\n"
"                'field', 'Something is wrong with this field!'\n"
"            );\n"
"        }\n"
"    });\n"
msgstr ""

# File: docs/8.x/validation.md, line: 597
# File: docs/master/validation.md, line: 596
#. type: Plain text
#, no-wrap
msgid "    if ($validator->fails()) {\n"
"        //\n"
"    }\n"
msgstr ""

# File: docs/8.x/validation.md, line: 599
# File: docs/master/validation.md, line: 598
#. type: Plain text
#, no-wrap
msgid "<a name=\"working-with-validated-input\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 599
# File: docs/master/validation.md, line: 598
#. type: Title ##
#, no-wrap
msgid "Working With Validated Input"
msgstr ""

# File: docs/8.x/validation.md, line: 602
# File: docs/master/validation.md, line: 601
#. type: Plain text
msgid "After validating incoming request data using a form request or a manually created validator instance, you may wish to retrieve the incoming request data that actually underwent validation. This can be accomplished in several ways. First, you may call the `validated` method on a form request or validator instance. This method returns an array of the data that was validated:"
msgstr ""

# File: docs/8.x/validation.md, line: 604
# File: docs/master/validation.md, line: 603
#. type: Plain text
#, no-wrap
msgid "    $validated = $request->validated();\n"
msgstr ""

# File: docs/8.x/validation.md, line: 606
# File: docs/master/validation.md, line: 605
#. type: Plain text
#, no-wrap
msgid "    $validated = $validator->validated();\n"
msgstr ""

# File: docs/8.x/validation.md, line: 608
# File: docs/master/validation.md, line: 607
#. type: Plain text
msgid "Alternatively, you may call the `safe` method on a form request or validator instance. This method returns an instance of `Illuminate\\Support\\ValidatedInput`. This object exposes `only`, `except`, and `all` methods to retrieve a subset of the validated data or the entire array of validated data:"
msgstr ""

# File: docs/8.x/validation.md, line: 610
# File: docs/master/validation.md, line: 609
#. type: Plain text
#, no-wrap
msgid "    $validated = $request->safe()->only(['name', 'email']);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 612
# File: docs/master/validation.md, line: 611
#. type: Plain text
#, no-wrap
msgid "    $validated = $request->safe()->except(['name', 'email']);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 614
# File: docs/master/validation.md, line: 613
#. type: Plain text
#, no-wrap
msgid "    $validated = $request->safe()->all();\n"
msgstr ""

# File: docs/8.x/validation.md, line: 616
# File: docs/master/validation.md, line: 615
#. type: Plain text
msgid "In addition, the `Illuminate\\Support\\ValidatedInput` instance may be iterated over and accessed like an array:"
msgstr ""

# File: docs/8.x/validation.md, line: 621
# File: docs/master/validation.md, line: 620
#. type: Plain text
#, no-wrap
msgid "    // Validated data may be iterated...\n"
"    foreach ($request->safe() as $key => $value) {\n"
"        //\n"
"    }\n"
msgstr ""

# File: docs/8.x/validation.md, line: 624
# File: docs/master/validation.md, line: 623
#. type: Plain text
#, no-wrap
msgid "    // Validated data may be accessed as an array...\n"
"    $validated = $request->safe();\n"
msgstr ""

# File: docs/8.x/validation.md, line: 626
# File: docs/master/validation.md, line: 625
#. type: Plain text
#, no-wrap
msgid "    $email = $validated['email'];\n"
msgstr ""

# File: docs/8.x/validation.md, line: 628
# File: docs/master/validation.md, line: 627
#. type: Plain text
msgid "If you would like to add additional fields to the validated data, you may call the `merge` method:"
msgstr ""

# File: docs/8.x/validation.md, line: 630
# File: docs/master/validation.md, line: 629
#. type: Plain text
#, no-wrap
msgid "    $validated = $request->safe()->merge(['name' => 'Taylor Otwell']);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 632
# File: docs/master/validation.md, line: 631
#. type: Plain text
msgid "If you would like to retrieve the validated data as a [collection](/docs/{{version}}/collections) instance, you may call the `collect` method:"
msgstr ""

# File: docs/8.x/validation.md, line: 634
# File: docs/master/validation.md, line: 633
#. type: Plain text
#, no-wrap
msgid "    $collection = $request->safe()->collect();\n"
msgstr ""

# File: docs/8.x/validation.md, line: 636
# File: docs/master/validation.md, line: 635
#. type: Plain text
#, no-wrap
msgid "<a name=\"working-with-error-messages\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 636
# File: docs/master/validation.md, line: 635
#. type: Title ##
#, no-wrap
msgid "Working With Error Messages"
msgstr ""

# File: docs/8.x/validation.md, line: 639
# File: docs/master/validation.md, line: 638
#. type: Plain text
msgid "After calling the `errors` method on a `Validator` instance, you will receive an `Illuminate\\Support\\MessageBag` instance, which has a variety of convenient methods for working with error messages. The `$errors` variable that is automatically made available to all views is also an instance of the `MessageBag` class."
msgstr ""

# File: docs/8.x/validation.md, line: 641
# File: docs/master/validation.md, line: 640
#. type: Plain text
#, no-wrap
msgid "<a name=\"retrieving-the-first-error-message-for-a-field\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 641
# File: docs/master/validation.md, line: 640
#. type: Title ####
#, no-wrap
msgid "Retrieving The First Error Message For A Field"
msgstr ""

# File: docs/8.x/validation.md, line: 644
# File: docs/master/validation.md, line: 643
#. type: Plain text
msgid "To retrieve the first error message for a given field, use the `first` method:"
msgstr ""

# File: docs/8.x/validation.md, line: 646
# File: docs/master/validation.md, line: 645
#. type: Plain text
#, no-wrap
msgid "    $errors = $validator->errors();\n"
msgstr ""

# File: docs/8.x/validation.md, line: 648
# File: docs/master/validation.md, line: 647
#. type: Plain text
#, no-wrap
msgid "    echo $errors->first('email');\n"
msgstr ""

# File: docs/8.x/validation.md, line: 650
# File: docs/master/validation.md, line: 649
#. type: Plain text
#, no-wrap
msgid "<a name=\"retrieving-all-error-messages-for-a-field\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 650
# File: docs/master/validation.md, line: 649
#. type: Title ####
#, no-wrap
msgid "Retrieving All Error Messages For A Field"
msgstr ""

# File: docs/8.x/validation.md, line: 653
# File: docs/master/validation.md, line: 652
#. type: Plain text
msgid "If you need to retrieve an array of all the messages for a given field, use the `get` method:"
msgstr ""

# File: docs/8.x/validation.md, line: 657
# File: docs/master/validation.md, line: 656
#. type: Plain text
#, no-wrap
msgid "    foreach ($errors->get('email') as $message) {\n"
"        //\n"
"    }\n"
msgstr ""

# File: docs/8.x/validation.md, line: 659
# File: docs/master/validation.md, line: 658
#. type: Plain text
msgid "If you are validating an array form field, you may retrieve all of the messages for each of the array elements using the `*` character:"
msgstr ""

# File: docs/8.x/validation.md, line: 663
# File: docs/master/validation.md, line: 662
#. type: Plain text
#, no-wrap
msgid "    foreach ($errors->get('attachments.*') as $message) {\n"
"        //\n"
"    }\n"
msgstr ""

# File: docs/8.x/validation.md, line: 665
# File: docs/master/validation.md, line: 664
#. type: Plain text
#, no-wrap
msgid "<a name=\"retrieving-all-error-messages-for-all-fields\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 665
# File: docs/master/validation.md, line: 664
#. type: Title ####
#, no-wrap
msgid "Retrieving All Error Messages For All Fields"
msgstr ""

# File: docs/8.x/validation.md, line: 668
# File: docs/master/validation.md, line: 667
#. type: Plain text
msgid "To retrieve an array of all messages for all fields, use the `all` method:"
msgstr ""

# File: docs/8.x/validation.md, line: 672
# File: docs/master/validation.md, line: 671
#. type: Plain text
#, no-wrap
msgid "    foreach ($errors->all() as $message) {\n"
"        //\n"
"    }\n"
msgstr ""

# File: docs/8.x/validation.md, line: 674
# File: docs/master/validation.md, line: 673
#. type: Plain text
#, no-wrap
msgid "<a name=\"determining-if-messages-exist-for-a-field\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 674
# File: docs/master/validation.md, line: 673
#. type: Title ####
#, no-wrap
msgid "Determining If Messages Exist For A Field"
msgstr ""

# File: docs/8.x/validation.md, line: 677
# File: docs/master/validation.md, line: 676
#. type: Plain text
msgid "The `has` method may be used to determine if any error messages exist for a given field:"
msgstr ""

# File: docs/8.x/validation.md, line: 681
# File: docs/master/validation.md, line: 680
#. type: Plain text
#, no-wrap
msgid "    if ($errors->has('email')) {\n"
"        //\n"
"    }\n"
msgstr ""

# File: docs/8.x/validation.md, line: 683
# File: docs/master/validation.md, line: 682
#. type: Plain text
#, no-wrap
msgid "<a name=\"specifying-custom-messages-in-language-files\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 683
# File: docs/master/validation.md, line: 682
#. type: Title ###
#, no-wrap
msgid "Specifying Custom Messages In Language Files"
msgstr ""

# File: docs/8.x/validation.md, line: 690
# File: docs/master/validation.md, line: 689
#. type: Plain text
#, no-wrap
msgid "<a name=\"custom-messages-for-specific-attributes\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 690
# File: docs/master/validation.md, line: 689
#. type: Title ####
#, no-wrap
msgid "Custom Messages For Specific Attributes"
msgstr ""

# File: docs/8.x/validation.md, line: 693
# File: docs/master/validation.md, line: 692
#. type: Plain text
msgid "You may customize the error messages used for specified attribute and rule combinations within your application's validation language files. To do so, add your message customizations to the `custom` array of your application's `resources/lang/xx/validation.php` language file:"
msgstr ""

# File: docs/8.x/validation.md, line: 700
# File: docs/master/validation.md, line: 699
#. type: Plain text
#, no-wrap
msgid "    'custom' => [\n"
"        'email' => [\n"
"            'required' => 'We need to know your email address!',\n"
"            'max' => 'Your email address is too long!'\n"
"        ],\n"
"    ],\n"
msgstr ""

# File: docs/8.x/validation.md, line: 702
# File: docs/master/validation.md, line: 701
#. type: Plain text
#, no-wrap
msgid "<a name=\"specifying-attribute-in-language-files\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 702
# File: docs/master/validation.md, line: 701
#. type: Title ###
#, no-wrap
msgid "Specifying Attributes In Language Files"
msgstr ""

# File: docs/8.x/validation.md, line: 705
# File: docs/master/validation.md, line: 704
#. type: Plain text
msgid "Many of Laravel's built-in error messages include an `:attribute` placeholder that is replaced with the name of the field or attribute under validation. If you would like the `:attribute` portion of your validation message to be replaced with a custom value, you may specify the custom attribute name in the `attributes` array of your `resources/lang/xx/validation.php` language file:"
msgstr ""

# File: docs/8.x/validation.md, line: 709
# File: docs/master/validation.md, line: 708
#. type: Plain text
#, no-wrap
msgid "    'attributes' => [\n"
"        'email' => 'email address',\n"
"    ],\n"
msgstr ""

# File: docs/8.x/validation.md, line: 711
# File: docs/master/validation.md, line: 710
#. type: Plain text
#, no-wrap
msgid "<a name=\"specifying-values-in-language-files\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 711
# File: docs/master/validation.md, line: 710
#. type: Title ###
#, no-wrap
msgid "Specifying Values In Language Files"
msgstr ""

# File: docs/8.x/validation.md, line: 714
# File: docs/master/validation.md, line: 713
#. type: Plain text
msgid "Some of Laravel's built-in validation rule error messages contain a `:value` placeholder that is replaced with the current value of the request attribute. However, you may occasionally need the `:value` portion of your validation message to be replaced with a custom representation of the value. For example, consider the following rule that specifies that a credit card number is required if the `payment_type` has a value of `cc`:"
msgstr ""

# File: docs/8.x/validation.md, line: 718
# File: docs/master/validation.md, line: 717
#. type: Plain text
#, no-wrap
msgid "    Validator::make($request->all(), [\n"
"        'credit_card_number' => 'required_if:payment_type,cc'\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 720
# File: docs/master/validation.md, line: 719
#. type: Plain text
msgid "If this validation rule fails, it will produce the following error message:"
msgstr ""

# File: docs/8.x/validation.md, line: 722
# File: docs/master/validation.md, line: 721
#. type: Plain text
#, no-wrap
msgid "    The credit card number field is required when payment type is cc.\n"
msgstr ""

# File: docs/8.x/validation.md, line: 724
# File: docs/master/validation.md, line: 723
#. type: Plain text
msgid "Instead of displaying `cc` as the payment type value, you may specify a more user-friendly value representation in your `resources/lang/xx/validation.php` language file by defining a `values` array:"
msgstr ""

# File: docs/8.x/validation.md, line: 730
# File: docs/master/validation.md, line: 729
#. type: Plain text
#, no-wrap
msgid "    'values' => [\n"
"        'payment_type' => [\n"
"            'cc' => 'credit card'\n"
"        ],\n"
"    ],\n"
msgstr ""

# File: docs/8.x/validation.md, line: 732
# File: docs/master/validation.md, line: 731
#. type: Plain text
msgid "After defining this value, the validation rule will produce the following error message:"
msgstr ""

# File: docs/8.x/validation.md, line: 734
# File: docs/master/validation.md, line: 733
#. type: Plain text
#, no-wrap
msgid "    The credit card number field is required when payment type is credit card.\n"
msgstr ""

# File: docs/8.x/validation.md, line: 736
# File: docs/master/validation.md, line: 735
#. type: Plain text
#, no-wrap
msgid "<a name=\"available-validation-rules\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 736
# File: docs/master/validation.md, line: 735
#. type: Title ##
#, no-wrap
msgid "Available Validation Rules"
msgstr ""

# File: docs/8.x/validation.md, line: 739
# File: docs/master/validation.md, line: 738
#. type: Plain text
msgid "Below is a list of all available validation rules and their function:"
msgstr ""

# File: docs/8.x/validation.md, line: 745
# File: docs/master/validation.md, line: 744
#. type: Plain text
#, no-wrap
msgid "<style>\n"
"    .collection-method-list > p {\n"
"        column-count: 3; -moz-column-count: 3; -webkit-column-count: 3;\n"
"        column-gap: 2em; -moz-column-gap: 2em; -webkit-column-gap: 2em;\n"
"    }\n"
msgstr ""

# File: docs/8.x/validation.md, line: 750
# File: docs/master/validation.md, line: 749
#. type: Plain text
#, no-wrap
msgid "    .collection-method-list a {\n"
"        display: block;\n"
"    }\n"
"</style>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 752
# File: docs/master/validation.md, line: 751
#. type: Plain text
#, no-wrap
msgid "<div class=\"collection-method-list\" markdown=\"1\">\n"
msgstr ""

# File: docs/8.x/validation.md, line: 832
# File: docs/master/validation.md, line: 831
#. type: Plain text
msgid "[Accepted](#rule-accepted)  [Accepted If](#rule-accepted-if)  [Active URL](#rule-active-url)  [After (Date)](#rule-after)  [After Or Equal (Date)](#rule-after-or-equal)  [Alpha](#rule-alpha)  [Alpha Dash](#rule-alpha-dash)  [Alpha Numeric](#rule-alpha-num)  [Array](#rule-array)  [Bail](#rule-bail)  [Before (Date)](#rule-before)  [Before Or Equal (Date)](#rule-before-or-equal)  [Between](#rule-between)  [Boolean](#rule-boolean)  [Confirmed](#rule-confirmed)  [Current Password](#rule-current-password)  [Date](#rule-date)  [Date Equals](#rule-date-equals)  [Date Format](#rule-date-format)  [Declined](#rule-declined)  [Declined If](#rule-declined-if)  [Different](#rule-different)  [Digits](#rule-digits)  [Digits Between](#rule-digits-between)  [Dimensions (Image Files)](#rule-dimensions)  [Distinct](#rule-distinct)  [Email](#rule-email)  [Ends With](#rule-ends-with)  [Enum](#rule-enum)  [Exclude](#rule-exclude)  [Exclude If](#rule-exclude-if)  [Exclude Unless](#rule-exclude-unless)  [Exclude Without](#rule-exclude-without)  [Exists (Database)](#rule-exists)  [File](#rule-file)  [Filled](#rule-filled)  [Greater Than](#rule-gt)  [Greater Than Or Equal](#rule-gte)  [Image (File)](#rule-image)  [In](#rule-in)  [In Array](#rule-in-array)  [Integer](#rule-integer)  [IP Address](#rule-ip)  [MAC Address](#rule-mac)  [JSON](#rule-json)  [Less Than](#rule-lt)  [Less Than Or Equal](#rule-lte)  [Max](#rule-max)  [MIME Types](#rule-mimetypes)  [MIME Type By File Extension](#rule-mimes)  [Min](#rule-min)  [Multiple Of](#multiple-of)  [Not In](#rule-not-in)  [Not Regex](#rule-not-regex)  [Nullable](#rule-nullable)  [Numeric](#rule-numeric)  [Password](#rule-password)  [Present](#rule-present)  [Prohibited](#rule-prohibited)  [Prohibited If](#rule-prohibited-if)  [Prohibited Unless](#rule-prohibited-unless)  [Prohibits](#rule-prohibits)  [Regular Expression](#rule-regex)  [Required](#rule-required)  [Required If](#rule-required-if)  [Required Unless](#rule-required-unless)  [Required With](#rule-required-with)  [Required With All](#rule-required-with-all)  [Required Without](#rule-required-without)  [Required Without All](#rule-required-without-all)  [Same](#rule-same)  [Size](#rule-size)  [Sometimes](#validating-when-present)  [Starts With](#rule-starts-with)  [String](#rule-string)  [Timezone](#rule-timezone)  [Unique (Database)](#rule-unique)  [URL](#rule-url)  [UUID](#rule-uuid)"
msgstr ""

# File: docs/8.x/validation.md, line: 834
# File: docs/8.x/validation.md, line: 1375
# File: docs/master/validation.md, line: 833
# File: docs/master/validation.md, line: 1358
#. type: Plain text
#, no-wrap
msgid "</div>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 836
# File: docs/master/validation.md, line: 835
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-accepted\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 836
# File: docs/master/validation.md, line: 835
#. type: Title ####
#, no-wrap
msgid "accepted"
msgstr ""

# File: docs/8.x/validation.md, line: 839
# File: docs/master/validation.md, line: 838
#. type: Plain text
msgid "The field under validation must be `\"yes\"`, `\"on\"`, `1`, or `true`. This is useful for validating \"Terms of Service\" acceptance or similar fields."
msgstr ""

# File: docs/8.x/validation.md, line: 841
# File: docs/master/validation.md, line: 840
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-accepted-if\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 841
# File: docs/master/validation.md, line: 840
#. type: Title ####
#, no-wrap
msgid "accepted_if:anotherfield,value,..."
msgstr ""

# File: docs/8.x/validation.md, line: 844
# File: docs/master/validation.md, line: 843
#. type: Plain text
msgid "The field under validation must be `\"yes\"`, `\"on\"`, `1`, or `true` if another field under validation is equal to a specified value. This is useful for validating \"Terms of Service\" acceptance or similar fields."
msgstr ""

# File: docs/8.x/validation.md, line: 846
# File: docs/master/validation.md, line: 845
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-active-url\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 846
# File: docs/master/validation.md, line: 845
#. type: Title ####
#, no-wrap
msgid "active_url"
msgstr ""

# File: docs/8.x/validation.md, line: 849
# File: docs/master/validation.md, line: 848
#. type: Plain text
msgid "The field under validation must have a valid A or AAAA record according to the `dns_get_record` PHP function. The hostname of the provided URL is extracted using the `parse_url` PHP function before being passed to `dns_get_record`."
msgstr ""

# File: docs/8.x/validation.md, line: 851
# File: docs/master/validation.md, line: 850
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-after\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 851
# File: docs/master/validation.md, line: 850
#. type: Title ####
#, no-wrap
msgid "after:_date_"
msgstr ""

# File: docs/8.x/validation.md, line: 854
# File: docs/master/validation.md, line: 853
#. type: Plain text
msgid "The field under validation must be a value after a given date. The dates will be passed into the `strtotime` PHP function in order to be converted to a valid `DateTime` instance:"
msgstr ""

# File: docs/8.x/validation.md, line: 856
# File: docs/master/validation.md, line: 855
#. type: Plain text
#, no-wrap
msgid "    'start_date' => 'required|date|after:tomorrow'\n"
msgstr ""

# File: docs/8.x/validation.md, line: 858
# File: docs/master/validation.md, line: 857
#. type: Plain text
msgid "Instead of passing a date string to be evaluated by `strtotime`, you may specify another field to compare against the date:"
msgstr ""

# File: docs/8.x/validation.md, line: 860
# File: docs/master/validation.md, line: 859
#. type: Plain text
#, no-wrap
msgid "    'finish_date' => 'required|date|after:start_date'\n"
msgstr ""

# File: docs/8.x/validation.md, line: 862
# File: docs/master/validation.md, line: 861
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-after-or-equal\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 862
# File: docs/master/validation.md, line: 861
#. type: Title ####
#, no-wrap
msgid "after\\_or\\_equal:_date_"
msgstr ""

# File: docs/8.x/validation.md, line: 865
# File: docs/master/validation.md, line: 864
#. type: Plain text
msgid "The field under validation must be a value after or equal to the given date. For more information, see the [after](#rule-after) rule."
msgstr ""

# File: docs/8.x/validation.md, line: 867
# File: docs/master/validation.md, line: 866
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-alpha\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 867
# File: docs/master/validation.md, line: 866
#. type: Title ####
#, no-wrap
msgid "alpha"
msgstr ""

# File: docs/8.x/validation.md, line: 870
# File: docs/master/validation.md, line: 869
#. type: Plain text
msgid "The field under validation must be entirely alphabetic characters."
msgstr ""

# File: docs/8.x/validation.md, line: 872
# File: docs/master/validation.md, line: 871
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-alpha-dash\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 872
# File: docs/master/validation.md, line: 871
#. type: Title ####
#, no-wrap
msgid "alpha_dash"
msgstr ""

# File: docs/8.x/validation.md, line: 875
# File: docs/master/validation.md, line: 874
#. type: Plain text
msgid "The field under validation may have alpha-numeric characters, as well as dashes and underscores."
msgstr ""

# File: docs/8.x/validation.md, line: 877
# File: docs/master/validation.md, line: 876
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-alpha-num\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 877
# File: docs/master/validation.md, line: 876
#. type: Title ####
#, no-wrap
msgid "alpha_num"
msgstr ""

# File: docs/8.x/validation.md, line: 880
# File: docs/master/validation.md, line: 879
#. type: Plain text
msgid "The field under validation must be entirely alpha-numeric characters."
msgstr ""

# File: docs/8.x/validation.md, line: 882
# File: docs/master/validation.md, line: 881
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-array\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 882
# File: docs/master/validation.md, line: 881
#. type: Title ####
#, no-wrap
msgid "array"
msgstr ""

# File: docs/8.x/validation.md, line: 885
# File: docs/master/validation.md, line: 884
#. type: Plain text
msgid "The field under validation must be a PHP `array`."
msgstr ""

# File: docs/8.x/validation.md, line: 887
# File: docs/master/validation.md, line: 886
#. type: Plain text
msgid "When additional values are provided to the `array` rule, each key in the input array must be present within the list of values provided to the rule. In the following example, the `admin` key in the input array is invalid since it is not contained in the list of values provided to the `array` rule:"
msgstr ""

# File: docs/8.x/validation.md, line: 889
# File: docs/8.x/validation.md, line: 1536
# File: docs/8.x/validation.md, line: 1570
# File: docs/8.x/validation.md, line: 1624
# File: docs/8.x/validation.md, line: 1664
# File: docs/8.x/validation.md, line: 1911
# File: docs/8.x/validation.md, line: 1930
# File: docs/master/validation.md, line: 888
# File: docs/master/validation.md, line: 1519
# File: docs/master/validation.md, line: 1553
# File: docs/master/validation.md, line: 1607
# File: docs/master/validation.md, line: 1628
# File: docs/master/validation.md, line: 1893
# File: docs/master/validation.md, line: 1912
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Support\\Facades\\Validator;\n"
msgstr ""

# File: docs/8.x/validation.md, line: 897
# File: docs/8.x/validation.md, line: 1632
# File: docs/master/validation.md, line: 896
# File: docs/master/validation.md, line: 1615
#. type: Plain text
#, no-wrap
msgid "    $input = [\n"
"        'user' => [\n"
"            'name' => 'Taylor Otwell',\n"
"            'username' => 'taylorotwell',\n"
"            'admin' => true,\n"
"        ],\n"
"    ];\n"
msgstr ""

# File: docs/8.x/validation.md, line: 901
# File: docs/8.x/validation.md, line: 1636
# File: docs/master/validation.md, line: 900
# File: docs/master/validation.md, line: 1619
#. type: Plain text
#, no-wrap
msgid "    Validator::make($input, [\n"
"        'user' => 'array:username,locale',\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 903
# File: docs/8.x/validation.md, line: 1638
# File: docs/master/validation.md, line: 1621
#. type: Plain text
msgid "In general, you should always specify the array keys that are allowed to be present within your array. Otherwise, the validator's `validate` and `validated` methods will return all of the validated data, including the array and all of its keys, even if those keys were not validated by other nested array validation rules."
msgstr ""

# File: docs/8.x/validation.md, line: 905
# File: docs/8.x/validation.md, line: 1643
#. type: Plain text
msgid "If you would like, you may instruct Laravel's validator to never include unvalidated array keys in the \"validated\" data it returns, even if you use the `array` rule without specifying a list of allowed keys. To accomplish this, you may call the validator's `excludeUnvalidatedArrayKeys` method in the `boot` method of your application's `AppServiceProvider`. After doing so, the validator will include array keys in the \"validated\" data it returns only when those keys were specifically validated by [nested array rules](#validating-arrays):"
msgstr ""

# File: docs/8.x/validation.md, line: 906
# File: docs/8.x/validation.md, line: 1644
# File: docs/8.x/validation.md, line: 1738
# File: docs/master/validation.md, line: 1720
#. type: Code fence info string
#, no-wrap
msgid "php"
msgstr ""

# File: docs/8.x/validation.md, line: 906
# File: docs/8.x/validation.md, line: 1644
#. type: Plain text
#, no-wrap
msgid "use Illuminate\\Support\\Facades\\Validator;\n\n"
"/**\n"
" * Register any application services.\n"
" *\n"
" * @return void\n"
" */\n"
"public function boot()\n"
"{\n"
"    Validator::excludeUnvalidatedArrayKeys();\n"
"}\n"
msgstr ""

# File: docs/8.x/validation.md, line: 921
# File: docs/master/validation.md, line: 904
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-bail\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 921
# File: docs/master/validation.md, line: 904
#. type: Title ####
#, no-wrap
msgid "bail"
msgstr ""

# File: docs/8.x/validation.md, line: 924
# File: docs/master/validation.md, line: 907
#. type: Plain text
msgid "Stop running validation rules for the field after the first validation failure."
msgstr ""

# File: docs/8.x/validation.md, line: 926
# File: docs/master/validation.md, line: 909
#. type: Plain text
msgid "While the `bail` rule will only stop validating a specific field when it encounters a validation failure, the `stopOnFirstFailure` method will inform the validator that it should stop validating all attributes once a single validation failure has occurred:"
msgstr ""

# File: docs/8.x/validation.md, line: 932
# File: docs/master/validation.md, line: 915
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-before\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 932
# File: docs/master/validation.md, line: 915
#. type: Title ####
#, no-wrap
msgid "before:_date_"
msgstr ""

# File: docs/8.x/validation.md, line: 935
# File: docs/master/validation.md, line: 918
#. type: Plain text
msgid "The field under validation must be a value preceding the given date. The dates will be passed into the PHP `strtotime` function in order to be converted into a valid `DateTime` instance. In addition, like the [`after`](#rule-after) rule, the name of another field under validation may be supplied as the value of `date`."
msgstr ""

# File: docs/8.x/validation.md, line: 937
# File: docs/master/validation.md, line: 920
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-before-or-equal\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 937
# File: docs/master/validation.md, line: 920
#. type: Title ####
#, no-wrap
msgid "before\\_or\\_equal:_date_"
msgstr ""

# File: docs/8.x/validation.md, line: 940
# File: docs/master/validation.md, line: 923
#. type: Plain text
msgid "The field under validation must be a value preceding or equal to the given date. The dates will be passed into the PHP `strtotime` function in order to be converted into a valid `DateTime` instance. In addition, like the [`after`](#rule-after) rule, the name of another field under validation may be supplied as the value of `date`."
msgstr ""

# File: docs/8.x/validation.md, line: 942
# File: docs/master/validation.md, line: 925
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-between\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 942
# File: docs/master/validation.md, line: 925
#. type: Title ####
#, no-wrap
msgid "between:_min_,_max_"
msgstr ""

# File: docs/8.x/validation.md, line: 945
# File: docs/master/validation.md, line: 928
#. type: Plain text
msgid "The field under validation must have a size between the given _min_ and _max_. Strings, numerics, arrays, and files are evaluated in the same fashion as the [`size`](#rule-size) rule."
msgstr ""

# File: docs/8.x/validation.md, line: 947
# File: docs/master/validation.md, line: 930
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-boolean\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 947
# File: docs/master/validation.md, line: 930
#. type: Title ####
#, no-wrap
msgid "boolean"
msgstr ""

# File: docs/8.x/validation.md, line: 950
# File: docs/master/validation.md, line: 933
#. type: Plain text
msgid "The field under validation must be able to be cast as a boolean. Accepted input are `true`, `false`, `1`, `0`, `\"1\"`, and `\"0\"`."
msgstr ""

# File: docs/8.x/validation.md, line: 952
# File: docs/master/validation.md, line: 935
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-confirmed\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 952
# File: docs/master/validation.md, line: 935
#. type: Title ####
#, no-wrap
msgid "confirmed"
msgstr ""

# File: docs/8.x/validation.md, line: 955
# File: docs/master/validation.md, line: 938
#. type: Plain text
msgid "The field under validation must have a matching field of `{field}_confirmation`. For example, if the field under validation is `password`, a matching `password_confirmation` field must be present in the input."
msgstr ""

# File: docs/8.x/validation.md, line: 957
# File: docs/master/validation.md, line: 940
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-current-password\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 957
# File: docs/master/validation.md, line: 940
#. type: Title ####
#, no-wrap
msgid "current_password"
msgstr ""

# File: docs/8.x/validation.md, line: 960
# File: docs/master/validation.md, line: 943
#. type: Plain text
msgid "The field under validation must match the authenticated user's password. You may specify an [authentication guard](/docs/{{version}}/authentication) using the rule's first parameter:"
msgstr ""

# File: docs/8.x/validation.md, line: 962
# File: docs/master/validation.md, line: 945
#. type: Plain text
#, no-wrap
msgid "    'password' => 'current_password:api'\n"
msgstr ""

# File: docs/8.x/validation.md, line: 964
# File: docs/master/validation.md, line: 947
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-date\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 964
# File: docs/master/validation.md, line: 947
#. type: Title ####
#, no-wrap
msgid "date"
msgstr ""

# File: docs/8.x/validation.md, line: 967
# File: docs/master/validation.md, line: 950
#. type: Plain text
msgid "The field under validation must be a valid, non-relative date according to the `strtotime` PHP function."
msgstr ""

# File: docs/8.x/validation.md, line: 969
# File: docs/master/validation.md, line: 952
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-date-equals\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 969
# File: docs/master/validation.md, line: 952
#. type: Title ####
#, no-wrap
msgid "date_equals:_date_"
msgstr ""

# File: docs/8.x/validation.md, line: 972
# File: docs/master/validation.md, line: 955
#. type: Plain text
msgid "The field under validation must be equal to the given date. The dates will be passed into the PHP `strtotime` function in order to be converted into a valid `DateTime` instance."
msgstr ""

# File: docs/8.x/validation.md, line: 974
# File: docs/master/validation.md, line: 957
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-date-format\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 974
# File: docs/master/validation.md, line: 957
#. type: Title ####
#, no-wrap
msgid "date_format:_format_"
msgstr ""

# File: docs/8.x/validation.md, line: 977
# File: docs/master/validation.md, line: 960
#. type: Plain text
msgid "The field under validation must match the given _format_. You should use **either** `date` or `date_format` when validating a field, not both. This validation rule supports all formats supported by PHP's [DateTime](https://www.php.net/manual/en/class.datetime.php) class."
msgstr ""

# File: docs/8.x/validation.md, line: 979
# File: docs/master/validation.md, line: 962
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-declined\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 979
# File: docs/master/validation.md, line: 962
#. type: Title ####
#, no-wrap
msgid "declined"
msgstr ""

# File: docs/8.x/validation.md, line: 982
# File: docs/master/validation.md, line: 965
#. type: Plain text
msgid "The field under validation must be `\"no\"`, `\"off\"`, `0`, or `false`."
msgstr ""

# File: docs/8.x/validation.md, line: 984
# File: docs/master/validation.md, line: 967
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-declined-if\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 984
# File: docs/master/validation.md, line: 967
#. type: Title ####
#, no-wrap
msgid "declined_if:anotherfield,value,..."
msgstr ""

# File: docs/8.x/validation.md, line: 987
# File: docs/master/validation.md, line: 970
#. type: Plain text
msgid "The field under validation must be `\"no\"`, `\"off\"`, `0`, or `false` if another field under validation is equal to a specified value."
msgstr ""

# File: docs/8.x/validation.md, line: 989
# File: docs/master/validation.md, line: 972
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-different\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 989
# File: docs/master/validation.md, line: 972
#. type: Title ####
#, no-wrap
msgid "different:_field_"
msgstr ""

# File: docs/8.x/validation.md, line: 992
# File: docs/master/validation.md, line: 975
#. type: Plain text
msgid "The field under validation must have a different value than _field_."
msgstr ""

# File: docs/8.x/validation.md, line: 994
# File: docs/master/validation.md, line: 977
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-digits\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 994
# File: docs/master/validation.md, line: 977
#. type: Title ####
#, no-wrap
msgid "digits:_value_"
msgstr ""

# File: docs/8.x/validation.md, line: 997
# File: docs/master/validation.md, line: 980
#. type: Plain text
msgid "The field under validation must be _numeric_ and must have an exact length of _value_."
msgstr ""

# File: docs/8.x/validation.md, line: 999
# File: docs/master/validation.md, line: 982
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-digits-between\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 999
# File: docs/master/validation.md, line: 982
#. type: Title ####
#, no-wrap
msgid "digits_between:_min_,_max_"
msgstr ""

# File: docs/8.x/validation.md, line: 1002
# File: docs/master/validation.md, line: 985
#. type: Plain text
msgid "The field under validation must be _numeric_ and must have a length between the given _min_ and _max_."
msgstr ""

# File: docs/8.x/validation.md, line: 1004
# File: docs/master/validation.md, line: 987
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-dimensions\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1004
# File: docs/master/validation.md, line: 987
#. type: Title ####
#, no-wrap
msgid "dimensions"
msgstr ""

# File: docs/8.x/validation.md, line: 1007
# File: docs/master/validation.md, line: 990
#. type: Plain text
msgid "The file under validation must be an image meeting the dimension constraints as specified by the rule's parameters:"
msgstr ""

# File: docs/8.x/validation.md, line: 1009
# File: docs/master/validation.md, line: 992
#. type: Plain text
#, no-wrap
msgid "    'avatar' => 'dimensions:min_width=100,min_height=200'\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1011
# File: docs/master/validation.md, line: 994
#. type: Plain text
msgid "Available constraints are: _min\\_width_, _max\\_width_, _min\\_height_, _max\\_height_, _width_, _height_, _ratio_."
msgstr ""

# File: docs/8.x/validation.md, line: 1013
# File: docs/master/validation.md, line: 996
#. type: Plain text
msgid "A _ratio_ constraint should be represented as width divided by height. This can be specified either by a fraction like `3/2` or a float like `1.5`:"
msgstr ""

# File: docs/8.x/validation.md, line: 1015
# File: docs/master/validation.md, line: 998
#. type: Plain text
#, no-wrap
msgid "    'avatar' => 'dimensions:ratio=3/2'\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1017
# File: docs/master/validation.md, line: 1000
#. type: Plain text
msgid "Since this rule requires several arguments, you may use the `Rule::dimensions` method to fluently construct the rule:"
msgstr ""

# File: docs/8.x/validation.md, line: 1020
# File: docs/8.x/validation.md, line: 1134
# File: docs/8.x/validation.md, line: 1176
# File: docs/8.x/validation.md, line: 1188
# File: docs/8.x/validation.md, line: 1385
# File: docs/8.x/validation.md, line: 1487
# File: docs/master/validation.md, line: 1003
# File: docs/master/validation.md, line: 1117
# File: docs/master/validation.md, line: 1159
# File: docs/master/validation.md, line: 1171
# File: docs/master/validation.md, line: 1368
# File: docs/master/validation.md, line: 1470
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Support\\Facades\\Validator;\n"
"    use Illuminate\\Validation\\Rule;\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1027
# File: docs/master/validation.md, line: 1010
#. type: Plain text
#, no-wrap
msgid "    Validator::make($data, [\n"
"        'avatar' => [\n"
"            'required',\n"
"            Rule::dimensions()->maxWidth(1000)->maxHeight(500)->ratio(3 / 2),\n"
"        ],\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1029
# File: docs/master/validation.md, line: 1012
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-distinct\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1029
# File: docs/master/validation.md, line: 1012
#. type: Title ####
#, no-wrap
msgid "distinct"
msgstr ""

# File: docs/8.x/validation.md, line: 1032
# File: docs/master/validation.md, line: 1015
#. type: Plain text
msgid "When validating arrays, the field under validation must not have any duplicate values:"
msgstr ""

# File: docs/8.x/validation.md, line: 1034
# File: docs/master/validation.md, line: 1017
#. type: Plain text
#, no-wrap
msgid "    'foo.*.id' => 'distinct'\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1036
# File: docs/master/validation.md, line: 1019
#. type: Plain text
msgid "Distinct uses loose variable comparisons by default. To use strict comparisons, you may add the `strict` parameter to your validation rule definition:"
msgstr ""

# File: docs/8.x/validation.md, line: 1038
# File: docs/master/validation.md, line: 1021
#. type: Plain text
#, no-wrap
msgid "    'foo.*.id' => 'distinct:strict'\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1040
# File: docs/master/validation.md, line: 1023
#. type: Plain text
msgid "You may add `ignore_case` to the validation rule's arguments to make the rule ignore capitalization differences:"
msgstr ""

# File: docs/8.x/validation.md, line: 1042
# File: docs/master/validation.md, line: 1025
#. type: Plain text
#, no-wrap
msgid "    'foo.*.id' => 'distinct:ignore_case'\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1044
# File: docs/master/validation.md, line: 1027
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-email\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1044
# File: docs/master/validation.md, line: 1027
#. type: Title ####
#, no-wrap
msgid "email"
msgstr ""

# File: docs/8.x/validation.md, line: 1047
# File: docs/master/validation.md, line: 1030
#. type: Plain text
msgid "The field under validation must be formatted as an email address. This validation rule utilizes the [`egulias/email-validator`](https://github.com/egulias/EmailValidator) package for validating the email address. By default, the `RFCValidation` validator is applied, but you can apply other validation styles as well:"
msgstr ""

# File: docs/8.x/validation.md, line: 1049
# File: docs/master/validation.md, line: 1032
#. type: Plain text
#, no-wrap
msgid "    'email' => 'email:rfc,dns'\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1051
# File: docs/master/validation.md, line: 1034
#. type: Plain text
msgid "The example above will apply the `RFCValidation` and `DNSCheckValidation` validations. Here's a full list of validation styles you can apply:"
msgstr ""

# File: docs/8.x/validation.md, line: 1059
# File: docs/master/validation.md, line: 1042
#. type: Plain text
#, no-wrap
msgid "<div class=\"content-list\" markdown=\"1\">\n"
"- `rfc`: `RFCValidation`\n"
"- `strict`: `NoRFCWarningsValidation`\n"
"- `dns`: `DNSCheckValidation`\n"
"- `spoof`: `SpoofCheckValidation`\n"
"- `filter`: `FilterEmailValidation`\n"
"</div>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1061
# File: docs/master/validation.md, line: 1044
#. type: Plain text
msgid "The `filter` validator, which uses PHP's `filter_var` function, ships with Laravel and was Laravel's default email validation behavior prior to Laravel version 5.8."
msgstr ""

# File: docs/8.x/validation.md, line: 1063
# File: docs/master/validation.md, line: 1046
#. type: Plain text
#, no-wrap
msgid "> {note} The `dns` and `spoof` validators require the PHP `intl` extension.\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1065
# File: docs/master/validation.md, line: 1048
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-ends-with\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1065
# File: docs/master/validation.md, line: 1048
#. type: Title ####
#, no-wrap
msgid "ends_with:_foo_,_bar_,..."
msgstr ""

# File: docs/8.x/validation.md, line: 1068
# File: docs/master/validation.md, line: 1051
#. type: Plain text
msgid "The field under validation must end with one of the given values."
msgstr ""

# File: docs/8.x/validation.md, line: 1070
# File: docs/master/validation.md, line: 1053
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-enum\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1070
# File: docs/master/validation.md, line: 1053
#. type: Title ####
#, no-wrap
msgid "enum"
msgstr ""

# File: docs/8.x/validation.md, line: 1073
# File: docs/master/validation.md, line: 1056
#. type: Plain text
msgid "The `Enum` rule is a class based rule that validates whether the field under validation contains a valid enum value. The `Enum` rule accepts the name of the enum as its only constructor argument:"
msgstr ""

# File: docs/8.x/validation.md, line: 1076
# File: docs/master/validation.md, line: 1059
#. type: Plain text
#, no-wrap
msgid "    use App\\Enums\\ServerStatus;\n"
"    use Illuminate\\Validation\\Rules\\Enum;\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1080
# File: docs/master/validation.md, line: 1063
#. type: Plain text
#, no-wrap
msgid "    $request->validate([\n"
"        'status' => [new Enum(ServerStatus::class)],\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1082
# File: docs/master/validation.md, line: 1065
#. type: Plain text
#, no-wrap
msgid "> {note} Enums are only available on PHP 8.1+.\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1084
# File: docs/master/validation.md, line: 1067
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-exclude\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1084
# File: docs/master/validation.md, line: 1067
#. type: Title ####
#, no-wrap
msgid "exclude"
msgstr ""

# File: docs/8.x/validation.md, line: 1087
# File: docs/master/validation.md, line: 1070
#. type: Plain text
msgid "The field under validation will be excluded from the request data returned by the `validate` and `validated` methods."
msgstr ""

# File: docs/8.x/validation.md, line: 1089
# File: docs/master/validation.md, line: 1072
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-exclude-if\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1089
# File: docs/master/validation.md, line: 1072
#. type: Title ####
#, no-wrap
msgid "exclude_if:_anotherfield_,_value_"
msgstr ""

# File: docs/8.x/validation.md, line: 1092
# File: docs/master/validation.md, line: 1075
#. type: Plain text
msgid "The field under validation will be excluded from the request data returned by the `validate` and `validated` methods if the _anotherfield_ field is equal to _value_."
msgstr ""

# File: docs/8.x/validation.md, line: 1094
# File: docs/master/validation.md, line: 1077
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-exclude-unless\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1094
# File: docs/master/validation.md, line: 1077
#. type: Title ####
#, no-wrap
msgid "exclude_unless:_anotherfield_,_value_"
msgstr ""

# File: docs/8.x/validation.md, line: 1097
# File: docs/master/validation.md, line: 1080
#. type: Plain text
msgid "The field under validation will be excluded from the request data returned by the `validate` and `validated` methods unless _anotherfield_'s field is equal to _value_. If _value_ is `null` (`exclude_unless:name,null`), the field under validation will be excluded unless the comparison field is `null` or the comparison field is missing from the request data."
msgstr ""

# File: docs/8.x/validation.md, line: 1099
# File: docs/master/validation.md, line: 1082
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-exclude-without\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1099
# File: docs/master/validation.md, line: 1082
#. type: Title ####
#, no-wrap
msgid "exclude_without:_anotherfield_"
msgstr ""

# File: docs/8.x/validation.md, line: 1102
# File: docs/master/validation.md, line: 1085
#. type: Plain text
msgid "The field under validation will be excluded from the request data returned by the `validate` and `validated` methods if the _anotherfield_ field is not present."
msgstr ""

# File: docs/8.x/validation.md, line: 1104
# File: docs/master/validation.md, line: 1087
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-exists\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1104
# File: docs/master/validation.md, line: 1087
#. type: Title ####
#, no-wrap
msgid "exists:_table_,_column_"
msgstr ""

# File: docs/8.x/validation.md, line: 1107
# File: docs/master/validation.md, line: 1090
#. type: Plain text
msgid "The field under validation must exist in a given database table."
msgstr ""

# File: docs/8.x/validation.md, line: 1109
# File: docs/master/validation.md, line: 1092
#. type: Plain text
#, no-wrap
msgid "<a name=\"basic-usage-of-exists-rule\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1109
# File: docs/master/validation.md, line: 1092
#. type: Title ####
#, no-wrap
msgid "Basic Usage Of Exists Rule"
msgstr ""

# File: docs/8.x/validation.md, line: 1112
# File: docs/master/validation.md, line: 1095
#. type: Plain text
#, no-wrap
msgid "    'state' => 'exists:states'\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1114
# File: docs/master/validation.md, line: 1097
#. type: Plain text
msgid "If the `column` option is not specified, the field name will be used. So, in this case, the rule will validate that the `states` database table contains a record with a `state` column value matching the request's `state` attribute value."
msgstr ""

# File: docs/8.x/validation.md, line: 1116
# File: docs/master/validation.md, line: 1099
#. type: Plain text
#, no-wrap
msgid "<a name=\"specifying-a-custom-column-name\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1116
# File: docs/master/validation.md, line: 1099
#. type: Title ####
#, no-wrap
msgid "Specifying A Custom Column Name"
msgstr ""

# File: docs/8.x/validation.md, line: 1119
# File: docs/master/validation.md, line: 1102
#. type: Plain text
msgid "You may explicitly specify the database column name that should be used by the validation rule by placing it after the database table name:"
msgstr ""

# File: docs/8.x/validation.md, line: 1121
# File: docs/master/validation.md, line: 1104
#. type: Plain text
#, no-wrap
msgid "    'state' => 'exists:states,abbreviation'\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1123
# File: docs/master/validation.md, line: 1106
#. type: Plain text
msgid "Occasionally, you may need to specify a specific database connection to be used for the `exists` query. You can accomplish this by prepending the connection name to the table name:"
msgstr ""

# File: docs/8.x/validation.md, line: 1125
# File: docs/master/validation.md, line: 1108
#. type: Plain text
#, no-wrap
msgid "    'email' => 'exists:connection.staff,email'\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1127
# File: docs/8.x/validation.md, line: 1466
# File: docs/master/validation.md, line: 1110
# File: docs/master/validation.md, line: 1449
#. type: Plain text
msgid "Instead of specifying the table name directly, you may specify the Eloquent model which should be used to determine the table name:"
msgstr ""

# File: docs/8.x/validation.md, line: 1129
# File: docs/master/validation.md, line: 1112
#. type: Plain text
#, no-wrap
msgid "    'user_id' => 'exists:App\\Models\\User,id'\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1131
# File: docs/master/validation.md, line: 1114
#. type: Plain text
msgid "If you would like to customize the query executed by the validation rule, you may use the `Rule` class to fluently define the rule. In this example, we'll also specify the validation rules as an array instead of using the `|` character to delimit them:"
msgstr ""

# File: docs/8.x/validation.md, line: 1143
# File: docs/master/validation.md, line: 1126
#. type: Plain text
#, no-wrap
msgid "    Validator::make($data, [\n"
"        'email' => [\n"
"            'required',\n"
"            Rule::exists('staff')->where(function ($query) {\n"
"                return $query->where('account_id', 1);\n"
"            }),\n"
"        ],\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1145
# File: docs/master/validation.md, line: 1128
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-file\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1145
# File: docs/master/validation.md, line: 1128
#. type: Title ####
#, no-wrap
msgid "file"
msgstr ""

# File: docs/8.x/validation.md, line: 1148
# File: docs/master/validation.md, line: 1131
#. type: Plain text
msgid "The field under validation must be a successfully uploaded file."
msgstr ""

# File: docs/8.x/validation.md, line: 1150
# File: docs/master/validation.md, line: 1133
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-filled\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1150
# File: docs/master/validation.md, line: 1133
#. type: Title ####
#, no-wrap
msgid "filled"
msgstr ""

# File: docs/8.x/validation.md, line: 1153
# File: docs/master/validation.md, line: 1136
#. type: Plain text
msgid "The field under validation must not be empty when it is present."
msgstr ""

# File: docs/8.x/validation.md, line: 1155
# File: docs/master/validation.md, line: 1138
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-gt\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1155
# File: docs/master/validation.md, line: 1138
#. type: Title ####
#, no-wrap
msgid "gt:_field_"
msgstr ""

# File: docs/8.x/validation.md, line: 1158
# File: docs/master/validation.md, line: 1141
#. type: Plain text
msgid "The field under validation must be greater than the given _field_. The two fields must be of the same type. Strings, numerics, arrays, and files are evaluated using the same conventions as the [`size`](#rule-size) rule."
msgstr ""

# File: docs/8.x/validation.md, line: 1160
# File: docs/master/validation.md, line: 1143
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-gte\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1160
# File: docs/master/validation.md, line: 1143
#. type: Title ####
#, no-wrap
msgid "gte:_field_"
msgstr ""

# File: docs/8.x/validation.md, line: 1163
# File: docs/master/validation.md, line: 1146
#. type: Plain text
msgid "The field under validation must be greater than or equal to the given _field_. The two fields must be of the same type. Strings, numerics, arrays, and files are evaluated using the same conventions as the [`size`](#rule-size) rule."
msgstr ""

# File: docs/8.x/validation.md, line: 1165
# File: docs/master/validation.md, line: 1148
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-image\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1165
# File: docs/master/validation.md, line: 1148
#. type: Title ####
#, no-wrap
msgid "image"
msgstr ""

# File: docs/8.x/validation.md, line: 1168
# File: docs/master/validation.md, line: 1151
#. type: Plain text
msgid "The file under validation must be an image (jpg, jpeg, png, bmp, gif, svg, or webp)."
msgstr ""

# File: docs/8.x/validation.md, line: 1170
# File: docs/master/validation.md, line: 1153
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-in\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1170
# File: docs/master/validation.md, line: 1153
#. type: Title ####
#, no-wrap
msgid "in:_foo_,_bar_,..."
msgstr ""

# File: docs/8.x/validation.md, line: 1173
# File: docs/master/validation.md, line: 1156
#. type: Plain text
msgid "The field under validation must be included in the given list of values. Since this rule often requires you to `implode` an array, the `Rule::in` method may be used to fluently construct the rule:"
msgstr ""

# File: docs/8.x/validation.md, line: 1183
# File: docs/master/validation.md, line: 1166
#. type: Plain text
#, no-wrap
msgid "    Validator::make($data, [\n"
"        'zones' => [\n"
"            'required',\n"
"            Rule::in(['first-zone', 'second-zone']),\n"
"        ],\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1185
# File: docs/master/validation.md, line: 1168
#. type: Plain text
msgid "When the `in` rule is combined with the `array` rule, each value in the input array must be present within the list of values provided to the `in` rule. In the following example, the `LAS` airport code in the input array is invalid since it is not contained in the list of airports provided to the `in` rule:"
msgstr ""

# File: docs/8.x/validation.md, line: 1192
# File: docs/master/validation.md, line: 1175
#. type: Plain text
#, no-wrap
msgid "    $input = [\n"
"        'airports' => ['NYC', 'LAS'],\n"
"    ];\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1200
# File: docs/master/validation.md, line: 1183
#. type: Plain text
#, no-wrap
msgid "    Validator::make($input, [\n"
"        'airports' => [\n"
"            'required',\n"
"            'array',\n"
"            Rule::in(['NYC', 'LIT']),\n"
"        ],\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1202
# File: docs/master/validation.md, line: 1185
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-in-array\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1202
# File: docs/master/validation.md, line: 1185
#. type: Title ####
#, no-wrap
msgid "in_array:_anotherfield_.*"
msgstr ""

# File: docs/8.x/validation.md, line: 1205
# File: docs/master/validation.md, line: 1188
#. type: Plain text
msgid "The field under validation must exist in _anotherfield_'s values."
msgstr ""

# File: docs/8.x/validation.md, line: 1207
# File: docs/master/validation.md, line: 1190
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-integer\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1207
# File: docs/master/validation.md, line: 1190
#. type: Title ####
#, no-wrap
msgid "integer"
msgstr ""

# File: docs/8.x/validation.md, line: 1210
# File: docs/master/validation.md, line: 1193
#. type: Plain text
msgid "The field under validation must be an integer."
msgstr ""

# File: docs/8.x/validation.md, line: 1212
# File: docs/master/validation.md, line: 1195
#. type: Plain text
#, no-wrap
msgid "> {note} This validation rule does not verify that the input is of the \"integer\" variable type, only that the input is of a type accepted by PHP's `FILTER_VALIDATE_INT` rule. If you need to validate the input as being a number please use this rule in combination with [the `numeric` validation rule](#rule-numeric).\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1214
# File: docs/master/validation.md, line: 1197
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-ip\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1214
# File: docs/master/validation.md, line: 1197
#. type: Title ####
#, no-wrap
msgid "ip"
msgstr ""

# File: docs/8.x/validation.md, line: 1217
# File: docs/master/validation.md, line: 1200
#. type: Plain text
msgid "The field under validation must be an IP address."
msgstr ""

# File: docs/8.x/validation.md, line: 1219
# File: docs/master/validation.md, line: 1202
#. type: Plain text
#, no-wrap
msgid "<a name=\"ipv4\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1219
# File: docs/master/validation.md, line: 1202
#. type: Title ####
#, no-wrap
msgid "ipv4"
msgstr ""

# File: docs/8.x/validation.md, line: 1222
# File: docs/master/validation.md, line: 1205
#. type: Plain text
msgid "The field under validation must be an IPv4 address."
msgstr ""

# File: docs/8.x/validation.md, line: 1224
# File: docs/master/validation.md, line: 1207
#. type: Plain text
#, no-wrap
msgid "<a name=\"ipv6\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1224
# File: docs/master/validation.md, line: 1207
#. type: Title ####
#, no-wrap
msgid "ipv6"
msgstr ""

# File: docs/8.x/validation.md, line: 1227
# File: docs/master/validation.md, line: 1210
#. type: Plain text
msgid "The field under validation must be an IPv6 address."
msgstr ""

# File: docs/8.x/validation.md, line: 1229
# File: docs/master/validation.md, line: 1212
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-mac\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1229
# File: docs/master/validation.md, line: 1212
#. type: Title ####
#, no-wrap
msgid "mac_address"
msgstr ""

# File: docs/8.x/validation.md, line: 1232
# File: docs/master/validation.md, line: 1215
#. type: Plain text
msgid "The field under validation must be a MAC address."
msgstr ""

# File: docs/8.x/validation.md, line: 1234
# File: docs/master/validation.md, line: 1217
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-json\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1234
# File: docs/master/validation.md, line: 1217
#. type: Title ####
#, no-wrap
msgid "json"
msgstr ""

# File: docs/8.x/validation.md, line: 1237
# File: docs/master/validation.md, line: 1220
#. type: Plain text
msgid "The field under validation must be a valid JSON string."
msgstr ""

# File: docs/8.x/validation.md, line: 1239
# File: docs/master/validation.md, line: 1222
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-lt\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1239
# File: docs/master/validation.md, line: 1222
#. type: Title ####
#, no-wrap
msgid "lt:_field_"
msgstr ""

# File: docs/8.x/validation.md, line: 1242
# File: docs/master/validation.md, line: 1225
#. type: Plain text
msgid "The field under validation must be less than the given _field_. The two fields must be of the same type. Strings, numerics, arrays, and files are evaluated using the same conventions as the [`size`](#rule-size) rule."
msgstr ""

# File: docs/8.x/validation.md, line: 1244
# File: docs/master/validation.md, line: 1227
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-lte\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1244
# File: docs/master/validation.md, line: 1227
#. type: Title ####
#, no-wrap
msgid "lte:_field_"
msgstr ""

# File: docs/8.x/validation.md, line: 1247
# File: docs/master/validation.md, line: 1230
#. type: Plain text
msgid "The field under validation must be less than or equal to the given _field_. The two fields must be of the same type. Strings, numerics, arrays, and files are evaluated using the same conventions as the [`size`](#rule-size) rule."
msgstr ""

# File: docs/8.x/validation.md, line: 1249
# File: docs/master/validation.md, line: 1232
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-max\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1249
# File: docs/master/validation.md, line: 1232
#. type: Title ####
#, no-wrap
msgid "max:_value_"
msgstr ""

# File: docs/8.x/validation.md, line: 1252
# File: docs/master/validation.md, line: 1235
#. type: Plain text
msgid "The field under validation must be less than or equal to a maximum _value_. Strings, numerics, arrays, and files are evaluated in the same fashion as the [`size`](#rule-size) rule."
msgstr ""

# File: docs/8.x/validation.md, line: 1254
# File: docs/master/validation.md, line: 1237
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-mimetypes\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1254
# File: docs/master/validation.md, line: 1237
#. type: Title ####
#, no-wrap
msgid "mimetypes:_text/plain_,..."
msgstr ""

# File: docs/8.x/validation.md, line: 1257
# File: docs/master/validation.md, line: 1240
#. type: Plain text
msgid "The file under validation must match one of the given MIME types:"
msgstr ""

# File: docs/8.x/validation.md, line: 1259
# File: docs/master/validation.md, line: 1242
#. type: Plain text
#, no-wrap
msgid "    'video' => 'mimetypes:video/avi,video/mpeg,video/quicktime'\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1261
# File: docs/master/validation.md, line: 1244
#. type: Plain text
msgid "To determine the MIME type of the uploaded file, the file's contents will be read and the framework will attempt to guess the MIME type, which may be different from the client's provided MIME type."
msgstr ""

# File: docs/8.x/validation.md, line: 1263
# File: docs/master/validation.md, line: 1246
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-mimes\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1263
# File: docs/master/validation.md, line: 1246
#. type: Title ####
#, no-wrap
msgid "mimes:_foo_,_bar_,..."
msgstr ""

# File: docs/8.x/validation.md, line: 1266
# File: docs/master/validation.md, line: 1249
#. type: Plain text
msgid "The file under validation must have a MIME type corresponding to one of the listed extensions."
msgstr ""

# File: docs/8.x/validation.md, line: 1268
# File: docs/master/validation.md, line: 1251
#. type: Plain text
#, no-wrap
msgid "<a name=\"basic-usage-of-mime-rule\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1268
# File: docs/master/validation.md, line: 1251
#. type: Title ####
#, no-wrap
msgid "Basic Usage Of MIME Rule"
msgstr ""

# File: docs/8.x/validation.md, line: 1271
# File: docs/master/validation.md, line: 1254
#. type: Plain text
#, no-wrap
msgid "    'photo' => 'mimes:jpg,bmp,png'\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1273
# File: docs/master/validation.md, line: 1256
#. type: Plain text
msgid "Even though you only need to specify the extensions, this rule actually validates the MIME type of the file by reading the file's contents and guessing its MIME type. A full listing of MIME types and their corresponding extensions may be found at the following location:"
msgstr ""

# File: docs/8.x/validation.md, line: 1275
# File: docs/master/validation.md, line: 1258
#. type: Plain text
msgid "[https://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types](https://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types)"
msgstr ""

# File: docs/8.x/validation.md, line: 1277
# File: docs/master/validation.md, line: 1260
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-min\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1277
# File: docs/master/validation.md, line: 1260
#. type: Title ####
#, no-wrap
msgid "min:_value_"
msgstr ""

# File: docs/8.x/validation.md, line: 1280
# File: docs/master/validation.md, line: 1263
#. type: Plain text
msgid "The field under validation must have a minimum _value_. Strings, numerics, arrays, and files are evaluated in the same fashion as the [`size`](#rule-size) rule."
msgstr ""

# File: docs/8.x/validation.md, line: 1282
# File: docs/master/validation.md, line: 1265
#. type: Plain text
#, no-wrap
msgid "<a name=\"multiple-of\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1282
# File: docs/master/validation.md, line: 1265
#. type: Title ####
#, no-wrap
msgid "multiple_of:_value_"
msgstr ""

# File: docs/8.x/validation.md, line: 1285
# File: docs/master/validation.md, line: 1268
#. type: Plain text
msgid "The field under validation must be a multiple of _value_."
msgstr ""

# File: docs/8.x/validation.md, line: 1287
# File: docs/master/validation.md, line: 1270
#. type: Plain text
#, no-wrap
msgid "> {note} The [`bcmath` PHP extension](https://www.php.net/manual/en/book.bc.php) is required in order to use the `multiple_of` rule.\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1289
# File: docs/master/validation.md, line: 1272
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-not-in\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1289
# File: docs/master/validation.md, line: 1272
#. type: Title ####
#, no-wrap
msgid "not_in:_foo_,_bar_,..."
msgstr ""

# File: docs/8.x/validation.md, line: 1292
# File: docs/master/validation.md, line: 1275
#. type: Plain text
msgid "The field under validation must not be included in the given list of values. The `Rule::notIn` method may be used to fluently construct the rule:"
msgstr ""

# File: docs/8.x/validation.md, line: 1294
# File: docs/master/validation.md, line: 1277
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Validation\\Rule;\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1301
# File: docs/master/validation.md, line: 1284
#. type: Plain text
#, no-wrap
msgid "    Validator::make($data, [\n"
"        'toppings' => [\n"
"            'required',\n"
"            Rule::notIn(['sprinkles', 'cherries']),\n"
"        ],\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1303
# File: docs/master/validation.md, line: 1286
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-not-regex\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1303
# File: docs/master/validation.md, line: 1286
#. type: Title ####
#, no-wrap
msgid "not_regex:_pattern_"
msgstr ""

# File: docs/8.x/validation.md, line: 1306
# File: docs/master/validation.md, line: 1289
#. type: Plain text
msgid "The field under validation must not match the given regular expression."
msgstr ""

# File: docs/8.x/validation.md, line: 1308
# File: docs/master/validation.md, line: 1291
#. type: Plain text
#, no-wrap
msgid "Internally, this rule uses the PHP `preg_match` function. The pattern specified should obey the same formatting required by `preg_match` and thus also include valid delimiters. For example: `'email' => 'not_regex:/^.+$/i'`.\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1310
# File: docs/master/validation.md, line: 1293
#. type: Plain text
#, no-wrap
msgid "> {note} When using the `regex` / `not_regex` patterns, it may be necessary to specify your validation rules using an array instead of using `|` delimiters, especially if the regular expression contains a `|` character.\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1312
# File: docs/master/validation.md, line: 1295
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-nullable\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1312
# File: docs/master/validation.md, line: 1295
#. type: Title ####
#, no-wrap
msgid "nullable"
msgstr ""

# File: docs/8.x/validation.md, line: 1315
# File: docs/master/validation.md, line: 1298
#. type: Plain text
msgid "The field under validation may be `null`."
msgstr ""

# File: docs/8.x/validation.md, line: 1317
# File: docs/master/validation.md, line: 1300
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-numeric\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1317
# File: docs/master/validation.md, line: 1300
#. type: Title ####
#, no-wrap
msgid "numeric"
msgstr ""

# File: docs/8.x/validation.md, line: 1320
# File: docs/master/validation.md, line: 1303
#. type: Plain text
msgid "The field under validation must be [numeric](https://www.php.net/manual/en/function.is-numeric.php)."
msgstr ""

# File: docs/8.x/validation.md, line: 1322
# File: docs/master/validation.md, line: 1305
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-password\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1322
# File: docs/master/validation.md, line: 1305
#. type: Title ####
#, no-wrap
msgid "password"
msgstr ""

# File: docs/8.x/validation.md, line: 1325
# File: docs/master/validation.md, line: 1308
#. type: Plain text
msgid "The field under validation must match the authenticated user's password."
msgstr ""

# File: docs/8.x/validation.md, line: 1327
# File: docs/master/validation.md, line: 1310
#. type: Plain text
#, no-wrap
msgid "> {note} This rule was renamed to `current_password` with the intention of removing it in Laravel 9. Please use the [Current Password](#rule-current-password) rule instead.\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1329
# File: docs/master/validation.md, line: 1312
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-present\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1329
# File: docs/master/validation.md, line: 1312
#. type: Title ####
#, no-wrap
msgid "present"
msgstr ""

# File: docs/8.x/validation.md, line: 1332
# File: docs/master/validation.md, line: 1315
#. type: Plain text
msgid "The field under validation must be present in the input data but can be empty."
msgstr ""

# File: docs/8.x/validation.md, line: 1334
# File: docs/master/validation.md, line: 1317
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-prohibited\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1334
# File: docs/master/validation.md, line: 1317
#. type: Title ####
#, no-wrap
msgid "prohibited"
msgstr ""

# File: docs/8.x/validation.md, line: 1337
# File: docs/master/validation.md, line: 1320
#. type: Plain text
msgid "The field under validation must be empty or not present."
msgstr ""

# File: docs/8.x/validation.md, line: 1339
# File: docs/master/validation.md, line: 1322
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-prohibited-if\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1339
# File: docs/master/validation.md, line: 1322
#. type: Title ####
#, no-wrap
msgid "prohibited_if:_anotherfield_,_value_,..."
msgstr ""

# File: docs/8.x/validation.md, line: 1342
# File: docs/master/validation.md, line: 1325
#. type: Plain text
msgid "The field under validation must be empty or not present if the _anotherfield_ field is equal to any _value_."
msgstr ""

# File: docs/8.x/validation.md, line: 1344
# File: docs/master/validation.md, line: 1327
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-prohibited-unless\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1344
# File: docs/master/validation.md, line: 1327
#. type: Title ####
#, no-wrap
msgid "prohibited_unless:_anotherfield_,_value_,..."
msgstr ""

# File: docs/8.x/validation.md, line: 1347
# File: docs/master/validation.md, line: 1330
#. type: Plain text
msgid "The field under validation must be empty or not present unless the _anotherfield_ field is equal to any _value_."
msgstr ""

# File: docs/8.x/validation.md, line: 1349
# File: docs/master/validation.md, line: 1332
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-prohibits\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1349
# File: docs/master/validation.md, line: 1332
#. type: Title ####
#, no-wrap
msgid "prohibits:_anotherfield_,..."
msgstr ""

# File: docs/8.x/validation.md, line: 1352
# File: docs/master/validation.md, line: 1335
#. type: Plain text
msgid "If the field under validation is present, no fields in _anotherfield_ can be present, even if empty."
msgstr ""

# File: docs/8.x/validation.md, line: 1354
# File: docs/master/validation.md, line: 1337
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-regex\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1354
# File: docs/master/validation.md, line: 1337
#. type: Title ####
#, no-wrap
msgid "regex:_pattern_"
msgstr ""

# File: docs/8.x/validation.md, line: 1357
# File: docs/master/validation.md, line: 1340
#. type: Plain text
msgid "The field under validation must match the given regular expression."
msgstr ""

# File: docs/8.x/validation.md, line: 1359
# File: docs/master/validation.md, line: 1342
#. type: Plain text
#, no-wrap
msgid "Internally, this rule uses the PHP `preg_match` function. The pattern specified should obey the same formatting required by `preg_match` and thus also include valid delimiters. For example: `'email' => 'regex:/^.+@.+$/i'`.\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1361
# File: docs/master/validation.md, line: 1344
#. type: Plain text
#, no-wrap
msgid "> {note} When using the `regex` / `not_regex` patterns, it may be necessary to specify rules in an array instead of using `|` delimiters, especially if the regular expression contains a `|` character.\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1363
# File: docs/master/validation.md, line: 1346
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-required\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1363
# File: docs/master/validation.md, line: 1346
#. type: Title ####
#, no-wrap
msgid "required"
msgstr ""

# File: docs/8.x/validation.md, line: 1366
# File: docs/master/validation.md, line: 1349
#. type: Plain text
msgid "The field under validation must be present in the input data and not empty. A field is considered \"empty\" if one of the following conditions are true:"
msgstr ""

# File: docs/8.x/validation.md, line: 1368
# File: docs/master/validation.md, line: 1351
#. type: Plain text
#, no-wrap
msgid "<div class=\"content-list\" markdown=\"1\">\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1373
# File: docs/master/validation.md, line: 1356
#. type: Plain text
msgid "- The value is `null`.  - The value is an empty string.  - The value is an empty array or empty `Countable` object.  - The value is an uploaded file with no path."
msgstr ""

# File: docs/8.x/validation.md, line: 1377
# File: docs/master/validation.md, line: 1360
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-required-if\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1377
# File: docs/master/validation.md, line: 1360
#. type: Title ####
#, no-wrap
msgid "required_if:_anotherfield_,_value_,..."
msgstr ""

# File: docs/8.x/validation.md, line: 1380
# File: docs/master/validation.md, line: 1363
#. type: Plain text
msgid "The field under validation must be present and not empty if the _anotherfield_ field is equal to any _value_."
msgstr ""

# File: docs/8.x/validation.md, line: 1382
# File: docs/master/validation.md, line: 1365
#. type: Plain text
msgid "If you would like to construct a more complex condition for the `required_if` rule, you may use the `Rule::requiredIf` method. This method accepts a boolean or a closure. When passed a closure, the closure should return `true` or `false` to indicate if the field under validation is required:"
msgstr ""

# File: docs/8.x/validation.md, line: 1389
# File: docs/master/validation.md, line: 1372
#. type: Plain text
#, no-wrap
msgid "    Validator::make($request->all(), [\n"
"        'role_id' => Rule::requiredIf($request->user()->is_admin),\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1395
# File: docs/master/validation.md, line: 1378
#. type: Plain text
#, no-wrap
msgid "    Validator::make($request->all(), [\n"
"        'role_id' => Rule::requiredIf(function () use ($request) {\n"
"            return $request->user()->is_admin;\n"
"        }),\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1397
# File: docs/master/validation.md, line: 1380
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-required-unless\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1397
# File: docs/master/validation.md, line: 1380
#. type: Title ####
#, no-wrap
msgid "required_unless:_anotherfield_,_value_,..."
msgstr ""

# File: docs/8.x/validation.md, line: 1400
# File: docs/master/validation.md, line: 1383
#. type: Plain text
msgid "The field under validation must be present and not empty unless the _anotherfield_ field is equal to any _value_. This also means _anotherfield_ must be present in the request data unless _value_ is `null`. If _value_ is `null` (`required_unless:name,null`), the field under validation will be required unless the comparison field is `null` or the comparison field is missing from the request data."
msgstr ""

# File: docs/8.x/validation.md, line: 1402
# File: docs/master/validation.md, line: 1385
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-required-with\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1402
# File: docs/master/validation.md, line: 1385
#. type: Title ####
#, no-wrap
msgid "required_with:_foo_,_bar_,..."
msgstr ""

# File: docs/8.x/validation.md, line: 1405
# File: docs/master/validation.md, line: 1388
#. type: Plain text
msgid "The field under validation must be present and not empty _only if_ any of the other specified fields are present and not empty."
msgstr ""

# File: docs/8.x/validation.md, line: 1407
# File: docs/master/validation.md, line: 1390
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-required-with-all\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1407
# File: docs/master/validation.md, line: 1390
#. type: Title ####
#, no-wrap
msgid "required_with_all:_foo_,_bar_,..."
msgstr ""

# File: docs/8.x/validation.md, line: 1410
# File: docs/master/validation.md, line: 1393
#. type: Plain text
msgid "The field under validation must be present and not empty _only if_ all of the other specified fields are present and not empty."
msgstr ""

# File: docs/8.x/validation.md, line: 1412
# File: docs/master/validation.md, line: 1395
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-required-without\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1412
# File: docs/master/validation.md, line: 1395
#. type: Title ####
#, no-wrap
msgid "required_without:_foo_,_bar_,..."
msgstr ""

# File: docs/8.x/validation.md, line: 1415
# File: docs/master/validation.md, line: 1398
#. type: Plain text
msgid "The field under validation must be present and not empty _only when_ any of the other specified fields are empty or not present."
msgstr ""

# File: docs/8.x/validation.md, line: 1417
# File: docs/master/validation.md, line: 1400
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-required-without-all\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1417
# File: docs/master/validation.md, line: 1400
#. type: Title ####
#, no-wrap
msgid "required_without_all:_foo_,_bar_,..."
msgstr ""

# File: docs/8.x/validation.md, line: 1420
# File: docs/master/validation.md, line: 1403
#. type: Plain text
msgid "The field under validation must be present and not empty _only when_ all of the other specified fields are empty or not present."
msgstr ""

# File: docs/8.x/validation.md, line: 1422
# File: docs/master/validation.md, line: 1405
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-same\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1422
# File: docs/master/validation.md, line: 1405
#. type: Title ####
#, no-wrap
msgid "same:_field_"
msgstr ""

# File: docs/8.x/validation.md, line: 1425
# File: docs/master/validation.md, line: 1408
#. type: Plain text
msgid "The given _field_ must match the field under validation."
msgstr ""

# File: docs/8.x/validation.md, line: 1427
# File: docs/master/validation.md, line: 1410
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-size\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1427
# File: docs/master/validation.md, line: 1410
#. type: Title ####
#, no-wrap
msgid "size:_value_"
msgstr ""

# File: docs/8.x/validation.md, line: 1430
# File: docs/master/validation.md, line: 1413
#. type: Plain text
msgid "The field under validation must have a size matching the given _value_. For string data, _value_ corresponds to the number of characters. For numeric data, _value_ corresponds to a given integer value (the attribute must also have the `numeric` or `integer` rule). For an array, _size_ corresponds to the `count` of the array. For files, _size_ corresponds to the file size in kilobytes. Let's look at some examples:"
msgstr ""

# File: docs/8.x/validation.md, line: 1433
# File: docs/master/validation.md, line: 1416
#. type: Plain text
#, no-wrap
msgid "    // Validate that a string is exactly 12 characters long...\n"
"    'title' => 'size:12';\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1436
# File: docs/master/validation.md, line: 1419
#. type: Plain text
#, no-wrap
msgid "    // Validate that a provided integer equals 10...\n"
"    'seats' => 'integer|size:10';\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1439
# File: docs/master/validation.md, line: 1422
#. type: Plain text
#, no-wrap
msgid "    // Validate that an array has exactly 5 elements...\n"
"    'tags' => 'array|size:5';\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1442
# File: docs/master/validation.md, line: 1425
#. type: Plain text
#, no-wrap
msgid "    // Validate that an uploaded file is exactly 512 kilobytes...\n"
"    'image' => 'file|size:512';\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1444
# File: docs/master/validation.md, line: 1427
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-starts-with\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1444
# File: docs/master/validation.md, line: 1427
#. type: Title ####
#, no-wrap
msgid "starts_with:_foo_,_bar_,..."
msgstr ""

# File: docs/8.x/validation.md, line: 1447
# File: docs/master/validation.md, line: 1430
#. type: Plain text
msgid "The field under validation must start with one of the given values."
msgstr ""

# File: docs/8.x/validation.md, line: 1449
# File: docs/master/validation.md, line: 1432
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-string\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1449
# File: docs/master/validation.md, line: 1432
#. type: Title ####
#, no-wrap
msgid "string"
msgstr ""

# File: docs/8.x/validation.md, line: 1452
# File: docs/master/validation.md, line: 1435
#. type: Plain text
msgid "The field under validation must be a string. If you would like to allow the field to also be `null`, you should assign the `nullable` rule to the field."
msgstr ""

# File: docs/8.x/validation.md, line: 1454
# File: docs/master/validation.md, line: 1437
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-timezone\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1454
# File: docs/master/validation.md, line: 1437
#. type: Title ####
#, no-wrap
msgid "timezone"
msgstr ""

# File: docs/8.x/validation.md, line: 1457
# File: docs/master/validation.md, line: 1440
#. type: Plain text
msgid "The field under validation must be a valid timezone identifier according to the `timezone_identifiers_list` PHP function."
msgstr ""

# File: docs/8.x/validation.md, line: 1459
# File: docs/master/validation.md, line: 1442
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-unique\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1459
# File: docs/master/validation.md, line: 1442
#. type: Title ####
#, no-wrap
msgid "unique:_table_,_column_"
msgstr ""

# File: docs/8.x/validation.md, line: 1462
# File: docs/master/validation.md, line: 1445
#. type: Plain text
msgid "The field under validation must not exist within the given database table."
msgstr ""

# File: docs/8.x/validation.md, line: 1464
# File: docs/master/validation.md, line: 1447
#. type: Plain text
#, no-wrap
msgid "**Specifying A Custom Table / Column Name:**\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1468
# File: docs/master/validation.md, line: 1451
#. type: Plain text
#, no-wrap
msgid "    'email' => 'unique:App\\Models\\User,email_address'\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1470
# File: docs/master/validation.md, line: 1453
#. type: Plain text
msgid "The `column` option may be used to specify the field's corresponding database column. If the `column` option is not specified, the name of the field under validation will be used."
msgstr ""

# File: docs/8.x/validation.md, line: 1472
# File: docs/master/validation.md, line: 1455
#. type: Plain text
#, no-wrap
msgid "    'email' => 'unique:users,email_address'\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1474
# File: docs/master/validation.md, line: 1457
#. type: Plain text
#, no-wrap
msgid "**Specifying A Custom Database Connection**\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1476
# File: docs/master/validation.md, line: 1459
#. type: Plain text
msgid "Occasionally, you may need to set a custom connection for database queries made by the Validator. To accomplish this, you may prepend the connection name to the table name:"
msgstr ""

# File: docs/8.x/validation.md, line: 1478
# File: docs/master/validation.md, line: 1461
#. type: Plain text
#, no-wrap
msgid "    'email' => 'unique:connection.users,email_address'\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1480
# File: docs/master/validation.md, line: 1463
#. type: Plain text
#, no-wrap
msgid "**Forcing A Unique Rule To Ignore A Given ID:**\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1482
# File: docs/master/validation.md, line: 1465
#. type: Plain text
msgid "Sometimes, you may wish to ignore a given ID during unique validation. For example, consider an \"update profile\" screen that includes the user's name, email address, and location. You will probably want to verify that the email address is unique. However, if the user only changes the name field and not the email field, you do not want a validation error to be thrown because the user is already the owner of the email address in question."
msgstr ""

# File: docs/8.x/validation.md, line: 1484
# File: docs/master/validation.md, line: 1467
#. type: Plain text
msgid "To instruct the validator to ignore the user's ID, we'll use the `Rule` class to fluently define the rule. In this example, we'll also specify the validation rules as an array instead of using the `|` character to delimit the rules:"
msgstr ""

# File: docs/8.x/validation.md, line: 1494
# File: docs/master/validation.md, line: 1477
#. type: Plain text
#, no-wrap
msgid "    Validator::make($data, [\n"
"        'email' => [\n"
"            'required',\n"
"            Rule::unique('users')->ignore($user->id),\n"
"        ],\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1496
# File: docs/master/validation.md, line: 1479
#. type: Plain text
#, no-wrap
msgid "> {note} You should never pass any user controlled request input into the `ignore` method. Instead, you should only pass a system generated unique ID such as an auto-incrementing ID or UUID from an Eloquent model instance. Otherwise, your application will be vulnerable to an SQL injection attack.\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1498
# File: docs/master/validation.md, line: 1481
#. type: Plain text
msgid "Instead of passing the model key's value to the `ignore` method, you may also pass the entire model instance. Laravel will automatically extract the key from the model:"
msgstr ""

# File: docs/8.x/validation.md, line: 1500
# File: docs/master/validation.md, line: 1483
#. type: Plain text
#, no-wrap
msgid "    Rule::unique('users')->ignore($user)\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1502
# File: docs/master/validation.md, line: 1485
#. type: Plain text
msgid "If your table uses a primary key column name other than `id`, you may specify the name of the column when calling the `ignore` method:"
msgstr ""

# File: docs/8.x/validation.md, line: 1504
# File: docs/master/validation.md, line: 1487
#. type: Plain text
#, no-wrap
msgid "    Rule::unique('users')->ignore($user->id, 'user_id')\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1506
# File: docs/master/validation.md, line: 1489
#. type: Plain text
msgid "By default, the `unique` rule will check the uniqueness of the column matching the name of the attribute being validated. However, you may pass a different column name as the second argument to the `unique` method:"
msgstr ""

# File: docs/8.x/validation.md, line: 1508
# File: docs/master/validation.md, line: 1491
#. type: Plain text
#, no-wrap
msgid "    Rule::unique('users', 'email_address')->ignore($user->id),\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1510
# File: docs/master/validation.md, line: 1493
#. type: Plain text
#, no-wrap
msgid "**Adding Additional Where Clauses:**\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1512
# File: docs/master/validation.md, line: 1495
#. type: Plain text
msgid "You may specify additional query conditions by customizing the query using the `where` method. For example, let's add a query condition that scopes the query to only search records that have an `account_id` column value of `1`:"
msgstr ""

# File: docs/8.x/validation.md, line: 1516
# File: docs/master/validation.md, line: 1499
#. type: Plain text
#, no-wrap
msgid "    'email' => Rule::unique('users')->where(function ($query) {\n"
"        return $query->where('account_id', 1);\n"
"    })\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1518
# File: docs/master/validation.md, line: 1501
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-url\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1518
# File: docs/master/validation.md, line: 1501
#. type: Title ####
#, no-wrap
msgid "url"
msgstr ""

# File: docs/8.x/validation.md, line: 1521
# File: docs/master/validation.md, line: 1504
#. type: Plain text
msgid "The field under validation must be a valid URL."
msgstr ""

# File: docs/8.x/validation.md, line: 1523
# File: docs/master/validation.md, line: 1506
#. type: Plain text
#, no-wrap
msgid "<a name=\"rule-uuid\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1523
# File: docs/master/validation.md, line: 1506
#. type: Title ####
#, no-wrap
msgid "uuid"
msgstr ""

# File: docs/8.x/validation.md, line: 1526
# File: docs/master/validation.md, line: 1509
#. type: Plain text
msgid "The field under validation must be a valid RFC 4122 (version 1, 3, 4, or 5) universally unique identifier (UUID)."
msgstr ""

# File: docs/8.x/validation.md, line: 1528
# File: docs/master/validation.md, line: 1511
#. type: Plain text
#, no-wrap
msgid "<a name=\"conditionally-adding-rules\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1528
# File: docs/master/validation.md, line: 1511
#. type: Title ##
#, no-wrap
msgid "Conditionally Adding Rules"
msgstr ""

# File: docs/8.x/validation.md, line: 1531
# File: docs/master/validation.md, line: 1514
#. type: Plain text
#, no-wrap
msgid "<a name=\"skipping-validation-when-fields-have-certain-values\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1531
# File: docs/master/validation.md, line: 1514
#. type: Title ####
#, no-wrap
msgid "Skipping Validation When Fields Have Certain Values"
msgstr ""

# File: docs/8.x/validation.md, line: 1534
# File: docs/master/validation.md, line: 1517
#. type: Plain text
msgid "You may occasionally wish to not validate a given field if another field has a given value. You may accomplish this using the `exclude_if` validation rule. In this example, the `appointment_date` and `doctor_name` fields will not be validated if the `has_appointment` field has a value of `false`:"
msgstr ""

# File: docs/8.x/validation.md, line: 1542
# File: docs/master/validation.md, line: 1525
#. type: Plain text
#, no-wrap
msgid "    $validator = Validator::make($data, [\n"
"        'has_appointment' => 'required|boolean',\n"
"        'appointment_date' => 'exclude_if:has_appointment,false|required|date',\n"
"        'doctor_name' => 'exclude_if:has_appointment,false|required|string',\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1544
# File: docs/master/validation.md, line: 1527
#. type: Plain text
msgid "Alternatively, you may use the `exclude_unless` rule to not validate a given field unless another field has a given value:"
msgstr ""

# File: docs/8.x/validation.md, line: 1550
# File: docs/master/validation.md, line: 1533
#. type: Plain text
#, no-wrap
msgid "    $validator = Validator::make($data, [\n"
"        'has_appointment' => 'required|boolean',\n"
"        'appointment_date' => 'exclude_unless:has_appointment,true|required|date',\n"
"        'doctor_name' => 'exclude_unless:has_appointment,true|required|string',\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1552
# File: docs/master/validation.md, line: 1535
#. type: Plain text
#, no-wrap
msgid "<a name=\"validating-when-present\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1552
# File: docs/master/validation.md, line: 1535
#. type: Title ####
#, no-wrap
msgid "Validating When Present"
msgstr ""

# File: docs/8.x/validation.md, line: 1555
# File: docs/master/validation.md, line: 1538
#. type: Plain text
msgid "In some situations, you may wish to run validation checks against a field **only** if that field is present in the data being validated. To quickly accomplish this, add the `sometimes` rule to your rule list:"
msgstr ""

# File: docs/8.x/validation.md, line: 1559
# File: docs/master/validation.md, line: 1542
#. type: Plain text
#, no-wrap
msgid "    $v = Validator::make($data, [\n"
"        'email' => 'sometimes|required|email',\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1561
# File: docs/master/validation.md, line: 1544
#. type: Plain text
msgid "In the example above, the `email` field will only be validated if it is present in the `$data` array."
msgstr ""

# File: docs/8.x/validation.md, line: 1563
# File: docs/master/validation.md, line: 1546
#. type: Plain text
#, no-wrap
msgid "> {tip} If you are attempting to validate a field that should always be present but may be empty, check out [this note on optional fields](#a-note-on-optional-fields).\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1565
# File: docs/master/validation.md, line: 1548
#. type: Plain text
#, no-wrap
msgid "<a name=\"complex-conditional-validation\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1565
# File: docs/master/validation.md, line: 1548
#. type: Title ####
#, no-wrap
msgid "Complex Conditional Validation"
msgstr ""

# File: docs/8.x/validation.md, line: 1568
# File: docs/master/validation.md, line: 1551
#. type: Plain text
msgid "Sometimes you may wish to add validation rules based on more complex conditional logic. For example, you may wish to require a given field only if another field has a greater value than 100. Or, you may need two fields to have a given value only when another field is present. Adding these validation rules doesn't have to be a pain. First, create a `Validator` instance with your _static rules_ that never change:"
msgstr ""

# File: docs/8.x/validation.md, line: 1575
# File: docs/master/validation.md, line: 1558
#. type: Plain text
#, no-wrap
msgid "    $validator = Validator::make($request->all(), [\n"
"        'email' => 'required|email',\n"
"        'games' => 'required|numeric',\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1577
# File: docs/master/validation.md, line: 1560
#. type: Plain text
msgid "Let's assume our web application is for game collectors. If a game collector registers with our application and they own more than 100 games, we want them to explain why they own so many games. For example, perhaps they run a game resale shop, or maybe they just enjoy collecting games. To conditionally add this requirement, we can use the `sometimes` method on the `Validator` instance."
msgstr ""

# File: docs/8.x/validation.md, line: 1581
# File: docs/master/validation.md, line: 1564
#. type: Plain text
#, no-wrap
msgid "    $validator->sometimes('reason', 'required|max:500', function ($input) {\n"
"        return $input->games >= 100;\n"
"    });\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1583
# File: docs/master/validation.md, line: 1566
#. type: Plain text
msgid "The first argument passed to the `sometimes` method is the name of the field we are conditionally validating. The second argument is a list of the rules we want to add. If the closure passed as the third argument returns `true`, the rules will be added. This method makes it a breeze to build complex conditional validations. You may even add conditional validations for several fields at once:"
msgstr ""

# File: docs/8.x/validation.md, line: 1587
# File: docs/master/validation.md, line: 1570
#. type: Plain text
#, no-wrap
msgid "    $validator->sometimes(['reason', 'cost'], 'required', function ($input) {\n"
"        return $input->games >= 100;\n"
"    });\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1589
# File: docs/master/validation.md, line: 1572
#. type: Plain text
#, no-wrap
msgid "> {tip} The `$input` parameter passed to your closure will be an instance of `Illuminate\\Support\\Fluent` and may be used to access your input and files under validation.\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1591
# File: docs/master/validation.md, line: 1574
#. type: Plain text
#, no-wrap
msgid "<a name=\"complex-conditional-array-validation\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1591
# File: docs/master/validation.md, line: 1574
#. type: Title ####
#, no-wrap
msgid "Complex Conditional Array Validation"
msgstr ""

# File: docs/8.x/validation.md, line: 1594
# File: docs/master/validation.md, line: 1577
#. type: Plain text
msgid "Sometimes you may want to validate a field based on another field in the same nested array whose index you do not know. In these situations, you may allow your closure to receive a second argument which will be the current individual item in the array being validated:"
msgstr ""

# File: docs/8.x/validation.md, line: 1607
# File: docs/master/validation.md, line: 1590
#. type: Plain text
#, no-wrap
msgid "    $input = [\n"
"        'channels' => [\n"
"            [\n"
"                'type' => 'email',\n"
"                'address' => 'abigail@example.com',\n"
"            ],\n"
"            [\n"
"                'type' => 'url',\n"
"                'address' => 'https://example.com',\n"
"            ],\n"
"        ],\n"
"    ];\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1611
# File: docs/master/validation.md, line: 1594
#. type: Plain text
#, no-wrap
msgid "    $validator->sometimes('channels.*.address', 'email', function ($input, $item) {\n"
"        return $item->type === 'email';\n"
"    });\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1615
# File: docs/master/validation.md, line: 1598
#. type: Plain text
#, no-wrap
msgid "    $validator->sometimes('channels.*.address', 'url', function ($input, $item) {\n"
"        return $item->type !== 'email';\n"
"    });\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1617
# File: docs/master/validation.md, line: 1600
#. type: Plain text
msgid "Like the `$input` parameter passed to the closure, the `$item` parameter is an instance of `Illuminate\\Support\\Fluent` when the attribute data is an array; otherwise, it is a string."
msgstr ""

# File: docs/8.x/validation.md, line: 1619
# File: docs/master/validation.md, line: 1602
#. type: Plain text
#, no-wrap
msgid "<a name=\"validating-arrays\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1619
# File: docs/master/validation.md, line: 1602
#. type: Title ##
#, no-wrap
msgid "Validating Arrays"
msgstr ""

# File: docs/8.x/validation.md, line: 1622
# File: docs/master/validation.md, line: 1605
#. type: Plain text
msgid "As discussed in the [`array` validation rule documentation](#rule-array), the `array` rule accepts a list of allowed array keys. If any additional keys are present within the array, validation will fail:"
msgstr ""

# File: docs/8.x/validation.md, line: 1640
#. type: Plain text
#, no-wrap
msgid "<a name=\"excluding-unvalidated-array-keys\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1640
#. type: Title ###
#, no-wrap
msgid "Excluding Unvalidated Array Keys"
msgstr ""

# File: docs/8.x/validation.md, line: 1659
# File: docs/master/validation.md, line: 1623
#. type: Plain text
#, no-wrap
msgid "<a name=\"validating-nested-array-input\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1659
# File: docs/master/validation.md, line: 1623
#. type: Title ###
#, no-wrap
msgid "Validating Nested Array Input"
msgstr ""

# File: docs/8.x/validation.md, line: 1662
# File: docs/master/validation.md, line: 1626
#. type: Plain text
msgid "Validating nested array based form input fields doesn't have to be a pain. You may use \"dot notation\" to validate attributes within an array. For example, if the incoming HTTP request contains a `photos[profile]` field, you may validate it like so:"
msgstr ""

# File: docs/8.x/validation.md, line: 1668
# File: docs/master/validation.md, line: 1632
#. type: Plain text
#, no-wrap
msgid "    $validator = Validator::make($request->all(), [\n"
"        'photos.profile' => 'required|image',\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1670
# File: docs/master/validation.md, line: 1634
#. type: Plain text
msgid "You may also validate each element of an array. For example, to validate that each email in a given array input field is unique, you may do the following:"
msgstr ""

# File: docs/8.x/validation.md, line: 1675
# File: docs/master/validation.md, line: 1639
#. type: Plain text
#, no-wrap
msgid "    $validator = Validator::make($request->all(), [\n"
"        'person.*.email' => 'email|unique:users',\n"
"        'person.*.first_name' => 'required_with:person.*.last_name',\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1677
# File: docs/master/validation.md, line: 1641
#. type: Plain text
msgid "Likewise, you may use the `*` character when specifying [custom validation messages in your language files](#custom-messages-for-specific-attributes), making it a breeze to use a single validation message for array based fields:"
msgstr ""

# File: docs/8.x/validation.md, line: 1683
# File: docs/master/validation.md, line: 1647
#. type: Plain text
#, no-wrap
msgid "    'custom' => [\n"
"        'person.*.email' => [\n"
"            'unique' => 'Each person must have a unique email address',\n"
"        ]\n"
"    ],\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1685
# File: docs/master/validation.md, line: 1667
#. type: Plain text
#, no-wrap
msgid "<a name=\"validating-passwords\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1685
# File: docs/master/validation.md, line: 1667
#. type: Title ##
#, no-wrap
msgid "Validating Passwords"
msgstr ""

# File: docs/8.x/validation.md, line: 1688
# File: docs/master/validation.md, line: 1670
#. type: Plain text
msgid "To ensure that passwords have an adequate level of complexity, you may use Laravel's `Password` rule object:"
msgstr ""

# File: docs/8.x/validation.md, line: 1691
# File: docs/master/validation.md, line: 1673
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Support\\Facades\\Validator;\n"
"    use Illuminate\\Validation\\Rules\\Password;\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1695
# File: docs/master/validation.md, line: 1677
#. type: Plain text
#, no-wrap
msgid "    $validator = Validator::make($request->all(), [\n"
"        'password' => ['required', 'confirmed', Password::min(8)],\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1697
# File: docs/master/validation.md, line: 1679
#. type: Plain text
msgid "The `Password` rule object allows you to easily customize the password complexity requirements for your application, such as specifying that passwords require at least one letter, number, symbol, or characters with mixed casing:"
msgstr ""

# File: docs/8.x/validation.md, line: 1700
# File: docs/master/validation.md, line: 1682
#. type: Plain text
#, no-wrap
msgid "    // Require at least 8 characters...\n"
"    Password::min(8)\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1703
# File: docs/master/validation.md, line: 1685
#. type: Plain text
#, no-wrap
msgid "    // Require at least one letter...\n"
"    Password::min(8)->letters()\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1706
# File: docs/master/validation.md, line: 1688
#. type: Plain text
#, no-wrap
msgid "    // Require at least one uppercase and one lowercase letter...\n"
"    Password::min(8)->mixedCase()\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1709
# File: docs/master/validation.md, line: 1691
#. type: Plain text
#, no-wrap
msgid "    // Require at least one number...\n"
"    Password::min(8)->numbers()\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1712
# File: docs/master/validation.md, line: 1694
#. type: Plain text
#, no-wrap
msgid "    // Require at least one symbol...\n"
"    Password::min(8)->symbols()\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1714
# File: docs/master/validation.md, line: 1696
#. type: Plain text
msgid "In addition, you may ensure that a password has not been compromised in a public password data breach leak using the `uncompromised` method:"
msgstr ""

# File: docs/8.x/validation.md, line: 1716
# File: docs/master/validation.md, line: 1698
#. type: Plain text
#, no-wrap
msgid "    Password::min(8)->uncompromised()\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1718
# File: docs/master/validation.md, line: 1700
#. type: Plain text
msgid "Internally, the `Password` rule object uses the [k-Anonymity](https://en.wikipedia.org/wiki/K-anonymity) model to determine if a password has been leaked via the [haveibeenpwned.com](https://haveibeenpwned.com) service without sacrificing the user's privacy or security."
msgstr ""

# File: docs/8.x/validation.md, line: 1720
# File: docs/master/validation.md, line: 1702
#. type: Plain text
msgid "By default, if a password appears at least once in a data leak, it will be considered compromised. You can customize this threshold using the first argument of the `uncompromised` method:"
msgstr ""

# File: docs/8.x/validation.md, line: 1723
# File: docs/master/validation.md, line: 1705
#. type: Plain text
#, no-wrap
msgid "    // Ensure the password appears less than 3 times in the same data leak...\n"
"    Password::min(8)->uncompromised(3);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1725
# File: docs/master/validation.md, line: 1707
#. type: Plain text
msgid "Of course, you may chain all the methods in the examples above:"
msgstr ""

# File: docs/8.x/validation.md, line: 1732
# File: docs/master/validation.md, line: 1714
#. type: Plain text
#, no-wrap
msgid "    Password::min(8)\n"
"        ->letters()\n"
"        ->mixedCase()\n"
"        ->numbers()\n"
"        ->symbols()\n"
"        ->uncompromised()\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1734
# File: docs/master/validation.md, line: 1716
#. type: Plain text
#, no-wrap
msgid "<a name=\"defining-default-password-rules\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1734
# File: docs/master/validation.md, line: 1716
#. type: Title ####
#, no-wrap
msgid "Defining Default Password Rules"
msgstr ""

# File: docs/8.x/validation.md, line: 1737
# File: docs/master/validation.md, line: 1719
#. type: Plain text
msgid "You may find it convenient to specify the default validation rules for passwords in a single location of your application. You can easily accomplish this using the `Password::defaults` method, which accepts a closure. The closure given to the `defaults` method should return the default configuration of the Password rule. Typically, the `defaults` rule should be called within the `boot` method of one of your application's service providers:"
msgstr ""

# File: docs/8.x/validation.md, line: 1738
# File: docs/master/validation.md, line: 1720
#. type: Plain text
#, no-wrap
msgid "use Illuminate\\Validation\\Rules\\Password;\n\n"
"/**\n"
" * Bootstrap any application services.\n"
" *\n"
" * @return void\n"
" */\n"
"public function boot()\n"
"{\n"
"    Password::defaults(function () {\n"
"        $rule = Password::min(8);\n\n"
"        return $this->app->isProduction()\n"
"                    ? $rule->mixedCase()->uncompromised()\n"
"                    : $rule;\n"
"    });\n"
"}\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1759
# File: docs/master/validation.md, line: 1741
#. type: Plain text
msgid "Then, when you would like to apply the default rules to a particular password undergoing validation, you may invoke the `defaults` method with no arguments:"
msgstr ""

# File: docs/8.x/validation.md, line: 1761
# File: docs/master/validation.md, line: 1743
#. type: Plain text
#, no-wrap
msgid "    'password' => ['required', Password::defaults()],\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1763
# File: docs/master/validation.md, line: 1745
#. type: Plain text
msgid "Occasionally, you may want to attach additional validation rules to your default password validation rules. You may use the `rules` method to accomplish this:"
msgstr ""

# File: docs/8.x/validation.md, line: 1765
# File: docs/master/validation.md, line: 1747
#. type: Plain text
#, no-wrap
msgid "    use App\\Rules\\ZxcvbnRule;\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1768
# File: docs/master/validation.md, line: 1750
#. type: Plain text
#, no-wrap
msgid "    Password::defaults(function () {\n"
"        $rule = Password::min(8)->rules([new ZxcvbnRule]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1771
# File: docs/master/validation.md, line: 1753
#. type: Plain text
#, no-wrap
msgid "        // ...\n"
"    });\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1773
# File: docs/master/validation.md, line: 1755
#. type: Plain text
#, no-wrap
msgid "<a name=\"custom-validation-rules\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1773
# File: docs/master/validation.md, line: 1755
#. type: Title ##
#, no-wrap
msgid "Custom Validation Rules"
msgstr ""

# File: docs/8.x/validation.md, line: 1776
# File: docs/master/validation.md, line: 1758
#. type: Plain text
#, no-wrap
msgid "<a name=\"using-rule-objects\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1776
# File: docs/master/validation.md, line: 1758
#. type: Title ###
#, no-wrap
msgid "Using Rule Objects"
msgstr ""

# File: docs/8.x/validation.md, line: 1779
# File: docs/master/validation.md, line: 1761
#. type: Plain text
msgid "Laravel provides a variety of helpful validation rules; however, you may wish to specify some of your own. One method of registering custom validation rules is using rule objects. To generate a new rule object, you may use the `make:rule` Artisan command. Let's use this command to generate a rule that verifies a string is uppercase. Laravel will place the new rule in the `app/Rules` directory. If this directory does not exist, Laravel will create it when you execute the Artisan command to create your rule:"
msgstr ""

# File: docs/8.x/validation.md, line: 1781
# File: docs/master/validation.md, line: 1763
#. type: Plain text
#, no-wrap
msgid "    php artisan make:rule Uppercase\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1783
# File: docs/master/validation.md, line: 1765
#. type: Plain text
msgid "Once the rule has been created, we are ready to define its behavior. A rule object contains two methods: `passes` and `message`. The `passes` method receives the attribute value and name, and should return `true` or `false` depending on whether the attribute value is valid or not. The `message` method should return the validation error message that should be used when validation fails:"
msgstr ""

# File: docs/8.x/validation.md, line: 1787
# File: docs/8.x/validation.md, line: 1842
# File: docs/8.x/validation.md, line: 1876
# File: docs/master/validation.md, line: 1769
# File: docs/master/validation.md, line: 1824
# File: docs/master/validation.md, line: 1858
#. type: Plain text
#, no-wrap
msgid "    namespace App\\Rules;\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1789
# File: docs/master/validation.md, line: 1771
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Contracts\\Validation\\Rule;\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1803
# File: docs/master/validation.md, line: 1785
#. type: Plain text
#, no-wrap
msgid "    class Uppercase implements Rule\n"
"    {\n"
"        /**\n"
"         * Determine if the validation rule passes.\n"
"         *\n"
"         * @param  string  $attribute\n"
"         * @param  mixed  $value\n"
"         * @return bool\n"
"         */\n"
"        public function passes($attribute, $value)\n"
"        {\n"
"            return strtoupper($value) === $value;\n"
"        }\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1814
# File: docs/master/validation.md, line: 1796
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * Get the validation error message.\n"
"         *\n"
"         * @return string\n"
"         */\n"
"        public function message()\n"
"        {\n"
"            return 'The :attribute must be uppercase.';\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1816
# File: docs/master/validation.md, line: 1798
#. type: Plain text
msgid "You may call the `trans` helper from your `message` method if you would like to return an error message from your translation files:"
msgstr ""

# File: docs/8.x/validation.md, line: 1826
# File: docs/master/validation.md, line: 1808
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the validation error message.\n"
"     *\n"
"     * @return string\n"
"     */\n"
"    public function message()\n"
"    {\n"
"        return trans('validation.uppercase');\n"
"    }\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1828
# File: docs/master/validation.md, line: 1810
#. type: Plain text
msgid "Once the rule has been defined, you may attach it to a validator by passing an instance of the rule object with your other validation rules:"
msgstr ""

# File: docs/8.x/validation.md, line: 1830
# File: docs/master/validation.md, line: 1812
#. type: Plain text
#, no-wrap
msgid "    use App\\Rules\\Uppercase;\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1834
# File: docs/master/validation.md, line: 1816
#. type: Plain text
#, no-wrap
msgid "    $request->validate([\n"
"        'name' => ['required', 'string', new Uppercase],\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1835
# File: docs/master/validation.md, line: 1817
#. type: Title ####
#, no-wrap
msgid "Accessing Additional Data"
msgstr ""

# File: docs/8.x/validation.md, line: 1838
# File: docs/master/validation.md, line: 1820
#. type: Plain text
msgid "If your custom validation rule class needs to access all of the other data undergoing validation, your rule class may implement the `Illuminate\\Contracts\\Validation\\DataAwareRule` interface. This interface requires your class to define a `setData` method. This method will automatically be invoked by Laravel (before validation proceeds) with all of the data under validation:"
msgstr ""

# File: docs/8.x/validation.md, line: 1845
# File: docs/master/validation.md, line: 1827
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Contracts\\Validation\\Rule;\n"
"    use Illuminate\\Contracts\\Validation\\DataAwareRule;\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1854
# File: docs/master/validation.md, line: 1836
#. type: Plain text
#, no-wrap
msgid "    class Uppercase implements Rule, DataAwareRule\n"
"    {\n"
"        /**\n"
"         * All of the data under validation.\n"
"         *\n"
"         * @var array\n"
"         */\n"
"        protected $data = [];\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1856
# File: docs/8.x/validation.md, line: 1890
# File: docs/master/validation.md, line: 1838
# File: docs/master/validation.md, line: 1872
#. type: Plain text
#, no-wrap
msgid "        // ...\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1866
# File: docs/master/validation.md, line: 1848
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * Set the data under validation.\n"
"         *\n"
"         * @param  array  $data\n"
"         * @return $this\n"
"         */\n"
"        public function setData($data)\n"
"        {\n"
"            $this->data = $data;\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1870
# File: docs/8.x/validation.md, line: 1904
# File: docs/master/validation.md, line: 1852
# File: docs/master/validation.md, line: 1886
#. type: Plain text
#, no-wrap
msgid "            return $this;\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1872
# File: docs/master/validation.md, line: 1854
#. type: Plain text
msgid "Or, if your validation rule requires access to the validator instance performing the validation, you may implement the `ValidatorAwareRule` interface:"
msgstr ""

# File: docs/8.x/validation.md, line: 1879
# File: docs/master/validation.md, line: 1861
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Contracts\\Validation\\Rule;\n"
"    use Illuminate\\Contracts\\Validation\\ValidatorAwareRule;\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1888
# File: docs/master/validation.md, line: 1870
#. type: Plain text
#, no-wrap
msgid "    class Uppercase implements Rule, ValidatorAwareRule\n"
"    {\n"
"        /**\n"
"         * The validator instance.\n"
"         *\n"
"         * @var \\Illuminate\\Validation\\Validator\n"
"         */\n"
"        protected $validator;\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1900
# File: docs/master/validation.md, line: 1882
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * Set the current validator.\n"
"         *\n"
"         * @param  \\Illuminate\\Validation\\Validator  $validator\n"
"         * @return $this\n"
"         */\n"
"        public function setValidator($validator)\n"
"        {\n"
"            $this->validator = $validator;\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1906
# File: docs/master/validation.md, line: 1888
#. type: Plain text
#, no-wrap
msgid "<a name=\"using-closures\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1906
# File: docs/master/validation.md, line: 1888
#. type: Title ###
#, no-wrap
msgid "Using Closures"
msgstr ""

# File: docs/8.x/validation.md, line: 1909
# File: docs/master/validation.md, line: 1891
#. type: Plain text
msgid "If you only need the functionality of a custom rule once throughout your application, you may use a closure instead of a rule object. The closure receives the attribute's name, the attribute's value, and a `$fail` callback that should be called if validation fails:"
msgstr ""

# File: docs/8.x/validation.md, line: 1923
# File: docs/master/validation.md, line: 1905
#. type: Plain text
#, no-wrap
msgid "    $validator = Validator::make($request->all(), [\n"
"        'title' => [\n"
"            'required',\n"
"            'max:255',\n"
"            function ($attribute, $value, $fail) {\n"
"                if ($value === 'foo') {\n"
"                    $fail('The '.$attribute.' is invalid.');\n"
"                }\n"
"            },\n"
"        ],\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1925
# File: docs/master/validation.md, line: 1907
#. type: Plain text
#, no-wrap
msgid "<a name=\"implicit-rules\"></a>\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1925
# File: docs/master/validation.md, line: 1907
#. type: Title ###
#, no-wrap
msgid "Implicit Rules"
msgstr ""

# File: docs/8.x/validation.md, line: 1928
# File: docs/master/validation.md, line: 1910
#. type: Plain text
msgid "By default, when an attribute being validated is not present or contains an empty string, normal validation rules, including custom rules, are not run. For example, the [`unique`](#rule-unique) rule will not be run against an empty string:"
msgstr ""

# File: docs/8.x/validation.md, line: 1932
# File: docs/master/validation.md, line: 1914
#. type: Plain text
#, no-wrap
msgid "    $rules = ['name' => 'unique:users,name'];\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1934
# File: docs/master/validation.md, line: 1916
#. type: Plain text
#, no-wrap
msgid "    $input = ['name' => ''];\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1936
# File: docs/master/validation.md, line: 1918
#. type: Plain text
#, no-wrap
msgid "    Validator::make($input, $rules)->passes(); // true\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1938
# File: docs/master/validation.md, line: 1920
#. type: Plain text
msgid "For a custom rule to run even when an attribute is empty, the rule must imply that the attribute is required. To create an \"implicit\" rule, implement the `Illuminate\\Contracts\\Validation\\ImplicitRule` interface. This interface serves as a \"marker interface\" for the validator; therefore, it does not contain any additional methods you need to implement beyond the methods required by the typical `Rule` interface."
msgstr ""

# File: docs/8.x/validation.md, line: 1940
# File: docs/master/validation.md, line: 1922
#. type: Plain text
msgid "To generate a new implicit rule object, you may use the `make:rule` Artisan command with the `--implicit` option :"
msgstr ""

# File: docs/8.x/validation.md, line: 1942
# File: docs/master/validation.md, line: 1924
#. type: Plain text
#, no-wrap
msgid "     php artisan make:rule Uppercase --implicit\n"
msgstr ""

# File: docs/8.x/validation.md, line: 1943
# File: docs/master/validation.md, line: 1925
#. type: Plain text
#, no-wrap
msgid "> {note} An \"implicit\" rule only _implies_ that the attribute is required. Whether it actually invalidates a missing or empty attribute is up to you.\n"
msgstr ""

# File: docs/master/validation.md, line: 35
#. type: Plain text
#, no-wrap
msgid "- [Validation Quickstart](#validation-quickstart)\n"
"    - [Defining The Routes](#quick-defining-the-routes)\n"
"    - [Creating The Controller](#quick-creating-the-controller)\n"
"    - [Writing The Validation Logic](#quick-writing-the-validation-logic)\n"
"    - [Displaying The Validation Errors](#quick-displaying-the-validation-errors)\n"
"    - [Repopulating Forms](#repopulating-forms)\n"
"    - [A Note On Optional Fields](#a-note-on-optional-fields)\n"
"- [Form Request Validation](#form-request-validation)\n"
"    - [Creating Form Requests](#creating-form-requests)\n"
"    - [Authorizing Form Requests](#authorizing-form-requests)\n"
"    - [Customizing The Error Messages](#customizing-the-error-messages)\n"
"    - [Preparing Input For Validation](#preparing-input-for-validation)\n"
"- [Manually Creating Validators](#manually-creating-validators)\n"
"    - [Automatic Redirection](#automatic-redirection)\n"
"    - [Named Error Bags](#named-error-bags)\n"
"    - [Customizing The Error Messages](#manual-customizing-the-error-messages)\n"
"    - [After Validation Hook](#after-validation-hook)\n"
"- [Working With Validated Input](#working-with-validated-input)\n"
"- [Working With Error Messages](#working-with-error-messages)\n"
"    - [Specifying Custom Messages In Language Files](#specifying-custom-messages-in-language-files)\n"
"    - [Specifying Attributes In Language Files](#specifying-attribute-in-language-files)\n"
"    - [Specifying Values In Language Files](#specifying-values-in-language-files)\n"
"- [Available Validation Rules](#available-validation-rules)\n"
"- [Conditionally Adding Rules](#conditionally-adding-rules)\n"
"- [Validating Arrays](#validating-arrays)\n"
"    - [Validating Nested Array Input](#validating-nested-array-input)\n"
"- [Validating Passwords](#validating-passwords)\n"
"- [Custom Validation Rules](#custom-validation-rules)\n"
"    - [Using Rule Objects](#using-rule-objects)\n"
"    - [Using Closures](#using-closures)\n"
"    - [Implicit Rules](#implicit-rules)\n"
msgstr ""

# File: docs/master/validation.md, line: 902
#. type: Plain text
msgid "In general, you should always specify the array keys that are allowed to be present within your array."
msgstr ""

# File: docs/master/validation.md, line: 1649
#. type: Plain text
#, no-wrap
msgid "<a name=\"accessing-nested-array-data\"></a>\n"
msgstr ""

# File: docs/master/validation.md, line: 1649
#. type: Title ####
#, no-wrap
msgid "Accessing Nested Array Data"
msgstr ""

# File: docs/master/validation.md, line: 1652
#. type: Plain text
msgid "Sometimes you may need to access the value for a given nested array element when assigning validation rules to the attribute. You may accomplish this using the `Rule::foreEach` method. The `forEach` method accepts a closure that will be invoked for each iteration of the array attribute under validation and will receive the attribute's value and explicit, fully-expanded attribute name. The closure should return an array of rules to assign to the array element:"
msgstr ""

# File: docs/master/validation.md, line: 1656
#. type: Plain text
#, no-wrap
msgid "    use App\\Rules\\HasPermission;\n"
"    use Illuminate\\Support\\Facades\\Validator;\n"
"    use Illuminate\\Validation\\Rule;\n"
msgstr ""

# File: docs/master/validation.md, line: 1665
#. type: Plain text
#, no-wrap
msgid "    $validator = Validator::make($request->all(), [\n"
"        'companies.*.id' => Rule::forEach(function ($value, $attribute) {\n"
"            return [\n"
"                Rule::exists(Company::class, 'id'),\n"
"                new HasPermission('manage-company', $value),\n"
"            ];\n"
"        }),\n"
"    ]);\n"
msgstr ""

