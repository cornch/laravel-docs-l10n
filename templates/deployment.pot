#
msgid ""
msgstr ""

#: docs/10.x/deployment.md:block 1 (header)
msgid "Deployment"
msgstr ""

#: docs/10.x/deployment.md:block 2 (unordered list)
msgid "[Introduction](#introduction)"
msgstr ""

#: docs/10.x/deployment.md:block 2 (unordered list)
msgid "[Server Requirements](#server-requirements)"
msgstr ""

#: docs/10.x/deployment.md:block 2 (unordered list)
msgid "[Server Configuration](#server-configuration)"
msgstr ""

#: docs/10.x/deployment.md:block 2 (unordered list)
msgid "[Nginx](#nginx)"
msgstr ""

#: docs/10.x/deployment.md:block 2 (unordered list)
msgid "[Optimization](#optimization)"
msgstr ""

#: docs/10.x/deployment.md:block 2 (unordered list)
msgid "[Autoloader Optimization](#autoloader-optimization)"
msgstr ""

#: docs/10.x/deployment.md:block 2 (unordered list)
msgid "[Optimizing Configuration Loading](#optimizing-configuration-loading)"
msgstr ""

#: docs/10.x/deployment.md:block 2 (unordered list)
msgid "[Optimizing Route Loading](#optimizing-route-loading)"
msgstr ""

#: docs/10.x/deployment.md:block 2 (unordered list)
msgid "[Optimizing View Loading](#optimizing-view-loading)"
msgstr ""

#: docs/10.x/deployment.md:block 2 (unordered list)
msgid "[Debug Mode](#debug-mode)"
msgstr ""

#: docs/10.x/deployment.md:block 2 (unordered list)
msgid "[Deploying With Forge / Vapor](#deploying-with-forge-or-vapor)"
msgstr ""

#: docs/10.x/deployment.md:block 4 (header)
msgid "Introduction"
msgstr ""

#: docs/10.x/deployment.md:block 5 (paragraph)
msgid "When you're ready to deploy your Laravel application to production, there are some important things you can do to make sure your application is running as efficiently as possible. In this document, we'll cover some great starting points for making sure your Laravel application is deployed properly."
msgstr ""

#: docs/10.x/deployment.md:block 7 (header)
msgid "Server Requirements"
msgstr ""

#: docs/10.x/deployment.md:block 8 (paragraph)
msgid "The Laravel framework has a few system requirements. You should ensure that your web server has the following minimum PHP version and extensions:"
msgstr ""

#: docs/10.x/deployment.md:block 10 (unordered list)
msgid "PHP >= 8.1"
msgstr ""

#: docs/10.x/deployment.md:block 10 (unordered list)
msgid "Ctype PHP Extension"
msgstr ""

#: docs/10.x/deployment.md:block 10 (unordered list)
msgid "cURL PHP Extension"
msgstr ""

#: docs/10.x/deployment.md:block 10 (unordered list)
msgid "DOM PHP Extension"
msgstr ""

#: docs/10.x/deployment.md:block 10 (unordered list)
msgid "Fileinfo PHP Extension"
msgstr ""

#: docs/10.x/deployment.md:block 10 (unordered list)
msgid "Filter PHP Extension"
msgstr ""

#: docs/10.x/deployment.md:block 10 (unordered list)
msgid "Hash PHP Extension"
msgstr ""

#: docs/10.x/deployment.md:block 10 (unordered list)
msgid "Mbstring PHP Extension"
msgstr ""

#: docs/10.x/deployment.md:block 10 (unordered list)
msgid "OpenSSL PHP Extension"
msgstr ""

#: docs/10.x/deployment.md:block 10 (unordered list)
msgid "PCRE PHP Extension"
msgstr ""

#: docs/10.x/deployment.md:block 10 (unordered list)
msgid "PDO PHP Extension"
msgstr ""

#: docs/10.x/deployment.md:block 10 (unordered list)
msgid "Session PHP Extension"
msgstr ""

#: docs/10.x/deployment.md:block 10 (unordered list)
msgid "Tokenizer PHP Extension"
msgstr ""

#: docs/10.x/deployment.md:block 10 (unordered list)
msgid "XML PHP Extension"
msgstr ""

#: docs/10.x/deployment.md:block 13 (header)
msgid "Server Configuration"
msgstr ""

#: docs/10.x/deployment.md:block 15 (header)
msgid "Nginx"
msgstr ""

#: docs/10.x/deployment.md:block 16 (paragraph)
msgid "If you are deploying your application to a server that is running Nginx, you may use the following configuration file as a starting point for configuring your web server. Most likely, this file will need to be customized depending on your server's configuration. **If you would like assistance in managing your server, consider using a first-party Laravel server management and deployment service such as [Laravel Forge](https://forge.laravel.com).**"
msgstr ""

#: docs/10.x/deployment.md:block 17 (paragraph)
msgid "Please ensure, like the configuration below, your web server directs all requests to your application's `public/index.php` file. You should never attempt to move the `index.php` file to your project's root, as serving the application from the project root will expose many sensitive configuration files to the public Internet:"
msgstr ""

#: docs/10.x/deployment.md:block 18 (code)
msgid ""
"server {\n"
"    listen 80;\n"
"    listen [::]:80;\n"
"    server_name example.com;\n"
"    root /srv/example.com/public;\n"
"\n"
"    add_header X-Frame-Options \"SAMEORIGIN\";\n"
"    add_header X-Content-Type-Options \"nosniff\";\n"
"\n"
"    index index.php;\n"
"\n"
"    charset utf-8;\n"
"\n"
"    location / {\n"
"        try_files $uri $uri/ /index.php?$query_string;\n"
"    }\n"
"\n"
"    location = /favicon.ico { access_log off; log_not_found off; }\n"
"    location = /robots.txt  { access_log off; log_not_found off; }\n"
"\n"
"    error_page 404 /index.php;\n"
"\n"
"    location ~ \\.php$ {\n"
"        fastcgi_pass unix:/var/run/php/php8.0-fpm.sock;\n"
"        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;\n"
"        include fastcgi_params;\n"
"    }\n"
"\n"
"    location ~ /\\.(?!well-known).* {\n"
"        deny all;\n"
"    }\n"
"}\n"
msgstr ""

#: docs/10.x/deployment.md:block 20 (header)
msgid "Optimization"
msgstr ""

#: docs/10.x/deployment.md:block 22 (header)
msgid "Autoloader Optimization"
msgstr ""

#: docs/10.x/deployment.md:block 23 (paragraph)
msgid "When deploying to production, make sure that you are optimizing Composer's class autoloader map so Composer can quickly find the proper file to load for a given class:"
msgstr ""

#: docs/10.x/deployment.md:block 24 (code)
msgid "composer install --optimize-autoloader --no-dev\n"
msgstr ""

#: docs/10.x/deployment.md:block 25 (quote)
msgid "**Note** In addition to optimizing the autoloader, you should always be sure to include a `composer.lock` file in your project's source control repository. Your project's dependencies can be installed much faster when a `composer.lock` file is present."
msgstr ""

#: docs/10.x/deployment.md:block 27 (header)
msgid "Optimizing Configuration Loading"
msgstr ""

#: docs/10.x/deployment.md:block 28 (paragraph)
msgid "When deploying your application to production, you should make sure that you run the `config:cache` Artisan command during your deployment process:"
msgstr ""

#: docs/10.x/deployment.md:block 29 (code)
msgid "php artisan config:cache\n"
msgstr ""

#: docs/10.x/deployment.md:block 30 (paragraph)
msgid "This command will combine all of Laravel's configuration files into a single, cached file, which greatly reduces the number of trips the framework must make to the filesystem when loading your configuration values."
msgstr ""

#: docs/10.x/deployment.md:block 31 (quote)
msgid "**Warning** If you execute the `config:cache` command during your deployment process, you should be sure that you are only calling the `env` function from within your configuration files. Once the configuration has been cached, the `.env` file will not be loaded and all calls to the `env` function for `.env` variables will return `null`."
msgstr ""

#: docs/10.x/deployment.md:block 33 (header)
msgid "Optimizing Route Loading"
msgstr ""

#: docs/10.x/deployment.md:block 34 (paragraph)
msgid "If you are building a large application with many routes, you should make sure that you are running the `route:cache` Artisan command during your deployment process:"
msgstr ""

#: docs/10.x/deployment.md:block 35 (code)
msgid "php artisan route:cache\n"
msgstr ""

#: docs/10.x/deployment.md:block 36 (paragraph)
msgid "This command reduces all of your route registrations into a single method call within a cached file, improving the performance of route registration when registering hundreds of routes."
msgstr ""

#: docs/10.x/deployment.md:block 38 (header)
msgid "Optimizing View Loading"
msgstr ""

#: docs/10.x/deployment.md:block 39 (paragraph)
msgid "When deploying your application to production, you should make sure that you run the `view:cache` Artisan command during your deployment process:"
msgstr ""

#: docs/10.x/deployment.md:block 40 (code)
msgid "php artisan view:cache\n"
msgstr ""

#: docs/10.x/deployment.md:block 41 (paragraph)
msgid "This command precompiles all your Blade views so they are not compiled on demand, improving the performance of each request that returns a view."
msgstr ""

#: docs/10.x/deployment.md:block 43 (header)
msgid "Debug Mode"
msgstr ""

#: docs/10.x/deployment.md:block 44 (paragraph)
msgid "The debug option in your config/app.php configuration file determines how much information about an error is actually displayed to the user. By default, this option is set to respect the value of the `APP_DEBUG` environment variable, which is stored in your application's `.env` file."
msgstr ""

#: docs/10.x/deployment.md:block 45 (paragraph)
msgid "**In your production environment, this value should always be `false`. If the `APP_DEBUG` variable is set to `true` in production, you risk exposing sensitive configuration values to your application's end users.**"
msgstr ""

#: docs/10.x/deployment.md:block 47 (header)
msgid "Deploying With Forge / Vapor"
msgstr ""

#: docs/10.x/deployment.md:block 49 (header)
msgid "Laravel Forge"
msgstr ""

#: docs/10.x/deployment.md:block 50 (paragraph)
msgid "If you aren't quite ready to manage your own server configuration or aren't comfortable configuring all of the various services needed to run a robust Laravel application, [Laravel Forge](https://forge.laravel.com) is a wonderful alternative."
msgstr ""

#: docs/10.x/deployment.md:block 51 (paragraph)
msgid "Laravel Forge can create servers on various infrastructure providers such as DigitalOcean, Linode, AWS, and more. In addition, Forge installs and manages all of the tools needed to build robust Laravel applications, such as Nginx, MySQL, Redis, Memcached, Beanstalk, and more."
msgstr ""

#: docs/10.x/deployment.md:block 52 (quote)
msgid "**Note** Want a full guide to deploying with Laravel Forge? Check out the [Laravel Bootcamp](https://bootcamp.laravel.com/deploying) and the Forge [video series available on Laracasts](https://laracasts.com/series/learn-laravel-forge-2022-edition)."
msgstr ""

#: docs/10.x/deployment.md:block 54 (header)
msgid "Laravel Vapor"
msgstr ""

#: docs/10.x/deployment.md:block 55 (paragraph)
msgid "If you would like a totally serverless, auto-scaling deployment platform tuned for Laravel, check out [Laravel Vapor](https://vapor.laravel.com). Laravel Vapor is a serverless deployment platform for Laravel, powered by AWS. Launch your Laravel infrastructure on Vapor and fall in love with the scalable simplicity of serverless. Laravel Vapor is fine-tuned by Laravel's creators to work seamlessly with the framework so you can keep writing your Laravel applications exactly like you're used to."
msgstr ""

#: docs/8.x/deployment.md:block 10 (unordered list)
msgid "PHP >= 7.3"
msgstr ""

#: docs/8.x/deployment.md:block 10 (unordered list)
msgid "BCMath PHP Extension"
msgstr ""

#: docs/8.x/deployment.md:block 10 (unordered list)
msgid "JSON PHP Extension"
msgstr ""

#: docs/8.x/deployment.md:block 18 (code)
msgid ""
"server {\n"
"    listen 80;\n"
"    listen [::]:80;\n"
"    server_name example.com;\n"
"    root /srv/example.com/public;\n"
"\n"
"    add_header X-Frame-Options \"SAMEORIGIN\";\n"
"    add_header X-Content-Type-Options \"nosniff\";\n"
"\n"
"    index index.php;\n"
"\n"
"    charset utf-8;\n"
"\n"
"    location / {\n"
"        try_files $uri $uri/ /index.php?$query_string;\n"
"    }\n"
"\n"
"    location = /favicon.ico { access_log off; log_not_found off; }\n"
"    location = /robots.txt  { access_log off; log_not_found off; }\n"
"\n"
"    error_page 404 /index.php;\n"
"\n"
"    location ~ \\.php$ {\n"
"        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;\n"
"        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;\n"
"        include fastcgi_params;\n"
"    }\n"
"\n"
"    location ~ /\\.(?!well-known).* {\n"
"        deny all;\n"
"    }\n"
"}\n"
msgstr ""

#: docs/8.x/deployment.md:block 25 (quote)
msgid "{tip} In addition to optimizing the autoloader, you should always be sure to include a `composer.lock` file in your project's source control repository. Your project's dependencies can be installed much faster when a `composer.lock` file is present."
msgstr ""

#: docs/8.x/deployment.md:block 31 (quote)
msgid "{note} If you execute the `config:cache` command during your deployment process, you should be sure that you are only calling the `env` function from within your configuration files. Once the configuration has been cached, the `.env` file will not be loaded and all calls to the `env` function for `.env` variables will return `null`."
msgstr ""

#: docs/8.x/deployment.md:block 44 (paragraph)
msgid "The debug option in your config/app.php configuration file determines how much information about an error is actually displayed to the user. By default, this option is set to respect the value of the APP_DEBUG environment variable, which is stored in your .env file."
msgstr ""

#: docs/9.x/deployment.md:block 10 (unordered list)
msgid "PHP >= 8.0"
msgstr ""
