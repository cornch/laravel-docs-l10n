# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Taylor Otwell
# This file is distributed under the same license as the Laravel Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2022-01-30 12:42+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"
#
#. type: Title #
# File: docs/8.x/redis.md, line: 1
# File: docs/master/redis.md, line: 1
#, no-wrap
msgid "Redis"
msgstr ""
#
#. type: Bullet: '- '
# File: docs/8.x/redis.md, line: 12
# File: docs/master/redis.md, line: 12
msgid "[Introduction](#introduction)"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 12
# File: docs/master/redis.md, line: 12
#, no-wrap
msgid ""
"- [Configuration](#configuration)\n"
"    - [Clusters](#clusters)\n"
"    - [Predis](#predis)\n"
"    - [phpredis](#phpredis)\n"
"- [Interacting With Redis](#interacting-with-redis)\n"
"    - [Transactions](#transactions)\n"
"    - [Pipelining Commands](#pipelining-commands)\n"
"- [Pub / Sub](#pubsub)\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 14
# File: docs/master/redis.md, line: 14
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr ""
#
#. type: Title ##
# File: docs/8.x/redis.md, line: 14
# File: docs/master/redis.md, line: 14
#, no-wrap
msgid "Introduction"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 17
# File: docs/master/redis.md, line: 17
msgid "[Redis](https://redis.io) is an open source, advanced key-value store. It is often referred to as a data structure server since keys can contain [strings](https://redis.io/topics/data-types#strings), [hashes](https://redis.io/topics/data-types#hashes), [lists](https://redis.io/topics/data-types#lists), [sets](https://redis.io/topics/data-types#sets), and [sorted sets](https://redis.io/topics/data-types#sorted-sets)."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 19
# File: docs/master/redis.md, line: 19
msgid "Before using Redis with Laravel, we encourage you to install and use the [phpredis](https://github.com/phpredis/phpredis) PHP extension via PECL. The extension is more complex to install compared to \"user-land\" PHP packages but may yield better performance for applications that make heavy use of Redis. If you are using [Laravel Sail](/docs/{{version}}/sail), this extension is already installed in your application's Docker container."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 21
# File: docs/master/redis.md, line: 21
msgid "If you are unable to install the phpredis extension, you may install the `predis/predis` package via Composer. Predis is a Redis client written entirely in PHP and does not require any additional extensions:"
msgstr ""
#
#. type: Code fence info string
# File: docs/8.x/redis.md, line: 22
# File: docs/master/redis.md, line: 22
#, no-wrap
msgid "bash"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 22
# File: docs/master/redis.md, line: 22
#, no-wrap
msgid "composer require predis/predis\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 27
# File: docs/master/redis.md, line: 27
#, no-wrap
msgid "<a name=\"configuration\"></a>\n"
msgstr ""
#
#. type: Title ##
# File: docs/8.x/redis.md, line: 27
# File: docs/master/redis.md, line: 27
#, no-wrap
msgid "Configuration"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 30
# File: docs/master/redis.md, line: 30
msgid "You may configure your application's Redis settings via the `config/database.php` configuration file. Within this file, you will see a `redis` array containing the Redis servers utilized by your application:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 32
# File: docs/8.x/redis.md, line: 54
# File: docs/8.x/redis.md, line: 73
# File: docs/8.x/redis.md, line: 92
# File: docs/8.x/redis.md, line: 113
# File: docs/8.x/redis.md, line: 132
# File: docs/8.x/redis.md, line: 159
# File: docs/8.x/redis.md, line: 187
# File: docs/master/redis.md, line: 32
# File: docs/master/redis.md, line: 54
# File: docs/master/redis.md, line: 73
# File: docs/master/redis.md, line: 92
# File: docs/master/redis.md, line: 113
# File: docs/master/redis.md, line: 132
# File: docs/master/redis.md, line: 159
# File: docs/master/redis.md, line: 187
#, no-wrap
msgid "    'redis' => [\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 34
# File: docs/8.x/redis.md, line: 56
# File: docs/8.x/redis.md, line: 75
# File: docs/8.x/redis.md, line: 94
# File: docs/8.x/redis.md, line: 115
# File: docs/8.x/redis.md, line: 161
# File: docs/8.x/redis.md, line: 189
# File: docs/master/redis.md, line: 34
# File: docs/master/redis.md, line: 56
# File: docs/master/redis.md, line: 75
# File: docs/master/redis.md, line: 94
# File: docs/master/redis.md, line: 115
# File: docs/master/redis.md, line: 161
# File: docs/master/redis.md, line: 189
#, no-wrap
msgid "        'client' => env('REDIS_CLIENT', 'phpredis'),\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 41
#, no-wrap
msgid ""
"        'default' => [\n"
"            'host' => env('REDIS_HOST', '127.0.0.1'),\n"
"            'password' => env('REDIS_PASSWORD', null),\n"
"            'port' => env('REDIS_PORT', 6379),\n"
"            'database' => env('REDIS_DB', 0),\n"
"        ],\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 48
#, no-wrap
msgid ""
"        'cache' => [\n"
"            'host' => env('REDIS_HOST', '127.0.0.1'),\n"
"            'password' => env('REDIS_PASSWORD', null),\n"
"            'port' => env('REDIS_PORT', 6379),\n"
"            'database' => env('REDIS_CACHE_DB', 1),\n"
"        ],\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 50
# File: docs/8.x/redis.md, line: 66
# File: docs/8.x/redis.md, line: 85
# File: docs/8.x/redis.md, line: 107
# File: docs/8.x/redis.md, line: 125
# File: docs/master/redis.md, line: 50
# File: docs/master/redis.md, line: 66
# File: docs/master/redis.md, line: 85
# File: docs/master/redis.md, line: 107
# File: docs/master/redis.md, line: 125
#, no-wrap
msgid "    ],\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 52
# File: docs/master/redis.md, line: 52
msgid "Each Redis server defined in your configuration file is required to have a name, host, and a port unless you define a single URL to represent the Redis connection:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 60
# File: docs/master/redis.md, line: 60
#, no-wrap
msgid ""
"        'default' => [\n"
"            'url' => 'tcp://127.0.0.1:6379?database=0',\n"
"        ],\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 64
# File: docs/master/redis.md, line: 64
#, no-wrap
msgid ""
"        'cache' => [\n"
"            'url' => 'tls://user:password@127.0.0.1:6380?database=1',\n"
"        ],\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 68
# File: docs/master/redis.md, line: 68
#, no-wrap
msgid "<a name=\"configuring-the-connection-scheme\"></a>\n"
msgstr ""
#
#. type: Title ####
# File: docs/8.x/redis.md, line: 68
# File: docs/master/redis.md, line: 68
#, no-wrap
msgid "Configuring The Connection Scheme"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 71
# File: docs/master/redis.md, line: 71
msgid "By default, Redis clients will use the `tcp` scheme when connecting to your Redis servers; however, you may use TLS / SSL encryption by specifying a `scheme` configuration option in your Redis server's configuration array:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 83
#, no-wrap
msgid ""
"        'default' => [\n"
"            'scheme' => 'tls',\n"
"            'host' => env('REDIS_HOST', '127.0.0.1'),\n"
"            'password' => env('REDIS_PASSWORD', null),\n"
"            'port' => env('REDIS_PORT', 6379),\n"
"            'database' => env('REDIS_DB', 0),\n"
"        ],\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 87
# File: docs/master/redis.md, line: 87
#, no-wrap
msgid "<a name=\"clusters\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/8.x/redis.md, line: 87
# File: docs/master/redis.md, line: 87
#, no-wrap
msgid "Clusters"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 90
# File: docs/master/redis.md, line: 90
msgid "If your application is utilizing a cluster of Redis servers, you should define these clusters within a `clusters` key of your Redis configuration. This configuration key does not exist by default so you will need to create it within your application's `config/database.php` configuration file:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 105
#, no-wrap
msgid ""
"        'clusters' => [\n"
"            'default' => [\n"
"                [\n"
"                    'host' => env('REDIS_HOST', 'localhost'),\n"
"                    'password' => env('REDIS_PASSWORD', null),\n"
"                    'port' => env('REDIS_PORT', 6379),\n"
"                    'database' => 0,\n"
"                ],\n"
"            ],\n"
"        ],\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 109
# File: docs/master/redis.md, line: 109
msgid "By default, clusters will perform client-side sharding across your nodes, allowing you to pool nodes and create a large amount of available RAM. However, client-side sharding does not handle failover; therefore, it is primarily suited for transient cached data that is available from another primary data store."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 111
# File: docs/master/redis.md, line: 111
msgid "If you would like to use native Redis clustering instead of client-side sharding, you may specify this by setting the `options.cluster` configuration value to `redis` within your application's `config/database.php` configuration file:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 119
# File: docs/master/redis.md, line: 119
#, no-wrap
msgid ""
"        'options' => [\n"
"            'cluster' => env('REDIS_CLUSTER', 'redis'),\n"
"        ],\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 123
# File: docs/master/redis.md, line: 123
#, no-wrap
msgid ""
"        'clusters' => [\n"
"            // ...\n"
"        ],\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 127
# File: docs/master/redis.md, line: 127
#, no-wrap
msgid "<a name=\"predis\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/8.x/redis.md, line: 127
# File: docs/master/redis.md, line: 127
#, no-wrap
msgid "Predis"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 130
# File: docs/master/redis.md, line: 130
msgid "If you would like your application to interact with Redis via the Predis package, you should ensure the `REDIS_CLIENT` environment variable's value is `predis`:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 134
# File: docs/master/redis.md, line: 134
#, no-wrap
msgid "        'client' => env('REDIS_CLIENT', 'predis'),\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 137
# File: docs/master/redis.md, line: 137
#, no-wrap
msgid ""
"        // ...\n"
"    ],\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 139
# File: docs/master/redis.md, line: 139
msgid "In addition to the default `host`, `port`, `database`, and `password` server configuration options, Predis supports additional [connection parameters](https://github.com/nrk/predis/wiki/Connection-Parameters) that may be defined for each of your Redis servers. To utilize these additional configuration options, add them to your Redis server configuration in your application's `config/database.php` configuration file:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 147
#, no-wrap
msgid ""
"    'default' => [\n"
"        'host' => env('REDIS_HOST', 'localhost'),\n"
"        'password' => env('REDIS_PASSWORD', null),\n"
"        'port' => env('REDIS_PORT', 6379),\n"
"        'database' => 0,\n"
"        'read_write_timeout' => 60,\n"
"    ],\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 149
# File: docs/master/redis.md, line: 149
#, no-wrap
msgid "<a name=\"the-redis-facade-alias\"></a>\n"
msgstr ""
#
#. type: Title ####
# File: docs/8.x/redis.md, line: 149
# File: docs/master/redis.md, line: 149
#, no-wrap
msgid "The Redis Facade Alias"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 152
# File: docs/master/redis.md, line: 152
msgid "Laravel's `config/app.php` configuration file contains an `aliases` array which defines all of the class aliases that will be registered by the framework. For convenience, an alias entry is included for each [facade](/docs/{{version}}/facades) offered by Laravel; however, the `Redis` alias is disabled because it conflicts with the `Redis` class name provided by the phpredis extension. If you are using the Predis client and would like to enable this alias, you may un-comment the alias in your application's `config/app.php` configuration file."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 154
# File: docs/master/redis.md, line: 154
#, no-wrap
msgid "<a name=\"phpredis\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/8.x/redis.md, line: 154
# File: docs/master/redis.md, line: 154
#, no-wrap
msgid "phpredis"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 157
# File: docs/master/redis.md, line: 157
msgid "By default, Laravel will use the phpredis extension to communicate with Redis. The client that Laravel will use to communicate with Redis is dictated by the value of the `redis.client` configuration option, which typically reflects the value of the `REDIS_CLIENT` environment variable:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 164
# File: docs/8.x/redis.md, line: 197
# File: docs/master/redis.md, line: 164
# File: docs/master/redis.md, line: 197
#, no-wrap
msgid ""
"        // Rest of Redis configuration...\n"
"    ],\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 166
# File: docs/master/redis.md, line: 166
msgid "In addition to the default `scheme`, `host`, `port`, `database`, and `password` server configuration options, phpredis supports the following additional connection parameters: `name`, `persistent`, `persistent_id`, `prefix`, `read_timeout`, `retry_interval`, `timeout`, and `context`. You may add any of these options to your Redis server configuration in the `config/database.php` configuration file:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 178
#, no-wrap
msgid ""
"    'default' => [\n"
"        'host' => env('REDIS_HOST', 'localhost'),\n"
"        'password' => env('REDIS_PASSWORD', null),\n"
"        'port' => env('REDIS_PORT', 6379),\n"
"        'database' => 0,\n"
"        'read_timeout' => 60,\n"
"        'context' => [\n"
"            // 'auth' => ['username', 'secret'],\n"
"            // 'stream' => ['verify_peer' => false],\n"
"        ],\n"
"    ],\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 180
# File: docs/master/redis.md, line: 180
#, no-wrap
msgid "<a name=\"phpredis-serialization\"></a>\n"
msgstr ""
#
#. type: Title ####
# File: docs/8.x/redis.md, line: 180
# File: docs/master/redis.md, line: 180
#, no-wrap
msgid "phpredis Serialization & Compression"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 183
# File: docs/master/redis.md, line: 183
msgid "The phpredis extension may also be configured to use a variety serialization and compression algorithms. These algorithms can be configured via the `options` array of your Redis configuration:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 185
# File: docs/master/redis.md, line: 185
#, no-wrap
msgid "    use Redis;\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 194
# File: docs/master/redis.md, line: 194
#, no-wrap
msgid ""
"        'options' => [\n"
"            'serializer' => Redis::SERIALIZER_MSGPACK,\n"
"            'compression' => Redis::COMPRESSION_LZ4,\n"
"        ],\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 199
# File: docs/master/redis.md, line: 199
msgid "Currently supported serialization algorithms include: `Redis::SERIALIZER_NONE` (default), `Redis::SERIALIZER_PHP`, `Redis::SERIALIZER_JSON`, `Redis::SERIALIZER_IGBINARY`, and `Redis::SERIALIZER_MSGPACK`."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 201
# File: docs/master/redis.md, line: 201
msgid "Supported compression algorithms include: `Redis::COMPRESSION_NONE` (default), `Redis::COMPRESSION_LZF`, `Redis::COMPRESSION_ZSTD`, and `Redis::COMPRESSION_LZ4`."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 203
# File: docs/master/redis.md, line: 203
#, no-wrap
msgid "<a name=\"interacting-with-redis\"></a>\n"
msgstr ""
#
#. type: Title ##
# File: docs/8.x/redis.md, line: 203
# File: docs/master/redis.md, line: 203
#, no-wrap
msgid "Interacting With Redis"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 206
# File: docs/master/redis.md, line: 206
msgid "You may interact with Redis by calling various methods on the `Redis` [facade](/docs/{{version}}/facades). The `Redis` facade supports dynamic methods, meaning you may call any [Redis command](https://redis.io/commands) on the facade and the command will be passed directly to Redis. In this example, we will call the Redis `GET` command by calling the `get` method on the `Redis` facade:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 208
# File: docs/8.x/redis.md, line: 308
# File: docs/master/redis.md, line: 208
# File: docs/master/redis.md, line: 308
#, no-wrap
msgid "    <?php\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 210
# File: docs/master/redis.md, line: 210
#, no-wrap
msgid "    namespace App\\Http\\Controllers;\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 213
# File: docs/master/redis.md, line: 213
#, no-wrap
msgid ""
"    use App\\Http\\Controllers\\Controller;\n"
"    use Illuminate\\Support\\Facades\\Redis;\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 229
# File: docs/master/redis.md, line: 229
#, no-wrap
msgid ""
"    class UserController extends Controller\n"
"    {\n"
"        /**\n"
"         * Show the profile for the given user.\n"
"         *\n"
"         * @param  int  $id\n"
"         * @return \\Illuminate\\Http\\Response\n"
"         */\n"
"        public function show($id)\n"
"        {\n"
"            return view('user.profile', [\n"
"                'user' => Redis::get('user:profile:'.$id)\n"
"            ]);\n"
"        }\n"
"    }\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 231
# File: docs/master/redis.md, line: 231
msgid "As mentioned above, you may call any of Redis' commands on the `Redis` facade. Laravel uses magic methods to pass the commands to the Redis server. If a Redis command expects arguments, you should pass those to the facade's corresponding method:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 233
# File: docs/8.x/redis.md, line: 259
# File: docs/8.x/redis.md, line: 293
# File: docs/8.x/redis.md, line: 346
# File: docs/master/redis.md, line: 233
# File: docs/master/redis.md, line: 259
# File: docs/master/redis.md, line: 293
# File: docs/master/redis.md, line: 346
#, no-wrap
msgid "    use Illuminate\\Support\\Facades\\Redis;\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 235
# File: docs/master/redis.md, line: 235
#, no-wrap
msgid "    Redis::set('name', 'Taylor');\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 237
# File: docs/master/redis.md, line: 237
#, no-wrap
msgid "    $values = Redis::lrange('names', 5, 10);\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 239
# File: docs/master/redis.md, line: 239
msgid "Alternatively, you may pass commands to the server using the `Redis` facade's `command` method, which accepts the name of the command as its first argument and an array of values as its second argument:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 241
# File: docs/master/redis.md, line: 241
#, no-wrap
msgid "    $values = Redis::command('lrange', ['name', 5, 10]);\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 243
# File: docs/master/redis.md, line: 243
#, no-wrap
msgid "<a name=\"using-multiple-redis-connections\"></a>\n"
msgstr ""
#
#. type: Title ####
# File: docs/8.x/redis.md, line: 243
# File: docs/master/redis.md, line: 243
#, no-wrap
msgid "Using Multiple Redis Connections"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 246
# File: docs/master/redis.md, line: 246
msgid "Your application's `config/database.php` configuration file allows you to define multiple Redis connections / servers. You may obtain a connection to a specific Redis connection using the `Redis` facade's `connection` method:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 248
# File: docs/master/redis.md, line: 248
#, no-wrap
msgid "    $redis = Redis::connection('connection-name');\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 250
# File: docs/master/redis.md, line: 250
msgid "To obtain an instance of the default Redis connection, you may call the `connection` method without any additional arguments:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 252
# File: docs/master/redis.md, line: 252
#, no-wrap
msgid "    $redis = Redis::connection();\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 254
# File: docs/master/redis.md, line: 254
#, no-wrap
msgid "<a name=\"transactions\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/8.x/redis.md, line: 254
# File: docs/master/redis.md, line: 254
#, no-wrap
msgid "Transactions"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 257
# File: docs/master/redis.md, line: 257
msgid "The `Redis` facade's `transaction` method provides a convenient wrapper around Redis' native `MULTI` and `EXEC` commands. The `transaction` method accepts a closure as its only argument. This closure will receive a Redis connection instance and may issue any commands it would like to this instance. All of the Redis commands issued within the closure will be executed in a single, atomic transaction:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 264
# File: docs/master/redis.md, line: 264
#, no-wrap
msgid ""
"    Redis::transaction(function ($redis) {\n"
"        $redis->incr('user_visits', 1);\n"
"        $redis->incr('total_visits', 1);\n"
"    });\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 266
# File: docs/master/redis.md, line: 266
#, no-wrap
msgid "> {note} When defining a Redis transaction, you may not retrieve any values from the Redis connection. Remember, your transaction is executed as a single, atomic operation and that operation is not executed until your entire closure has finished executing its commands.\n"
msgstr ""
#
#. type: Title ####
# File: docs/8.x/redis.md, line: 267
# File: docs/master/redis.md, line: 267
#, no-wrap
msgid "Lua Scripts"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 270
# File: docs/master/redis.md, line: 270
msgid "The `eval` method provides another method of executing multiple Redis commands in a single, atomic operation. However, the `eval` method has the benefit of being able to interact with and inspect Redis key values during that operation. Redis scripts are written in the [Lua programming language](https://www.lua.org)."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 272
# File: docs/master/redis.md, line: 272
msgid "The `eval` method can be a bit scary at first, but we'll explore a basic example to break the ice. The `eval` method expects several arguments. First, you should pass the Lua script (as a string) to the method. Secondly, you should pass the number of keys (as an integer) that the script interacts with. Thirdly, you should pass the names of those keys. Finally, you may pass any other additional arguments that you need to access within your script."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 274
# File: docs/master/redis.md, line: 274
msgid "In this example, we will increment a counter, inspect its new value, and increment a second counter if the first counter's value is greater than five. Finally, we will return the value of the first counter:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 277
# File: docs/master/redis.md, line: 277
#, no-wrap
msgid ""
"    $value = Redis::eval(<<<'LUA'\n"
"        local counter = redis.call(\"incr\", KEYS[1])\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 281
# File: docs/master/redis.md, line: 281
#, no-wrap
msgid ""
"        if counter > 5 then\n"
"            redis.call(\"incr\", KEYS[2])\n"
"        end\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 284
# File: docs/master/redis.md, line: 284
#, no-wrap
msgid ""
"        return counter\n"
"    LUA, 2, 'first-counter', 'second-counter');\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 286
# File: docs/master/redis.md, line: 286
#, no-wrap
msgid "> {note} Please consult the [Redis documentation](https://redis.io/commands/eval) for more information on Redis scripting.\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 288
# File: docs/master/redis.md, line: 288
#, no-wrap
msgid "<a name=\"pipelining-commands\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/8.x/redis.md, line: 288
# File: docs/master/redis.md, line: 288
#, no-wrap
msgid "Pipelining Commands"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 291
# File: docs/master/redis.md, line: 291
msgid "Sometimes you may need to execute dozens of Redis commands. Instead of making a network trip to your Redis server for each command, you may use the `pipeline` method. The `pipeline` method accepts one argument: a closure that receives a Redis instance. You may issue all of your commands to this Redis instance and they will all be sent to the Redis server at the same time to reduce network trips to the server. The commands will still be executed in the order they were issued:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 299
# File: docs/master/redis.md, line: 299
#, no-wrap
msgid ""
"    Redis::pipeline(function ($pipe) {\n"
"        for ($i = 0; $i < 1000; $i++) {\n"
"            $pipe->set(\"key:$i\", $i);\n"
"        }\n"
"    });\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 301
# File: docs/master/redis.md, line: 301
#, no-wrap
msgid "<a name=\"pubsub\"></a>\n"
msgstr ""
#
#. type: Title ##
# File: docs/8.x/redis.md, line: 301
# File: docs/master/redis.md, line: 301
#, no-wrap
msgid "Pub / Sub"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 304
# File: docs/master/redis.md, line: 304
msgid "Laravel provides a convenient interface to the Redis `publish` and `subscribe` commands. These Redis commands allow you to listen for messages on a given \"channel\". You may publish messages to the channel from another application, or even using another programming language, allowing easy communication between applications and processes."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 306
# File: docs/master/redis.md, line: 306
msgid "First, let's setup a channel listener using the `subscribe` method. We'll place this method call within an [Artisan command](/docs/{{version}}/artisan) since calling the `subscribe` method begins a long-running process:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 310
# File: docs/master/redis.md, line: 310
#, no-wrap
msgid "    namespace App\\Console\\Commands;\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 313
# File: docs/master/redis.md, line: 313
#, no-wrap
msgid ""
"    use Illuminate\\Console\\Command;\n"
"    use Illuminate\\Support\\Facades\\Redis;\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 322
# File: docs/master/redis.md, line: 322
#, no-wrap
msgid ""
"    class RedisSubscribe extends Command\n"
"    {\n"
"        /**\n"
"         * The name and signature of the console command.\n"
"         *\n"
"         * @var string\n"
"         */\n"
"        protected $signature = 'redis:subscribe';\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 329
# File: docs/master/redis.md, line: 329
#, no-wrap
msgid ""
"        /**\n"
"         * The console command description.\n"
"         *\n"
"         * @var string\n"
"         */\n"
"        protected $description = 'Subscribe to a Redis channel';\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 342
# File: docs/master/redis.md, line: 342
#, no-wrap
msgid ""
"        /**\n"
"         * Execute the console command.\n"
"         *\n"
"         * @return mixed\n"
"         */\n"
"        public function handle()\n"
"        {\n"
"            Redis::subscribe(['test-channel'], function ($message) {\n"
"                echo $message;\n"
"            });\n"
"        }\n"
"    }\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 344
# File: docs/master/redis.md, line: 344
msgid "Now we may publish messages to the channel using the `publish` method:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 349
# File: docs/master/redis.md, line: 349
#, no-wrap
msgid ""
"    Route::get('/publish', function () {\n"
"        // ...\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 354
# File: docs/master/redis.md, line: 354
#, no-wrap
msgid ""
"        Redis::publish('test-channel', json_encode([\n"
"            'name' => 'Adam Wathan'\n"
"        ]));\n"
"    });\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 356
# File: docs/master/redis.md, line: 356
#, no-wrap
msgid "<a name=\"wildcard-subscriptions\"></a>\n"
msgstr ""
#
#. type: Title ####
# File: docs/8.x/redis.md, line: 356
# File: docs/master/redis.md, line: 356
#, no-wrap
msgid "Wildcard Subscriptions"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 359
# File: docs/master/redis.md, line: 359
msgid "Using the `psubscribe` method, you may subscribe to a wildcard channel, which may be useful for catching all messages on all channels. The channel name will be passed as the second argument to the provided closure:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 363
# File: docs/master/redis.md, line: 363
#, no-wrap
msgid ""
"    Redis::psubscribe(['*'], function ($message, $channel) {\n"
"        echo $message;\n"
"    });\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/redis.md, line: 366
# File: docs/master/redis.md, line: 366
#, no-wrap
msgid ""
"    Redis::psubscribe(['users.*'], function ($message, $channel) {\n"
"        echo $message;\n"
"    });\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/redis.md, line: 41
#, no-wrap
msgid ""
"        'default' => [\n"
"            'host' => env('REDIS_HOST', '127.0.0.1'),\n"
"            'password' => env('REDIS_PASSWORD'),\n"
"            'port' => env('REDIS_PORT', 6379),\n"
"            'database' => env('REDIS_DB', 0),\n"
"        ],\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/redis.md, line: 48
#, no-wrap
msgid ""
"        'cache' => [\n"
"            'host' => env('REDIS_HOST', '127.0.0.1'),\n"
"            'password' => env('REDIS_PASSWORD'),\n"
"            'port' => env('REDIS_PORT', 6379),\n"
"            'database' => env('REDIS_CACHE_DB', 1),\n"
"        ],\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/redis.md, line: 83
#, no-wrap
msgid ""
"        'default' => [\n"
"            'scheme' => 'tls',\n"
"            'host' => env('REDIS_HOST', '127.0.0.1'),\n"
"            'password' => env('REDIS_PASSWORD'),\n"
"            'port' => env('REDIS_PORT', 6379),\n"
"            'database' => env('REDIS_DB', 0),\n"
"        ],\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/redis.md, line: 105
#, no-wrap
msgid ""
"        'clusters' => [\n"
"            'default' => [\n"
"                [\n"
"                    'host' => env('REDIS_HOST', 'localhost'),\n"
"                    'password' => env('REDIS_PASSWORD'),\n"
"                    'port' => env('REDIS_PORT', 6379),\n"
"                    'database' => 0,\n"
"                ],\n"
"            ],\n"
"        ],\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/redis.md, line: 147
#, no-wrap
msgid ""
"    'default' => [\n"
"        'host' => env('REDIS_HOST', 'localhost'),\n"
"        'password' => env('REDIS_PASSWORD'),\n"
"        'port' => env('REDIS_PORT', 6379),\n"
"        'database' => 0,\n"
"        'read_write_timeout' => 60,\n"
"    ],\n"
msgstr ""
#
#. type: Plain text
# File: docs/master/redis.md, line: 178
#, no-wrap
msgid ""
"    'default' => [\n"
"        'host' => env('REDIS_HOST', 'localhost'),\n"
"        'password' => env('REDIS_PASSWORD'),\n"
"        'port' => env('REDIS_PORT', 6379),\n"
"        'database' => 0,\n"
"        'read_timeout' => 60,\n"
"        'context' => [\n"
"            // 'auth' => ['username', 'secret'],\n"
"            // 'stream' => ['verify_peer' => false],\n"
"        ],\n"
"    ],\n"
msgstr ""
