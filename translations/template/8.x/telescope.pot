# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Taylor Otwell
# This file is distributed under the same license as the Laravel Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2021-04-05 14:50+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title #
#: docs/8.x/telescope.md:1
#, no-wrap
msgid "Laravel Telescope"
msgstr ""

#. type: Bullet: '- '
#: docs/8.x/telescope.md:33
msgid "[Introduction](#introduction)"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:33
#, no-wrap
msgid ""
"- [Installation](#installation)\n"
"    - [Local Only Installation](#local-only-installation)\n"
"    - [Configuration](#configuration)\n"
"    - [Data Pruning](#data-pruning)\n"
"    - [Dashboard Authorization](#dashboard-authorization)\n"
"- [Upgrading Telescope](#upgrading-telescope)\n"
"- [Filtering](#filtering)\n"
"    - [Entries](#filtering-entries)\n"
"    - [Batches](#filtering-batches)\n"
"- [Tagging](#tagging)\n"
"- [Available Watchers](#available-watchers)\n"
"    - [Batch Watcher](#batch-watcher)\n"
"    - [Cache Watcher](#cache-watcher)\n"
"    - [Command Watcher](#command-watcher)\n"
"    - [Dump Watcher](#dump-watcher)\n"
"    - [Event Watcher](#event-watcher)\n"
"    - [Exception Watcher](#exception-watcher)\n"
"    - [Gate Watcher](#gate-watcher)\n"
"    - [Job Watcher](#job-watcher)\n"
"    - [Log Watcher](#log-watcher)\n"
"    - [Mail Watcher](#mail-watcher)\n"
"    - [Model Watcher](#model-watcher)\n"
"    - [Notification Watcher](#notification-watcher)\n"
"    - [Query Watcher](#query-watcher)\n"
"    - [Redis Watcher](#redis-watcher)\n"
"    - [Request Watcher](#request-watcher)\n"
"    - [Schedule Watcher](#schedule-watcher)\n"
"    - [View Watcher](#view-watcher)\n"
"- [Displaying User Avatars](#displaying-user-avatars)\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:35
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/telescope.md:35
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:38
msgid ""
"Telescope makes a wonderful companion to your local Laravel development "
"environment. Telescope provides insight into the requests coming into your "
"application, exceptions, log entries, database queries, queued jobs, mail, "
"notifications, cache operations, scheduled tasks, variable dumps, and more."
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:40
#, no-wrap
msgid "<img src=\"https://laravel.com/img/docs/telescope-example.png\">\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:42
#, no-wrap
msgid "<a name=\"installation\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/telescope.md:42
#, no-wrap
msgid "Installation"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:45
msgid ""
"You may use the Composer package manager to install Telescope into your "
"Laravel project:"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:47
#, no-wrap
msgid "    composer require laravel/telescope\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:49
msgid ""
"After installing Telescope, publish its assets using the `telescope:install` "
"Artisan command. After installing Telescope, you should also run the "
"`migrate` command in order to create the tables needed to store Telescope's "
"data:"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:51 docs/8.x/telescope.md:67
#, no-wrap
msgid "    php artisan telescope:install\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:53 docs/8.x/telescope.md:69
#, no-wrap
msgid "    php artisan migrate\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:55
#, no-wrap
msgid "<a name=\"migration-customization\"></a>\n"
msgstr ""

#. type: Title ####
#: docs/8.x/telescope.md:55
#, no-wrap
msgid "Migration Customization"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:58
msgid ""
"If you are not going to use Telescope's default migrations, you should call "
"the `Telescope::ignoreMigrations` method in the `register` method of your "
"application's `App\\Providers\\AppServiceProvider` class. You may export the "
"default migrations using the following command: `php artisan vendor:publish "
"--tag=telescope-migrations`"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:60
#, no-wrap
msgid "<a name=\"local-only-installation\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/telescope.md:60
#, no-wrap
msgid "Local Only Installation"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:63
msgid ""
"If you plan to only use Telescope to assist your local development, you may "
"install Telescope using the `--dev` flag:"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:65
#, no-wrap
msgid "    composer require laravel/telescope --dev\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:71
msgid ""
"After running `telescope:install`, you should remove the "
"`TelescopeServiceProvider` service provider registration from your "
"application's `config/app.php` configuration file. Instead, manually "
"register Telescope's service providers in the `register` method of your "
"`App\\Providers\\AppServiceProvider` class. We will ensure the current "
"environment is `local` before registering the providers:"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:84
#, no-wrap
msgid ""
"    /**\n"
"     * Register any application services.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function register()\n"
"    {\n"
"        if ($this->app->environment('local')) {\n"
"            "
"$this->app->register(\\Laravel\\Telescope\\TelescopeServiceProvider::class);\n"
"            $this->app->register(TelescopeServiceProvider::class);\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:86
msgid ""
"Finally, you should also prevent the Telescope package from being "
"[auto-discovered](/docs/{{version}}/packages#package-discovery) by adding "
"the following to your `composer.json` file:"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:94
#, no-wrap
msgid ""
"    \"extra\": {\n"
"        \"laravel\": {\n"
"            \"dont-discover\": [\n"
"                \"laravel/telescope\"\n"
"            ]\n"
"        }\n"
"    },\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:96
#, no-wrap
msgid "<a name=\"configuration\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/telescope.md:96
#, no-wrap
msgid "Configuration"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:99
msgid ""
"After publishing Telescope's assets, its primary configuration file will be "
"located at `config/telescope.php`. This configuration file allows you to "
"configure your [watcher options](#available-watchers). Each configuration "
"option includes a description of its purpose, so be sure to thoroughly "
"explore this file."
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:101
msgid ""
"If desired, you may disable Telescope's data collection entirely using the "
"`enabled` configuration option:"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:103
#, no-wrap
msgid "    'enabled' => env('TELESCOPE_ENABLED', true),\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:105
#, no-wrap
msgid "<a name=\"data-pruning\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/telescope.md:105
#, no-wrap
msgid "Data Pruning"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:108
msgid ""
"Without pruning, the `telescope_entries` table can accumulate records very "
"quickly. To mitigate this, you should "
"[schedule](/docs/{{version}}/scheduling) the `telescope:prune` Artisan "
"command to run daily:"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:110
#, no-wrap
msgid "    $schedule->command('telescope:prune')->daily();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:112
msgid ""
"By default, all entries older than 24 hours will be pruned. You may use the "
"`hours` option when calling the command to determine how long to retain "
"Telescope data. For example, the following command will delete all records "
"created over 48 hours ago:"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:114
#, no-wrap
msgid "    $schedule->command('telescope:prune --hours=48')->daily();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:116
#, no-wrap
msgid "<a name=\"dashboard-authorization\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/telescope.md:116
#, no-wrap
msgid "Dashboard Authorization"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:119
msgid ""
"The Telescope dashboard may be accessed at the `/telescope` route. By "
"default, you will only be able to access this dashboard in the `local` "
"environment. Within your `app/Providers/TelescopeServiceProvider.php` file, "
"there is an [authorization gate](/docs/{{version}}/authorization#gates) "
"definition. This authorization gate controls access to Telescope in "
"**non-local** environments. You are free to modify this gate as needed to "
"restrict access to your Telescope installation:"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:135
#, no-wrap
msgid ""
"    /**\n"
"     * Register the Telescope gate.\n"
"     *\n"
"     * This gate determines who can access Telescope in non-local "
"environments.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    protected function gate()\n"
"    {\n"
"        Gate::define('viewTelescope', function ($user) {\n"
"            return in_array($user->email, [\n"
"                'taylor@laravel.com',\n"
"            ]);\n"
"        });\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:137
#, no-wrap
msgid ""
"> {note} You should ensure you change your `APP_ENV` environment variable to "
"`production` in your production environment. Otherwise, your Telescope "
"installation will be publicly available.\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:139
#, no-wrap
msgid "<a name=\"upgrading-telescope\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/telescope.md:139
#, no-wrap
msgid "Upgrading Telescope"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:142
msgid ""
"When upgrading to a new major version of Telescope, it's important that you "
"carefully review [the upgrade "
"guide](https://github.com/laravel/telescope/blob/master/UPGRADE.md)."
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:144
msgid ""
"In addition, when upgrading to any new Telescope version, you should "
"re-publish Telescope's assets:"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:146
#, no-wrap
msgid "    php artisan telescope:publish\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:148
msgid ""
"To keep the assets up-to-date and avoid issues in future updates, you may "
"add the `telescope:publish` command to the `post-update-cmd` scripts in your "
"application's `composer.json` file:"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:156
#, no-wrap
msgid ""
"    {\n"
"        \"scripts\": {\n"
"            \"post-update-cmd\": [\n"
"                \"@php artisan telescope:publish --ansi\"\n"
"            ]\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:158
#, no-wrap
msgid "<a name=\"filtering\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/telescope.md:158
#, no-wrap
msgid "Filtering"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:161
#, no-wrap
msgid "<a name=\"filtering-entries\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/telescope.md:161
#, no-wrap
msgid "Entries"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:164
msgid ""
"You may filter the data that is recorded by Telescope via the `filter` "
"closure that is defined in your `App\\Providers\\TelescopeServiceProvider` "
"class. By default, this closure records all data in the `local` environment "
"and exceptions, failed jobs, scheduled tasks, and data with monitored tags "
"in all other environments:"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:167 docs/8.x/telescope.md:227
#, no-wrap
msgid ""
"    use Laravel\\Telescope\\IncomingEntry;\n"
"    use Laravel\\Telescope\\Telescope;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:176 docs/8.x/telescope.md:205 docs/8.x/telescope.md:236
#, no-wrap
msgid ""
"    /**\n"
"     * Register any application services.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function register()\n"
"    {\n"
"        $this->hideSensitiveRequestDetails();\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:181
#, no-wrap
msgid ""
"        Telescope::filter(function (IncomingEntry $entry) {\n"
"            if ($this->app->environment('local')) {\n"
"                return true;\n"
"            }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:188
#, no-wrap
msgid ""
"            return $entry->isReportableException() ||\n"
"                $entry->isFailedJob() ||\n"
"                $entry->isScheduledTask() ||\n"
"                $entry->hasMonitoredTag();\n"
"        });\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:190
#, no-wrap
msgid "<a name=\"filtering-batches\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/telescope.md:190
#, no-wrap
msgid "Batches"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:193
msgid ""
"While the `filter` closure filters data for individual entries, you may use "
"the `filterBatch` method to register a closure that filters all data for a "
"given request or console command. If the closure returns `true`, all of the "
"entries are recorded by Telescope:"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:196
#, no-wrap
msgid ""
"    use Illuminate\\Support\\Collection;\n"
"    use Laravel\\Telescope\\Telescope;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:210
#, no-wrap
msgid ""
"        Telescope::filterBatch(function (Collection $entries) {\n"
"            if ($this->app->environment('local')) {\n"
"                return true;\n"
"            }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:219
#, no-wrap
msgid ""
"            return $entries->contains(function ($entry) {\n"
"                return $entry->isReportableException() ||\n"
"                    $entry->isFailedJob() ||\n"
"                    $entry->isScheduledTask() ||\n"
"                    $entry->hasMonitoredTag();\n"
"                });\n"
"        });\n"
"    }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:221
#, no-wrap
msgid "<a name=\"tagging\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/telescope.md:221
#, no-wrap
msgid "Tagging"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:224
msgid ""
"Telescope allows you to search entries by \"tag\". Often, tags are Eloquent "
"model class names or authenticated user IDs which Telescope automatically "
"adds to entries. Occasionally, you may want to attach your own custom tags "
"to entries. To accomplish this, you may use the `Telescope::tag` method. The "
"`tag` method accepts a closure which should return an array of tags. The "
"tags returned by the closure will be merged with any tags Telescope would "
"automatically attach to the entry. Typically, you should call the `tag` "
"method within the `register` method of your "
"`App\\Providers\\TelescopeServiceProvider` class:"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:243
#, no-wrap
msgid ""
"        Telescope::tag(function (IncomingEntry $entry) {\n"
"            return $entry->type === 'request'\n"
"                        ? ['status:'.$entry->content['response_status']]\n"
"                        : [];\n"
"        });\n"
"     }\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:245
#, no-wrap
msgid "<a name=\"available-watchers\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/telescope.md:245
#, no-wrap
msgid "Available Watchers"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:248
msgid ""
"Telescope \"watchers\" gather application data when a request or console "
"command is executed. You may customize the list of watchers that you would "
"like to enable within your `config/telescope.php` configuration file:"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:254
#, no-wrap
msgid ""
"    'watchers' => [\n"
"        Watchers\\CacheWatcher::class => true,\n"
"        Watchers\\CommandWatcher::class => true,\n"
"        ...\n"
"    ],\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:256
msgid "Some watchers also allow you to provide additional customization options:"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:264
#, no-wrap
msgid ""
"    'watchers' => [\n"
"        Watchers\\QueryWatcher::class => [\n"
"            'enabled' => env('TELESCOPE_QUERY_WATCHER', true),\n"
"            'slow' => 100,\n"
"        ],\n"
"        ...\n"
"    ],\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:266
#, no-wrap
msgid "<a name=\"batch-watcher\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/telescope.md:266
#, no-wrap
msgid "Batch Watcher"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:269
msgid ""
"The batch watcher records information about queued "
"[batches](/docs/{{version}}/queues#job-batching), including the job and "
"connection information."
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:271
#, no-wrap
msgid "<a name=\"cache-watcher\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/telescope.md:271
#, no-wrap
msgid "Cache Watcher"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:274
msgid ""
"The cache watcher records data when a cache key is hit, missed, updated and "
"forgotten."
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:276
#, no-wrap
msgid "<a name=\"command-watcher\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/telescope.md:276
#, no-wrap
msgid "Command Watcher"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:279
msgid ""
"The command watcher records the arguments, options, exit code, and output "
"whenever an Artisan command is executed. If you would like to exclude "
"certain commands from being recorded by the watcher, you may specify the "
"command in the `ignore` option within your `config/telescope.php` file:"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:287
#, no-wrap
msgid ""
"    'watchers' => [\n"
"        Watchers\\CommandWatcher::class => [\n"
"            'enabled' => env('TELESCOPE_COMMAND_WATCHER', true),\n"
"            'ignore' => ['key:generate'],\n"
"        ],\n"
"        ...\n"
"    ],\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:289
#, no-wrap
msgid "<a name=\"dump-watcher\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/telescope.md:289
#, no-wrap
msgid "Dump Watcher"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:292
msgid ""
"The dump watcher records and displays your variable dumps in Telescope. When "
"using Laravel, variables may be dumped using the global `dump` function. The "
"dump watcher tab must be open in a browser for the dump to be recorded, "
"otherwise, the dumps will be ignored by the watcher."
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:294
#, no-wrap
msgid "<a name=\"event-watcher\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/telescope.md:294
#, no-wrap
msgid "Event Watcher"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:297
msgid ""
"The event watcher records the payload, listeners, and broadcast data for any "
"[events](/docs/{{version}}/events) dispatched by your application. The "
"Laravel framework's internal events are ignored by the Event watcher."
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:299
#, no-wrap
msgid "<a name=\"exception-watcher\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/telescope.md:299
#, no-wrap
msgid "Exception Watcher"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:302
msgid ""
"The exception watcher records the data and stack trace for any reportable "
"exceptions that are thrown by your application."
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:304
#, no-wrap
msgid "<a name=\"gate-watcher\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/telescope.md:304
#, no-wrap
msgid "Gate Watcher"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:307
msgid ""
"The gate watcher records the data and result of [gate and "
"policy](/docs/{{version}}/authorization) checks by your application. If you "
"would like to exclude certain abilities from being recorded by the watcher, "
"you may specify those in the `ignore_abilities` option in your "
"`config/telescope.php` file:"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:315
#, no-wrap
msgid ""
"    'watchers' => [\n"
"        Watchers\\GateWatcher::class => [\n"
"            'enabled' => env('TELESCOPE_GATE_WATCHER', true),\n"
"            'ignore_abilities' => ['viewNova'],\n"
"        ],\n"
"        ...\n"
"    ],\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:317
#, no-wrap
msgid "<a name=\"job-watcher\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/telescope.md:317
#, no-wrap
msgid "Job Watcher"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:320
msgid ""
"The job watcher records the data and status of any "
"[jobs](/docs/{{version}}/queues) dispatched by your application."
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:322
#, no-wrap
msgid "<a name=\"log-watcher\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/telescope.md:322
#, no-wrap
msgid "Log Watcher"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:325
msgid ""
"The log watcher records the [log data](/docs/{{version}}/logging) for any "
"logs written by your application."
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:327
#, no-wrap
msgid "<a name=\"mail-watcher\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/telescope.md:327
#, no-wrap
msgid "Mail Watcher"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:330
msgid ""
"The mail watcher allows you to view an in-browser preview of "
"[emails](/docs/{{version}}/mail) sent by your application along with their "
"associated data. You may also download the email as an `.eml` file."
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:332
#, no-wrap
msgid "<a name=\"model-watcher\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/telescope.md:332
#, no-wrap
msgid "Model Watcher"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:335
msgid ""
"The model watcher records model changes whenever an Eloquent [model "
"event](/docs/{{version}}/eloquent#events) is dispatched. You may specify "
"which model events should be recorded via the watcher's `events` option:"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:343
#, no-wrap
msgid ""
"    'watchers' => [\n"
"        Watchers\\ModelWatcher::class => [\n"
"            'enabled' => env('TELESCOPE_MODEL_WATCHER', true),\n"
"            'events' => ['eloquent.created*', 'eloquent.updated*'],\n"
"        ],\n"
"        ...\n"
"    ],\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:345
msgid ""
"If you would like to record the number of models hydrated during a given "
"request, enable the `hydrations` option:"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:354
#, no-wrap
msgid ""
"    'watchers' => [\n"
"        Watchers\\ModelWatcher::class => [\n"
"            'enabled' => env('TELESCOPE_MODEL_WATCHER', true),\n"
"            'events' => ['eloquent.created*', 'eloquent.updated*'],\n"
"            'hydrations' => true,\n"
"        ],\n"
"        ...\n"
"    ],\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:356
#, no-wrap
msgid "<a name=\"notification-watcher\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/telescope.md:356
#, no-wrap
msgid "Notification Watcher"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:359
msgid ""
"The notification watcher records all "
"[notifications](/docs/{{version}}/notifications) sent by your "
"application. If the notification triggers an email and you have the mail "
"watcher enabled, the email will also be available for preview on the mail "
"watcher screen."
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:361
#, no-wrap
msgid "<a name=\"query-watcher\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/telescope.md:361
#, no-wrap
msgid "Query Watcher"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:364
msgid ""
"The query watcher records the raw SQL, bindings, and execution time for all "
"queries that are executed by your application. The watcher also tags any "
"queries slower than 100 milliseconds as `slow`. You may customize the slow "
"query threshold using the watcher's `slow` option:"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:372
#, no-wrap
msgid ""
"    'watchers' => [\n"
"        Watchers\\QueryWatcher::class => [\n"
"            'enabled' => env('TELESCOPE_QUERY_WATCHER', true),\n"
"            'slow' => 50,\n"
"        ],\n"
"        ...\n"
"    ],\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:374
#, no-wrap
msgid "<a name=\"redis-watcher\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/telescope.md:374
#, no-wrap
msgid "Redis Watcher"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:377
msgid ""
"The Redis watcher records all [Redis](/docs/{{version}}/redis) commands "
"executed by your application. If you are using Redis for caching, cache "
"commands will also be recorded by the Redis watcher."
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:379
#, no-wrap
msgid "<a name=\"request-watcher\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/telescope.md:379
#, no-wrap
msgid "Request Watcher"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:382
msgid ""
"The request watcher records the request, headers, session, and response data "
"associated with any requests handled by the application. You may limit your "
"recorded response data via the `size_limit` (in kilobytes) option:"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:390
#, no-wrap
msgid ""
"    'watchers' => [\n"
"        Watchers\\RequestWatcher::class => [\n"
"            'enabled' => env('TELESCOPE_REQUEST_WATCHER', true),\n"
"            'size_limit' => env('TELESCOPE_RESPONSE_SIZE_LIMIT', 64),\n"
"        ],\n"
"        ...\n"
"    ],\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:392
#, no-wrap
msgid "<a name=\"schedule-watcher\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/telescope.md:392
#, no-wrap
msgid "Schedule Watcher"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:395
msgid ""
"The schedule watcher records the command and output of any [scheduled "
"tasks](/docs/{{version}}/scheduling) run by your application."
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:397
#, no-wrap
msgid "<a name=\"view-watcher\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/telescope.md:397
#, no-wrap
msgid "View Watcher"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:400
msgid ""
"The view watcher records the [view](/docs/{{version}}/views) name, path, "
"data, and \"composers\" used when rendering views."
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:402
#, no-wrap
msgid "<a name=\"displaying-user-avatars\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/telescope.md:402
#, no-wrap
msgid "Displaying User Avatars"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:405
msgid ""
"The Telescope dashboard displays the user avatar for the user that was "
"authenticated when a given entry was saved. By default, Telescope will "
"retrieve avatars using the Gravatar web service. However, you may customize "
"the avatar URL by registering a callback in your "
"`App\\Providers\\TelescopeServiceProvider` class. The callback will receive "
"the user's ID and email address and should return the user's avatar image "
"URL:"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:408
#, no-wrap
msgid ""
"    use App\\Models\\User;\n"
"    use Laravel\\Telescope\\Telescope;\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:417
#, no-wrap
msgid ""
"    /**\n"
"     * Register any application services.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function register()\n"
"    {\n"
"        // ...\n"
msgstr ""

#. type: Plain text
#: docs/8.x/telescope.md:421
#, no-wrap
msgid ""
"        Telescope::avatar(function ($id, $email) {\n"
"            return '/avatars/'.User::find($id)->avatar_path;\n"
"        });\n"
"    }\n"
msgstr ""
