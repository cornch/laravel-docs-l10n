# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Taylor Otwell
# This file is distributed under the same license as the Laravel Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2021-03-30 14:06+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title #
#: docs/8.x/lifecycle.md:1
#, markdown-text, no-wrap
msgid "Request Lifecycle"
msgstr ""

#. type: Bullet: '- '
#: docs/8.x/lifecycle.md:11
#, markdown-text
msgid "[Introduction](#introduction)"
msgstr ""

#. type: Bullet: '- '
#: docs/8.x/lifecycle.md:11
#, markdown-text
msgid "[Lifecycle Overview](#lifecycle-overview)"
msgstr ""

#. type: Bullet: '    - '
#: docs/8.x/lifecycle.md:11
#, markdown-text
msgid "[First Steps](#first-steps)"
msgstr ""

#. type: Bullet: '    - '
#: docs/8.x/lifecycle.md:11
#, markdown-text
msgid "[HTTP / Console Kernels](#http-console-kernels)"
msgstr ""

#. type: Bullet: '    - '
#: docs/8.x/lifecycle.md:11
#, markdown-text
msgid "[Service Providers](#service-providers)"
msgstr ""

#. type: Bullet: '    - '
#: docs/8.x/lifecycle.md:11
#, markdown-text
msgid "[Routing](#routing)"
msgstr ""

#. type: Bullet: '    - '
#: docs/8.x/lifecycle.md:11
#, markdown-text
msgid "[Finishing Up](#finishing-up)"
msgstr ""

#. type: Bullet: '- '
#: docs/8.x/lifecycle.md:11
#, markdown-text
msgid "[Focus On Service Providers](#focus-on-service-providers)"
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:13
#, markdown-text, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/lifecycle.md:13
#, markdown-text, no-wrap
msgid "Introduction"
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:16
#, markdown-text
msgid ""
"When using any tool in the \"real world\", you feel more confident if you "
"understand how that tool works. Application development is no "
"different. When you understand how your development tools function, you feel "
"more comfortable and confident using them."
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:18
#, markdown-text
msgid ""
"The goal of this document is to give you a good, high-level overview of how "
"the Laravel framework works. By getting to know the overall framework "
"better, everything feels less \"magical\" and you will be more confident "
"building your applications. If you don't understand all of the terms right "
"away, don't lose heart! Just try to get a basic grasp of what is going on, "
"and your knowledge will grow as you explore other sections of the "
"documentation."
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:20
#, markdown-text, no-wrap
msgid "<a name=\"lifecycle-overview\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/lifecycle.md:20
#, markdown-text, no-wrap
msgid "Lifecycle Overview"
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:23
#, markdown-text, no-wrap
msgid "<a name=\"first-steps\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/lifecycle.md:23
#, markdown-text, no-wrap
msgid "First Steps"
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:26
#, markdown-text
msgid ""
"The entry point for all requests to a Laravel application is the "
"`public/index.php` file. All requests are directed to this file by your web "
"server (Apache / Nginx) configuration. The `index.php` file doesn't contain "
"much code. Rather, it is a starting point for loading the rest of the "
"framework."
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:28
#, markdown-text
msgid ""
"The `index.php` file loads the Composer generated autoloader definition, and "
"then retrieves an instance of the Laravel application from "
"`bootstrap/app.php`. The first action taken by Laravel itself is to create "
"an instance of the application / [service "
"container](/docs/{{version}}/container)."
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:30
#, markdown-text, no-wrap
msgid "<a name=\"http-console-kernels\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/lifecycle.md:30
#, markdown-text, no-wrap
msgid "HTTP / Console Kernels"
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:33
#, markdown-text
msgid ""
"Next, the incoming request is sent to either the HTTP kernel or the console "
"kernel, depending on the type of request that is entering the "
"application. These two kernels serve as the central location that all "
"requests flow through. For now, let's just focus on the HTTP kernel, which "
"is located in `app/Http/Kernel.php`."
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:35
#, markdown-text
msgid ""
"The HTTP kernel extends the `Illuminate\\Foundation\\Http\\Kernel` class, "
"which defines an array of `bootstrappers` that will be run before the "
"request is executed. These bootstrappers configure error handling, configure "
"logging, [detect the application "
"environment](/docs/{{version}}/configuration#environment-configuration), and "
"perform other tasks that need to be done before the request is actually "
"handled. Typically, these classes handle internal Laravel configuration that "
"you do not need to worry about."
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:37
#, markdown-text
msgid ""
"The HTTP kernel also defines a list of HTTP "
"[middleware](/docs/{{version}}/middleware) that all requests must pass "
"through before being handled by the application. These middleware handle "
"reading and writing the [HTTP session](/docs/{{version}}/session), "
"determining if the application is in maintenance mode, [verifying the CSRF "
"token](/docs/{{version}}/csrf), and more. We'll talk more about these soon."
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:39
#, markdown-text
msgid ""
"The method signature for the HTTP kernel's `handle` method is quite simple: "
"it receives a `Request` and returns a `Response`. Think of the kernel as "
"being a big black box that represents your entire application. Feed it HTTP "
"requests and it will return HTTP responses."
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:41
#, markdown-text, no-wrap
msgid "<a name=\"service-providers\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/lifecycle.md:41
#, markdown-text, no-wrap
msgid "Service Providers"
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:44
#, markdown-text
msgid ""
"One of the most important kernel bootstrapping actions is loading the "
"[service providers](/docs/{{version}}/providers) for your application. All "
"of the service providers for the application are configured in the "
"`config/app.php` configuration file's `providers` array."
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:46
#, markdown-text
msgid ""
"Laravel will iterate through this list of providers and instantiate each of "
"them. After instantiating the providers, the `register` method will be "
"called on all of the providers. Then, once all of the providers have been "
"registered, the `boot` method will be called on each provider."
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:48
#, markdown-text
msgid ""
"Service providers are responsible for bootstrapping all of the framework's "
"various components, such as the database, queue, validation, and routing "
"components. Essentially every major feature offered by Laravel is "
"bootstrapped and configured by a service provider. Since they bootstrap and "
"configure so many features offered by the framework, service providers are "
"the most important aspect of the entire Laravel bootstrap process."
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:50
#, markdown-text
msgid ""
"You may be wondering why the `register` method of every service provider is "
"called before calling the `boot` method on any service providers. The answer "
"is simple. By calling the `register` method of every service provider first, "
"service providers may depend on every container binding being registered and "
"available by the time the `boot` method is executed."
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:52
#, markdown-text, no-wrap
msgid "<a name=\"routing\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/lifecycle.md:52
#, markdown-text, no-wrap
msgid "Routing"
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:55
#, markdown-text
msgid ""
"One of the most important service providers in your application is the "
"`App\\Providers\\RouteServiceProvider`. This service provider loads the "
"route files contained within your application's `routes` directory. Go "
"ahead, crack open the `RouteServiceProvider` code and take a look at how it "
"works!"
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:57
#, markdown-text
msgid ""
"Once the application has been bootstrapped and all service providers have "
"been registered, the `Request` will be handed off to the router for "
"dispatching. The router will dispatch the request to a route or controller, "
"as well as run any route specific middleware."
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:59
#, markdown-text
msgid ""
"Middleware provide a convenient mechanism for filtering or examining HTTP "
"requests entering your application. For example, Laravel includes a "
"middleware that verifies if the user of your application is "
"authenticated. If the user is not authenticated, the middleware will "
"redirect the user to the login screen. However, if the user is "
"authenticated, the middleware will allow the request to proceed further into "
"the application. Some middleware are assigned to all routes within the "
"application, like those defined in the `$middleware` property of your HTTP "
"kernel, while some are only assigned to specific routes or route groups. You "
"can learn more about middleware by reading the complete [middleware "
"documentation](/docs/{{version}}/middleware)."
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:61
#, markdown-text
msgid ""
"If the request passes through all of the matched route's assigned "
"middleware, the route or controller method will be executed and the response "
"returned by the route or controller method will be sent back through the "
"route's chain of middleware."
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:63
#, markdown-text, no-wrap
msgid "<a name=\"finishing-up\"></a>\n"
msgstr ""

#. type: Title ###
#: docs/8.x/lifecycle.md:63
#, markdown-text, no-wrap
msgid "Finishing Up"
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:66
#, markdown-text
msgid ""
"Once the route or controller method returns a response, the response will "
"travel back outward through the route's middleware, giving the application a "
"chance to modify or examine the outgoing response."
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:68
#, markdown-text
msgid ""
"Finally, once the response travels back through the middleware, the HTTP "
"kernel's `handle` method returns the response object and the `index.php` "
"file calls the `send` method on the returned response. The `send` method "
"sends the response content to the user's web browser. We've finished our "
"journey through the entire Laravel request lifecycle!"
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:70
#, markdown-text, no-wrap
msgid "<a name=\"focus-on-service-providers\"></a>\n"
msgstr ""

#. type: Title ##
#: docs/8.x/lifecycle.md:70
#, markdown-text, no-wrap
msgid "Focus On Service Providers"
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:73
#, markdown-text
msgid ""
"Service providers are truly the key to bootstrapping a Laravel "
"application. The application instance is created, the service providers are "
"registered, and the request is handed to the bootstrapped application. It's "
"really that simple!"
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:75
#, markdown-text
msgid ""
"Having a firm grasp of how a Laravel application is built and bootstrapped "
"via service providers is very valuable. Your application's default service "
"providers are stored in the `app/Providers` directory."
msgstr ""

#. type: Plain text
#: docs/8.x/lifecycle.md:76
#, markdown-text
msgid ""
"By default, the `AppServiceProvider` is fairly empty. This provider is a "
"great place to add your application's own bootstrapping and service "
"container bindings. For large applications, you may wish to create several "
"service providers, each with more granular bootstrapping for specific "
"services used by your application."
msgstr ""
