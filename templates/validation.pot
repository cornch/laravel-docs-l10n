msgid ""
msgstr ""

#: ./docs/8.x/validation.md:1
#: ./docs/9.x/validation.md:1
#: ./docs/10.x/validation.md:1
#: ./docs/11.x/validation.md:1
#: ./docs/master/validation.md:1
msgctxt "H1"
msgid "Validation"
msgstr ""

#: ./docs/8.x/validation.md:3
#: ./docs/9.x/validation.md:3
#: ./docs/10.x/validation.md:3
#: ./docs/11.x/validation.md:3
#: ./docs/master/validation.md:3
msgctxt "P"
msgid "[Introduction](#introduction)"
msgstr ""

#: ./docs/8.x/validation.md:4
#: ./docs/9.x/validation.md:4
#: ./docs/10.x/validation.md:4
#: ./docs/11.x/validation.md:4
#: ./docs/master/validation.md:4
msgctxt "P"
msgid "[Validation Quickstart](#validation-quickstart)"
msgstr ""

#: ./docs/10.x/validation.md:5
#: ./docs/11.x/validation.md:5
#: ./docs/master/validation.md:5
msgctxt "P"
msgid "[Defining the Routes](#quick-defining-the-routes)"
msgstr ""

#: ./docs/8.x/validation.md:5
#: ./docs/9.x/validation.md:5
msgctxt "P"
msgid "[Defining The Routes](#quick-defining-the-routes)"
msgstr ""

#: ./docs/10.x/validation.md:6
#: ./docs/11.x/validation.md:6
#: ./docs/master/validation.md:6
msgctxt "P"
msgid "[Creating the Controller](#quick-creating-the-controller)"
msgstr ""

#: ./docs/8.x/validation.md:6
#: ./docs/9.x/validation.md:6
msgctxt "P"
msgid "[Creating The Controller](#quick-creating-the-controller)"
msgstr ""

#: ./docs/10.x/validation.md:7
#: ./docs/11.x/validation.md:7
#: ./docs/master/validation.md:7
msgctxt "P"
msgid "[Writing the Validation Logic](#quick-writing-the-validation-logic)"
msgstr ""

#: ./docs/8.x/validation.md:7
#: ./docs/9.x/validation.md:7
msgctxt "P"
msgid "[Writing The Validation Logic](#quick-writing-the-validation-logic)"
msgstr ""

#: ./docs/10.x/validation.md:8
#: ./docs/11.x/validation.md:8
#: ./docs/master/validation.md:8
msgctxt "P"
msgid "[Displaying the Validation Errors](#quick-displaying-the-validation-errors)"
msgstr ""

#: ./docs/8.x/validation.md:8
#: ./docs/9.x/validation.md:8
msgctxt "P"
msgid "[Displaying The Validation Errors](#quick-displaying-the-validation-errors)"
msgstr ""

#: ./docs/8.x/validation.md:9
#: ./docs/9.x/validation.md:9
#: ./docs/10.x/validation.md:9
#: ./docs/11.x/validation.md:9
#: ./docs/master/validation.md:9
msgctxt "P"
msgid "[Repopulating Forms](#repopulating-forms)"
msgstr ""

#: ./docs/10.x/validation.md:10
#: ./docs/11.x/validation.md:10
#: ./docs/master/validation.md:10
msgctxt "P"
msgid "[A Note on Optional Fields](#a-note-on-optional-fields)"
msgstr ""

#: ./docs/8.x/validation.md:10
#: ./docs/9.x/validation.md:10
msgctxt "P"
msgid "[A Note On Optional Fields](#a-note-on-optional-fields)"
msgstr ""

#: ./docs/8.x/validation.md:11
#: ./docs/9.x/validation.md:12
#: ./docs/10.x/validation.md:12
#: ./docs/11.x/validation.md:12
#: ./docs/master/validation.md:12
msgctxt "P"
msgid "[Form Request Validation](#form-request-validation)"
msgstr ""

#: ./docs/9.x/validation.md:11
#: ./docs/10.x/validation.md:11
#: ./docs/11.x/validation.md:11
#: ./docs/master/validation.md:11
msgctxt "P"
msgid "[Validation Error Response Format](#validation-error-response-format)"
msgstr ""

#: ./docs/8.x/validation.md:12
#: ./docs/9.x/validation.md:13
#: ./docs/10.x/validation.md:13
#: ./docs/11.x/validation.md:13
#: ./docs/master/validation.md:13
msgctxt "P"
msgid "[Creating Form Requests](#creating-form-requests)"
msgstr ""

#: ./docs/8.x/validation.md:13
#: ./docs/9.x/validation.md:14
#: ./docs/10.x/validation.md:14
#: ./docs/11.x/validation.md:14
#: ./docs/master/validation.md:14
msgctxt "P"
msgid "[Authorizing Form Requests](#authorizing-form-requests)"
msgstr ""

#: ./docs/8.x/validation.md:14
#: ./docs/9.x/validation.md:15
msgctxt "P"
msgid "[Customizing The Error Messages](#customizing-the-error-messages)"
msgstr ""

#: ./docs/10.x/validation.md:15
#: ./docs/11.x/validation.md:15
#: ./docs/master/validation.md:15
msgctxt "P"
msgid "[Customizing the Error Messages](#customizing-the-error-messages)"
msgstr ""

#: ./docs/8.x/validation.md:15
#: ./docs/9.x/validation.md:16
msgctxt "P"
msgid "[Preparing Input For Validation](#preparing-input-for-validation)"
msgstr ""

#: ./docs/10.x/validation.md:16
#: ./docs/11.x/validation.md:16
#: ./docs/master/validation.md:16
msgctxt "P"
msgid "[Preparing Input for Validation](#preparing-input-for-validation)"
msgstr ""

#: ./docs/8.x/validation.md:16
#: ./docs/9.x/validation.md:17
#: ./docs/10.x/validation.md:17
#: ./docs/11.x/validation.md:17
#: ./docs/master/validation.md:17
msgctxt "P"
msgid "[Manually Creating Validators](#manually-creating-validators)"
msgstr ""

#: ./docs/8.x/validation.md:17
#: ./docs/9.x/validation.md:18
#: ./docs/10.x/validation.md:18
#: ./docs/11.x/validation.md:18
#: ./docs/master/validation.md:18
msgctxt "P"
msgid "[Automatic Redirection](#automatic-redirection)"
msgstr ""

#: ./docs/8.x/validation.md:18
#: ./docs/9.x/validation.md:19
#: ./docs/10.x/validation.md:19
#: ./docs/11.x/validation.md:19
#: ./docs/master/validation.md:19
msgctxt "P"
msgid "[Named Error Bags](#named-error-bags)"
msgstr ""

#: ./docs/8.x/validation.md:19
#: ./docs/9.x/validation.md:20
msgctxt "P"
msgid "[Customizing The Error Messages](#manual-customizing-the-error-messages)"
msgstr ""

#: ./docs/10.x/validation.md:20
#: ./docs/11.x/validation.md:20
#: ./docs/master/validation.md:20
msgctxt "P"
msgid "[Customizing the Error Messages](#manual-customizing-the-error-messages)"
msgstr ""

#: ./docs/8.x/validation.md:20
#: ./docs/9.x/validation.md:21
msgctxt "P"
msgid "[After Validation Hook](#after-validation-hook)"
msgstr ""

#: ./docs/10.x/validation.md:21
#: ./docs/11.x/validation.md:21
#: ./docs/master/validation.md:21
msgctxt "P"
msgid "[Performing Additional Validation](#performing-additional-validation)"
msgstr ""

#: ./docs/8.x/validation.md:21
#: ./docs/9.x/validation.md:22
#: ./docs/10.x/validation.md:22
#: ./docs/11.x/validation.md:22
#: ./docs/master/validation.md:22
msgctxt "P"
msgid "[Working With Validated Input](#working-with-validated-input)"
msgstr ""

#: ./docs/8.x/validation.md:22
#: ./docs/9.x/validation.md:23
#: ./docs/10.x/validation.md:23
#: ./docs/11.x/validation.md:23
#: ./docs/master/validation.md:23
msgctxt "P"
msgid "[Working With Error Messages](#working-with-error-messages)"
msgstr ""

#: ./docs/8.x/validation.md:23
#: ./docs/9.x/validation.md:24
msgctxt "P"
msgid "[Specifying Custom Messages In Language Files](#specifying-custom-messages-in-language-files)"
msgstr ""

#: ./docs/10.x/validation.md:24
#: ./docs/11.x/validation.md:24
#: ./docs/master/validation.md:24
msgctxt "P"
msgid "[Specifying Custom Messages in Language Files](#specifying-custom-messages-in-language-files)"
msgstr ""

#: ./docs/8.x/validation.md:24
#: ./docs/9.x/validation.md:25
msgctxt "P"
msgid "[Specifying Attributes In Language Files](#specifying-attribute-in-language-files)"
msgstr ""

#: ./docs/10.x/validation.md:25
#: ./docs/11.x/validation.md:25
#: ./docs/master/validation.md:25
msgctxt "P"
msgid "[Specifying Attributes in Language Files](#specifying-attribute-in-language-files)"
msgstr ""

#: ./docs/8.x/validation.md:25
#: ./docs/9.x/validation.md:26
msgctxt "P"
msgid "[Specifying Values In Language Files](#specifying-values-in-language-files)"
msgstr ""

#: ./docs/10.x/validation.md:26
#: ./docs/11.x/validation.md:26
#: ./docs/master/validation.md:26
msgctxt "P"
msgid "[Specifying Values in Language Files](#specifying-values-in-language-files)"
msgstr ""

#: ./docs/8.x/validation.md:26
#: ./docs/9.x/validation.md:27
#: ./docs/10.x/validation.md:27
#: ./docs/11.x/validation.md:27
#: ./docs/master/validation.md:27
msgctxt "P"
msgid "[Available Validation Rules](#available-validation-rules)"
msgstr ""

#: ./docs/8.x/validation.md:27
#: ./docs/9.x/validation.md:28
#: ./docs/10.x/validation.md:28
#: ./docs/11.x/validation.md:28
#: ./docs/master/validation.md:28
msgctxt "P"
msgid "[Conditionally Adding Rules](#conditionally-adding-rules)"
msgstr ""

#: ./docs/8.x/validation.md:28
#: ./docs/9.x/validation.md:29
#: ./docs/10.x/validation.md:29
#: ./docs/11.x/validation.md:29
#: ./docs/master/validation.md:29
msgctxt "P"
msgid "[Validating Arrays](#validating-arrays)"
msgstr ""

#: ./docs/8.x/validation.md:29
msgctxt "P"
msgid "[Excluding Unvalidated Array Keys](#excluding-unvalidated-array-keys)"
msgstr ""

#: ./docs/8.x/validation.md:30
#: ./docs/9.x/validation.md:30
#: ./docs/10.x/validation.md:30
#: ./docs/11.x/validation.md:30
#: ./docs/master/validation.md:30
msgctxt "P"
msgid "[Validating Nested Array Input](#validating-nested-array-input)"
msgstr ""

#: ./docs/10.x/validation.md:31
#: ./docs/11.x/validation.md:31
#: ./docs/master/validation.md:31
msgctxt "P"
msgid "[Error Message Indexes and Positions](#error-message-indexes-and-positions)"
msgstr ""

#: ./docs/8.x/validation.md:31
#: ./docs/9.x/validation.md:33
#: ./docs/10.x/validation.md:33
#: ./docs/11.x/validation.md:33
#: ./docs/master/validation.md:33
msgctxt "P"
msgid "[Validating Passwords](#validating-passwords)"
msgstr ""

#: ./docs/9.x/validation.md:31
msgctxt "P"
msgid "[Error Message Indexes & Positions](#error-message-indexes-and-positions)"
msgstr ""

#: ./docs/8.x/validation.md:32
#: ./docs/9.x/validation.md:34
#: ./docs/10.x/validation.md:34
#: ./docs/11.x/validation.md:34
#: ./docs/master/validation.md:34
msgctxt "P"
msgid "[Custom Validation Rules](#custom-validation-rules)"
msgstr ""

#: ./docs/9.x/validation.md:32
#: ./docs/10.x/validation.md:32
#: ./docs/11.x/validation.md:32
#: ./docs/master/validation.md:32
msgctxt "P"
msgid "[Validating Files](#validating-files)"
msgstr ""

#: ./docs/8.x/validation.md:33
#: ./docs/9.x/validation.md:35
#: ./docs/10.x/validation.md:35
#: ./docs/11.x/validation.md:35
#: ./docs/master/validation.md:35
msgctxt "P"
msgid "[Using Rule Objects](#using-rule-objects)"
msgstr ""

#: ./docs/8.x/validation.md:34
#: ./docs/9.x/validation.md:36
#: ./docs/10.x/validation.md:36
#: ./docs/11.x/validation.md:36
#: ./docs/master/validation.md:36
msgctxt "P"
msgid "[Using Closures](#using-closures)"
msgstr ""

#: ./docs/8.x/validation.md:35
#: ./docs/9.x/validation.md:37
#: ./docs/10.x/validation.md:37
#: ./docs/11.x/validation.md:37
#: ./docs/master/validation.md:37
msgctxt "P"
msgid "[Implicit Rules](#implicit-rules)"
msgstr ""

#: ./docs/8.x/validation.md:37
#: ./docs/9.x/validation.md:39
#: ./docs/10.x/validation.md:39
#: ./docs/11.x/validation.md:39
#: ./docs/master/validation.md:39
#~ msgctxt "P"
#~ msgid "<a name=\"introduction\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:38
#: ./docs/9.x/validation.md:40
#: ./docs/10.x/validation.md:40
#: ./docs/11.x/validation.md:40
#: ./docs/master/validation.md:40
msgctxt "H2"
msgid "Introduction"
msgstr ""

#: ./docs/8.x/validation.md:40
#: ./docs/9.x/validation.md:42
#: ./docs/10.x/validation.md:42
#: ./docs/11.x/validation.md:42
#: ./docs/master/validation.md:42
msgctxt "P"
msgid "Laravel provides several different approaches to validate your application's incoming data. It is most common to use the `validate` method available on all incoming HTTP requests. However, we will discuss other approaches to validation as well."
msgstr ""

#: ./docs/8.x/validation.md:42
#: ./docs/9.x/validation.md:44
#: ./docs/10.x/validation.md:44
#: ./docs/11.x/validation.md:44
#: ./docs/master/validation.md:44
msgctxt "P"
msgid "Laravel includes a wide variety of convenient validation rules that you may apply to data, even providing the ability to validate if values are unique in a given database table. We'll cover each of these validation rules in detail so that you are familiar with all of Laravel's validation features."
msgstr ""

#: ./docs/8.x/validation.md:44
#: ./docs/9.x/validation.md:46
#: ./docs/10.x/validation.md:46
#: ./docs/11.x/validation.md:46
#: ./docs/master/validation.md:46
#~ msgctxt "P"
#~ msgid "<a name=\"validation-quickstart\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:45
#: ./docs/9.x/validation.md:47
#: ./docs/10.x/validation.md:47
#: ./docs/11.x/validation.md:47
#: ./docs/master/validation.md:47
msgctxt "H2"
msgid "Validation Quickstart"
msgstr ""

#: ./docs/8.x/validation.md:47
#: ./docs/9.x/validation.md:49
#: ./docs/10.x/validation.md:49
#: ./docs/11.x/validation.md:49
#: ./docs/master/validation.md:49
msgctxt "P"
msgid "To learn about Laravel's powerful validation features, let's look at a complete example of validating a form and displaying the error messages back to the user. By reading this high-level overview, you'll be able to gain a good general understanding of how to validate incoming request data using Laravel:"
msgstr ""

#: ./docs/8.x/validation.md:49
#: ./docs/9.x/validation.md:51
#: ./docs/10.x/validation.md:51
#: ./docs/11.x/validation.md:51
#: ./docs/master/validation.md:51
#~ msgctxt "P"
#~ msgid "<a name=\"quick-defining-the-routes\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:50
#: ./docs/9.x/validation.md:52
msgctxt "H3"
msgid "Defining The Routes"
msgstr ""

#: ./docs/10.x/validation.md:52
#: ./docs/11.x/validation.md:52
#: ./docs/master/validation.md:52
msgctxt "H3"
msgid "Defining the Routes"
msgstr ""

#: ./docs/8.x/validation.md:52
#: ./docs/9.x/validation.md:54
#: ./docs/10.x/validation.md:54
#: ./docs/11.x/validation.md:54
#: ./docs/master/validation.md:54
msgctxt "P"
msgid "First, let's assume we have the following routes defined in our `routes/web.php` file:"
msgstr ""

#: ./docs/8.x/validation.md:54
#: ./docs/9.x/validation.md:56
#: ./docs/10.x/validation.md:56
#: ./docs/11.x/validation.md:56
#: ./docs/master/validation.md:56
msgctxt "CODE"
msgid ""
"use App\\Http\\Controllers\\PostController;\n"
"\n"
"Route::get('/post/create', [PostController::class, 'create']);\n"
"Route::post('/post', [PostController::class, 'store']);"
msgstr ""

#: ./docs/8.x/validation.md:59
#: ./docs/9.x/validation.md:61
#: ./docs/10.x/validation.md:61
#: ./docs/11.x/validation.md:61
#: ./docs/master/validation.md:61
msgctxt "P"
msgid "The `GET` route will display a form for the user to create a new blog post, while the `POST` route will store the new blog post in the database."
msgstr ""

#: ./docs/8.x/validation.md:61
#: ./docs/9.x/validation.md:63
#: ./docs/10.x/validation.md:63
#: ./docs/11.x/validation.md:63
#: ./docs/master/validation.md:63
#~ msgctxt "P"
#~ msgid "<a name=\"quick-creating-the-controller\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:62
#: ./docs/9.x/validation.md:64
msgctxt "H3"
msgid "Creating The Controller"
msgstr ""

#: ./docs/10.x/validation.md:64
#: ./docs/11.x/validation.md:64
#: ./docs/master/validation.md:64
msgctxt "H3"
msgid "Creating the Controller"
msgstr ""

#: ./docs/8.x/validation.md:64
#: ./docs/9.x/validation.md:66
#: ./docs/10.x/validation.md:66
#: ./docs/11.x/validation.md:66
#: ./docs/master/validation.md:66
msgctxt "P"
msgid "Next, let's take a look at a simple controller that handles incoming requests to these routes. We'll leave the `store` method empty for now:"
msgstr ""

#: ./docs/8.x/validation.md:66
#: ./docs/9.x/validation.md:68
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Http\\Controllers;\n"
"\n"
"use App\\Http\\Controllers\\Controller;\n"
"use Illuminate\\Http\\Request;\n"
"\n"
"class PostController extends Controller\n"
"{\n"
"    /**\n"
"     * Show the form to create a new blog post.\n"
"     *\n"
"     * @return \\Illuminate\\View\\View\n"
"     */\n"
"    public function create()\n"
"    {\n"
"        return view('post.create');\n"
"    }\n"
"\n"
"    /**\n"
"     * Store a new blog post.\n"
"     *\n"
"     * @param  \\Illuminate\\Http\\Request  $request\n"
"     * @return \\Illuminate\\Http\\Response\n"
"     */\n"
"    public function store(Request $request)\n"
"    {\n"
"        // Validate and store the blog post...\n"
"    }\n"
"}"
msgstr ""

#: ./docs/10.x/validation.md:68
#: ./docs/11.x/validation.md:68
#: ./docs/master/validation.md:68
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Http\\Controllers;\n"
"\n"
"use Illuminate\\Http\\RedirectResponse;\n"
"use Illuminate\\Http\\Request;\n"
"use Illuminate\\View\\View;\n"
"\n"
"class PostController extends Controller\n"
"{\n"
"    /**\n"
"     * Show the form to create a new blog post.\n"
"     */\n"
"    public function create(): View\n"
"    {\n"
"        return view('post.create');\n"
"    }\n"
"\n"
"    /**\n"
"     * Store a new blog post.\n"
"     */\n"
"    public function store(Request $request): RedirectResponse\n"
"    {\n"
"        // Validate and store the blog post...\n"
"\n"
"        $post = /** ... */\n"
"\n"
"        return to_route('post.show', ['post' => $post->id]);\n"
"    }\n"
"}"
msgstr ""

#: ./docs/8.x/validation.md:97
#: ./docs/9.x/validation.md:99
#: ./docs/10.x/validation.md:99
#: ./docs/11.x/validation.md:99
#: ./docs/master/validation.md:99
#~ msgctxt "P"
#~ msgid "<a name=\"quick-writing-the-validation-logic\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:98
#: ./docs/9.x/validation.md:100
msgctxt "H3"
msgid "Writing The Validation Logic"
msgstr ""

#: ./docs/10.x/validation.md:100
#: ./docs/11.x/validation.md:100
#: ./docs/master/validation.md:100
msgctxt "H3"
msgid "Writing the Validation Logic"
msgstr ""

#: ./docs/8.x/validation.md:100
#: ./docs/9.x/validation.md:102
#: ./docs/10.x/validation.md:102
#: ./docs/11.x/validation.md:102
#: ./docs/master/validation.md:102
msgctxt "P"
msgid "Now we are ready to fill in our `store` method with the logic to validate the new blog post. To do this, we will use the `validate` method provided by the `Illuminate\\Http\\Request` object. If the validation rules pass, your code will keep executing normally; however, if validation fails, an `Illuminate\\Validation\\ValidationException` exception will be thrown and the proper error response will automatically be sent back to the user."
msgstr ""

#: ./docs/8.x/validation.md:102
msgctxt "P"
msgid "If validation fails during a traditional HTTP request, a redirect response to the previous URL will be generated. If the incoming request is an XHR request, a JSON response containing the validation error messages will be returned."
msgstr ""

#: ./docs/8.x/validation.md:104
#: ./docs/9.x/validation.md:106
#: ./docs/10.x/validation.md:106
#: ./docs/11.x/validation.md:106
#: ./docs/master/validation.md:106
msgctxt "P"
msgid "To get a better understanding of the `validate` method, let's jump back into the `store` method:"
msgstr ""

#: ./docs/9.x/validation.md:104
#: ./docs/10.x/validation.md:104
#: ./docs/11.x/validation.md:104
#: ./docs/master/validation.md:104
msgctxt "P"
msgid "If validation fails during a traditional HTTP request, a redirect response to the previous URL will be generated. If the incoming request is an XHR request, a [JSON response containing the validation error messages](#validation-error-response-format) will be returned."
msgstr ""

#: ./docs/8.x/validation.md:106
#: ./docs/9.x/validation.md:108
msgctxt "CODE"
msgid ""
"/**\n"
" * Store a new blog post.\n"
" *\n"
" * @param  \\Illuminate\\Http\\Request  $request\n"
" * @return \\Illuminate\\Http\\Response\n"
" */\n"
"public function store(Request $request)\n"
"{\n"
"    $validated = $request->validate([\n"
"        'title' => 'required|unique:posts|max:255',\n"
"        'body' => 'required',\n"
"    ]);\n"
"\n"
"    // The blog post is valid...\n"
"}"
msgstr ""

#: ./docs/10.x/validation.md:108
#: ./docs/11.x/validation.md:108
#: ./docs/master/validation.md:108
msgctxt "CODE"
msgid ""
"/**\n"
" * Store a new blog post.\n"
" */\n"
"public function store(Request $request): RedirectResponse\n"
"{\n"
"    $validated = $request->validate([\n"
"        'title' => 'required|unique:posts|max:255',\n"
"        'body' => 'required',\n"
"    ]);\n"
"\n"
"    // The blog post is valid...\n"
"\n"
"    return redirect('/posts');\n"
"}"
msgstr ""

#: ./docs/8.x/validation.md:122
#: ./docs/9.x/validation.md:124
#: ./docs/10.x/validation.md:123
#: ./docs/11.x/validation.md:123
#: ./docs/master/validation.md:123
msgctxt "P"
msgid "As you can see, the validation rules are passed into the `validate` method. Don't worry - all available validation rules are [documented](#available-validation-rules). Again, if the validation fails, the proper response will automatically be generated. If the validation passes, our controller will continue executing normally."
msgstr ""

#: ./docs/8.x/validation.md:124
#: ./docs/9.x/validation.md:126
#: ./docs/10.x/validation.md:125
#: ./docs/11.x/validation.md:125
#: ./docs/master/validation.md:125
msgctxt "P"
msgid "Alternatively, validation rules may be specified as arrays of rules instead of a single `|` delimited string:"
msgstr ""

#: ./docs/8.x/validation.md:126
#: ./docs/9.x/validation.md:128
#: ./docs/10.x/validation.md:127
#: ./docs/11.x/validation.md:127
#: ./docs/master/validation.md:127
msgctxt "CODE"
msgid ""
"$validatedData = $request->validate([\n"
"    'title' => ['required', 'unique:posts', 'max:255'],\n"
"    'body' => ['required'],\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:131
#: ./docs/9.x/validation.md:133
#: ./docs/10.x/validation.md:132
#: ./docs/11.x/validation.md:132
#: ./docs/master/validation.md:132
msgctxt "P"
msgid "In addition, you may use the `validateWithBag` method to validate a request and store any error messages within a [named error bag](#named-error-bags):"
msgstr ""

#: ./docs/8.x/validation.md:133
#: ./docs/9.x/validation.md:135
#: ./docs/10.x/validation.md:134
#: ./docs/11.x/validation.md:134
#: ./docs/master/validation.md:134
msgctxt "CODE"
msgid ""
"$validatedData = $request->validateWithBag('post', [\n"
"    'title' => ['required', 'unique:posts', 'max:255'],\n"
"    'body' => ['required'],\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:138
#: ./docs/9.x/validation.md:140
#: ./docs/10.x/validation.md:139
#: ./docs/11.x/validation.md:139
#: ./docs/master/validation.md:139
#~ msgctxt "P"
#~ msgid "<a name=\"stopping-on-first-validation-failure\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:139
#: ./docs/8.x/validation.md:507
#: ./docs/9.x/validation.md:141
#: ./docs/9.x/validation.md:560
msgctxt "H4"
msgid "Stopping On First Validation Failure"
msgstr ""

#: ./docs/10.x/validation.md:140
#: ./docs/10.x/validation.md:584
#: ./docs/11.x/validation.md:140
#: ./docs/11.x/validation.md:586
#: ./docs/master/validation.md:140
#: ./docs/master/validation.md:584
msgctxt "H4"
msgid "Stopping on First Validation Failure"
msgstr ""

#: ./docs/8.x/validation.md:141
#: ./docs/9.x/validation.md:143
#: ./docs/10.x/validation.md:142
#: ./docs/11.x/validation.md:142
#: ./docs/master/validation.md:142
msgctxt "P"
msgid "Sometimes you may wish to stop running validation rules on an attribute after the first validation failure. To do so, assign the `bail` rule to the attribute:"
msgstr ""

#: ./docs/8.x/validation.md:143
#: ./docs/9.x/validation.md:145
#: ./docs/10.x/validation.md:144
#: ./docs/11.x/validation.md:144
#: ./docs/master/validation.md:144
msgctxt "CODE"
msgid ""
"$request->validate([\n"
"    'title' => 'bail|required|unique:posts|max:255',\n"
"    'body' => 'required',\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:148
#: ./docs/9.x/validation.md:150
#: ./docs/10.x/validation.md:149
#: ./docs/11.x/validation.md:149
#: ./docs/master/validation.md:149
msgctxt "P"
msgid "In this example, if the `unique` rule on the `title` attribute fails, the `max` rule will not be checked. Rules will be validated in the order they are assigned."
msgstr ""

#: ./docs/8.x/validation.md:150
#: ./docs/9.x/validation.md:152
#: ./docs/10.x/validation.md:151
#: ./docs/11.x/validation.md:151
#: ./docs/master/validation.md:151
#~ msgctxt "P"
#~ msgid "<a name=\"a-note-on-nested-attributes\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:151
#: ./docs/9.x/validation.md:153
msgctxt "H4"
msgid "A Note On Nested Attributes"
msgstr ""

#: ./docs/10.x/validation.md:152
#: ./docs/11.x/validation.md:152
#: ./docs/master/validation.md:152
msgctxt "H4"
msgid "A Note on Nested Attributes"
msgstr ""

#: ./docs/8.x/validation.md:153
#: ./docs/9.x/validation.md:155
#: ./docs/10.x/validation.md:154
#: ./docs/11.x/validation.md:154
#: ./docs/master/validation.md:154
msgctxt "P"
msgid "If the incoming HTTP request contains \"nested\" field data, you may specify these fields in your validation rules using \"dot\" syntax:"
msgstr ""

#: ./docs/8.x/validation.md:155
#: ./docs/9.x/validation.md:157
#: ./docs/10.x/validation.md:156
#: ./docs/11.x/validation.md:156
#: ./docs/master/validation.md:156
msgctxt "CODE"
msgid ""
"$request->validate([\n"
"    'title' => 'required|unique:posts|max:255',\n"
"    'author.name' => 'required',\n"
"    'author.description' => 'required',\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:161
#: ./docs/9.x/validation.md:163
#: ./docs/10.x/validation.md:162
#: ./docs/11.x/validation.md:162
#: ./docs/master/validation.md:162
msgctxt "P"
msgid "On the other hand, if your field name contains a literal period, you can explicitly prevent this from being interpreted as \"dot\" syntax by escaping the period with a backslash:"
msgstr ""

#: ./docs/8.x/validation.md:163
#: ./docs/9.x/validation.md:165
#: ./docs/10.x/validation.md:164
#: ./docs/11.x/validation.md:164
#: ./docs/master/validation.md:164
msgctxt "CODE"
msgid ""
"$request->validate([\n"
"    'title' => 'required|unique:posts|max:255',\n"
"    'v1\\.0' => 'required',\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:168
#: ./docs/9.x/validation.md:170
#: ./docs/10.x/validation.md:169
#: ./docs/11.x/validation.md:169
#: ./docs/master/validation.md:169
#~ msgctxt "P"
#~ msgid "<a name=\"quick-displaying-the-validation-errors\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:169
#: ./docs/9.x/validation.md:171
msgctxt "H3"
msgid "Displaying The Validation Errors"
msgstr ""

#: ./docs/10.x/validation.md:170
#: ./docs/11.x/validation.md:170
#: ./docs/master/validation.md:170
msgctxt "H3"
msgid "Displaying the Validation Errors"
msgstr ""

#: ./docs/8.x/validation.md:171
#: ./docs/9.x/validation.md:173
#: ./docs/10.x/validation.md:172
#: ./docs/11.x/validation.md:172
#: ./docs/master/validation.md:172
msgctxt "P"
msgid "So, what if the incoming request fields do not pass the given validation rules? As mentioned previously, Laravel will automatically redirect the user back to their previous location. In addition, all of the validation errors and [request input](/docs/{{version}}/requests#retrieving-old-input) will automatically be [flashed to the session](/docs/{{version}}/session#flash-data)."
msgstr ""

#: ./docs/8.x/validation.md:173
#: ./docs/9.x/validation.md:175
#: ./docs/10.x/validation.md:174
#: ./docs/11.x/validation.md:174
#: ./docs/master/validation.md:174
msgctxt "P"
msgid "An `$errors` variable is shared with all of your application's views by the `Illuminate\\View\\Middleware\\ShareErrorsFromSession` middleware, which is provided by the `web` middleware group. When this middleware is applied an `$errors` variable will always be available in your views, allowing you to conveniently assume the `$errors` variable is always defined and can be safely used. The `$errors` variable will be an instance of `Illuminate\\Support\\MessageBag`. For more information on working with this object, [check out its documentation](#working-with-error-messages)."
msgstr ""

#: ./docs/8.x/validation.md:175
#: ./docs/9.x/validation.md:177
#: ./docs/10.x/validation.md:176
#: ./docs/11.x/validation.md:176
#: ./docs/master/validation.md:176
msgctxt "P"
msgid "So, in our example, the user will be redirected to our controller's `create` method when validation fails, allowing us to display the error messages in the view:"
msgstr ""

#: ./docs/8.x/validation.md:177
#: ./docs/9.x/validation.md:179
#: ./docs/10.x/validation.md:178
#: ./docs/11.x/validation.md:178
#: ./docs/master/validation.md:178
msgctxt "CODE: html"
msgid ""
"<!-- /resources/views/post/create.blade.php -->\n"
"\n"
"<h1>Create Post</h1>\n"
"\n"
"@if ($errors->any())\n"
"    <div class=\"alert alert-danger\">\n"
"        <ul>\n"
"            @foreach ($errors->all() as $error)\n"
"                <li>{{ $error }}</li>\n"
"            @endforeach\n"
"        </ul>\n"
"    </div>\n"
"@endif\n"
"\n"
"<!-- Create Post Form -->"
msgstr ""

#: ./docs/8.x/validation.md:195
#: ./docs/9.x/validation.md:197
#: ./docs/10.x/validation.md:196
#: ./docs/11.x/validation.md:196
#: ./docs/master/validation.md:196
#~ msgctxt "P"
#~ msgid "<a name=\"quick-customizing-the-error-messages\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:196
#: ./docs/8.x/validation.md:405
#: ./docs/8.x/validation.md:544
#: ./docs/9.x/validation.md:198
#: ./docs/9.x/validation.md:444
#: ./docs/9.x/validation.md:599
msgctxt "H4"
msgid "Customizing The Error Messages"
msgstr ""

#: ./docs/10.x/validation.md:197
#: ./docs/10.x/validation.md:475
#: ./docs/10.x/validation.md:623
#: ./docs/11.x/validation.md:197
#: ./docs/11.x/validation.md:477
#: ./docs/11.x/validation.md:625
#: ./docs/master/validation.md:197
#: ./docs/master/validation.md:475
#: ./docs/master/validation.md:623
msgctxt "H4"
msgid "Customizing the Error Messages"
msgstr ""

#: ./docs/8.x/validation.md:198
#: ./docs/8.x/validation.md:685
msgctxt "P"
msgid "Laravel's built-in validation rules each has an error message that is located in your application's `resources/lang/en/validation.php` file. Within this file, you will find a translation entry for each validation rule. You are free to change or modify these messages based on the needs of your application."
msgstr ""

#: ./docs/10.x/validation.md:199
#: ./docs/10.x/validation.md:781
#: ./docs/11.x/validation.md:199
#: ./docs/11.x/validation.md:783
#: ./docs/master/validation.md:199
#: ./docs/master/validation.md:781
msgctxt "P"
msgid "Laravel's built-in validation rules each have an error message that is located in your application's `lang/en/validation.php` file. If your application does not have a `lang` directory, you may instruct Laravel to create it using the `lang:publish` Artisan command."
msgstr ""

#: ./docs/8.x/validation.md:200
#: ./docs/8.x/validation.md:687
#: ./docs/9.x/validation.md:202
#: ./docs/9.x/validation.md:742
msgctxt "P"
msgid "In addition, you may copy this file to another translation language directory to translate the messages for your application's language. To learn more about Laravel localization, check out the complete [localization documentation](/docs/{{version}}/localization)."
msgstr ""

#: ./docs/9.x/validation.md:200
#: ./docs/9.x/validation.md:740
msgctxt "P"
msgid "Laravel's built-in validation rules each have an error message that is located in your application's `lang/en/validation.php` file. Within this file, you will find a translation entry for each validation rule. You are free to change or modify these messages based on the needs of your application."
msgstr ""

#: ./docs/10.x/validation.md:201
#: ./docs/10.x/validation.md:783
#: ./docs/11.x/validation.md:201
#: ./docs/11.x/validation.md:785
#: ./docs/master/validation.md:201
#: ./docs/master/validation.md:783
msgctxt "P"
msgid "Within the `lang/en/validation.php` file, you will find a translation entry for each validation rule. You are free to change or modify these messages based on the needs of your application."
msgstr ""

#: ./docs/8.x/validation.md:202
#: ./docs/9.x/validation.md:204
#: ./docs/10.x/validation.md:208
#: ./docs/11.x/validation.md:208
#: ./docs/master/validation.md:208
#~ msgctxt "P"
#~ msgid "<a name=\"quick-xhr-requests-and-validation\"></a>"
#~ msgstr ""

#: ./docs/10.x/validation.md:203
#: ./docs/10.x/validation.md:785
#: ./docs/11.x/validation.md:203
#: ./docs/11.x/validation.md:787
#: ./docs/master/validation.md:203
#: ./docs/master/validation.md:785
msgctxt "P"
msgid "In addition, you may copy this file to another language directory to translate the messages for your application's language. To learn more about Laravel localization, check out the complete [localization documentation](/docs/{{version}}/localization)."
msgstr ""

#: ./docs/8.x/validation.md:203
#: ./docs/9.x/validation.md:205
msgctxt "H4"
msgid "XHR Requests & Validation"
msgstr ""

#: ./docs/8.x/validation.md:205
msgctxt "P"
msgid "In this example, we used a traditional form to send data to the application. However, many applications receive XHR requests from a JavaScript powered frontend. When using the `validate` method during an XHR request, Laravel will not generate a redirect response. Instead, Laravel generates a JSON response containing all of the validation errors. This JSON response will be sent with a 422 HTTP status code."
msgstr ""

#: ./docs/10.x/validation.md:206
#: ./docs/10.x/validation.md:788
#: ./docs/10.x/validation.md:812
#: ./docs/10.x/validation.md:838
#: ./docs/11.x/validation.md:206
#: ./docs/11.x/validation.md:790
#: ./docs/11.x/validation.md:814
#: ./docs/11.x/validation.md:840
#: ./docs/master/validation.md:206
#: ./docs/master/validation.md:788
#: ./docs/master/validation.md:812
#: ./docs/master/validation.md:838
msgctxt "P"
msgid "By default, the Laravel application skeleton does not include the `lang` directory. If you would like to customize Laravel's language files, you may publish them via the `lang:publish` Artisan command."
msgstr ""

#: ./docs/8.x/validation.md:207
#: ./docs/9.x/validation.md:209
#: ./docs/10.x/validation.md:213
#: ./docs/11.x/validation.md:213
#: ./docs/master/validation.md:213
#~ msgctxt "P"
#~ msgid "<a name=\"the-at-error-directive\"></a>"
#~ msgstr ""

#: ./docs/9.x/validation.md:207
#: ./docs/10.x/validation.md:211
#: ./docs/11.x/validation.md:211
#: ./docs/master/validation.md:211
msgctxt "P"
msgid "In this example, we used a traditional form to send data to the application. However, many applications receive XHR requests from a JavaScript powered frontend. When using the `validate` method during an XHR request, Laravel will not generate a redirect response. Instead, Laravel generates a [JSON response containing all of the validation errors](#validation-error-response-format). This JSON response will be sent with a 422 HTTP status code."
msgstr ""

#: ./docs/8.x/validation.md:208
#: ./docs/9.x/validation.md:210
#: ./docs/10.x/validation.md:214
#: ./docs/11.x/validation.md:214
#: ./docs/master/validation.md:214
msgctxt "H4"
msgid "The `@error` Directive"
msgstr ""

#: ./docs/10.x/validation.md:209
#: ./docs/11.x/validation.md:209
#: ./docs/master/validation.md:209
msgctxt "H4"
msgid "XHR Requests and Validation"
msgstr ""

#: ./docs/8.x/validation.md:210
#: ./docs/9.x/validation.md:212
#: ./docs/10.x/validation.md:216
#: ./docs/11.x/validation.md:216
#: ./docs/master/validation.md:216
msgctxt "P"
msgid "You may use the `@error` [Blade](/docs/{{version}}/blade) directive to quickly determine if validation error messages exist for a given attribute. Within an `@error` directive, you may echo the `$message` variable to display the error message:"
msgstr ""

#: ./docs/8.x/validation.md:212
msgctxt "CODE: html"
msgid ""
"<!-- /resources/views/post/create.blade.php -->\n"
"\n"
"<label for=\"title\">Post Title</label>\n"
"\n"
"<input id=\"title\" type=\"text\" name=\"title\" class=\"@error('title') is-invalid @enderror\">\n"
"\n"
"@error('title')\n"
"    <div class=\"alert alert-danger\">{{ $message }}</div>\n"
"@enderror"
msgstr ""

#: ./docs/9.x/validation.md:214
#: ./docs/10.x/validation.md:218
#: ./docs/master/validation.md:218
msgctxt "CODE: blade"
msgid ""
"<!-- /resources/views/post/create.blade.php -->\n"
"\n"
"<label for=\"title\">Post Title</label>\n"
"\n"
"<input id=\"title\"\n"
"    type=\"text\"\n"
"    name=\"title\"\n"
"    class=\"@error('title') is-invalid @enderror\">\n"
"\n"
"@error('title')\n"
"    <div class=\"alert alert-danger\">{{ $message }}</div>\n"
"@enderror"
msgstr ""

#: ./docs/11.x/validation.md:218
msgctxt "CODE: blade"
msgid ""
"<!-- /resources/views/post/create.blade.php -->\n"
"\n"
"<label for=\"title\">Post Title</label>\n"
"\n"
"<input\n"
"    id=\"title\"\n"
"    type=\"text\"\n"
"    name=\"title\"\n"
"    class=\"@error('title') is-invalid @enderror\"\n"
"/>\n"
"\n"
"@error('title')\n"
"    <div class=\"alert alert-danger\">{{ $message }}</div>\n"
"@enderror"
msgstr ""

#: ./docs/8.x/validation.md:224
#: ./docs/9.x/validation.md:229
#: ./docs/10.x/validation.md:233
#: ./docs/11.x/validation.md:235
#: ./docs/master/validation.md:233
msgctxt "P"
msgid "If you are using [named error bags](#named-error-bags), you may pass the name of the error bag as the second argument to the `@error` directive:"
msgstr ""

#: ./docs/8.x/validation.md:226
#: ./docs/9.x/validation.md:231
#: ./docs/10.x/validation.md:235
#: ./docs/11.x/validation.md:237
#: ./docs/master/validation.md:235
msgctxt "CODE: html"
msgid "<input ... class=\"@error('title', 'post') is-invalid @enderror\">"
msgstr ""

#: ./docs/8.x/validation.md:230
#: ./docs/9.x/validation.md:235
#: ./docs/10.x/validation.md:239
#: ./docs/11.x/validation.md:241
#: ./docs/master/validation.md:239
#~ msgctxt "P"
#~ msgid "<a name=\"repopulating-forms\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:231
#: ./docs/9.x/validation.md:236
#: ./docs/10.x/validation.md:240
#: ./docs/11.x/validation.md:242
#: ./docs/master/validation.md:240
msgctxt "H3"
msgid "Repopulating Forms"
msgstr ""

#: ./docs/8.x/validation.md:233
#: ./docs/9.x/validation.md:238
#: ./docs/10.x/validation.md:242
#: ./docs/11.x/validation.md:244
#: ./docs/master/validation.md:242
msgctxt "P"
msgid "When Laravel generates a redirect response due to a validation error, the framework will automatically [flash all of the request's input to the session](/docs/{{version}}/session#flash-data). This is done so that you may conveniently access the input during the next request and repopulate the form that the user attempted to submit."
msgstr ""

#: ./docs/8.x/validation.md:235
#: ./docs/9.x/validation.md:240
#: ./docs/10.x/validation.md:244
#: ./docs/11.x/validation.md:246
#: ./docs/master/validation.md:244
msgctxt "P"
msgid "To retrieve flashed input from the previous request, invoke the `old` method on an instance of `Illuminate\\Http\\Request`. The `old` method will pull the previously flashed input data from the [session](/docs/{{version}}/session):"
msgstr ""

#: ./docs/8.x/validation.md:237
#: ./docs/9.x/validation.md:242
#: ./docs/10.x/validation.md:246
#: ./docs/11.x/validation.md:248
#: ./docs/master/validation.md:246
msgctxt "CODE"
msgid "$title = $request->old('title');"
msgstr ""

#: ./docs/8.x/validation.md:239
#: ./docs/9.x/validation.md:244
#: ./docs/10.x/validation.md:248
#: ./docs/11.x/validation.md:250
#: ./docs/master/validation.md:248
msgctxt "P"
msgid "Laravel also provides a global `old` helper. If you are displaying old input within a [Blade template](/docs/{{version}}/blade), it is more convenient to use the `old` helper to repopulate the form. If no old input exists for the given field, `null` will be returned:"
msgstr ""

#: ./docs/8.x/validation.md:241
#: ./docs/9.x/validation.md:246
#: ./docs/10.x/validation.md:250
#: ./docs/11.x/validation.md:252
#: ./docs/master/validation.md:250
msgctxt "CODE"
msgid "<input type=\"text\" name=\"title\" value=\"{{ old('title') }}\">"
msgstr ""

#: ./docs/8.x/validation.md:243
#: ./docs/9.x/validation.md:250
#: ./docs/10.x/validation.md:254
#: ./docs/11.x/validation.md:256
#: ./docs/master/validation.md:254
#~ msgctxt "P"
#~ msgid "<a name=\"a-note-on-optional-fields\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:244
#: ./docs/9.x/validation.md:251
msgctxt "H3"
msgid "A Note On Optional Fields"
msgstr ""

#: ./docs/8.x/validation.md:246
#: ./docs/9.x/validation.md:253
#: ./docs/10.x/validation.md:257
msgctxt "P"
msgid "By default, Laravel includes the `TrimStrings` and `ConvertEmptyStringsToNull` middleware in your application's global middleware stack. These middleware are listed in the stack by the `App\\Http\\Kernel` class. Because of this, you will often need to mark your \"optional\" request fields as `nullable` if you do not want the validator to consider `null` values as invalid. For example:"
msgstr ""

#: ./docs/8.x/validation.md:248
#: ./docs/9.x/validation.md:255
#: ./docs/10.x/validation.md:259
#: ./docs/11.x/validation.md:261
#: ./docs/master/validation.md:259
msgctxt "CODE"
msgid ""
"$request->validate([\n"
"    'title' => 'required|unique:posts|max:255',\n"
"    'body' => 'required',\n"
"    'publish_at' => 'nullable|date',\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:254
#: ./docs/9.x/validation.md:261
#: ./docs/10.x/validation.md:265
#: ./docs/11.x/validation.md:267
#: ./docs/master/validation.md:265
msgctxt "P"
msgid "In this example, we are specifying that the `publish_at` field may be either `null` or a valid date representation. If the `nullable` modifier is not added to the rule definition, the validator would consider `null` an invalid date."
msgstr ""

#: ./docs/10.x/validation.md:255
#: ./docs/11.x/validation.md:257
#: ./docs/master/validation.md:255
msgctxt "H3"
msgid "A Note on Optional Fields"
msgstr ""

#: ./docs/8.x/validation.md:256
#: ./docs/9.x/validation.md:291
#: ./docs/10.x/validation.md:295
#: ./docs/11.x/validation.md:297
#: ./docs/master/validation.md:295
#~ msgctxt "P"
#~ msgid "<a name=\"form-request-validation\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:257
#: ./docs/9.x/validation.md:292
#: ./docs/10.x/validation.md:296
#: ./docs/11.x/validation.md:298
#: ./docs/master/validation.md:296
msgctxt "H2"
msgid "Form Request Validation"
msgstr ""

#: ./docs/11.x/validation.md:259
#: ./docs/master/validation.md:257
msgctxt "P"
msgid "By default, Laravel includes the `TrimStrings` and `ConvertEmptyStringsToNull` middleware in your application's global middleware stack. Because of this, you will often need to mark your \"optional\" request fields as `nullable` if you do not want the validator to consider `null` values as invalid. For example:"
msgstr ""

#: ./docs/8.x/validation.md:259
#: ./docs/9.x/validation.md:294
#: ./docs/10.x/validation.md:298
#: ./docs/11.x/validation.md:300
#: ./docs/master/validation.md:298
#~ msgctxt "P"
#~ msgid "<a name=\"creating-form-requests\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:260
#: ./docs/9.x/validation.md:295
#: ./docs/10.x/validation.md:299
#: ./docs/11.x/validation.md:301
#: ./docs/master/validation.md:299
msgctxt "H3"
msgid "Creating Form Requests"
msgstr ""

#: ./docs/8.x/validation.md:262
#: ./docs/9.x/validation.md:297
#: ./docs/10.x/validation.md:301
#: ./docs/11.x/validation.md:303
#: ./docs/master/validation.md:301
msgctxt "P"
msgid "For more complex validation scenarios, you may wish to create a \"form request\". Form requests are custom request classes that encapsulate their own validation and authorization logic. To create a form request class, you may use the `make:request` Artisan CLI command:"
msgstr ""

#: ./docs/9.x/validation.md:263
#: ./docs/10.x/validation.md:267
#: ./docs/11.x/validation.md:269
#: ./docs/master/validation.md:267
#~ msgctxt "P"
#~ msgid "<a name=\"validation-error-response-format\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:264
#: ./docs/9.x/validation.md:299
#: ./docs/10.x/validation.md:303
#: ./docs/11.x/validation.md:305
#: ./docs/master/validation.md:303
msgctxt "CODE"
msgid "php artisan make:request StorePostRequest"
msgstr ""

#: ./docs/9.x/validation.md:264
#: ./docs/10.x/validation.md:268
#: ./docs/11.x/validation.md:270
#: ./docs/master/validation.md:268
msgctxt "H3"
msgid "Validation Error Response Format"
msgstr ""

#: ./docs/8.x/validation.md:266
#: ./docs/9.x/validation.md:303
#: ./docs/10.x/validation.md:307
#: ./docs/11.x/validation.md:309
#: ./docs/master/validation.md:307
msgctxt "P"
msgid "The generated form request class will be placed in the `app/Http/Requests` directory. If this directory does not exist, it will be created when you run the `make:request` command. Each form request generated by Laravel has two methods: `authorize` and `rules`."
msgstr ""

#: ./docs/9.x/validation.md:266
#: ./docs/10.x/validation.md:270
#: ./docs/11.x/validation.md:272
#: ./docs/master/validation.md:270
msgctxt "P"
msgid "When your application throws a `Illuminate\\Validation\\ValidationException` exception and the incoming HTTP request is expecting a JSON response, Laravel will automatically format the error messages for you and return a `422 Unprocessable Entity` HTTP response."
msgstr ""

#: ./docs/8.x/validation.md:268
#: ./docs/9.x/validation.md:305
#: ./docs/10.x/validation.md:309
#: ./docs/11.x/validation.md:311
#: ./docs/master/validation.md:309
msgctxt "P"
msgid "As you might have guessed, the `authorize` method is responsible for determining if the currently authenticated user can perform the action represented by the request, while the `rules` method returns the validation rules that should apply to the request's data:"
msgstr ""

#: ./docs/9.x/validation.md:268
#: ./docs/10.x/validation.md:272
#: ./docs/11.x/validation.md:274
#: ./docs/master/validation.md:272
msgctxt "P"
msgid "Below, you can review an example of the JSON response format for validation errors. Note that nested error keys are flattened into \"dot\" notation format:"
msgstr ""

#: ./docs/8.x/validation.md:270
#: ./docs/9.x/validation.md:307
msgctxt "CODE"
msgid ""
"/**\n"
" * Get the validation rules that apply to the request.\n"
" *\n"
" * @return array\n"
" */\n"
"public function rules()\n"
"{\n"
"    return [\n"
"        'title' => 'required|unique:posts|max:255',\n"
"        'body' => 'required',\n"
"    ];\n"
"}"
msgstr ""

#: ./docs/9.x/validation.md:270
#: ./docs/10.x/validation.md:274
#: ./docs/11.x/validation.md:276
#: ./docs/master/validation.md:274
msgctxt "CODE: json"
msgid ""
"{\n"
"    \"message\": \"The team name must be a string. (and 4 more errors)\",\n"
"    \"errors\": {\n"
"        \"team_name\": [\n"
"            \"The team name must be a string.\",\n"
"            \"The team name must be at least 1 characters.\"\n"
"        ],\n"
"        \"authorization.role\": [\n"
"            \"The selected authorization.role is invalid.\"\n"
"        ],\n"
"        \"users.0.email\": [\n"
"            \"The users.0.email field is required.\"\n"
"        ],\n"
"        \"users.2.email\": [\n"
"            \"The users.2.email must be a valid email address.\"\n"
"        ]\n"
"    }\n"
"}"
msgstr ""

#: ./docs/8.x/validation.md:283
#: ./docs/9.x/validation.md:321
#: ./docs/10.x/validation.md:325
#: ./docs/11.x/validation.md:327
#: ./docs/master/validation.md:325
msgctxt "P"
msgid "You may type-hint any dependencies you require within the `rules` method's signature. They will automatically be resolved via the Laravel [service container](/docs/{{version}}/container)."
msgstr ""

#: ./docs/8.x/validation.md:285
#: ./docs/9.x/validation.md:323
#: ./docs/10.x/validation.md:327
#: ./docs/11.x/validation.md:329
#: ./docs/master/validation.md:327
msgctxt "P"
msgid "So, how are the validation rules evaluated? All you need to do is type-hint the request on your controller method. The incoming form request is validated before the controller method is called, meaning you do not need to clutter your controller with any validation logic:"
msgstr ""

#: ./docs/8.x/validation.md:287
#: ./docs/9.x/validation.md:325
msgctxt "CODE"
msgid ""
"/**\n"
" * Store a new blog post.\n"
" *\n"
" * @param  \\App\\Http\\Requests\\StorePostRequest  $request\n"
" * @return Illuminate\\Http\\Response\n"
" */\n"
"public function store(StorePostRequest $request)\n"
"{\n"
"    // The incoming request is valid...\n"
"\n"
"    // Retrieve the validated input data...\n"
"    $validated = $request->validated();\n"
"\n"
"    // Retrieve a portion of the validated input data...\n"
"    $validated = $request->safe()->only(['name', 'email']);\n"
"    $validated = $request->safe()->except(['name', 'email']);\n"
"}"
msgstr ""

#: ./docs/8.x/validation.md:305
msgctxt "P"
msgid "If validation fails, a redirect response will be generated to send the user back to their previous location. The errors will also be flashed to the session so they are available for display. If the request was an XHR request, an HTTP response with a 422 status code will be returned to the user including a JSON representation of the validation errors."
msgstr ""

#: ./docs/8.x/validation.md:307
#: ./docs/9.x/validation.md:345
#~ msgctxt "P"
#~ msgid "<a name=\"adding-after-hooks-to-form-requests\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:308
#: ./docs/9.x/validation.md:346
msgctxt "H4"
msgid "Adding After Hooks To Form Requests"
msgstr ""

#: ./docs/8.x/validation.md:310
#: ./docs/9.x/validation.md:348
msgctxt "P"
msgid "If you would like to add an \"after\" validation hook to a form request, you may use the `withValidator` method. This method receives the fully constructed validator, allowing you to call any of its methods before the validation rules are actually evaluated:"
msgstr ""

#: ./docs/10.x/validation.md:311
#: ./docs/master/validation.md:311
msgctxt "CODE"
msgid ""
"/**\n"
" * Get the validation rules that apply to the request.\n"
" *\n"
" * @return array<string, \\Illuminate\\Contracts\\Validation\\Rule|array|string>\n"
" */\n"
"public function rules(): array\n"
"{\n"
"    return [\n"
"        'title' => 'required|unique:posts|max:255',\n"
"        'body' => 'required',\n"
"    ];\n"
"}"
msgstr ""

#: ./docs/8.x/validation.md:312
#: ./docs/9.x/validation.md:350
msgctxt "CODE"
msgid ""
"/**\n"
" * Configure the validator instance.\n"
" *\n"
" * @param  \\Illuminate\\Validation\\Validator  $validator\n"
" * @return void\n"
" */\n"
"public function withValidator($validator)\n"
"{\n"
"    $validator->after(function ($validator) {\n"
"        if ($this->somethingElseIsInvalid()) {\n"
"            $validator->errors()->add('field', 'Something is wrong with this field!');\n"
"        }\n"
"    });\n"
"}"
msgstr ""

#: ./docs/11.x/validation.md:313
msgctxt "CODE"
msgid ""
"/**\n"
" * Get the validation rules that apply to the request.\n"
" *\n"
" * @return array<string, \\Illuminate\\Contracts\\Validation\\ValidationRule|array<mixed>|string>\n"
" */\n"
"public function rules(): array\n"
"{\n"
"    return [\n"
"        'title' => 'required|unique:posts|max:255',\n"
"        'body' => 'required',\n"
"    ];\n"
"}"
msgstr ""

#: ./docs/8.x/validation.md:328
#: ./docs/9.x/validation.md:366
#: ./docs/10.x/validation.md:401
#: ./docs/11.x/validation.md:403
#: ./docs/master/validation.md:401
#~ msgctxt "P"
#~ msgid "<a name=\"request-stopping-on-first-validation-rule-failure\"></a>"
#~ msgstr ""

#: ./docs/10.x/validation.md:329
#: ./docs/11.x/validation.md:331
#: ./docs/master/validation.md:329
msgctxt "CODE"
msgid ""
"/**\n"
" * Store a new blog post.\n"
" */\n"
"public function store(StorePostRequest $request): RedirectResponse\n"
"{\n"
"    // The incoming request is valid...\n"
"\n"
"    // Retrieve the validated input data...\n"
"    $validated = $request->validated();\n"
"\n"
"    // Retrieve a portion of the validated input data...\n"
"    $validated = $request->safe()->only(['name', 'email']);\n"
"    $validated = $request->safe()->except(['name', 'email']);\n"
"\n"
"    // Store the blog post...\n"
"\n"
"    return redirect('/posts');\n"
"}"
msgstr ""

#: ./docs/8.x/validation.md:329
#: ./docs/9.x/validation.md:367
msgctxt "H4"
msgid "Stopping On First Validation Failure Attribute"
msgstr ""

#: ./docs/8.x/validation.md:331
#: ./docs/9.x/validation.md:369
#: ./docs/10.x/validation.md:404
#: ./docs/11.x/validation.md:406
#: ./docs/master/validation.md:404
msgctxt "P"
msgid "By adding a `stopOnFirstFailure` property to your request class, you may inform the validator that it should stop validating all attributes once a single validation failure has occurred:"
msgstr ""

#: ./docs/8.x/validation.md:333
#: ./docs/9.x/validation.md:371
#: ./docs/10.x/validation.md:406
#: ./docs/11.x/validation.md:408
#: ./docs/master/validation.md:406
msgctxt "CODE"
msgid ""
"/**\n"
" * Indicates if the validator should stop on the first rule failure.\n"
" *\n"
" * @var bool\n"
" */\n"
"protected $stopOnFirstFailure = true;"
msgstr ""

#: ./docs/8.x/validation.md:340
#: ./docs/9.x/validation.md:378
#: ./docs/10.x/validation.md:413
#: ./docs/11.x/validation.md:415
#: ./docs/master/validation.md:413
#~ msgctxt "P"
#~ msgid "<a name=\"customizing-the-redirect-location\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:341
#: ./docs/9.x/validation.md:379
msgctxt "H4"
msgid "Customizing The Redirect Location"
msgstr ""

#: ./docs/8.x/validation.md:343
#: ./docs/9.x/validation.md:381
#: ./docs/10.x/validation.md:416
#: ./docs/11.x/validation.md:418
#: ./docs/master/validation.md:416
msgctxt "P"
msgid "As previously discussed, a redirect response will be generated to send the user back to their previous location when form request validation fails. However, you are free to customize this behavior. To do so, define a `$redirect` property on your form request:"
msgstr ""

#: ./docs/9.x/validation.md:343
#: ./docs/10.x/validation.md:348
#: ./docs/11.x/validation.md:350
#: ./docs/master/validation.md:348
msgctxt "P"
msgid "If validation fails, a redirect response will be generated to send the user back to their previous location. The errors will also be flashed to the session so they are available for display. If the request was an XHR request, an HTTP response with a 422 status code will be returned to the user including a [JSON representation of the validation errors](#validation-error-response-format)."
msgstr ""

#: ./docs/8.x/validation.md:345
#: ./docs/9.x/validation.md:383
#: ./docs/10.x/validation.md:418
#: ./docs/11.x/validation.md:420
#: ./docs/master/validation.md:418
msgctxt "CODE"
msgid ""
"/**\n"
" * The URI that users should be redirected to if validation fails.\n"
" *\n"
" * @var string\n"
" */\n"
"protected $redirect = '/dashboard';"
msgstr ""

#: ./docs/10.x/validation.md:351
#: ./docs/11.x/validation.md:353
#: ./docs/master/validation.md:351
msgctxt "P"
msgid "Need to add real-time form request validation to your Inertia powered Laravel frontend? Check out [Laravel Precognition](/docs/{{version}}/precognition)."
msgstr ""

#: ./docs/8.x/validation.md:352
#: ./docs/9.x/validation.md:390
#: ./docs/10.x/validation.md:425
#: ./docs/11.x/validation.md:427
#: ./docs/master/validation.md:425
msgctxt "P"
msgid "Or, if you would like to redirect users to a named route, you may define a `$redirectRoute` property instead:"
msgstr ""

#: ./docs/10.x/validation.md:353
#: ./docs/11.x/validation.md:355
#: ./docs/master/validation.md:353
#~ msgctxt "P"
#~ msgid "<a name=\"performing-additional-validation-on-form-requests\"></a>"
#~ msgstr ""

#: ./docs/10.x/validation.md:354
#: ./docs/10.x/validation.md:659
#: ./docs/11.x/validation.md:356
#: ./docs/11.x/validation.md:661
#: ./docs/master/validation.md:354
#: ./docs/master/validation.md:659
msgctxt "H4"
msgid "Performing Additional Validation"
msgstr ""

#: ./docs/8.x/validation.md:354
#: ./docs/9.x/validation.md:392
#: ./docs/10.x/validation.md:427
#: ./docs/11.x/validation.md:429
#: ./docs/master/validation.md:427
msgctxt "CODE"
msgid ""
"/**\n"
" * The route that users should be redirected to if validation fails.\n"
" *\n"
" * @var string\n"
" */\n"
"protected $redirectRoute = 'dashboard';"
msgstr ""

#: ./docs/10.x/validation.md:356
#: ./docs/11.x/validation.md:358
#: ./docs/master/validation.md:356
msgctxt "P"
msgid "Sometimes you need to perform additional validation after your initial validation is complete. You can accomplish this using the form request's `after` method."
msgstr ""

#: ./docs/10.x/validation.md:358
#: ./docs/11.x/validation.md:360
#: ./docs/master/validation.md:358
msgctxt "P"
msgid "The `after` method should return an array of callables or closures which will be invoked after validation is complete. The given callables will receive an `Illuminate\\Validation\\Validator` instance, allowing you to raise additional error messages if necessary:"
msgstr ""

#: ./docs/10.x/validation.md:360
#: ./docs/11.x/validation.md:362
#: ./docs/master/validation.md:360
msgctxt "CODE"
msgid ""
"use Illuminate\\Validation\\Validator;\n"
"\n"
"/**\n"
" * Get the \"after\" validation callables for the request.\n"
" */\n"
"public function after(): array\n"
"{\n"
"    return [\n"
"        function (Validator $validator) {\n"
"            if ($this->somethingElseIsInvalid()) {\n"
"                $validator->errors()->add(\n"
"                    'field',\n"
"                    'Something is wrong with this field!'\n"
"                );\n"
"            }\n"
"        }\n"
"    ];\n"
"}"
msgstr ""

#: ./docs/8.x/validation.md:361
#: ./docs/9.x/validation.md:399
#: ./docs/10.x/validation.md:434
#: ./docs/11.x/validation.md:436
#: ./docs/master/validation.md:434
#~ msgctxt "P"
#~ msgid "<a name=\"authorizing-form-requests\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:362
#: ./docs/9.x/validation.md:400
#: ./docs/10.x/validation.md:435
#: ./docs/11.x/validation.md:437
#: ./docs/master/validation.md:435
msgctxt "H3"
msgid "Authorizing Form Requests"
msgstr ""

#: ./docs/8.x/validation.md:364
#: ./docs/9.x/validation.md:402
#: ./docs/10.x/validation.md:437
#: ./docs/11.x/validation.md:439
#: ./docs/master/validation.md:437
msgctxt "P"
msgid "The form request class also contains an `authorize` method. Within this method, you may determine if the authenticated user actually has the authority to update a given resource. For example, you may determine if a user actually owns a blog comment they are attempting to update. Most likely, you will interact with your [authorization gates and policies](/docs/{{version}}/authorization) within this method:"
msgstr ""

#: ./docs/8.x/validation.md:366
#: ./docs/9.x/validation.md:404
msgctxt "CODE"
msgid ""
"use App\\Models\\Comment;\n"
"\n"
"/**\n"
" * Determine if the user is authorized to make this request.\n"
" *\n"
" * @return bool\n"
" */\n"
"public function authorize()\n"
"{\n"
"    $comment = Comment::find($this->route('comment'));\n"
"\n"
"    return $comment && $this->user()->can('update', $comment);\n"
"}"
msgstr ""

#: ./docs/10.x/validation.md:379
#: ./docs/11.x/validation.md:381
#: ./docs/master/validation.md:379
msgctxt "P"
msgid "As noted, the array returned by the `after` method may also contain invokable classes. The `__invoke` method of these classes will receive an `Illuminate\\Validation\\Validator` instance:"
msgstr ""

#: ./docs/8.x/validation.md:380
#: ./docs/9.x/validation.md:418
#: ./docs/10.x/validation.md:451
#: ./docs/11.x/validation.md:453
#: ./docs/master/validation.md:451
msgctxt "P"
msgid "Since all form requests extend the base Laravel request class, we may use the `user` method to access the currently authenticated user. Also, note the call to the `route` method in the example above. This method grants you access to the URI parameters defined on the route being called, such as the `{comment}` parameter in the example below:"
msgstr ""

#: ./docs/10.x/validation.md:381
#: ./docs/11.x/validation.md:383
#: ./docs/master/validation.md:381
msgctxt "CODE: php"
msgid ""
"use App\\Validation\\ValidateShippingTime;\n"
"use App\\Validation\\ValidateUserStatus;\n"
"use Illuminate\\Validation\\Validator;\n"
"\n"
"/**\n"
" * Get the \"after\" validation callables for the request.\n"
" */\n"
"public function after(): array\n"
"{\n"
"    return [\n"
"        new ValidateUserStatus,\n"
"        new ValidateShippingTime,\n"
"        function (Validator $validator) {\n"
"            //\n"
"        }\n"
"    ];\n"
"}"
msgstr ""

#: ./docs/8.x/validation.md:382
#: ./docs/9.x/validation.md:420
#: ./docs/10.x/validation.md:453
#: ./docs/11.x/validation.md:455
#: ./docs/master/validation.md:453
msgctxt "CODE"
msgid "Route::post('/comment/{comment}');"
msgstr ""

#: ./docs/8.x/validation.md:384
#: ./docs/9.x/validation.md:422
#: ./docs/10.x/validation.md:455
#: ./docs/11.x/validation.md:457
#: ./docs/master/validation.md:455
msgctxt "P"
msgid "Therefore, if your application is taking advantage of [route model binding](/docs/{{version}}/routing#route-model-binding), your code may be made even more succinct by accessing the resolved model as a property of the request:"
msgstr ""

#: ./docs/8.x/validation.md:386
#: ./docs/9.x/validation.md:424
#: ./docs/10.x/validation.md:457
#: ./docs/11.x/validation.md:459
#: ./docs/master/validation.md:457
msgctxt "CODE"
msgid "return $this->user()->can('update', $this->comment);"
msgstr ""

#: ./docs/8.x/validation.md:388
#: ./docs/9.x/validation.md:426
#: ./docs/10.x/validation.md:459
#: ./docs/11.x/validation.md:461
#: ./docs/master/validation.md:459
msgctxt "P"
msgid "If the `authorize` method returns `false`, an HTTP response with a 403 status code will automatically be returned and your controller method will not execute."
msgstr ""

#: ./docs/8.x/validation.md:390
#: ./docs/9.x/validation.md:428
msgctxt "P"
msgid "If you plan to handle authorization logic for the request in another part of your application, you may simply return `true` from the `authorize` method:"
msgstr ""

#: ./docs/8.x/validation.md:392
#: ./docs/9.x/validation.md:430
msgctxt "CODE"
msgid ""
"/**\n"
" * Determine if the user is authorized to make this request.\n"
" *\n"
" * @return bool\n"
" */\n"
"public function authorize()\n"
"{\n"
"    return true;\n"
"}"
msgstr ""

#: ./docs/10.x/validation.md:402
#: ./docs/11.x/validation.md:404
#: ./docs/master/validation.md:402
msgctxt "H4"
msgid "Stopping on the First Validation Failure"
msgstr ""

#: ./docs/8.x/validation.md:402
#: ./docs/9.x/validation.md:441
#: ./docs/10.x/validation.md:472
#: ./docs/11.x/validation.md:474
#: ./docs/master/validation.md:472
msgctxt "P"
msgid "You may type-hint any dependencies you need within the `authorize` method's signature. They will automatically be resolved via the Laravel [service container](/docs/{{version}}/container)."
msgstr ""

#: ./docs/8.x/validation.md:404
#: ./docs/9.x/validation.md:443
#: ./docs/10.x/validation.md:474
#: ./docs/11.x/validation.md:476
#: ./docs/master/validation.md:474
#~ msgctxt "P"
#~ msgid "<a name=\"customizing-the-error-messages\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:407
#: ./docs/9.x/validation.md:446
#: ./docs/10.x/validation.md:477
#: ./docs/11.x/validation.md:479
#: ./docs/master/validation.md:477
msgctxt "P"
msgid "You may customize the error messages used by the form request by overriding the `messages` method. This method should return an array of attribute / rule pairs and their corresponding error messages:"
msgstr ""

#: ./docs/8.x/validation.md:409
#: ./docs/9.x/validation.md:448
msgctxt "CODE"
msgid ""
"/**\n"
" * Get the error messages for the defined validation rules.\n"
" *\n"
" * @return array\n"
" */\n"
"public function messages()\n"
"{\n"
"    return [\n"
"        'title.required' => 'A title is required',\n"
"        'body.required' => 'A message is required',\n"
"    ];\n"
"}"
msgstr ""

#: ./docs/10.x/validation.md:414
#: ./docs/11.x/validation.md:416
#: ./docs/master/validation.md:414
msgctxt "H4"
msgid "Customizing the Redirect Location"
msgstr ""

#: ./docs/8.x/validation.md:422
#: ./docs/9.x/validation.md:461
#: ./docs/10.x/validation.md:492
#: ./docs/11.x/validation.md:494
#: ./docs/master/validation.md:492
#~ msgctxt "P"
#~ msgid "<a name=\"customizing-the-validation-attributes\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:423
#: ./docs/9.x/validation.md:462
msgctxt "H4"
msgid "Customizing The Validation Attributes"
msgstr ""

#: ./docs/8.x/validation.md:425
#: ./docs/9.x/validation.md:464
#: ./docs/10.x/validation.md:495
#: ./docs/11.x/validation.md:497
#: ./docs/master/validation.md:495
msgctxt "P"
msgid "Many of Laravel's built-in validation rule error messages contain an `:attribute` placeholder. If you would like the `:attribute` placeholder of your validation message to be replaced with a custom attribute name, you may specify the custom names by overriding the `attributes` method. This method should return an array of attribute / name pairs:"
msgstr ""

#: ./docs/8.x/validation.md:427
#: ./docs/9.x/validation.md:466
msgctxt "CODE"
msgid ""
"/**\n"
" * Get custom attributes for validator errors.\n"
" *\n"
" * @return array\n"
" */\n"
"public function attributes()\n"
"{\n"
"    return [\n"
"        'email' => 'email address',\n"
"    ];\n"
"}"
msgstr ""

#: ./docs/10.x/validation.md:439
#: ./docs/11.x/validation.md:441
#: ./docs/master/validation.md:439
msgctxt "CODE"
msgid ""
"use App\\Models\\Comment;\n"
"\n"
"/**\n"
" * Determine if the user is authorized to make this request.\n"
" */\n"
"public function authorize(): bool\n"
"{\n"
"    $comment = Comment::find($this->route('comment'));\n"
"\n"
"    return $comment && $this->user()->can('update', $comment);\n"
"}"
msgstr ""

#: ./docs/8.x/validation.md:439
#: ./docs/9.x/validation.md:478
#: ./docs/10.x/validation.md:509
#: ./docs/11.x/validation.md:511
#: ./docs/master/validation.md:509
#~ msgctxt "P"
#~ msgid "<a name=\"preparing-input-for-validation\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:440
#: ./docs/9.x/validation.md:479
msgctxt "H3"
msgid "Preparing Input For Validation"
msgstr ""

#: ./docs/8.x/validation.md:442
#: ./docs/9.x/validation.md:481
#: ./docs/10.x/validation.md:512
#: ./docs/11.x/validation.md:514
#: ./docs/master/validation.md:512
msgctxt "P"
msgid "If you need to prepare or sanitize any data from the request before you apply your validation rules, you may use the `prepareForValidation` method:"
msgstr ""

#: ./docs/8.x/validation.md:444
#: ./docs/9.x/validation.md:483
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Str;\n"
"\n"
"/**\n"
" * Prepare the data for validation.\n"
" *\n"
" * @return void\n"
" */\n"
"protected function prepareForValidation()\n"
"{\n"
"    $this->merge([\n"
"        'slug' => Str::slug($this->slug),\n"
"    ]);\n"
"}"
msgstr ""

#: ./docs/8.x/validation.md:458
#: ./docs/9.x/validation.md:511
#: ./docs/10.x/validation.md:536
#: ./docs/11.x/validation.md:538
#: ./docs/master/validation.md:536
#~ msgctxt "P"
#~ msgid "<a name=\"manually-creating-validators\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:459
#: ./docs/9.x/validation.md:512
#: ./docs/10.x/validation.md:537
#: ./docs/11.x/validation.md:539
#: ./docs/master/validation.md:537
msgctxt "H2"
msgid "Manually Creating Validators"
msgstr ""

#: ./docs/10.x/validation.md:461
#: ./docs/11.x/validation.md:463
#: ./docs/master/validation.md:461
msgctxt "P"
msgid "If you plan to handle authorization logic for the request in another part of your application, you may remove the `authorize` method completely, or simply return `true`:"
msgstr ""

#: ./docs/8.x/validation.md:461
#: ./docs/9.x/validation.md:514
#: ./docs/10.x/validation.md:539
#: ./docs/11.x/validation.md:541
#: ./docs/master/validation.md:539
msgctxt "P"
msgid "If you do not want to use the `validate` method on the request, you may create a validator instance manually using the `Validator` [facade](/docs/{{version}}/facades). The `make` method on the facade generates a new validator instance:"
msgstr ""

#: ./docs/10.x/validation.md:463
#: ./docs/11.x/validation.md:465
#: ./docs/master/validation.md:463
msgctxt "CODE"
msgid ""
"/**\n"
" * Determine if the user is authorized to make this request.\n"
" */\n"
"public function authorize(): bool\n"
"{\n"
"    return true;\n"
"}"
msgstr ""

#: ./docs/8.x/validation.md:463
#: ./docs/9.x/validation.md:516
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Http\\Controllers;\n"
"\n"
"use App\\Http\\Controllers\\Controller;\n"
"use Illuminate\\Http\\Request;\n"
"use Illuminate\\Support\\Facades\\Validator;\n"
"\n"
"class PostController extends Controller\n"
"{\n"
"    /**\n"
"     * Store a new blog post.\n"
"     *\n"
"     * @param  Request  $request\n"
"     * @return Response\n"
"     */\n"
"    public function store(Request $request)\n"
"    {\n"
"        $validator = Validator::make($request->all(), [\n"
"            'title' => 'required|unique:posts|max:255',\n"
"            'body' => 'required',\n"
"        ]);\n"
"\n"
"        if ($validator->fails()) {\n"
"            return redirect('post/create')\n"
"                        ->withErrors($validator)\n"
"                        ->withInput();\n"
"        }\n"
"\n"
"        // Retrieve the validated input...\n"
"        $validated = $validator->validated();\n"
"\n"
"        // Retrieve a portion of the validated input...\n"
"        $validated = $validator->safe()->only(['name', 'email']);\n"
"        $validated = $validator->safe()->except(['name', 'email']);\n"
"\n"
"        // Store the blog post...\n"
"    }\n"
"}"
msgstr ""

#: ./docs/10.x/validation.md:479
#: ./docs/11.x/validation.md:481
#: ./docs/master/validation.md:479
msgctxt "CODE"
msgid ""
"/**\n"
" * Get the error messages for the defined validation rules.\n"
" *\n"
" * @return array<string, string>\n"
" */\n"
"public function messages(): array\n"
"{\n"
"    return [\n"
"        'title.required' => 'A title is required',\n"
"        'body.required' => 'A message is required',\n"
"    ];\n"
"}"
msgstr ""

#: ./docs/10.x/validation.md:493
#: ./docs/11.x/validation.md:495
#: ./docs/master/validation.md:493
msgctxt "H4"
msgid "Customizing the Validation Attributes"
msgstr ""

#: ./docs/10.x/validation.md:497
#: ./docs/11.x/validation.md:499
#: ./docs/master/validation.md:497
msgctxt "CODE"
msgid ""
"/**\n"
" * Get custom attributes for validator errors.\n"
" *\n"
" * @return array<string, string>\n"
" */\n"
"public function attributes(): array\n"
"{\n"
"    return [\n"
"        'email' => 'email address',\n"
"    ];\n"
"}"
msgstr ""

#: ./docs/9.x/validation.md:497
#: ./docs/10.x/validation.md:526
#: ./docs/11.x/validation.md:528
#: ./docs/master/validation.md:526
msgctxt "P"
msgid "Likewise, if you need to normalize any request data after validation is complete, you may use the `passedValidation` method:"
msgstr ""

#: ./docs/9.x/validation.md:499
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Str;\n"
"\n"
"/**\n"
" * Handle a passed validation attempt.\n"
" *\n"
" * @return void\n"
" */\n"
"protected function passedValidation()\n"
"{\n"
"    $this->replace(['name' => 'Taylor']);\n"
"}"
msgstr ""

#: ./docs/8.x/validation.md:503
#: ./docs/9.x/validation.md:556
#: ./docs/10.x/validation.md:580
#: ./docs/11.x/validation.md:582
#: ./docs/master/validation.md:580
msgctxt "P"
msgid "The first argument passed to the `make` method is the data under validation. The second argument is an array of the validation rules that should be applied to the data."
msgstr ""

#: ./docs/8.x/validation.md:505
#: ./docs/9.x/validation.md:558
#: ./docs/10.x/validation.md:582
#: ./docs/11.x/validation.md:584
#: ./docs/master/validation.md:582
msgctxt "P"
msgid "After determining whether the request validation failed, you may use the `withErrors` method to flash the error messages to the session. When using this method, the `$errors` variable will automatically be shared with your views after redirection, allowing you to easily display them back to the user. The `withErrors` method accepts a validator, a `MessageBag`, or a PHP `array`."
msgstr ""

#: ./docs/8.x/validation.md:509
#: ./docs/9.x/validation.md:562
#: ./docs/10.x/validation.md:586
#: ./docs/11.x/validation.md:588
#: ./docs/master/validation.md:586
msgctxt "P"
msgid "The `stopOnFirstFailure` method will inform the validator that it should stop validating all attributes once a single validation failure has occurred:"
msgstr ""

#: ./docs/10.x/validation.md:510
#: ./docs/11.x/validation.md:512
#: ./docs/master/validation.md:510
msgctxt "H3"
msgid "Preparing Input for Validation"
msgstr ""

#: ./docs/8.x/validation.md:511
#: ./docs/8.x/validation.md:927
#: ./docs/9.x/validation.md:564
#: ./docs/9.x/validation.md:1011
#: ./docs/10.x/validation.md:588
#: ./docs/10.x/validation.md:1069
#: ./docs/11.x/validation.md:590
#: ./docs/11.x/validation.md:1074
#: ./docs/master/validation.md:588
#: ./docs/master/validation.md:1069
msgctxt "CODE"
msgid ""
"if ($validator->stopOnFirstFailure()->fails()) {\n"
"    // ...\n"
"}"
msgstr ""

#: ./docs/10.x/validation.md:514
#: ./docs/11.x/validation.md:516
#: ./docs/master/validation.md:514
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Str;\n"
"\n"
"/**\n"
" * Prepare the data for validation.\n"
" */\n"
"protected function prepareForValidation(): void\n"
"{\n"
"    $this->merge([\n"
"        'slug' => Str::slug($this->slug),\n"
"    ]);\n"
"}"
msgstr ""

#: ./docs/8.x/validation.md:515
#: ./docs/9.x/validation.md:568
#: ./docs/10.x/validation.md:592
#: ./docs/11.x/validation.md:594
#: ./docs/master/validation.md:592
#~ msgctxt "P"
#~ msgid "<a name=\"automatic-redirection\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:516
#: ./docs/9.x/validation.md:569
#: ./docs/10.x/validation.md:593
#: ./docs/11.x/validation.md:595
#: ./docs/master/validation.md:593
msgctxt "H3"
msgid "Automatic Redirection"
msgstr ""

#: ./docs/8.x/validation.md:518
msgctxt "P"
msgid "If you would like to create a validator instance manually but still take advantage of the automatic redirection offered by the HTTP request's `validate` method, you may call the `validate` method on an existing validator instance. If validation fails, the user will automatically be redirected or, in the case of an XHR request, a JSON response will be returned:"
msgstr ""

#: ./docs/8.x/validation.md:520
#: ./docs/9.x/validation.md:573
#: ./docs/10.x/validation.md:597
#: ./docs/11.x/validation.md:599
#: ./docs/master/validation.md:597
msgctxt "CODE"
msgid ""
"Validator::make($request->all(), [\n"
"    'title' => 'required|unique:posts|max:255',\n"
"    'body' => 'required',\n"
"])->validate();"
msgstr ""

#: ./docs/8.x/validation.md:525
#: ./docs/9.x/validation.md:578
#: ./docs/10.x/validation.md:602
#: ./docs/11.x/validation.md:604
#: ./docs/master/validation.md:602
msgctxt "P"
msgid "You may use the `validateWithBag` method to store the error messages in a [named error bag](#named-error-bags) if validation fails:"
msgstr ""

#: ./docs/8.x/validation.md:527
#: ./docs/9.x/validation.md:580
#: ./docs/10.x/validation.md:604
#: ./docs/11.x/validation.md:606
#: ./docs/master/validation.md:604
msgctxt "CODE"
msgid ""
"Validator::make($request->all(), [\n"
"    'title' => 'required|unique:posts|max:255',\n"
"    'body' => 'required',\n"
"])->validateWithBag('post');"
msgstr ""

#: ./docs/10.x/validation.md:528
#: ./docs/11.x/validation.md:530
#: ./docs/master/validation.md:528
msgctxt "CODE"
msgid ""
"/**\n"
" * Handle a passed validation attempt.\n"
" */\n"
"protected function passedValidation(): void\n"
"{\n"
"    $this->replace(['name' => 'Taylor']);\n"
"}"
msgstr ""

#: ./docs/8.x/validation.md:532
#: ./docs/9.x/validation.md:585
#: ./docs/10.x/validation.md:609
#: ./docs/11.x/validation.md:611
#: ./docs/master/validation.md:609
#~ msgctxt "P"
#~ msgid "<a name=\"named-error-bags\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:533
#: ./docs/9.x/validation.md:586
#: ./docs/10.x/validation.md:610
#: ./docs/11.x/validation.md:612
#: ./docs/master/validation.md:610
msgctxt "H3"
msgid "Named Error Bags"
msgstr ""

#: ./docs/8.x/validation.md:535
#: ./docs/9.x/validation.md:588
#: ./docs/10.x/validation.md:612
#: ./docs/11.x/validation.md:614
#: ./docs/master/validation.md:612
msgctxt "P"
msgid "If you have multiple forms on a single page, you may wish to name the `MessageBag` containing the validation errors, allowing you to retrieve the error messages for a specific form. To achieve this, pass a name as the second argument to `withErrors`:"
msgstr ""

#: ./docs/8.x/validation.md:537
#: ./docs/9.x/validation.md:590
#: ./docs/10.x/validation.md:614
#: ./docs/master/validation.md:614
msgctxt "CODE"
msgid "return redirect('register')->withErrors($validator, 'login');"
msgstr ""

#: ./docs/8.x/validation.md:539
#: ./docs/9.x/validation.md:592
#: ./docs/10.x/validation.md:616
#: ./docs/11.x/validation.md:618
#: ./docs/master/validation.md:616
msgctxt "P"
msgid "You may then access the named `MessageBag` instance from the `$errors` variable:"
msgstr ""

#: ./docs/10.x/validation.md:541
#: ./docs/master/validation.md:541
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Http\\Controllers;\n"
"\n"
"use Illuminate\\Http\\RedirectResponse;\n"
"use Illuminate\\Http\\Request;\n"
"use Illuminate\\Support\\Facades\\Validator;\n"
"\n"
"class PostController extends Controller\n"
"{\n"
"    /**\n"
"     * Store a new blog post.\n"
"     */\n"
"    public function store(Request $request): RedirectResponse\n"
"    {\n"
"        $validator = Validator::make($request->all(), [\n"
"            'title' => 'required|unique:posts|max:255',\n"
"            'body' => 'required',\n"
"        ]);\n"
"\n"
"        if ($validator->fails()) {\n"
"            return redirect('post/create')\n"
"                        ->withErrors($validator)\n"
"                        ->withInput();\n"
"        }\n"
"\n"
"        // Retrieve the validated input...\n"
"        $validated = $validator->validated();\n"
"\n"
"        // Retrieve a portion of the validated input...\n"
"        $validated = $validator->safe()->only(['name', 'email']);\n"
"        $validated = $validator->safe()->except(['name', 'email']);\n"
"\n"
"        // Store the blog post...\n"
"\n"
"        return redirect('/posts');\n"
"    }\n"
"}"
msgstr ""

#: ./docs/8.x/validation.md:541
#: ./docs/9.x/validation.md:594
#: ./docs/10.x/validation.md:618
#: ./docs/11.x/validation.md:620
#: ./docs/master/validation.md:618
msgctxt "CODE"
msgid "{{ $errors->login->first('email') }}"
msgstr ""

#: ./docs/11.x/validation.md:543
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Http\\Controllers;\n"
"\n"
"use Illuminate\\Http\\RedirectResponse;\n"
"use Illuminate\\Http\\Request;\n"
"use Illuminate\\Support\\Facades\\Validator;\n"
"\n"
"class PostController extends Controller\n"
"{\n"
"    /**\n"
"     * Store a new blog post.\n"
"     */\n"
"    public function store(Request $request): RedirectResponse\n"
"    {\n"
"        $validator = Validator::make($request->all(), [\n"
"            'title' => 'required|unique:posts|max:255',\n"
"            'body' => 'required',\n"
"        ]);\n"
"\n"
"        if ($validator->fails()) {\n"
"            return redirect('/post/create')\n"
"                        ->withErrors($validator)\n"
"                        ->withInput();\n"
"        }\n"
"\n"
"        // Retrieve the validated input...\n"
"        $validated = $validator->validated();\n"
"\n"
"        // Retrieve a portion of the validated input...\n"
"        $validated = $validator->safe()->only(['name', 'email']);\n"
"        $validated = $validator->safe()->except(['name', 'email']);\n"
"\n"
"        // Store the blog post...\n"
"\n"
"        return redirect('/posts');\n"
"    }\n"
"}"
msgstr ""

#: ./docs/8.x/validation.md:543
#: ./docs/9.x/validation.md:598
#: ./docs/10.x/validation.md:622
#: ./docs/11.x/validation.md:624
#: ./docs/master/validation.md:622
#~ msgctxt "P"
#~ msgid "<a name=\"manual-customizing-the-error-messages\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:546
#: ./docs/9.x/validation.md:601
#: ./docs/10.x/validation.md:625
#: ./docs/11.x/validation.md:627
#: ./docs/master/validation.md:625
msgctxt "P"
msgid "If needed, you may provide custom error messages that a validator instance should use instead of the default error messages provided by Laravel. There are several ways to specify custom messages. First, you may pass the custom messages as the third argument to the `Validator::make` method:"
msgstr ""

#: ./docs/8.x/validation.md:548
#: ./docs/9.x/validation.md:603
#: ./docs/10.x/validation.md:627
#: ./docs/11.x/validation.md:629
#: ./docs/master/validation.md:627
msgctxt "CODE"
msgid ""
"$validator = Validator::make($input, $rules, $messages = [\n"
"    'required' => 'The :attribute field is required.',\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:552
#: ./docs/9.x/validation.md:607
#: ./docs/10.x/validation.md:631
#: ./docs/11.x/validation.md:633
#: ./docs/master/validation.md:631
msgctxt "P"
msgid "In this example, the `:attribute` placeholder will be replaced by the actual name of the field under validation. You may also utilize other placeholders in validation messages. For example:"
msgstr ""

#: ./docs/8.x/validation.md:554
#: ./docs/9.x/validation.md:609
#: ./docs/10.x/validation.md:633
#: ./docs/11.x/validation.md:635
#: ./docs/master/validation.md:633
msgctxt "CODE"
msgid ""
"$messages = [\n"
"    'same' => 'The :attribute and :other must match.',\n"
"    'size' => 'The :attribute must be exactly :size.',\n"
"    'between' => 'The :attribute value :input is not between :min - :max.',\n"
"    'in' => 'The :attribute must be one of the following types: :values',\n"
"];"
msgstr ""

#: ./docs/8.x/validation.md:561
#: ./docs/9.x/validation.md:616
#: ./docs/10.x/validation.md:640
#: ./docs/11.x/validation.md:642
#: ./docs/master/validation.md:640
#~ msgctxt "P"
#~ msgid "<a name=\"specifying-a-custom-message-for-a-given-attribute\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:562
#: ./docs/9.x/validation.md:617
msgctxt "H4"
msgid "Specifying A Custom Message For A Given Attribute"
msgstr ""

#: ./docs/8.x/validation.md:564
#: ./docs/9.x/validation.md:619
#: ./docs/10.x/validation.md:643
#: ./docs/11.x/validation.md:645
#: ./docs/master/validation.md:643
msgctxt "P"
msgid "Sometimes you may wish to specify a custom error message only for a specific attribute. You may do so using \"dot\" notation. Specify the attribute's name first, followed by the rule:"
msgstr ""

#: ./docs/8.x/validation.md:566
#: ./docs/9.x/validation.md:621
#: ./docs/10.x/validation.md:645
#: ./docs/11.x/validation.md:647
#: ./docs/master/validation.md:645
msgctxt "CODE"
msgid ""
"$messages = [\n"
"    'email.required' => 'We need to know your email address!',\n"
"];"
msgstr ""

#: ./docs/8.x/validation.md:570
#: ./docs/9.x/validation.md:625
#: ./docs/10.x/validation.md:649
#: ./docs/11.x/validation.md:651
#: ./docs/master/validation.md:649
#~ msgctxt "P"
#~ msgid "<a name=\"specifying-custom-attribute-values\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:571
#: ./docs/9.x/validation.md:626
#: ./docs/10.x/validation.md:650
#: ./docs/11.x/validation.md:652
#: ./docs/master/validation.md:650
msgctxt "H4"
msgid "Specifying Custom Attribute Values"
msgstr ""

#: ./docs/9.x/validation.md:571
#: ./docs/10.x/validation.md:595
#: ./docs/11.x/validation.md:597
#: ./docs/master/validation.md:595
msgctxt "P"
msgid "If you would like to create a validator instance manually but still take advantage of the automatic redirection offered by the HTTP request's `validate` method, you may call the `validate` method on an existing validator instance. If validation fails, the user will automatically be redirected or, in the case of an XHR request, a [JSON response will be returned](#validation-error-response-format):"
msgstr ""

#: ./docs/8.x/validation.md:573
#: ./docs/9.x/validation.md:628
#: ./docs/10.x/validation.md:652
#: ./docs/11.x/validation.md:654
#: ./docs/master/validation.md:652
msgctxt "P"
msgid "Many of Laravel's built-in error messages include an `:attribute` placeholder that is replaced with the name of the field or attribute under validation. To customize the values used to replace these placeholders for specific fields, you may pass an array of custom attributes as the fourth argument to the `Validator::make` method:"
msgstr ""

#: ./docs/8.x/validation.md:575
#: ./docs/9.x/validation.md:630
#: ./docs/10.x/validation.md:654
#: ./docs/11.x/validation.md:656
#: ./docs/master/validation.md:654
msgctxt "CODE"
msgid ""
"$validator = Validator::make($input, $rules, $messages, [\n"
"    'email' => 'email address',\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:579
#: ./docs/9.x/validation.md:634
#~ msgctxt "P"
#~ msgid "<a name=\"after-validation-hook\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:580
#: ./docs/9.x/validation.md:635
msgctxt "H3"
msgid "After Validation Hook"
msgstr ""

#: ./docs/8.x/validation.md:582
#: ./docs/9.x/validation.md:637
msgctxt "P"
msgid "You may also attach callbacks to be run after validation is completed. This allows you to easily perform further validation and even add more error messages to the message collection. To get started, call the `after` method on a validator instance:"
msgstr ""

#: ./docs/8.x/validation.md:584
msgctxt "CODE"
msgid ""
"$validator = Validator::make(...);\n"
"\n"
"$validator->after(function ($validator) {\n"
"    if ($this->somethingElseIsInvalid()) {\n"
"        $validator->errors()->add(\n"
"            'field', 'Something is wrong with this field!'\n"
"        );\n"
"    }\n"
"});\n"
"\n"
"if ($validator->fails()) {\n"
"    //\n"
"}"
msgstr ""

#: ./docs/8.x/validation.md:598
#: ./docs/9.x/validation.md:653
#: ./docs/10.x/validation.md:694
#: ./docs/11.x/validation.md:696
#: ./docs/master/validation.md:694
#~ msgctxt "P"
#~ msgid "<a name=\"working-with-validated-input\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:599
#: ./docs/9.x/validation.md:654
#: ./docs/10.x/validation.md:695
#: ./docs/11.x/validation.md:697
#: ./docs/master/validation.md:695
msgctxt "H2"
msgid "Working With Validated Input"
msgstr ""

#: ./docs/8.x/validation.md:601
#: ./docs/9.x/validation.md:656
#: ./docs/10.x/validation.md:697
#: ./docs/11.x/validation.md:699
#: ./docs/master/validation.md:697
msgctxt "P"
msgid "After validating incoming request data using a form request or a manually created validator instance, you may wish to retrieve the incoming request data that actually underwent validation. This can be accomplished in several ways. First, you may call the `validated` method on a form request or validator instance. This method returns an array of the data that was validated:"
msgstr ""

#: ./docs/8.x/validation.md:603
#: ./docs/9.x/validation.md:658
#: ./docs/10.x/validation.md:699
#: ./docs/11.x/validation.md:701
#: ./docs/master/validation.md:699
msgctxt "CODE"
msgid ""
"$validated = $request->validated();\n"
"\n"
"$validated = $validator->validated();"
msgstr ""

#: ./docs/8.x/validation.md:607
#: ./docs/9.x/validation.md:662
#: ./docs/10.x/validation.md:703
#: ./docs/11.x/validation.md:705
#: ./docs/master/validation.md:703
msgctxt "P"
msgid "Alternatively, you may call the `safe` method on a form request or validator instance. This method returns an instance of `Illuminate\\Support\\ValidatedInput`. This object exposes `only`, `except`, and `all` methods to retrieve a subset of the validated data or the entire array of validated data:"
msgstr ""

#: ./docs/8.x/validation.md:609
#: ./docs/9.x/validation.md:664
#: ./docs/10.x/validation.md:705
#: ./docs/11.x/validation.md:707
#: ./docs/master/validation.md:705
msgctxt "CODE"
msgid ""
"$validated = $request->safe()->only(['name', 'email']);\n"
"\n"
"$validated = $request->safe()->except(['name', 'email']);\n"
"\n"
"$validated = $request->safe()->all();"
msgstr ""

#: ./docs/8.x/validation.md:615
#: ./docs/9.x/validation.md:670
#: ./docs/10.x/validation.md:711
#: ./docs/11.x/validation.md:713
#: ./docs/master/validation.md:711
msgctxt "P"
msgid "In addition, the `Illuminate\\Support\\ValidatedInput` instance may be iterated over and accessed like an array:"
msgstr ""

#: ./docs/11.x/validation.md:616
msgctxt "CODE"
msgid "return redirect('/register')->withErrors($validator, 'login');"
msgstr ""

#: ./docs/8.x/validation.md:617
#: ./docs/9.x/validation.md:672
msgctxt "CODE"
msgid ""
"// Validated data may be iterated...\n"
"foreach ($request->safe() as $key => $value) {\n"
"    //\n"
"}\n"
"\n"
"// Validated data may be accessed as an array...\n"
"$validated = $request->safe();\n"
"\n"
"$email = $validated['email'];"
msgstr ""

#: ./docs/8.x/validation.md:627
#: ./docs/9.x/validation.md:682
#: ./docs/10.x/validation.md:723
#: ./docs/11.x/validation.md:725
#: ./docs/master/validation.md:723
msgctxt "P"
msgid "If you would like to add additional fields to the validated data, you may call the `merge` method:"
msgstr ""

#: ./docs/8.x/validation.md:629
#: ./docs/9.x/validation.md:684
#: ./docs/10.x/validation.md:725
#: ./docs/11.x/validation.md:727
#: ./docs/master/validation.md:725
msgctxt "CODE"
msgid "$validated = $request->safe()->merge(['name' => 'Taylor Otwell']);"
msgstr ""

#: ./docs/8.x/validation.md:631
#: ./docs/9.x/validation.md:686
#: ./docs/10.x/validation.md:727
#: ./docs/11.x/validation.md:729
#: ./docs/master/validation.md:727
msgctxt "P"
msgid "If you would like to retrieve the validated data as a [collection](/docs/{{version}}/collections) instance, you may call the `collect` method:"
msgstr ""

#: ./docs/8.x/validation.md:633
#: ./docs/9.x/validation.md:688
#: ./docs/10.x/validation.md:729
#: ./docs/11.x/validation.md:731
#: ./docs/master/validation.md:729
msgctxt "CODE"
msgid "$collection = $request->safe()->collect();"
msgstr ""

#: ./docs/8.x/validation.md:635
#: ./docs/9.x/validation.md:690
#: ./docs/10.x/validation.md:731
#: ./docs/11.x/validation.md:733
#: ./docs/master/validation.md:731
#~ msgctxt "P"
#~ msgid "<a name=\"working-with-error-messages\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:636
#: ./docs/9.x/validation.md:691
#: ./docs/10.x/validation.md:732
#: ./docs/11.x/validation.md:734
#: ./docs/master/validation.md:732
msgctxt "H2"
msgid "Working With Error Messages"
msgstr ""

#: ./docs/8.x/validation.md:638
#: ./docs/9.x/validation.md:693
#: ./docs/10.x/validation.md:734
#: ./docs/11.x/validation.md:736
#: ./docs/master/validation.md:734
msgctxt "P"
msgid "After calling the `errors` method on a `Validator` instance, you will receive an `Illuminate\\Support\\MessageBag` instance, which has a variety of convenient methods for working with error messages. The `$errors` variable that is automatically made available to all views is also an instance of the `MessageBag` class."
msgstr ""

#: ./docs/9.x/validation.md:639
msgctxt "CODE"
msgid ""
"$validator = Validator::make(/* ... */);\n"
"\n"
"$validator->after(function ($validator) {\n"
"    if ($this->somethingElseIsInvalid()) {\n"
"        $validator->errors()->add(\n"
"            'field', 'Something is wrong with this field!'\n"
"        );\n"
"    }\n"
"});\n"
"\n"
"if ($validator->fails()) {\n"
"    //\n"
"}"
msgstr ""

#: ./docs/8.x/validation.md:640
#: ./docs/9.x/validation.md:695
#: ./docs/10.x/validation.md:736
#: ./docs/11.x/validation.md:738
#: ./docs/master/validation.md:736
#~ msgctxt "P"
#~ msgid "<a name=\"retrieving-the-first-error-message-for-a-field\"></a>"
#~ msgstr ""

#: ./docs/10.x/validation.md:641
#: ./docs/11.x/validation.md:643
#: ./docs/master/validation.md:641
msgctxt "H4"
msgid "Specifying a Custom Message for a Given Attribute"
msgstr ""

#: ./docs/8.x/validation.md:641
#: ./docs/9.x/validation.md:696
msgctxt "H4"
msgid "Retrieving The First Error Message For A Field"
msgstr ""

#: ./docs/8.x/validation.md:643
#: ./docs/9.x/validation.md:698
#: ./docs/10.x/validation.md:739
#: ./docs/11.x/validation.md:741
#: ./docs/master/validation.md:739
msgctxt "P"
msgid "To retrieve the first error message for a given field, use the `first` method:"
msgstr ""

#: ./docs/8.x/validation.md:645
#: ./docs/9.x/validation.md:700
#: ./docs/10.x/validation.md:741
#: ./docs/11.x/validation.md:743
#: ./docs/master/validation.md:741
msgctxt "CODE"
msgid ""
"$errors = $validator->errors();\n"
"\n"
"echo $errors->first('email');"
msgstr ""

#: ./docs/8.x/validation.md:649
#: ./docs/9.x/validation.md:704
#: ./docs/10.x/validation.md:745
#: ./docs/11.x/validation.md:747
#: ./docs/master/validation.md:745
#~ msgctxt "P"
#~ msgid "<a name=\"retrieving-all-error-messages-for-a-field\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:650
#: ./docs/9.x/validation.md:705
msgctxt "H4"
msgid "Retrieving All Error Messages For A Field"
msgstr ""

#: ./docs/8.x/validation.md:652
#: ./docs/9.x/validation.md:707
#: ./docs/10.x/validation.md:748
#: ./docs/11.x/validation.md:750
#: ./docs/master/validation.md:748
msgctxt "P"
msgid "If you need to retrieve an array of all the messages for a given field, use the `get` method:"
msgstr ""

#: ./docs/8.x/validation.md:654
#: ./docs/9.x/validation.md:709
msgctxt "CODE"
msgid ""
"foreach ($errors->get('email') as $message) {\n"
"    //\n"
"}"
msgstr ""

#: ./docs/10.x/validation.md:658
#: ./docs/11.x/validation.md:660
#: ./docs/master/validation.md:658
#~ msgctxt "P"
#~ msgid "<a name=\"performing-additional-validation\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:658
#: ./docs/9.x/validation.md:713
#: ./docs/10.x/validation.md:754
#: ./docs/11.x/validation.md:756
#: ./docs/master/validation.md:754
msgctxt "P"
msgid "If you are validating an array form field, you may retrieve all of the messages for each of the array elements using the `*` character:"
msgstr ""

#: ./docs/8.x/validation.md:660
#: ./docs/9.x/validation.md:715
msgctxt "CODE"
msgid ""
"foreach ($errors->get('attachments.*') as $message) {\n"
"    //\n"
"}"
msgstr ""

#: ./docs/10.x/validation.md:661
#: ./docs/11.x/validation.md:663
#: ./docs/master/validation.md:661
msgctxt "P"
msgid "Sometimes you need to perform additional validation after your initial validation is complete. You can accomplish this using the validator's `after` method. The `after` method accepts a closure or an array of callables which will be invoked after validation is complete. The given callables will receive an `Illuminate\\Validation\\Validator` instance, allowing you to raise additional error messages if necessary:"
msgstr ""

#: ./docs/10.x/validation.md:663
#: ./docs/11.x/validation.md:665
#: ./docs/master/validation.md:663
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Validator;\n"
"\n"
"$validator = Validator::make(/* ... */);\n"
"\n"
"$validator->after(function ($validator) {\n"
"    if ($this->somethingElseIsInvalid()) {\n"
"        $validator->errors()->add(\n"
"            'field', 'Something is wrong with this field!'\n"
"        );\n"
"    }\n"
"});\n"
"\n"
"if ($validator->fails()) {\n"
"    // ...\n"
"}"
msgstr ""

#: ./docs/8.x/validation.md:664
#: ./docs/9.x/validation.md:719
#: ./docs/10.x/validation.md:760
#: ./docs/11.x/validation.md:762
#: ./docs/master/validation.md:760
#~ msgctxt "P"
#~ msgid "<a name=\"retrieving-all-error-messages-for-all-fields\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:665
#: ./docs/9.x/validation.md:720
msgctxt "H4"
msgid "Retrieving All Error Messages For All Fields"
msgstr ""

#: ./docs/8.x/validation.md:667
#: ./docs/9.x/validation.md:722
#: ./docs/10.x/validation.md:763
#: ./docs/11.x/validation.md:765
#: ./docs/master/validation.md:763
msgctxt "P"
msgid "To retrieve an array of all messages for all fields, use the `all` method:"
msgstr ""

#: ./docs/8.x/validation.md:669
#: ./docs/9.x/validation.md:724
msgctxt "CODE"
msgid ""
"foreach ($errors->all() as $message) {\n"
"    //\n"
"}"
msgstr ""

#: ./docs/8.x/validation.md:673
#: ./docs/9.x/validation.md:728
#: ./docs/10.x/validation.md:769
#: ./docs/11.x/validation.md:771
#: ./docs/master/validation.md:769
#~ msgctxt "P"
#~ msgid "<a name=\"determining-if-messages-exist-for-a-field\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:674
#: ./docs/9.x/validation.md:729
msgctxt "H4"
msgid "Determining If Messages Exist For A Field"
msgstr ""

#: ./docs/8.x/validation.md:676
#: ./docs/9.x/validation.md:731
#: ./docs/10.x/validation.md:772
#: ./docs/11.x/validation.md:774
#: ./docs/master/validation.md:772
msgctxt "P"
msgid "The `has` method may be used to determine if any error messages exist for a given field:"
msgstr ""

#: ./docs/8.x/validation.md:678
#: ./docs/9.x/validation.md:733
msgctxt "CODE"
msgid ""
"if ($errors->has('email')) {\n"
"    //\n"
"}"
msgstr ""

#: ./docs/10.x/validation.md:679
#: ./docs/11.x/validation.md:681
#: ./docs/master/validation.md:679
msgctxt "P"
msgid "As noted, the `after` method also accepts an array of callables, which is particularly convenient if your \"after validation\" logic is encapsulated in invokable classes, which will receive an `Illuminate\\Validation\\Validator` instance via their `__invoke` method:"
msgstr ""

#: ./docs/10.x/validation.md:681
#: ./docs/11.x/validation.md:683
#: ./docs/master/validation.md:681
msgctxt "CODE: php"
msgid ""
"use App\\Validation\\ValidateShippingTime;\n"
"use App\\Validation\\ValidateUserStatus;\n"
"\n"
"$validator->after([\n"
"    new ValidateUserStatus,\n"
"    new ValidateShippingTime,\n"
"    function ($validator) {\n"
"        // ...\n"
"    },\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:682
#: ./docs/9.x/validation.md:737
#: ./docs/10.x/validation.md:778
#: ./docs/11.x/validation.md:780
#: ./docs/master/validation.md:778
#~ msgctxt "P"
#~ msgid "<a name=\"specifying-custom-messages-in-language-files\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:683
#: ./docs/9.x/validation.md:738
msgctxt "H3"
msgid "Specifying Custom Messages In Language Files"
msgstr ""

#: ./docs/8.x/validation.md:689
#: ./docs/9.x/validation.md:744
#: ./docs/10.x/validation.md:790
#: ./docs/11.x/validation.md:792
#: ./docs/master/validation.md:790
#~ msgctxt "P"
#~ msgid "<a name=\"custom-messages-for-specific-attributes\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:690
#: ./docs/9.x/validation.md:745
msgctxt "H4"
msgid "Custom Messages For Specific Attributes"
msgstr ""

#: ./docs/8.x/validation.md:692
msgctxt "P"
msgid "You may customize the error messages used for specified attribute and rule combinations within your application's validation language files. To do so, add your message customizations to the `custom` array of your application's `resources/lang/xx/validation.php` language file:"
msgstr ""

#: ./docs/8.x/validation.md:694
#: ./docs/9.x/validation.md:749
#: ./docs/10.x/validation.md:795
#: ./docs/11.x/validation.md:797
#: ./docs/master/validation.md:795
msgctxt "CODE"
msgid ""
"'custom' => [\n"
"    'email' => [\n"
"        'required' => 'We need to know your email address!',\n"
"        'max' => 'Your email address is too long!'\n"
"    ],\n"
"],"
msgstr ""

#: ./docs/8.x/validation.md:701
#: ./docs/9.x/validation.md:756
#: ./docs/10.x/validation.md:802
#: ./docs/11.x/validation.md:804
#: ./docs/master/validation.md:802
#~ msgctxt "P"
#~ msgid "<a name=\"specifying-attribute-in-language-files\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:702
#: ./docs/9.x/validation.md:757
msgctxt "H3"
msgid "Specifying Attributes In Language Files"
msgstr ""

#: ./docs/8.x/validation.md:704
msgctxt "P"
msgid "Many of Laravel's built-in error messages include an `:attribute` placeholder that is replaced with the name of the field or attribute under validation. If you would like the `:attribute` portion of your validation message to be replaced with a custom value, you may specify the custom attribute name in the `attributes` array of your `resources/lang/xx/validation.php` language file:"
msgstr ""

#: ./docs/8.x/validation.md:706
#: ./docs/9.x/validation.md:761
#: ./docs/10.x/validation.md:807
#: ./docs/11.x/validation.md:809
#: ./docs/master/validation.md:807
msgctxt "CODE"
msgid ""
"'attributes' => [\n"
"    'email' => 'email address',\n"
"],"
msgstr ""

#: ./docs/8.x/validation.md:710
#: ./docs/9.x/validation.md:765
#: ./docs/10.x/validation.md:814
#: ./docs/11.x/validation.md:816
#: ./docs/master/validation.md:814
#~ msgctxt "P"
#~ msgid "<a name=\"specifying-values-in-language-files\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:711
#: ./docs/9.x/validation.md:766
msgctxt "H3"
msgid "Specifying Values In Language Files"
msgstr ""

#: ./docs/10.x/validation.md:713
#: ./docs/11.x/validation.md:715
#: ./docs/master/validation.md:713
msgctxt "CODE"
msgid ""
"// Validated data may be iterated...\n"
"foreach ($request->safe() as $key => $value) {\n"
"    // ...\n"
"}\n"
"\n"
"// Validated data may be accessed as an array...\n"
"$validated = $request->safe();\n"
"\n"
"$email = $validated['email'];"
msgstr ""

#: ./docs/8.x/validation.md:713
#: ./docs/9.x/validation.md:768
#: ./docs/10.x/validation.md:817
#: ./docs/11.x/validation.md:819
#: ./docs/master/validation.md:817
msgctxt "P"
msgid "Some of Laravel's built-in validation rule error messages contain a `:value` placeholder that is replaced with the current value of the request attribute. However, you may occasionally need the `:value` portion of your validation message to be replaced with a custom representation of the value. For example, consider the following rule that specifies that a credit card number is required if the `payment_type` has a value of `cc`:"
msgstr ""

#: ./docs/8.x/validation.md:715
#: ./docs/9.x/validation.md:770
#: ./docs/10.x/validation.md:819
#: ./docs/11.x/validation.md:821
#: ./docs/master/validation.md:819
msgctxt "CODE"
msgid ""
"Validator::make($request->all(), [\n"
"    'credit_card_number' => 'required_if:payment_type,cc'\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:719
#: ./docs/9.x/validation.md:774
#: ./docs/10.x/validation.md:823
#: ./docs/11.x/validation.md:825
#: ./docs/master/validation.md:823
msgctxt "P"
msgid "If this validation rule fails, it will produce the following error message:"
msgstr ""

#: ./docs/8.x/validation.md:721
#: ./docs/9.x/validation.md:776
#: ./docs/10.x/validation.md:825
#: ./docs/11.x/validation.md:827
#: ./docs/master/validation.md:825
msgctxt "CODE"
msgid "The credit card number field is required when payment type is cc."
msgstr ""

#: ./docs/8.x/validation.md:723
msgctxt "P"
msgid "Instead of displaying `cc` as the payment type value, you may specify a more user-friendly value representation in your `resources/lang/xx/validation.php` language file by defining a `values` array:"
msgstr ""

#: ./docs/8.x/validation.md:725
#: ./docs/9.x/validation.md:782
#: ./docs/10.x/validation.md:831
#: ./docs/11.x/validation.md:833
#: ./docs/master/validation.md:831
msgctxt "CODE"
msgid ""
"'values' => [\n"
"    'payment_type' => [\n"
"        'cc' => 'credit card'\n"
"    ],\n"
"],"
msgstr ""

#: ./docs/8.x/validation.md:731
#: ./docs/9.x/validation.md:788
#: ./docs/10.x/validation.md:840
#: ./docs/11.x/validation.md:842
#: ./docs/master/validation.md:840
msgctxt "P"
msgid "After defining this value, the validation rule will produce the following error message:"
msgstr ""

#: ./docs/8.x/validation.md:733
#: ./docs/9.x/validation.md:790
#: ./docs/10.x/validation.md:842
#: ./docs/11.x/validation.md:844
#: ./docs/master/validation.md:842
msgctxt "CODE"
msgid "The credit card number field is required when payment type is credit card."
msgstr ""

#: ./docs/8.x/validation.md:735
#: ./docs/9.x/validation.md:794
#: ./docs/10.x/validation.md:846
#: ./docs/11.x/validation.md:848
#: ./docs/master/validation.md:846
#~ msgctxt "P"
#~ msgid "<a name=\"available-validation-rules\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:736
#: ./docs/9.x/validation.md:795
#: ./docs/10.x/validation.md:847
#: ./docs/11.x/validation.md:849
#: ./docs/master/validation.md:847
msgctxt "H2"
msgid "Available Validation Rules"
msgstr ""

#: ./docs/10.x/validation.md:737
#: ./docs/11.x/validation.md:739
#: ./docs/master/validation.md:737
msgctxt "H4"
msgid "Retrieving the First Error Message for a Field"
msgstr ""

#: ./docs/8.x/validation.md:738
#: ./docs/9.x/validation.md:797
#: ./docs/10.x/validation.md:849
#: ./docs/11.x/validation.md:851
#: ./docs/master/validation.md:849
msgctxt "P"
msgid "Below is a list of all available validation rules and their function:"
msgstr ""

#: ./docs/10.x/validation.md:746
#: ./docs/11.x/validation.md:748
#: ./docs/master/validation.md:746
msgctxt "H4"
msgid "Retrieving All Error Messages for a Field"
msgstr ""

#: ./docs/9.x/validation.md:747
#: ./docs/10.x/validation.md:793
#: ./docs/11.x/validation.md:795
#: ./docs/master/validation.md:793
msgctxt "P"
msgid "You may customize the error messages used for specified attribute and rule combinations within your application's validation language files. To do so, add your message customizations to the `custom` array of your application's `lang/xx/validation.php` language file:"
msgstr ""

#: ./docs/10.x/validation.md:750
#: ./docs/11.x/validation.md:752
#: ./docs/master/validation.md:750
msgctxt "CODE"
msgid ""
"foreach ($errors->get('email') as $message) {\n"
"    // ...\n"
"}"
msgstr ""

#: ./docs/8.x/validation.md:753
msgctxt "P"
msgid ""
"[Accepted](#rule-accepted)\n"
"[Accepted If](#rule-accepted-if)\n"
"[Active URL](#rule-active-url)\n"
"[After (Date)](#rule-after)\n"
"[After Or Equal (Date)](#rule-after-or-equal)\n"
"[Alpha](#rule-alpha)\n"
"[Alpha Dash](#rule-alpha-dash)\n"
"[Alpha Numeric](#rule-alpha-num)\n"
"[Array](#rule-array)\n"
"[Bail](#rule-bail)\n"
"[Before (Date)](#rule-before)\n"
"[Before Or Equal (Date)](#rule-before-or-equal)\n"
"[Between](#rule-between)\n"
"[Boolean](#rule-boolean)\n"
"[Confirmed](#rule-confirmed)\n"
"[Current Password](#rule-current-password)\n"
"[Date](#rule-date)\n"
"[Date Equals](#rule-date-equals)\n"
"[Date Format](#rule-date-format)\n"
"[Declined](#rule-declined)\n"
"[Declined If](#rule-declined-if)\n"
"[Different](#rule-different)\n"
"[Digits](#rule-digits)\n"
"[Digits Between](#rule-digits-between)\n"
"[Dimensions (Image Files)](#rule-dimensions)\n"
"[Distinct](#rule-distinct)\n"
"[Email](#rule-email)\n"
"[Ends With](#rule-ends-with)\n"
"[Enum](#rule-enum)\n"
"[Exclude](#rule-exclude)\n"
"[Exclude If](#rule-exclude-if)\n"
"[Exclude Unless](#rule-exclude-unless)\n"
"[Exclude Without](#rule-exclude-without)\n"
"[Exists (Database)](#rule-exists)\n"
"[File](#rule-file)\n"
"[Filled](#rule-filled)\n"
"[Greater Than](#rule-gt)\n"
"[Greater Than Or Equal](#rule-gte)\n"
"[Image (File)](#rule-image)\n"
"[In](#rule-in)\n"
"[In Array](#rule-in-array)\n"
"[Integer](#rule-integer)\n"
"[IP Address](#rule-ip)\n"
"[MAC Address](#rule-mac)\n"
"[JSON](#rule-json)\n"
"[Less Than](#rule-lt)\n"
"[Less Than Or Equal](#rule-lte)\n"
"[Max](#rule-max)\n"
"[MIME Types](#rule-mimetypes)\n"
"[MIME Type By File Extension](#rule-mimes)\n"
"[Min](#rule-min)\n"
"[Multiple Of](#multiple-of)\n"
"[Not In](#rule-not-in)\n"
"[Not Regex](#rule-not-regex)\n"
"[Nullable](#rule-nullable)\n"
"[Numeric](#rule-numeric)\n"
"[Password](#rule-password)\n"
"[Present](#rule-present)\n"
"[Prohibited](#rule-prohibited)\n"
"[Prohibited If](#rule-prohibited-if)\n"
"[Prohibited Unless](#rule-prohibited-unless)\n"
"[Prohibits](#rule-prohibits)\n"
"[Regular Expression](#rule-regex)\n"
"[Required](#rule-required)\n"
"[Required If](#rule-required-if)\n"
"[Required Unless](#rule-required-unless)\n"
"[Required With](#rule-required-with)\n"
"[Required With All](#rule-required-with-all)\n"
"[Required Without](#rule-required-without)\n"
"[Required Without All](#rule-required-without-all)\n"
"[Same](#rule-same)\n"
"[Size](#rule-size)\n"
"[Sometimes](#validating-when-present)\n"
"[Starts With](#rule-starts-with)\n"
"[String](#rule-string)\n"
"[Timezone](#rule-timezone)\n"
"[Unique (Database)](#rule-unique)\n"
"[URL](#rule-url)\n"
"[UUID](#rule-uuid)"
msgstr ""

#: ./docs/10.x/validation.md:756
#: ./docs/11.x/validation.md:758
#: ./docs/master/validation.md:756
msgctxt "CODE"
msgid ""
"foreach ($errors->get('attachments.*') as $message) {\n"
"    // ...\n"
"}"
msgstr ""

#: ./docs/9.x/validation.md:759
#: ./docs/10.x/validation.md:805
#: ./docs/11.x/validation.md:807
#: ./docs/master/validation.md:805
msgctxt "P"
msgid "Many of Laravel's built-in error messages include an `:attribute` placeholder that is replaced with the name of the field or attribute under validation. If you would like the `:attribute` portion of your validation message to be replaced with a custom value, you may specify the custom attribute name in the `attributes` array of your `lang/xx/validation.php` language file:"
msgstr ""

#: ./docs/10.x/validation.md:761
#: ./docs/11.x/validation.md:763
#: ./docs/master/validation.md:761
msgctxt "H4"
msgid "Retrieving All Error Messages for All Fields"
msgstr ""

#: ./docs/10.x/validation.md:765
#: ./docs/11.x/validation.md:767
#: ./docs/master/validation.md:765
msgctxt "CODE"
msgid ""
"foreach ($errors->all() as $message) {\n"
"    // ...\n"
"}"
msgstr ""

#: ./docs/10.x/validation.md:770
#: ./docs/11.x/validation.md:772
#: ./docs/master/validation.md:770
msgctxt "H4"
msgid "Determining if Messages Exist for a Field"
msgstr ""

#: ./docs/10.x/validation.md:774
#: ./docs/11.x/validation.md:776
#: ./docs/master/validation.md:774
msgctxt "CODE"
msgid ""
"if ($errors->has('email')) {\n"
"    // ...\n"
"}"
msgstr ""

#: ./docs/10.x/validation.md:779
#: ./docs/11.x/validation.md:781
#: ./docs/master/validation.md:779
msgctxt "H3"
msgid "Specifying Custom Messages in Language Files"
msgstr ""

#: ./docs/9.x/validation.md:780
#: ./docs/10.x/validation.md:829
#: ./docs/11.x/validation.md:831
#: ./docs/master/validation.md:829
msgctxt "P"
msgid "Instead of displaying `cc` as the payment type value, you may specify a more user-friendly value representation in your `lang/xx/validation.php` language file by defining a `values` array:"
msgstr ""

#: ./docs/10.x/validation.md:791
#: ./docs/11.x/validation.md:793
#: ./docs/master/validation.md:791
msgctxt "H4"
msgid "Custom Messages for Specific Attributes"
msgstr ""

#: ./docs/10.x/validation.md:803
#: ./docs/11.x/validation.md:805
#: ./docs/master/validation.md:803
msgctxt "H3"
msgid "Specifying Attributes in Language Files"
msgstr ""

#: ./docs/9.x/validation.md:814
msgctxt "P"
msgid ""
"[Accepted](#rule-accepted)\n"
"[Accepted If](#rule-accepted-if)\n"
"[Active URL](#rule-active-url)\n"
"[After (Date)](#rule-after)\n"
"[After Or Equal (Date)](#rule-after-or-equal)\n"
"[Alpha](#rule-alpha)\n"
"[Alpha Dash](#rule-alpha-dash)\n"
"[Alpha Numeric](#rule-alpha-num)\n"
"[Array](#rule-array)\n"
"[Ascii](#rule-ascii)\n"
"[Bail](#rule-bail)\n"
"[Before (Date)](#rule-before)\n"
"[Before Or Equal (Date)](#rule-before-or-equal)\n"
"[Between](#rule-between)\n"
"[Boolean](#rule-boolean)\n"
"[Confirmed](#rule-confirmed)\n"
"[Current Password](#rule-current-password)\n"
"[Date](#rule-date)\n"
"[Date Equals](#rule-date-equals)\n"
"[Date Format](#rule-date-format)\n"
"[Decimal](#rule-decimal)\n"
"[Declined](#rule-declined)\n"
"[Declined If](#rule-declined-if)\n"
"[Different](#rule-different)\n"
"[Digits](#rule-digits)\n"
"[Digits Between](#rule-digits-between)\n"
"[Dimensions (Image Files)](#rule-dimensions)\n"
"[Distinct](#rule-distinct)\n"
"[Doesnt Start With](#rule-doesnt-start-with)\n"
"[Doesnt End With](#rule-doesnt-end-with)\n"
"[Email](#rule-email)\n"
"[Ends With](#rule-ends-with)\n"
"[Enum](#rule-enum)\n"
"[Exclude](#rule-exclude)\n"
"[Exclude If](#rule-exclude-if)\n"
"[Exclude Unless](#rule-exclude-unless)\n"
"[Exclude With](#rule-exclude-with)\n"
"[Exclude Without](#rule-exclude-without)\n"
"[Exists (Database)](#rule-exists)\n"
"[File](#rule-file)\n"
"[Filled](#rule-filled)\n"
"[Greater Than](#rule-gt)\n"
"[Greater Than Or Equal](#rule-gte)\n"
"[Image (File)](#rule-image)\n"
"[In](#rule-in)\n"
"[In Array](#rule-in-array)\n"
"[Integer](#rule-integer)\n"
"[IP Address](#rule-ip)\n"
"[JSON](#rule-json)\n"
"[Less Than](#rule-lt)\n"
"[Less Than Or Equal](#rule-lte)\n"
"[Lowercase](#rule-lowercase)\n"
"[MAC Address](#rule-mac)\n"
"[Max](#rule-max)\n"
"[Max Digits](#rule-max-digits)\n"
"[MIME Types](#rule-mimetypes)\n"
"[MIME Type By File Extension](#rule-mimes)\n"
"[Min](#rule-min)\n"
"[Min Digits](#rule-min-digits)\n"
"[Missing](#rule-missing)\n"
"[Missing If](#rule-missing-if)\n"
"[Missing Unless](#rule-missing-unless)\n"
"[Missing With](#rule-missing-with)\n"
"[Missing With All](#rule-missing-with-all)\n"
"[Multiple Of](#rule-multiple-of)\n"
"[Not In](#rule-not-in)\n"
"[Not Regex](#rule-not-regex)\n"
"[Nullable](#rule-nullable)\n"
"[Numeric](#rule-numeric)\n"
"[Password](#rule-password)\n"
"[Present](#rule-present)\n"
"[Prohibited](#rule-prohibited)\n"
"[Prohibited If](#rule-prohibited-if)\n"
"[Prohibited Unless](#rule-prohibited-unless)\n"
"[Prohibits](#rule-prohibits)\n"
"[Regular Expression](#rule-regex)\n"
"[Required](#rule-required)\n"
"[Required If](#rule-required-if)\n"
"[Required Unless](#rule-required-unless)\n"
"[Required With](#rule-required-with)\n"
"[Required With All](#rule-required-with-all)\n"
"[Required Without](#rule-required-without)\n"
"[Required Without All](#rule-required-without-all)\n"
"[Required Array Keys](#rule-required-array-keys)\n"
"[Same](#rule-same)\n"
"[Size](#rule-size)\n"
"[Sometimes](#validating-when-present)\n"
"[Starts With](#rule-starts-with)\n"
"[String](#rule-string)\n"
"[Timezone](#rule-timezone)\n"
"[Unique (Database)](#rule-unique)\n"
"[Uppercase](#rule-uppercase)\n"
"[URL](#rule-url)\n"
"[ULID](#rule-ulid)\n"
"[UUID](#rule-uuid)"
msgstr ""

#: ./docs/10.x/validation.md:815
#: ./docs/11.x/validation.md:817
#: ./docs/master/validation.md:815
msgctxt "H3"
msgid "Specifying Values in Language Files"
msgstr ""

#: ./docs/8.x/validation.md:835
#: ./docs/9.x/validation.md:912
#: ./docs/10.x/validation.md:970
#: ./docs/11.x/validation.md:975
#: ./docs/master/validation.md:970
#~ msgctxt "P"
#~ msgid "<a name=\"rule-accepted\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:836
#: ./docs/9.x/validation.md:913
#: ./docs/10.x/validation.md:971
#: ./docs/11.x/validation.md:976
#: ./docs/master/validation.md:971
msgctxt "H4"
msgid "accepted"
msgstr ""

#: ./docs/8.x/validation.md:838
#: ./docs/9.x/validation.md:915
msgctxt "P"
msgid "The field under validation must be `\"yes\"`, `\"on\"`, `1`, or `true`. This is useful for validating \"Terms of Service\" acceptance or similar fields."
msgstr ""

#: ./docs/8.x/validation.md:840
#: ./docs/9.x/validation.md:917
#: ./docs/10.x/validation.md:975
#: ./docs/11.x/validation.md:980
#: ./docs/master/validation.md:975
#~ msgctxt "P"
#~ msgid "<a name=\"rule-accepted-if\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:841
#: ./docs/9.x/validation.md:918
#: ./docs/10.x/validation.md:976
#: ./docs/11.x/validation.md:981
#: ./docs/master/validation.md:976
msgctxt "H4"
msgid "accepted_if:anotherfield,value,..."
msgstr ""

#: ./docs/8.x/validation.md:843
#: ./docs/9.x/validation.md:920
msgctxt "P"
msgid "The field under validation must be `\"yes\"`, `\"on\"`, `1`, or `true` if another field under validation is equal to a specified value. This is useful for validating \"Terms of Service\" acceptance or similar fields."
msgstr ""

#: ./docs/8.x/validation.md:845
#: ./docs/9.x/validation.md:922
#: ./docs/10.x/validation.md:980
#: ./docs/11.x/validation.md:985
#: ./docs/master/validation.md:980
#~ msgctxt "P"
#~ msgid "<a name=\"rule-active-url\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:846
#: ./docs/9.x/validation.md:923
#: ./docs/10.x/validation.md:981
#: ./docs/11.x/validation.md:986
#: ./docs/master/validation.md:981
msgctxt "H4"
msgid "active_url"
msgstr ""

#: ./docs/8.x/validation.md:848
#: ./docs/9.x/validation.md:925
#: ./docs/10.x/validation.md:983
#: ./docs/11.x/validation.md:988
#: ./docs/master/validation.md:983
msgctxt "P"
msgid "The field under validation must have a valid A or AAAA record according to the `dns_get_record` PHP function. The hostname of the provided URL is extracted using the `parse_url` PHP function before being passed to `dns_get_record`."
msgstr ""

#: ./docs/8.x/validation.md:850
#: ./docs/9.x/validation.md:927
#: ./docs/10.x/validation.md:985
#: ./docs/11.x/validation.md:990
#: ./docs/master/validation.md:985
#~ msgctxt "P"
#~ msgid "<a name=\"rule-after\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:851
#: ./docs/9.x/validation.md:928
#: ./docs/10.x/validation.md:986
#: ./docs/11.x/validation.md:991
#: ./docs/master/validation.md:986
msgctxt "H4"
msgid "after:*date*"
msgstr ""

#: ./docs/8.x/validation.md:853
#: ./docs/9.x/validation.md:930
#: ./docs/10.x/validation.md:988
#: ./docs/11.x/validation.md:993
#: ./docs/master/validation.md:988
msgctxt "P"
msgid "The field under validation must be a value after a given date. The dates will be passed into the `strtotime` PHP function in order to be converted to a valid `DateTime` instance:"
msgstr ""

#: ./docs/8.x/validation.md:855
#: ./docs/9.x/validation.md:932
#: ./docs/10.x/validation.md:990
#: ./docs/11.x/validation.md:995
#: ./docs/master/validation.md:990
msgctxt "CODE"
msgid "'start_date' => 'required|date|after:tomorrow'"
msgstr ""

#: ./docs/8.x/validation.md:857
#: ./docs/9.x/validation.md:934
#: ./docs/10.x/validation.md:992
#: ./docs/11.x/validation.md:997
#: ./docs/master/validation.md:992
msgctxt "P"
msgid "Instead of passing a date string to be evaluated by `strtotime`, you may specify another field to compare against the date:"
msgstr ""

#: ./docs/8.x/validation.md:859
#: ./docs/9.x/validation.md:936
#: ./docs/10.x/validation.md:994
#: ./docs/11.x/validation.md:999
#: ./docs/master/validation.md:994
msgctxt "CODE"
msgid "'finish_date' => 'required|date|after:start_date'"
msgstr ""

#: ./docs/8.x/validation.md:861
#: ./docs/9.x/validation.md:938
#: ./docs/10.x/validation.md:996
#: ./docs/11.x/validation.md:1001
#: ./docs/master/validation.md:996
#~ msgctxt "P"
#~ msgid "<a name=\"rule-after-or-equal\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:862
#: ./docs/9.x/validation.md:939
#: ./docs/10.x/validation.md:997
#: ./docs/11.x/validation.md:1002
#: ./docs/master/validation.md:997
msgctxt "H4"
msgid "after_or_equal:*date*"
msgstr ""

#: ./docs/8.x/validation.md:864
#: ./docs/9.x/validation.md:941
#: ./docs/10.x/validation.md:999
#: ./docs/11.x/validation.md:1004
#: ./docs/master/validation.md:999
msgctxt "P"
msgid "The field under validation must be a value after or equal to the given date. For more information, see the [after](#rule-after) rule."
msgstr ""

#: ./docs/10.x/validation.md:866
#: ./docs/master/validation.md:866
msgctxt "P"
msgid ""
"[Accepted](#rule-accepted)\n"
"[Accepted If](#rule-accepted-if)\n"
"[Active URL](#rule-active-url)\n"
"[After (Date)](#rule-after)\n"
"[After Or Equal (Date)](#rule-after-or-equal)\n"
"[Alpha](#rule-alpha)\n"
"[Alpha Dash](#rule-alpha-dash)\n"
"[Alpha Numeric](#rule-alpha-num)\n"
"[Array](#rule-array)\n"
"[Ascii](#rule-ascii)\n"
"[Bail](#rule-bail)\n"
"[Before (Date)](#rule-before)\n"
"[Before Or Equal (Date)](#rule-before-or-equal)\n"
"[Between](#rule-between)\n"
"[Boolean](#rule-boolean)\n"
"[Confirmed](#rule-confirmed)\n"
"[Current Password](#rule-current-password)\n"
"[Date](#rule-date)\n"
"[Date Equals](#rule-date-equals)\n"
"[Date Format](#rule-date-format)\n"
"[Decimal](#rule-decimal)\n"
"[Declined](#rule-declined)\n"
"[Declined If](#rule-declined-if)\n"
"[Different](#rule-different)\n"
"[Digits](#rule-digits)\n"
"[Digits Between](#rule-digits-between)\n"
"[Dimensions (Image Files)](#rule-dimensions)\n"
"[Distinct](#rule-distinct)\n"
"[Doesnt Start With](#rule-doesnt-start-with)\n"
"[Doesnt End With](#rule-doesnt-end-with)\n"
"[Email](#rule-email)\n"
"[Ends With](#rule-ends-with)\n"
"[Enum](#rule-enum)\n"
"[Exclude](#rule-exclude)\n"
"[Exclude If](#rule-exclude-if)\n"
"[Exclude Unless](#rule-exclude-unless)\n"
"[Exclude With](#rule-exclude-with)\n"
"[Exclude Without](#rule-exclude-without)\n"
"[Exists (Database)](#rule-exists)\n"
"[Extensions](#rule-extensions)\n"
"[File](#rule-file)\n"
"[Filled](#rule-filled)\n"
"[Greater Than](#rule-gt)\n"
"[Greater Than Or Equal](#rule-gte)\n"
"[Hex Color](#rule-hex-color)\n"
"[Image (File)](#rule-image)\n"
"[In](#rule-in)\n"
"[In Array](#rule-in-array)\n"
"[Integer](#rule-integer)\n"
"[IP Address](#rule-ip)\n"
"[JSON](#rule-json)\n"
"[Less Than](#rule-lt)\n"
"[Less Than Or Equal](#rule-lte)\n"
"[Lowercase](#rule-lowercase)\n"
"[MAC Address](#rule-mac)\n"
"[Max](#rule-max)\n"
"[Max Digits](#rule-max-digits)\n"
"[MIME Types](#rule-mimetypes)\n"
"[MIME Type By File Extension](#rule-mimes)\n"
"[Min](#rule-min)\n"
"[Min Digits](#rule-min-digits)\n"
"[Missing](#rule-missing)\n"
"[Missing If](#rule-missing-if)\n"
"[Missing Unless](#rule-missing-unless)\n"
"[Missing With](#rule-missing-with)\n"
"[Missing With All](#rule-missing-with-all)\n"
"[Multiple Of](#rule-multiple-of)\n"
"[Not In](#rule-not-in)\n"
"[Not Regex](#rule-not-regex)\n"
"[Nullable](#rule-nullable)\n"
"[Numeric](#rule-numeric)\n"
"[Present](#rule-present)\n"
"[Present If](#rule-present-if)\n"
"[Present Unless](#rule-present-unless)\n"
"[Present With](#rule-present-with)\n"
"[Present With All](#rule-present-with-all)\n"
"[Prohibited](#rule-prohibited)\n"
"[Prohibited If](#rule-prohibited-if)\n"
"[Prohibited Unless](#rule-prohibited-unless)\n"
"[Prohibits](#rule-prohibits)\n"
"[Regular Expression](#rule-regex)\n"
"[Required](#rule-required)\n"
"[Required If](#rule-required-if)\n"
"[Required If Accepted](#rule-required-if-accepted)\n"
"[Required Unless](#rule-required-unless)\n"
"[Required With](#rule-required-with)\n"
"[Required With All](#rule-required-with-all)\n"
"[Required Without](#rule-required-without)\n"
"[Required Without All](#rule-required-without-all)\n"
"[Required Array Keys](#rule-required-array-keys)\n"
"[Same](#rule-same)\n"
"[Size](#rule-size)\n"
"[Sometimes](#validating-when-present)\n"
"[Starts With](#rule-starts-with)\n"
"[String](#rule-string)\n"
"[Timezone](#rule-timezone)\n"
"[Unique (Database)](#rule-unique)\n"
"[Uppercase](#rule-uppercase)\n"
"[URL](#rule-url)\n"
"[ULID](#rule-ulid)\n"
"[UUID](#rule-uuid)"
msgstr ""

#: ./docs/8.x/validation.md:866
#: ./docs/9.x/validation.md:943
#: ./docs/10.x/validation.md:1001
#: ./docs/11.x/validation.md:1006
#: ./docs/master/validation.md:1001
#~ msgctxt "P"
#~ msgid "<a name=\"rule-alpha\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:867
#: ./docs/9.x/validation.md:944
#: ./docs/10.x/validation.md:1002
#: ./docs/11.x/validation.md:1007
#: ./docs/master/validation.md:1002
msgctxt "H4"
msgid "alpha"
msgstr ""

#: ./docs/11.x/validation.md:868
msgctxt "P"
msgid ""
"[Accepted](#rule-accepted)\n"
"[Accepted If](#rule-accepted-if)\n"
"[Active URL](#rule-active-url)\n"
"[After (Date)](#rule-after)\n"
"[After Or Equal (Date)](#rule-after-or-equal)\n"
"[Alpha](#rule-alpha)\n"
"[Alpha Dash](#rule-alpha-dash)\n"
"[Alpha Numeric](#rule-alpha-num)\n"
"[Array](#rule-array)\n"
"[Ascii](#rule-ascii)\n"
"[Bail](#rule-bail)\n"
"[Before (Date)](#rule-before)\n"
"[Before Or Equal (Date)](#rule-before-or-equal)\n"
"[Between](#rule-between)\n"
"[Boolean](#rule-boolean)\n"
"[Confirmed](#rule-confirmed)\n"
"[Contains](#rule-contains)\n"
"[Current Password](#rule-current-password)\n"
"[Date](#rule-date)\n"
"[Date Equals](#rule-date-equals)\n"
"[Date Format](#rule-date-format)\n"
"[Decimal](#rule-decimal)\n"
"[Declined](#rule-declined)\n"
"[Declined If](#rule-declined-if)\n"
"[Different](#rule-different)\n"
"[Digits](#rule-digits)\n"
"[Digits Between](#rule-digits-between)\n"
"[Dimensions (Image Files)](#rule-dimensions)\n"
"[Distinct](#rule-distinct)\n"
"[Doesnt Start With](#rule-doesnt-start-with)\n"
"[Doesnt End With](#rule-doesnt-end-with)\n"
"[Email](#rule-email)\n"
"[Ends With](#rule-ends-with)\n"
"[Enum](#rule-enum)\n"
"[Exclude](#rule-exclude)\n"
"[Exclude If](#rule-exclude-if)\n"
"[Exclude Unless](#rule-exclude-unless)\n"
"[Exclude With](#rule-exclude-with)\n"
"[Exclude Without](#rule-exclude-without)\n"
"[Exists (Database)](#rule-exists)\n"
"[Extensions](#rule-extensions)\n"
"[File](#rule-file)\n"
"[Filled](#rule-filled)\n"
"[Greater Than](#rule-gt)\n"
"[Greater Than Or Equal](#rule-gte)\n"
"[Hex Color](#rule-hex-color)\n"
"[Image (File)](#rule-image)\n"
"[In](#rule-in)\n"
"[In Array](#rule-in-array)\n"
"[Integer](#rule-integer)\n"
"[IP Address](#rule-ip)\n"
"[JSON](#rule-json)\n"
"[Less Than](#rule-lt)\n"
"[Less Than Or Equal](#rule-lte)\n"
"[List](#rule-list)\n"
"[Lowercase](#rule-lowercase)\n"
"[MAC Address](#rule-mac)\n"
"[Max](#rule-max)\n"
"[Max Digits](#rule-max-digits)\n"
"[MIME Types](#rule-mimetypes)\n"
"[MIME Type By File Extension](#rule-mimes)\n"
"[Min](#rule-min)\n"
"[Min Digits](#rule-min-digits)\n"
"[Missing](#rule-missing)\n"
"[Missing If](#rule-missing-if)\n"
"[Missing Unless](#rule-missing-unless)\n"
"[Missing With](#rule-missing-with)\n"
"[Missing With All](#rule-missing-with-all)\n"
"[Multiple Of](#rule-multiple-of)\n"
"[Not In](#rule-not-in)\n"
"[Not Regex](#rule-not-regex)\n"
"[Nullable](#rule-nullable)\n"
"[Numeric](#rule-numeric)\n"
"[Present](#rule-present)\n"
"[Present If](#rule-present-if)\n"
"[Present Unless](#rule-present-unless)\n"
"[Present With](#rule-present-with)\n"
"[Present With All](#rule-present-with-all)\n"
"[Prohibited](#rule-prohibited)\n"
"[Prohibited If](#rule-prohibited-if)\n"
"[Prohibited Unless](#rule-prohibited-unless)\n"
"[Prohibits](#rule-prohibits)\n"
"[Regular Expression](#rule-regex)\n"
"[Required](#rule-required)\n"
"[Required If](#rule-required-if)\n"
"[Required If Accepted](#rule-required-if-accepted)\n"
"[Required If Declined](#rule-required-if-declined)\n"
"[Required Unless](#rule-required-unless)\n"
"[Required With](#rule-required-with)\n"
"[Required With All](#rule-required-with-all)\n"
"[Required Without](#rule-required-without)\n"
"[Required Without All](#rule-required-without-all)\n"
"[Required Array Keys](#rule-required-array-keys)\n"
"[Same](#rule-same)\n"
"[Size](#rule-size)\n"
"[Sometimes](#validating-when-present)\n"
"[Starts With](#rule-starts-with)\n"
"[String](#rule-string)\n"
"[Timezone](#rule-timezone)\n"
"[Unique (Database)](#rule-unique)\n"
"[Uppercase](#rule-uppercase)\n"
"[URL](#rule-url)\n"
"[ULID](#rule-ulid)\n"
"[UUID](#rule-uuid)"
msgstr ""

#: ./docs/8.x/validation.md:869
msgctxt "P"
msgid "The field under validation must be entirely alphabetic characters."
msgstr ""

#: ./docs/8.x/validation.md:871
#: ./docs/9.x/validation.md:954
#: ./docs/10.x/validation.md:1012
#: ./docs/11.x/validation.md:1017
#: ./docs/master/validation.md:1012
#~ msgctxt "P"
#~ msgid "<a name=\"rule-alpha-dash\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:872
#: ./docs/9.x/validation.md:955
#: ./docs/10.x/validation.md:1013
#: ./docs/11.x/validation.md:1018
#: ./docs/master/validation.md:1013
msgctxt "H4"
msgid "alpha_dash"
msgstr ""

#: ./docs/8.x/validation.md:874
msgctxt "P"
msgid "The field under validation may have alpha-numeric characters, as well as dashes and underscores."
msgstr ""

#: ./docs/8.x/validation.md:876
#: ./docs/9.x/validation.md:965
#: ./docs/10.x/validation.md:1023
#: ./docs/11.x/validation.md:1028
#: ./docs/master/validation.md:1023
#~ msgctxt "P"
#~ msgid "<a name=\"rule-alpha-num\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:877
#: ./docs/9.x/validation.md:966
#: ./docs/10.x/validation.md:1024
#: ./docs/11.x/validation.md:1029
#: ./docs/master/validation.md:1024
msgctxt "H4"
msgid "alpha_num"
msgstr ""

#: ./docs/8.x/validation.md:879
msgctxt "P"
msgid "The field under validation must be entirely alpha-numeric characters."
msgstr ""

#: ./docs/8.x/validation.md:881
#: ./docs/9.x/validation.md:976
#: ./docs/10.x/validation.md:1034
#: ./docs/11.x/validation.md:1039
#: ./docs/master/validation.md:1034
#~ msgctxt "P"
#~ msgid "<a name=\"rule-array\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:882
#: ./docs/9.x/validation.md:977
#: ./docs/10.x/validation.md:1035
#: ./docs/11.x/validation.md:1040
#: ./docs/master/validation.md:1035
msgctxt "H4"
msgid "array"
msgstr ""

#: ./docs/8.x/validation.md:884
#: ./docs/9.x/validation.md:979
#: ./docs/10.x/validation.md:1037
#: ./docs/11.x/validation.md:1042
#: ./docs/master/validation.md:1037
msgctxt "P"
msgid "The field under validation must be a PHP `array`."
msgstr ""

#: ./docs/8.x/validation.md:886
#: ./docs/9.x/validation.md:981
#: ./docs/10.x/validation.md:1039
#: ./docs/11.x/validation.md:1044
#: ./docs/master/validation.md:1039
msgctxt "P"
msgid "When additional values are provided to the `array` rule, each key in the input array must be present within the list of values provided to the rule. In the following example, the `admin` key in the input array is invalid since it is not contained in the list of values provided to the `array` rule:"
msgstr ""

#: ./docs/8.x/validation.md:888
#: ./docs/8.x/validation.md:1625
#: ./docs/9.x/validation.md:1860
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Validator;\n"
"\n"
"$input = [\n"
"    'user' => [\n"
"        'name' => 'Taylor Otwell',\n"
"        'username' => 'taylorotwell',\n"
"        'admin' => true,\n"
"    ],\n"
"];\n"
"\n"
"Validator::make($input, [\n"
"    'user' => 'array:username,locale',\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:902
#: ./docs/8.x/validation.md:1639
#: ./docs/9.x/validation.md:1874
#: ./docs/10.x/validation.md:2004
#: ./docs/11.x/validation.md:2026
#: ./docs/master/validation.md:2010
msgctxt "P"
msgid "In general, you should always specify the array keys that are allowed to be present within your array. Otherwise, the validator's `validate` and `validated` methods will return all of the validated data, including the array and all of its keys, even if those keys were not validated by other nested array validation rules."
msgstr ""

#: ./docs/8.x/validation.md:904
#: ./docs/8.x/validation.md:1644
msgctxt "P"
msgid "If you would like, you may instruct Laravel's validator to never include unvalidated array keys in the \"validated\" data it returns, even if you use the `array` rule without specifying a list of allowed keys. To accomplish this, you may call the validator's `excludeUnvalidatedArrayKeys` method in the `boot` method of your application's `AppServiceProvider`. After doing so, the validator will include array keys in the \"validated\" data it returns only when those keys were specifically validated by [nested array rules](#validating-arrays):"
msgstr ""

#: ./docs/8.x/validation.md:906
#: ./docs/8.x/validation.md:1646
msgctxt "CODE: php"
msgid ""
"use Illuminate\\Support\\Facades\\Validator;\n"
"\n"
"/**\n"
" * Register any application services.\n"
" *\n"
" * @return void\n"
" */\n"
"public function boot()\n"
"{\n"
"    Validator::excludeUnvalidatedArrayKeys();\n"
"}"
msgstr ""

#: ./docs/8.x/validation.md:920
#: ./docs/9.x/validation.md:1004
#: ./docs/10.x/validation.md:1062
#: ./docs/11.x/validation.md:1067
#: ./docs/master/validation.md:1062
#~ msgctxt "P"
#~ msgid "<a name=\"rule-bail\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:921
#: ./docs/9.x/validation.md:1005
#: ./docs/10.x/validation.md:1063
#: ./docs/11.x/validation.md:1068
#: ./docs/master/validation.md:1063
msgctxt "H4"
msgid "bail"
msgstr ""

#: ./docs/8.x/validation.md:923
#: ./docs/9.x/validation.md:1007
#: ./docs/10.x/validation.md:1065
#: ./docs/11.x/validation.md:1070
#: ./docs/master/validation.md:1065
msgctxt "P"
msgid "Stop running validation rules for the field after the first validation failure."
msgstr ""

#: ./docs/8.x/validation.md:925
#: ./docs/9.x/validation.md:1009
#: ./docs/10.x/validation.md:1067
#: ./docs/11.x/validation.md:1072
#: ./docs/master/validation.md:1067
msgctxt "P"
msgid "While the `bail` rule will only stop validating a specific field when it encounters a validation failure, the `stopOnFirstFailure` method will inform the validator that it should stop validating all attributes once a single validation failure has occurred:"
msgstr ""

#: ./docs/8.x/validation.md:931
#: ./docs/9.x/validation.md:1015
#: ./docs/10.x/validation.md:1073
#: ./docs/11.x/validation.md:1078
#: ./docs/master/validation.md:1073
#~ msgctxt "P"
#~ msgid "<a name=\"rule-before\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:932
#: ./docs/9.x/validation.md:1016
#: ./docs/10.x/validation.md:1074
#: ./docs/11.x/validation.md:1079
#: ./docs/master/validation.md:1074
msgctxt "H4"
msgid "before:*date*"
msgstr ""

#: ./docs/8.x/validation.md:934
#: ./docs/9.x/validation.md:1018
#: ./docs/10.x/validation.md:1076
#: ./docs/11.x/validation.md:1081
#: ./docs/master/validation.md:1076
msgctxt "P"
msgid "The field under validation must be a value preceding the given date. The dates will be passed into the PHP `strtotime` function in order to be converted into a valid `DateTime` instance. In addition, like the [`after`](#rule-after) rule, the name of another field under validation may be supplied as the value of `date`."
msgstr ""

#: ./docs/8.x/validation.md:936
#: ./docs/9.x/validation.md:1020
#: ./docs/10.x/validation.md:1078
#: ./docs/11.x/validation.md:1083
#: ./docs/master/validation.md:1078
#~ msgctxt "P"
#~ msgid "<a name=\"rule-before-or-equal\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:937
#: ./docs/9.x/validation.md:1021
#: ./docs/10.x/validation.md:1079
#: ./docs/11.x/validation.md:1084
#: ./docs/master/validation.md:1079
msgctxt "H4"
msgid "before_or_equal:*date*"
msgstr ""

#: ./docs/8.x/validation.md:939
#: ./docs/9.x/validation.md:1023
#: ./docs/10.x/validation.md:1081
#: ./docs/11.x/validation.md:1086
#: ./docs/master/validation.md:1081
msgctxt "P"
msgid "The field under validation must be a value preceding or equal to the given date. The dates will be passed into the PHP `strtotime` function in order to be converted into a valid `DateTime` instance. In addition, like the [`after`](#rule-after) rule, the name of another field under validation may be supplied as the value of `date`."
msgstr ""

#: ./docs/8.x/validation.md:941
#: ./docs/9.x/validation.md:1025
#: ./docs/10.x/validation.md:1083
#: ./docs/11.x/validation.md:1088
#: ./docs/master/validation.md:1083
#~ msgctxt "P"
#~ msgid "<a name=\"rule-between\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:942
#: ./docs/9.x/validation.md:1026
#: ./docs/10.x/validation.md:1084
#: ./docs/11.x/validation.md:1089
#: ./docs/master/validation.md:1084
msgctxt "H4"
msgid "between:*min*,*max*"
msgstr ""

#: ./docs/8.x/validation.md:944
msgctxt "P"
msgid "The field under validation must have a size between the given *min* and *max*. Strings, numerics, arrays, and files are evaluated in the same fashion as the [`size`](#rule-size) rule."
msgstr ""

#: ./docs/8.x/validation.md:946
#: ./docs/9.x/validation.md:1030
#: ./docs/10.x/validation.md:1088
#: ./docs/11.x/validation.md:1093
#: ./docs/master/validation.md:1088
#~ msgctxt "P"
#~ msgid "<a name=\"rule-boolean\"></a>"
#~ msgstr ""

#: ./docs/9.x/validation.md:946
#: ./docs/10.x/validation.md:1004
#: ./docs/11.x/validation.md:1009
#: ./docs/master/validation.md:1004
msgctxt "P"
msgid "The field under validation must be entirely Unicode alphabetic characters contained in [`\\p{L}`](https://util.unicode.org/UnicodeJsps/list-unicodeset.jsp?a=%5B%3AL%3A%5D&g=&i=) and [`\\p{M}`](https://util.unicode.org/UnicodeJsps/list-unicodeset.jsp?a=%5B%3AM%3A%5D&g=&i=)."
msgstr ""

#: ./docs/8.x/validation.md:947
#: ./docs/9.x/validation.md:1031
#: ./docs/10.x/validation.md:1089
#: ./docs/11.x/validation.md:1094
#: ./docs/master/validation.md:1089
msgctxt "H4"
msgid "boolean"
msgstr ""

#: ./docs/9.x/validation.md:948
#: ./docs/9.x/validation.md:959
#: ./docs/9.x/validation.md:970
#: ./docs/10.x/validation.md:1006
#: ./docs/10.x/validation.md:1017
#: ./docs/10.x/validation.md:1028
#: ./docs/11.x/validation.md:1011
#: ./docs/11.x/validation.md:1022
#: ./docs/11.x/validation.md:1033
#: ./docs/master/validation.md:1006
#: ./docs/master/validation.md:1017
#: ./docs/master/validation.md:1028
msgctxt "P"
msgid "To restrict this validation rule to characters in the ASCII range (`a-z` and `A-Z`), you may provide the `ascii` option to the validation rule:"
msgstr ""

#: ./docs/8.x/validation.md:949
#: ./docs/9.x/validation.md:1033
#: ./docs/10.x/validation.md:1091
#: ./docs/11.x/validation.md:1096
#: ./docs/master/validation.md:1091
msgctxt "P"
msgid "The field under validation must be able to be cast as a boolean. Accepted input are `true`, `false`, `1`, `0`, `\"1\"`, and `\"0\"`."
msgstr ""

#: ./docs/9.x/validation.md:950
#: ./docs/10.x/validation.md:1008
#: ./docs/11.x/validation.md:1013
#: ./docs/master/validation.md:1008
msgctxt "CODE: php"
msgid "'username' => 'alpha:ascii',"
msgstr ""

#: ./docs/8.x/validation.md:951
#: ./docs/9.x/validation.md:1035
#: ./docs/10.x/validation.md:1093
#: ./docs/11.x/validation.md:1098
#: ./docs/master/validation.md:1093
#~ msgctxt "P"
#~ msgid "<a name=\"rule-confirmed\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:952
#: ./docs/9.x/validation.md:1036
#: ./docs/10.x/validation.md:1094
#: ./docs/11.x/validation.md:1099
#: ./docs/master/validation.md:1094
msgctxt "H4"
msgid "confirmed"
msgstr ""

#: ./docs/8.x/validation.md:954
#: ./docs/9.x/validation.md:1038
#: ./docs/10.x/validation.md:1096
#: ./docs/11.x/validation.md:1101
#: ./docs/master/validation.md:1096
msgctxt "P"
msgid "The field under validation must have a matching field of `{field}_confirmation`. For example, if the field under validation is `password`, a matching `password_confirmation` field must be present in the input."
msgstr ""

#: ./docs/8.x/validation.md:956
#: ./docs/9.x/validation.md:1040
#: ./docs/10.x/validation.md:1098
#: ./docs/11.x/validation.md:1110
#: ./docs/master/validation.md:1098
#~ msgctxt "P"
#~ msgid "<a name=\"rule-current-password\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:957
#: ./docs/9.x/validation.md:1041
#: ./docs/10.x/validation.md:1099
#: ./docs/11.x/validation.md:1111
#: ./docs/master/validation.md:1099
msgctxt "H4"
msgid "current_password"
msgstr ""

#: ./docs/9.x/validation.md:957
#: ./docs/10.x/validation.md:1015
#: ./docs/11.x/validation.md:1020
#: ./docs/master/validation.md:1015
msgctxt "P"
msgid "The field under validation must be entirely Unicode alpha-numeric characters contained in [`\\p{L}`](https://util.unicode.org/UnicodeJsps/list-unicodeset.jsp?a=%5B%3AL%3A%5D&g=&i=), [`\\p{M}`](https://util.unicode.org/UnicodeJsps/list-unicodeset.jsp?a=%5B%3AM%3A%5D&g=&i=), [`\\p{N}`](https://util.unicode.org/UnicodeJsps/list-unicodeset.jsp?a=%5B%3AN%3A%5D&g=&i=), as well as ASCII dashes (`-`) and ASCII underscores (`_`)."
msgstr ""

#: ./docs/8.x/validation.md:959
#: ./docs/9.x/validation.md:1043
#: ./docs/10.x/validation.md:1101
#: ./docs/11.x/validation.md:1113
#: ./docs/master/validation.md:1101
msgctxt "P"
msgid "The field under validation must match the authenticated user's password. You may specify an [authentication guard](/docs/{{version}}/authentication) using the rule's first parameter:"
msgstr ""

#: ./docs/8.x/validation.md:961
#: ./docs/9.x/validation.md:1045
#: ./docs/10.x/validation.md:1103
#: ./docs/11.x/validation.md:1115
#: ./docs/master/validation.md:1103
msgctxt "CODE"
msgid "'password' => 'current_password:api'"
msgstr ""

#: ./docs/9.x/validation.md:961
#: ./docs/10.x/validation.md:1019
#: ./docs/11.x/validation.md:1024
#: ./docs/master/validation.md:1019
msgctxt "CODE: php"
msgid "'username' => 'alpha_dash:ascii',"
msgstr ""

#: ./docs/8.x/validation.md:963
#: ./docs/9.x/validation.md:1047
#: ./docs/10.x/validation.md:1105
#: ./docs/11.x/validation.md:1117
#: ./docs/master/validation.md:1105
#~ msgctxt "P"
#~ msgid "<a name=\"rule-date\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:964
#: ./docs/9.x/validation.md:1048
#: ./docs/10.x/validation.md:1106
#: ./docs/11.x/validation.md:1118
#: ./docs/master/validation.md:1106
msgctxt "H4"
msgid "date"
msgstr ""

#: ./docs/8.x/validation.md:966
#: ./docs/9.x/validation.md:1050
#: ./docs/10.x/validation.md:1108
#: ./docs/11.x/validation.md:1120
#: ./docs/master/validation.md:1108
msgctxt "P"
msgid "The field under validation must be a valid, non-relative date according to the `strtotime` PHP function."
msgstr ""

#: ./docs/8.x/validation.md:968
#: ./docs/9.x/validation.md:1052
#: ./docs/10.x/validation.md:1110
#: ./docs/11.x/validation.md:1122
#: ./docs/master/validation.md:1110
#~ msgctxt "P"
#~ msgid "<a name=\"rule-date-equals\"></a>"
#~ msgstr ""

#: ./docs/9.x/validation.md:968
#: ./docs/10.x/validation.md:1026
#: ./docs/11.x/validation.md:1031
#: ./docs/master/validation.md:1026
msgctxt "P"
msgid "The field under validation must be entirely Unicode alpha-numeric characters contained in [`\\p{L}`](https://util.unicode.org/UnicodeJsps/list-unicodeset.jsp?a=%5B%3AL%3A%5D&g=&i=), [`\\p{M}`](https://util.unicode.org/UnicodeJsps/list-unicodeset.jsp?a=%5B%3AM%3A%5D&g=&i=), and [`\\p{N}`](https://util.unicode.org/UnicodeJsps/list-unicodeset.jsp?a=%5B%3AN%3A%5D&g=&i=)."
msgstr ""

#: ./docs/8.x/validation.md:969
#: ./docs/9.x/validation.md:1053
#: ./docs/10.x/validation.md:1111
#: ./docs/11.x/validation.md:1123
#: ./docs/master/validation.md:1111
msgctxt "H4"
msgid "date_equals:*date*"
msgstr ""

#: ./docs/8.x/validation.md:971
#: ./docs/9.x/validation.md:1055
#: ./docs/10.x/validation.md:1113
#: ./docs/11.x/validation.md:1125
#: ./docs/master/validation.md:1113
msgctxt "P"
msgid "The field under validation must be equal to the given date. The dates will be passed into the PHP `strtotime` function in order to be converted into a valid `DateTime` instance."
msgstr ""

#: ./docs/9.x/validation.md:972
#: ./docs/10.x/validation.md:1030
#: ./docs/11.x/validation.md:1035
#: ./docs/master/validation.md:1030
msgctxt "CODE: php"
msgid "'username' => 'alpha_num:ascii',"
msgstr ""

#: ./docs/10.x/validation.md:973
#: ./docs/11.x/validation.md:978
#: ./docs/master/validation.md:973
msgctxt "P"
msgid "The field under validation must be `\"yes\"`, `\"on\"`, `1`, `\"1\"`, `true`, or `\"true\"`. This is useful for validating \"Terms of Service\" acceptance or similar fields."
msgstr ""

#: ./docs/8.x/validation.md:973
#: ./docs/9.x/validation.md:1057
#: ./docs/10.x/validation.md:1115
#: ./docs/11.x/validation.md:1127
#: ./docs/master/validation.md:1115
#~ msgctxt "P"
#~ msgid "<a name=\"rule-date-format\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:974
msgctxt "H4"
msgid "date_format:*format*"
msgstr ""

#: ./docs/8.x/validation.md:976
msgctxt "P"
msgid "The field under validation must match the given *format*. You should use **either** `date` or `date_format` when validating a field, not both. This validation rule supports all formats supported by PHP's [DateTime](https://www.php.net/manual/en/class.datetime.php) class."
msgstr ""

#: ./docs/10.x/validation.md:978
#: ./docs/11.x/validation.md:983
#: ./docs/master/validation.md:978
msgctxt "P"
msgid "The field under validation must be `\"yes\"`, `\"on\"`, `1`, `\"1\"`, `true`, or `\"true\"` if another field under validation is equal to a specified value. This is useful for validating \"Terms of Service\" acceptance or similar fields."
msgstr ""

#: ./docs/8.x/validation.md:978
#: ./docs/9.x/validation.md:1073
#: ./docs/10.x/validation.md:1131
#: ./docs/11.x/validation.md:1143
#: ./docs/master/validation.md:1131
#~ msgctxt "P"
#~ msgid "<a name=\"rule-declined\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:979
#: ./docs/9.x/validation.md:1074
#: ./docs/10.x/validation.md:1132
#: ./docs/11.x/validation.md:1144
#: ./docs/master/validation.md:1132
msgctxt "H4"
msgid "declined"
msgstr ""

#: ./docs/8.x/validation.md:981
#: ./docs/9.x/validation.md:1076
msgctxt "P"
msgid "The field under validation must be `\"no\"`, `\"off\"`, `0`, or `false`."
msgstr ""

#: ./docs/8.x/validation.md:983
#: ./docs/9.x/validation.md:1078
#: ./docs/10.x/validation.md:1136
#: ./docs/11.x/validation.md:1148
#: ./docs/master/validation.md:1136
#~ msgctxt "P"
#~ msgid "<a name=\"rule-declined-if\"></a>"
#~ msgstr ""

#: ./docs/9.x/validation.md:983
#: ./docs/10.x/validation.md:1041
#: ./docs/10.x/validation.md:1990
#: ./docs/11.x/validation.md:1046
#: ./docs/11.x/validation.md:2012
#: ./docs/master/validation.md:1041
#: ./docs/master/validation.md:1996
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Validator;\n"
"\n"
"$input = [\n"
"    'user' => [\n"
"        'name' => 'Taylor Otwell',\n"
"        'username' => 'taylorotwell',\n"
"        'admin' => true,\n"
"    ],\n"
"];\n"
"\n"
"Validator::make($input, [\n"
"    'user' => 'array:name,username',\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:984
#: ./docs/9.x/validation.md:1079
#: ./docs/10.x/validation.md:1137
#: ./docs/11.x/validation.md:1149
#: ./docs/master/validation.md:1137
msgctxt "H4"
msgid "declined_if:anotherfield,value,..."
msgstr ""

#: ./docs/8.x/validation.md:986
#: ./docs/9.x/validation.md:1081
msgctxt "P"
msgid "The field under validation must be `\"no\"`, `\"off\"`, `0`, or `false` if another field under validation is equal to a specified value."
msgstr ""

#: ./docs/8.x/validation.md:988
#: ./docs/9.x/validation.md:1083
#: ./docs/10.x/validation.md:1141
#: ./docs/11.x/validation.md:1153
#: ./docs/master/validation.md:1141
#~ msgctxt "P"
#~ msgid "<a name=\"rule-different\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:989
#: ./docs/9.x/validation.md:1084
#: ./docs/10.x/validation.md:1142
#: ./docs/11.x/validation.md:1154
#: ./docs/master/validation.md:1142
msgctxt "H4"
msgid "different:*field*"
msgstr ""

#: ./docs/8.x/validation.md:991
#: ./docs/9.x/validation.md:1086
#: ./docs/10.x/validation.md:1144
#: ./docs/11.x/validation.md:1156
#: ./docs/master/validation.md:1144
msgctxt "P"
msgid "The field under validation must have a different value than *field*."
msgstr ""

#: ./docs/8.x/validation.md:993
#: ./docs/9.x/validation.md:1088
#: ./docs/10.x/validation.md:1146
#: ./docs/11.x/validation.md:1158
#: ./docs/master/validation.md:1146
#~ msgctxt "P"
#~ msgid "<a name=\"rule-digits\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:994
#: ./docs/9.x/validation.md:1089
#: ./docs/10.x/validation.md:1147
#: ./docs/11.x/validation.md:1159
#: ./docs/master/validation.md:1147
msgctxt "H4"
msgid "digits:*value*"
msgstr ""

#: ./docs/8.x/validation.md:996
msgctxt "P"
msgid "The field under validation must be *numeric* and must have an exact length of *value*."
msgstr ""

#: ./docs/9.x/validation.md:997
#: ./docs/10.x/validation.md:1055
#: ./docs/11.x/validation.md:1060
#: ./docs/master/validation.md:1055
msgctxt "P"
msgid "In general, you should always specify the array keys that are allowed to be present within your array."
msgstr ""

#: ./docs/8.x/validation.md:998
#: ./docs/9.x/validation.md:1093
#: ./docs/10.x/validation.md:1151
#: ./docs/11.x/validation.md:1163
#: ./docs/master/validation.md:1151
#~ msgctxt "P"
#~ msgid "<a name=\"rule-digits-between\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:999
#: ./docs/9.x/validation.md:1094
#: ./docs/10.x/validation.md:1152
#: ./docs/11.x/validation.md:1164
#: ./docs/master/validation.md:1152
msgctxt "H4"
msgid "digits_between:*min*,*max*"
msgstr ""

#: ./docs/9.x/validation.md:999
#: ./docs/10.x/validation.md:1057
#: ./docs/11.x/validation.md:1062
#: ./docs/master/validation.md:1057
#~ msgctxt "P"
#~ msgid "<a name=\"rule-ascii\"></a>"
#~ msgstr ""

#: ./docs/9.x/validation.md:1000
#: ./docs/10.x/validation.md:1058
#: ./docs/11.x/validation.md:1063
#: ./docs/master/validation.md:1058
msgctxt "H4"
msgid "ascii"
msgstr ""

#: ./docs/8.x/validation.md:1001
msgctxt "P"
msgid "The field under validation must be *numeric* and must have a length between the given *min* and *max*."
msgstr ""

#: ./docs/9.x/validation.md:1002
#: ./docs/10.x/validation.md:1060
#: ./docs/11.x/validation.md:1065
#: ./docs/master/validation.md:1060
msgctxt "P"
msgid "The field under validation must be entirely 7-bit ASCII characters."
msgstr ""

#: ./docs/8.x/validation.md:1003
#: ./docs/9.x/validation.md:1098
#: ./docs/10.x/validation.md:1156
#: ./docs/11.x/validation.md:1168
#: ./docs/master/validation.md:1156
#~ msgctxt "P"
#~ msgid "<a name=\"rule-dimensions\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1004
#: ./docs/9.x/validation.md:1099
#: ./docs/10.x/validation.md:1157
#: ./docs/11.x/validation.md:1169
#: ./docs/master/validation.md:1157
msgctxt "H4"
msgid "dimensions"
msgstr ""

#: ./docs/8.x/validation.md:1006
#: ./docs/9.x/validation.md:1101
#: ./docs/10.x/validation.md:1159
#: ./docs/11.x/validation.md:1171
#: ./docs/master/validation.md:1159
msgctxt "P"
msgid "The file under validation must be an image meeting the dimension constraints as specified by the rule's parameters:"
msgstr ""

#: ./docs/8.x/validation.md:1008
#: ./docs/9.x/validation.md:1103
#: ./docs/10.x/validation.md:1161
#: ./docs/11.x/validation.md:1173
#: ./docs/master/validation.md:1161
msgctxt "CODE"
msgid "'avatar' => 'dimensions:min_width=100,min_height=200'"
msgstr ""

#: ./docs/8.x/validation.md:1010
#: ./docs/9.x/validation.md:1105
#: ./docs/10.x/validation.md:1163
#: ./docs/11.x/validation.md:1175
#: ./docs/master/validation.md:1163
msgctxt "P"
msgid "Available constraints are: *min_width*, *max_width*, *min_height*, *max_height*, *width*, *height*, *ratio*."
msgstr ""

#: ./docs/8.x/validation.md:1012
#: ./docs/9.x/validation.md:1107
#: ./docs/10.x/validation.md:1165
#: ./docs/11.x/validation.md:1177
#: ./docs/master/validation.md:1165
msgctxt "P"
msgid "A *ratio* constraint should be represented as width divided by height. This can be specified either by a fraction like `3/2` or a float like `1.5`:"
msgstr ""

#: ./docs/8.x/validation.md:1014
#: ./docs/9.x/validation.md:1109
#: ./docs/10.x/validation.md:1167
#: ./docs/11.x/validation.md:1179
#: ./docs/master/validation.md:1167
msgctxt "CODE"
msgid "'avatar' => 'dimensions:ratio=3/2'"
msgstr ""

#: ./docs/8.x/validation.md:1016
#: ./docs/9.x/validation.md:1111
#: ./docs/10.x/validation.md:1169
#: ./docs/11.x/validation.md:1181
#: ./docs/master/validation.md:1169
msgctxt "P"
msgid "Since this rule requires several arguments, you may use the `Rule::dimensions` method to fluently construct the rule:"
msgstr ""

#: ./docs/8.x/validation.md:1018
#: ./docs/9.x/validation.md:1113
#: ./docs/10.x/validation.md:1171
#: ./docs/11.x/validation.md:1183
#: ./docs/master/validation.md:1171
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Validator;\n"
"use Illuminate\\Validation\\Rule;\n"
"\n"
"Validator::make($data, [\n"
"    'avatar' => [\n"
"        'required',\n"
"        Rule::dimensions()->maxWidth(1000)->maxHeight(500)->ratio(3 / 2),\n"
"    ],\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:1028
#: ./docs/9.x/validation.md:1123
#: ./docs/10.x/validation.md:1181
#: ./docs/11.x/validation.md:1193
#: ./docs/master/validation.md:1181
#~ msgctxt "P"
#~ msgid "<a name=\"rule-distinct\"></a>"
#~ msgstr ""

#: ./docs/9.x/validation.md:1028
#: ./docs/10.x/validation.md:1086
#: ./docs/11.x/validation.md:1091
#: ./docs/master/validation.md:1086
msgctxt "P"
msgid "The field under validation must have a size between the given *min* and *max* (inclusive). Strings, numerics, arrays, and files are evaluated in the same fashion as the [`size`](#rule-size) rule."
msgstr ""

#: ./docs/8.x/validation.md:1029
#: ./docs/9.x/validation.md:1124
#: ./docs/10.x/validation.md:1182
#: ./docs/11.x/validation.md:1194
#: ./docs/master/validation.md:1182
msgctxt "H4"
msgid "distinct"
msgstr ""

#: ./docs/8.x/validation.md:1031
#: ./docs/9.x/validation.md:1126
#: ./docs/10.x/validation.md:1184
#: ./docs/11.x/validation.md:1196
#: ./docs/master/validation.md:1184
msgctxt "P"
msgid "When validating arrays, the field under validation must not have any duplicate values:"
msgstr ""

#: ./docs/8.x/validation.md:1033
#: ./docs/9.x/validation.md:1128
#: ./docs/10.x/validation.md:1186
#: ./docs/11.x/validation.md:1198
#: ./docs/master/validation.md:1186
msgctxt "CODE"
msgid "'foo.*.id' => 'distinct'"
msgstr ""

#: ./docs/8.x/validation.md:1035
#: ./docs/9.x/validation.md:1130
#: ./docs/10.x/validation.md:1188
#: ./docs/11.x/validation.md:1200
#: ./docs/master/validation.md:1188
msgctxt "P"
msgid "Distinct uses loose variable comparisons by default. To use strict comparisons, you may add the `strict` parameter to your validation rule definition:"
msgstr ""

#: ./docs/8.x/validation.md:1037
#: ./docs/9.x/validation.md:1132
#: ./docs/10.x/validation.md:1190
#: ./docs/11.x/validation.md:1202
#: ./docs/master/validation.md:1190
msgctxt "CODE"
msgid "'foo.*.id' => 'distinct:strict'"
msgstr ""

#: ./docs/8.x/validation.md:1039
#: ./docs/9.x/validation.md:1134
#: ./docs/10.x/validation.md:1192
#: ./docs/11.x/validation.md:1204
#: ./docs/master/validation.md:1192
msgctxt "P"
msgid "You may add `ignore_case` to the validation rule's arguments to make the rule ignore capitalization differences:"
msgstr ""

#: ./docs/8.x/validation.md:1041
#: ./docs/9.x/validation.md:1136
#: ./docs/10.x/validation.md:1194
#: ./docs/11.x/validation.md:1206
#: ./docs/master/validation.md:1194
msgctxt "CODE"
msgid "'foo.*.id' => 'distinct:ignore_case'"
msgstr ""

#: ./docs/8.x/validation.md:1043
#: ./docs/9.x/validation.md:1148
#: ./docs/10.x/validation.md:1206
#: ./docs/11.x/validation.md:1218
#: ./docs/master/validation.md:1206
#~ msgctxt "P"
#~ msgid "<a name=\"rule-email\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1044
#: ./docs/9.x/validation.md:1149
#: ./docs/10.x/validation.md:1207
#: ./docs/11.x/validation.md:1219
#: ./docs/master/validation.md:1207
msgctxt "H4"
msgid "email"
msgstr ""

#: ./docs/8.x/validation.md:1046
#: ./docs/9.x/validation.md:1151
#: ./docs/10.x/validation.md:1209
#: ./docs/11.x/validation.md:1221
#: ./docs/master/validation.md:1209
msgctxt "P"
msgid "The field under validation must be formatted as an email address. This validation rule utilizes the [`egulias/email-validator`](https://github.com/egulias/EmailValidator) package for validating the email address. By default, the `RFCValidation` validator is applied, but you can apply other validation styles as well:"
msgstr ""

#: ./docs/8.x/validation.md:1048
#: ./docs/9.x/validation.md:1153
#: ./docs/10.x/validation.md:1211
#: ./docs/11.x/validation.md:1223
#: ./docs/master/validation.md:1211
msgctxt "CODE"
msgid "'email' => 'email:rfc,dns'"
msgstr ""

#: ./docs/8.x/validation.md:1050
#: ./docs/9.x/validation.md:1155
#: ./docs/10.x/validation.md:1213
#: ./docs/11.x/validation.md:1225
#: ./docs/master/validation.md:1213
msgctxt "P"
msgid "The example above will apply the `RFCValidation` and `DNSCheckValidation` validations. Here's a full list of validation styles you can apply:"
msgstr ""

#: ./docs/8.x/validation.md:1054
#: ./docs/9.x/validation.md:1159
#: ./docs/10.x/validation.md:1217
#: ./docs/11.x/validation.md:1229
#: ./docs/master/validation.md:1217
msgctxt "P"
msgid "`rfc`: `RFCValidation`"
msgstr ""

#: ./docs/8.x/validation.md:1055
#: ./docs/9.x/validation.md:1160
#: ./docs/10.x/validation.md:1218
#: ./docs/11.x/validation.md:1230
#: ./docs/master/validation.md:1218
msgctxt "P"
msgid "`strict`: `NoRFCWarningsValidation`"
msgstr ""

#: ./docs/8.x/validation.md:1056
#: ./docs/9.x/validation.md:1161
#: ./docs/10.x/validation.md:1219
#: ./docs/11.x/validation.md:1231
#: ./docs/master/validation.md:1219
msgctxt "P"
msgid "`dns`: `DNSCheckValidation`"
msgstr ""

#: ./docs/8.x/validation.md:1057
#: ./docs/9.x/validation.md:1162
#: ./docs/10.x/validation.md:1220
#: ./docs/11.x/validation.md:1232
#: ./docs/master/validation.md:1220
msgctxt "P"
msgid "`spoof`: `SpoofCheckValidation`"
msgstr ""

#: ./docs/8.x/validation.md:1058
#: ./docs/9.x/validation.md:1163
#: ./docs/10.x/validation.md:1221
#: ./docs/11.x/validation.md:1233
#: ./docs/master/validation.md:1221
msgctxt "P"
msgid "`filter`: `FilterEmailValidation`"
msgstr ""

#: ./docs/9.x/validation.md:1058
#: ./docs/10.x/validation.md:1116
#: ./docs/11.x/validation.md:1128
#: ./docs/master/validation.md:1116
msgctxt "H4"
msgid "date_format:*format*,..."
msgstr ""

#: ./docs/9.x/validation.md:1060
#: ./docs/10.x/validation.md:1118
#: ./docs/11.x/validation.md:1130
#: ./docs/master/validation.md:1118
msgctxt "P"
msgid "The field under validation must match one of the given *formats*. You should use **either** `date` or `date_format` when validating a field, not both. This validation rule supports all formats supported by PHP's [DateTime](https://www.php.net/manual/en/class.datetime.php) class."
msgstr ""

#: ./docs/8.x/validation.md:1062
#: ./docs/9.x/validation.md:1168
#: ./docs/10.x/validation.md:1226
#: ./docs/11.x/validation.md:1238
#: ./docs/master/validation.md:1226
msgctxt "P"
msgid "The `filter` validator, which uses PHP's `filter_var` function, ships with Laravel and was Laravel's default email validation behavior prior to Laravel version 5.8."
msgstr ""

#: ./docs/9.x/validation.md:1062
#: ./docs/10.x/validation.md:1120
#: ./docs/11.x/validation.md:1132
#: ./docs/master/validation.md:1120
#~ msgctxt "P"
#~ msgid "<a name=\"rule-decimal\"></a>"
#~ msgstr ""

#: ./docs/9.x/validation.md:1063
#: ./docs/10.x/validation.md:1121
#: ./docs/11.x/validation.md:1133
#: ./docs/master/validation.md:1121
msgctxt "H4"
msgid "decimal:*min*,*max*"
msgstr ""

#: ./docs/8.x/validation.md:1064
#: ./docs/9.x/validation.md:1171
#: ./docs/10.x/validation.md:1229
#: ./docs/11.x/validation.md:1241
#: ./docs/master/validation.md:1229
msgctxt "P"
msgid "The `dns` and `spoof` validators require the PHP `intl` extension."
msgstr ""

#: ./docs/9.x/validation.md:1065
#: ./docs/10.x/validation.md:1123
#: ./docs/11.x/validation.md:1135
#: ./docs/master/validation.md:1123
msgctxt "P"
msgid "The field under validation must be numeric and must contain the specified number of decimal places:"
msgstr ""

#: ./docs/8.x/validation.md:1066
#: ./docs/9.x/validation.md:1173
#: ./docs/10.x/validation.md:1231
#: ./docs/11.x/validation.md:1243
#: ./docs/master/validation.md:1231
#~ msgctxt "P"
#~ msgid "<a name=\"rule-ends-with\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1067
#: ./docs/9.x/validation.md:1174
#: ./docs/10.x/validation.md:1232
#: ./docs/11.x/validation.md:1244
#: ./docs/master/validation.md:1232
msgctxt "H4"
msgid "ends_with:*foo*,*bar*,..."
msgstr ""

#: ./docs/9.x/validation.md:1067
#: ./docs/10.x/validation.md:1125
#: ./docs/11.x/validation.md:1137
#: ./docs/master/validation.md:1125
msgctxt "CODE"
msgid ""
"// Must have exactly two decimal places (9.99)...\n"
"'price' => 'decimal:2'\n"
"\n"
"// Must have between 2 and 4 decimal places...\n"
"'price' => 'decimal:2,4'"
msgstr ""

#: ./docs/8.x/validation.md:1069
#: ./docs/9.x/validation.md:1176
#: ./docs/10.x/validation.md:1234
#: ./docs/11.x/validation.md:1246
#: ./docs/master/validation.md:1234
msgctxt "P"
msgid "The field under validation must end with one of the given values."
msgstr ""

#: ./docs/8.x/validation.md:1071
#: ./docs/9.x/validation.md:1178
#: ./docs/10.x/validation.md:1236
#: ./docs/11.x/validation.md:1248
#: ./docs/master/validation.md:1236
#~ msgctxt "P"
#~ msgid "<a name=\"rule-enum\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1072
#: ./docs/9.x/validation.md:1179
#: ./docs/10.x/validation.md:1237
#: ./docs/11.x/validation.md:1249
#: ./docs/master/validation.md:1237
msgctxt "H4"
msgid "enum"
msgstr ""

#: ./docs/8.x/validation.md:1074
#: ./docs/9.x/validation.md:1181
msgctxt "P"
msgid "The `Enum` rule is a class based rule that validates whether the field under validation contains a valid enum value. The `Enum` rule accepts the name of the enum as its only constructor argument:"
msgstr ""

#: ./docs/8.x/validation.md:1076
#: ./docs/9.x/validation.md:1183
msgctxt "CODE"
msgid ""
"use App\\Enums\\ServerStatus;\n"
"use Illuminate\\Validation\\Rules\\Enum;\n"
"\n"
"$request->validate([\n"
"    'status' => [new Enum(ServerStatus::class)],\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:1083
#: ./docs/9.x/validation.md:1191
msgctxt "P"
msgid "Enums are only available on PHP 8.1+."
msgstr ""

#: ./docs/8.x/validation.md:1085
#: ./docs/9.x/validation.md:1193
#: ./docs/10.x/validation.md:1270
#: ./docs/11.x/validation.md:1282
#: ./docs/master/validation.md:1270
#~ msgctxt "P"
#~ msgid "<a name=\"rule-exclude\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1086
#: ./docs/9.x/validation.md:1194
#: ./docs/10.x/validation.md:1271
#: ./docs/11.x/validation.md:1283
#: ./docs/master/validation.md:1271
msgctxt "H4"
msgid "exclude"
msgstr ""

#: ./docs/8.x/validation.md:1088
#: ./docs/9.x/validation.md:1196
#: ./docs/10.x/validation.md:1273
#: ./docs/11.x/validation.md:1285
#: ./docs/master/validation.md:1273
msgctxt "P"
msgid "The field under validation will be excluded from the request data returned by the `validate` and `validated` methods."
msgstr ""

#: ./docs/8.x/validation.md:1090
#: ./docs/9.x/validation.md:1198
#: ./docs/10.x/validation.md:1275
#: ./docs/11.x/validation.md:1287
#: ./docs/master/validation.md:1275
#~ msgctxt "P"
#~ msgid "<a name=\"rule-exclude-if\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1091
#: ./docs/9.x/validation.md:1199
#: ./docs/10.x/validation.md:1276
#: ./docs/11.x/validation.md:1288
#: ./docs/master/validation.md:1276
msgctxt "H4"
msgid "exclude_if:*anotherfield*,*value*"
msgstr ""

#: ./docs/9.x/validation.md:1091
#: ./docs/10.x/validation.md:1149
#: ./docs/11.x/validation.md:1161
#: ./docs/master/validation.md:1149
msgctxt "P"
msgid "The integer under validation must have an exact length of *value*."
msgstr ""

#: ./docs/8.x/validation.md:1093
#: ./docs/9.x/validation.md:1201
#: ./docs/10.x/validation.md:1278
#: ./docs/11.x/validation.md:1290
#: ./docs/master/validation.md:1278
msgctxt "P"
msgid "The field under validation will be excluded from the request data returned by the `validate` and `validated` methods if the *anotherfield* field is equal to *value*."
msgstr ""

#: ./docs/8.x/validation.md:1095
#: ./docs/9.x/validation.md:1216
#: ./docs/10.x/validation.md:1293
#: ./docs/11.x/validation.md:1305
#: ./docs/master/validation.md:1293
#~ msgctxt "P"
#~ msgid "<a name=\"rule-exclude-unless\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1096
#: ./docs/9.x/validation.md:1217
#: ./docs/10.x/validation.md:1294
#: ./docs/11.x/validation.md:1306
#: ./docs/master/validation.md:1294
msgctxt "H4"
msgid "exclude_unless:*anotherfield*,*value*"
msgstr ""

#: ./docs/9.x/validation.md:1096
#: ./docs/10.x/validation.md:1154
#: ./docs/11.x/validation.md:1166
#: ./docs/master/validation.md:1154
msgctxt "P"
msgid "The integer validation must have a length between the given *min* and *max*."
msgstr ""

#: ./docs/8.x/validation.md:1098
#: ./docs/9.x/validation.md:1219
#: ./docs/10.x/validation.md:1296
#: ./docs/11.x/validation.md:1308
#: ./docs/master/validation.md:1296
msgctxt "P"
msgid "The field under validation will be excluded from the request data returned by the `validate` and `validated` methods unless *anotherfield*'s field is equal to *value*. If *value* is `null` (`exclude_unless:name,null`), the field under validation will be excluded unless the comparison field is `null` or the comparison field is missing from the request data."
msgstr ""

#: ./docs/8.x/validation.md:1100
#: ./docs/9.x/validation.md:1226
#: ./docs/10.x/validation.md:1303
#: ./docs/11.x/validation.md:1315
#: ./docs/master/validation.md:1303
#~ msgctxt "P"
#~ msgid "<a name=\"rule-exclude-without\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1101
#: ./docs/9.x/validation.md:1227
#: ./docs/10.x/validation.md:1304
#: ./docs/11.x/validation.md:1316
#: ./docs/master/validation.md:1304
msgctxt "H4"
msgid "exclude_without:*anotherfield*"
msgstr ""

#: ./docs/11.x/validation.md:1103
msgctxt "P"
msgid "You may also pass a custom confirmation field name. For example, `confirmed:repeat_username` will expect the field `repeat_username` to match the field under validation."
msgstr ""

#: ./docs/8.x/validation.md:1103
#: ./docs/9.x/validation.md:1229
#: ./docs/10.x/validation.md:1306
#: ./docs/11.x/validation.md:1318
#: ./docs/master/validation.md:1306
msgctxt "P"
msgid "The field under validation will be excluded from the request data returned by the `validate` and `validated` methods if the *anotherfield* field is not present."
msgstr ""

#: ./docs/11.x/validation.md:1105
#~ msgctxt "P"
#~ msgid "<a name=\"rule-contains\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1105
#: ./docs/9.x/validation.md:1231
#: ./docs/10.x/validation.md:1308
#: ./docs/11.x/validation.md:1320
#: ./docs/master/validation.md:1308
#~ msgctxt "P"
#~ msgid "<a name=\"rule-exists\"></a>"
#~ msgstr ""

#: ./docs/11.x/validation.md:1106
msgctxt "H4"
msgid "contains:*foo*,*bar*,..."
msgstr ""

#: ./docs/8.x/validation.md:1106
#: ./docs/9.x/validation.md:1232
#: ./docs/10.x/validation.md:1309
#: ./docs/11.x/validation.md:1321
#: ./docs/master/validation.md:1309
msgctxt "H4"
msgid "exists:*table*,*column*"
msgstr ""

#: ./docs/11.x/validation.md:1108
msgctxt "P"
msgid "The field under validation must be an array that contains all of the given parameter values."
msgstr ""

#: ./docs/8.x/validation.md:1108
#: ./docs/9.x/validation.md:1234
#: ./docs/10.x/validation.md:1311
#: ./docs/11.x/validation.md:1323
#: ./docs/master/validation.md:1311
msgctxt "P"
msgid "The field under validation must exist in a given database table."
msgstr ""

#: ./docs/8.x/validation.md:1110
#: ./docs/9.x/validation.md:1236
#: ./docs/10.x/validation.md:1313
#: ./docs/11.x/validation.md:1325
#: ./docs/master/validation.md:1313
#~ msgctxt "P"
#~ msgid "<a name=\"basic-usage-of-exists-rule\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1111
#: ./docs/9.x/validation.md:1237
msgctxt "H4"
msgid "Basic Usage Of Exists Rule"
msgstr ""

#: ./docs/8.x/validation.md:1113
#: ./docs/9.x/validation.md:1239
#: ./docs/10.x/validation.md:1316
#: ./docs/11.x/validation.md:1328
#: ./docs/master/validation.md:1316
msgctxt "CODE"
msgid "'state' => 'exists:states'"
msgstr ""

#: ./docs/8.x/validation.md:1115
#: ./docs/9.x/validation.md:1241
#: ./docs/10.x/validation.md:1318
#: ./docs/11.x/validation.md:1330
#: ./docs/master/validation.md:1318
msgctxt "P"
msgid "If the `column` option is not specified, the field name will be used. So, in this case, the rule will validate that the `states` database table contains a record with a `state` column value matching the request's `state` attribute value."
msgstr ""

#: ./docs/8.x/validation.md:1117
#: ./docs/9.x/validation.md:1243
#: ./docs/10.x/validation.md:1320
#: ./docs/11.x/validation.md:1332
#: ./docs/master/validation.md:1320
#~ msgctxt "P"
#~ msgid "<a name=\"specifying-a-custom-column-name\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1118
#: ./docs/9.x/validation.md:1244
msgctxt "H4"
msgid "Specifying A Custom Column Name"
msgstr ""

#: ./docs/8.x/validation.md:1120
#: ./docs/9.x/validation.md:1246
#: ./docs/10.x/validation.md:1323
#: ./docs/11.x/validation.md:1335
#: ./docs/master/validation.md:1323
msgctxt "P"
msgid "You may explicitly specify the database column name that should be used by the validation rule by placing it after the database table name:"
msgstr ""

#: ./docs/8.x/validation.md:1122
#: ./docs/9.x/validation.md:1248
#: ./docs/10.x/validation.md:1325
#: ./docs/11.x/validation.md:1337
#: ./docs/master/validation.md:1325
msgctxt "CODE"
msgid "'state' => 'exists:states,abbreviation'"
msgstr ""

#: ./docs/8.x/validation.md:1124
#: ./docs/9.x/validation.md:1250
#: ./docs/10.x/validation.md:1327
#: ./docs/11.x/validation.md:1339
#: ./docs/master/validation.md:1327
msgctxt "P"
msgid "Occasionally, you may need to specify a specific database connection to be used for the `exists` query. You can accomplish this by prepending the connection name to the table name:"
msgstr ""

#: ./docs/8.x/validation.md:1126
#: ./docs/9.x/validation.md:1252
#: ./docs/10.x/validation.md:1329
#: ./docs/11.x/validation.md:1341
#: ./docs/master/validation.md:1329
msgctxt "CODE"
msgid "'email' => 'exists:connection.staff,email'"
msgstr ""

#: ./docs/8.x/validation.md:1128
#: ./docs/8.x/validation.md:1467
#: ./docs/9.x/validation.md:1254
#: ./docs/9.x/validation.md:1691
#: ./docs/10.x/validation.md:1331
#: ./docs/10.x/validation.md:1811
#: ./docs/11.x/validation.md:1343
#: ./docs/11.x/validation.md:1833
#: ./docs/master/validation.md:1331
#: ./docs/master/validation.md:1811
msgctxt "P"
msgid "Instead of specifying the table name directly, you may specify the Eloquent model which should be used to determine the table name:"
msgstr ""

#: ./docs/8.x/validation.md:1130
#: ./docs/9.x/validation.md:1256
#: ./docs/10.x/validation.md:1333
#: ./docs/11.x/validation.md:1345
#: ./docs/master/validation.md:1333
msgctxt "CODE"
msgid "'user_id' => 'exists:App\\Models\\User,id'"
msgstr ""

#: ./docs/8.x/validation.md:1132
#: ./docs/9.x/validation.md:1258
#: ./docs/10.x/validation.md:1335
#: ./docs/11.x/validation.md:1347
#: ./docs/master/validation.md:1335
msgctxt "P"
msgid "If you would like to customize the query executed by the validation rule, you may use the `Rule` class to fluently define the rule. In this example, we'll also specify the validation rules as an array instead of using the `|` character to delimit them:"
msgstr ""

#: ./docs/10.x/validation.md:1134
#: ./docs/11.x/validation.md:1146
#: ./docs/master/validation.md:1134
msgctxt "P"
msgid "The field under validation must be `\"no\"`, `\"off\"`, `0`, `\"0\"`, `false`, or `\"false\"`."
msgstr ""

#: ./docs/8.x/validation.md:1134
#: ./docs/9.x/validation.md:1260
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Validator;\n"
"use Illuminate\\Validation\\Rule;\n"
"\n"
"Validator::make($data, [\n"
"    'email' => [\n"
"        'required',\n"
"        Rule::exists('staff')->where(function ($query) {\n"
"            return $query->where('account_id', 1);\n"
"        }),\n"
"    ],\n"
"]);"
msgstr ""

#: ./docs/9.x/validation.md:1138
#: ./docs/10.x/validation.md:1196
#: ./docs/11.x/validation.md:1208
#: ./docs/master/validation.md:1196
#~ msgctxt "P"
#~ msgid "<a name=\"rule-doesnt-start-with\"></a>"
#~ msgstr ""

#: ./docs/10.x/validation.md:1139
#: ./docs/11.x/validation.md:1151
#: ./docs/master/validation.md:1139
msgctxt "P"
msgid "The field under validation must be `\"no\"`, `\"off\"`, `0`, `\"0\"`, `false`, or `\"false\"` if another field under validation is equal to a specified value."
msgstr ""

#: ./docs/9.x/validation.md:1139
#: ./docs/10.x/validation.md:1197
#: ./docs/11.x/validation.md:1209
#: ./docs/master/validation.md:1197
msgctxt "H4"
msgid "doesnt_start_with:*foo*,*bar*,..."
msgstr ""

#: ./docs/9.x/validation.md:1141
#: ./docs/10.x/validation.md:1199
#: ./docs/11.x/validation.md:1211
#: ./docs/master/validation.md:1199
msgctxt "P"
msgid "The field under validation must not start with one of the given values."
msgstr ""

#: ./docs/9.x/validation.md:1143
#: ./docs/10.x/validation.md:1201
#: ./docs/11.x/validation.md:1213
#: ./docs/master/validation.md:1201
#~ msgctxt "P"
#~ msgid "<a name=\"rule-doesnt-end-with\"></a>"
#~ msgstr ""

#: ./docs/9.x/validation.md:1144
#: ./docs/10.x/validation.md:1202
#: ./docs/11.x/validation.md:1214
#: ./docs/master/validation.md:1202
msgctxt "H4"
msgid "doesnt_end_with:*foo*,*bar*,..."
msgstr ""

#: ./docs/8.x/validation.md:1146
#: ./docs/9.x/validation.md:1276
#: ./docs/10.x/validation.md:1364
#: ./docs/11.x/validation.md:1376
#: ./docs/master/validation.md:1364
#~ msgctxt "P"
#~ msgid "<a name=\"rule-file\"></a>"
#~ msgstr ""

#: ./docs/9.x/validation.md:1146
#: ./docs/10.x/validation.md:1204
#: ./docs/11.x/validation.md:1216
#: ./docs/master/validation.md:1204
msgctxt "P"
msgid "The field under validation must not end with one of the given values."
msgstr ""

#: ./docs/8.x/validation.md:1147
#: ./docs/9.x/validation.md:1277
#: ./docs/10.x/validation.md:1365
#: ./docs/11.x/validation.md:1377
#: ./docs/master/validation.md:1365
msgctxt "H4"
msgid "file"
msgstr ""

#: ./docs/8.x/validation.md:1149
#: ./docs/9.x/validation.md:1279
#: ./docs/10.x/validation.md:1367
#: ./docs/11.x/validation.md:1379
#: ./docs/master/validation.md:1367
msgctxt "P"
msgid "The field under validation must be a successfully uploaded file."
msgstr ""

#: ./docs/8.x/validation.md:1151
#: ./docs/9.x/validation.md:1281
#: ./docs/10.x/validation.md:1369
#: ./docs/11.x/validation.md:1381
#: ./docs/master/validation.md:1369
#~ msgctxt "P"
#~ msgid "<a name=\"rule-filled\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1152
#: ./docs/9.x/validation.md:1282
#: ./docs/10.x/validation.md:1370
#: ./docs/11.x/validation.md:1382
#: ./docs/master/validation.md:1370
msgctxt "H4"
msgid "filled"
msgstr ""

#: ./docs/8.x/validation.md:1154
#: ./docs/9.x/validation.md:1284
#: ./docs/10.x/validation.md:1372
#: ./docs/11.x/validation.md:1384
#: ./docs/master/validation.md:1372
msgctxt "P"
msgid "The field under validation must not be empty when it is present."
msgstr ""

#: ./docs/8.x/validation.md:1156
#: ./docs/9.x/validation.md:1286
#: ./docs/10.x/validation.md:1374
#: ./docs/11.x/validation.md:1386
#: ./docs/master/validation.md:1374
#~ msgctxt "P"
#~ msgid "<a name=\"rule-gt\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1157
#: ./docs/9.x/validation.md:1287
#: ./docs/10.x/validation.md:1375
#: ./docs/11.x/validation.md:1387
#: ./docs/master/validation.md:1375
msgctxt "H4"
msgid "gt:*field*"
msgstr ""

#: ./docs/8.x/validation.md:1159
#: ./docs/9.x/validation.md:1289
msgctxt "P"
msgid "The field under validation must be greater than the given *field*. The two fields must be of the same type. Strings, numerics, arrays, and files are evaluated using the same conventions as the [`size`](#rule-size) rule."
msgstr ""

#: ./docs/8.x/validation.md:1161
#: ./docs/9.x/validation.md:1291
#: ./docs/10.x/validation.md:1379
#: ./docs/11.x/validation.md:1391
#: ./docs/master/validation.md:1379
#~ msgctxt "P"
#~ msgid "<a name=\"rule-gte\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1162
#: ./docs/9.x/validation.md:1292
#: ./docs/10.x/validation.md:1380
#: ./docs/11.x/validation.md:1392
#: ./docs/master/validation.md:1380
msgctxt "H4"
msgid "gte:*field*"
msgstr ""

#: ./docs/8.x/validation.md:1164
#: ./docs/9.x/validation.md:1294
msgctxt "P"
msgid "The field under validation must be greater than or equal to the given *field*. The two fields must be of the same type. Strings, numerics, arrays, and files are evaluated using the same conventions as the [`size`](#rule-size) rule."
msgstr ""

#: ./docs/9.x/validation.md:1164
#: ./docs/10.x/validation.md:1222
#: ./docs/11.x/validation.md:1234
#: ./docs/master/validation.md:1222
msgctxt "P"
msgid "`filter_unicode`: `FilterEmailValidation::unicode()`"
msgstr ""

#: ./docs/8.x/validation.md:1166
#: ./docs/9.x/validation.md:1296
#: ./docs/10.x/validation.md:1389
#: ./docs/11.x/validation.md:1401
#: ./docs/master/validation.md:1389
#~ msgctxt "P"
#~ msgid "<a name=\"rule-image\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1167
#: ./docs/9.x/validation.md:1297
#: ./docs/10.x/validation.md:1390
#: ./docs/11.x/validation.md:1402
#: ./docs/master/validation.md:1390
msgctxt "H4"
msgid "image"
msgstr ""

#: ./docs/8.x/validation.md:1169
#: ./docs/9.x/validation.md:1299
#: ./docs/10.x/validation.md:1392
#: ./docs/11.x/validation.md:1404
#: ./docs/master/validation.md:1392
msgctxt "P"
msgid "The file under validation must be an image (jpg, jpeg, png, bmp, gif, svg, or webp)."
msgstr ""

#: ./docs/8.x/validation.md:1171
#: ./docs/9.x/validation.md:1301
#: ./docs/10.x/validation.md:1394
#: ./docs/11.x/validation.md:1406
#: ./docs/master/validation.md:1394
#~ msgctxt "P"
#~ msgid "<a name=\"rule-in\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1172
#: ./docs/9.x/validation.md:1302
#: ./docs/10.x/validation.md:1395
#: ./docs/11.x/validation.md:1407
#: ./docs/master/validation.md:1395
msgctxt "H4"
msgid "in:*foo*,*bar*,..."
msgstr ""

#: ./docs/8.x/validation.md:1174
#: ./docs/9.x/validation.md:1304
#: ./docs/10.x/validation.md:1397
#: ./docs/11.x/validation.md:1409
#: ./docs/master/validation.md:1397
msgctxt "P"
msgid "The field under validation must be included in the given list of values. Since this rule often requires you to `implode` an array, the `Rule::in` method may be used to fluently construct the rule:"
msgstr ""

#: ./docs/8.x/validation.md:1176
#: ./docs/9.x/validation.md:1306
#: ./docs/10.x/validation.md:1399
#: ./docs/11.x/validation.md:1411
#: ./docs/master/validation.md:1399
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Validator;\n"
"use Illuminate\\Validation\\Rule;\n"
"\n"
"Validator::make($data, [\n"
"    'zones' => [\n"
"        'required',\n"
"        Rule::in(['first-zone', 'second-zone']),\n"
"    ],\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:1186
#: ./docs/9.x/validation.md:1316
#: ./docs/10.x/validation.md:1409
#: ./docs/11.x/validation.md:1421
#: ./docs/master/validation.md:1409
msgctxt "P"
msgid "When the `in` rule is combined with the `array` rule, each value in the input array must be present within the list of values provided to the `in` rule. In the following example, the `LAS` airport code in the input array is invalid since it is not contained in the list of airports provided to the `in` rule:"
msgstr ""

#: ./docs/8.x/validation.md:1188
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Validator;\n"
"use Illuminate\\Validation\\Rule;\n"
"\n"
"$input = [\n"
"    'airports' => ['NYC', 'LAS'],\n"
"];\n"
"\n"
"Validator::make($input, [\n"
"    'airports' => [\n"
"        'required',\n"
"        'array',\n"
"        Rule::in(['NYC', 'LIT']),\n"
"    ],\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:1203
#: ./docs/9.x/validation.md:1333
#: ./docs/10.x/validation.md:1426
#: ./docs/11.x/validation.md:1438
#: ./docs/master/validation.md:1426
#~ msgctxt "P"
#~ msgid "<a name=\"rule-in-array\"></a>"
#~ msgstr ""

#: ./docs/9.x/validation.md:1203
#: ./docs/10.x/validation.md:1280
#: ./docs/11.x/validation.md:1292
#: ./docs/master/validation.md:1280
msgctxt "P"
msgid "If complex conditional exclusion logic is required, you may utilize the `Rule::excludeIf` method. This method accepts a boolean or a closure. When given a closure, the closure should return `true` or `false` to indicate if the field under validation should be excluded:"
msgstr ""

#: ./docs/8.x/validation.md:1204
#: ./docs/9.x/validation.md:1334
#: ./docs/10.x/validation.md:1427
#: ./docs/11.x/validation.md:1439
#: ./docs/master/validation.md:1427
msgctxt "H4"
msgid "in_array:*anotherfield*.*"
msgstr ""

#: ./docs/9.x/validation.md:1205
#: ./docs/10.x/validation.md:1282
#: ./docs/11.x/validation.md:1294
#: ./docs/master/validation.md:1282
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Validator;\n"
"use Illuminate\\Validation\\Rule;\n"
"\n"
"Validator::make($request->all(), [\n"
"    'role_id' => Rule::excludeIf($request->user()->is_admin),\n"
"]);\n"
"\n"
"Validator::make($request->all(), [\n"
"    'role_id' => Rule::excludeIf(fn () => $request->user()->is_admin),\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:1206
#: ./docs/9.x/validation.md:1336
#: ./docs/10.x/validation.md:1429
#: ./docs/11.x/validation.md:1441
#: ./docs/master/validation.md:1429
msgctxt "P"
msgid "The field under validation must exist in *anotherfield*'s values."
msgstr ""

#: ./docs/8.x/validation.md:1208
#: ./docs/9.x/validation.md:1338
#: ./docs/10.x/validation.md:1431
#: ./docs/11.x/validation.md:1443
#: ./docs/master/validation.md:1431
#~ msgctxt "P"
#~ msgid "<a name=\"rule-integer\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1209
#: ./docs/9.x/validation.md:1339
#: ./docs/10.x/validation.md:1432
#: ./docs/11.x/validation.md:1444
#: ./docs/master/validation.md:1432
msgctxt "H4"
msgid "integer"
msgstr ""

#: ./docs/8.x/validation.md:1211
#: ./docs/9.x/validation.md:1341
#: ./docs/10.x/validation.md:1434
#: ./docs/11.x/validation.md:1446
#: ./docs/master/validation.md:1434
msgctxt "P"
msgid "The field under validation must be an integer."
msgstr ""

#: ./docs/8.x/validation.md:1213
#: ./docs/9.x/validation.md:1344
#: ./docs/10.x/validation.md:1437
#: ./docs/11.x/validation.md:1449
#: ./docs/master/validation.md:1437
msgctxt "P"
msgid "This validation rule does not verify that the input is of the \"integer\" variable type, only that the input is of a type accepted by PHP's `FILTER_VALIDATE_INT` rule. If you need to validate the input as being a number please use this rule in combination with [the `numeric` validation rule](#rule-numeric)."
msgstr ""

#: ./docs/8.x/validation.md:1215
#: ./docs/9.x/validation.md:1346
#: ./docs/10.x/validation.md:1439
#: ./docs/11.x/validation.md:1451
#: ./docs/master/validation.md:1439
#~ msgctxt "P"
#~ msgid "<a name=\"rule-ip\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1216
#: ./docs/9.x/validation.md:1347
#: ./docs/10.x/validation.md:1440
#: ./docs/11.x/validation.md:1452
#: ./docs/master/validation.md:1440
msgctxt "H4"
msgid "ip"
msgstr ""

#: ./docs/8.x/validation.md:1218
#: ./docs/9.x/validation.md:1349
#: ./docs/10.x/validation.md:1442
#: ./docs/11.x/validation.md:1454
#: ./docs/master/validation.md:1442
msgctxt "P"
msgid "The field under validation must be an IP address."
msgstr ""

#: ./docs/8.x/validation.md:1220
#: ./docs/9.x/validation.md:1351
#: ./docs/10.x/validation.md:1444
#: ./docs/11.x/validation.md:1456
#: ./docs/master/validation.md:1444
#~ msgctxt "P"
#~ msgid "<a name=\"ipv4\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1221
#: ./docs/9.x/validation.md:1352
#: ./docs/10.x/validation.md:1445
#: ./docs/11.x/validation.md:1457
#: ./docs/master/validation.md:1445
msgctxt "H4"
msgid "ipv4"
msgstr ""

#: ./docs/9.x/validation.md:1221
#: ./docs/10.x/validation.md:1298
#: ./docs/11.x/validation.md:1310
#: ./docs/master/validation.md:1298
#~ msgctxt "P"
#~ msgid "<a name=\"rule-exclude-with\"></a>"
#~ msgstr ""

#: ./docs/9.x/validation.md:1222
#: ./docs/10.x/validation.md:1299
#: ./docs/11.x/validation.md:1311
#: ./docs/master/validation.md:1299
msgctxt "H4"
msgid "exclude_with:*anotherfield*"
msgstr ""

#: ./docs/8.x/validation.md:1223
#: ./docs/9.x/validation.md:1354
#: ./docs/10.x/validation.md:1447
#: ./docs/11.x/validation.md:1459
#: ./docs/master/validation.md:1447
msgctxt "P"
msgid "The field under validation must be an IPv4 address."
msgstr ""

#: ./docs/9.x/validation.md:1224
#: ./docs/10.x/validation.md:1301
#: ./docs/11.x/validation.md:1313
#: ./docs/master/validation.md:1301
msgctxt "P"
msgid "The field under validation will be excluded from the request data returned by the `validate` and `validated` methods if the *anotherfield* field is present."
msgstr ""

#: ./docs/8.x/validation.md:1225
#: ./docs/9.x/validation.md:1356
#: ./docs/10.x/validation.md:1449
#: ./docs/11.x/validation.md:1461
#: ./docs/master/validation.md:1449
#~ msgctxt "P"
#~ msgid "<a name=\"ipv6\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1226
#: ./docs/9.x/validation.md:1357
#: ./docs/10.x/validation.md:1450
#: ./docs/11.x/validation.md:1462
#: ./docs/master/validation.md:1450
msgctxt "H4"
msgid "ipv6"
msgstr ""

#: ./docs/8.x/validation.md:1228
#: ./docs/9.x/validation.md:1359
#: ./docs/10.x/validation.md:1452
#: ./docs/11.x/validation.md:1464
#: ./docs/master/validation.md:1452
msgctxt "P"
msgid "The field under validation must be an IPv6 address."
msgstr ""

#: ./docs/8.x/validation.md:1230
#: ./docs/9.x/validation.md:1381
#: ./docs/10.x/validation.md:1474
#: ./docs/11.x/validation.md:1491
#: ./docs/master/validation.md:1474
#~ msgctxt "P"
#~ msgid "<a name=\"rule-mac\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1231
#: ./docs/9.x/validation.md:1382
#: ./docs/10.x/validation.md:1475
#: ./docs/11.x/validation.md:1492
#: ./docs/master/validation.md:1475
msgctxt "H4"
msgid "mac_address"
msgstr ""

#: ./docs/8.x/validation.md:1233
#: ./docs/9.x/validation.md:1384
#: ./docs/10.x/validation.md:1477
#: ./docs/11.x/validation.md:1494
#: ./docs/master/validation.md:1477
msgctxt "P"
msgid "The field under validation must be a MAC address."
msgstr ""

#: ./docs/8.x/validation.md:1235
#: ./docs/9.x/validation.md:1361
#: ./docs/10.x/validation.md:1454
#: ./docs/11.x/validation.md:1466
#: ./docs/master/validation.md:1454
#~ msgctxt "P"
#~ msgid "<a name=\"rule-json\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1236
#: ./docs/9.x/validation.md:1362
#: ./docs/10.x/validation.md:1455
#: ./docs/11.x/validation.md:1467
#: ./docs/master/validation.md:1455
msgctxt "H4"
msgid "json"
msgstr ""

#: ./docs/8.x/validation.md:1238
#: ./docs/9.x/validation.md:1364
#: ./docs/10.x/validation.md:1457
#: ./docs/11.x/validation.md:1469
#: ./docs/master/validation.md:1457
msgctxt "P"
msgid "The field under validation must be a valid JSON string."
msgstr ""

#: ./docs/10.x/validation.md:1239
#: ./docs/11.x/validation.md:1251
#: ./docs/master/validation.md:1239
msgctxt "P"
msgid "The `Enum` rule is a class based rule that validates whether the field under validation contains a valid enum value. The `Enum` rule accepts the name of the enum as its only constructor argument. When validating primitive values, a backed Enum should be provided to the `Enum` rule:"
msgstr ""

#: ./docs/8.x/validation.md:1240
#: ./docs/9.x/validation.md:1366
#: ./docs/10.x/validation.md:1459
#: ./docs/11.x/validation.md:1471
#: ./docs/master/validation.md:1459
#~ msgctxt "P"
#~ msgid "<a name=\"rule-lt\"></a>"
#~ msgstr ""

#: ./docs/10.x/validation.md:1241
#: ./docs/11.x/validation.md:1253
#: ./docs/master/validation.md:1241
msgctxt "CODE"
msgid ""
"use App\\Enums\\ServerStatus;\n"
"use Illuminate\\Validation\\Rule;\n"
"\n"
"$request->validate([\n"
"    'status' => [Rule::enum(ServerStatus::class)],\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:1241
#: ./docs/9.x/validation.md:1367
#: ./docs/10.x/validation.md:1460
#: ./docs/11.x/validation.md:1472
#: ./docs/master/validation.md:1460
msgctxt "H4"
msgid "lt:*field*"
msgstr ""

#: ./docs/8.x/validation.md:1243
#: ./docs/9.x/validation.md:1369
#: ./docs/10.x/validation.md:1462
#: ./docs/11.x/validation.md:1474
#: ./docs/master/validation.md:1462
msgctxt "P"
msgid "The field under validation must be less than the given *field*. The two fields must be of the same type. Strings, numerics, arrays, and files are evaluated using the same conventions as the [`size`](#rule-size) rule."
msgstr ""

#: ./docs/8.x/validation.md:1245
#: ./docs/9.x/validation.md:1371
#: ./docs/10.x/validation.md:1464
#: ./docs/11.x/validation.md:1476
#: ./docs/master/validation.md:1464
#~ msgctxt "P"
#~ msgid "<a name=\"rule-lte\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1246
#: ./docs/9.x/validation.md:1372
#: ./docs/10.x/validation.md:1465
#: ./docs/11.x/validation.md:1477
#: ./docs/master/validation.md:1465
msgctxt "H4"
msgid "lte:*field*"
msgstr ""

#: ./docs/10.x/validation.md:1248
#: ./docs/11.x/validation.md:1260
#: ./docs/master/validation.md:1248
msgctxt "P"
msgid "The `Enum` rule's `only` and `except` methods may be used to limit which enum cases should be considered valid:"
msgstr ""

#: ./docs/8.x/validation.md:1248
#: ./docs/9.x/validation.md:1374
#: ./docs/10.x/validation.md:1467
#: ./docs/11.x/validation.md:1479
#: ./docs/master/validation.md:1467
msgctxt "P"
msgid "The field under validation must be less than or equal to the given *field*. The two fields must be of the same type. Strings, numerics, arrays, and files are evaluated using the same conventions as the [`size`](#rule-size) rule."
msgstr ""

#: ./docs/10.x/validation.md:1250
#: ./docs/11.x/validation.md:1262
#: ./docs/master/validation.md:1250
msgctxt "CODE"
msgid ""
"Rule::enum(ServerStatus::class)\n"
"    ->only([ServerStatus::Pending, ServerStatus::Active]);\n"
"\n"
"Rule::enum(ServerStatus::class)\n"
"    ->except([ServerStatus::Pending, ServerStatus::Active]);"
msgstr ""

#: ./docs/8.x/validation.md:1250
#: ./docs/9.x/validation.md:1386
#: ./docs/10.x/validation.md:1479
#: ./docs/11.x/validation.md:1496
#: ./docs/master/validation.md:1479
#~ msgctxt "P"
#~ msgid "<a name=\"rule-max\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1251
#: ./docs/9.x/validation.md:1387
#: ./docs/10.x/validation.md:1480
#: ./docs/11.x/validation.md:1497
#: ./docs/master/validation.md:1480
msgctxt "H4"
msgid "max:*value*"
msgstr ""

#: ./docs/8.x/validation.md:1253
#: ./docs/9.x/validation.md:1389
#: ./docs/10.x/validation.md:1482
#: ./docs/11.x/validation.md:1499
#: ./docs/master/validation.md:1482
msgctxt "P"
msgid "The field under validation must be less than or equal to a maximum *value*. Strings, numerics, arrays, and files are evaluated in the same fashion as the [`size`](#rule-size) rule."
msgstr ""

#: ./docs/8.x/validation.md:1255
#: ./docs/9.x/validation.md:1396
#: ./docs/10.x/validation.md:1489
#: ./docs/11.x/validation.md:1506
#: ./docs/master/validation.md:1489
#~ msgctxt "P"
#~ msgid "<a name=\"rule-mimetypes\"></a>"
#~ msgstr ""

#: ./docs/10.x/validation.md:1256
#: ./docs/11.x/validation.md:1268
#: ./docs/master/validation.md:1256
msgctxt "P"
msgid "The `when` method may be used to conditionally modify the `Enum` rule:"
msgstr ""

#: ./docs/8.x/validation.md:1256
#: ./docs/9.x/validation.md:1397
#: ./docs/10.x/validation.md:1490
#: ./docs/11.x/validation.md:1507
#: ./docs/master/validation.md:1490
msgctxt "H4"
msgid "mimetypes:*text/plain*,..."
msgstr ""

#: ./docs/10.x/validation.md:1258
#: ./docs/11.x/validation.md:1270
#: ./docs/master/validation.md:1258
msgctxt "CODE: php"
msgid ""
"use Illuminate\\Support\\Facades\\Auth;\n"
"use Illuminate\\Validation\\Rule;\n"
"\n"
"Rule::enum(ServerStatus::class)\n"
"    ->when(\n"
"        Auth::user()->isAdmin(),\n"
"        fn ($rule) => $rule->only(...),\n"
"        fn ($rule) => $rule->only(...),\n"
"    );"
msgstr ""

#: ./docs/8.x/validation.md:1258
#: ./docs/9.x/validation.md:1399
#: ./docs/10.x/validation.md:1492
#: ./docs/11.x/validation.md:1509
#: ./docs/master/validation.md:1492
msgctxt "P"
msgid "The file under validation must match one of the given MIME types:"
msgstr ""

#: ./docs/8.x/validation.md:1260
#: ./docs/9.x/validation.md:1401
#: ./docs/10.x/validation.md:1494
#: ./docs/11.x/validation.md:1511
#: ./docs/master/validation.md:1494
msgctxt "CODE"
msgid "'video' => 'mimetypes:video/avi,video/mpeg,video/quicktime'"
msgstr ""

#: ./docs/8.x/validation.md:1262
#: ./docs/9.x/validation.md:1403
#: ./docs/10.x/validation.md:1496
#: ./docs/11.x/validation.md:1513
#: ./docs/master/validation.md:1496
msgctxt "P"
msgid "To determine the MIME type of the uploaded file, the file's contents will be read and the framework will attempt to guess the MIME type, which may be different from the client's provided MIME type."
msgstr ""

#: ./docs/8.x/validation.md:1264
#: ./docs/9.x/validation.md:1405
#: ./docs/10.x/validation.md:1498
#: ./docs/11.x/validation.md:1515
#: ./docs/master/validation.md:1498
#~ msgctxt "P"
#~ msgid "<a name=\"rule-mimes\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1265
#: ./docs/9.x/validation.md:1406
#: ./docs/10.x/validation.md:1499
#: ./docs/11.x/validation.md:1516
#: ./docs/master/validation.md:1499
msgctxt "H4"
msgid "mimes:*foo*,*bar*,..."
msgstr ""

#: ./docs/8.x/validation.md:1267
#: ./docs/9.x/validation.md:1408
msgctxt "P"
msgid "The file under validation must have a MIME type corresponding to one of the listed extensions."
msgstr ""

#: ./docs/8.x/validation.md:1269
#: ./docs/9.x/validation.md:1410
#~ msgctxt "P"
#~ msgid "<a name=\"basic-usage-of-mime-rule\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1270
#: ./docs/9.x/validation.md:1411
msgctxt "H4"
msgid "Basic Usage Of MIME Rule"
msgstr ""

#: ./docs/8.x/validation.md:1272
#: ./docs/9.x/validation.md:1413
#: ./docs/10.x/validation.md:1503
#: ./docs/11.x/validation.md:1520
#: ./docs/master/validation.md:1503
msgctxt "CODE"
msgid "'photo' => 'mimes:jpg,bmp,png'"
msgstr ""

#: ./docs/9.x/validation.md:1272
#: ./docs/10.x/validation.md:1350
#: ./docs/11.x/validation.md:1362
#: ./docs/master/validation.md:1350
msgctxt "P"
msgid "You may explicitly specify the database column name that should be used by the `exists` rule generated by the `Rule::exists` method by providing the column name as the second argument to the `exists` method:"
msgstr ""

#: ./docs/8.x/validation.md:1274
#: ./docs/9.x/validation.md:1415
#: ./docs/10.x/validation.md:1505
#: ./docs/11.x/validation.md:1522
#: ./docs/master/validation.md:1505
msgctxt "P"
msgid "Even though you only need to specify the extensions, this rule actually validates the MIME type of the file by reading the file's contents and guessing its MIME type. A full listing of MIME types and their corresponding extensions may be found at the following location:"
msgstr ""

#: ./docs/9.x/validation.md:1274
#: ./docs/10.x/validation.md:1352
#: ./docs/11.x/validation.md:1364
#: ./docs/master/validation.md:1352
msgctxt "CODE"
msgid "'state' => Rule::exists('states', 'abbreviation'),"
msgstr ""

#: ./docs/8.x/validation.md:1276
#: ./docs/9.x/validation.md:1417
#: ./docs/9.x/validation.md:1988
#: ./docs/10.x/validation.md:1507
#: ./docs/10.x/validation.md:2134
#: ./docs/11.x/validation.md:1524
#: ./docs/11.x/validation.md:2156
#: ./docs/master/validation.md:1507
#: ./docs/master/validation.md:2140
msgctxt "P"
msgid "[https://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types](https://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types)"
msgstr ""

#: ./docs/8.x/validation.md:1278
#: ./docs/9.x/validation.md:1419
#: ./docs/10.x/validation.md:1514
#: ./docs/11.x/validation.md:1531
#: ./docs/master/validation.md:1514
#~ msgctxt "P"
#~ msgid "<a name=\"rule-min\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1279
#: ./docs/9.x/validation.md:1420
#: ./docs/10.x/validation.md:1515
#: ./docs/11.x/validation.md:1532
#: ./docs/master/validation.md:1515
msgctxt "H4"
msgid "min:*value*"
msgstr ""

#: ./docs/8.x/validation.md:1281
#: ./docs/9.x/validation.md:1422
#: ./docs/10.x/validation.md:1517
#: ./docs/11.x/validation.md:1534
#: ./docs/master/validation.md:1517
msgctxt "P"
msgid "The field under validation must have a minimum *value*. Strings, numerics, arrays, and files are evaluated in the same fashion as the [`size`](#rule-size) rule."
msgstr ""

#: ./docs/8.x/validation.md:1283
#~ msgctxt "P"
#~ msgid "<a name=\"multiple-of\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1284
#: ./docs/9.x/validation.md:1430
#: ./docs/10.x/validation.md:1525
#: ./docs/11.x/validation.md:1542
#: ./docs/master/validation.md:1525
msgctxt "H4"
msgid "multiple_of:*value*"
msgstr ""

#: ./docs/8.x/validation.md:1286
#: ./docs/9.x/validation.md:1432
#: ./docs/10.x/validation.md:1527
#: ./docs/11.x/validation.md:1544
#: ./docs/master/validation.md:1527
msgctxt "P"
msgid "The field under validation must be a multiple of *value*."
msgstr ""

#: ./docs/8.x/validation.md:1288
msgctxt "P"
msgid "The [`bcmath` PHP extension](https://www.php.net/manual/en/book.bc.php) is required in order to use the `multiple_of` rule."
msgstr ""

#: ./docs/8.x/validation.md:1290
#: ./docs/9.x/validation.md:1459
#: ./docs/10.x/validation.md:1554
#: ./docs/11.x/validation.md:1571
#: ./docs/master/validation.md:1554
#~ msgctxt "P"
#~ msgid "<a name=\"rule-not-in\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1291
#: ./docs/9.x/validation.md:1460
#: ./docs/10.x/validation.md:1555
#: ./docs/11.x/validation.md:1572
#: ./docs/master/validation.md:1555
msgctxt "H4"
msgid "not_in:*foo*,*bar*,..."
msgstr ""

#: ./docs/8.x/validation.md:1293
#: ./docs/9.x/validation.md:1462
#: ./docs/10.x/validation.md:1557
#: ./docs/11.x/validation.md:1574
#: ./docs/master/validation.md:1557
msgctxt "P"
msgid "The field under validation must not be included in the given list of values. The `Rule::notIn` method may be used to fluently construct the rule:"
msgstr ""

#: ./docs/8.x/validation.md:1295
#: ./docs/9.x/validation.md:1464
#: ./docs/10.x/validation.md:1559
#: ./docs/11.x/validation.md:1576
#: ./docs/master/validation.md:1559
msgctxt "CODE"
msgid ""
"use Illuminate\\Validation\\Rule;\n"
"\n"
"Validator::make($data, [\n"
"    'toppings' => [\n"
"        'required',\n"
"        Rule::notIn(['sprinkles', 'cherries']),\n"
"    ],\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:1304
#: ./docs/9.x/validation.md:1473
#: ./docs/10.x/validation.md:1568
#: ./docs/11.x/validation.md:1585
#: ./docs/master/validation.md:1568
#~ msgctxt "P"
#~ msgid "<a name=\"rule-not-regex\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1305
#: ./docs/9.x/validation.md:1474
#: ./docs/10.x/validation.md:1569
#: ./docs/11.x/validation.md:1586
#: ./docs/master/validation.md:1569
msgctxt "H4"
msgid "not_regex:*pattern*"
msgstr ""

#: ./docs/8.x/validation.md:1307
#: ./docs/9.x/validation.md:1476
#: ./docs/10.x/validation.md:1571
#: ./docs/11.x/validation.md:1588
#: ./docs/master/validation.md:1571
msgctxt "P"
msgid "The field under validation must not match the given regular expression."
msgstr ""

#: ./docs/8.x/validation.md:1309
#: ./docs/9.x/validation.md:1478
#: ./docs/10.x/validation.md:1573
#: ./docs/11.x/validation.md:1590
#: ./docs/master/validation.md:1573
msgctxt "P"
msgid "Internally, this rule uses the PHP `preg_match` function. The pattern specified should obey the same formatting required by `preg_match` and thus also include valid delimiters. For example: `'email' => 'not_regex:/^.+$/i'`."
msgstr ""

#: ./docs/8.x/validation.md:1311
#: ./docs/9.x/validation.md:1481
#: ./docs/10.x/validation.md:1576
#: ./docs/11.x/validation.md:1593
#: ./docs/master/validation.md:1576
msgctxt "P"
msgid "When using the `regex` / `not_regex` patterns, it may be necessary to specify your validation rules using an array instead of using `|` delimiters, especially if the regular expression contains a `|` character."
msgstr ""

#: ./docs/8.x/validation.md:1313
#: ./docs/9.x/validation.md:1483
#: ./docs/10.x/validation.md:1578
#: ./docs/11.x/validation.md:1595
#: ./docs/master/validation.md:1578
#~ msgctxt "P"
#~ msgid "<a name=\"rule-nullable\"></a>"
#~ msgstr ""

#: ./docs/10.x/validation.md:1314
#: ./docs/11.x/validation.md:1326
#: ./docs/master/validation.md:1314
msgctxt "H4"
msgid "Basic Usage of Exists Rule"
msgstr ""

#: ./docs/8.x/validation.md:1314
#: ./docs/9.x/validation.md:1484
#: ./docs/10.x/validation.md:1579
#: ./docs/11.x/validation.md:1596
#: ./docs/master/validation.md:1579
msgctxt "H4"
msgid "nullable"
msgstr ""

#: ./docs/8.x/validation.md:1316
#: ./docs/9.x/validation.md:1486
#: ./docs/10.x/validation.md:1581
#: ./docs/11.x/validation.md:1598
#: ./docs/master/validation.md:1581
msgctxt "P"
msgid "The field under validation may be `null`."
msgstr ""

#: ./docs/8.x/validation.md:1318
#: ./docs/9.x/validation.md:1488
#: ./docs/10.x/validation.md:1583
#: ./docs/11.x/validation.md:1600
#: ./docs/master/validation.md:1583
#~ msgctxt "P"
#~ msgid "<a name=\"rule-numeric\"></a>"
#~ msgstr ""

#: ./docs/9.x/validation.md:1318
#: ./docs/10.x/validation.md:1411
#: ./docs/11.x/validation.md:1423
#: ./docs/master/validation.md:1411
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Validator;\n"
"use Illuminate\\Validation\\Rule;\n"
"\n"
"$input = [\n"
"    'airports' => ['NYC', 'LAS'],\n"
"];\n"
"\n"
"Validator::make($input, [\n"
"    'airports' => [\n"
"        'required',\n"
"        'array',\n"
"    ],\n"
"    'airports.*' => Rule::in(['NYC', 'LIT']),\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:1319
#: ./docs/9.x/validation.md:1489
#: ./docs/10.x/validation.md:1584
#: ./docs/11.x/validation.md:1601
#: ./docs/master/validation.md:1584
msgctxt "H4"
msgid "numeric"
msgstr ""

#: ./docs/10.x/validation.md:1321
#: ./docs/11.x/validation.md:1333
#: ./docs/master/validation.md:1321
msgctxt "H4"
msgid "Specifying a Custom Column Name"
msgstr ""

#: ./docs/8.x/validation.md:1321
#: ./docs/9.x/validation.md:1491
#: ./docs/10.x/validation.md:1586
#: ./docs/11.x/validation.md:1603
#: ./docs/master/validation.md:1586
msgctxt "P"
msgid "The field under validation must be [numeric](https://www.php.net/manual/en/function.is-numeric.php)."
msgstr ""

#: ./docs/8.x/validation.md:1323
#: ./docs/9.x/validation.md:1493
#~ msgctxt "P"
#~ msgid "<a name=\"rule-password\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1324
#: ./docs/9.x/validation.md:1494
msgctxt "H4"
msgid "password"
msgstr ""

#: ./docs/8.x/validation.md:1326
#: ./docs/9.x/validation.md:1496
msgctxt "P"
msgid "The field under validation must match the authenticated user's password."
msgstr ""

#: ./docs/8.x/validation.md:1328
#: ./docs/9.x/validation.md:1499
msgctxt "P"
msgid "This rule was renamed to `current_password` with the intention of removing it in Laravel 9. Please use the [Current Password](#rule-current-password) rule instead."
msgstr ""

#: ./docs/8.x/validation.md:1330
#: ./docs/9.x/validation.md:1501
#: ./docs/10.x/validation.md:1588
#: ./docs/11.x/validation.md:1605
#: ./docs/master/validation.md:1588
#~ msgctxt "P"
#~ msgid "<a name=\"rule-present\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1331
#: ./docs/9.x/validation.md:1502
#: ./docs/10.x/validation.md:1589
#: ./docs/11.x/validation.md:1606
#: ./docs/master/validation.md:1589
msgctxt "H4"
msgid "present"
msgstr ""

#: ./docs/8.x/validation.md:1333
msgctxt "P"
msgid "The field under validation must be present in the input data but can be empty."
msgstr ""

#: ./docs/8.x/validation.md:1335
#: ./docs/9.x/validation.md:1506
#: ./docs/10.x/validation.md:1613
#: ./docs/11.x/validation.md:1630
#: ./docs/master/validation.md:1613
#~ msgctxt "P"
#~ msgid "<a name=\"rule-prohibited\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1336
#: ./docs/9.x/validation.md:1507
#: ./docs/10.x/validation.md:1614
#: ./docs/11.x/validation.md:1631
#: ./docs/master/validation.md:1614
msgctxt "H4"
msgid "prohibited"
msgstr ""

#: ./docs/10.x/validation.md:1337
#: ./docs/master/validation.md:1337
msgctxt "CODE"
msgid ""
"use Illuminate\\Database\\Query\\Builder;\n"
"use Illuminate\\Support\\Facades\\Validator;\n"
"use Illuminate\\Validation\\Rule;\n"
"\n"
"Validator::make($data, [\n"
"    'email' => [\n"
"        'required',\n"
"        Rule::exists('staff')->where(function (Builder $query) {\n"
"            return $query->where('account_id', 1);\n"
"        }),\n"
"    ],\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:1338
msgctxt "P"
msgid "The field under validation must be empty or not present."
msgstr ""

#: ./docs/8.x/validation.md:1340
#: ./docs/9.x/validation.md:1520
#: ./docs/10.x/validation.md:1627
#: ./docs/11.x/validation.md:1644
#: ./docs/master/validation.md:1627
#~ msgctxt "P"
#~ msgid "<a name=\"rule-prohibited-if\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1341
#: ./docs/9.x/validation.md:1521
#: ./docs/10.x/validation.md:1628
#: ./docs/11.x/validation.md:1645
#: ./docs/master/validation.md:1628
msgctxt "H4"
msgid "prohibited_if:*anotherfield*,*value*,..."
msgstr ""

#: ./docs/8.x/validation.md:1343
msgctxt "P"
msgid "The field under validation must be empty or not present if the *anotherfield* field is equal to any *value*."
msgstr ""

#: ./docs/8.x/validation.md:1345
#: ./docs/9.x/validation.md:1547
#: ./docs/10.x/validation.md:1654
#: ./docs/11.x/validation.md:1671
#: ./docs/master/validation.md:1654
#~ msgctxt "P"
#~ msgid "<a name=\"rule-prohibited-unless\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1346
#: ./docs/9.x/validation.md:1548
#: ./docs/10.x/validation.md:1655
#: ./docs/11.x/validation.md:1672
#: ./docs/master/validation.md:1655
msgctxt "H4"
msgid "prohibited_unless:*anotherfield*,*value*,..."
msgstr ""

#: ./docs/8.x/validation.md:1348
msgctxt "P"
msgid "The field under validation must be empty or not present unless the *anotherfield* field is equal to any *value*."
msgstr ""

#: ./docs/11.x/validation.md:1349
msgctxt "CODE"
msgid ""
"use Illuminate\\Database\\Query\\Builder;\n"
"use Illuminate\\Support\\Facades\\Validator;\n"
"use Illuminate\\Validation\\Rule;\n"
"\n"
"Validator::make($data, [\n"
"    'email' => [\n"
"        'required',\n"
"        Rule::exists('staff')->where(function (Builder $query) {\n"
"            $query->where('account_id', 1);\n"
"        }),\n"
"    ],\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:1350
#: ./docs/9.x/validation.md:1561
#: ./docs/10.x/validation.md:1668
#: ./docs/11.x/validation.md:1685
#: ./docs/master/validation.md:1668
#~ msgctxt "P"
#~ msgid "<a name=\"rule-prohibits\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1351
#: ./docs/9.x/validation.md:1562
#: ./docs/10.x/validation.md:1669
#: ./docs/11.x/validation.md:1686
#: ./docs/master/validation.md:1669
msgctxt "H4"
msgid "prohibits:*anotherfield*,..."
msgstr ""

#: ./docs/8.x/validation.md:1353
msgctxt "P"
msgid "If the field under validation is present, no fields in *anotherfield* can be present, even if empty."
msgstr ""

#: ./docs/10.x/validation.md:1354
#: ./docs/11.x/validation.md:1366
#: ./docs/master/validation.md:1354
#~ msgctxt "P"
#~ msgid "<a name=\"rule-extensions\"></a>"
#~ msgstr ""

#: ./docs/10.x/validation.md:1355
#: ./docs/11.x/validation.md:1367
#: ./docs/master/validation.md:1355
msgctxt "H4"
msgid "extensions:*foo*,*bar*,..."
msgstr ""

#: ./docs/8.x/validation.md:1355
#: ./docs/9.x/validation.md:1575
#: ./docs/10.x/validation.md:1682
#: ./docs/11.x/validation.md:1699
#: ./docs/master/validation.md:1682
#~ msgctxt "P"
#~ msgid "<a name=\"rule-regex\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1356
#: ./docs/9.x/validation.md:1576
#: ./docs/10.x/validation.md:1683
#: ./docs/11.x/validation.md:1700
#: ./docs/master/validation.md:1683
msgctxt "H4"
msgid "regex:*pattern*"
msgstr ""

#: ./docs/10.x/validation.md:1357
#: ./docs/11.x/validation.md:1369
#: ./docs/master/validation.md:1357
msgctxt "P"
msgid "The file under validation must have a user-assigned extension corresponding to one of the listed extensions:"
msgstr ""

#: ./docs/8.x/validation.md:1358
#: ./docs/9.x/validation.md:1578
#: ./docs/10.x/validation.md:1685
#: ./docs/11.x/validation.md:1702
#: ./docs/master/validation.md:1685
msgctxt "P"
msgid "The field under validation must match the given regular expression."
msgstr ""

#: ./docs/10.x/validation.md:1359
#: ./docs/11.x/validation.md:1371
#: ./docs/master/validation.md:1359
msgctxt "CODE"
msgid "'photo' => ['required', 'extensions:jpg,png'],"
msgstr ""

#: ./docs/8.x/validation.md:1360
#: ./docs/9.x/validation.md:1580
#: ./docs/10.x/validation.md:1687
#: ./docs/11.x/validation.md:1704
#: ./docs/master/validation.md:1687
msgctxt "P"
msgid "Internally, this rule uses the PHP `preg_match` function. The pattern specified should obey the same formatting required by `preg_match` and thus also include valid delimiters. For example: `'email' => 'regex:/^.+@.+$/i'`."
msgstr ""

#: ./docs/10.x/validation.md:1362
#: ./docs/11.x/validation.md:1374
#: ./docs/master/validation.md:1362
msgctxt "P"
msgid "You should never rely on validating a file by its user-assigned extension alone. This rule should typically always be used in combination with the [`mimes`](#rule-mimes) or [`mimetypes`](#rule-mimetypes) rules."
msgstr ""

#: ./docs/8.x/validation.md:1362
#: ./docs/9.x/validation.md:1583
#: ./docs/10.x/validation.md:1690
#: ./docs/11.x/validation.md:1707
#: ./docs/master/validation.md:1690
msgctxt "P"
msgid "When using the `regex` / `not_regex` patterns, it may be necessary to specify rules in an array instead of using `|` delimiters, especially if the regular expression contains a `|` character."
msgstr ""

#: ./docs/8.x/validation.md:1364
#: ./docs/9.x/validation.md:1585
#: ./docs/10.x/validation.md:1692
#: ./docs/11.x/validation.md:1709
#: ./docs/master/validation.md:1692
#~ msgctxt "P"
#~ msgid "<a name=\"rule-required\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1365
#: ./docs/9.x/validation.md:1586
#: ./docs/10.x/validation.md:1693
#: ./docs/11.x/validation.md:1710
#: ./docs/master/validation.md:1693
msgctxt "H4"
msgid "required"
msgstr ""

#: ./docs/8.x/validation.md:1367
msgctxt "P"
msgid "The field under validation must be present in the input data and not empty. A field is considered \"empty\" if one of the following conditions are true:"
msgstr ""

#: ./docs/8.x/validation.md:1371
#: ./docs/9.x/validation.md:1513
#: ./docs/9.x/validation.md:1527
#: ./docs/9.x/validation.md:1554
#: ./docs/9.x/validation.md:1568
#: ./docs/9.x/validation.md:1592
#: ./docs/10.x/validation.md:1620
#: ./docs/10.x/validation.md:1634
#: ./docs/10.x/validation.md:1661
#: ./docs/10.x/validation.md:1675
#: ./docs/10.x/validation.md:1699
#: ./docs/11.x/validation.md:1637
#: ./docs/11.x/validation.md:1651
#: ./docs/11.x/validation.md:1678
#: ./docs/11.x/validation.md:1692
#: ./docs/11.x/validation.md:1716
#: ./docs/master/validation.md:1620
#: ./docs/master/validation.md:1634
#: ./docs/master/validation.md:1661
#: ./docs/master/validation.md:1675
#: ./docs/master/validation.md:1699
msgctxt "P"
msgid "The value is `null`."
msgstr ""

#: ./docs/8.x/validation.md:1372
#: ./docs/9.x/validation.md:1514
#: ./docs/9.x/validation.md:1528
#: ./docs/9.x/validation.md:1555
#: ./docs/9.x/validation.md:1569
#: ./docs/9.x/validation.md:1593
#: ./docs/10.x/validation.md:1621
#: ./docs/10.x/validation.md:1635
#: ./docs/10.x/validation.md:1662
#: ./docs/10.x/validation.md:1676
#: ./docs/10.x/validation.md:1700
#: ./docs/11.x/validation.md:1638
#: ./docs/11.x/validation.md:1652
#: ./docs/11.x/validation.md:1679
#: ./docs/11.x/validation.md:1693
#: ./docs/11.x/validation.md:1717
#: ./docs/master/validation.md:1621
#: ./docs/master/validation.md:1635
#: ./docs/master/validation.md:1662
#: ./docs/master/validation.md:1676
#: ./docs/master/validation.md:1700
msgctxt "P"
msgid "The value is an empty string."
msgstr ""

#: ./docs/8.x/validation.md:1373
#: ./docs/9.x/validation.md:1515
#: ./docs/9.x/validation.md:1529
#: ./docs/9.x/validation.md:1556
#: ./docs/9.x/validation.md:1570
#: ./docs/9.x/validation.md:1594
#: ./docs/10.x/validation.md:1622
#: ./docs/10.x/validation.md:1636
#: ./docs/10.x/validation.md:1663
#: ./docs/10.x/validation.md:1677
#: ./docs/10.x/validation.md:1701
#: ./docs/11.x/validation.md:1639
#: ./docs/11.x/validation.md:1653
#: ./docs/11.x/validation.md:1680
#: ./docs/11.x/validation.md:1694
#: ./docs/11.x/validation.md:1718
#: ./docs/master/validation.md:1622
#: ./docs/master/validation.md:1636
#: ./docs/master/validation.md:1663
#: ./docs/master/validation.md:1677
#: ./docs/master/validation.md:1701
msgctxt "P"
msgid "The value is an empty array or empty `Countable` object."
msgstr ""

#: ./docs/8.x/validation.md:1374
#: ./docs/9.x/validation.md:1595
#: ./docs/10.x/validation.md:1702
#: ./docs/11.x/validation.md:1719
#: ./docs/master/validation.md:1702
msgctxt "P"
msgid "The value is an uploaded file with no path."
msgstr ""

#: ./docs/9.x/validation.md:1376
#: ./docs/10.x/validation.md:1469
#: ./docs/11.x/validation.md:1481
#: ./docs/master/validation.md:1469
#~ msgctxt "P"
#~ msgid "<a name=\"rule-lowercase\"></a>"
#~ msgstr ""

#: ./docs/10.x/validation.md:1377
#: ./docs/11.x/validation.md:1389
#: ./docs/master/validation.md:1377
msgctxt "P"
msgid "The field under validation must be greater than the given *field* or *value*. The two fields must be of the same type. Strings, numerics, arrays, and files are evaluated using the same conventions as the [`size`](#rule-size) rule."
msgstr ""

#: ./docs/9.x/validation.md:1377
#: ./docs/10.x/validation.md:1470
#: ./docs/11.x/validation.md:1482
#: ./docs/master/validation.md:1470
msgctxt "H4"
msgid "lowercase"
msgstr ""

#: ./docs/8.x/validation.md:1378
#: ./docs/9.x/validation.md:1599
#: ./docs/10.x/validation.md:1706
#: ./docs/11.x/validation.md:1723
#: ./docs/master/validation.md:1706
#~ msgctxt "P"
#~ msgid "<a name=\"rule-required-if\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1379
#: ./docs/9.x/validation.md:1600
#: ./docs/10.x/validation.md:1707
#: ./docs/11.x/validation.md:1724
#: ./docs/master/validation.md:1707
msgctxt "H4"
msgid "required_if:*anotherfield*,*value*,..."
msgstr ""

#: ./docs/9.x/validation.md:1379
#: ./docs/10.x/validation.md:1472
#: ./docs/11.x/validation.md:1484
#: ./docs/master/validation.md:1472
msgctxt "P"
msgid "The field under validation must be lowercase."
msgstr ""

#: ./docs/8.x/validation.md:1381
#: ./docs/9.x/validation.md:1602
#: ./docs/10.x/validation.md:1709
#: ./docs/11.x/validation.md:1726
#: ./docs/master/validation.md:1709
msgctxt "P"
msgid "The field under validation must be present and not empty if the *anotherfield* field is equal to any *value*."
msgstr ""

#: ./docs/10.x/validation.md:1382
#: ./docs/11.x/validation.md:1394
#: ./docs/master/validation.md:1382
msgctxt "P"
msgid "The field under validation must be greater than or equal to the given *field* or *value*. The two fields must be of the same type. Strings, numerics, arrays, and files are evaluated using the same conventions as the [`size`](#rule-size) rule."
msgstr ""

#: ./docs/8.x/validation.md:1383
#: ./docs/9.x/validation.md:1604
#: ./docs/10.x/validation.md:1711
#: ./docs/11.x/validation.md:1728
#: ./docs/master/validation.md:1711
msgctxt "P"
msgid "If you would like to construct a more complex condition for the `required_if` rule, you may use the `Rule::requiredIf` method. This method accepts a boolean or a closure. When passed a closure, the closure should return `true` or `false` to indicate if the field under validation is required:"
msgstr ""

#: ./docs/10.x/validation.md:1384
#: ./docs/11.x/validation.md:1396
#: ./docs/master/validation.md:1384
#~ msgctxt "P"
#~ msgid "<a name=\"rule-hex-color\"></a>"
#~ msgstr ""

#: ./docs/10.x/validation.md:1385
#: ./docs/11.x/validation.md:1397
#: ./docs/master/validation.md:1385
msgctxt "H4"
msgid "hex_color"
msgstr ""

#: ./docs/8.x/validation.md:1385
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Validator;\n"
"use Illuminate\\Validation\\Rule;\n"
"\n"
"Validator::make($request->all(), [\n"
"    'role_id' => Rule::requiredIf($request->user()->is_admin),\n"
"]);\n"
"\n"
"Validator::make($request->all(), [\n"
"    'role_id' => Rule::requiredIf(function () use ($request) {\n"
"        return $request->user()->is_admin;\n"
"    }),\n"
"]);"
msgstr ""

#: ./docs/10.x/validation.md:1387
#: ./docs/11.x/validation.md:1399
#: ./docs/master/validation.md:1387
msgctxt "P"
msgid "The field under validation must contain a valid color value in [hexadecimal](https://developer.mozilla.org/en-US/docs/Web/CSS/hex-color) format."
msgstr ""

#: ./docs/9.x/validation.md:1391
#: ./docs/10.x/validation.md:1484
#: ./docs/11.x/validation.md:1501
#: ./docs/master/validation.md:1484
#~ msgctxt "P"
#~ msgid "<a name=\"rule-max-digits\"></a>"
#~ msgstr ""

#: ./docs/9.x/validation.md:1392
#: ./docs/10.x/validation.md:1485
#: ./docs/11.x/validation.md:1502
#: ./docs/master/validation.md:1485
msgctxt "H4"
msgid "max_digits:*value*"
msgstr ""

#: ./docs/9.x/validation.md:1394
#: ./docs/10.x/validation.md:1487
#: ./docs/11.x/validation.md:1504
#: ./docs/master/validation.md:1487
msgctxt "P"
msgid "The integer under validation must have a maximum length of *value*."
msgstr ""

#: ./docs/8.x/validation.md:1398
#: ./docs/9.x/validation.md:1617
#: ./docs/10.x/validation.md:1729
#: ./docs/11.x/validation.md:1751
#: ./docs/master/validation.md:1729
#~ msgctxt "P"
#~ msgid "<a name=\"rule-required-unless\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1399
#: ./docs/9.x/validation.md:1618
#: ./docs/10.x/validation.md:1730
#: ./docs/11.x/validation.md:1752
#: ./docs/master/validation.md:1730
msgctxt "H4"
msgid "required_unless:*anotherfield*,*value*,..."
msgstr ""

#: ./docs/8.x/validation.md:1401
#: ./docs/9.x/validation.md:1620
#: ./docs/10.x/validation.md:1732
#: ./docs/11.x/validation.md:1754
#: ./docs/master/validation.md:1732
msgctxt "P"
msgid "The field under validation must be present and not empty unless the *anotherfield* field is equal to any *value*. This also means *anotherfield* must be present in the request data unless *value* is `null`. If *value* is `null` (`required_unless:name,null`), the field under validation will be required unless the comparison field is `null` or the comparison field is missing from the request data."
msgstr ""

#: ./docs/8.x/validation.md:1403
#: ./docs/9.x/validation.md:1622
#: ./docs/10.x/validation.md:1734
#: ./docs/11.x/validation.md:1756
#: ./docs/master/validation.md:1734
#~ msgctxt "P"
#~ msgid "<a name=\"rule-required-with\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1404
#: ./docs/9.x/validation.md:1623
#: ./docs/10.x/validation.md:1735
#: ./docs/11.x/validation.md:1757
#: ./docs/master/validation.md:1735
msgctxt "H4"
msgid "required_with:*foo*,*bar*,..."
msgstr ""

#: ./docs/8.x/validation.md:1406
#: ./docs/9.x/validation.md:1625
#: ./docs/10.x/validation.md:1737
#: ./docs/11.x/validation.md:1759
#: ./docs/master/validation.md:1737
msgctxt "P"
msgid "The field under validation must be present and not empty *only if* any of the other specified fields are present and not empty."
msgstr ""

#: ./docs/8.x/validation.md:1408
#: ./docs/9.x/validation.md:1627
#: ./docs/10.x/validation.md:1739
#: ./docs/11.x/validation.md:1761
#: ./docs/master/validation.md:1739
#~ msgctxt "P"
#~ msgid "<a name=\"rule-required-with-all\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1409
#: ./docs/9.x/validation.md:1628
#: ./docs/10.x/validation.md:1740
#: ./docs/11.x/validation.md:1762
#: ./docs/master/validation.md:1740
msgctxt "H4"
msgid "required_with_all:*foo*,*bar*,..."
msgstr ""

#: ./docs/8.x/validation.md:1411
#: ./docs/9.x/validation.md:1630
#: ./docs/10.x/validation.md:1742
#: ./docs/11.x/validation.md:1764
#: ./docs/master/validation.md:1742
msgctxt "P"
msgid "The field under validation must be present and not empty *only if* all of the other specified fields are present and not empty."
msgstr ""

#: ./docs/8.x/validation.md:1413
#: ./docs/9.x/validation.md:1632
#: ./docs/10.x/validation.md:1744
#: ./docs/11.x/validation.md:1766
#: ./docs/master/validation.md:1744
#~ msgctxt "P"
#~ msgid "<a name=\"rule-required-without\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1414
#: ./docs/9.x/validation.md:1633
#: ./docs/10.x/validation.md:1745
#: ./docs/11.x/validation.md:1767
#: ./docs/master/validation.md:1745
msgctxt "H4"
msgid "required_without:*foo*,*bar*,..."
msgstr ""

#: ./docs/8.x/validation.md:1416
#: ./docs/9.x/validation.md:1635
#: ./docs/10.x/validation.md:1747
#: ./docs/11.x/validation.md:1769
#: ./docs/master/validation.md:1747
msgctxt "P"
msgid "The field under validation must be present and not empty *only when* any of the other specified fields are empty or not present."
msgstr ""

#: ./docs/8.x/validation.md:1418
#: ./docs/9.x/validation.md:1637
#: ./docs/10.x/validation.md:1749
#: ./docs/11.x/validation.md:1771
#: ./docs/master/validation.md:1749
#~ msgctxt "P"
#~ msgid "<a name=\"rule-required-without-all\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1419
#: ./docs/9.x/validation.md:1638
#: ./docs/10.x/validation.md:1750
#: ./docs/11.x/validation.md:1772
#: ./docs/master/validation.md:1750
msgctxt "H4"
msgid "required_without_all:*foo*,*bar*,..."
msgstr ""

#: ./docs/8.x/validation.md:1421
#: ./docs/9.x/validation.md:1640
#: ./docs/10.x/validation.md:1752
#: ./docs/11.x/validation.md:1774
#: ./docs/master/validation.md:1752
msgctxt "P"
msgid "The field under validation must be present and not empty *only when* all of the other specified fields are empty or not present."
msgstr ""

#: ./docs/8.x/validation.md:1423
#: ./docs/9.x/validation.md:1647
#: ./docs/10.x/validation.md:1759
#: ./docs/11.x/validation.md:1781
#: ./docs/master/validation.md:1759
#~ msgctxt "P"
#~ msgid "<a name=\"rule-same\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1424
#: ./docs/9.x/validation.md:1648
#: ./docs/10.x/validation.md:1760
#: ./docs/11.x/validation.md:1782
#: ./docs/master/validation.md:1760
msgctxt "H4"
msgid "same:*field*"
msgstr ""

#: ./docs/9.x/validation.md:1424
#: ./docs/10.x/validation.md:1519
#: ./docs/11.x/validation.md:1536
#: ./docs/master/validation.md:1519
#~ msgctxt "P"
#~ msgid "<a name=\"rule-min-digits\"></a>"
#~ msgstr ""

#: ./docs/9.x/validation.md:1425
#: ./docs/10.x/validation.md:1520
#: ./docs/11.x/validation.md:1537
#: ./docs/master/validation.md:1520
msgctxt "H4"
msgid "min_digits:*value*"
msgstr ""

#: ./docs/8.x/validation.md:1426
#: ./docs/9.x/validation.md:1650
#: ./docs/10.x/validation.md:1762
#: ./docs/11.x/validation.md:1784
#: ./docs/master/validation.md:1762
msgctxt "P"
msgid "The given *field* must match the field under validation."
msgstr ""

#: ./docs/9.x/validation.md:1427
#: ./docs/10.x/validation.md:1522
#: ./docs/11.x/validation.md:1539
#: ./docs/master/validation.md:1522
msgctxt "P"
msgid "The integer under validation must have a minimum length of *value*."
msgstr ""

#: ./docs/8.x/validation.md:1428
#: ./docs/9.x/validation.md:1652
#: ./docs/10.x/validation.md:1764
#: ./docs/11.x/validation.md:1786
#: ./docs/master/validation.md:1764
#~ msgctxt "P"
#~ msgid "<a name=\"rule-size\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1429
#: ./docs/9.x/validation.md:1653
#: ./docs/10.x/validation.md:1765
#: ./docs/11.x/validation.md:1787
#: ./docs/master/validation.md:1765
msgctxt "H4"
msgid "size:*value*"
msgstr ""

#: ./docs/9.x/validation.md:1429
#: ./docs/10.x/validation.md:1524
#: ./docs/11.x/validation.md:1541
#: ./docs/master/validation.md:1524
#~ msgctxt "P"
#~ msgid "<a name=\"rule-multiple-of\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1431
#: ./docs/9.x/validation.md:1655
#: ./docs/10.x/validation.md:1767
#: ./docs/11.x/validation.md:1789
#: ./docs/master/validation.md:1767
msgctxt "P"
msgid "The field under validation must have a size matching the given *value*. For string data, *value* corresponds to the number of characters. For numeric data, *value* corresponds to a given integer value (the attribute must also have the `numeric` or `integer` rule). For an array, *size* corresponds to the `count` of the array. For files, *size* corresponds to the file size in kilobytes. Let's look at some examples:"
msgstr ""

#: ./docs/8.x/validation.md:1433
#: ./docs/9.x/validation.md:1657
#: ./docs/10.x/validation.md:1769
#: ./docs/11.x/validation.md:1791
#: ./docs/master/validation.md:1769
msgctxt "CODE"
msgid ""
"// Validate that a string is exactly 12 characters long...\n"
"'title' => 'size:12';\n"
"\n"
"// Validate that a provided integer equals 10...\n"
"'seats' => 'integer|size:10';\n"
"\n"
"// Validate that an array has exactly 5 elements...\n"
"'tags' => 'array|size:5';\n"
"\n"
"// Validate that an uploaded file is exactly 512 kilobytes...\n"
"'image' => 'file|size:512';"
msgstr ""

#: ./docs/9.x/validation.md:1434
#: ./docs/10.x/validation.md:1529
#: ./docs/11.x/validation.md:1546
#: ./docs/master/validation.md:1529
#~ msgctxt "P"
#~ msgid "<a name=\"rule-missing\"></a>"
#~ msgstr ""

#: ./docs/9.x/validation.md:1435
#: ./docs/10.x/validation.md:1530
#: ./docs/11.x/validation.md:1547
#: ./docs/master/validation.md:1530
msgctxt "H4"
msgid "missing"
msgstr ""

#: ./docs/9.x/validation.md:1437
#: ./docs/10.x/validation.md:1532
#: ./docs/11.x/validation.md:1549
#: ./docs/master/validation.md:1532
msgctxt "P"
msgid "The field under validation must not be present in the input data."
msgstr ""

#: ./docs/9.x/validation.md:1439
#: ./docs/10.x/validation.md:1534
#: ./docs/11.x/validation.md:1551
#: ./docs/master/validation.md:1534
#~ msgctxt "P"
#~ msgid "<a name=\"rule-missing-if\"></a>"
#~ msgstr ""

#: ./docs/9.x/validation.md:1440
#: ./docs/10.x/validation.md:1535
#: ./docs/11.x/validation.md:1552
#: ./docs/master/validation.md:1535
msgctxt "H4"
msgid "missing_if:*anotherfield*,*value*,..."
msgstr ""

#: ./docs/9.x/validation.md:1442
#: ./docs/10.x/validation.md:1537
#: ./docs/11.x/validation.md:1554
#: ./docs/master/validation.md:1537
msgctxt "P"
msgid "The field under validation must not be present if the *anotherfield* field is equal to any *value*."
msgstr ""

#: ./docs/9.x/validation.md:1444
#: ./docs/10.x/validation.md:1539
#: ./docs/11.x/validation.md:1556
#: ./docs/master/validation.md:1539
#~ msgctxt "P"
#~ msgid "<a name=\"rule-missing-unless\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1445
#: ./docs/9.x/validation.md:1669
#: ./docs/10.x/validation.md:1781
#: ./docs/11.x/validation.md:1803
#: ./docs/master/validation.md:1781
#~ msgctxt "P"
#~ msgid "<a name=\"rule-starts-with\"></a>"
#~ msgstr ""

#: ./docs/9.x/validation.md:1445
#: ./docs/10.x/validation.md:1540
#: ./docs/11.x/validation.md:1557
#: ./docs/master/validation.md:1540
msgctxt "H4"
msgid "missing_unless:*anotherfield*,*value*"
msgstr ""

#: ./docs/8.x/validation.md:1446
#: ./docs/9.x/validation.md:1670
#: ./docs/10.x/validation.md:1782
#: ./docs/11.x/validation.md:1804
#: ./docs/master/validation.md:1782
msgctxt "H4"
msgid "starts_with:*foo*,*bar*,..."
msgstr ""

#: ./docs/9.x/validation.md:1447
#: ./docs/10.x/validation.md:1542
#: ./docs/11.x/validation.md:1559
#: ./docs/master/validation.md:1542
msgctxt "P"
msgid "The field under validation must not be present unless the *anotherfield* field is equal to any *value*."
msgstr ""

#: ./docs/8.x/validation.md:1448
#: ./docs/9.x/validation.md:1672
#: ./docs/10.x/validation.md:1784
#: ./docs/11.x/validation.md:1806
#: ./docs/master/validation.md:1784
msgctxt "P"
msgid "The field under validation must start with one of the given values."
msgstr ""

#: ./docs/9.x/validation.md:1449
#: ./docs/10.x/validation.md:1544
#: ./docs/11.x/validation.md:1561
#: ./docs/master/validation.md:1544
#~ msgctxt "P"
#~ msgid "<a name=\"rule-missing-with\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1450
#: ./docs/9.x/validation.md:1674
#: ./docs/10.x/validation.md:1786
#: ./docs/11.x/validation.md:1808
#: ./docs/master/validation.md:1786
#~ msgctxt "P"
#~ msgid "<a name=\"rule-string\"></a>"
#~ msgstr ""

#: ./docs/9.x/validation.md:1450
#: ./docs/10.x/validation.md:1545
#: ./docs/11.x/validation.md:1562
#: ./docs/master/validation.md:1545
msgctxt "H4"
msgid "missing_with:*foo*,*bar*,..."
msgstr ""

#: ./docs/8.x/validation.md:1451
#: ./docs/9.x/validation.md:1675
#: ./docs/10.x/validation.md:1787
#: ./docs/11.x/validation.md:1809
#: ./docs/master/validation.md:1787
msgctxt "H4"
msgid "string"
msgstr ""

#: ./docs/9.x/validation.md:1452
#: ./docs/10.x/validation.md:1547
#: ./docs/11.x/validation.md:1564
#: ./docs/master/validation.md:1547
msgctxt "P"
msgid "The field under validation must not be present *only if* any of the other specified fields are present."
msgstr ""

#: ./docs/8.x/validation.md:1453
#: ./docs/9.x/validation.md:1677
#: ./docs/10.x/validation.md:1789
#: ./docs/11.x/validation.md:1811
#: ./docs/master/validation.md:1789
msgctxt "P"
msgid "The field under validation must be a string. If you would like to allow the field to also be `null`, you should assign the `nullable` rule to the field."
msgstr ""

#: ./docs/9.x/validation.md:1454
#: ./docs/10.x/validation.md:1549
#: ./docs/11.x/validation.md:1566
#: ./docs/master/validation.md:1549
#~ msgctxt "P"
#~ msgid "<a name=\"rule-missing-with-all\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1455
#: ./docs/9.x/validation.md:1679
#: ./docs/10.x/validation.md:1791
#: ./docs/11.x/validation.md:1813
#: ./docs/master/validation.md:1791
#~ msgctxt "P"
#~ msgid "<a name=\"rule-timezone\"></a>"
#~ msgstr ""

#: ./docs/9.x/validation.md:1455
#: ./docs/10.x/validation.md:1550
#: ./docs/11.x/validation.md:1567
#: ./docs/master/validation.md:1550
msgctxt "H4"
msgid "missing_with_all:*foo*,*bar*,..."
msgstr ""

#: ./docs/8.x/validation.md:1456
#: ./docs/9.x/validation.md:1680
#: ./docs/10.x/validation.md:1792
#: ./docs/11.x/validation.md:1814
#: ./docs/master/validation.md:1792
msgctxt "H4"
msgid "timezone"
msgstr ""

#: ./docs/9.x/validation.md:1457
#: ./docs/10.x/validation.md:1552
#: ./docs/11.x/validation.md:1569
#: ./docs/master/validation.md:1552
msgctxt "P"
msgid "The field under validation must not be present *only if* all of the other specified fields are present."
msgstr ""

#: ./docs/8.x/validation.md:1458
#: ./docs/9.x/validation.md:1682
msgctxt "P"
msgid "The field under validation must be a valid timezone identifier according to the `timezone_identifiers_list` PHP function."
msgstr ""

#: ./docs/8.x/validation.md:1460
#: ./docs/9.x/validation.md:1684
#: ./docs/10.x/validation.md:1804
#: ./docs/11.x/validation.md:1826
#: ./docs/master/validation.md:1804
#~ msgctxt "P"
#~ msgid "<a name=\"rule-unique\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1461
#: ./docs/9.x/validation.md:1685
#: ./docs/10.x/validation.md:1805
#: ./docs/11.x/validation.md:1827
#: ./docs/master/validation.md:1805
msgctxt "H4"
msgid "unique:*table*,*column*"
msgstr ""

#: ./docs/8.x/validation.md:1463
#: ./docs/9.x/validation.md:1687
#: ./docs/10.x/validation.md:1807
#: ./docs/11.x/validation.md:1829
#: ./docs/master/validation.md:1807
msgctxt "P"
msgid "The field under validation must not exist within the given database table."
msgstr ""

#: ./docs/8.x/validation.md:1465
#: ./docs/9.x/validation.md:1689
msgctxt "P"
msgid "**Specifying A Custom Table / Column Name:**"
msgstr ""

#: ./docs/8.x/validation.md:1469
#: ./docs/9.x/validation.md:1693
#: ./docs/10.x/validation.md:1813
#: ./docs/11.x/validation.md:1835
#: ./docs/master/validation.md:1813
msgctxt "CODE"
msgid "'email' => 'unique:App\\Models\\User,email_address'"
msgstr ""

#: ./docs/8.x/validation.md:1471
#: ./docs/9.x/validation.md:1695
#: ./docs/10.x/validation.md:1815
#: ./docs/11.x/validation.md:1837
#: ./docs/master/validation.md:1815
msgctxt "P"
msgid "The `column` option may be used to specify the field's corresponding database column. If the `column` option is not specified, the name of the field under validation will be used."
msgstr ""

#: ./docs/8.x/validation.md:1473
#: ./docs/9.x/validation.md:1697
#: ./docs/10.x/validation.md:1817
#: ./docs/11.x/validation.md:1839
#: ./docs/master/validation.md:1817
msgctxt "CODE"
msgid "'email' => 'unique:users,email_address'"
msgstr ""

#: ./docs/8.x/validation.md:1475
#: ./docs/9.x/validation.md:1699
msgctxt "P"
msgid "**Specifying A Custom Database Connection**"
msgstr ""

#: ./docs/8.x/validation.md:1477
#: ./docs/9.x/validation.md:1701
#: ./docs/10.x/validation.md:1821
#: ./docs/11.x/validation.md:1843
#: ./docs/master/validation.md:1821
msgctxt "P"
msgid "Occasionally, you may need to set a custom connection for database queries made by the Validator. To accomplish this, you may prepend the connection name to the table name:"
msgstr ""

#: ./docs/8.x/validation.md:1479
#: ./docs/9.x/validation.md:1703
#: ./docs/10.x/validation.md:1823
#: ./docs/11.x/validation.md:1845
#: ./docs/master/validation.md:1823
msgctxt "CODE"
msgid "'email' => 'unique:connection.users,email_address'"
msgstr ""

#: ./docs/8.x/validation.md:1481
#: ./docs/9.x/validation.md:1705
msgctxt "P"
msgid "**Forcing A Unique Rule To Ignore A Given ID:**"
msgstr ""

#: ./docs/8.x/validation.md:1483
#: ./docs/9.x/validation.md:1707
#: ./docs/10.x/validation.md:1827
#: ./docs/11.x/validation.md:1849
#: ./docs/master/validation.md:1827
msgctxt "P"
msgid "Sometimes, you may wish to ignore a given ID during unique validation. For example, consider an \"update profile\" screen that includes the user's name, email address, and location. You will probably want to verify that the email address is unique. However, if the user only changes the name field and not the email field, you do not want a validation error to be thrown because the user is already the owner of the email address in question."
msgstr ""

#: ./docs/8.x/validation.md:1485
#: ./docs/9.x/validation.md:1709
#: ./docs/10.x/validation.md:1829
#: ./docs/11.x/validation.md:1851
#: ./docs/master/validation.md:1829
msgctxt "P"
msgid "To instruct the validator to ignore the user's ID, we'll use the `Rule` class to fluently define the rule. In this example, we'll also specify the validation rules as an array instead of using the `|` character to delimit the rules:"
msgstr ""

#: ./docs/11.x/validation.md:1486
#~ msgctxt "P"
#~ msgid "<a name=\"rule-list\"></a>"
#~ msgstr ""

#: ./docs/11.x/validation.md:1487
msgctxt "H4"
msgid "list"
msgstr ""

#: ./docs/8.x/validation.md:1487
#: ./docs/9.x/validation.md:1711
#: ./docs/10.x/validation.md:1831
#: ./docs/11.x/validation.md:1853
#: ./docs/master/validation.md:1831
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Validator;\n"
"use Illuminate\\Validation\\Rule;\n"
"\n"
"Validator::make($data, [\n"
"    'email' => [\n"
"        'required',\n"
"        Rule::unique('users')->ignore($user->id),\n"
"    ],\n"
"]);"
msgstr ""

#: ./docs/11.x/validation.md:1489
msgctxt "P"
msgid "The field under validation must be an array that is a list. An array is considered a list if its keys consist of consecutive numbers from 0 to `count($array) - 1`."
msgstr ""

#: ./docs/8.x/validation.md:1497
#: ./docs/9.x/validation.md:1722
#: ./docs/10.x/validation.md:1842
#: ./docs/11.x/validation.md:1864
#: ./docs/master/validation.md:1842
msgctxt "P"
msgid "You should never pass any user controlled request input into the `ignore` method. Instead, you should only pass a system generated unique ID such as an auto-incrementing ID or UUID from an Eloquent model instance. Otherwise, your application will be vulnerable to an SQL injection attack."
msgstr ""

#: ./docs/8.x/validation.md:1499
#: ./docs/9.x/validation.md:1724
#: ./docs/10.x/validation.md:1844
#: ./docs/11.x/validation.md:1866
#: ./docs/master/validation.md:1844
msgctxt "P"
msgid "Instead of passing the model key's value to the `ignore` method, you may also pass the entire model instance. Laravel will automatically extract the key from the model:"
msgstr ""

#: ./docs/10.x/validation.md:1501
#: ./docs/11.x/validation.md:1518
#: ./docs/master/validation.md:1501
msgctxt "P"
msgid "The file under validation must have a MIME type corresponding to one of the listed extensions:"
msgstr ""

#: ./docs/8.x/validation.md:1501
#: ./docs/9.x/validation.md:1726
#: ./docs/10.x/validation.md:1846
#: ./docs/11.x/validation.md:1868
#: ./docs/master/validation.md:1846
msgctxt "CODE"
msgid "Rule::unique('users')->ignore($user)"
msgstr ""

#: ./docs/8.x/validation.md:1503
#: ./docs/9.x/validation.md:1728
#: ./docs/10.x/validation.md:1848
#: ./docs/11.x/validation.md:1870
#: ./docs/master/validation.md:1848
msgctxt "P"
msgid "If your table uses a primary key column name other than `id`, you may specify the name of the column when calling the `ignore` method:"
msgstr ""

#: ./docs/9.x/validation.md:1504
#: ./docs/10.x/validation.md:1591
#: ./docs/11.x/validation.md:1608
#: ./docs/master/validation.md:1591
msgctxt "P"
msgid "The field under validation must exist in the input data."
msgstr ""

#: ./docs/8.x/validation.md:1505
#: ./docs/9.x/validation.md:1730
#: ./docs/10.x/validation.md:1850
#: ./docs/11.x/validation.md:1872
#: ./docs/master/validation.md:1850
msgctxt "CODE"
msgid "Rule::unique('users')->ignore($user->id, 'user_id')"
msgstr ""

#: ./docs/8.x/validation.md:1507
#: ./docs/9.x/validation.md:1732
#: ./docs/10.x/validation.md:1852
#: ./docs/11.x/validation.md:1874
#: ./docs/master/validation.md:1852
msgctxt "P"
msgid "By default, the `unique` rule will check the uniqueness of the column matching the name of the attribute being validated. However, you may pass a different column name as the second argument to the `unique` method:"
msgstr ""

#: ./docs/10.x/validation.md:1509
#: ./docs/11.x/validation.md:1526
#: ./docs/master/validation.md:1509
#~ msgctxt "P"
#~ msgid "<a name=\"mime-types-and-extensions\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1509
#: ./docs/9.x/validation.md:1734
msgctxt "CODE"
msgid "Rule::unique('users', 'email_address')->ignore($user->id),"
msgstr ""

#: ./docs/9.x/validation.md:1509
#: ./docs/10.x/validation.md:1616
#: ./docs/11.x/validation.md:1633
#: ./docs/master/validation.md:1616
msgctxt "P"
msgid "The field under validation must be missing or empty. A field is \"empty\" if it meets one of the following criteria:"
msgstr ""

#: ./docs/10.x/validation.md:1510
#: ./docs/11.x/validation.md:1527
#: ./docs/master/validation.md:1510
msgctxt "H4"
msgid "MIME Types and Extensions"
msgstr ""

#: ./docs/8.x/validation.md:1511
#: ./docs/9.x/validation.md:1736
#: ./docs/10.x/validation.md:1856
#: ./docs/11.x/validation.md:1878
#: ./docs/master/validation.md:1856
msgctxt "P"
msgid "**Adding Additional Where Clauses:**"
msgstr ""

#: ./docs/10.x/validation.md:1512
#: ./docs/11.x/validation.md:1529
#: ./docs/master/validation.md:1512
msgctxt "P"
msgid "This validation rule does not verify agreement between the MIME type and the extension the user assigned to the file. For example, the `mimes:png` validation rule would consider a file containing valid PNG content to be a valid PNG image, even if the file is named `photo.txt`. If you would like to validate the user-assigned extension of the file, you may use the [`extensions`](#rule-extensions) rule."
msgstr ""

#: ./docs/8.x/validation.md:1513
#: ./docs/9.x/validation.md:1738
#: ./docs/10.x/validation.md:1858
#: ./docs/11.x/validation.md:1880
#: ./docs/master/validation.md:1858
msgctxt "P"
msgid "You may specify additional query conditions by customizing the query using the `where` method. For example, let's add a query condition that scopes the query to only search records that have an `account_id` column value of `1`:"
msgstr ""

#: ./docs/8.x/validation.md:1515
msgctxt "CODE"
msgid ""
"'email' => Rule::unique('users')->where(function ($query) {\n"
"    return $query->where('account_id', 1);\n"
"})"
msgstr ""

#: ./docs/9.x/validation.md:1516
#: ./docs/9.x/validation.md:1530
#: ./docs/9.x/validation.md:1557
#: ./docs/9.x/validation.md:1571
#: ./docs/10.x/validation.md:1623
#: ./docs/10.x/validation.md:1637
#: ./docs/10.x/validation.md:1664
#: ./docs/10.x/validation.md:1678
#: ./docs/11.x/validation.md:1640
#: ./docs/11.x/validation.md:1654
#: ./docs/11.x/validation.md:1681
#: ./docs/11.x/validation.md:1695
#: ./docs/master/validation.md:1623
#: ./docs/master/validation.md:1637
#: ./docs/master/validation.md:1664
#: ./docs/master/validation.md:1678
msgctxt "P"
msgid "The value is an uploaded file with an empty path."
msgstr ""

#: ./docs/8.x/validation.md:1519
#: ./docs/9.x/validation.md:1747
#: ./docs/10.x/validation.md:1867
#: ./docs/11.x/validation.md:1889
#: ./docs/master/validation.md:1867
#~ msgctxt "P"
#~ msgid "<a name=\"rule-url\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1520
#: ./docs/9.x/validation.md:1748
#: ./docs/10.x/validation.md:1868
#: ./docs/11.x/validation.md:1890
#: ./docs/master/validation.md:1868
msgctxt "H4"
msgid "url"
msgstr ""

#: ./docs/8.x/validation.md:1522
#: ./docs/9.x/validation.md:1750
#: ./docs/10.x/validation.md:1870
#: ./docs/11.x/validation.md:1892
#: ./docs/master/validation.md:1870
msgctxt "P"
msgid "The field under validation must be a valid URL."
msgstr ""

#: ./docs/9.x/validation.md:1523
#: ./docs/10.x/validation.md:1630
#: ./docs/11.x/validation.md:1647
#: ./docs/master/validation.md:1630
msgctxt "P"
msgid "The field under validation must be missing or empty if the *anotherfield* field is equal to any *value*. A field is \"empty\" if it meets one of the following criteria:"
msgstr ""

#: ./docs/8.x/validation.md:1524
#: ./docs/9.x/validation.md:1757
#: ./docs/10.x/validation.md:1885
#: ./docs/11.x/validation.md:1907
#: ./docs/master/validation.md:1885
#~ msgctxt "P"
#~ msgid "<a name=\"rule-uuid\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1525
#: ./docs/9.x/validation.md:1758
#: ./docs/10.x/validation.md:1886
#: ./docs/11.x/validation.md:1908
#: ./docs/master/validation.md:1886
msgctxt "H4"
msgid "uuid"
msgstr ""

#: ./docs/8.x/validation.md:1527
#: ./docs/9.x/validation.md:1760
#: ./docs/10.x/validation.md:1888
#: ./docs/11.x/validation.md:1910
#: ./docs/master/validation.md:1888
msgctxt "P"
msgid "The field under validation must be a valid RFC 4122 (version 1, 3, 4, or 5) universally unique identifier (UUID)."
msgstr ""

#: ./docs/8.x/validation.md:1529
#: ./docs/9.x/validation.md:1762
#: ./docs/10.x/validation.md:1890
#: ./docs/11.x/validation.md:1912
#: ./docs/master/validation.md:1896
#~ msgctxt "P"
#~ msgid "<a name=\"conditionally-adding-rules\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1530
#: ./docs/9.x/validation.md:1763
#: ./docs/10.x/validation.md:1891
#: ./docs/11.x/validation.md:1913
#: ./docs/master/validation.md:1897
msgctxt "H2"
msgid "Conditionally Adding Rules"
msgstr ""

#: ./docs/8.x/validation.md:1532
#: ./docs/9.x/validation.md:1765
#: ./docs/10.x/validation.md:1893
#: ./docs/11.x/validation.md:1915
#: ./docs/master/validation.md:1899
#~ msgctxt "P"
#~ msgid "<a name=\"skipping-validation-when-fields-have-certain-values\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1533
#: ./docs/9.x/validation.md:1766
#: ./docs/10.x/validation.md:1894
#: ./docs/11.x/validation.md:1916
#: ./docs/master/validation.md:1900
msgctxt "H4"
msgid "Skipping Validation When Fields Have Certain Values"
msgstr ""

#: ./docs/9.x/validation.md:1534
#: ./docs/10.x/validation.md:1641
#: ./docs/11.x/validation.md:1658
#: ./docs/master/validation.md:1641
msgctxt "P"
msgid "If complex conditional prohibition logic is required, you may utilize the `Rule::prohibitedIf` method. This method accepts a boolean or a closure. When given a closure, the closure should return `true` or `false` to indicate if the field under validation should be prohibited:"
msgstr ""

#: ./docs/8.x/validation.md:1535
#: ./docs/9.x/validation.md:1768
#: ./docs/10.x/validation.md:1896
#: ./docs/11.x/validation.md:1918
#: ./docs/master/validation.md:1902
msgctxt "P"
msgid "You may occasionally wish to not validate a given field if another field has a given value. You may accomplish this using the `exclude_if` validation rule. In this example, the `appointment_date` and `doctor_name` fields will not be validated if the `has_appointment` field has a value of `false`:"
msgstr ""

#: ./docs/9.x/validation.md:1536
#: ./docs/10.x/validation.md:1643
#: ./docs/11.x/validation.md:1660
#: ./docs/master/validation.md:1643
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Validator;\n"
"use Illuminate\\Validation\\Rule;\n"
"\n"
"Validator::make($request->all(), [\n"
"    'role_id' => Rule::prohibitedIf($request->user()->is_admin),\n"
"]);\n"
"\n"
"Validator::make($request->all(), [\n"
"    'role_id' => Rule::prohibitedIf(fn () => $request->user()->is_admin),\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:1537
#: ./docs/9.x/validation.md:1770
#: ./docs/10.x/validation.md:1898
#: ./docs/11.x/validation.md:1920
#: ./docs/master/validation.md:1904
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Validator;\n"
"\n"
"$validator = Validator::make($data, [\n"
"    'has_appointment' => 'required|boolean',\n"
"    'appointment_date' => 'exclude_if:has_appointment,false|required|date',\n"
"    'doctor_name' => 'exclude_if:has_appointment,false|required|string',\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:1545
#: ./docs/9.x/validation.md:1778
#: ./docs/10.x/validation.md:1906
#: ./docs/11.x/validation.md:1928
#: ./docs/master/validation.md:1912
msgctxt "P"
msgid "Alternatively, you may use the `exclude_unless` rule to not validate a given field unless another field has a given value:"
msgstr ""

#: ./docs/8.x/validation.md:1547
#: ./docs/9.x/validation.md:1780
#: ./docs/10.x/validation.md:1908
#: ./docs/11.x/validation.md:1930
#: ./docs/master/validation.md:1914
msgctxt "CODE"
msgid ""
"$validator = Validator::make($data, [\n"
"    'has_appointment' => 'required|boolean',\n"
"    'appointment_date' => 'exclude_unless:has_appointment,true|required|date',\n"
"    'doctor_name' => 'exclude_unless:has_appointment,true|required|string',\n"
"]);"
msgstr ""

#: ./docs/9.x/validation.md:1550
#: ./docs/10.x/validation.md:1657
#: ./docs/11.x/validation.md:1674
#: ./docs/master/validation.md:1657
msgctxt "P"
msgid "The field under validation must be missing or empty unless the *anotherfield* field is equal to any *value*. A field is \"empty\" if it meets one of the following criteria:"
msgstr ""

#: ./docs/8.x/validation.md:1553
#: ./docs/9.x/validation.md:1786
#: ./docs/10.x/validation.md:1914
#: ./docs/11.x/validation.md:1936
#: ./docs/master/validation.md:1920
#~ msgctxt "P"
#~ msgid "<a name=\"validating-when-present\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1554
#: ./docs/9.x/validation.md:1787
#: ./docs/10.x/validation.md:1915
#: ./docs/11.x/validation.md:1937
#: ./docs/master/validation.md:1921
msgctxt "H4"
msgid "Validating When Present"
msgstr ""

#: ./docs/8.x/validation.md:1556
#: ./docs/9.x/validation.md:1789
#: ./docs/10.x/validation.md:1917
#: ./docs/11.x/validation.md:1939
#: ./docs/master/validation.md:1923
msgctxt "P"
msgid "In some situations, you may wish to run validation checks against a field **only** if that field is present in the data being validated. To quickly accomplish this, add the `sometimes` rule to your rule list:"
msgstr ""

#: ./docs/8.x/validation.md:1558
#: ./docs/9.x/validation.md:1791
#: ./docs/10.x/validation.md:1919
#: ./docs/master/validation.md:1925
msgctxt "CODE"
msgid ""
"$v = Validator::make($data, [\n"
"    'email' => 'sometimes|required|email',\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:1562
#: ./docs/9.x/validation.md:1795
#: ./docs/10.x/validation.md:1923
#: ./docs/11.x/validation.md:1945
#: ./docs/master/validation.md:1929
msgctxt "P"
msgid "In the example above, the `email` field will only be validated if it is present in the `$data` array."
msgstr ""

#: ./docs/8.x/validation.md:1564
#: ./docs/9.x/validation.md:1798
#: ./docs/10.x/validation.md:1926
#: ./docs/11.x/validation.md:1948
#: ./docs/master/validation.md:1932
msgctxt "P"
msgid "If you are attempting to validate a field that should always be present but may be empty, check out [this note on optional fields](#a-note-on-optional-fields)."
msgstr ""

#: ./docs/9.x/validation.md:1564
#: ./docs/10.x/validation.md:1671
#: ./docs/11.x/validation.md:1688
#: ./docs/master/validation.md:1671
msgctxt "P"
msgid "If the field under validation is not missing or empty, all fields in *anotherfield* must be missing or empty. A field is \"empty\" if it meets one of the following criteria:"
msgstr ""

#: ./docs/8.x/validation.md:1566
#: ./docs/9.x/validation.md:1800
#: ./docs/10.x/validation.md:1928
#: ./docs/11.x/validation.md:1950
#: ./docs/master/validation.md:1934
#~ msgctxt "P"
#~ msgid "<a name=\"complex-conditional-validation\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1567
#: ./docs/9.x/validation.md:1801
#: ./docs/10.x/validation.md:1929
#: ./docs/11.x/validation.md:1951
#: ./docs/master/validation.md:1935
msgctxt "H4"
msgid "Complex Conditional Validation"
msgstr ""

#: ./docs/8.x/validation.md:1569
#: ./docs/9.x/validation.md:1803
#: ./docs/10.x/validation.md:1931
#: ./docs/11.x/validation.md:1953
#: ./docs/master/validation.md:1937
msgctxt "P"
msgid "Sometimes you may wish to add validation rules based on more complex conditional logic. For example, you may wish to require a given field only if another field has a greater value than 100. Or, you may need two fields to have a given value only when another field is present. Adding these validation rules doesn't have to be a pain. First, create a `Validator` instance with your *static rules* that never change:"
msgstr ""

#: ./docs/8.x/validation.md:1571
#: ./docs/9.x/validation.md:1805
#: ./docs/10.x/validation.md:1933
#: ./docs/11.x/validation.md:1955
#: ./docs/master/validation.md:1939
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Validator;\n"
"\n"
"$validator = Validator::make($request->all(), [\n"
"    'email' => 'required|email',\n"
"    'games' => 'required|numeric',\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:1578
#: ./docs/9.x/validation.md:1812
#: ./docs/10.x/validation.md:1940
#: ./docs/11.x/validation.md:1962
#: ./docs/master/validation.md:1946
msgctxt "P"
msgid "Let's assume our web application is for game collectors. If a game collector registers with our application and they own more than 100 games, we want them to explain why they own so many games. For example, perhaps they run a game resale shop, or maybe they just enjoy collecting games. To conditionally add this requirement, we can use the `sometimes` method on the `Validator` instance."
msgstr ""

#: ./docs/8.x/validation.md:1580
#: ./docs/9.x/validation.md:1814
msgctxt "CODE"
msgid ""
"$validator->sometimes('reason', 'required|max:500', function ($input) {\n"
"    return $input->games >= 100;\n"
"});"
msgstr ""

#: ./docs/8.x/validation.md:1584
#: ./docs/9.x/validation.md:1818
#: ./docs/10.x/validation.md:1948
#: ./docs/11.x/validation.md:1970
#: ./docs/master/validation.md:1954
msgctxt "P"
msgid "The first argument passed to the `sometimes` method is the name of the field we are conditionally validating. The second argument is a list of the rules we want to add. If the closure passed as the third argument returns `true`, the rules will be added. This method makes it a breeze to build complex conditional validations. You may even add conditional validations for several fields at once:"
msgstr ""

#: ./docs/8.x/validation.md:1586
#: ./docs/9.x/validation.md:1820
msgctxt "CODE"
msgid ""
"$validator->sometimes(['reason', 'cost'], 'required', function ($input) {\n"
"    return $input->games >= 100;\n"
"});"
msgstr ""

#: ./docs/9.x/validation.md:1588
#: ./docs/10.x/validation.md:1695
#: ./docs/11.x/validation.md:1712
#: ./docs/master/validation.md:1695
msgctxt "P"
msgid "The field under validation must be present in the input data and not empty. A field is \"empty\" if it meets one of the following criteria:"
msgstr ""

#: ./docs/8.x/validation.md:1590
#: ./docs/9.x/validation.md:1825
#: ./docs/10.x/validation.md:1955
#: ./docs/11.x/validation.md:1977
#: ./docs/master/validation.md:1961
msgctxt "P"
msgid "The `$input` parameter passed to your closure will be an instance of `Illuminate\\Support\\Fluent` and may be used to access your input and files under validation."
msgstr ""

#: ./docs/8.x/validation.md:1592
#: ./docs/9.x/validation.md:1827
#: ./docs/10.x/validation.md:1957
#: ./docs/11.x/validation.md:1979
#: ./docs/master/validation.md:1963
#~ msgctxt "P"
#~ msgid "<a name=\"complex-conditional-array-validation\"></a>"
#~ msgstr ""

#: ./docs/10.x/validation.md:1593
#: ./docs/11.x/validation.md:1610
#: ./docs/master/validation.md:1593
#~ msgctxt "P"
#~ msgid "<a name=\"rule-present-if\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1593
#: ./docs/9.x/validation.md:1828
#: ./docs/10.x/validation.md:1958
#: ./docs/11.x/validation.md:1980
#: ./docs/master/validation.md:1964
msgctxt "H4"
msgid "Complex Conditional Array Validation"
msgstr ""

#: ./docs/10.x/validation.md:1594
#: ./docs/11.x/validation.md:1611
#: ./docs/master/validation.md:1594
msgctxt "H4"
msgid "present_if:*anotherfield*,*value*,..."
msgstr ""

#: ./docs/8.x/validation.md:1595
#: ./docs/9.x/validation.md:1830
#: ./docs/10.x/validation.md:1960
#: ./docs/11.x/validation.md:1982
#: ./docs/master/validation.md:1966
msgctxt "P"
msgid "Sometimes you may want to validate a field based on another field in the same nested array whose index you do not know. In these situations, you may allow your closure to receive a second argument which will be the current individual item in the array being validated:"
msgstr ""

#: ./docs/10.x/validation.md:1596
#: ./docs/11.x/validation.md:1613
#: ./docs/master/validation.md:1596
msgctxt "P"
msgid "The field under validation must be present if the *anotherfield* field is equal to any *value*."
msgstr ""

#: ./docs/8.x/validation.md:1597
#: ./docs/9.x/validation.md:1832
msgctxt "CODE"
msgid ""
"$input = [\n"
"    'channels' => [\n"
"        [\n"
"            'type' => 'email',\n"
"            'address' => 'abigail@example.com',\n"
"        ],\n"
"        [\n"
"            'type' => 'url',\n"
"            'address' => 'https://example.com',\n"
"        ],\n"
"    ],\n"
"];\n"
"\n"
"$validator->sometimes('channels.*.address', 'email', function ($input, $item) {\n"
"    return $item->type === 'email';\n"
"});\n"
"\n"
"$validator->sometimes('channels.*.address', 'url', function ($input, $item) {\n"
"    return $item->type !== 'email';\n"
"});"
msgstr ""

#: ./docs/10.x/validation.md:1598
#: ./docs/11.x/validation.md:1615
#: ./docs/master/validation.md:1598
#~ msgctxt "P"
#~ msgid "<a name=\"rule-present-unless\"></a>"
#~ msgstr ""

#: ./docs/10.x/validation.md:1599
#: ./docs/11.x/validation.md:1616
#: ./docs/master/validation.md:1599
msgctxt "H4"
msgid "present_unless:*anotherfield*,*value*"
msgstr ""

#: ./docs/10.x/validation.md:1601
#: ./docs/11.x/validation.md:1618
#: ./docs/master/validation.md:1601
msgctxt "P"
msgid "The field under validation must be present unless the *anotherfield* field is equal to any *value*."
msgstr ""

#: ./docs/10.x/validation.md:1603
#: ./docs/11.x/validation.md:1620
#: ./docs/master/validation.md:1603
#~ msgctxt "P"
#~ msgid "<a name=\"rule-present-with\"></a>"
#~ msgstr ""

#: ./docs/10.x/validation.md:1604
#: ./docs/11.x/validation.md:1621
#: ./docs/master/validation.md:1604
msgctxt "H4"
msgid "present_with:*foo*,*bar*,..."
msgstr ""

#: ./docs/10.x/validation.md:1606
#: ./docs/11.x/validation.md:1623
#: ./docs/master/validation.md:1606
msgctxt "P"
msgid "The field under validation must be present *only if* any of the other specified fields are present."
msgstr ""

#: ./docs/9.x/validation.md:1606
#: ./docs/10.x/validation.md:1713
#: ./docs/11.x/validation.md:1730
#: ./docs/master/validation.md:1713
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Validator;\n"
"use Illuminate\\Validation\\Rule;\n"
"\n"
"Validator::make($request->all(), [\n"
"    'role_id' => Rule::requiredIf($request->user()->is_admin),\n"
"]);\n"
"\n"
"Validator::make($request->all(), [\n"
"    'role_id' => Rule::requiredIf(fn () => $request->user()->is_admin),\n"
"]);"
msgstr ""

#: ./docs/10.x/validation.md:1608
#: ./docs/11.x/validation.md:1625
#: ./docs/master/validation.md:1608
#~ msgctxt "P"
#~ msgid "<a name=\"rule-present-with-all\"></a>"
#~ msgstr ""

#: ./docs/10.x/validation.md:1609
#: ./docs/11.x/validation.md:1626
#: ./docs/master/validation.md:1609
msgctxt "H4"
msgid "present_with_all:*foo*,*bar*,..."
msgstr ""

#: ./docs/10.x/validation.md:1611
#: ./docs/11.x/validation.md:1628
#: ./docs/master/validation.md:1611
msgctxt "P"
msgid "The field under validation must be present *only if* all of the other specified fields are present."
msgstr ""

#: ./docs/8.x/validation.md:1618
#: ./docs/9.x/validation.md:1853
#: ./docs/10.x/validation.md:1983
#: ./docs/11.x/validation.md:2005
#: ./docs/master/validation.md:1989
msgctxt "P"
msgid "Like the `$input` parameter passed to the closure, the `$item` parameter is an instance of `Illuminate\\Support\\Fluent` when the attribute data is an array; otherwise, it is a string."
msgstr ""

#: ./docs/8.x/validation.md:1620
#: ./docs/9.x/validation.md:1855
#: ./docs/10.x/validation.md:1985
#: ./docs/11.x/validation.md:2007
#: ./docs/master/validation.md:1991
#~ msgctxt "P"
#~ msgid "<a name=\"validating-arrays\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1621
#: ./docs/9.x/validation.md:1856
#: ./docs/10.x/validation.md:1986
#: ./docs/11.x/validation.md:2008
#: ./docs/master/validation.md:1992
msgctxt "H2"
msgid "Validating Arrays"
msgstr ""

#: ./docs/8.x/validation.md:1623
#: ./docs/9.x/validation.md:1858
#: ./docs/10.x/validation.md:1988
#: ./docs/11.x/validation.md:2010
#: ./docs/master/validation.md:1994
msgctxt "P"
msgid "As discussed in the [`array` validation rule documentation](#rule-array), the `array` rule accepts a list of allowed array keys. If any additional keys are present within the array, validation will fail:"
msgstr ""

#: ./docs/8.x/validation.md:1641
#~ msgctxt "P"
#~ msgid "<a name=\"excluding-unvalidated-array-keys\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1642
msgctxt "H3"
msgid "Excluding Unvalidated Array Keys"
msgstr ""

#: ./docs/9.x/validation.md:1642
#: ./docs/10.x/validation.md:1754
#: ./docs/11.x/validation.md:1776
#: ./docs/master/validation.md:1754
#~ msgctxt "P"
#~ msgid "<a name=\"rule-required-array-keys\"></a>"
#~ msgstr ""

#: ./docs/9.x/validation.md:1643
#: ./docs/10.x/validation.md:1755
#: ./docs/11.x/validation.md:1777
#: ./docs/master/validation.md:1755
msgctxt "H4"
msgid "required_array_keys:*foo*,*bar*,..."
msgstr ""

#: ./docs/9.x/validation.md:1645
#: ./docs/10.x/validation.md:1757
#: ./docs/11.x/validation.md:1779
#: ./docs/master/validation.md:1757
msgctxt "P"
msgid "The field under validation must be an array and must contain at least the specified keys."
msgstr ""

#: ./docs/8.x/validation.md:1660
#: ./docs/9.x/validation.md:1876
#: ./docs/10.x/validation.md:2006
#: ./docs/11.x/validation.md:2028
#: ./docs/master/validation.md:2012
#~ msgctxt "P"
#~ msgid "<a name=\"validating-nested-array-input\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1661
#: ./docs/9.x/validation.md:1877
#: ./docs/10.x/validation.md:2007
#: ./docs/11.x/validation.md:2029
#: ./docs/master/validation.md:2013
msgctxt "H3"
msgid "Validating Nested Array Input"
msgstr ""

#: ./docs/8.x/validation.md:1663
#: ./docs/9.x/validation.md:1879
#: ./docs/10.x/validation.md:2009
#: ./docs/11.x/validation.md:2031
#: ./docs/master/validation.md:2015
msgctxt "P"
msgid "Validating nested array based form input fields doesn't have to be a pain. You may use \"dot notation\" to validate attributes within an array. For example, if the incoming HTTP request contains a `photos[profile]` field, you may validate it like so:"
msgstr ""

#: ./docs/8.x/validation.md:1665
#: ./docs/9.x/validation.md:1881
#: ./docs/10.x/validation.md:2011
#: ./docs/11.x/validation.md:2033
#: ./docs/master/validation.md:2017
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Validator;\n"
"\n"
"$validator = Validator::make($request->all(), [\n"
"    'photos.profile' => 'required|image',\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:1671
#: ./docs/9.x/validation.md:1887
#: ./docs/10.x/validation.md:2017
#: ./docs/11.x/validation.md:2039
#: ./docs/master/validation.md:2023
msgctxt "P"
msgid "You may also validate each element of an array. For example, to validate that each email in a given array input field is unique, you may do the following:"
msgstr ""

#: ./docs/8.x/validation.md:1673
#: ./docs/9.x/validation.md:1889
#: ./docs/10.x/validation.md:2019
#: ./docs/11.x/validation.md:2041
#: ./docs/master/validation.md:2025
msgctxt "CODE"
msgid ""
"$validator = Validator::make($request->all(), [\n"
"    'person.*.email' => 'email|unique:users',\n"
"    'person.*.first_name' => 'required_with:person.*.last_name',\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:1678
#: ./docs/9.x/validation.md:1894
#: ./docs/10.x/validation.md:2024
#: ./docs/11.x/validation.md:2046
#: ./docs/master/validation.md:2030
msgctxt "P"
msgid "Likewise, you may use the `*` character when specifying [custom validation messages in your language files](#custom-messages-for-specific-attributes), making it a breeze to use a single validation message for array based fields:"
msgstr ""

#: ./docs/8.x/validation.md:1680
#: ./docs/9.x/validation.md:1896
#: ./docs/10.x/validation.md:2026
#: ./docs/11.x/validation.md:2048
#: ./docs/master/validation.md:2032
msgctxt "CODE"
msgid ""
"'custom' => [\n"
"    'person.*.email' => [\n"
"        'unique' => 'Each person must have a unique email address',\n"
"    ]\n"
"],"
msgstr ""

#: ./docs/8.x/validation.md:1686
#: ./docs/9.x/validation.md:1990
#: ./docs/10.x/validation.md:2136
#: ./docs/11.x/validation.md:2158
#: ./docs/master/validation.md:2142
#~ msgctxt "P"
#~ msgid "<a name=\"validating-passwords\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1687
#: ./docs/9.x/validation.md:1991
#: ./docs/10.x/validation.md:2137
#: ./docs/11.x/validation.md:2159
#: ./docs/master/validation.md:2143
msgctxt "H2"
msgid "Validating Passwords"
msgstr ""

#: ./docs/8.x/validation.md:1689
#: ./docs/9.x/validation.md:1993
#: ./docs/10.x/validation.md:2139
#: ./docs/11.x/validation.md:2161
#: ./docs/master/validation.md:2145
msgctxt "P"
msgid "To ensure that passwords have an adequate level of complexity, you may use Laravel's `Password` rule object:"
msgstr ""

#: ./docs/8.x/validation.md:1691
#: ./docs/9.x/validation.md:1995
#: ./docs/10.x/validation.md:2141
#: ./docs/11.x/validation.md:2163
#: ./docs/master/validation.md:2147
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Validator;\n"
"use Illuminate\\Validation\\Rules\\Password;\n"
"\n"
"$validator = Validator::make($request->all(), [\n"
"    'password' => ['required', 'confirmed', Password::min(8)],\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:1698
#: ./docs/9.x/validation.md:2002
#: ./docs/10.x/validation.md:2148
#: ./docs/11.x/validation.md:2170
#: ./docs/master/validation.md:2154
msgctxt "P"
msgid "The `Password` rule object allows you to easily customize the password complexity requirements for your application, such as specifying that passwords require at least one letter, number, symbol, or characters with mixed casing:"
msgstr ""

#: ./docs/8.x/validation.md:1700
#: ./docs/9.x/validation.md:2004
#: ./docs/10.x/validation.md:2150
#: ./docs/11.x/validation.md:2172
#: ./docs/master/validation.md:2156
msgctxt "CODE"
msgid ""
"// Require at least 8 characters...\n"
"Password::min(8)\n"
"\n"
"// Require at least one letter...\n"
"Password::min(8)->letters()\n"
"\n"
"// Require at least one uppercase and one lowercase letter...\n"
"Password::min(8)->mixedCase()\n"
"\n"
"// Require at least one number...\n"
"Password::min(8)->numbers()\n"
"\n"
"// Require at least one symbol...\n"
"Password::min(8)->symbols()"
msgstr ""

#: ./docs/8.x/validation.md:1715
#: ./docs/9.x/validation.md:2019
#: ./docs/10.x/validation.md:2165
#: ./docs/11.x/validation.md:2187
#: ./docs/master/validation.md:2171
msgctxt "P"
msgid "In addition, you may ensure that a password has not been compromised in a public password data breach leak using the `uncompromised` method:"
msgstr ""

#: ./docs/8.x/validation.md:1717
#: ./docs/9.x/validation.md:2021
#: ./docs/10.x/validation.md:2167
#: ./docs/11.x/validation.md:2189
#: ./docs/master/validation.md:2173
msgctxt "CODE"
msgid "Password::min(8)->uncompromised()"
msgstr ""

#: ./docs/8.x/validation.md:1719
#: ./docs/9.x/validation.md:2023
#: ./docs/10.x/validation.md:2169
#: ./docs/11.x/validation.md:2191
#: ./docs/master/validation.md:2175
msgctxt "P"
msgid "Internally, the `Password` rule object uses the [k-Anonymity](https://en.wikipedia.org/wiki/K-anonymity) model to determine if a password has been leaked via the [haveibeenpwned.com](https://haveibeenpwned.com) service without sacrificing the user's privacy or security."
msgstr ""

#: ./docs/8.x/validation.md:1721
#: ./docs/9.x/validation.md:2025
#: ./docs/10.x/validation.md:2171
#: ./docs/11.x/validation.md:2193
#: ./docs/master/validation.md:2177
msgctxt "P"
msgid "By default, if a password appears at least once in a data leak, it will be considered compromised. You can customize this threshold using the first argument of the `uncompromised` method:"
msgstr ""

#: ./docs/8.x/validation.md:1723
#: ./docs/9.x/validation.md:2027
#: ./docs/10.x/validation.md:2173
#: ./docs/11.x/validation.md:2195
#: ./docs/master/validation.md:2179
msgctxt "CODE"
msgid ""
"// Ensure the password appears less than 3 times in the same data leak...\n"
"Password::min(8)->uncompromised(3);"
msgstr ""

#: ./docs/10.x/validation.md:1724
#: ./docs/11.x/validation.md:1741
#: ./docs/master/validation.md:1724
#~ msgctxt "P"
#~ msgid "<a name=\"rule-required-if-accepted\"></a>"
#~ msgstr ""

#: ./docs/10.x/validation.md:1725
#: ./docs/11.x/validation.md:1742
#: ./docs/master/validation.md:1725
msgctxt "H4"
msgid "required_if_accepted:*anotherfield*,..."
msgstr ""

#: ./docs/8.x/validation.md:1726
#: ./docs/9.x/validation.md:2030
#: ./docs/10.x/validation.md:2176
#: ./docs/11.x/validation.md:2198
#: ./docs/master/validation.md:2182
msgctxt "P"
msgid "Of course, you may chain all the methods in the examples above:"
msgstr ""

#: ./docs/10.x/validation.md:1727
#: ./docs/11.x/validation.md:1744
#: ./docs/master/validation.md:1727
msgctxt "P"
msgid "The field under validation must be present and not empty if the *anotherfield* field is equal to `\"yes\"`, `\"on\"`, `1`, `\"1\"`, `true`, or `\"true\"`."
msgstr ""

#: ./docs/8.x/validation.md:1728
#: ./docs/9.x/validation.md:2032
#: ./docs/10.x/validation.md:2178
#: ./docs/11.x/validation.md:2200
#: ./docs/master/validation.md:2184
msgctxt "CODE"
msgid ""
"Password::min(8)\n"
"    ->letters()\n"
"    ->mixedCase()\n"
"    ->numbers()\n"
"    ->symbols()\n"
"    ->uncompromised()"
msgstr ""

#: ./docs/8.x/validation.md:1735
#: ./docs/9.x/validation.md:2039
#: ./docs/10.x/validation.md:2185
#: ./docs/11.x/validation.md:2207
#: ./docs/master/validation.md:2191
#~ msgctxt "P"
#~ msgid "<a name=\"defining-default-password-rules\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1736
#: ./docs/9.x/validation.md:2040
#: ./docs/10.x/validation.md:2186
#: ./docs/11.x/validation.md:2208
#: ./docs/master/validation.md:2192
msgctxt "H4"
msgid "Defining Default Password Rules"
msgstr ""

#: ./docs/8.x/validation.md:1738
#: ./docs/9.x/validation.md:2042
#: ./docs/10.x/validation.md:2188
#: ./docs/11.x/validation.md:2210
#: ./docs/master/validation.md:2194
msgctxt "P"
msgid "You may find it convenient to specify the default validation rules for passwords in a single location of your application. You can easily accomplish this using the `Password::defaults` method, which accepts a closure. The closure given to the `defaults` method should return the default configuration of the Password rule. Typically, the `defaults` rule should be called within the `boot` method of one of your application's service providers:"
msgstr ""

#: ./docs/8.x/validation.md:1740
#: ./docs/9.x/validation.md:2044
msgctxt "CODE: php"
msgid ""
"use Illuminate\\Validation\\Rules\\Password;\n"
"\n"
"/**\n"
" * Bootstrap any application services.\n"
" *\n"
" * @return void\n"
" */\n"
"public function boot()\n"
"{\n"
"    Password::defaults(function () {\n"
"        $rule = Password::min(8);\n"
"\n"
"        return $this->app->isProduction()\n"
"                    ? $rule->mixedCase()->uncompromised()\n"
"                    : $rule;\n"
"    });\n"
"}"
msgstr ""

#: ./docs/9.x/validation.md:1740
msgctxt "CODE"
msgid "'email' => Rule::unique('users')->where(fn ($query) => $query->where('account_id', 1))"
msgstr ""

#: ./docs/9.x/validation.md:1742
#: ./docs/10.x/validation.md:1862
#: ./docs/11.x/validation.md:1884
#: ./docs/master/validation.md:1862
#~ msgctxt "P"
#~ msgid "<a name=\"rule-uppercase\"></a>"
#~ msgstr ""

#: ./docs/9.x/validation.md:1743
#: ./docs/10.x/validation.md:1863
#: ./docs/11.x/validation.md:1885
#: ./docs/master/validation.md:1863
msgctxt "H4"
msgid "uppercase"
msgstr ""

#: ./docs/9.x/validation.md:1745
#: ./docs/10.x/validation.md:1865
#: ./docs/11.x/validation.md:1887
#: ./docs/master/validation.md:1865
msgctxt "P"
msgid "The field under validation must be uppercase."
msgstr ""

#: ./docs/11.x/validation.md:1746
#~ msgctxt "P"
#~ msgid "<a name=\"rule-required-if-declined\"></a>"
#~ msgstr ""

#: ./docs/11.x/validation.md:1747
msgctxt "H4"
msgid "required_if_declined:*anotherfield*,..."
msgstr ""

#: ./docs/11.x/validation.md:1749
msgctxt "P"
msgid "The field under validation must be present and not empty if the *anotherfield* field is equal to `\"no\"`, `\"off\"`, `0`, `\"0\"`, `false`, or `\"false\"`."
msgstr ""

#: ./docs/9.x/validation.md:1752
#: ./docs/10.x/validation.md:1880
#: ./docs/11.x/validation.md:1902
#: ./docs/master/validation.md:1880
#~ msgctxt "P"
#~ msgid "<a name=\"rule-ulid\"></a>"
#~ msgstr ""

#: ./docs/9.x/validation.md:1753
#: ./docs/10.x/validation.md:1881
#: ./docs/11.x/validation.md:1903
#: ./docs/master/validation.md:1881
msgctxt "H4"
msgid "ulid"
msgstr ""

#: ./docs/9.x/validation.md:1755
#: ./docs/10.x/validation.md:1883
#: ./docs/11.x/validation.md:1905
#: ./docs/master/validation.md:1883
msgctxt "P"
msgid "The field under validation must be a valid [Universally Unique Lexicographically Sortable Identifier](https://github.com/ulid/spec) (ULID)."
msgstr ""

#: ./docs/8.x/validation.md:1760
#: ./docs/9.x/validation.md:2064
#: ./docs/10.x/validation.md:2208
#: ./docs/11.x/validation.md:2230
#: ./docs/master/validation.md:2214
msgctxt "P"
msgid "Then, when you would like to apply the default rules to a particular password undergoing validation, you may invoke the `defaults` method with no arguments:"
msgstr ""

#: ./docs/8.x/validation.md:1762
#: ./docs/9.x/validation.md:2066
#: ./docs/10.x/validation.md:2210
#: ./docs/11.x/validation.md:2232
#: ./docs/master/validation.md:2216
msgctxt "CODE"
msgid "'password' => ['required', Password::defaults()],"
msgstr ""

#: ./docs/8.x/validation.md:1764
#: ./docs/9.x/validation.md:2068
#: ./docs/10.x/validation.md:2212
#: ./docs/11.x/validation.md:2234
#: ./docs/master/validation.md:2218
msgctxt "P"
msgid "Occasionally, you may want to attach additional validation rules to your default password validation rules. You may use the `rules` method to accomplish this:"
msgstr ""

#: ./docs/8.x/validation.md:1766
#: ./docs/9.x/validation.md:2070
#: ./docs/10.x/validation.md:2214
#: ./docs/11.x/validation.md:2236
#: ./docs/master/validation.md:2220
msgctxt "CODE"
msgid ""
"use App\\Rules\\ZxcvbnRule;\n"
"\n"
"Password::defaults(function () {\n"
"    $rule = Password::min(8)->rules([new ZxcvbnRule]);\n"
"\n"
"    // ...\n"
"});"
msgstr ""

#: ./docs/8.x/validation.md:1774
#: ./docs/9.x/validation.md:2078
#: ./docs/10.x/validation.md:2222
#: ./docs/11.x/validation.md:2244
#: ./docs/master/validation.md:2228
#~ msgctxt "P"
#~ msgid "<a name=\"custom-validation-rules\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1775
#: ./docs/9.x/validation.md:2079
#: ./docs/10.x/validation.md:2223
#: ./docs/11.x/validation.md:2245
#: ./docs/master/validation.md:2229
msgctxt "H2"
msgid "Custom Validation Rules"
msgstr ""

#: ./docs/8.x/validation.md:1777
#: ./docs/9.x/validation.md:2081
#: ./docs/10.x/validation.md:2225
#: ./docs/11.x/validation.md:2247
#: ./docs/master/validation.md:2231
#~ msgctxt "P"
#~ msgid "<a name=\"using-rule-objects\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1778
#: ./docs/9.x/validation.md:2082
#: ./docs/10.x/validation.md:2226
#: ./docs/11.x/validation.md:2248
#: ./docs/master/validation.md:2232
msgctxt "H3"
msgid "Using Rule Objects"
msgstr ""

#: ./docs/8.x/validation.md:1780
#: ./docs/9.x/validation.md:2084
#: ./docs/10.x/validation.md:2228
#: ./docs/11.x/validation.md:2250
#: ./docs/master/validation.md:2234
msgctxt "P"
msgid "Laravel provides a variety of helpful validation rules; however, you may wish to specify some of your own. One method of registering custom validation rules is using rule objects. To generate a new rule object, you may use the `make:rule` Artisan command. Let's use this command to generate a rule that verifies a string is uppercase. Laravel will place the new rule in the `app/Rules` directory. If this directory does not exist, Laravel will create it when you execute the Artisan command to create your rule:"
msgstr ""

#: ./docs/8.x/validation.md:1782
#: ./docs/10.x/validation.md:2230
#: ./docs/11.x/validation.md:2252
#: ./docs/master/validation.md:2236
msgctxt "CODE"
msgid "php artisan make:rule Uppercase"
msgstr ""

#: ./docs/8.x/validation.md:1784
msgctxt "P"
msgid "Once the rule has been created, we are ready to define its behavior. A rule object contains two methods: `passes` and `message`. The `passes` method receives the attribute value and name, and should return `true` or `false` depending on whether the attribute value is valid or not. The `message` method should return the validation error message that should be used when validation fails:"
msgstr ""

#: ./docs/8.x/validation.md:1786
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Rules;\n"
"\n"
"use Illuminate\\Contracts\\Validation\\Rule;\n"
"\n"
"class Uppercase implements Rule\n"
"{\n"
"    /**\n"
"     * Determine if the validation rule passes.\n"
"     *\n"
"     * @param  string  $attribute\n"
"     * @param  mixed  $value\n"
"     * @return bool\n"
"     */\n"
"    public function passes($attribute, $value)\n"
"    {\n"
"        return strtoupper($value) === $value;\n"
"    }\n"
"\n"
"    /**\n"
"     * Get the validation error message.\n"
"     *\n"
"     * @return string\n"
"     */\n"
"    public function message()\n"
"    {\n"
"        return 'The :attribute must be uppercase.';\n"
"    }\n"
"}"
msgstr ""

#: ./docs/10.x/validation.md:1794
#: ./docs/11.x/validation.md:1816
#: ./docs/master/validation.md:1794
msgctxt "P"
msgid "The field under validation must be a valid timezone identifier according to the `DateTimeZone::listIdentifiers` method."
msgstr ""

#: ./docs/10.x/validation.md:1796
#: ./docs/11.x/validation.md:1818
#: ./docs/master/validation.md:1796
msgctxt "P"
msgid "The arguments [accepted by the `DateTimeZone::listIdentifiers` method](https://www.php.net/manual/en/datetimezone.listidentifiers.php) may also be provided to this validation rule:"
msgstr ""

#: ./docs/10.x/validation.md:1798
#: ./docs/11.x/validation.md:1820
#: ./docs/master/validation.md:1798
msgctxt "CODE"
msgid ""
"'timezone' => 'required|timezone:all';\n"
"\n"
"'timezone' => 'required|timezone:Africa';\n"
"\n"
"'timezone' => 'required|timezone:per_country,US';"
msgstr ""

#: ./docs/10.x/validation.md:1809
#: ./docs/11.x/validation.md:1831
#: ./docs/master/validation.md:1809
msgctxt "P"
msgid "**Specifying a Custom Table / Column Name:**"
msgstr ""

#: ./docs/8.x/validation.md:1817
msgctxt "P"
msgid "You may call the `trans` helper from your `message` method if you would like to return an error message from your translation files:"
msgstr ""

#: ./docs/10.x/validation.md:1819
#: ./docs/11.x/validation.md:1841
#: ./docs/master/validation.md:1819
msgctxt "P"
msgid "**Specifying a Custom Database Connection**"
msgstr ""

#: ./docs/8.x/validation.md:1819
msgctxt "CODE"
msgid ""
"/**\n"
" * Get the validation error message.\n"
" *\n"
" * @return string\n"
" */\n"
"public function message()\n"
"{\n"
"    return trans('validation.uppercase');\n"
"}"
msgstr ""

#: ./docs/10.x/validation.md:1825
#: ./docs/11.x/validation.md:1847
#: ./docs/master/validation.md:1825
msgctxt "P"
msgid "**Forcing a Unique Rule to Ignore a Given ID:**"
msgstr ""

#: ./docs/8.x/validation.md:1829
#: ./docs/9.x/validation.md:2116
#: ./docs/10.x/validation.md:2256
#: ./docs/11.x/validation.md:2278
#: ./docs/master/validation.md:2262
msgctxt "P"
msgid "Once the rule has been defined, you may attach it to a validator by passing an instance of the rule object with your other validation rules:"
msgstr ""

#: ./docs/8.x/validation.md:1831
#: ./docs/9.x/validation.md:2118
#: ./docs/10.x/validation.md:2258
#: ./docs/11.x/validation.md:2280
#: ./docs/master/validation.md:2264
msgctxt "CODE"
msgid ""
"use App\\Rules\\Uppercase;\n"
"\n"
"$request->validate([\n"
"    'name' => ['required', 'string', new Uppercase],\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:1837
#: ./docs/9.x/validation.md:2138
#: ./docs/10.x/validation.md:2278
#: ./docs/11.x/validation.md:2300
#: ./docs/master/validation.md:2284
msgctxt "H4"
msgid "Accessing Additional Data"
msgstr ""

#: ./docs/8.x/validation.md:1839
#: ./docs/9.x/validation.md:2140
#: ./docs/10.x/validation.md:2280
#: ./docs/11.x/validation.md:2302
#: ./docs/master/validation.md:2286
msgctxt "P"
msgid "If your custom validation rule class needs to access all of the other data undergoing validation, your rule class may implement the `Illuminate\\Contracts\\Validation\\DataAwareRule` interface. This interface requires your class to define a `setData` method. This method will automatically be invoked by Laravel (before validation proceeds) with all of the data under validation:"
msgstr ""

#: ./docs/8.x/validation.md:1841
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Rules;\n"
"\n"
"use Illuminate\\Contracts\\Validation\\Rule;\n"
"use Illuminate\\Contracts\\Validation\\DataAwareRule;\n"
"\n"
"class Uppercase implements Rule, DataAwareRule\n"
"{\n"
"    /**\n"
"     * All of the data under validation.\n"
"     *\n"
"     * @var array\n"
"     */\n"
"    protected $data = [];\n"
"\n"
"    // ...\n"
"\n"
"    /**\n"
"     * Set the data under validation.\n"
"     *\n"
"     * @param  array  $data\n"
"     * @return $this\n"
"     */\n"
"    public function setData($data)\n"
"    {\n"
"        $this->data = $data;\n"
"\n"
"        return $this;\n"
"    }\n"
"}"
msgstr ""

#: ./docs/10.x/validation.md:1854
#: ./docs/11.x/validation.md:1876
#: ./docs/master/validation.md:1854
msgctxt "CODE"
msgid "Rule::unique('users', 'email_address')->ignore($user->id)"
msgstr ""

#: ./docs/10.x/validation.md:1860
#: ./docs/11.x/validation.md:1882
#: ./docs/master/validation.md:1860
msgctxt "CODE"
msgid "'email' => Rule::unique('users')->where(fn (Builder $query) => $query->where('account_id', 1))"
msgstr ""

#: ./docs/10.x/validation.md:1872
#: ./docs/11.x/validation.md:1894
#: ./docs/master/validation.md:1872
msgctxt "P"
msgid "If you would like to specify the URL protocols that should be considered valid, you may pass the protocols as validation rule parameters:"
msgstr ""

#: ./docs/8.x/validation.md:1873
#: ./docs/9.x/validation.md:2174
#: ./docs/10.x/validation.md:2313
#: ./docs/11.x/validation.md:2335
#: ./docs/master/validation.md:2319
msgctxt "P"
msgid "Or, if your validation rule requires access to the validator instance performing the validation, you may implement the `ValidatorAwareRule` interface:"
msgstr ""

#: ./docs/10.x/validation.md:1874
#: ./docs/11.x/validation.md:1896
#: ./docs/master/validation.md:1874
msgctxt "CODE: php"
msgid ""
"'url' => 'url:http,https',\n"
"\n"
"'game' => 'url:minecraft,steam',"
msgstr ""

#: ./docs/8.x/validation.md:1875
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Rules;\n"
"\n"
"use Illuminate\\Contracts\\Validation\\Rule;\n"
"use Illuminate\\Contracts\\Validation\\ValidatorAwareRule;\n"
"\n"
"class Uppercase implements Rule, ValidatorAwareRule\n"
"{\n"
"    /**\n"
"     * The validator instance.\n"
"     *\n"
"     * @var \\Illuminate\\Validation\\Validator\n"
"     */\n"
"    protected $validator;\n"
"\n"
"    // ...\n"
"\n"
"    /**\n"
"     * Set the current validator.\n"
"     *\n"
"     * @param  \\Illuminate\\Validation\\Validator  $validator\n"
"     * @return $this\n"
"     */\n"
"    public function setValidator($validator)\n"
"    {\n"
"        $this->validator = $validator;\n"
"\n"
"        return $this;\n"
"    }\n"
"}"
msgstr ""

#: ./docs/master/validation.md:1890
msgctxt "P"
msgid "You may also validate that the given UUID matches a UUID specification by version:"
msgstr ""

#: ./docs/master/validation.md:1892
msgctxt "CODE: php"
msgid "'uuid' => 'uuid:4'"
msgstr ""

#: ./docs/9.x/validation.md:1902
#: ./docs/10.x/validation.md:2032
#: ./docs/11.x/validation.md:2054
#: ./docs/master/validation.md:2038
#~ msgctxt "P"
#~ msgid "<a name=\"accessing-nested-array-data\"></a>"
#~ msgstr ""

#: ./docs/9.x/validation.md:1903
#: ./docs/10.x/validation.md:2033
#: ./docs/11.x/validation.md:2055
#: ./docs/master/validation.md:2039
msgctxt "H4"
msgid "Accessing Nested Array Data"
msgstr ""

#: ./docs/9.x/validation.md:1905
#: ./docs/10.x/validation.md:2035
#: ./docs/11.x/validation.md:2057
#: ./docs/master/validation.md:2041
msgctxt "P"
msgid "Sometimes you may need to access the value for a given nested array element when assigning validation rules to the attribute. You may accomplish this using the `Rule::forEach` method. The `forEach` method accepts a closure that will be invoked for each iteration of the array attribute under validation and will receive the attribute's value and explicit, fully-expanded attribute name. The closure should return an array of rules to assign to the array element:"
msgstr ""

#: ./docs/8.x/validation.md:1907
#: ./docs/9.x/validation.md:2208
#: ./docs/10.x/validation.md:2345
#: ./docs/11.x/validation.md:2367
#: ./docs/master/validation.md:2351
#~ msgctxt "P"
#~ msgid "<a name=\"using-closures\"></a>"
#~ msgstr ""

#: ./docs/9.x/validation.md:1907
msgctxt "CODE"
msgid ""
"use App\\Rules\\HasPermission;\n"
"use Illuminate\\Support\\Facades\\Validator;\n"
"use Illuminate\\Validation\\Rule;\n"
"\n"
"$validator = Validator::make($request->all(), [\n"
"    'companies.*.id' => Rule::forEach(function ($value, $attribute) {\n"
"        return [\n"
"            Rule::exists(Company::class, 'id'),\n"
"            new HasPermission('manage-company', $value),\n"
"        ];\n"
"    }),\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:1908
#: ./docs/9.x/validation.md:2209
#: ./docs/10.x/validation.md:2346
#: ./docs/11.x/validation.md:2368
#: ./docs/master/validation.md:2352
msgctxt "H3"
msgid "Using Closures"
msgstr ""

#: ./docs/8.x/validation.md:1910
#: ./docs/9.x/validation.md:2211
#: ./docs/10.x/validation.md:2348
#: ./docs/11.x/validation.md:2370
#: ./docs/master/validation.md:2354
msgctxt "P"
msgid "If you only need the functionality of a custom rule once throughout your application, you may use a closure instead of a rule object. The closure receives the attribute's name, the attribute's value, and a `$fail` callback that should be called if validation fails:"
msgstr ""

#: ./docs/8.x/validation.md:1912
#: ./docs/9.x/validation.md:2213
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Validator;\n"
"\n"
"$validator = Validator::make($request->all(), [\n"
"    'title' => [\n"
"        'required',\n"
"        'max:255',\n"
"        function ($attribute, $value, $fail) {\n"
"            if ($value === 'foo') {\n"
"                $fail('The '.$attribute.' is invalid.');\n"
"            }\n"
"        },\n"
"    ],\n"
"]);"
msgstr ""

#: ./docs/9.x/validation.md:1920
#: ./docs/10.x/validation.md:2050
#: ./docs/11.x/validation.md:2072
#: ./docs/master/validation.md:2056
#~ msgctxt "P"
#~ msgid "<a name=\"error-message-indexes-and-positions\"></a>"
#~ msgstr ""

#: ./docs/9.x/validation.md:1921
msgctxt "H3"
msgid "Error Message Indexes & Positions"
msgstr ""

#: ./docs/9.x/validation.md:1923
#: ./docs/10.x/validation.md:2053
#: ./docs/11.x/validation.md:2075
#: ./docs/master/validation.md:2059
msgctxt "P"
msgid "When validating arrays, you may want to reference the index or position of a particular item that failed validation within the error message displayed by your application. To accomplish this, you may include the `:index` (starts from `0`) and `:position` (starts from `1`) placeholders within your [custom validation message](#manual-customizing-the-error-messages):"
msgstr ""

#: ./docs/9.x/validation.md:1925
#: ./docs/10.x/validation.md:2055
#: ./docs/11.x/validation.md:2077
#: ./docs/master/validation.md:2061
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Validator;\n"
"\n"
"$input = [\n"
"    'photos' => [\n"
"        [\n"
"            'name' => 'BeachVacation.jpg',\n"
"            'description' => 'A photo of my beach vacation!',\n"
"        ],\n"
"        [\n"
"            'name' => 'GrandCanyon.jpg',\n"
"            'description' => '',\n"
"        ],\n"
"    ],\n"
"];\n"
"\n"
"Validator::validate($input, [\n"
"    'photos.*.description' => 'required',\n"
"], [\n"
"    'photos.*.description.required' => 'Please describe photo #:position.',\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:1926
#: ./docs/9.x/validation.md:2227
#: ./docs/10.x/validation.md:2365
#: ./docs/11.x/validation.md:2387
#: ./docs/master/validation.md:2371
#~ msgctxt "P"
#~ msgid "<a name=\"implicit-rules\"></a>"
#~ msgstr ""

#: ./docs/8.x/validation.md:1927
#: ./docs/9.x/validation.md:2228
#: ./docs/10.x/validation.md:2366
#: ./docs/11.x/validation.md:2388
#: ./docs/master/validation.md:2372
msgctxt "H3"
msgid "Implicit Rules"
msgstr ""

#: ./docs/8.x/validation.md:1929
#: ./docs/9.x/validation.md:2230
#: ./docs/10.x/validation.md:2368
#: ./docs/11.x/validation.md:2390
#: ./docs/master/validation.md:2374
msgctxt "P"
msgid "By default, when an attribute being validated is not present or contains an empty string, normal validation rules, including custom rules, are not run. For example, the [`unique`](#rule-unique) rule will not be run against an empty string:"
msgstr ""

#: ./docs/8.x/validation.md:1931
#: ./docs/9.x/validation.md:2232
#: ./docs/10.x/validation.md:2370
#: ./docs/11.x/validation.md:2392
#: ./docs/master/validation.md:2376
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Validator;\n"
"\n"
"$rules = ['name' => 'unique:users,name'];\n"
"\n"
"$input = ['name' => ''];\n"
"\n"
"Validator::make($input, $rules)->passes(); // true"
msgstr ""

#: ./docs/8.x/validation.md:1939
msgctxt "P"
msgid "For a custom rule to run even when an attribute is empty, the rule must imply that the attribute is required. To create an \"implicit\" rule, implement the `Illuminate\\Contracts\\Validation\\ImplicitRule` interface. This interface serves as a \"marker interface\" for the validator; therefore, it does not contain any additional methods you need to implement beyond the methods required by the typical `Rule` interface."
msgstr ""

#: ./docs/11.x/validation.md:1941
msgctxt "CODE"
msgid ""
"$validator = Validator::make($data, [\n"
"    'email' => 'sometimes|required|email',\n"
"]);"
msgstr ""

#: ./docs/8.x/validation.md:1941
msgctxt "P"
msgid "To generate a new implicit rule object, you may use the `make:rule` Artisan command with the `--implicit` option :"
msgstr ""

#: ./docs/10.x/validation.md:1942
#: ./docs/11.x/validation.md:1964
#: ./docs/master/validation.md:1948
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Fluent;\n"
"\n"
"$validator->sometimes('reason', 'required|max:500', function (Fluent $input) {\n"
"    return $input->games >= 100;\n"
"});"
msgstr ""

#: ./docs/8.x/validation.md:1943
msgctxt "CODE"
msgid " php artisan make:rule Uppercase --implicit"
msgstr ""

#: ./docs/8.x/validation.md:1945
#: ./docs/9.x/validation.md:2247
#: ./docs/10.x/validation.md:2385
#: ./docs/11.x/validation.md:2407
#: ./docs/master/validation.md:2391
msgctxt "P"
msgid "An \"implicit\" rule only *implies* that the attribute is required. Whether it actually invalidates a missing or empty attribute is up to you."
msgstr ""

#: ./docs/9.x/validation.md:1946
#: ./docs/10.x/validation.md:2076
#: ./docs/11.x/validation.md:2098
#: ./docs/master/validation.md:2082
msgctxt "P"
msgid "Given the example above, validation will fail and the user will be presented with the following error of *\"Please describe photo #2.\"*"
msgstr ""

#: ./docs/9.x/validation.md:1948
#: ./docs/10.x/validation.md:2082
#: ./docs/11.x/validation.md:2104
#: ./docs/master/validation.md:2088
#~ msgctxt "P"
#~ msgid "<a name=\"validating-files\"></a>"
#~ msgstr ""

#: ./docs/9.x/validation.md:1949
#: ./docs/10.x/validation.md:2083
#: ./docs/11.x/validation.md:2105
#: ./docs/master/validation.md:2089
msgctxt "H2"
msgid "Validating Files"
msgstr ""

#: ./docs/10.x/validation.md:1950
#: ./docs/11.x/validation.md:1972
#: ./docs/master/validation.md:1956
msgctxt "CODE"
msgid ""
"$validator->sometimes(['reason', 'cost'], 'required', function (Fluent $input) {\n"
"    return $input->games >= 100;\n"
"});"
msgstr ""

#: ./docs/9.x/validation.md:1951
#: ./docs/10.x/validation.md:2085
#: ./docs/11.x/validation.md:2107
#: ./docs/master/validation.md:2091
msgctxt "P"
msgid "Laravel provides a variety of validation rules that may be used to validate uploaded files, such as `mimes`, `image`, `min`, and `max`. While you are free to specify these rules individually when validating files, Laravel also offers a fluent file validation rule builder that you may find convenient:"
msgstr ""

#: ./docs/9.x/validation.md:1953
#: ./docs/10.x/validation.md:2087
#: ./docs/11.x/validation.md:2109
#: ./docs/master/validation.md:2093
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Validator;\n"
"use Illuminate\\Validation\\Rules\\File;\n"
"\n"
"Validator::validate($input, [\n"
"    'attachment' => [\n"
"        'required',\n"
"        File::types(['mp3', 'wav'])\n"
"            ->min(1024)\n"
"            ->max(12 * 1024),\n"
"    ],\n"
"]);"
msgstr ""

#: ./docs/10.x/validation.md:1962
#: ./docs/11.x/validation.md:1984
#: ./docs/master/validation.md:1968
msgctxt "CODE"
msgid ""
"$input = [\n"
"    'channels' => [\n"
"        [\n"
"            'type' => 'email',\n"
"            'address' => 'abigail@example.com',\n"
"        ],\n"
"        [\n"
"            'type' => 'url',\n"
"            'address' => 'https://example.com',\n"
"        ],\n"
"    ],\n"
"];\n"
"\n"
"$validator->sometimes('channels.*.address', 'email', function (Fluent $input, Fluent $item) {\n"
"    return $item->type === 'email';\n"
"});\n"
"\n"
"$validator->sometimes('channels.*.address', 'url', function (Fluent $input, Fluent $item) {\n"
"    return $item->type !== 'email';\n"
"});"
msgstr ""

#: ./docs/9.x/validation.md:1965
#: ./docs/10.x/validation.md:2099
#: ./docs/11.x/validation.md:2121
#: ./docs/master/validation.md:2105
msgctxt "P"
msgid "If your application accepts images uploaded by your users, you may use the `File` rule's `image` constructor method to indicate that the uploaded file should be an image. In addition, the `dimensions` rule may be used to limit the dimensions of the image:"
msgstr ""

#: ./docs/9.x/validation.md:1967
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Validator;\n"
"use Illuminate\\Validation\\Rules\\File;\n"
"\n"
"Validator::validate($input, [\n"
"    'photo' => [\n"
"        'required',\n"
"        File::image()\n"
"            ->min(1024)\n"
"            ->max(12 * 1024)\n"
"            ->dimensions(Rule::dimensions()->maxWidth(1000)->maxHeight(500)),\n"
"    ],\n"
"]);"
msgstr ""

#: ./docs/9.x/validation.md:1981
#: ./docs/10.x/validation.md:2116
#: ./docs/11.x/validation.md:2138
#: ./docs/master/validation.md:2122
msgctxt "P"
msgid "More information regarding validating image dimensions may be found in the [dimension rule documentation](#rule-dimensions)."
msgstr ""

#: ./docs/9.x/validation.md:1983
#: ./docs/10.x/validation.md:2129
#: ./docs/11.x/validation.md:2151
#: ./docs/master/validation.md:2135
#~ msgctxt "P"
#~ msgid "<a name=\"validating-files-file-types\"></a>"
#~ msgstr ""

#: ./docs/9.x/validation.md:1984
#: ./docs/10.x/validation.md:2130
#: ./docs/11.x/validation.md:2152
#: ./docs/master/validation.md:2136
msgctxt "H4"
msgid "File Types"
msgstr ""

#: ./docs/9.x/validation.md:1986
#: ./docs/10.x/validation.md:2132
#: ./docs/11.x/validation.md:2154
#: ./docs/master/validation.md:2138
msgctxt "P"
msgid "Even though you only need to specify the extensions when invoking the `types` method, this method actually validates the MIME type of the file by reading the file's contents and guessing its MIME type. A full listing of MIME types and their corresponding extensions may be found at the following location:"
msgstr ""

#: ./docs/10.x/validation.md:2037
#: ./docs/11.x/validation.md:2059
#: ./docs/master/validation.md:2043
msgctxt "CODE"
msgid ""
"use App\\Rules\\HasPermission;\n"
"use Illuminate\\Support\\Facades\\Validator;\n"
"use Illuminate\\Validation\\Rule;\n"
"\n"
"$validator = Validator::make($request->all(), [\n"
"    'companies.*.id' => Rule::forEach(function (string|null $value, string $attribute) {\n"
"        return [\n"
"            Rule::exists(Company::class, 'id'),\n"
"            new HasPermission('manage-company', $value),\n"
"        ];\n"
"    }),\n"
"]);"
msgstr ""

#: ./docs/10.x/validation.md:2051
#: ./docs/11.x/validation.md:2073
#: ./docs/master/validation.md:2057
msgctxt "H3"
msgid "Error Message Indexes and Positions"
msgstr ""

#: ./docs/10.x/validation.md:2078
#: ./docs/11.x/validation.md:2100
#: ./docs/master/validation.md:2084
msgctxt "P"
msgid "If necessary, you may reference more deeply nested indexes and positions via `second-index`, `second-position`, `third-index`, `third-position`, etc."
msgstr ""

#: ./docs/10.x/validation.md:2080
#: ./docs/11.x/validation.md:2102
#: ./docs/master/validation.md:2086
msgctxt "CODE"
msgid "'photos.*.attributes.*.string' => 'Invalid attribute for photo #:second-position.',"
msgstr ""

#: ./docs/9.x/validation.md:2086
msgctxt "CODE: shell"
msgid "php artisan make:rule Uppercase --invokable"
msgstr ""

#: ./docs/9.x/validation.md:2090
msgctxt "P"
msgid "Once the rule has been created, we are ready to define its behavior. A rule object contains a single method: `__invoke`. This method receives the attribute name, its value, and a callback that should be invoked on failure with the validation error message:"
msgstr ""

#: ./docs/9.x/validation.md:2092
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Rules;\n"
"\n"
"use Illuminate\\Contracts\\Validation\\InvokableRule;\n"
"\n"
"class Uppercase implements InvokableRule\n"
"{\n"
"    /**\n"
"     * Run the validation rule.\n"
"     *\n"
"     * @param  string  $attribute\n"
"     * @param  mixed  $value\n"
"     * @param  \\Closure  $fail\n"
"     * @return void\n"
"     */\n"
"    public function __invoke($attribute, $value, $fail)\n"
"    {\n"
"        if (strtoupper($value) !== $value) {\n"
"            $fail('The :attribute must be uppercase.');\n"
"        }\n"
"    }\n"
"}"
msgstr ""

#: ./docs/10.x/validation.md:2101
#: ./docs/11.x/validation.md:2123
#: ./docs/master/validation.md:2107
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Validator;\n"
"use Illuminate\\Validation\\Rule;\n"
"use Illuminate\\Validation\\Rules\\File;\n"
"\n"
"Validator::validate($input, [\n"
"    'photo' => [\n"
"        'required',\n"
"        File::image()\n"
"            ->min(1024)\n"
"            ->max(12 * 1024)\n"
"            ->dimensions(Rule::dimensions()->maxWidth(1000)->maxHeight(500)),\n"
"    ],\n"
"]);"
msgstr ""

#: ./docs/10.x/validation.md:2118
#: ./docs/11.x/validation.md:2140
#: ./docs/master/validation.md:2124
#~ msgctxt "P"
#~ msgid "<a name=\"validating-files-file-sizes\"></a>"
#~ msgstr ""

#: ./docs/10.x/validation.md:2119
#: ./docs/11.x/validation.md:2141
#: ./docs/master/validation.md:2125
msgctxt "H4"
msgid "File Sizes"
msgstr ""

#: ./docs/10.x/validation.md:2121
#: ./docs/11.x/validation.md:2143
#: ./docs/master/validation.md:2127
msgctxt "P"
msgid "For convenience, minimum and maximum file sizes may be specified as a string with a suffix indicating the file size units. The `kb`, `mb`, `gb`, and `tb` suffixes are supported:"
msgstr ""

#: ./docs/10.x/validation.md:2123
#: ./docs/11.x/validation.md:2145
#: ./docs/master/validation.md:2129
msgctxt "CODE: php"
msgid ""
"File::image()\n"
"    ->min('1kb')\n"
"    ->max('10mb')"
msgstr ""

#: ./docs/9.x/validation.md:2124
#: ./docs/10.x/validation.md:2264
#: ./docs/11.x/validation.md:2286
#: ./docs/master/validation.md:2270
msgctxt "H4"
msgid "Translating Validation Messages"
msgstr ""

#: ./docs/9.x/validation.md:2126
#: ./docs/10.x/validation.md:2266
#: ./docs/11.x/validation.md:2288
#: ./docs/master/validation.md:2272
msgctxt "P"
msgid "Instead of providing a literal error message to the `$fail` closure, you may also provide a [translation string key](/docs/{{version}}/localization) and instruct Laravel to translate the error message:"
msgstr ""

#: ./docs/9.x/validation.md:2128
#: ./docs/10.x/validation.md:2268
#: ./docs/11.x/validation.md:2290
#: ./docs/master/validation.md:2274
msgctxt "CODE"
msgid ""
"if (strtoupper($value) !== $value) {\n"
"    $fail('validation.uppercase')->translate();\n"
"}"
msgstr ""

#: ./docs/9.x/validation.md:2132
#: ./docs/10.x/validation.md:2272
#: ./docs/11.x/validation.md:2294
#: ./docs/master/validation.md:2278
msgctxt "P"
msgid "If necessary, you may provide placeholder replacements and the preferred language as the first and second arguments to the `translate` method:"
msgstr ""

#: ./docs/9.x/validation.md:2134
#: ./docs/10.x/validation.md:2274
#: ./docs/11.x/validation.md:2296
#: ./docs/master/validation.md:2280
msgctxt "CODE"
msgid ""
"$fail('validation.location')->translate([\n"
"    'value' => $this->value,\n"
"], 'fr')"
msgstr ""

#: ./docs/9.x/validation.md:2142
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Rules;\n"
"\n"
"use Illuminate\\Contracts\\Validation\\DataAwareRule;\n"
"use Illuminate\\Contracts\\Validation\\InvokableRule;\n"
"\n"
"class Uppercase implements DataAwareRule, InvokableRule\n"
"{\n"
"    /**\n"
"     * All of the data under validation.\n"
"     *\n"
"     * @var array\n"
"     */\n"
"    protected $data = [];\n"
"\n"
"    // ...\n"
"\n"
"    /**\n"
"     * Set the data under validation.\n"
"     *\n"
"     * @param  array  $data\n"
"     * @return $this\n"
"     */\n"
"    public function setData($data)\n"
"    {\n"
"        $this->data = $data;\n"
"\n"
"        return $this;\n"
"    }\n"
"}"
msgstr ""

#: ./docs/9.x/validation.md:2176
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Rules;\n"
"\n"
"use Illuminate\\Contracts\\Validation\\InvokableRule;\n"
"use Illuminate\\Contracts\\Validation\\ValidatorAwareRule;\n"
"\n"
"class Uppercase implements InvokableRule, ValidatorAwareRule\n"
"{\n"
"    /**\n"
"     * The validator instance.\n"
"     *\n"
"     * @var \\Illuminate\\Validation\\Validator\n"
"     */\n"
"    protected $validator;\n"
"\n"
"    // ...\n"
"\n"
"    /**\n"
"     * Set the current validator.\n"
"     *\n"
"     * @param  \\Illuminate\\Validation\\Validator  $validator\n"
"     * @return $this\n"
"     */\n"
"    public function setValidator($validator)\n"
"    {\n"
"        $this->validator = $validator;\n"
"\n"
"        return $this;\n"
"    }\n"
"}"
msgstr ""

#: ./docs/10.x/validation.md:2190
#: ./docs/11.x/validation.md:2212
#: ./docs/master/validation.md:2196
msgctxt "CODE: php"
msgid ""
"use Illuminate\\Validation\\Rules\\Password;\n"
"\n"
"/**\n"
" * Bootstrap any application services.\n"
" */\n"
"public function boot(): void\n"
"{\n"
"    Password::defaults(function () {\n"
"        $rule = Password::min(8);\n"
"\n"
"        return $this->app->isProduction()\n"
"                    ? $rule->mixedCase()->uncompromised()\n"
"                    : $rule;\n"
"    });\n"
"}"
msgstr ""

#: ./docs/10.x/validation.md:2234
#: ./docs/11.x/validation.md:2256
#: ./docs/master/validation.md:2240
msgctxt "P"
msgid "Once the rule has been created, we are ready to define its behavior. A rule object contains a single method: `validate`. This method receives the attribute name, its value, and a callback that should be invoked on failure with the validation error message:"
msgstr ""

#: ./docs/10.x/validation.md:2236
#: ./docs/11.x/validation.md:2258
#: ./docs/master/validation.md:2242
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Rules;\n"
"\n"
"use Closure;\n"
"use Illuminate\\Contracts\\Validation\\ValidationRule;\n"
"\n"
"class Uppercase implements ValidationRule\n"
"{\n"
"    /**\n"
"     * Run the validation rule.\n"
"     */\n"
"    public function validate(string $attribute, mixed $value, Closure $fail): void\n"
"    {\n"
"        if (strtoupper($value) !== $value) {\n"
"            $fail('The :attribute must be uppercase.');\n"
"        }\n"
"    }\n"
"}"
msgstr ""

#: ./docs/9.x/validation.md:2240
#: ./docs/10.x/validation.md:2378
#: ./docs/11.x/validation.md:2400
#: ./docs/master/validation.md:2384
msgctxt "P"
msgid "For a custom rule to run even when an attribute is empty, the rule must imply that the attribute is required. To quickly generate a new implicit rule object, you may use the `make:rule` Artisan command with the `--implicit` option:"
msgstr ""

#: ./docs/9.x/validation.md:2242
msgctxt "CODE: shell"
msgid "php artisan make:rule Uppercase --invokable --implicit"
msgstr ""

#: ./docs/10.x/validation.md:2282
#: ./docs/11.x/validation.md:2304
#: ./docs/master/validation.md:2288
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Rules;\n"
"\n"
"use Illuminate\\Contracts\\Validation\\DataAwareRule;\n"
"use Illuminate\\Contracts\\Validation\\ValidationRule;\n"
"\n"
"class Uppercase implements DataAwareRule, ValidationRule\n"
"{\n"
"    /**\n"
"     * All of the data under validation.\n"
"     *\n"
"     * @var array<string, mixed>\n"
"     */\n"
"    protected $data = [];\n"
"\n"
"    // ...\n"
"\n"
"    /**\n"
"     * Set the data under validation.\n"
"     *\n"
"     * @param  array<string, mixed>  $data\n"
"     */\n"
"    public function setData(array $data): static\n"
"    {\n"
"        $this->data = $data;\n"
"\n"
"        return $this;\n"
"    }\n"
"}"
msgstr ""

#: ./docs/10.x/validation.md:2315
#: ./docs/11.x/validation.md:2337
#: ./docs/master/validation.md:2321
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Rules;\n"
"\n"
"use Illuminate\\Contracts\\Validation\\ValidationRule;\n"
"use Illuminate\\Contracts\\Validation\\ValidatorAwareRule;\n"
"use Illuminate\\Validation\\Validator;\n"
"\n"
"class Uppercase implements ValidationRule, ValidatorAwareRule\n"
"{\n"
"    /**\n"
"     * The validator instance.\n"
"     *\n"
"     * @var \\Illuminate\\Validation\\Validator\n"
"     */\n"
"    protected $validator;\n"
"\n"
"    // ...\n"
"\n"
"    /**\n"
"     * Set the current validator.\n"
"     */\n"
"    public function setValidator(Validator $validator): static\n"
"    {\n"
"        $this->validator = $validator;\n"
"\n"
"        return $this;\n"
"    }\n"
"}"
msgstr ""

#: ./docs/10.x/validation.md:2350
#: ./docs/11.x/validation.md:2372
#: ./docs/master/validation.md:2356
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Validator;\n"
"use Closure;\n"
"\n"
"$validator = Validator::make($request->all(), [\n"
"    'title' => [\n"
"        'required',\n"
"        'max:255',\n"
"        function (string $attribute, mixed $value, Closure $fail) {\n"
"            if ($value === 'foo') {\n"
"                $fail(\"The {$attribute} is invalid.\");\n"
"            }\n"
"        },\n"
"    ],\n"
"]);"
msgstr ""

#: ./docs/10.x/validation.md:2380
#: ./docs/11.x/validation.md:2402
#: ./docs/master/validation.md:2386
msgctxt "CODE: shell"
msgid "php artisan make:rule Uppercase --implicit"
msgstr ""
