msgid ""
msgstr ""
"Content-Type: text/plain; charset=UTF-8\n"
"Language: zh_TW\n"
"Language-Team: Chinese Traditional\n"
"PO-Revision-Date: 2024-06-30 08:27\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Project-Id-Version: laravel-docs\n"
"X-Crowdin-File: /main/templates/releases.pot\n"
"X-Crowdin-File-ID: 135\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"

#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgctxt "TD"
msgid "11"
msgstr "11"

#: ./docs/10.x/releases.md
#: ./docs/master/releases.md
msgctxt "TD"
msgid "8.2 - 8.3"
msgstr ""

#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgctxt "TD"
msgid "March 12th, 2024"
msgstr ""

#: ./docs/10.x/releases.md
msgctxt "TD"
msgid "August 5th, 2025"
msgstr "2025 年 8 月 5 日"

#: ./docs/10.x/releases.md
msgctxt "TD"
msgid "February 3rd, 2026"
msgstr "2026 年 2 月 3 日"

#: ./docs/11.x/releases.md
msgctxt "TD"
msgid "8.2 - 8.4"
msgstr ""

#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgctxt "TD"
msgid "September 3rd, 2025"
msgstr ""

#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgctxt "TD"
msgid "March 12th, 2026"
msgstr ""

#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgctxt "TD"
msgid "12"
msgstr ""

#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgctxt "TD"
msgid "Q1 2025"
msgstr ""

#: ./docs/11.x/releases.md
msgctxt "TD"
msgid "Q3 2026"
msgstr ""

#: ./docs/11.x/releases.md
msgctxt "TD"
msgid "Q1 2027"
msgstr ""

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgctxt "TD"
msgid "Version"
msgstr "版本"

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgctxt "TD"
msgid "PHP (*)"
msgstr "PHP (*)"

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgctxt "TD"
msgid "Release"
msgstr "釋出日期"

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgctxt "TD"
msgid "Bug Fixes Until"
msgstr "Bug 修正期限"

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgctxt "TD"
msgid "Security Fixes Until"
msgstr "安全性修正期限"

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
msgctxt "TD"
msgid "6 (LTS)"
msgstr "6 (LTS)"

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
msgctxt "TD"
msgid "7.2 - 8.0"
msgstr "7.2 - 8.0"

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
msgctxt "TD"
msgid "September 3rd, 2019"
msgstr "2019 年 9 月 3 日"

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
msgctxt "TD"
msgid "January 25th, 2022"
msgstr "2022 年 1 月 25 日"

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
msgctxt "TD"
msgid "September 6th, 2022"
msgstr "2022 年 9 月 6 日"

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
msgctxt "TD"
msgid "7"
msgstr "7"

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
msgctxt "TD"
msgid "March 3rd, 2020"
msgstr "2020 年 3 月 3 日"

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
msgctxt "TD"
msgid "October 6th, 2020"
msgstr "2020 年 10 月 6 日"

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
msgctxt "TD"
msgid "March 3rd, 2021"
msgstr "2021 年 3 月 3 日"

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
msgctxt "TD"
msgid "8"
msgstr "8"

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
msgctxt "TD"
msgid "7.3 - 8.1"
msgstr "7.3 - 8.1"

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
msgctxt "TD"
msgid "September 8th, 2020"
msgstr "2020 年 9 月 8 日"

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
msgctxt "TD"
msgid "July 26th, 2022"
msgstr "2022 年 7 月 26 日"

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
msgctxt "TD"
msgid "January 24th, 2023"
msgstr "2023 年 1 月 24 日"

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgctxt "TD"
msgid "9"
msgstr "9"

#: ./docs/8.x/releases.md
msgctxt "TD"
msgid "8.0 - 8.1"
msgstr "8.0 - 8.1"

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgctxt "TD"
msgid "February 8th, 2022"
msgstr "2022 年 2 月 8 日"

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgctxt "TD"
msgid "August 8th, 2023"
msgstr "2023 年 8 月 8 日"

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgctxt "TD"
msgid "February 6th, 2024"
msgstr "2024 年 2 月 6 日"

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgctxt "TD"
msgid "10"
msgstr "10"

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgctxt "TD"
msgid "8.1 - 8.3"
msgstr ""

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgctxt "TD"
msgid "February 14th, 2023"
msgstr "2023 年 2 月 14 日"

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgctxt "TD"
msgid "August 6th, 2024"
msgstr "2024 年 8 月 6 日"

#: ./docs/8.x/releases.md
#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgctxt "TD"
msgid "February 4th, 2025"
msgstr "2025 年 2 月 4 日"

#: ./docs/9.x/releases.md
#: ./docs/10.x/releases.md
#: ./docs/11.x/releases.md
#: ./docs/master/releases.md
msgctxt "TD"
msgid "8.0 - 8.2"
msgstr "8.0 - 8.2"

#: ./docs/master/releases.md
msgctxt "TD"
msgid "Q3, 2026"
msgstr ""

#: ./docs/master/releases.md
msgctxt "TD"
msgid "Q1, 2027"
msgstr ""

#: ./docs/8.x/releases.md:1
#: ./docs/9.x/releases.md:1
#: ./docs/10.x/releases.md:1
#: ./docs/11.x/releases.md:1
#: ./docs/master/releases.md:1
msgctxt "H1"
msgid "Release Notes"
msgstr "版本資訊"

#: ./docs/8.x/releases.md:3
#: ./docs/9.x/releases.md:3
#: ./docs/10.x/releases.md:3
#: ./docs/11.x/releases.md:3
#: ./docs/master/releases.md:3
msgctxt "P"
msgid "[Versioning Scheme](#versioning-scheme)"
msgstr "[版本策略](#versioning-scheme)"

#: ./docs/8.x/releases.md:4
msgctxt "P"
msgid "[Exceptions](#exceptions)"
msgstr "[例外](#exceptions)"

#: ./docs/10.x/releases.md:5
msgctxt "P"
msgid "[Laravel 10](#laravel-10)"
msgstr "[Laravel 10](#laravel-10)"

#: ./docs/11.x/releases.md:5
msgctxt "P"
msgid "[Laravel 11](#laravel-11)"
msgstr "[Laravel 11](#laravel-11)"

#: ./docs/8.x/releases.md:5
#: ./docs/9.x/releases.md:4
#: ./docs/10.x/releases.md:4
#: ./docs/11.x/releases.md:4
#: ./docs/master/releases.md:4
msgctxt "P"
msgid "[Support Policy](#support-policy)"
msgstr "[支援政策](#support-policy)"

#: ./docs/9.x/releases.md:5
msgctxt "P"
msgid "[Laravel 9](#laravel-9)"
msgstr "[Laravel 9](#laravel-9)"

#: ./docs/master/releases.md:5
msgctxt "P"
msgid "[Laravel 12](#laravel-12)"
msgstr ""

#: ./docs/8.x/releases.md:6
msgctxt "P"
msgid "[Laravel 8](#laravel-8)"
msgstr "[Laravel 8](#laravel-8)"

#: ./docs/8.x/releases.md:8
#: ./docs/9.x/releases.md:7
#: ./docs/10.x/releases.md:7
#: ./docs/11.x/releases.md:7
#: ./docs/master/releases.md:7
#~ msgctxt "P"
#~ msgid "<a name=\"versioning-scheme\"></a>"
#~ msgstr ""

#: ./docs/8.x/releases.md:9
#: ./docs/9.x/releases.md:8
#: ./docs/10.x/releases.md:8
#: ./docs/11.x/releases.md:8
#: ./docs/master/releases.md:8
msgctxt "H2"
msgid "Versioning Scheme"
msgstr "版本策略"

#: ./docs/10.x/releases.md:10
#: ./docs/11.x/releases.md:10
#: ./docs/master/releases.md:10
msgctxt "P"
msgid "Laravel and its other first-party packages follow [Semantic Versioning](https://semver.org). Major framework releases are released every year (~Q1), while minor and patch releases may be released as often as every week. Minor and patch releases should **never** contain breaking changes."
msgstr "Laravel 及其第一方套件都遵守 [語義化版本](https://semver.org/lang/zh-Tw/)。框架的主要更新會每年釋出 (約在第一季)，而次版本與修訂版則可能頻繁到每週更新。此版本與修訂版 **絕對不會** 包含中斷性變更 (Breaking Change)。"

#: ./docs/8.x/releases.md:11
#: ./docs/9.x/releases.md:10
msgctxt "P"
msgid "Laravel and its other first-party packages follow [Semantic Versioning](https://semver.org). Major framework releases are released every year (~February), while minor and patch releases may be released as often as every week. Minor and patch releases should **never** contain breaking changes."
msgstr "Laravel 及其第一方套件都遵守 [語義化版本](https://semver.org/lang/zh-Tw/)。框架的主要更新會每年釋出 (約在二月時)，而次版本與修訂版則可能頻繁到每週更新。次版本與修訂版 **絕對不會** 包含^[中斷性變更](Breaking Change)。"

#: ./docs/10.x/releases.md:12
msgctxt "P"
msgid "When referencing the Laravel framework or its components from your application or package, you should always use a version constraint such as `^10.0`, since major releases of Laravel do include breaking changes. However, we strive to always ensure you may update to a new major release in one day or less."
msgstr "由於 Laravel 的主要更新會包含中斷性變更，因此在專案或套件中參照 Laravel 框架或其組件時，應使用如 `^10.0` 這樣的版本限制式。不過，我們也會不斷努力確保每次進行主要版本更新時，都可於一天之內升級完成。"

#: ./docs/11.x/releases.md:12
#: ./docs/master/releases.md:12
msgctxt "P"
msgid "When referencing the Laravel framework or its components from your application or package, you should always use a version constraint such as `^11.0`, since major releases of Laravel do include breaking changes. However, we strive to always ensure you may update to a new major release in one day or less."
msgstr "由於 Laravel 的主要更新會包含中斷性變更，因此在專案或套件中參照 Laravel 框架或其組件時，應使用如 `^11.0` 這樣的版本限制式。不過，我們也會不斷努力確保每次進行主要版本更新時，都可於一天之內升級完成。"

#: ./docs/9.x/releases.md:12
msgctxt "P"
msgid "When referencing the Laravel framework or its components from your application or package, you should always use a version constraint such as `^9.0`, since major releases of Laravel do include breaking changes. However, we strive to always ensure you may update to a new major release in one day or less."
msgstr "由於 Laravel 的主要更新會包含中斷性變更，因此在應用程式或套件中參照 Laravel 框架或其組件時，應使用如 `^9.0` 這樣的版本限制式。然而，我們竭力確保主要更新應可於一天之內完成。"

#: ./docs/8.x/releases.md:13
msgctxt "P"
msgid "When referencing the Laravel framework or its components from your application or package, you should always use a version constraint such as `^8.0`, since major releases of Laravel do include breaking changes. However, we strive to always ensure you may update to a new major release in one day or less."
msgstr "由於 Laravel 的主要更新會包含中斷性變更，因此在專案或套件中參照 Laravel 框架或其組件時，應使用如 `^8.0` 這樣的版本限制式。不過，我們也會不斷努力確保每次進行主要版本更新時，都可於一天之內升級完成。"

#: ./docs/8.x/releases.md:15
#~ msgctxt "P"
#~ msgid "<a name=\"exceptions\"></a>"
#~ msgstr ""

#: ./docs/8.x/releases.md:16
msgctxt "H3"
msgid "Exceptions"
msgstr "例外"

#: ./docs/9.x/releases.md:17
#: ./docs/10.x/releases.md:17
#: ./docs/11.x/releases.md:17
#: ./docs/master/releases.md:17
msgctxt "P"
msgid "[Named arguments](https://www.php.net/manual/en/functions.arguments.php#functions.named-arguments) are not covered by Laravel's backwards compatibility guidelines. We may choose to rename function arguments when necessary in order to improve the Laravel codebase. Therefore, using named arguments when calling Laravel methods should be done cautiously and with the understanding that the parameter names may change in the future."
msgstr "[帶名稱引數](https://www.php.net/manual/en/functions.arguments.php#functions.named-arguments)功能尚未包含在 Laravel 的向下相容性方針內。我們可能會在有必要的時候更改函式的參數名稱以改進 Laravel 的程式碼。因此，在使用帶名稱引數呼叫 Laravel 方法時應格外注意，並瞭解到引數名稱未來可能會有所更改。"

#: ./docs/8.x/releases.md:18
#: ./docs/9.x/releases.md:14
#: ./docs/10.x/releases.md:14
#: ./docs/11.x/releases.md:14
#: ./docs/master/releases.md:14
#~ msgctxt "P"
#~ msgid "<a name=\"named-arguments\"></a>"
#~ msgstr ""

#: ./docs/8.x/releases.md:19
#: ./docs/9.x/releases.md:15
#: ./docs/10.x/releases.md:15
#: ./docs/11.x/releases.md:15
#: ./docs/master/releases.md:15
msgctxt "H4"
msgid "Named Arguments"
msgstr "帶名稱的引數"

#: ./docs/8.x/releases.md:21
msgctxt "P"
msgid "At this time, PHP's [named arguments](https://www.php.net/manual/en/functions.arguments.php#functions.named-arguments) functionality are not covered by Laravel's backwards compatibility guidelines. We may choose to rename function parameters when necessary in order to improve the Laravel codebase. Therefore, using named arguments when calling Laravel methods should be done cautiously and with the understanding that the parameter names may change in the future."
msgstr "截至目前為止，PHP 的[帶名稱引數](https://www.php.net/manual/en/functions.arguments.php#functions.named-arguments) 尚未包含在 Laravel 的向下相容性方針內。我們可能會在有必要的時候更改函式的引數名稱以改進 Laravel 的程式碼。因此，在使用帶名稱引數呼叫 Laravel 方法時應格外注意，並應瞭解到引數名稱未來可能會有所更改。"

#: ./docs/8.x/releases.md:23
#: ./docs/9.x/releases.md:19
#: ./docs/10.x/releases.md:19
#: ./docs/11.x/releases.md:19
#: ./docs/master/releases.md:19
#~ msgctxt "P"
#~ msgid "<a name=\"support-policy\"></a>"
#~ msgstr ""

#: ./docs/8.x/releases.md:24
#: ./docs/9.x/releases.md:20
#: ./docs/10.x/releases.md:20
#: ./docs/11.x/releases.md:20
#: ./docs/master/releases.md:20
msgctxt "H2"
msgid "Support Policy"
msgstr "支援政策"

#: ./docs/8.x/releases.md:26
#: ./docs/9.x/releases.md:22
#: ./docs/10.x/releases.md:22
#: ./docs/11.x/releases.md:22
#: ./docs/master/releases.md:22
msgctxt "P"
msgid "For all Laravel releases, bug fixes are provided for 18 months and security fixes are provided for 2 years. For all additional libraries, including Lumen, only the latest major release receives bug fixes. In addition, please review the database versions [supported by Laravel](/docs/{{version}}/database#introduction)."
msgstr "所有的 Laravel 版本都提供 18 個月的 Bug 修正，以及 2 年的安全性修正。對於其他的函式庫，如 Lumen，則只有最新的主要版本會收到 Bug 修正。此外，也請參考 [Laravel 支援的](/docs/{{version}}/database#introduction)資料庫版本。"

#: ./docs/9.x/releases.md:45
#~ msgctxt "P"
#~ msgid "<a name=\"laravel-9\"></a>"
#~ msgstr ""

#: ./docs/9.x/releases.md:46
msgctxt "H2"
msgid "Laravel 9"
msgstr "Laravel 9"

#: ./docs/8.x/releases.md:47
#: ./docs/9.x/releases.md:43
#: ./docs/10.x/releases.md:47
#: ./docs/11.x/releases.md:46
#: ./docs/master/releases.md:47
msgctxt "P"
msgid "(*) Supported PHP versions"
msgstr "(*) 支援的 PHP 版本"

#: ./docs/11.x/releases.md:48
#~ msgctxt "P"
#~ msgid "<a name=\"laravel-11\"></a>"
#~ msgstr ""

#: ./docs/9.x/releases.md:48
msgctxt "P"
msgid "As you may know, Laravel transitioned to yearly releases with the release of Laravel 8. Previously, major versions were released every 6 months. This transition is intended to ease the maintenance burden on the community and challenge our development team to ship amazing, powerful new features without introducing breaking changes. Therefore, we have shipped a variety of robust features to Laravel 8 without breaking backwards compatibility, such as parallel testing support, improved Breeze starter kits, HTTP client improvements, and even new Eloquent relationship types such as \"has one of many\"."
msgstr "讀者可能已經知道，從 Laravel 8 開始，Laravel 改為每年釋出新的主要版本。在此之前，每 6 個月都會釋出主要版本。這個改變是為了降低社群維護的負擔，並讓我們的開發團隊能想辦法在不包含中斷性更改 (Breaking Change) 的情況下繼續提供驚艷且強大的新功能。因此，我們在 Laravel 8 中，以不破壞向下相容性的前提下推出了許多強健的功能，如平行測試 (Parallel Testing) 支援、改進了 Breeze 入門套件、HTTP 用戶端的改進、甚至還出了一些如「一對多種之一 (Has One of Many)」等新的 Eloquent 關聯類型。"

#: ./docs/10.x/releases.md:49
#~ msgctxt "P"
#~ msgid "<a name=\"laravel-10\"></a>"
#~ msgstr ""

#: ./docs/11.x/releases.md:49
msgctxt "H2"
msgid "Laravel 11"
msgstr "Laravel 11"

#: ./docs/8.x/releases.md:49
#~ msgctxt "P"
#~ msgid "<a name=\"laravel-8\"></a>"
#~ msgstr ""

#: ./docs/master/releases.md:49
#~ msgctxt "P"
#~ msgid "<a name=\"laravel-12\"></a>"
#~ msgstr ""

#: ./docs/10.x/releases.md:50
msgctxt "H2"
msgid "Laravel 10"
msgstr "Laravel 10"

#: ./docs/8.x/releases.md:50
msgctxt "H2"
msgid "Laravel 8"
msgstr "Laravel 8"

#: ./docs/9.x/releases.md:50
#: ./docs/10.x/releases.md:54
msgctxt "P"
msgid "Therefore, this commitment to ship great new features during the current release will likely lead to future \"major\" releases being primarily used for \"maintenance\" tasks such as upgrading upstream dependencies, which can be seen in these release notes."
msgstr "因此，我們對於在目前版本中釋出新功能的承諾也將導致未來的「主要 (Major)」版本將著重於一些「維護性」的任務，如更新上游套件等，讀者稍後可以在本版本資訊內讀到。"

#: ./docs/master/releases.md:50
msgctxt "H2"
msgid "Laravel 12"
msgstr ""

#: ./docs/11.x/releases.md:51
msgctxt "P"
msgid "Laravel 11 continues the improvements made in Laravel 10.x by introducing a streamlined application structure, per-second rate limiting, health routing, graceful encryption key rotation, queue testing improvements, [Resend](https://resend.com) mail transport, Prompt validator integration, new Artisan commands, and more. In addition, Laravel Reverb, a first-party, scalable WebSocket server has been introduced to provide robust real-time capabilities to your applications."
msgstr ""

#: ./docs/10.x/releases.md:52
msgctxt "P"
msgid "As you may know, Laravel transitioned to yearly releases with the release of Laravel 8. Previously, major versions were released every 6 months. This transition is intended to ease the maintenance burden on the community and challenge our development team to ship amazing, powerful new features without introducing breaking changes. Therefore, we have shipped a variety of robust features to Laravel 9 without breaking backwards compatibility."
msgstr "讀者可能已經知道，從 Laravel 8 開始，Laravel 改為每年釋出新的主要版本。在此之前，每 6 個月都會釋出主要版本。這個改變是為了降低社群維護的負擔，並讓我們的開發團隊能想辦法在不包含中斷性更改 (Breaking Change) 的情況下繼續提供驚艷且強大的新功能。因此，我們在 Laravel 9 中，以不破壞向下相容性的前提下推出了許多強健的功能。"

#: ./docs/8.x/releases.md:52
msgctxt "P"
msgid "Laravel 8 continues the improvements made in Laravel 7.x by introducing Laravel Jetstream, model factory classes, migration squashing, job batching, improved rate limiting, queue improvements, dynamic Blade components, Tailwind pagination views, time testing helpers, improvements to `artisan serve`, event listener improvements, and a variety of other bug fixes and usability improvements."
msgstr "Laravel 8 持續地對 Laravel 7.x 進行改進，包含導入了 Laravel Jetstream、模型 Factory 類別、資料庫遷移壓縮、批次任務、改進頻率限制、佇列改進、動態 Blade 元件、Tailwind 分頁檢視器、測試時間用的輔助函式、對 `artisan serve` 的改進、時間監聽程式改進、以及各種其他 Bug 修正以及使用性改進。"

#: ./docs/9.x/releases.md:52
msgctxt "P"
msgid "Laravel 9 continues the improvements made in Laravel 8.x by introducing support for Symfony 6.0 components, Symfony Mailer, Flysystem 3.0, improved `route:list` output, a Laravel Scout database driver, new Eloquent accessor / mutator syntax, implicit route bindings via Enums, and a variety of other bug fixes and usability improvements."
msgstr "Laravel 9 延續了 Laravel 8.x 中推出的各種改進，並支援 Symfony 6.0 元件、Symfony Mailer、Flysystem 3.0、改進過的 `route:list` 輸出、Laravel Scout 資料庫 Driver、新的 Eloquent 存取子 / 更動子語法、通過 Enum 進行的隱式路由繫結、以及其他多個 Bug 修正與可用性提升。"

#: ./docs/master/releases.md:52
msgctxt "P"
msgid "TBA..."
msgstr ""

#: ./docs/11.x/releases.md:54
msgctxt "H3"
msgid "PHP 8.2"
msgstr "PHP 8.2"

#: ./docs/8.x/releases.md:54
#~ msgctxt "P"
#~ msgid "<a name=\"laravel-jetstream\"></a>"
#~ msgstr ""

#: ./docs/9.x/releases.md:54
#: ./docs/10.x/releases.md:58
#: ./docs/11.x/releases.md:53
#~ msgctxt "P"
#~ msgid "<a name=\"php-8\"></a>"
#~ msgstr ""

#: ./docs/8.x/releases.md:55
msgctxt "H3"
msgid "Laravel Jetstream"
msgstr "Laravel Jetstream"

#: ./docs/9.x/releases.md:55
msgctxt "H3"
msgid "PHP 8.0"
msgstr "PHP 8.0"

#: ./docs/10.x/releases.md:56
msgctxt "P"
msgid "Laravel 10 continues the improvements made in Laravel 9.x by introducing argument and return types to all application skeleton methods, as well as all stub files used to generate classes throughout the framework. In addition, a new, developer-friendly abstraction layer has been introduced for starting and interacting with external processes. Further, Laravel Pennant has been introduced to provide a wonderful approach to managing your application's \"feature flags\"."
msgstr "Laravel 10 在 Laravel 9.x 的基礎上繼續進行了諸多改進，包含在專案 Skeleton 中以及 Laravel 用來產生類別的 Stub 檔案中加上了回傳型別，並為所有引數加上型別。此外，我們還新增了一個對開發者友善的抽象層，可用來啟動與使用外部處理程序。而且，我們還推出了 Laravel Pennant，為你提供管理專案「^[Feature Flag](功能旗標)」的優質方案。"

#: ./docs/11.x/releases.md:56
msgctxt "P"
msgid "Laravel 11.x requires a minimum PHP version of 8.2."
msgstr "Laravel 11.x 所要求的最小 PHP 版本為 8.2。"

#: ./docs/8.x/releases.md:57
msgctxt "P"
msgid "*Laravel Jetstream was written by [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr "*Laravel Jetstream 由 [Taylor Otwell](https://github.com/taylorotwell) 撰寫*。"

#: ./docs/9.x/releases.md:57
msgctxt "P"
msgid "Laravel 9.x requires a minimum PHP version of 8.0."
msgstr "Laravel 9.x 所要求的最小 PHP 版本為 8.0。"

#: ./docs/11.x/releases.md:58
#~ msgctxt "P"
#~ msgid "<a name=\"structure\"></a>"
#~ msgstr ""

#: ./docs/10.x/releases.md:59
msgctxt "H3"
msgid "PHP 8.1"
msgstr "PHP 8.1"

#: ./docs/11.x/releases.md:59
msgctxt "H3"
msgid "Streamlined Application Structure"
msgstr ""

#: ./docs/8.x/releases.md:59
msgctxt "P"
msgid "[Laravel Jetstream](https://jetstream.laravel.com) is a beautifully designed application scaffolding for Laravel. Jetstream provides the perfect starting point for your next project and includes login, registration, email verification, two-factor authentication, session management, API support via Laravel Sanctum, and optional team management. Laravel Jetstream replaces and improves upon the legacy authentication UI scaffolding available for previous versions of Laravel."
msgstr "[Laravel Jetstream](https://jetstream.laravel.com) 是一套用於 Laravel 的網站 Scaffolding，有漂亮的設計。Jetstream 為你的下一個專案提供了一個絕佳的開始點，包含登入、註冊、電子郵件認證、二步驟認證、Session 管理、通過 Laravel Sanctum 提供的 API 支援、以及選配的團隊管理。Laravel Jetstream 取代並改進了過往版本 Laravel 所提供的舊版認證 UI Scaffolding。"

#: ./docs/9.x/releases.md:59
#~ msgctxt "P"
#~ msgid "<a name=\"symfony-mailer\"></a>"
#~ msgstr ""

#: ./docs/9.x/releases.md:60
msgctxt "H3"
msgid "Symfony Mailer"
msgstr "Symfony Mailer"

#: ./docs/10.x/releases.md:61
msgctxt "P"
msgid "Laravel 10.x requires a minimum PHP version of 8.1."
msgstr "Laravel 10.x 所要求的最小 PHP 版本為 8.1。"

#: ./docs/11.x/releases.md:61
msgctxt "P"
msgid "*Laravel's streamlined application structure was developed by [Taylor Otwell](https://github.com/taylorotwell) and [Nuno Maduro](https://github.com/nunomaduro)*."
msgstr ""

#: ./docs/8.x/releases.md:61
msgctxt "P"
msgid "Jetstream is designed using [Tailwind CSS](https://tailwindcss.com) and offers your choice of [Livewire](https://laravel-livewire.com) or [Inertia](https://inertiajs.com) scaffolding."
msgstr "Jetstream 是使用 [Tailwind CSS](https://tailwindcss.com) 進行設計的，並提供了[Livewire](https://laravel-livewire.com) 或 [Inertia](https://inertiajs.com) Scaffolding 可進行選擇。"

#: ./docs/9.x/releases.md:62
msgctxt "P"
msgid "*Symfony Mailer support was contributed by [Dries Vints](https://github.com/driesvints)*, [James Brooks](https://github.com/jbrooksuk), and [Julius Kiekbusch](https://github.com/Jubeki)."
msgstr "*Symfony Mailer 支援由 [Dries Vints](https://github.com/driesvints), [James Brooks](https://github.com/jbrooksuk), 與 [Julius Kiekbusch](https://github.com/Jubeki) 參與貢獻*。"

#: ./docs/10.x/releases.md:63
#~ msgctxt "P"
#~ msgid "<a name=\"types\"></a>"
#~ msgstr ""

#: ./docs/11.x/releases.md:63
msgctxt "P"
msgid "Laravel 11 introduces a streamlined application structure for **new** Laravel applications, without requiring any changes to existing applications. The new application structure is intended to provide a leaner, more modern experience, while retaining many of the concepts that Laravel developers are already familiar with. Below we will discuss the highlights of Laravel's new application structure."
msgstr ""

#: ./docs/8.x/releases.md:63
#~ msgctxt "P"
#~ msgid "<a name=\"models-directory\"></a>"
#~ msgstr ""

#: ./docs/10.x/releases.md:64
msgctxt "H3"
msgid "Types"
msgstr "型別"

#: ./docs/8.x/releases.md:64
msgctxt "H3"
msgid "Models Directory"
msgstr "Model 目錄"

#: ./docs/9.x/releases.md:64
msgctxt "P"
msgid "Previous releases of Laravel utilized the [Swift Mailer](https://swiftmailer.symfony.com/docs/introduction.html) library to send outgoing email. However, that library is no longer maintained and has been succeeded by Symfony Mailer."
msgstr "在以前版本的 Laravel 中，我們使用 [Swift Mailer](https://swiftmailer.symfony.com/docs/introduction.html) 函式庫來寄送外部 E-Mail。不過，這個函式庫已不在維護，Symfony Mailer 為其後繼者。"

#: ./docs/11.x/releases.md:65
msgctxt "H4"
msgid "The Application Bootstrap File"
msgstr ""

#: ./docs/10.x/releases.md:66
msgctxt "P"
msgid "*Application skeleton and stub type-hints were contributed by [Nuno Maduro](https://github.com/nunomaduro)*."
msgstr "*專案 Skeleton 與 Stub 的型別提示由 [Nuno Maduro](https://github.com/nunomaduro) 參與貢獻*。"

#: ./docs/8.x/releases.md:66
msgctxt "P"
msgid "By overwhelming community demand, the default Laravel application skeleton now contains an `app/Models` directory. We hope you enjoy this new home for your Eloquent models! All relevant generator commands have been updated to assume models exist within the `app/Models` directory if it exists. If the directory does not exist, the framework will assume your models should be placed within the `app` directory."
msgstr "為了回應來自社群的強烈要求，Laravel 專案的預設基本架構目前已包含了 `app/Models` 目錄。我們希望你能享受這個 Eloquent Model 的新家！所有相關的產生程式指令都已更新。而且，如果 `app/Models` 目錄存在，那麼這些產生程式會假設這個資料夾是用來存放 Model 的。若該目錄不存在，則框架會假設 Model 應放置於 `app` 目錄內。"

#: ./docs/9.x/releases.md:66
msgctxt "P"
msgid "Please review the [upgrade guide](/docs/{{version}}/upgrade#symfony-mailer) to learn more about ensuring your application is compatible with Symfony Mailer."
msgstr "請參考[升級指南](/docs/{{version}}/upgrade#symfony-mailer)來瞭解如何確保你的專案能相容於 Symfony Mailer。"

#: ./docs/11.x/releases.md:67
msgctxt "P"
msgid "The `bootstrap/app.php` file has been revitalized as a code-first application configuration file. From this file, you may now customize your application's routing, middleware, service providers, exception handling, and more. This file unifies a variety of high-level application behavior settings that were previously scattered throughout your application's file structure:"
msgstr ""

#: ./docs/10.x/releases.md:68
msgctxt "P"
msgid "On its initial release, Laravel utilized all of the type-hinting features available in PHP at the time. However, many new features have been added to PHP in the subsequent years, including additional primitive type-hints, return types, and union types."
msgstr "在 Laravel 最初的版本中，我們使用了當時 PHP 內能用的所有型別提示 (Type-hint) 功能。不過，在接下來的幾年中，PHP 不斷推出新功能，包含原生型別的型別提示、回傳型別、等位型別 (Union Type) 等。"

#: ./docs/8.x/releases.md:68
#~ msgctxt "P"
#~ msgid "<a name=\"model-factory-classes\"></a>"
#~ msgstr ""

#: ./docs/9.x/releases.md:68
#~ msgctxt "P"
#~ msgid "<a name=\"flysystem-3\"></a>"
#~ msgstr ""

#: ./docs/11.x/releases.md:69
msgctxt "CODE: php"
msgid ""
"return Application::configure(basePath: dirname(__DIR__))\n"
"    ->withRouting(\n"
"        web: __DIR__.'/../routes/web.php',\n"
"        commands: __DIR__.'/../routes/console.php',\n"
"        health: '/up',\n"
"    )\n"
"    ->withMiddleware(function (Middleware $middleware) {\n"
"        //\n"
"    })\n"
"    ->withExceptions(function (Exceptions $exceptions) {\n"
"        //\n"
"    })->create();"
msgstr ""

#: ./docs/8.x/releases.md:69
msgctxt "H3"
msgid "Model Factory Classes"
msgstr "Model Factory 類別"

#: ./docs/9.x/releases.md:69
msgctxt "H3"
msgid "Flysystem 3.x"
msgstr "Flysystem 3.x"

#: ./docs/10.x/releases.md:70
msgctxt "P"
msgid "Laravel 10.x thoroughly updates the application skeleton and all stubs utilized by the framework to introduce argument and return types to all method signatures. In addition, extraneous \"doc block\" type-hint information has been deleted."
msgstr "在 Laravel 10.x 中，我們完全更新了專案的 Skeleton 與 Laravel 所使用的所有 Stub 檔案，以在這些檔案中為所有的方法簽章 (Method Signature) 上加上引數的型別提示與回傳型別。此外，還刪除了不必要的「Doc Block」型別提示："

#: ./docs/8.x/releases.md:71
msgctxt "P"
msgid "*Model factory classes were contributed by [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr "*Model Factory 類別由 [Taylor Otwell](https://github.com/taylorotwell) 參與貢獻*。"

#: ./docs/9.x/releases.md:71
msgctxt "P"
msgid "*Flysystem 3.x support was contributed by [Dries Vints](https://github.com/driesvints)*."
msgstr "*Flysystem 3.x 支援由 [Dries Vints](https://github.com/driesvints) 參與貢獻*。"

#: ./docs/10.x/releases.md:72
msgctxt "P"
msgid "This change is entirely backwards compatible with existing applications. Therefore, existing applications that do not have these type-hints will continue to function normally."
msgstr "對於現有專案來說，這項更改是完全向下相容的。因此，現有專案若沒有型別提示，也能繼續正常運作："

#: ./docs/8.x/releases.md:73
msgctxt "P"
msgid "Eloquent [model factories](/docs/{{version}}/database-testing#defining-model-factories) have been entirely re-written as class based factories and improved to have first-class relationship support. For example, the `UserFactory` included with Laravel is written like so:"
msgstr "Eloquent 的 [Model Factory](/docs/{{version}}/database-testing#defining-model-factories) 已經全面重寫為基於 Class 的 Factory 了，並且也經過改進來直接支援資料庫關聯。舉例來說，在 Laravel 中的 `UserFactory` 是這樣寫的："

#: ./docs/9.x/releases.md:73
msgctxt "P"
msgid "Laravel 9.x upgrades our upstream Flysystem dependency to Flysystem 3.x. Flysystem powers all of filesystem interactions offered by the `Storage` facade."
msgstr "Laravel 9.x 更新了上游的 Flysystem 相依性套件為 Flysystem 3.x。Flysystem 驅動了 `Storage` Facade 中提供的所有檔案系統互動功能。"

#: ./docs/10.x/releases.md:74
#~ msgctxt "P"
#~ msgid "<a name=\"laravel-pennant\"></a>"
#~ msgstr ""

#: ./docs/10.x/releases.md:75
msgctxt "H3"
msgid "Laravel Pennant"
msgstr "Laravel Pennant"

#: ./docs/8.x/releases.md:75
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace Database\\Factories;\n"
"\n"
"use App\\Models\\User;\n"
"use Illuminate\\Database\\Eloquent\\Factories\\Factory;\n"
"use Illuminate\\Support\\Str;\n"
"\n"
"class UserFactory extends Factory\n"
"{\n"
"    /**\n"
"     * The name of the factory's corresponding model.\n"
"     *\n"
"     * @var string\n"
"     */\n"
"    protected $model = User::class;\n"
"\n"
"    /**\n"
"     * Define the model's default state.\n"
"     *\n"
"     * @return array\n"
"     */\n"
"    public function definition()\n"
"    {\n"
"        return [\n"
"            'name' => $this->faker->name(),\n"
"            'email' => $this->faker->unique()->safeEmail(),\n"
"            'email_verified_at' => now(),\n"
"            'password' => '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', // password\n"
"            'remember_token' => Str::random(10),\n"
"        ];\n"
"    }\n"
"}"
msgstr ""

#: ./docs/9.x/releases.md:75
msgctxt "P"
msgid "Please review the [upgrade guide](/docs/{{version}}/upgrade#flysystem-3) to learn more about ensuring your application is compatible with Flysystem 3.x."
msgstr "請參考[升級指南](/docs/{{version}}/upgrade#flysystem-3)來瞭解如何確保你的專案能相容於 Flysystem 3.x。"

#: ./docs/10.x/releases.md:77
msgctxt "P"
msgid "*Laravel Pennant was developed by [Tim MacDonald](https://github.com/timacdonald)*."
msgstr "*Laravel Pennant 由 [Tim MacDonald](https://github.com/timacdonald) 開發*。"

#: ./docs/9.x/releases.md:77
#~ msgctxt "P"
#~ msgid "<a name=\"eloquent-accessors-and-mutators\"></a>"
#~ msgstr ""

#: ./docs/9.x/releases.md:78
msgctxt "H3"
msgid "Improved Eloquent Accessors / Mutators"
msgstr "改進過的 Eloquent 存取子與更動子"

#: ./docs/10.x/releases.md:79
msgctxt "P"
msgid "A new first-party package, Laravel Pennant, has been released. Laravel Pennant offers a light-weight, streamlined approach to managing your application's feature flags. Out of the box, Pennant includes an in-memory `array` driver and a `database` driver for persistent feature storage."
msgstr "第一方套件，Laravel Pennant，現已推出。Laravel Pennant 提供了輕量、簡化的方法，能讓你管理專案的 Feature Flag。在 Pennant 中包含了現成的 `array` Driver 與 `database` Driver 可用來保存 Feature。"

#: ./docs/9.x/releases.md:80
msgctxt "P"
msgid "*Improved Eloquent accessors / mutators was contributed by [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr "*改進過的 Eloquent ^[Accessor](存取子) 與 ^[Mutator](更動子) 由 [Taylor Otwell](https://github.com/taylorotwell) 參與貢獻*。"

#: ./docs/10.x/releases.md:81
msgctxt "P"
msgid "Features can be easily defined via the `Feature::define` method:"
msgstr "使用 `Feature::define` 方法就能輕鬆定義 Feature："

#: ./docs/9.x/releases.md:82
msgctxt "P"
msgid "Laravel 9.x offers a new way to define Eloquent [accessors and mutators](/docs/{{version}}/eloquent-mutators#accessors-and-mutators). In previous releases of Laravel, the only way to define accessors and mutators was by defining prefixed methods on your model like so:"
msgstr "Laravel 9.x 提供了一種定義 Eloquent [存取子與更動子](/docs/{{version}}/eloquent-mutators#accessors-and-mutators)的全新方法。在之前版本的 Laravel 中，唯一一種定義存取子與更動子的方法就只有在 Model 中像這樣定義由前置詞的方法："

#: ./docs/10.x/releases.md:83
msgctxt "CODE: php"
msgid ""
"use Laravel\\Pennant\\Feature;\n"
"use Illuminate\\Support\\Lottery;\n"
"\n"
"Feature::define('new-onboarding-flow', function () {\n"
"    return Lottery::odds(1, 10);\n"
"});"
msgstr ""

#: ./docs/11.x/releases.md:84
#~ msgctxt "P"
#~ msgid "<a name=\"service-providers\"></a>"
#~ msgstr ""

#: ./docs/9.x/releases.md:84
msgctxt "CODE: php"
msgid ""
"public function getNameAttribute($value)\n"
"{\n"
"    return strtoupper($value);\n"
"}\n"
"\n"
"public function setNameAttribute($value)\n"
"{\n"
"    $this->attributes['name'] = $value;\n"
"}"
msgstr ""

#: ./docs/11.x/releases.md:85
msgctxt "H4"
msgid "Service Providers"
msgstr ""

#: ./docs/11.x/releases.md:87
msgctxt "P"
msgid "Instead of the default Laravel application structure containing five service providers, Laravel 11 only includes a single `AppServiceProvider`. The functionality of the previous service providers has been incorporated into the `bootstrap/app.php`, is handled automatically by the framework, or may be placed in your application's `AppServiceProvider`."
msgstr ""

#: ./docs/11.x/releases.md:89
msgctxt "P"
msgid "For example, event discovery is now enabled by default, largely eliminating the need for manual registration of events and their listeners. However, if you do need to manually register events, you may simply do so in the `AppServiceProvider`. Similarly, route model bindings or authorization gates you may have previously registered in the `AuthServiceProvider` may also be registered in the `AppServiceProvider`."
msgstr ""

#: ./docs/11.x/releases.md:91
#~ msgctxt "P"
#~ msgid "<a name=\"opt-in-routing\"></a>"
#~ msgstr ""

#: ./docs/10.x/releases.md:92
msgctxt "P"
msgid "Once a feature has been defined, you may easily determine if the current user has access to the given feature:"
msgstr "定義好 Feature 後，可以輕鬆判斷目前使用者是否能存取該功能："

#: ./docs/11.x/releases.md:92
msgctxt "H4"
msgid "Opt-in API and Broadcast Routing"
msgstr ""

#: ./docs/10.x/releases.md:94
msgctxt "CODE: php"
msgid ""
"if (Feature::active('new-onboarding-flow')) {\n"
"    // ...\n"
"}"
msgstr ""

#: ./docs/11.x/releases.md:94
msgctxt "P"
msgid "The `api.php` and `channels.php` route files are no longer present by default, as many applications do not require these files. Instead, they may be created using simple Artisan commands:"
msgstr ""

#: ./docs/11.x/releases.md:96
msgctxt "CODE: shell"
msgid ""
"php artisan install:api\n"
"\n"
"php artisan install:broadcasting"
msgstr ""

#: ./docs/9.x/releases.md:96
msgctxt "P"
msgid "However, in Laravel 9.x you may define an accessor and mutator using a single, non-prefixed method by type-hinting a return type of `Illuminate\\Database\\Eloquent\\Casts\\Attribute`:"
msgstr "不過，在 Laravel 9.x 中，只需要標示回傳型別為 `Illuminate\\Database\\Eloquent\\Casts\\Attribute`，就可以使用不含前置詞的單一一個方法來定義存取子與更動子："

#: ./docs/9.x/releases.md:98
msgctxt "CODE: php"
msgid ""
"use Illuminate\\Database\\Eloquent\\Casts\\Attribute;\n"
"\n"
"public function name(): Attribute\n"
"{\n"
"    return new Attribute(\n"
"        get: fn ($value) => strtoupper($value),\n"
"        set: fn ($value) => $value,\n"
"    );\n"
"}"
msgstr ""

#: ./docs/10.x/releases.md:100
msgctxt "P"
msgid "Of course, for convenience, Blade directives are also available:"
msgstr "當然，為了讓開發起來更方便，我們也提供了 Blade 指示詞："

#: ./docs/10.x/releases.md:102
msgctxt "CODE: blade"
msgid ""
"@feature('new-onboarding-flow')\n"
"    <div>\n"
"        <!-- ... -->\n"
"    </div>\n"
"@endfeature"
msgstr ""

#: ./docs/11.x/releases.md:102
#~ msgctxt "P"
#~ msgid "<a name=\"middleware\"></a>"
#~ msgstr ""

#: ./docs/11.x/releases.md:103
msgctxt "H4"
msgid "Middleware"
msgstr ""

#: ./docs/11.x/releases.md:105
msgctxt "P"
msgid "Previously, new Laravel applications included nine middleware. These middleware performed a variety of tasks such as authenticating requests, trimming input strings, and validating CSRF tokens."
msgstr ""

#: ./docs/11.x/releases.md:107
msgctxt "P"
msgid "In Laravel 11, these middleware have been moved into the framework itself, so that they do not add bulk to your application's structure. New methods for customizing the behavior of these middleware have been added to the framework and may be invoked from your application's `bootstrap/app.php` file:"
msgstr ""

#: ./docs/11.x/releases.md:109
msgctxt "CODE: php"
msgid ""
"->withMiddleware(function (Middleware $middleware) {\n"
"    $middleware->validateCsrfTokens(\n"
"        except: ['stripe/*']\n"
"    );\n"
"\n"
"    $middleware->web(append: [\n"
"        EnsureUserIsSubscribed::class,\n"
"    ])\n"
"})"
msgstr ""

#: ./docs/8.x/releases.md:109
msgctxt "P"
msgid "Thanks to the new `HasFactory` trait available on generated models, the model factory may be used like so:"
msgstr "由於產生的 Model 中包含了新的 `HasFactory` Trait，因此我們可以這樣使用 Model Factory："

#: ./docs/10.x/releases.md:110
msgctxt "P"
msgid "Pennant offers a variety of more advanced features and APIs. For more information, please consult the [comprehensive Pennant documentation](/docs/{{version}}/pennant)."
msgstr "Pennant 還提供了更多進階的功能與 API。更多資訊請參考[完整的 Pennant 說明文件](/docs/{{version}}/pennant)。"

#: ./docs/9.x/releases.md:110
msgctxt "P"
msgid "In addition, this new approach to defining accessors will cache object values that are returned by the attribute, just like [custom cast classes](/docs/{{version}}/eloquent-mutators#custom-casts):"
msgstr "此外，這種定義存取子的新方法也會將以屬性回傳的物件值快取起來，就跟[自訂型別轉換類別](/docs/{{version}}/eloquent-mutators#custom-casts)一樣："

#: ./docs/8.x/releases.md:111
msgctxt "CODE"
msgid ""
"use App\\Models\\User;\n"
"\n"
"User::factory()->count(50)->create();"
msgstr ""

#: ./docs/10.x/releases.md:112
#~ msgctxt "P"
#~ msgid "<a name=\"process\"></a>"
#~ msgstr ""

#: ./docs/9.x/releases.md:112
msgctxt "CODE: php"
msgid ""
"use App\\Support\\Address;\n"
"use Illuminate\\Database\\Eloquent\\Casts\\Attribute;\n"
"\n"
"public function address(): Attribute\n"
"{\n"
"    return new Attribute(\n"
"        get: fn ($value, $attributes) => new Address(\n"
"            $attributes['address_line_one'],\n"
"            $attributes['address_line_two'],\n"
"        ),\n"
"        set: fn (Address $value) => [\n"
"            'address_line_one' => $value->lineOne,\n"
"            'address_line_two' => $value->lineTwo,\n"
"        ],\n"
"    );\n"
"}"
msgstr ""

#: ./docs/10.x/releases.md:113
msgctxt "H3"
msgid "Process Interaction"
msgstr "使用 Process"

#: ./docs/10.x/releases.md:115
msgctxt "P"
msgid "*The process abstraction layer was contributed by [Nuno Maduro](https://github.com/nunomaduro) and [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr "*Process 的抽象層由 [Nuno Maduro](https://github.com/nunomaduro) 與 [Taylor Otwell](https://github.com/taylorotwell) 參與貢獻*。"

#: ./docs/8.x/releases.md:115
msgctxt "P"
msgid "Since model factories are now simple PHP classes, state transformations may be written as class methods. In addition, you may add any other helper classes to your Eloquent model factory as needed."
msgstr "由於 Model Factory 已經是一般的 PHP 類別了，因此 State 的變換應通過類別方法來撰寫。此外，也可以依照需求在 Eloquent Model Factory 內加上任何其他的輔助函式。"

#: ./docs/10.x/releases.md:117
msgctxt "P"
msgid "Laravel 10.x introduces a beautiful abstraction layer for starting and interacting with external processes via a new `Process` facade:"
msgstr "Laravel 10.x 中推出了一個新的 `Process` Facade，這個出色的抽象層可用來啟動與操縱外部處理程序 (Process)："

#: ./docs/8.x/releases.md:117
msgctxt "P"
msgid "For example, your `User` model might have a `suspended` state that modifies one of its default attribute values. You may define your state transformations using the base factory's `state` method. You may name your state method anything you like. After all, it's just a typical PHP method:"
msgstr "舉例來說，`User` Model 可能會有個 `suspended` 狀態，用於修改 Model 中預設的屬性值。可以通過基礎 Factory 的 `state` 方法來定義狀態變換。可以任意為狀態方法命名。不管怎麼樣，這個方法就只是個單純的 PHP 方法而已："

#: ./docs/10.x/releases.md:119
msgctxt "CODE: php"
msgid ""
"use Illuminate\\Support\\Facades\\Process;\n"
"\n"
"$result = Process::run('ls -la');\n"
"\n"
"return $result->output();"
msgstr ""

#: ./docs/8.x/releases.md:119
msgctxt "CODE"
msgid ""
"/**\n"
" * Indicate that the user is suspended.\n"
" *\n"
" * @return \\Illuminate\\Database\\Eloquent\\Factories\\Factory\n"
" */\n"
"public function suspended()\n"
"{\n"
"    return $this->state([\n"
"        'account_status' => 'suspended',\n"
"    ]);\n"
"}"
msgstr ""

#: ./docs/11.x/releases.md:121
msgctxt "P"
msgid "Since all middleware can be easily customized via your application's `bootstrap/app.php`, the need for a separate HTTP \"kernel\" class has been eliminated."
msgstr ""

#: ./docs/11.x/releases.md:123
#~ msgctxt "P"
#~ msgid "<a name=\"scheduling\"></a>"
#~ msgstr ""

#: ./docs/11.x/releases.md:124
msgctxt "H4"
msgid "Scheduling"
msgstr ""

#: ./docs/11.x/releases.md:126
msgctxt "P"
msgid "Using a new `Schedule` facade, scheduled tasks may now be defined directly in your application's `routes/console.php` file, eliminating the need for a separate console \"kernel\" class:"
msgstr ""

#: ./docs/10.x/releases.md:127
msgctxt "P"
msgid "Processes may even be started in pools, allowing for the convenient execution and management of concurrent processes:"
msgstr "也可以使用集區 (Pool) 的方式啟動處理程序，以更方便的執行與管理平行執行的處理程序："

#: ./docs/11.x/releases.md:128
msgctxt "CODE: php"
msgid ""
"use Illuminate\\Support\\Facades\\Schedule;\n"
"\n"
"Schedule::command('emails:send')->daily();"
msgstr ""

#: ./docs/10.x/releases.md:129
msgctxt "CODE: php"
msgid ""
"use Illuminate\\Process\\Pool;\n"
"use Illuminate\\Support\\Facades\\Process;\n"
"\n"
"[$first, $second, $third] = Process::concurrently(function (Pool $pool) {\n"
"    $pool->command('cat first.txt');\n"
"    $pool->command('cat second.txt');\n"
"    $pool->command('cat third.txt');\n"
"});\n"
"\n"
"return $first->output();"
msgstr ""

#: ./docs/8.x/releases.md:131
msgctxt "P"
msgid "After defining the state transformation method, we may use it like so:"
msgstr "定義好狀態變換方法後，我們可以這樣使用："

#: ./docs/9.x/releases.md:131
#~ msgctxt "P"
#~ msgid "<a name=\"enum-casting\"></a>"
#~ msgstr ""

#: ./docs/9.x/releases.md:132
msgctxt "H3"
msgid "Enum Eloquent Attribute Casting"
msgstr "Enum Eloquent 屬性型別轉換"

#: ./docs/8.x/releases.md:133
msgctxt "CODE"
msgid ""
"use App\\Models\\User;\n"
"\n"
"User::factory()->count(5)->suspended()->create();"
msgstr ""

#: ./docs/11.x/releases.md:134
#~ msgctxt "P"
#~ msgid "<a name=\"exception-handling\"></a>"
#~ msgstr ""

#: ./docs/11.x/releases.md:135
msgctxt "H4"
msgid "Exception Handling"
msgstr ""

#: ./docs/9.x/releases.md:135
msgctxt "P"
msgid "Enum casting is only available for PHP 8.1+."
msgstr "Enum 型別轉換只可在 PHP 8.1 以上使用。"

#: ./docs/11.x/releases.md:137
msgctxt "P"
msgid "Like routing and middleware, exception handling can now be customized from your application's `bootstrap/app.php` file instead of a separate exception handler class, reducing the overall number of files included in a new Laravel application:"
msgstr ""

#: ./docs/8.x/releases.md:137
msgctxt "P"
msgid "As mentioned, Laravel 8's model factories contain first class support for relationships. So, assuming our `User` model has a `posts` relationship method, we may simply run the following code to generate a user with three posts:"
msgstr "就像前面提到的一樣，Laravel 8 的 Model Factory 包含了對關聯的第一手支援。因此，假設我們的 `User` Model 有個 `posts` 關聯方法，我們只需要執行下列程式碼就能產生一個有 3 篇貼文的使用者："

#: ./docs/9.x/releases.md:137
msgctxt "P"
msgid "*Enum casting was contributed by [Mohamed Said](https://github.com/themsaid)*."
msgstr "*Enum 型別轉換由 [Mohamed Said](https://github.com/themsaid) 參與貢獻*。"

#: ./docs/11.x/releases.md:139
msgctxt "CODE: php"
msgid ""
"->withExceptions(function (Exceptions $exceptions) {\n"
"    $exceptions->dontReport(MissedFlightException::class);\n"
"\n"
"    $exceptions->report(function (InvalidOrderException $e) {\n"
"        // ...\n"
"    });\n"
"})"
msgstr ""

#: ./docs/8.x/releases.md:139
msgctxt "CODE"
msgid ""
"$users = User::factory()\n"
"            ->hasPosts(3, [\n"
"                'published' => false,\n"
"            ])\n"
"            ->create();"
msgstr ""

#: ./docs/9.x/releases.md:139
msgctxt "P"
msgid "Eloquent now allows you to cast your attribute values to PHP [\"backed\" Enums](https://www.php.net/manual/en/language.enumerations.backed.php). To accomplish this, you may specify the attribute and enum you wish to cast in your model's `$casts` property array:"
msgstr "現在，Eloquent 也能讓我們將屬性值轉換為 PHP 的 [「Backed」Enum](https://www.php.net/manual/en/language.enumerations.backed.php) 了。為此，可在 Model 中的 `$casts` 屬性陣列中指定要型別轉換的屬性與 Enum："

#: ./docs/9.x/releases.md:141
msgctxt "CODE"
msgid ""
"use App\\Enums\\ServerStatus;\n"
"\n"
"/**\n"
" * The attributes that should be cast.\n"
" *\n"
" * @var array\n"
" */\n"
"protected $casts = [\n"
"    'status' => ServerStatus::class,\n"
"];"
msgstr ""

#: ./docs/10.x/releases.md:142
msgctxt "P"
msgid "In addition, processes may be faked for convenient testing:"
msgstr "此外，也可以模擬 Process 以方便測試："

#: ./docs/10.x/releases.md:144
msgctxt "CODE: php"
msgid ""
"Process::fake();\n"
"\n"
"// ...\n"
"\n"
"Process::assertRan('ls -la');"
msgstr ""

#: ./docs/8.x/releases.md:145
msgctxt "P"
msgid "To ease the upgrade process, the [laravel/legacy-factories](https://github.com/laravel/legacy-factories) package has been released to provide support for the previous iteration of model factories within Laravel 8.x."
msgstr "為了減緩升級的過程，我們提供了 [laravel/legacy-factories](https://github.com/laravel/legacy-factories) 套件來在 Laravel 8.x 中提供舊版 Model Factory 的支援。"

#: ./docs/8.x/releases.md:147
msgctxt "P"
msgid "Laravel's re-written factories contain many more features that we think you will love. To learn more about model factories, please consult the [database testing documentation](/docs/{{version}}/database-testing#defining-model-factories)."
msgstr "Laravel 的全新 Factory 包含了其他更多我們認為你會喜歡的功能。要瞭解更多有關 Model Factory 的資訊，請參考[資料庫測試說明文件](/docs/{{version}}/database-testing#defining-model-factories)。"

#: ./docs/11.x/releases.md:149
#~ msgctxt "P"
#~ msgid "<a name=\"base-controller-class\"></a>"
#~ msgstr ""

#: ./docs/8.x/releases.md:149
#~ msgctxt "P"
#~ msgid "<a name=\"migration-squashing\"></a>"
#~ msgstr ""

#: ./docs/11.x/releases.md:150
msgctxt "H4"
msgid "Base `Controller` Class"
msgstr ""

#: ./docs/8.x/releases.md:150
msgctxt "H3"
msgid "Migration Squashing"
msgstr "資料庫遷移壓縮"

#: ./docs/10.x/releases.md:152
msgctxt "P"
msgid "For more information on interacting with processes, please consult the [comprehensive process documentation](/docs/{{version}}/processes)."
msgstr "更多有關使用 Process 的資訊，請參考[完整的 Process 說明文件](/docs/{{version}}/processes)。"

#: ./docs/11.x/releases.md:152
msgctxt "P"
msgid "The base controller included in new Laravel applications has been simplified. It no longer extends Laravel's internal `Controller` class, and the `AuthorizesRequests` and `ValidatesRequests` traits have been removed, as they may be included in your application's individual controllers if desired:"
msgstr ""

#: ./docs/8.x/releases.md:152
msgctxt "P"
msgid "*Migration squashing was contributed by [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr "*Migration 壓縮由 [Taylor Otwell](https://github.com/taylorotwell) 參與貢獻*。"

#: ./docs/9.x/releases.md:152
msgctxt "P"
msgid "Once you have defined the cast on your model, the specified attribute will be automatically cast to and from an enum when you interact with the attribute:"
msgstr "定義好 Model 的型別轉換後，每次存取該屬性時就會自動轉換對 Enum 進行轉換："

#: ./docs/10.x/releases.md:154
#~ msgctxt "P"
#~ msgid "<a name=\"test-profiling\"></a>"
#~ msgstr ""

#: ./docs/11.x/releases.md:154
msgctxt "CODE"
msgid ""
"<?php\n"
"\n"
"namespace App\\Http\\Controllers;\n"
"\n"
"abstract class Controller\n"
"{\n"
"    //\n"
"}"
msgstr ""

#: ./docs/8.x/releases.md:154
msgctxt "P"
msgid "As you build your application, you may accumulate more and more migrations over time. This can lead to your migration directory becoming bloated with potentially hundreds of migrations. If you're using MySQL or PostgreSQL, you may now \"squash\" your migrations into a single SQL file. To get started, execute the `schema:dump` command:"
msgstr "在寫網站的時候，我們可能會逐漸累積出越來越多的資料庫遷移檔。這樣可能會導致遷移檔目錄中被數百個遷移檔給佔滿。若你使用 MySQL 或 PostgreSQL，現在可以將遷移檔「壓縮」進單一 SQL 檔內。要開始壓縮，請執行 `schema:dump` 指令："

#: ./docs/9.x/releases.md:154
msgctxt "CODE"
msgid ""
"if ($server->status == ServerStatus::Provisioned) {\n"
"    $server->status = ServerStatus::Ready;\n"
"\n"
"    $server->save();\n"
"}"
msgstr ""

#: ./docs/10.x/releases.md:155
msgctxt "H3"
msgid "Test Profiling"
msgstr "測試分析"

#: ./docs/8.x/releases.md:156
msgctxt "CODE"
msgid ""
"php artisan schema:dump\n"
"\n"
"// Dump the current database schema and prune all existing migrations...\n"
"php artisan schema:dump --prune"
msgstr ""

#: ./docs/10.x/releases.md:157
msgctxt "P"
msgid "*Test profiling was contributed by [Nuno Maduro](https://github.com/nunomaduro)*."
msgstr "*測試分析由 [Nuno Maduro](https://github.com/nunomaduro) 參與貢獻*。"

#: ./docs/10.x/releases.md:159
msgctxt "P"
msgid "The Artisan `test` command has received a new `--profile` option that allows you to easily identify the slowest tests in your application:"
msgstr "Artisan 的 `test` 指令有了一個全新的 `--profile` 選項，能讓你輕鬆的找到專案中最慢的測試："

#: ./docs/9.x/releases.md:160
#~ msgctxt "P"
#~ msgid "<a name=\"implicit-route-bindings-with-enums\"></a>"
#~ msgstr ""

#: ./docs/10.x/releases.md:161
msgctxt "CODE: shell"
msgid "php artisan test --profile"
msgstr ""

#: ./docs/8.x/releases.md:161
msgctxt "P"
msgid "When you execute this command, Laravel will write a \"schema\" file to your `database/schema` directory. Now, when you attempt to migrate your database and no other migrations have been executed, Laravel will execute the schema file's SQL first. After executing the schema file's commands, Laravel will execute any remaining migrations that were not part of the schema dump."
msgstr "執行該指令時，Laravel 會將一個「結構描述 (Schema)」檔案寫入 `database/schema` 目錄內。接著，當要遷移資料庫且尚未執行過任何遷移時，Laravel 會先執行該結構描述檔的 SQL。執行玩結構描述檔的指令後，Laravel 才會接著執行不在該結構描述傾印中剩下的遷移。"

#: ./docs/9.x/releases.md:161
msgctxt "H3"
msgid "Implicit Route Bindings With Enums"
msgstr "使用 Enum 的隱式路由繫結"

#: ./docs/11.x/releases.md:163
#~ msgctxt "P"
#~ msgid "<a name=\"application-defaults\"></a>"
#~ msgstr ""

#: ./docs/8.x/releases.md:163
#~ msgctxt "P"
#~ msgid "<a name=\"job-batching\"></a>"
#~ msgstr ""

#: ./docs/9.x/releases.md:163
msgctxt "P"
msgid "*Implicit Enum bindings was contributed by [Nuno Maduro](https://github.com/nunomaduro)*."
msgstr "*隱式路由繫結由 [Nuno Maduro](https://github.com/nunomaduro) 參與貢獻*。"

#: ./docs/11.x/releases.md:164
msgctxt "H4"
msgid "Application Defaults"
msgstr ""

#: ./docs/8.x/releases.md:164
msgctxt "H3"
msgid "Job Batching"
msgstr "批次任務"

#: ./docs/10.x/releases.md:165
msgctxt "P"
msgid "For convenience, the slowest tests will be displayed directly within the CLI output:"
msgstr "為了方便起見，最慢的測試會直接在 CLI 的輸出中顯示出來："

#: ./docs/9.x/releases.md:165
msgctxt "P"
msgid "PHP 8.1 introduces support for [Enums](https://www.php.net/manual/en/language.enumerations.backed.php). Laravel 9.x introduces the ability to type-hint an Enum on your route definition and Laravel will only invoke the route if that route segment is a valid Enum value in the URI. Otherwise, an HTTP 404 response will be returned automatically. For example, given the following Enum:"
msgstr "PHP 8.1 新增了對 [Enum](https://www.php.net/manual/en/language.enumerations.backed.php) 的支援。Laravel 9.x 中提供了能在路由定義中對 Enum 進行型別提示的功能。加上型別提示後，只有當網址中的路由片段 (Segment) 為有效的 Enum 時，Laravel 才會叫用該路由。若不是有效的 Enum 值，則會自動回傳 HTTP 404 回應。舉例來說，假設有下列 Enum："

#: ./docs/11.x/releases.md:166
msgctxt "P"
msgid "By default, new Laravel applications use SQLite for database storage, as well as the `database` driver for Laravel's session, cache, and queue. This allows you to begin building your application immediately after creating a new Laravel application, without being required to install additional software or create additional database migrations."
msgstr ""

#: ./docs/8.x/releases.md:166
msgctxt "P"
msgid "*Job batching was contributed by [Taylor Otwell](https://github.com/taylorotwell) & [Mohamed Said](https://github.com/themsaid)*."
msgstr "*批次任務由 [Taylor Otwell](https://github.com/taylorotwell) & [Mohamed Said](https://github.com/themsaid) 參與貢獻*。"

#: ./docs/9.x/releases.md:167
msgctxt "CODE: php"
msgid ""
"enum Category: string\n"
"{\n"
"    case Fruits = 'fruits';\n"
"    case People = 'people';\n"
"}"
msgstr ""

#: ./docs/11.x/releases.md:168
msgctxt "P"
msgid "In addition, over time, the `database` drivers for these Laravel services have become robust enough for production usage in many application contexts; therefore, they provide a sensible, unified choice for both local and production applications."
msgstr ""

#: ./docs/8.x/releases.md:168
msgctxt "P"
msgid "Laravel's job batching feature allows you to easily execute a batch of jobs and then perform some action when the batch of jobs has completed executing."
msgstr "Laravel 的批次任務功能能讓你輕鬆地執行一系列的任務，並接著在這些任務完成後執行其他操作。"

#: ./docs/11.x/releases.md:170
#~ msgctxt "P"
#~ msgid "<a name=\"reverb\"></a>"
#~ msgstr ""

#: ./docs/8.x/releases.md:170
msgctxt "P"
msgid "The new `batch` method of the `Bus` facade may be used to dispatch a batch of jobs. Of course, batching is primarily useful when combined with completion callbacks. So, you may use the `then`, `catch`, and `finally` methods to define completion callbacks for the batch. Each of these callbacks will receive an `Illuminate\\Bus\\Batch` instance when they are invoked:"
msgstr "`Bus` Facade 的全新 `batch` 方法可以用來分派一批任務。當然，批次功能與完成回呼一起使用時是最有用。因此，可以使用 `then`, `catch` 與 `finally` 方法來為該批次定義完成回呼。這些回呼都會在被叫用時收到 `Illuminate\\Bus\\Batch` 實體："

#: ./docs/10.x/releases.md:171
#~ msgctxt "P"
#~ msgid "<a name=\"pest-scaffolding\"></a>"
#~ msgstr ""

#: ./docs/11.x/releases.md:171
msgctxt "H3"
msgid "Laravel Reverb"
msgstr ""

#: ./docs/10.x/releases.md:172
msgctxt "H3"
msgid "Pest Scaffolding"
msgstr "Pest 的 Scaffold"

#: ./docs/8.x/releases.md:172
msgctxt "CODE"
msgid ""
"use App\\Jobs\\ProcessPodcast;\n"
"use App\\Models\\Podcast;\n"
"use Illuminate\\Bus\\Batch;\n"
"use Illuminate\\Support\\Facades\\Bus;\n"
"use Throwable;\n"
"\n"
"$batch = Bus::batch([\n"
"    new ProcessPodcast(Podcast::find(1)),\n"
"    new ProcessPodcast(Podcast::find(2)),\n"
"    new ProcessPodcast(Podcast::find(3)),\n"
"    new ProcessPodcast(Podcast::find(4)),\n"
"    new ProcessPodcast(Podcast::find(5)),\n"
"])->then(function (Batch $batch) {\n"
"    // All jobs completed successfully...\n"
"})->catch(function (Batch $batch, Throwable $e) {\n"
"    // First batch job failure detected...\n"
"})->finally(function (Batch $batch) {\n"
"    // The batch has finished executing...\n"
"})->dispatch();\n"
"\n"
"return $batch->id;"
msgstr ""

#: ./docs/11.x/releases.md:173
msgctxt "P"
msgid "*Laravel Reverb was developed by [Joe Dixon](https://github.com/joedixon)*."
msgstr ""

#: ./docs/10.x/releases.md:174
msgctxt "P"
msgid "New Laravel projects may now be created with Pest test scaffolding by default. To opt-in to this feature, provide the `--pest` flag when creating a new application via the Laravel installer:"
msgstr "現在，新建立的 Laravel 專案中可以使用 Pest 測試來 Scaffold。若要使用這個功能，請在使用 Laravel 安裝程式建立新專案時提供 `--pest` 旗標："

#: ./docs/11.x/releases.md:175
msgctxt "P"
msgid "[Laravel Reverb](https://reverb.laravel.com) brings blazing-fast and scalable real-time WebSocket communication directly to your Laravel application, and provides seamless integration with Laravel’s existing suite of event broadcasting tools, such as Laravel Echo."
msgstr ""

#: ./docs/9.x/releases.md:175
msgctxt "P"
msgid "You may define a route that will only be invoked if the `{category}` route segment is `fruits` or `people`. Otherwise, an HTTP 404 response will be returned:"
msgstr "我們可以定義一個只有當 `{category}` 路由片段為 `fruits` 或 `people` 時才會被叫用的路由。若為其他值，則會回傳 HTTP 404 回應："

#: ./docs/10.x/releases.md:176
msgctxt "CODE: shell"
msgid "laravel new example-application --pest"
msgstr ""

#: ./docs/11.x/releases.md:177
msgctxt "CODE: shell"
msgid "php artisan reverb:start"
msgstr ""

#: ./docs/9.x/releases.md:177
msgctxt "CODE: php"
msgid ""
"Route::get('/categories/{category}', function (Category $category) {\n"
"    return $category->value;\n"
"});"
msgstr ""

#: ./docs/10.x/releases.md:180
#~ msgctxt "P"
#~ msgid "<a name=\"generator-cli-prompts\"></a>"
#~ msgstr ""

#: ./docs/10.x/releases.md:181
msgctxt "H3"
msgid "Generator CLI Prompts"
msgstr "產生 CLI 提示字元"

#: ./docs/11.x/releases.md:181
msgctxt "P"
msgid "In addition, Reverb supports horizontal scaling via Redis's publish / subscribe capabilities, allowing you to distribute your WebSocket traffic across multiple backend Reverb servers all supporting a single, high-demand application."
msgstr ""

#: ./docs/10.x/releases.md:183
msgctxt "P"
msgid "*Generator CLI prompts were contributed by [Jess Archer](https://github.com/jessarcher)*."
msgstr "*產生 CLI 提示字元由 [Jess Archer](https://github.com/jessarcher) 參與貢獻*。"

#: ./docs/11.x/releases.md:183
msgctxt "P"
msgid "For more information on Laravel Reverb, please consult the complete [Reverb documentation](/docs/{{version}}/reverb)."
msgstr ""

#: ./docs/9.x/releases.md:183
#~ msgctxt "P"
#~ msgid "<a name=\"forced-scoping-of-route-bindings\"></a>"
#~ msgstr ""

#: ./docs/9.x/releases.md:184
msgctxt "H3"
msgid "Forced Scoping Of Route Bindings"
msgstr "Route 繫結的強制限定範圍"

#: ./docs/10.x/releases.md:185
msgctxt "P"
msgid "To improve the framework's developer experience, all of Laravel's built-in `make` commands no longer require any input. If the commands are invoked without input, you will be prompted for the required arguments:"
msgstr "為了改進 Laravel 所提供的開發者經驗，Laravel 內所有內建的 `make` 指令現在已不再需要任何輸入。在執行這些指令時，若未提供輸入，則會被提示輸入必要的引數："

#: ./docs/11.x/releases.md:185
#~ msgctxt "P"
#~ msgid "<a name=\"rate-limiting\"></a>"
#~ msgstr ""

#: ./docs/11.x/releases.md:186
msgctxt "H3"
msgid "Per-Second Rate Limiting"
msgstr ""

#: ./docs/9.x/releases.md:186
msgctxt "P"
msgid "*Forced scoped bindings was contributed by [Claudio Dekker](https://github.com/claudiodekker)*."
msgstr "*強制限定作用範圍的繫結由 [Claudio Dekker](https://github.com/claudiodekker) 參與貢獻*。"

#: ./docs/10.x/releases.md:187
msgctxt "CODE: shell"
msgid "php artisan make:controller"
msgstr ""

#: ./docs/11.x/releases.md:188
msgctxt "P"
msgid "*Per-second rate limiting was contributed by [Tim MacDonald](https://github.com/timacdonald)*."
msgstr ""

#: ./docs/9.x/releases.md:188
msgctxt "P"
msgid "In previous releases of Laravel, you may wish to scope the second Eloquent model in a route definition such that it must be a child of the previous Eloquent model. For example, consider this route definition that retrieves a blog post by slug for a specific user:"
msgstr "在之前版本的 Laravel 中，我們可以在路由定義中限定第二個 Eloquent Model 一定要是前一個 Eloquent Model 的子 Model。舉例來說，假設有下列這樣通過 Slug 取得特定使用者的部落格貼文的路由定義："

#: ./docs/11.x/releases.md:190
msgctxt "P"
msgid "Laravel now supports \"per-second\" rate limiting for all rate limiters, including those for HTTP requests and queued jobs. Previously, Laravel's rate limiters were limited to \"per-minute\" granularity:"
msgstr ""

#: ./docs/9.x/releases.md:190
msgctxt "CODE"
msgid ""
"use App\\Models\\Post;\n"
"use App\\Models\\User;\n"
"\n"
"Route::get('/users/{user}/posts/{post:slug}', function (User $user, Post $post) {\n"
"    return $post;\n"
"});"
msgstr ""

#: ./docs/10.x/releases.md:191
#~ msgctxt "P"
#~ msgid "<a name=\"horizon-telescope-facelift\"></a>"
#~ msgstr ""

#: ./docs/10.x/releases.md:192
msgctxt "H3"
msgid "Horizon / Telescope Facelift"
msgstr "Horizon / Telescope 的全新面貌"

#: ./docs/11.x/releases.md:192
msgctxt "CODE: php"
msgid ""
"RateLimiter::for('invoices', function (Request $request) {\n"
"    return Limit::perSecond(1);\n"
"});"
msgstr ""

#: ./docs/10.x/releases.md:194
msgctxt "P"
msgid "[Horizon](/docs/{{version}}/horizon) and [Telescope](/docs/{{version}}/telescope) have been updated with a fresh, modern look including improved typography, spacing, and design:"
msgstr "[Horizon](/docs/{{version}}/horizon) 與 [Telescope](/docs/{{version}}/telescope) 的外觀已更新為更現代的樣子，包含改進的字體、間距，以及外觀設計："

#: ./docs/8.x/releases.md:194
msgctxt "P"
msgid "To learn more about job batching, please consult the [queue documentation](/docs/{{version}}/queues#job-batching)."
msgstr "要瞭解更多有關批次任務的資訊，請參考[佇列說明文件](/docs/{{version}}/queues#job-batching)。"

#: ./docs/8.x/releases.md:196
#~ msgctxt "P"
#~ msgid "<a name=\"improved-rate-limiting\"></a>"
#~ msgstr ""

#: ./docs/8.x/releases.md:197
msgctxt "H3"
msgid "Improved Rate Limiting"
msgstr "改進的頻率限制"

#: ./docs/9.x/releases.md:197
msgctxt "P"
msgid "When using a custom keyed implicit binding as a nested route parameter, Laravel will automatically scope the query to retrieve the nested model by its parent using conventions to guess the relationship name on the parent. However, this behavior was only previously supported by Laravel when a custom key was used for the child route binding."
msgstr "在巢狀路由參數中使用自訂索引鍵的隱式繫結時，Laravel 會自動使用慣例來猜測上層 Model 的關聯名稱，並在查詢巢狀 Model 時以此限定查詢範圍。不過，在以前版本的 Laravel 中，只有在子路由繫結上使用自訂索引鍵時才可使用此功能。"

#: ./docs/11.x/releases.md:198
msgctxt "P"
msgid "For more information on rate limiting in Laravel, check out the [rate limiting documentation](/docs/{{version}}/routing#rate-limiting)."
msgstr ""

#: ./docs/8.x/releases.md:199
msgctxt "P"
msgid "*Rate limiting improvements were contributed by [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr "(頻率限制的改進由 [Taylor Otwell](https://github.com/taylorotwell) 參與貢獻*。"

#: ./docs/9.x/releases.md:199
msgctxt "P"
msgid "However, in Laravel 9.x, you may now instruct Laravel to scope \"child\" bindings even when a custom key is not provided. To do so, you may invoke the `scopeBindings` method when defining your route:"
msgstr "不過，在 Laravel 9.x 中，就算沒有提供自訂索引鍵，我們還是可以告訴 Laravel 要如何對「子」繫結限定範圍。為此，我們可以在定義路由時叫用 `scopeBindings` 方法："

#: ./docs/11.x/releases.md:200
#~ msgctxt "P"
#~ msgid "<a name=\"health\"></a>"
#~ msgstr ""

#: ./docs/11.x/releases.md:201
msgctxt "H3"
msgid "Health Routing"
msgstr ""

#: ./docs/8.x/releases.md:201
msgctxt "P"
msgid "Laravel's request rate limiter feature has been augmented with more flexibility and power, while still maintaining backwards compatibility with previous release's `throttle` middleware API."
msgstr "Laravel 的請求頻率限制功能現在有了更多的彈性與能力，且仍於過去版本的 `throttle` 中間層 API 保持向下相容性。"

#: ./docs/9.x/releases.md:201
msgctxt "CODE"
msgid ""
"use App\\Models\\Post;\n"
"use App\\Models\\User;\n"
"\n"
"Route::get('/users/{user}/posts/{post}', function (User $user, Post $post) {\n"
"    return $post;\n"
"})->scopeBindings();"
msgstr ""

#: ./docs/11.x/releases.md:203
msgctxt "P"
msgid "*Health routing was contributed by [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr ""

#: ./docs/8.x/releases.md:203
msgctxt "P"
msgid "Rate limiters are defined using the `RateLimiter` facade's `for` method. The `for` method accepts a rate limiter name and a closure that returns the limit configuration that should apply to routes that are assigned this rate limiter:"
msgstr "可以使用 `RateLimiter` Facade 的 `for` 方法來定義頻率限制程式。`for` 方法接收頻率限制程式的名稱、以及一個閉包。該閉包應回傳頻率限制的設定，該設定將套用到有設定這個頻率限制程式的路由上："

#: ./docs/11.x/releases.md:205
msgctxt "P"
msgid "New Laravel 11 applications include a `health` routing directive, which instructs Laravel to define a simple health-check endpoint that may be invoked by third-party application health monitoring services or orchestration systems like Kubernetes. By default, this route is served at `/up`:"
msgstr ""

#: ./docs/8.x/releases.md:205
msgctxt "CODE"
msgid ""
"use Illuminate\\Cache\\RateLimiting\\Limit;\n"
"use Illuminate\\Support\\Facades\\RateLimiter;\n"
"\n"
"RateLimiter::for('global', function (Request $request) {\n"
"    return Limit::perMinute(1000);\n"
"});"
msgstr ""

#: ./docs/11.x/releases.md:207
msgctxt "CODE: php"
msgid ""
"->withRouting(\n"
"    web: __DIR__.'/../routes/web.php',\n"
"    commands: __DIR__.'/../routes/console.php',\n"
"    health: '/up',\n"
")"
msgstr ""

#: ./docs/9.x/releases.md:208
msgctxt "P"
msgid "Or, you may instruct an entire group of route definitions to use scoped bindings:"
msgstr "或者，也可以讓整個路由定義群組使用限定範圍的繫結："

#: ./docs/9.x/releases.md:210
msgctxt "CODE"
msgid ""
"Route::scopeBindings()->group(function () {\n"
"    Route::get('/users/{user}/posts/{post}', function (User $user, Post $post) {\n"
"        return $post;\n"
"    });\n"
"});"
msgstr ""

#: ./docs/8.x/releases.md:212
msgctxt "P"
msgid "Since rate limiter callbacks receive the incoming HTTP request instance, you may build the appropriate rate limit dynamically based on the incoming request or authenticated user:"
msgstr "由於頻率限制程式的回呼會接收連入 HTTP 請求實體，因此我們可以依據連入請求或登入使用者來動態調整適當的頻率限制："

#: ./docs/8.x/releases.md:214
msgctxt "CODE"
msgid ""
"RateLimiter::for('uploads', function (Request $request) {\n"
"    return $request->user()->vipCustomer()\n"
"                ? Limit::none()\n"
"                : Limit::perMinute(100);\n"
"});"
msgstr ""

#: ./docs/11.x/releases.md:215
msgctxt "P"
msgid "When HTTP requests are made to this route, Laravel will also dispatch a `DiagnosingHealth` event, allowing you to perform additional health checks that are relevant to your application."
msgstr ""

#: ./docs/9.x/releases.md:216
#~ msgctxt "P"
#~ msgid "<a name=\"controller-route-groups\"></a>"
#~ msgstr ""

#: ./docs/11.x/releases.md:217
#~ msgctxt "P"
#~ msgid "<a name=\"encryption\"></a>"
#~ msgstr ""

#: ./docs/9.x/releases.md:217
msgctxt "H3"
msgid "Controller Route Groups"
msgstr "Controller 路由群組"

#: ./docs/11.x/releases.md:218
msgctxt "H3"
msgid "Graceful Encryption Key Rotation"
msgstr ""

#: ./docs/9.x/releases.md:219
msgctxt "P"
msgid "*Route group improvements were contributed by [Luke Downing](https://github.com/lukeraymonddowning)*."
msgstr "*路由群組的改進由 [Luke Downing](https://github.com/lukeraymonddowning) 參與貢獻*。"

#: ./docs/11.x/releases.md:220
msgctxt "P"
msgid "*Graceful encryption key rotation was contributed by [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr ""

#: ./docs/8.x/releases.md:220
msgctxt "P"
msgid "Sometimes you may wish to segment rate limits by some arbitrary value. For example, you may wish to allow users to access a given route 100 times per minute per IP address. To accomplish this, you may use the `by` method when building your rate limit:"
msgstr "有時候，我們可能會像以某些任意數值來設定頻率限制。舉例來說，我們可能會想限制給定的路由：每個 IP 位址每分鐘只能存取 100 次。為此，可以在設定頻率限制時使用 `by` 方法："

#: ./docs/9.x/releases.md:221
msgctxt "P"
msgid "You may now use the `controller` method to define the common controller for all of the routes within the group. Then, when defining the routes, you only need to provide the controller method that they invoke:"
msgstr "我們現在可以使用 `controller` 方法來在路由群組中為所有的路由定義通用的 Controller 了。定義好之後，當定義路由時，就只需要提供要叫用的 Controller 方法即可："

#: ./docs/11.x/releases.md:222
msgctxt "P"
msgid "Since Laravel encrypts all cookies, including your application's session cookie, essentially every request to a Laravel application relies on encryption. However, because of this, rotating your application's encryption key would log all users out of your application. In addition, decrypting data that was encrypted by the previous encryption key becomes impossible."
msgstr ""

#: ./docs/8.x/releases.md:222
msgctxt "CODE"
msgid ""
"RateLimiter::for('uploads', function (Request $request) {\n"
"    return $request->user()->vipCustomer()\n"
"                ? Limit::none()\n"
"                : Limit::perMinute(100)->by($request->ip());\n"
"});"
msgstr ""

#: ./docs/9.x/releases.md:223
msgctxt "CODE"
msgid ""
"use App\\Http\\Controllers\\OrderController;\n"
"\n"
"Route::controller(OrderController::class)->group(function () {\n"
"    Route::get('/orders/{id}', 'show');\n"
"    Route::post('/orders', 'store');\n"
"});"
msgstr ""

#: ./docs/11.x/releases.md:224
msgctxt "P"
msgid "Laravel 11 allows you to define your application's previous encryption keys as a comma-delimited list via the `APP_PREVIOUS_KEYS` environment variable."
msgstr ""

#: ./docs/11.x/releases.md:226
msgctxt "P"
msgid "When encrypting values, Laravel will always use the \"current\" encryption key, which is within the `APP_KEY` environment variable. When decrypting values, Laravel will first try the current key. If decryption fails using the current key, Laravel will try all previous keys until one of the keys is able to decrypt the value."
msgstr ""

#: ./docs/11.x/releases.md:228
msgctxt "P"
msgid "This approach to graceful decryption allows users to keep using your application uninterrupted even if your encryption key is rotated."
msgstr ""

#: ./docs/8.x/releases.md:228
msgctxt "P"
msgid "Rate limiters may be attached to routes or route groups using the `throttle` [middleware](/docs/{{version}}/middleware). The throttle middleware accepts the name of the rate limiter you wish to assign to the route:"
msgstr "可以使用 `throttle` [Middleware](/docs/{{version}}/middleware) 來將頻率限制程式附加到路由或路由群組上。這個 Throttle Middleware 接受欲指派給路由的頻率限制程式名稱："

#: ./docs/11.x/releases.md:230
msgctxt "P"
msgid "For more information on encryption in Laravel, check out the [encryption documentation](/docs/{{version}}/encryption)."
msgstr ""

#: ./docs/8.x/releases.md:230
msgctxt "CODE"
msgid ""
"Route::middleware(['throttle:uploads'])->group(function () {\n"
"    Route::post('/audio', function () {\n"
"        //\n"
"    });\n"
"\n"
"    Route::post('/video', function () {\n"
"        //\n"
"    });\n"
"});"
msgstr ""

#: ./docs/9.x/releases.md:230
#~ msgctxt "P"
#~ msgid "<a name=\"full-text\"></a>"
#~ msgstr ""

#: ./docs/9.x/releases.md:231
msgctxt "H3"
msgid "Full Text Indexes / Where Clauses"
msgstr "全文索引與 Where 子句"

#: ./docs/11.x/releases.md:232
#~ msgctxt "P"
#~ msgid "<a name=\"automatic-password-rehashing\"></a>"
#~ msgstr ""

#: ./docs/11.x/releases.md:233
msgctxt "H3"
msgid "Automatic Password Rehashing"
msgstr ""

#: ./docs/9.x/releases.md:233
msgctxt "P"
msgid "*Full text indexes and \"where\" clauses were contributed by [Taylor Otwell](https://github.com/taylorotwell) and [Dries Vints](https://github.com/driesvints)*."
msgstr "*全文索引與「where」子句由 [Taylor Otwell](https://github.com/taylorotwell) 與 [Dries Vints](https://github.com/driesvints) 參與貢獻*。"

#: ./docs/11.x/releases.md:235
msgctxt "P"
msgid "*Automatic password rehashing was contributed by [Stephen Rees-Carter](https://github.com/valorin)*."
msgstr ""

#: ./docs/9.x/releases.md:235
msgctxt "P"
msgid "When using MySQL or PostgreSQL, the `fullText` method may now be added to column definitions to generate full text indexes:"
msgstr "現在，在使用 MySQL 或 PostgresSQL 時，我們可以在欄位定義中新增 `fullText` 方法來產生全文索引 (Full Text Indexes)："

#: ./docs/11.x/releases.md:237
msgctxt "P"
msgid "Laravel's default password hashing algorithm is bcrypt. The \"work factor\" for bcrypt hashes can be adjusted via the `config/hashing.php` configuration file or the `BCRYPT_ROUNDS` environment variable."
msgstr ""

#: ./docs/9.x/releases.md:237
msgctxt "CODE"
msgid "$table->text('bio')->fullText();"
msgstr ""

#: ./docs/11.x/releases.md:239
msgctxt "P"
msgid "Typically, the bcrypt work factor should be increased over time as CPU / GPU processing power increases. If you increase the bcrypt work factor for your application, Laravel will now gracefully and automatically rehash user passwords as users authenticate with your application."
msgstr ""

#: ./docs/9.x/releases.md:239
msgctxt "P"
msgid "In addition, the `whereFullText` and `orWhereFullText` methods may be used to add full text \"where\" clauses to a query for columns that have [full text indexes](/docs/{{version}}/migrations#available-index-types). These methods will be transformed into the appropriate SQL for the underlying database system by Laravel. For example, a `MATCH AGAINST` clause will be generated for applications utilizing MySQL:"
msgstr "此外，也可以使用 `whereFullText` 與 `orWhereFullText` 方法來在查詢中為有[全文索引](/docs/{{version}}/migrations#available-index-types)的欄位加上全文「where」子句。Laravel 會依據底層的資料庫系統將這些方法轉換為適當的 SQL。舉例來說，使用 MySQL 的專案會產生 `MATCH AGAINST` 子句："

#: ./docs/8.x/releases.md:240
msgctxt "P"
msgid "To learn more about rate limiting, please consult the [routing documentation](/docs/{{version}}/routing#rate-limiting)."
msgstr "要瞭解更多有關頻率限制的資訊，請參考[路由說明文件](/docs/{{version}}/routing#rate-limiting)。"

#: ./docs/11.x/releases.md:241
#~ msgctxt "P"
#~ msgid "<a name=\"prompt-validation\"></a>"
#~ msgstr ""

#: ./docs/9.x/releases.md:241
msgctxt "CODE"
msgid ""
"$users = DB::table('users')\n"
"           ->whereFullText('bio', 'web developer')\n"
"           ->get();"
msgstr ""

#: ./docs/11.x/releases.md:242
msgctxt "H3"
msgid "Prompt Validation"
msgstr ""

#: ./docs/8.x/releases.md:242
#~ msgctxt "P"
#~ msgid "<a name=\"improved-maintenance-mode\"></a>"
#~ msgstr ""

#: ./docs/8.x/releases.md:243
msgctxt "H3"
msgid "Improved Maintenance Mode"
msgstr "改進過的維護模式"

#: ./docs/11.x/releases.md:244
msgctxt "P"
msgid "*Prompt validator integration was contributed by [Andrea Marco Sartori](https://github.com/cerbero90)*."
msgstr ""

#: ./docs/8.x/releases.md:245
msgctxt "P"
msgid "*Maintenance mode improvements were contributed by [Taylor Otwell](https://github.com/taylorotwell) with inspiration from [Spatie](https://spatie.be)*."
msgstr "*改進過的維護模式由 [Taylor Otwell](https://github.com/taylorotwell) 參與貢獻，靈感來自 [Spatie](https://spatie.be)*。"

#: ./docs/9.x/releases.md:245
#~ msgctxt "P"
#~ msgid "<a name=\"laravel-scout-database-engine\"></a>"
#~ msgstr ""

#: ./docs/11.x/releases.md:246
msgctxt "P"
msgid "[Laravel Prompts](/docs/{{version}}/prompts) is a PHP package for adding beautiful and user-friendly forms to your command-line applications, with browser-like features including placeholder text and validation."
msgstr ""

#: ./docs/9.x/releases.md:246
msgctxt "H3"
msgid "Laravel Scout Database Engine"
msgstr "Laravel Scout 資料庫引擎"

#: ./docs/8.x/releases.md:247
msgctxt "P"
msgid "In previous releases of Laravel, the `php artisan down` maintenance mode feature may be bypassed using an \"allow list\" of IP addresses that were allowed to access the application. This feature has been removed in favor of a simpler \"secret\" / token solution."
msgstr "在之前版本的 Laravel 中，`php artisan down` 維護模式功能可以通過使用一組允許存取網站的 IP 位址「允許列表」來繞過。該功能現已被移除，並改用了一種更簡單的「密鑰」/ 權杖方案來代替。"

#: ./docs/11.x/releases.md:248
msgctxt "P"
msgid "Laravel Prompts supports input validation via closures:"
msgstr ""

#: ./docs/9.x/releases.md:248
msgctxt "P"
msgid "*The Laravel Scout database engine was contributed by [Taylor Otwell](https://github.com/taylorotwell) and [Dries Vints](https://github.com/driesvints)*."
msgstr "*Laravel Scout 資料庫引擎由 [Taylor Otwell](https://github.com/taylorotwell) 與 [Dries Vints](https://github.com/driesvints) 參與貢獻*。"

#: ./docs/8.x/releases.md:249
msgctxt "P"
msgid "While in maintenance mode, you may use the `secret` option to specify a maintenance mode bypass token:"
msgstr "在維護模式下，可以使用 `secret` 選項來指定一個用來繞過維護模式的權杖："

#: ./docs/11.x/releases.md:250
msgctxt "CODE: php"
msgid ""
"$name = text(\n"
"    label: 'What is your name?',\n"
"    validate: fn (string $value) => match (true) {\n"
"        strlen($value) < 3 => 'The name must be at least 3 characters.',\n"
"        strlen($value) > 255 => 'The name must not exceed 255 characters.',\n"
"        default => null\n"
"    }\n"
");"
msgstr ""

#: ./docs/9.x/releases.md:250
msgctxt "P"
msgid "If your application interacts with small to medium sized databases or has a light workload, you may now use Scout's \"database\" engine instead of a dedicated search service such as Algolia or MeiliSearch. The database engine will use \"where like\" clauses and full text indexes when filtering results from your existing database to determine the applicable search results for your query."
msgstr "若你的專案使用中小型的資料庫，或是資料庫的工作量 (Workload) 不高的話，現在，你可以使用 Scout 的「database」引擎，而不需使用如 Algolia 或 MeiliSearch 等專門的搜尋服務。在從現有資料庫過濾結果時，資料庫引擎會使用「where like」查詢語句來取得搜尋結果。"

#: ./docs/8.x/releases.md:251
msgctxt "CODE"
msgid "php artisan down --secret=\"1630542a-246b-4b66-afa1-dd72a4c43515\""
msgstr ""

#: ./docs/9.x/releases.md:252
msgctxt "P"
msgid "To learn more about the Scout database engine, consult the [Scout documentation](/docs/{{version}}/scout)."
msgstr "要瞭解更多有關 Scout 資料庫引擎的資訊，請參考 [Scout 說明文件](/docs/{{version}}/scout)。"

#: ./docs/8.x/releases.md:253
msgctxt "P"
msgid "After placing the application in maintenance mode, you may navigate to the application URL matching this token and Laravel will issue a maintenance mode bypass cookie to your browser:"
msgstr "將應用程式放入維護模式後，可以瀏覽符合該權杖的應用程式網址，Laravel 會簽發一個繞過維護模式的 Cookie 給瀏覽器："

#: ./docs/9.x/releases.md:254
#~ msgctxt "P"
#~ msgid "<a name=\"rendering-inline-blade-templates\"></a>"
#~ msgstr ""

#: ./docs/8.x/releases.md:255
msgctxt "CODE"
msgid "https://example.com/1630542a-246b-4b66-afa1-dd72a4c43515"
msgstr ""

#: ./docs/9.x/releases.md:255
msgctxt "H3"
msgid "Rendering Inline Blade Templates"
msgstr "轉譯內嵌的 Blade 樣板"

#: ./docs/8.x/releases.md:257
msgctxt "P"
msgid "When accessing this hidden route, you will then be redirected to the `/` route of the application. Once the cookie has been issued to your browser, you will be able to browse the application normally as if it was not in maintenance mode."
msgstr "在存取該隱藏路由時，會接著被重新導向至應用程式的 `/` 路由。該 Cookie 被簽發給瀏覽器後，就可以像沒有在維護模式一樣正常地瀏覽應用程式。"

#: ./docs/9.x/releases.md:257
msgctxt "P"
msgid "*Rendering inline Blade templates was contributed by [Jason Beggs](https://github.com/jasonlbeggs). Rendering inline Blade components was contributed by [Toby Zerner](https://github.com/tobyzerner)*."
msgstr "*轉譯內嵌的 Blade 樣板由 [Jason Beggs](https://github.com/jasonlbeggs) 參與貢獻。轉譯內嵌的 Blade 元件由 [Toby Zerner](https://github.com/tobyzerner) 參與貢獻*。"

#: ./docs/8.x/releases.md:259
#~ msgctxt "P"
#~ msgid "<a name=\"pre-rendering-the-maintenance-mode-view\"></a>"
#~ msgstr ""

#: ./docs/9.x/releases.md:259
msgctxt "P"
msgid "Sometimes you may need to transform a raw Blade template string into valid HTML. You may accomplish this using the `render` method provided by the `Blade` facade. The `render` method accepts the Blade template string and an optional array of data to provide to the template:"
msgstr "有時候，我們可能會想將原始的 Blade 樣板字串轉譯為有效的 HTML。我們可以通過 `Blade` Facade 所提供的 `render` 方法來達成。`render` 方法接受 Blade 樣板字串，以及一個用來提供給樣板的可選資料陣列："

#: ./docs/8.x/releases.md:260
msgctxt "H4"
msgid "Pre-Rendering The Maintenance Mode View"
msgstr "預轉譯維護模式 View"

#: ./docs/11.x/releases.md:261
msgctxt "P"
msgid "However, this can become cumbersome when dealing with many inputs or complicated validation scenarios. Therefore, in Laravel 11, you may utilize the full power of Laravel's [validator](/docs/{{version}}/validation) when validating prompt inputs:"
msgstr ""

#: ./docs/9.x/releases.md:261
msgctxt "CODE: php"
msgid ""
"use Illuminate\\Support\\Facades\\Blade;\n"
"\n"
"return Blade::render('Hello, {{ $name }}', ['name' => 'Julian Bashir']);"
msgstr ""

#: ./docs/8.x/releases.md:262
msgctxt "P"
msgid "If you utilize the `php artisan down` command during deployment, your users may still occasionally encounter errors if they access the application while your Composer dependencies or other infrastructure components are updating. This occurs because a significant part of the Laravel framework must boot in order to determine your application is in maintenance mode and render the maintenance mode view using the templating engine."
msgstr "若在部署過程中使用了 `php artisan down` 指令，若使用者在 Composer 依賴或其他基礎設施元件更新時存取了應用程式，則可能會遇到錯誤。這是因為 Laravel 框架中重要的部分必須要先啟動才能判斷應用程式是否在維護模式下，並才能接著使用樣板引擎來轉譯維護模式的 View。"

#: ./docs/11.x/releases.md:263
msgctxt "CODE: php"
msgid ""
"$name = text('What is your name?', validate: [\n"
"    'name' => 'required|min:3|max:255',\n"
"]);"
msgstr ""

#: ./docs/8.x/releases.md:264
msgctxt "P"
msgid "For this reason, Laravel now allows you to pre-render a maintenance mode view that will be returned at the very beginning of the request cycle. This view is rendered before any of your application's dependencies have loaded. You may pre-render a template of your choice using the `down` command's `render` option:"
msgstr "基於此原因，現在，Laravel 能讓你預先轉譯維護模式 View，並在整個請求週期的一開始就將其回傳。這個 View 會在任何應用程式的依賴載入前就預先被轉譯。可以使用 `down` 指令的 `render` 選項來預轉譯所選的樣板："

#: ./docs/8.x/releases.md:266
msgctxt "CODE"
msgid "php artisan down --render=\"errors::503\""
msgstr ""

#: ./docs/9.x/releases.md:267
msgctxt "P"
msgid "Similarly, the `renderComponent` method may be used to render a given class component by passing the component instance to the method:"
msgstr "類似地，只要將元件實體傳給 `renderComponent` 方法，就可轉譯給定的類別元件："

#: ./docs/8.x/releases.md:268
#~ msgctxt "P"
#~ msgid "<a name=\"closure-dispatch-chain-catch\"></a>"
#~ msgstr ""

#: ./docs/11.x/releases.md:269
#~ msgctxt "P"
#~ msgid "<a name=\"queue-interaction-testing\"></a>"
#~ msgstr ""

#: ./docs/8.x/releases.md:269
msgctxt "H3"
msgid "Closure Dispatch / Chain `catch`"
msgstr "閉包分派與顆串連的 `catch`"

#: ./docs/9.x/releases.md:269
msgctxt "CODE: php"
msgid ""
"use App\\View\\Components\\HelloComponent;\n"
"\n"
"return Blade::renderComponent(new HelloComponent('Julian Bashir'));"
msgstr ""

#: ./docs/11.x/releases.md:270
msgctxt "H3"
msgid "Queue Interaction Testing"
msgstr ""

#: ./docs/8.x/releases.md:271
msgctxt "P"
msgid "*Catch improvements were contributed by [Mohamed Said](https://github.com/themsaid)*."
msgstr "*Catch 的改進由 [Mohamed Said](https://github.com/themsaid) 參與貢獻*。"

#: ./docs/11.x/releases.md:272
msgctxt "P"
msgid "*Queue interaction testing was contributed by [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr ""

#: ./docs/8.x/releases.md:273
msgctxt "P"
msgid "Using the new `catch` method, you may now provide a closure that should be executed if a queued closure fails to complete successfully after exhausting all of your queue's configured retry attempts:"
msgstr "使用新的 `catch` 方法，就能為佇列閉包提供一組要在所有重試次數都失敗的時候執行的閉包："

#: ./docs/11.x/releases.md:274
msgctxt "P"
msgid "Previously, attempting to test that a queued job was released, deleted, or manually failed was cumbersome and required the definition of custom queue fakes and stubs. However, in Laravel 11, you may easily test for these queue interactions using the `withFakeQueueInteractions` method:"
msgstr ""

#: ./docs/8.x/releases.md:275
msgctxt "CODE"
msgid ""
"use Throwable;\n"
"\n"
"dispatch(function () use ($podcast) {\n"
"    $podcast->publish();\n"
"})->catch(function (Throwable $e) {\n"
"    // This job has failed...\n"
"});"
msgstr ""

#: ./docs/9.x/releases.md:275
#~ msgctxt "P"
#~ msgid "<a name=\"slot-name-shortcut\"></a>"
#~ msgstr ""

#: ./docs/11.x/releases.md:276
msgctxt "CODE: php"
msgid ""
"use App\\Jobs\\ProcessPodcast;\n"
"\n"
"$job = (new ProcessPodcast)->withFakeQueueInteractions();\n"
"\n"
"$job->handle();\n"
"\n"
"$job->assertReleased(delay: 30);"
msgstr ""

#: ./docs/9.x/releases.md:276
msgctxt "H3"
msgid "Slot Name Shortcut"
msgstr "Slot 名稱捷徑"

#: ./docs/9.x/releases.md:278
msgctxt "P"
msgid "*Slot name shortcuts were contributed by [Caleb Porzio](https://github.com/calebporzio).*"
msgstr "*Slot 名稱捷徑由 [Caleb Porzio](https://github.com/calebporzio) 參與貢獻*。"

#: ./docs/9.x/releases.md:280
msgctxt "P"
msgid "In previous releases of Laravel, slot names were provided using a `name` attribute on the `x-slot` tag:"
msgstr "在之前版本的 Laravel 中，可在 `x-slot` 標籤上使用 `name` 屬性來提供 Slot 名稱："

#: ./docs/9.x/releases.md:282
msgctxt "CODE: blade"
msgid ""
"<x-alert>\n"
"    <x-slot name=\"title\">\n"
"        Server Error\n"
"    </x-slot>\n"
"\n"
"    <strong>Whoops!</strong> Something went wrong!\n"
"</x-alert>"
msgstr ""

#: ./docs/8.x/releases.md:283
#~ msgctxt "P"
#~ msgid "<a name=\"dynamic-blade-components\"></a>"
#~ msgstr ""

#: ./docs/8.x/releases.md:284
msgctxt "H3"
msgid "Dynamic Blade Components"
msgstr "動態 Blade 元件"

#: ./docs/11.x/releases.md:286
msgctxt "P"
msgid "For more information on testing queued jobs, check out the [queue documentation](/docs/{{version}}/queues#testing)."
msgstr ""

#: ./docs/8.x/releases.md:286
msgctxt "P"
msgid "*Dynamic Blade components were contributed by [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr "*動態 Blade 元件由 [Taylor Otwell](https://github.com/taylorotwell) 參與貢獻*。"

#: ./docs/11.x/releases.md:288
#~ msgctxt "P"
#~ msgid "<a name=\"new-artisan-commands\"></a>"
#~ msgstr ""

#: ./docs/8.x/releases.md:288
msgctxt "P"
msgid "Sometimes you may need to render a component but not know which component should be rendered until runtime. In this situation, you may now use Laravel's built-in `dynamic-component` component to render the component based on a runtime value or variable:"
msgstr "有時候我們可能會需要轉譯元件，但在執行階段前並不知道要轉譯哪個元件。對於這種情況，現在，我們可以使用 Laravel 的內建「dynamic-component」動態元件來依照執行階段的值或變數進行轉譯："

#: ./docs/11.x/releases.md:289
msgctxt "H3"
msgid "New Artisan Commands"
msgstr ""

#: ./docs/8.x/releases.md:290
msgctxt "CODE"
msgid "<x-dynamic-component :component=\"$componentName\" class=\"mt-4\" />"
msgstr ""

#: ./docs/11.x/releases.md:291
msgctxt "P"
msgid "*Class creation Artisan commands were contributed by [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr ""

#: ./docs/8.x/releases.md:292
msgctxt "P"
msgid "To learn more about Blade components, please consult the [Blade documentation](/docs/{{version}}/blade#components)."
msgstr "要瞭解更多有關 Blade 元件的資訊，請參考 [Blade 的說明文件](/docs/{{version}}/blade#components)。"

#: ./docs/9.x/releases.md:292
msgctxt "P"
msgid "However, beginning in Laravel 9.x, you may specify the slot's name using a convenient, shorter syntax:"
msgstr "不過，從 Laravel 9.x 開始，就可以使用更方便簡潔的語法來指定 Slot 的名稱："

#: ./docs/11.x/releases.md:293
msgctxt "P"
msgid "New Artisan commands have been added to allow the quick creation of classes, enums, interfaces, and traits:"
msgstr ""

#: ./docs/8.x/releases.md:294
#~ msgctxt "P"
#~ msgid "<a name=\"event-listener-improvements\"></a>"
#~ msgstr ""

#: ./docs/9.x/releases.md:294
msgctxt "CODE: xml"
msgid ""
"<x-slot:title>\n"
"    Server Error\n"
"</x-slot>"
msgstr ""

#: ./docs/11.x/releases.md:295
msgctxt "CODE: shell"
msgid ""
"php artisan make:class\n"
"php artisan make:enum\n"
"php artisan make:interface\n"
"php artisan make:trait"
msgstr ""

#: ./docs/8.x/releases.md:295
msgctxt "H3"
msgid "Event Listener Improvements"
msgstr "事件監聽程式的改進"

#: ./docs/8.x/releases.md:297
msgctxt "P"
msgid "*Event listener improvements were contributed by [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr "*Event Listener 的改進由 [Taylor Otwell](https://github.com/taylorotwell) 參與貢獻*。"

#: ./docs/8.x/releases.md:299
msgctxt "P"
msgid "Closure based event listeners may now be registered by only passing the closure to the `Event::listen` method. Laravel will inspect the closure to determine which type of event the listener handles:"
msgstr "現在，只要將閉包傳給 `Event::listen` 方法，就可以註冊基於閉包的事件監聽程式。Laravel 會偵測閉包，以判斷該事件監聽程式能負責的事件類型："

#: ./docs/9.x/releases.md:300
#~ msgctxt "P"
#~ msgid "<a name=\"checked-selected-blade-directives\"></a>"
#~ msgstr ""

#: ./docs/8.x/releases.md:301
msgctxt "CODE"
msgid ""
"use App\\Events\\PodcastProcessed;\n"
"use Illuminate\\Support\\Facades\\Event;\n"
"\n"
"Event::listen(function (PodcastProcessed $event) {\n"
"    //\n"
"});"
msgstr ""

#: ./docs/9.x/releases.md:301
msgctxt "H3"
msgid "Checked / Selected Blade Directives"
msgstr "Checked / Selected Blade 指示詞"

#: ./docs/11.x/releases.md:302
#~ msgctxt "P"
#~ msgid "<a name=\"model-cast-improvements\"></a>"
#~ msgstr ""

#: ./docs/11.x/releases.md:303
msgctxt "H3"
msgid "Model Casts Improvements"
msgstr ""

#: ./docs/9.x/releases.md:303
msgctxt "P"
msgid "*Checked and selected Blade directives were contributed by [Ash Allen](https://github.com/ash-jc-allen) and [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr "*Checked 與 Selected Blade 指示詞由 [Ash Allen](https://github.com/ash-jc-allen) 與 [Taylor Otwell](https://github.com/taylorotwell) 參與貢獻*。"

#: ./docs/11.x/releases.md:305
msgctxt "P"
msgid "*Model casts improvements were contributed by [Nuno Maduro](https://github.com/nunomaduro)*."
msgstr ""

#: ./docs/9.x/releases.md:305
msgctxt "P"
msgid "For convenience, you may now use the `@checked` directive to easily indicate if a given HTML checkbox input is \"checked\". This directive will echo `checked` if the provided condition evaluates to `true`:"
msgstr "為了方便起見，現在可以使用 `@checked` 指示詞來輕鬆地標示給定 HTML 勾選框為「^[已勾選](Checked)」。這個指示詞會在條件為 `true` 時 Echo `checked`："

#: ./docs/11.x/releases.md:307
msgctxt "P"
msgid "Laravel 11 supports defining your model's casts using a method instead of a property. This allows for streamlined, fluent cast definitions, especially when using casts with arguments:"
msgstr ""

#: ./docs/9.x/releases.md:307
msgctxt "CODE: blade"
msgid ""
"<input type=\"checkbox\"\n"
"        name=\"active\"\n"
"        value=\"active\"\n"
"        @checked(old('active', $user->active)) />"
msgstr ""

#: ./docs/8.x/releases.md:308
msgctxt "P"
msgid "In addition, closure based event listeners may now be marked as queueable using the `Illuminate\\Events\\queueable` function:"
msgstr "此外，可以使用 `Illuminate\\Events\\queueable` 方法來將基於閉包的事件監聽程式標記為要放入佇列 (Queueable)："

#: ./docs/11.x/releases.md:309
msgctxt "CODE"
msgid ""
"/**\n"
" * Get the attributes that should be cast.\n"
" *\n"
" * @return array<string, string>\n"
" */\n"
"protected function casts(): array\n"
"{\n"
"    return [\n"
"        'options' => AsCollection::using(OptionCollection::class),\n"
"                  // AsEncryptedCollection::using(OptionCollection::class),\n"
"                  // AsEnumArrayObject::using(OptionEnum::class),\n"
"                  // AsEnumCollection::using(OptionEnum::class),\n"
"    ];\n"
"}"
msgstr ""

#: ./docs/8.x/releases.md:310
msgctxt "CODE"
msgid ""
"use App\\Events\\PodcastProcessed;\n"
"use function Illuminate\\Events\\queueable;\n"
"use Illuminate\\Support\\Facades\\Event;\n"
"\n"
"Event::listen(queueable(function (PodcastProcessed $event) {\n"
"    //\n"
"}));"
msgstr ""

#: ./docs/9.x/releases.md:314
msgctxt "P"
msgid "Likewise, the `@selected` directive may be used to indicate if a given select option should be \"selected\":"
msgstr "類似地，`@selected` 指示詞可用來表示給定 Select 選項應為「^[已選擇](Selected)」："

#: ./docs/9.x/releases.md:316
msgctxt "CODE: blade"
msgid ""
"<select name=\"version\">\n"
"    @foreach ($product->versions as $version)\n"
"        <option value=\"{{ $version }}\" @selected(old('version') == $version)>\n"
"            {{ $version }}\n"
"        </option>\n"
"    @endforeach\n"
"</select>"
msgstr ""

#: ./docs/8.x/releases.md:318
msgctxt "P"
msgid "Like queued jobs, you may use the `onConnection`, `onQueue`, and `delay` methods to customize the execution of the queued listener:"
msgstr "就像佇列任務一樣，可以使用 `onConnection`, `onQueue`, 與 `delay` 方法來自訂放入佇列的監聽程式的執行："

#: ./docs/8.x/releases.md:320
msgctxt "CODE"
msgid ""
"Event::listen(queueable(function (PodcastProcessed $event) {\n"
"    //\n"
"})->onConnection('redis')->onQueue('podcasts')->delay(now()->addSeconds(10)));"
msgstr ""

#: ./docs/11.x/releases.md:324
msgctxt "P"
msgid "For more information on attribute casting, review the [Eloquent documentation](/docs/{{version}}/eloquent-mutators#attribute-casting)."
msgstr ""

#: ./docs/8.x/releases.md:324
msgctxt "P"
msgid "If you would like to handle anonymous queued listener failures, you may provide a closure to the `catch` method while defining the `queueable` listener:"
msgstr "若想在匿名的佇列監聽程式執行失敗時進行處理，可以在定義 `queueable` 監聽程式時提供一個閉包給 `catch` 方法："

#: ./docs/11.x/releases.md:326
#~ msgctxt "P"
#~ msgid "<a name=\"the-once-function\"></a>"
#~ msgstr ""

#: ./docs/8.x/releases.md:326
msgctxt "CODE"
msgid ""
"use App\\Events\\PodcastProcessed;\n"
"use function Illuminate\\Events\\queueable;\n"
"use Illuminate\\Support\\Facades\\Event;\n"
"use Throwable;\n"
"\n"
"Event::listen(queueable(function (PodcastProcessed $event) {\n"
"    //\n"
"})->catch(function (PodcastProcessed $event, Throwable $e) {\n"
"    // The queued listener failed...\n"
"}));"
msgstr ""

#: ./docs/9.x/releases.md:326
#~ msgctxt "P"
#~ msgid "<a name=\"bootstrap-5-pagination-views\"></a>"
#~ msgstr ""

#: ./docs/11.x/releases.md:327
msgctxt "H3"
msgid "The `once` Function"
msgstr ""

#: ./docs/9.x/releases.md:327
msgctxt "H3"
msgid "Bootstrap 5 Pagination Views"
msgstr "Bootstrap 5 的分頁 View"

#: ./docs/11.x/releases.md:329
msgctxt "P"
msgid "*The `once` helper was contributed by [Taylor Otwell](https://github.com/taylorotwell)* and *[Nuno Maduro](https://github.com/nunomaduro)*."
msgstr ""

#: ./docs/9.x/releases.md:329
msgctxt "P"
msgid "*Bootstrap 5 pagination views were contributed by [Jared Lewis](https://github.com/jrd-lewis)*."
msgstr "*Bootstrap 5 分頁 View 由 [Jared Lewis](https://github.com/jrd-lewis) 參與貢獻*。"

#: ./docs/11.x/releases.md:331
msgctxt "P"
msgid "The `once` helper function executes the given callback and caches the result in memory for the duration of the request. Any subsequent calls to the `once` function with the same callback will return the previously cached result:"
msgstr ""

#: ./docs/9.x/releases.md:331
msgctxt "P"
msgid "Laravel now includes pagination views built using [Bootstrap 5](https://getbootstrap.com/). To use these views instead of the default Tailwind views, you may call the paginator's `useBootstrapFive` method within the `boot` method of your `App\\Providers\\AppServiceProvider` class:"
msgstr "現在，Laravel 提供了適用於 [Bootstrap 5](https://getbootstrap.com/) 的分頁 View。若要使用這些 View 來替代預設的 Tailwind View，可以在 `App\\Providers\\AppServiceProvider` 內的 `boot` 方法中呼叫 Paginator 的 `useBootstrapFive` 方法："

#: ./docs/11.x/releases.md:333
msgctxt "CODE"
msgid ""
"function random(): int\n"
"{\n"
"    return once(function () {\n"
"        return random_int(1, 1000);\n"
"    });\n"
"}\n"
"\n"
"random(); // 123\n"
"random(); // 123 (cached result)\n"
"random(); // 123 (cached result)"
msgstr ""

#: ./docs/9.x/releases.md:333
msgctxt "CODE"
msgid ""
"use Illuminate\\Pagination\\Paginator;\n"
"\n"
"/**\n"
" * Bootstrap any application services.\n"
" *\n"
" * @return void\n"
" */\n"
"public function boot()\n"
"{\n"
"    Paginator::useBootstrapFive();\n"
"}"
msgstr ""

#: ./docs/8.x/releases.md:337
#~ msgctxt "P"
#~ msgid "<a name=\"time-testing-helpers\"></a>"
#~ msgstr ""

#: ./docs/8.x/releases.md:338
msgctxt "H3"
msgid "Time Testing Helpers"
msgstr "時間測試輔助函式"

#: ./docs/8.x/releases.md:340
msgctxt "P"
msgid "*Time testing helpers were contributed by [Taylor Otwell](https://github.com/taylorotwell) with inspiration from Ruby on Rails*."
msgstr "*時間測試輔助韓式由 [Taylor Otwell](https://github.com/taylorotwell) 參與貢獻，靈感來自 Ruby on Rails*。"

#: ./docs/8.x/releases.md:342
msgctxt "P"
msgid "When testing, you may occasionally need to modify the time returned by helpers such as `now` or `Illuminate\\Support\\Carbon::now()`. Laravel's base feature test class now includes helpers that allow you to manipulate the current time:"
msgstr "在測試的時候，我們有時候會想要更改如 `now` 或 `Illuminate\\Support\\Carbon::now()` 等輔助函式所回傳的時間。現在，Laravel 的基礎功能測試 (Feature Test) 類別已包含了顆用來更改目前時間的輔助函式："

#: ./docs/11.x/releases.md:344
msgctxt "P"
msgid "For more information on the `once` helper, check out the [helpers documentation](/docs/{{version}}/helpers#method-once)."
msgstr ""

#: ./docs/8.x/releases.md:344
msgctxt "CODE"
msgid ""
"public function testTimeCanBeManipulated()\n"
"{\n"
"    // Travel into the future...\n"
"    $this->travel(5)->milliseconds();\n"
"    $this->travel(5)->seconds();\n"
"    $this->travel(5)->minutes();\n"
"    $this->travel(5)->hours();\n"
"    $this->travel(5)->days();\n"
"    $this->travel(5)->weeks();\n"
"    $this->travel(5)->years();\n"
"\n"
"    // Travel into the past...\n"
"    $this->travel(-5)->hours();\n"
"\n"
"    // Travel to an explicit time...\n"
"    $this->travelTo(now()->subHours(6));\n"
"\n"
"    // Return back to the present time...\n"
"    $this->travelBack();\n"
"}"
msgstr ""

#: ./docs/9.x/releases.md:345
#~ msgctxt "P"
#~ msgid "<a name=\"improved-validation-of-nested-array-data\"></a>"
#~ msgstr ""

#: ./docs/11.x/releases.md:346
#~ msgctxt "P"
#~ msgid "<a name=\"database-performance\"></a>"
#~ msgstr ""

#: ./docs/9.x/releases.md:346
msgctxt "H3"
msgid "Improved Validation Of Nested Array Data"
msgstr "對巢狀陣列資料認證的改進"

#: ./docs/11.x/releases.md:347
msgctxt "H3"
msgid "Improved Performance When Testing With In-Memory Databases"
msgstr ""

#: ./docs/9.x/releases.md:348
msgctxt "P"
msgid "*Improved validation of nested array inputs was contributed by [Steve Bauman](https://github.com/stevebauman)*."
msgstr "*針對巢狀陣列輸入的表單驗證改進由 [Steve Bauman](https://github.com/stevebauman) 參與貢獻*。"

#: ./docs/11.x/releases.md:349
msgctxt "P"
msgid "*Improved in-memory database testing performance was contributed by [Anders Jenbo](https://github.com/AJenbo)*"
msgstr ""

#: ./docs/9.x/releases.md:350
msgctxt "P"
msgid "Sometimes you may need to access the value for a given nested array element when assigning validation rules to the attribute. You may now accomplish this using the `Rule::forEach` method. The `forEach` method accepts a closure that will be invoked for each iteration of the array attribute under validation and will receive the attribute's value and explicit, fully-expanded attribute name. The closure should return an array of rules to assign to the array element:"
msgstr "有時候，在為屬性指派認證規則時，我們可能會想存取給定巢狀陣列項目的值。現在，我們可以使用 `Rule::forEach` 方法來達成。`forEach` 方法接受一個閉包。在認證時，每次迭代陣列屬性都會叫用一次這個閉包，且該閉包會收到屬性值與完整展開的屬性名稱。該閉包應回傳一個陣列，其中包含要指派給陣列元素的認證規則："

#: ./docs/11.x/releases.md:351
msgctxt "P"
msgid "Laravel 11 offers a significant speed boost when using the `:memory:` SQLite database during testing. To accomplish this, Laravel now maintains a reference to PHP's PDO object and reuses it across connections, often cutting total test run time in half."
msgstr ""

#: ./docs/9.x/releases.md:352
msgctxt "CODE"
msgid ""
"use App\\Rules\\HasPermission;\n"
"use Illuminate\\Support\\Facades\\Validator;\n"
"use Illuminate\\Validation\\Rule;\n"
"\n"
"$validator = Validator::make($request->all(), [\n"
"    'companies.*.id' => Rule::forEach(function ($value, $attribute) {\n"
"        return [\n"
"            Rule::exists(Company::class, 'id'),\n"
"            new HasPermission('manage-company', $value),\n"
"        ];\n"
"    }),\n"
"]);"
msgstr ""

#: ./docs/11.x/releases.md:353
#~ msgctxt "P"
#~ msgid "<a name=\"mariadb\"></a>"
#~ msgstr ""

#: ./docs/11.x/releases.md:354
msgctxt "H3"
msgid "Improved Support for MariaDB"
msgstr ""

#: ./docs/11.x/releases.md:356
msgctxt "P"
msgid "*Improved support for MariaDB was contributed by [Jonas Staudenmeir](https://github.com/staudenmeir) and [Julius Kiekbusch](https://github.com/Jubeki)*"
msgstr ""

#: ./docs/11.x/releases.md:358
msgctxt "P"
msgid "Laravel 11 includes improved support for MariaDB. In previous Laravel releases, you could use MariaDB via Laravel's MySQL driver. However, Laravel 11 now includes a dedicated MariaDB driver which provides better defaults for this database system."
msgstr ""

#: ./docs/11.x/releases.md:360
msgctxt "P"
msgid "For more information on Laravel's database drivers, check out the [database documentation](/docs/{{version}}/database)."
msgstr ""

#: ./docs/11.x/releases.md:362
#~ msgctxt "P"
#~ msgid "<a name=\"inspecting-database\"></a>"
#~ msgstr ""

#: ./docs/11.x/releases.md:363
msgctxt "H3"
msgid "Inspecting Databases and Improved Schema Operations"
msgstr ""

#: ./docs/11.x/releases.md:365
msgctxt "P"
msgid "*Improved schema operations and database inspection was contributed by [Hafez Divandari](https://github.com/hafezdivandari)*"
msgstr ""

#: ./docs/8.x/releases.md:365
#~ msgctxt "P"
#~ msgid "<a name=\"artisan-serve-improvements\"></a>"
#~ msgstr ""

#: ./docs/9.x/releases.md:365
#~ msgctxt "P"
#~ msgid "<a name=\"laravel-breeze-api\"></a>"
#~ msgstr ""

#: ./docs/8.x/releases.md:366
msgctxt "H3"
msgid "Artisan `serve` Improvements"
msgstr "Artisan `serve` 的改進"

#: ./docs/9.x/releases.md:366
msgctxt "H3"
msgid "Laravel Breeze API & Next.js"
msgstr "Laravel Breeze API 與 Next.js"

#: ./docs/11.x/releases.md:367
msgctxt "P"
msgid "Laravel 11 provides additional database schema operation and inspection methods, including the native modifying, renaming, and dropping of columns. Furthermore, advanced spatial types, non-default schema names, and native schema methods for manipulating tables, views, columns, indexes, and foreign keys are provided:"
msgstr ""

#: ./docs/8.x/releases.md:368
msgctxt "P"
msgid "*Artisan `serve` improvements were contributed by [Taylor Otwell](https://github.com/taylorotwell)*."
msgstr "*Artisan `serve` 的改進由 [Taylor Otwell](https://github.com/taylorotwell) 參與貢獻*。"

#: ./docs/9.x/releases.md:368
msgctxt "P"
msgid "*The Laravel Breeze API scaffolding and Next.js starter kit was contributed by [Taylor Otwell](https://github.com/taylorotwell) and [Miguel Piedrafita](https://twitter.com/m1guelpf)*."
msgstr "*Laravel Breeze API Scaffolding 與 Next.js 入門套件由 [Taylor Otwell](https://github.com/taylorotwell) 與 [Miguel Piedrafita](https://twitter.com/m1guelpf) 參與貢獻*。"

#: ./docs/11.x/releases.md:369
msgctxt "CODE"
msgid ""
"use Illuminate\\Support\\Facades\\Schema;\n"
"\n"
"$tables = Schema::getTables();\n"
"$views = Schema::getViews();\n"
"$columns = Schema::getColumns('users');\n"
"$indexes = Schema::getIndexes('users');\n"
"$foreignKeys = Schema::getForeignKeys('users');"
msgstr ""

#: ./docs/8.x/releases.md:370
msgctxt "P"
msgid "The Artisan `serve` command has been improved with automatic reloading when environment variable changes are detected within your local `.env` file. Previously, the command had to be manually stopped and restarted."
msgstr "Artisan `serve` 指令已經過改進，該指令會偵測本機的 `.env` 檔案，並在環境變數更改的時候自動重新載入。在此之前，需要手動停止並重新啟動該指令。"

#: ./docs/9.x/releases.md:370
msgctxt "P"
msgid "The [Laravel Breeze](/docs/{{version}}/starter-kits#breeze-and-next) starter kit has received an \"API\" scaffolding mode and complimentary [Next.js](https://nextjs.org) [frontend implementation](https://github.com/laravel/breeze-next). This starter kit scaffolding may be used to jump start your Laravel applications that are serving as a backend, Laravel Sanctum authenticated API for a JavaScript frontend."
msgstr "[Laravel Breeze](/docs/{{version}}/starter-kits#breeze-and-next) 入門套件現在有了「API」Scaffolding 模式，且有了完整的 [Next.js](https://nextjs.org) [前端實作](https://github.com/laravel/breeze-next)。如果你想使用 Laravel 作為後端並使用 Laravel Sanctum 的登入 API 給 JavaScript 前端使用的話，就適合這個入門套件 Scaffolding。"

#: ./docs/8.x/releases.md:372
#~ msgctxt "P"
#~ msgid "<a name=\"tailwind-pagination-views\"></a>"
#~ msgstr ""

#: ./docs/9.x/releases.md:372
#~ msgctxt "P"
#~ msgid "<a name=\"exception-page\"></a>"
#~ msgstr ""

#: ./docs/8.x/releases.md:373
msgctxt "H3"
msgid "Tailwind Pagination Views"
msgstr "Tailwind 分頁 View"

#: ./docs/9.x/releases.md:373
msgctxt "H3"
msgid "Improved Ignition Exception Page"
msgstr "改進過的 Ignition 例外頁面"

#: ./docs/8.x/releases.md:375
msgctxt "P"
msgid "The Laravel paginator has been updated to use the [Tailwind CSS](https://tailwindcss.com) framework by default. Tailwind CSS is a highly customizable, low-level CSS framework that gives you all of the building blocks you need to build bespoke designs without any annoying opinionated styles you have to fight to override. Of course, Bootstrap 3 and 4 views remain available as well."
msgstr "Laravel 的分頁程式 (Paginator) 已更新為預設使用 [Tailwind CSS](https://tailwindcss.com) 框架。Tailwind CSS 是一個可高度客製化、低階的 CSS 框架，能讓你不需處理並複寫一些煩人的固定樣式，就能製作所有你所需要的客製化區塊。當然，Bootstrap 3 與 Bootstrap 4 的 View 依然可用。"

#: ./docs/9.x/releases.md:375
msgctxt "P"
msgid "*Ignition is developed by [Spatie](https://spatie.be/).*"
msgstr "*Ignition 由 [Spatie](https://spatie.be/) 開發*。"

#: ./docs/8.x/releases.md:377
#~ msgctxt "P"
#~ msgid "<a name=\"routing-namespace-updates\"></a>"
#~ msgstr ""

#: ./docs/9.x/releases.md:377
msgctxt "P"
msgid "Ignition, the open source exception debug page created by Spatie, has been redesigned from the ground up. The new, improved Ignition ships with Laravel 9.x and includes light / dark themes, customizable \"open in editor\" functionality, and more."
msgstr "Ignition 是由 Spatie 製作的開放原始碼例外偵錯頁面。Ignition 現已被重新設計。Laravel 9.x 隨附了這個全新、改進過的 Ignition，並包含了亮色 / 暗色主題、可自訂的「在編輯器中開啟」功能⋯等。"

#: ./docs/8.x/releases.md:378
msgctxt "H3"
msgid "Routing Namespace Updates"
msgstr "路由 Namespace 更新"

#: ./docs/8.x/releases.md:380
msgctxt "P"
msgid "In previous releases of Laravel, the `RouteServiceProvider` contained a `$namespace` property. This property's value would automatically be prefixed onto controller route definitions and calls to the `action` helper / `URL::action` method. In Laravel 8.x, this property is `null` by default. This means that no automatic namespace prefixing will be done by Laravel. Therefore, in new Laravel 8.x applications, controller route definitions should be defined using standard PHP callable syntax:"
msgstr "在之前的 Laravel 版本中，`RouteServiceProvider` 包含了一個 `$namespace` 屬性。當使用 Controller 路由定義或是呼叫 `action` 輔助函式 / `URL::action` 方法時，會自動將該屬性的值加到前面。在 Laravel 8.x 中，這個屬性預設為 `null`。這表示，Laravel 將不會自動幫你將 Namespace 放在前面。因此，在新安裝的 Laravel 8.x 專案中，Controller 路由定義應使用標準的 PHP Callable 語法來定義："

#: ./docs/8.x/releases.md:382
msgctxt "CODE"
msgid ""
"use App\\Http\\Controllers\\UserController;\n"
"\n"
"Route::get('/users', [UserController::class, 'index']);"
msgstr ""

#: ./docs/9.x/releases.md:383
#~ msgctxt "P"
#~ msgid "<a name=\"improved-route-list\"></a>"
#~ msgstr ""

#: ./docs/9.x/releases.md:384
msgctxt "H3"
msgid "Improved `route:list` CLI Output"
msgstr "改進過的 `route:list` CLI 輸出"

#: ./docs/8.x/releases.md:386
msgctxt "P"
msgid "Calls to the `action` related methods should use the same callable syntax:"
msgstr "與呼叫 `actions` 相關的方法也應使用相同的 Callable 語法："

#: ./docs/9.x/releases.md:386
msgctxt "P"
msgid "*Improved `route:list` CLI output was contributed by [Nuno Maduro](https://github.com/nunomaduro)*."
msgstr "*改進過的 `route:list` CLI 輸出由 [Nuno Maduro](https://github.com/nunomaduro) 參與貢獻*。"

#: ./docs/8.x/releases.md:388
msgctxt "CODE"
msgid ""
"action([UserController::class, 'index']);\n"
"\n"
"return Redirect::action([UserController::class, 'index']);"
msgstr ""

#: ./docs/9.x/releases.md:388
msgctxt "P"
msgid "The `route:list` CLI output has been significantly improved for the Laravel 9.x release, offering a beautiful new experience when exploring your route definitions."
msgstr "Laravel 9.x 更新中的 `route:list` CLI 已大幅改進，能讓你在探索路由定義時獲得全新、漂亮的體驗。"

#: ./docs/8.x/releases.md:392
msgctxt "P"
msgid "If you prefer Laravel 7.x style controller route prefixing, you may simply add the `$namespace` property into your application's `RouteServiceProvider`."
msgstr "若你偏好使用 Laravel 7.x 風格的 Controller 路由前置，只需要在專案的 `RouteServiceProvider` 中加上 `$namespace` 屬性即可。"

#: ./docs/8.x/releases.md:394
msgctxt "P"
msgid "This change only affects new Laravel 8.x applications. Applications upgrading from Laravel 7.x will still have the `$namespace` property in their `RouteServiceProvider`."
msgstr ""

#: ./docs/9.x/releases.md:394
#~ msgctxt "P"
#~ msgid "<a name=\"test-coverage-support-on-artisan-test-Command\"></a>"
#~ msgstr ""

#: ./docs/9.x/releases.md:395
msgctxt "H3"
msgid "Test Coverage Using Artisan `test` Command"
msgstr "使用 Artisan `test` 指令來取得測試覆蓋率"

#: ./docs/9.x/releases.md:397
msgctxt "P"
msgid "*Test coverage when using the Artisan `test` command was contributed by [Nuno Maduro](https://github.com/nunomaduro)*."
msgstr "*使用 Artisan `test` 指令來取得測試覆蓋率由 [Nuno Maduro](https://github.com/nunomaduro) 參與貢獻*。"

#: ./docs/9.x/releases.md:399
msgctxt "P"
msgid "The Artisan `test` command has received a new `--coverage` option that you may use to explore the amount of code coverage your tests are providing to your application:"
msgstr "現在，Artisan `test` 指令有了全新的 `--coverage` 選項，能讓你用來確認測試為專案提供了多少的程式碼覆蓋率："

#: ./docs/9.x/releases.md:401
msgctxt "CODE: shell"
msgid "php artisan test --coverage"
msgstr ""

#: ./docs/9.x/releases.md:405
msgctxt "P"
msgid "The test coverage results will be displayed directly within the CLI output."
msgstr "測試覆蓋率會直接顯示在 CLI 輸出中。"

#: ./docs/9.x/releases.md:411
msgctxt "P"
msgid "In addition, if you would like to specify a minimum threshold that your test coverage percentage must meet, you may use the `--min` option. The test suite will fail if the given minimum threshold is not met:"
msgstr "此外，若想指定測試覆蓋率的最小百分比值，可以使用 `--min` 選項。當沒滿足最小值時，測試套件就會執行失敗："

#: ./docs/9.x/releases.md:413
msgctxt "CODE: shell"
msgid "php artisan test --coverage --min=80.3"
msgstr ""

#: ./docs/9.x/releases.md:421
#~ msgctxt "P"
#~ msgid "<a name=\"soketi-echo-server\"></a>"
#~ msgstr ""

#: ./docs/9.x/releases.md:422
msgctxt "H3"
msgid "Soketi Echo Server"
msgstr "Soketi Echo 伺服器"

#: ./docs/9.x/releases.md:424
msgctxt "P"
msgid "*The Soketi Echo server was developed by [Alex Renoki](https://github.com/rennokki)*."
msgstr "*Soketi Echo 伺服器由 [Alex Renoki](https://github.com/rennokki) 開發*。"

#: ./docs/9.x/releases.md:426
msgctxt "P"
msgid "Although not exclusive to Laravel 9.x, Laravel has recently assisted with the documentation of Soketi, a [Laravel Echo](/docs/{{version}}/broadcasting) compatible Web Socket server written for Node.js. Soketi provides a great, open source alternative to Pusher and Ably for those applications that prefer to manage their own Web Socket server."
msgstr "雖然這個功能不侷限於 Laravel 9.x 使用，單 Laravel 也協助了 Soketi —— 使用 Node.js 撰寫的相容於 [Laravel Echo](/docs/{{version}}/broadcasting) 的 Web Socket 伺服器 ——提供說明文件。Soketi 提供了良好且開源的 Pusher 與 Ably 替代方案，可供偏好自行管理 Web Socket 伺服器的專案使用。"

#: ./docs/9.x/releases.md:428
msgctxt "P"
msgid "For more information on using Soketi, please consult the [broadcasting documentation](/docs/{{version}}/broadcasting) and [Soketi documentation](https://docs.soketi.app/)."
msgstr "更多關於 Soketi 的資訊，請參考[廣播說明文件](/docs/{{version}}/broadcasting)與 [Soketi 的說明文件](https://docs.soketi.app/)。"

#: ./docs/9.x/releases.md:430
#~ msgctxt "P"
#~ msgid "<a name=\"improved-collections-ide-support\"></a>"
#~ msgstr ""

#: ./docs/9.x/releases.md:431
msgctxt "H3"
msgid "Improved Collections IDE Support"
msgstr "改進了 IDE 對 Collection 的支援"

#: ./docs/9.x/releases.md:433
msgctxt "P"
msgid "*Improved collections IDE support was contributed by [Nuno Maduro](https://github.com/nunomaduro)*."
msgstr "*針對 Collection 的 IDE 支援改進由 [Nuno Maduro](https://github.com/nunomaduro) 參與貢獻*。"

#: ./docs/9.x/releases.md:435
msgctxt "P"
msgid "Laravel 9.x adds improved, \"generic\" style type definitions to the collections component, improving IDE and static analysis support. IDEs such as [PHPStorm](https://blog.jetbrains.com/phpstorm/2021/12/phpstorm-2021-3-release/#support_for_future_laravel_collections) or static analysis tools such as [PHPStan](https://phpstan.org) will now better understand Laravel collections natively."
msgstr "Laravel 9.x 在 Collection 元件上新增了改進過的、「^[泛型](Generic)」風格的型別定義，提升了對 IDE 與靜態檢查的支援。如 [PHPStorm](https://blog.jetbrains.com/phpstorm/2021/12/phpstorm-2021-3-release/#support_for_future_laravel_collections) 等 IDE 或 [PHPStan](https://phpstan.org) 等靜態檢查工具現在可以原生地更理解 Laravel Collection 了。"

#: ./docs/9.x/releases.md:441
#~ msgctxt "P"
#~ msgid "<a name=\"new-helpers\"></a>"
#~ msgstr ""

#: ./docs/9.x/releases.md:442
msgctxt "H3"
msgid "New Helpers"
msgstr "新的輔助函式"

#: ./docs/9.x/releases.md:444
msgctxt "P"
msgid "Laravel 9.x introduces two new, convenient helper functions that you may use in your own application."
msgstr "Laravel 9.x 提供了兩個新的方便輔助函式，可以讓你在你自己的專案內使用。"

#: ./docs/9.x/releases.md:446
#~ msgctxt "P"
#~ msgid "<a name=\"new-helpers-str\"></a>"
#~ msgstr ""

#: ./docs/9.x/releases.md:447
msgctxt "H4"
msgid "`str`"
msgstr "`str`"

#: ./docs/9.x/releases.md:449
msgctxt "P"
msgid "The `str` function returns a new `Illuminate\\Support\\Stringable` instance for the given string. This function is equivalent to the `Str::of` method:"
msgstr "`str` 會為給定的字串回傳一個 `Illuminate\\Support\\Stringable`。這個函式與 `Str::of` 方法等價："

#: ./docs/9.x/releases.md:451
msgctxt "CODE"
msgid ""
"$string = str('Taylor')->append(' Otwell');\n"
"\n"
"// 'Taylor Otwell'"
msgstr ""

#: ./docs/9.x/releases.md:455
msgctxt "P"
msgid "If no argument is provided to the `str` function, the function returns an instance of `Illuminate\\Support\\Str`:"
msgstr "若沒有提供引數給 `str` 函式，則 `str` 會回傳一個 `Illuminate\\Support\\Str` 的實體："

#: ./docs/9.x/releases.md:457
msgctxt "CODE"
msgid ""
"$snake = str()->snake('LaravelFramework');\n"
"\n"
"// 'laravel_framework'"
msgstr ""

#: ./docs/9.x/releases.md:461
#~ msgctxt "P"
#~ msgid "<a name=\"new-helpers-to-route\"></a>"
#~ msgstr ""

#: ./docs/9.x/releases.md:462
msgctxt "H4"
msgid "`to_route`"
msgstr "`to_route`"

#: ./docs/9.x/releases.md:464
msgctxt "P"
msgid "The `to_route` function generates a redirect HTTP response for a given named route, providing an expressive way to redirect to named routes from your routes and controllers:"
msgstr "`to_route` 方法會產生一個跳轉到給定命名路由的重新導向 HTTP 回應，讓我們能在路由與 Controller 中以更富語意的方法跳轉到命名路由："

#: ./docs/9.x/releases.md:466
msgctxt "CODE"
msgid "return to_route('users.show', ['user' => 1]);"
msgstr ""

#: ./docs/9.x/releases.md:468
msgctxt "P"
msgid "If necessary, you may pass the HTTP status code that should be assigned to the redirect and any additional response headers as the third and fourth arguments to the to_route method:"
msgstr "若有需要，也可以傳入一個用於跳轉的 HTTP 狀態碼以及一些額外的回應標頭作為 to_route 方法的第三與第四個引數："

#: ./docs/9.x/releases.md:470
msgctxt "CODE"
msgid "return to_route('users.show', ['user' => 1], 302, ['X-Framework' => 'Laravel']);"
msgstr ""
