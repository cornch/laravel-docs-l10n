msgid ""
msgstr ""
"Project-Id-Version: laravel-docs\n"
"POT-Creation-Date: 2022-01-29 05:35+0000\n"
"PO-Revision-Date: 2022-01-29 05:46\n"
"Last-Translator: \n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/templates/controllers.pot\n"
"X-Crowdin-File-ID: 37\n"

# File: docs/8.x/controllers.md, line: 1
# File: docs/master/controllers.md, line: 1
#. type: Title #
#, no-wrap
msgid "Controllers"
msgstr ""

# File: docs/8.x/controllers.md, line: 17
# File: docs/master/controllers.md, line: 17
#. type: Bullet: '- '
msgid "[Introduction](#introduction)"
msgstr ""

# File: docs/8.x/controllers.md, line: 17
# File: docs/master/controllers.md, line: 17
#. type: Plain text
#, no-wrap
msgid "- [Writing Controllers](#writing-controllers)\n"
"    - [Basic Controllers](#basic-controllers)\n"
"    - [Single Action Controllers](#single-action-controllers)\n"
"- [Controller Middleware](#controller-middleware)\n"
"- [Resource Controllers](#resource-controllers)\n"
"    - [Partial Resource Routes](#restful-partial-resource-routes)\n"
"    - [Nested Resources](#restful-nested-resources)\n"
"    - [Naming Resource Routes](#restful-naming-resource-routes)\n"
"    - [Naming Resource Route Parameters](#restful-naming-resource-route-parameters)\n"
"    - [Scoping Resource Routes](#restful-scoping-resource-routes)\n"
"    - [Localizing Resource URIs](#restful-localizing-resource-uris)\n"
"    - [Supplementing Resource Controllers](#restful-supplementing-resource-controllers)\n"
"- [Dependency Injection & Controllers](#dependency-injection-and-controllers)\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 19
# File: docs/master/controllers.md, line: 19
#. type: Plain text
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 19
# File: docs/master/controllers.md, line: 19
#. type: Title ##
#, no-wrap
msgid "Introduction"
msgstr ""

# File: docs/8.x/controllers.md, line: 22
# File: docs/master/controllers.md, line: 22
#. type: Plain text
msgid "Instead of defining all of your request handling logic as closures in your route files, you may wish to organize this behavior using \"controller\" classes. Controllers can group related request handling logic into a single class. For example, a `UserController` class might handle all incoming requests related to users, including showing, creating, updating, and deleting users. By default, controllers are stored in the `app/Http/Controllers` directory."
msgstr ""

# File: docs/8.x/controllers.md, line: 24
# File: docs/master/controllers.md, line: 24
#. type: Plain text
#, no-wrap
msgid "<a name=\"writing-controllers\"></a>\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 24
# File: docs/master/controllers.md, line: 24
#. type: Title ##
#, no-wrap
msgid "Writing Controllers"
msgstr ""

# File: docs/8.x/controllers.md, line: 27
# File: docs/master/controllers.md, line: 27
#. type: Plain text
#, no-wrap
msgid "<a name=\"basic-controllers\"></a>\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 27
# File: docs/master/controllers.md, line: 27
#. type: Title ###
#, no-wrap
msgid "Basic Controllers"
msgstr ""

# File: docs/8.x/controllers.md, line: 30
# File: docs/master/controllers.md, line: 30
#. type: Plain text
msgid "Let's take a look at an example of a basic controller. Note that the controller extends the base controller class included with Laravel: `App\\Http\\Controllers\\Controller`:"
msgstr ""

# File: docs/8.x/controllers.md, line: 32
# File: docs/8.x/controllers.md, line: 70
# File: docs/8.x/controllers.md, line: 363
# File: docs/8.x/controllers.md, line: 393
# File: docs/8.x/controllers.md, line: 423
# File: docs/master/controllers.md, line: 32
# File: docs/master/controllers.md, line: 70
# File: docs/master/controllers.md, line: 363
# File: docs/master/controllers.md, line: 393
# File: docs/master/controllers.md, line: 423
#. type: Plain text
#, no-wrap
msgid "    <?php\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 34
# File: docs/8.x/controllers.md, line: 72
# File: docs/8.x/controllers.md, line: 365
# File: docs/8.x/controllers.md, line: 395
# File: docs/8.x/controllers.md, line: 425
# File: docs/master/controllers.md, line: 34
# File: docs/master/controllers.md, line: 72
# File: docs/master/controllers.md, line: 365
# File: docs/master/controllers.md, line: 395
# File: docs/master/controllers.md, line: 425
#. type: Plain text
#, no-wrap
msgid "    namespace App\\Http\\Controllers;\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 37
# File: docs/8.x/controllers.md, line: 75
# File: docs/master/controllers.md, line: 37
# File: docs/master/controllers.md, line: 75
#. type: Plain text
#, no-wrap
msgid "    use App\\Http\\Controllers\\Controller;\n"
"    use App\\Models\\User;\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 53
# File: docs/master/controllers.md, line: 53
#. type: Plain text
#, no-wrap
msgid "    class UserController extends Controller\n"
"    {\n"
"        /**\n"
"         * Show the profile for a given user.\n"
"         *\n"
"         * @param  int  $id\n"
"         * @return \\Illuminate\\View\\View\n"
"         */\n"
"        public function show($id)\n"
"        {\n"
"            return view('user.profile', [\n"
"                'user' => User::findOrFail($id)\n"
"            ]);\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 55
# File: docs/master/controllers.md, line: 55
#. type: Plain text
msgid "You can define a route to this controller method like so:"
msgstr ""

# File: docs/8.x/controllers.md, line: 57
# File: docs/8.x/controllers.md, line: 417
# File: docs/master/controllers.md, line: 57
# File: docs/master/controllers.md, line: 417
#. type: Plain text
#, no-wrap
msgid "    use App\\Http\\Controllers\\UserController;\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 59
# File: docs/master/controllers.md, line: 59
#. type: Plain text
#, no-wrap
msgid "    Route::get('/user/{id}', [UserController::class, 'show']);\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 61
# File: docs/master/controllers.md, line: 61
#. type: Plain text
msgid "When an incoming request matches the specified route URI, the `show` method on the `App\\Http\\Controllers\\UserController` class will be invoked and the route parameters will be passed to the method."
msgstr ""

# File: docs/8.x/controllers.md, line: 63
# File: docs/master/controllers.md, line: 63
#. type: Plain text
#, no-wrap
msgid "> {tip} Controllers are not **required** to extend a base class. However, you will not have access to convenient features such as the `middleware` and `authorize` methods.\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 65
# File: docs/master/controllers.md, line: 65
#. type: Plain text
#, no-wrap
msgid "<a name=\"single-action-controllers\"></a>\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 65
# File: docs/master/controllers.md, line: 65
#. type: Title ###
#, no-wrap
msgid "Single Action Controllers"
msgstr ""

# File: docs/8.x/controllers.md, line: 68
# File: docs/master/controllers.md, line: 68
#. type: Plain text
msgid "If a controller action is particularly complex, you might find it convenient to dedicate an entire controller class to that single action. To accomplish this, you may define a single `__invoke` method within the controller:"
msgstr ""

# File: docs/8.x/controllers.md, line: 88
# File: docs/master/controllers.md, line: 88
#. type: Plain text
#, no-wrap
msgid "    class ProvisionServer extends Controller\n"
"    {\n"
"        /**\n"
"         * Provision a new web server.\n"
"         *\n"
"         * @return \\Illuminate\\Http\\Response\n"
"         */\n"
"        public function __invoke()\n"
"        {\n"
"            // ...\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 90
# File: docs/master/controllers.md, line: 90
#. type: Plain text
msgid "When registering routes for single action controllers, you do not need to specify a controller method. Instead, you may simply pass the name of the controller to the router:"
msgstr ""

# File: docs/8.x/controllers.md, line: 92
# File: docs/master/controllers.md, line: 92
#. type: Plain text
#, no-wrap
msgid "    use App\\Http\\Controllers\\ProvisionServer;\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 94
# File: docs/master/controllers.md, line: 94
#. type: Plain text
#, no-wrap
msgid "    Route::post('/server', ProvisionServer::class);\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 96
# File: docs/master/controllers.md, line: 96
#. type: Plain text
msgid "You may generate an invokable controller by using the `--invokable` option of the `make:controller` Artisan command:"
msgstr ""

# File: docs/8.x/controllers.md, line: 98
# File: docs/master/controllers.md, line: 98
#. type: Plain text
#, no-wrap
msgid "    php artisan make:controller ProvisionServer --invokable\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 100
# File: docs/master/controllers.md, line: 100
#. type: Plain text
#, no-wrap
msgid "> {tip} Controller stubs may be customized using [stub publishing](/docs/{{version}}/artisan#stub-customization).\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 102
# File: docs/master/controllers.md, line: 102
#. type: Plain text
#, no-wrap
msgid "<a name=\"controller-middleware\"></a>\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 102
# File: docs/master/controllers.md, line: 102
#. type: Title ##
#, no-wrap
msgid "Controller Middleware"
msgstr ""

# File: docs/8.x/controllers.md, line: 105
# File: docs/master/controllers.md, line: 105
#. type: Plain text
msgid "[Middleware](/docs/{{version}}/middleware) may be assigned to the controller's routes in your route files:"
msgstr ""

# File: docs/8.x/controllers.md, line: 107
# File: docs/master/controllers.md, line: 107
#. type: Plain text
#, no-wrap
msgid "    Route::get('profile', [UserController::class, 'show'])->middleware('auth');\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 109
# File: docs/master/controllers.md, line: 109
#. type: Plain text
msgid "Or, you may find it convenient to specify middleware within your controller's constructor. Using the `middleware` method within your controller's constructor, you can assign middleware to the controller's actions:"
msgstr ""

# File: docs/8.x/controllers.md, line: 124
# File: docs/master/controllers.md, line: 124
#. type: Plain text
#, no-wrap
msgid "    class UserController extends Controller\n"
"    {\n"
"        /**\n"
"         * Instantiate a new controller instance.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function __construct()\n"
"        {\n"
"            $this->middleware('auth');\n"
"            $this->middleware('log')->only('index');\n"
"            $this->middleware('subscribed')->except('store');\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 126
# File: docs/master/controllers.md, line: 126
#. type: Plain text
msgid "Controllers also allow you to register middleware using a closure. This provides a convenient way to define an inline middleware for a single controller without defining an entire middleware class:"
msgstr ""

# File: docs/8.x/controllers.md, line: 130
# File: docs/master/controllers.md, line: 130
#. type: Plain text
#, no-wrap
msgid "    $this->middleware(function ($request, $next) {\n"
"        return $next($request);\n"
"    });\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 132
# File: docs/master/controllers.md, line: 132
#. type: Plain text
#, no-wrap
msgid "<a name=\"resource-controllers\"></a>\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 132
# File: docs/master/controllers.md, line: 132
#. type: Title ##
#, no-wrap
msgid "Resource Controllers"
msgstr ""

# File: docs/8.x/controllers.md, line: 135
# File: docs/master/controllers.md, line: 135
#. type: Plain text
msgid "If you think of each Eloquent model in your application as a \"resource\", it is typical to perform the same sets of actions against each resource in your application. For example, imagine your application contains a `Photo` model and a `Movie` model. It is likely that users can create, read, update, or delete these resources."
msgstr ""

# File: docs/8.x/controllers.md, line: 137
# File: docs/master/controllers.md, line: 137
#. type: Plain text
msgid "Because of this common use case, Laravel resource routing assigns the typical create, read, update, and delete (\"CRUD\") routes to a controller with a single line of code. To get started, we can use the `make:controller` Artisan command's `--resource` option to quickly create a controller to handle these actions:"
msgstr ""

# File: docs/8.x/controllers.md, line: 139
# File: docs/master/controllers.md, line: 139
#. type: Plain text
#, no-wrap
msgid "    php artisan make:controller PhotoController --resource\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 141
# File: docs/master/controllers.md, line: 141
#. type: Plain text
msgid "This command will generate a controller at `app/Http/Controllers/PhotoController.php`. The controller will contain a method for each of the available resource operations. Next, you may register a resource route that points to the controller:"
msgstr ""

# File: docs/8.x/controllers.md, line: 143
# File: docs/8.x/controllers.md, line: 202
# File: docs/8.x/controllers.md, line: 217
# File: docs/8.x/controllers.md, line: 279
# File: docs/master/controllers.md, line: 143
# File: docs/master/controllers.md, line: 202
# File: docs/master/controllers.md, line: 217
# File: docs/master/controllers.md, line: 279
#. type: Plain text
#, no-wrap
msgid "    use App\\Http\\Controllers\\PhotoController;\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 145
# File: docs/master/controllers.md, line: 145
#. type: Plain text
#, no-wrap
msgid "    Route::resource('photos', PhotoController::class);\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 147
# File: docs/master/controllers.md, line: 147
#. type: Plain text
msgid "This single route declaration creates multiple routes to handle a variety of actions on the resource. The generated controller will already have methods stubbed for each of these actions. Remember, you can always get a quick overview of your application's routes by running the `route:list` Artisan command."
msgstr ""

# File: docs/8.x/controllers.md, line: 149
# File: docs/master/controllers.md, line: 149
#. type: Plain text
msgid "You may even register many resource controllers at once by passing an array to the `resources` method:"
msgstr ""

# File: docs/8.x/controllers.md, line: 154
# File: docs/master/controllers.md, line: 154
#. type: Plain text
#, no-wrap
msgid "    Route::resources([\n"
"        'photos' => PhotoController::class,\n"
"        'posts' => PostController::class,\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 156
# File: docs/master/controllers.md, line: 156
#. type: Plain text
#, no-wrap
msgid "<a name=\"actions-handled-by-resource-controller\"></a>\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 156
# File: docs/master/controllers.md, line: 156
#. type: Title ####
#, no-wrap
msgid "Actions Handled By Resource Controller"
msgstr ""

# File: docs/8.x/controllers.md, line: 167
# File: docs/master/controllers.md, line: 167
#. type: Plain text
#, no-wrap
msgid "Verb      | URI                    | Action       | Route Name\n"
"----------|------------------------|--------------|---------------------\n"
"GET       | `/photos`              | index        | photos.index\n"
"GET       | `/photos/create`       | create       | photos.create\n"
"POST      | `/photos`              | store        | photos.store\n"
"GET       | `/photos/{photo}`      | show         | photos.show\n"
"GET       | `/photos/{photo}/edit` | edit         | photos.edit\n"
"PUT/PATCH | `/photos/{photo}`      | update       | photos.update\n"
"DELETE    | `/photos/{photo}`      | destroy      | photos.destroy\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 169
# File: docs/master/controllers.md, line: 169
#. type: Plain text
#, no-wrap
msgid "<a name=\"customizing-missing-model-behavior\"></a>\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 169
# File: docs/master/controllers.md, line: 169
#. type: Title ####
#, no-wrap
msgid "Customizing Missing Model Behavior"
msgstr ""

# File: docs/8.x/controllers.md, line: 172
# File: docs/master/controllers.md, line: 172
#. type: Plain text
msgid "Typically, a 404 HTTP response will be generated if an implicitly bound resource model is not found. However, you may customize this behavior by calling the `missing` method when defining your resource route. The `missing` method accepts a closure that will be invoked if an implicitly bound model can not be found for any of the resource's routes:"
msgstr ""

# File: docs/8.x/controllers.md, line: 176
# File: docs/master/controllers.md, line: 176
#. type: Plain text
#, no-wrap
msgid "    use App\\Http\\Controllers\\PhotoController;\n"
"    use Illuminate\\Http\\Request;\n"
"    use Illuminate\\Support\\Facades\\Redirect;\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 181
# File: docs/master/controllers.md, line: 181
#. type: Plain text
#, no-wrap
msgid "    Route::resource('photos', PhotoController::class)\n"
"            ->missing(function (Request $request) {\n"
"                return Redirect::route('photos.index');\n"
"            });\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 183
# File: docs/master/controllers.md, line: 183
#. type: Plain text
#, no-wrap
msgid "<a name=\"specifying-the-resource-model\"></a>\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 183
# File: docs/master/controllers.md, line: 183
#. type: Title ####
#, no-wrap
msgid "Specifying The Resource Model"
msgstr ""

# File: docs/8.x/controllers.md, line: 186
# File: docs/master/controllers.md, line: 186
#. type: Plain text
msgid "If you are using [route model binding](/docs/{{version}}/routing#route-model-binding) and would like the resource controller's methods to type-hint a model instance, you may use the `--model` option when generating the controller:"
msgstr ""

# File: docs/8.x/controllers.md, line: 188
# File: docs/master/controllers.md, line: 188
#. type: Plain text
#, no-wrap
msgid "    php artisan make:controller PhotoController --model=Photo --resource\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 190
# File: docs/master/controllers.md, line: 190
#. type: Plain text
#, no-wrap
msgid "<a name=\"generating-form-requests\"></a>\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 190
# File: docs/master/controllers.md, line: 190
#. type: Title ####
#, no-wrap
msgid "Generating Form Requests"
msgstr ""

# File: docs/8.x/controllers.md, line: 193
# File: docs/master/controllers.md, line: 193
#. type: Plain text
msgid "You may provide the `--requests` option when generating a resource controller to instruct Artisan to generate [form request classes](/docs/{{version}}/validation#form-request-validation) for the controller's storage and update methods:"
msgstr ""

# File: docs/8.x/controllers.md, line: 195
# File: docs/master/controllers.md, line: 195
#. type: Plain text
#, no-wrap
msgid "    php artisan make:controller PhotoController --model=Photo --resource --requests\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 197
# File: docs/master/controllers.md, line: 197
#. type: Plain text
#, no-wrap
msgid "<a name=\"restful-partial-resource-routes\"></a>\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 197
# File: docs/master/controllers.md, line: 197
#. type: Title ###
#, no-wrap
msgid "Partial Resource Routes"
msgstr ""

# File: docs/8.x/controllers.md, line: 200
# File: docs/master/controllers.md, line: 200
#. type: Plain text
msgid "When declaring a resource route, you may specify a subset of actions the controller should handle instead of the full set of default actions:"
msgstr ""

# File: docs/8.x/controllers.md, line: 206
# File: docs/master/controllers.md, line: 206
#. type: Plain text
#, no-wrap
msgid "    Route::resource('photos', PhotoController::class)->only([\n"
"        'index', 'show'\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 210
# File: docs/master/controllers.md, line: 210
#. type: Plain text
#, no-wrap
msgid "    Route::resource('photos', PhotoController::class)->except([\n"
"        'create', 'store', 'update', 'destroy'\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 212
# File: docs/master/controllers.md, line: 212
#. type: Plain text
#, no-wrap
msgid "<a name=\"api-resource-routes\"></a>\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 212
# File: docs/master/controllers.md, line: 212
#. type: Title ####
#, no-wrap
msgid "API Resource Routes"
msgstr ""

# File: docs/8.x/controllers.md, line: 215
# File: docs/master/controllers.md, line: 215
#. type: Plain text
msgid "When declaring resource routes that will be consumed by APIs, you will commonly want to exclude routes that present HTML templates such as `create` and `edit`. For convenience, you may use the `apiResource` method to automatically exclude these two routes:"
msgstr ""

# File: docs/8.x/controllers.md, line: 219
# File: docs/master/controllers.md, line: 219
#. type: Plain text
#, no-wrap
msgid "    Route::apiResource('photos', PhotoController::class);\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 221
# File: docs/master/controllers.md, line: 221
#. type: Plain text
msgid "You may register many API resource controllers at once by passing an array to the `apiResources` method:"
msgstr ""

# File: docs/8.x/controllers.md, line: 224
# File: docs/master/controllers.md, line: 224
#. type: Plain text
#, no-wrap
msgid "    use App\\Http\\Controllers\\PhotoController;\n"
"    use App\\Http\\Controllers\\PostController;\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 229
# File: docs/master/controllers.md, line: 229
#. type: Plain text
#, no-wrap
msgid "    Route::apiResources([\n"
"        'photos' => PhotoController::class,\n"
"        'posts' => PostController::class,\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 231
# File: docs/master/controllers.md, line: 231
#. type: Plain text
msgid "To quickly generate an API resource controller that does not include the `create` or `edit` methods, use the `--api` switch when executing the `make:controller` command:"
msgstr ""

# File: docs/8.x/controllers.md, line: 233
# File: docs/master/controllers.md, line: 233
#. type: Plain text
#, no-wrap
msgid "    php artisan make:controller PhotoController --api\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 235
# File: docs/master/controllers.md, line: 235
#. type: Plain text
#, no-wrap
msgid "<a name=\"restful-nested-resources\"></a>\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 235
# File: docs/master/controllers.md, line: 235
#. type: Title ###
#, no-wrap
msgid "Nested Resources"
msgstr ""

# File: docs/8.x/controllers.md, line: 238
# File: docs/master/controllers.md, line: 238
#. type: Plain text
msgid "Sometimes you may need to define routes to a nested resource. For example, a photo resource may have multiple comments that may be attached to the photo. To nest the resource controllers, you may use \"dot\" notation in your route declaration:"
msgstr ""

# File: docs/8.x/controllers.md, line: 240
# File: docs/8.x/controllers.md, line: 305
# File: docs/master/controllers.md, line: 240
# File: docs/master/controllers.md, line: 305
#. type: Plain text
#, no-wrap
msgid "    use App\\Http\\Controllers\\PhotoCommentController;\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 242
# File: docs/master/controllers.md, line: 242
#. type: Plain text
#, no-wrap
msgid "    Route::resource('photos.comments', PhotoCommentController::class);\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 244
# File: docs/master/controllers.md, line: 244
#. type: Plain text
msgid "This route will register a nested resource that may be accessed with URIs like the following:"
msgstr ""

# File: docs/8.x/controllers.md, line: 246
# File: docs/master/controllers.md, line: 246
#. type: Plain text
#, no-wrap
msgid "    /photos/{photo}/comments/{comment}\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 248
# File: docs/master/controllers.md, line: 248
#. type: Plain text
#, no-wrap
msgid "<a name=\"scoping-nested-resources\"></a>\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 248
# File: docs/master/controllers.md, line: 248
#. type: Title ####
#, no-wrap
msgid "Scoping Nested Resources"
msgstr ""

# File: docs/8.x/controllers.md, line: 251
# File: docs/master/controllers.md, line: 251
#. type: Plain text
msgid "Laravel's [implicit model binding](/docs/{{version}}/routing#implicit-model-binding-scoping) feature can automatically scope nested bindings such that the resolved child model is confirmed to belong to the parent model. By using the `scoped` method when defining your nested resource, you may enable automatic scoping as well as instruct Laravel which field the child resource should be retrieved by. For more information on how to accomplish this, please see the documentation on [scoping resource routes](#restful-scoping-resource-routes)."
msgstr ""

# File: docs/8.x/controllers.md, line: 253
# File: docs/master/controllers.md, line: 253
#. type: Plain text
#, no-wrap
msgid "<a name=\"shallow-nesting\"></a>\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 253
# File: docs/master/controllers.md, line: 253
#. type: Title ####
#, no-wrap
msgid "Shallow Nesting"
msgstr ""

# File: docs/8.x/controllers.md, line: 256
# File: docs/master/controllers.md, line: 256
#. type: Plain text
msgid "Often, it is not entirely necessary to have both the parent and the child IDs within a URI since the child ID is already a unique identifier. When using unique identifiers such as auto-incrementing primary keys to identify your models in URI segments, you may choose to use \"shallow nesting\":"
msgstr ""

# File: docs/8.x/controllers.md, line: 258
# File: docs/master/controllers.md, line: 258
#. type: Plain text
#, no-wrap
msgid "    use App\\Http\\Controllers\\CommentController;\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 260
# File: docs/master/controllers.md, line: 260
#. type: Plain text
#, no-wrap
msgid "    Route::resource('photos.comments', CommentController::class)->shallow();\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 262
# File: docs/master/controllers.md, line: 262
#. type: Plain text
msgid "This route definition will define the following routes:"
msgstr ""

# File: docs/8.x/controllers.md, line: 272
# File: docs/master/controllers.md, line: 272
#. type: Plain text
#, no-wrap
msgid "Verb      | URI                               | Action       | Route Name\n"
"----------|-----------------------------------|--------------|---------------------\n"
"GET       | `/photos/{photo}/comments`        | index        | photos.comments.index\n"
"GET       | `/photos/{photo}/comments/create` | create       | photos.comments.create\n"
"POST      | `/photos/{photo}/comments`        | store        | photos.comments.store\n"
"GET       | `/comments/{comment}`             | show         | comments.show\n"
"GET       | `/comments/{comment}/edit`        | edit         | comments.edit\n"
"PUT/PATCH | `/comments/{comment}`             | update       | comments.update\n"
"DELETE    | `/comments/{comment}`             | destroy      | comments.destroy\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 274
# File: docs/master/controllers.md, line: 274
#. type: Plain text
#, no-wrap
msgid "<a name=\"restful-naming-resource-routes\"></a>\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 274
# File: docs/master/controllers.md, line: 274
#. type: Title ###
#, no-wrap
msgid "Naming Resource Routes"
msgstr ""

# File: docs/8.x/controllers.md, line: 277
# File: docs/master/controllers.md, line: 277
#. type: Plain text
msgid "By default, all resource controller actions have a route name; however, you can override these names by passing a `names` array with your desired route names:"
msgstr ""

# File: docs/8.x/controllers.md, line: 283
# File: docs/master/controllers.md, line: 283
#. type: Plain text
#, no-wrap
msgid "    Route::resource('photos', PhotoController::class)->names([\n"
"        'create' => 'photos.build'\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 285
# File: docs/master/controllers.md, line: 285
#. type: Plain text
#, no-wrap
msgid "<a name=\"restful-naming-resource-route-parameters\"></a>\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 285
# File: docs/master/controllers.md, line: 285
#. type: Title ###
#, no-wrap
msgid "Naming Resource Route Parameters"
msgstr ""

# File: docs/8.x/controllers.md, line: 288
# File: docs/master/controllers.md, line: 288
#. type: Plain text
msgid "By default, `Route::resource` will create the route parameters for your resource routes based on the \"singularized\" version of the resource name. You can easily override this on a per resource basis using the `parameters` method. The array passed into the `parameters` method should be an associative array of resource names and parameter names:"
msgstr ""

# File: docs/8.x/controllers.md, line: 290
# File: docs/master/controllers.md, line: 290
#. type: Plain text
#, no-wrap
msgid "    use App\\Http\\Controllers\\AdminUserController;\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 294
# File: docs/master/controllers.md, line: 294
#. type: Plain text
#, no-wrap
msgid "    Route::resource('users', AdminUserController::class)->parameters([\n"
"        'users' => 'admin_user'\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 296
# File: docs/master/controllers.md, line: 296
#. type: Plain text
#, no-wrap
msgid " The example above generates the following URI for the resource's `show` route:\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 298
# File: docs/master/controllers.md, line: 298
#. type: Plain text
#, no-wrap
msgid "    /users/{admin_user}\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 300
# File: docs/master/controllers.md, line: 300
#. type: Plain text
#, no-wrap
msgid "<a name=\"restful-scoping-resource-routes\"></a>\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 300
# File: docs/master/controllers.md, line: 300
#. type: Title ###
#, no-wrap
msgid "Scoping Resource Routes"
msgstr ""

# File: docs/8.x/controllers.md, line: 303
# File: docs/master/controllers.md, line: 303
#. type: Plain text
msgid "Laravel's [scoped implicit model binding](/docs/{{version}}/routing#implicit-model-binding-scoping) feature can automatically scope nested bindings such that the resolved child model is confirmed to belong to the parent model. By using the `scoped` method when defining your nested resource, you may enable automatic scoping as well as instruct Laravel which field the child resource should be retrieved by:"
msgstr ""

# File: docs/8.x/controllers.md, line: 309
# File: docs/master/controllers.md, line: 309
#. type: Plain text
#, no-wrap
msgid "    Route::resource('photos.comments', PhotoCommentController::class)->scoped([\n"
"        'comment' => 'slug',\n"
"    ]);\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 311
# File: docs/master/controllers.md, line: 311
#. type: Plain text
msgid "This route will register a scoped nested resource that may be accessed with URIs like the following:"
msgstr ""

# File: docs/8.x/controllers.md, line: 313
# File: docs/master/controllers.md, line: 313
#. type: Plain text
#, no-wrap
msgid "    /photos/{photo}/comments/{comment:slug}\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 315
# File: docs/master/controllers.md, line: 315
#. type: Plain text
msgid "When using a custom keyed implicit binding as a nested route parameter, Laravel will automatically scope the query to retrieve the nested model by its parent using conventions to guess the relationship name on the parent. In this case, it will be assumed that the `Photo` model has a relationship named `comments` (the plural of the route parameter name) which can be used to retrieve the `Comment` model."
msgstr ""

# File: docs/8.x/controllers.md, line: 317
# File: docs/master/controllers.md, line: 317
#. type: Plain text
#, no-wrap
msgid "<a name=\"restful-localizing-resource-uris\"></a>\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 317
# File: docs/master/controllers.md, line: 317
#. type: Title ###
#, no-wrap
msgid "Localizing Resource URIs"
msgstr ""

# File: docs/8.x/controllers.md, line: 320
# File: docs/master/controllers.md, line: 320
#. type: Plain text
msgid "By default, `Route::resource` will create resource URIs using English verbs. If you need to localize the `create` and `edit` action verbs, you may use the `Route::resourceVerbs` method. This may be done at the beginning of the `boot` method within your application's `App\\Providers\\RouteServiceProvider`:"
msgstr ""

# File: docs/8.x/controllers.md, line: 332
# File: docs/master/controllers.md, line: 332
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Define your route model bindings, pattern filters, etc.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function boot()\n"
"    {\n"
"        Route::resourceVerbs([\n"
"            'create' => 'crear',\n"
"            'edit' => 'editar',\n"
"        ]);\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 335
# File: docs/master/controllers.md, line: 335
#. type: Plain text
#, no-wrap
msgid "        // ...\n"
"    }\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 337
# File: docs/master/controllers.md, line: 337
#. type: Plain text
msgid "Once the verbs have been customized, a resource route registration such as `Route::resource('fotos', PhotoController::class)` will produce the following URIs:"
msgstr ""

# File: docs/8.x/controllers.md, line: 339
# File: docs/master/controllers.md, line: 339
#. type: Plain text
#, no-wrap
msgid "    /fotos/crear\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 341
# File: docs/master/controllers.md, line: 341
#. type: Plain text
#, no-wrap
msgid "    /fotos/{foto}/editar\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 343
# File: docs/master/controllers.md, line: 343
#. type: Plain text
#, no-wrap
msgid "<a name=\"restful-supplementing-resource-controllers\"></a>\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 343
# File: docs/master/controllers.md, line: 343
#. type: Title ###
#, no-wrap
msgid "Supplementing Resource Controllers"
msgstr ""

# File: docs/8.x/controllers.md, line: 346
# File: docs/master/controllers.md, line: 346
#. type: Plain text
msgid "If you need to add additional routes to a resource controller beyond the default set of resource routes, you should define those routes before your call to the `Route::resource` method; otherwise, the routes defined by the `resource` method may unintentionally take precedence over your supplemental routes:"
msgstr ""

# File: docs/8.x/controllers.md, line: 348
# File: docs/master/controllers.md, line: 348
#. type: Plain text
#, no-wrap
msgid "    use App\\Http\\Controller\\PhotoController;\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 351
# File: docs/master/controllers.md, line: 351
#. type: Plain text
#, no-wrap
msgid "    Route::get('/photos/popular', [PhotoController::class, 'popular']);\n"
"    Route::resource('photos', PhotoController::class);\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 353
# File: docs/master/controllers.md, line: 353
#. type: Plain text
#, no-wrap
msgid "> {tip} Remember to keep your controllers focused. If you find yourself routinely needing methods outside of the typical set of resource actions, consider splitting your controller into two, smaller controllers.\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 355
# File: docs/master/controllers.md, line: 355
#. type: Plain text
#, no-wrap
msgid "<a name=\"dependency-injection-and-controllers\"></a>\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 355
# File: docs/master/controllers.md, line: 355
#. type: Title ##
#, no-wrap
msgid "Dependency Injection & Controllers"
msgstr ""

# File: docs/8.x/controllers.md, line: 358
# File: docs/master/controllers.md, line: 358
#. type: Plain text
#, no-wrap
msgid "<a name=\"constructor-injection\"></a>\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 358
# File: docs/master/controllers.md, line: 358
#. type: Title ####
#, no-wrap
msgid "Constructor Injection"
msgstr ""

# File: docs/8.x/controllers.md, line: 361
# File: docs/master/controllers.md, line: 361
#. type: Plain text
msgid "The Laravel [service container](/docs/{{version}}/container) is used to resolve all Laravel controllers. As a result, you are able to type-hint any dependencies your controller may need in its constructor. The declared dependencies will automatically be resolved and injected into the controller instance:"
msgstr ""

# File: docs/8.x/controllers.md, line: 367
# File: docs/master/controllers.md, line: 367
#. type: Plain text
#, no-wrap
msgid "    use App\\Repositories\\UserRepository;\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 374
# File: docs/master/controllers.md, line: 374
#. type: Plain text
#, no-wrap
msgid "    class UserController extends Controller\n"
"    {\n"
"        /**\n"
"         * The user repository instance.\n"
"         */\n"
"        protected $users;\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 386
# File: docs/master/controllers.md, line: 386
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * Create a new controller instance.\n"
"         *\n"
"         * @param  \\App\\Repositories\\UserRepository  $users\n"
"         * @return void\n"
"         */\n"
"        public function __construct(UserRepository $users)\n"
"        {\n"
"            $this->users = $users;\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 388
# File: docs/master/controllers.md, line: 388
#. type: Plain text
#, no-wrap
msgid "<a name=\"method-injection\"></a>\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 388
# File: docs/master/controllers.md, line: 388
#. type: Title ####
#, no-wrap
msgid "Method Injection"
msgstr ""

# File: docs/8.x/controllers.md, line: 391
# File: docs/master/controllers.md, line: 391
#. type: Plain text
msgid "In addition to constructor injection, you may also type-hint dependencies on your controller's methods. A common use-case for method injection is injecting the `Illuminate\\Http\\Request` instance into your controller methods:"
msgstr ""

# File: docs/8.x/controllers.md, line: 397
# File: docs/8.x/controllers.md, line: 427
# File: docs/master/controllers.md, line: 397
# File: docs/master/controllers.md, line: 427
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Http\\Request;\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 409
# File: docs/master/controllers.md, line: 409
#. type: Plain text
#, no-wrap
msgid "    class UserController extends Controller\n"
"    {\n"
"        /**\n"
"         * Store a new user.\n"
"         *\n"
"         * @param  \\Illuminate\\Http\\Request  $request\n"
"         * @return \\Illuminate\\Http\\Response\n"
"         */\n"
"        public function store(Request $request)\n"
"        {\n"
"            $name = $request->name;\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 413
# File: docs/master/controllers.md, line: 413
#. type: Plain text
#, no-wrap
msgid "            //\n"
"        }\n"
"    }\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 415
# File: docs/master/controllers.md, line: 415
#. type: Plain text
msgid "If your controller method is also expecting input from a route parameter, list your route arguments after your other dependencies. For example, if your route is defined like so:"
msgstr ""

# File: docs/8.x/controllers.md, line: 419
# File: docs/master/controllers.md, line: 419
#. type: Plain text
#, no-wrap
msgid "    Route::put('/user/{id}', [UserController::class, 'update']);\n"
msgstr ""

# File: docs/8.x/controllers.md, line: 421
# File: docs/master/controllers.md, line: 421
#. type: Plain text
msgid "You may still type-hint the `Illuminate\\Http\\Request` and access your `id` parameter by defining your controller method as follows:"
msgstr ""

# File: docs/8.x/controllers.md, line: 441
# File: docs/master/controllers.md, line: 441
#. type: Plain text
#, no-wrap
msgid "    class UserController extends Controller\n"
"    {\n"
"        /**\n"
"         * Update the given user.\n"
"         *\n"
"         * @param  \\Illuminate\\Http\\Request  $request\n"
"         * @param  string  $id\n"
"         * @return \\Illuminate\\Http\\Response\n"
"         */\n"
"        public function update(Request $request, $id)\n"
"        {\n"
"            //\n"
"        }\n"
"    }\n"
msgstr ""

