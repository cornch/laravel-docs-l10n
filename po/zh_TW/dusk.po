msgid ""
msgstr ""
"Project-Id-Version: laravel-docs\n"
"POT-Creation-Date: 2022-01-29 05:35+0000\n"
"PO-Revision-Date: 2022-01-30 05:58\n"
"Last-Translator: \n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/templates/dusk.pot\n"
"X-Crowdin-File-ID: 49\n"

# File: docs/8.x/dusk.md, line: 1
# File: docs/master/dusk.md, line: 1
#. type: Title #
#, no-wrap
msgid "Laravel Dusk"
msgstr "Laravel Dusk"

# File: docs/8.x/dusk.md, line: 50
# File: docs/master/dusk.md, line: 50
#. type: Bullet: '- '
msgid "[Introduction](#introduction)"
msgstr "[簡介](#introduction)"

# File: docs/8.x/dusk.md, line: 50
# File: docs/master/dusk.md, line: 50
#. type: Plain text
#, no-wrap
msgid "- [Installation](#installation)\n"
"    - [Managing ChromeDriver Installations](#managing-chromedriver-installations)\n"
"    - [Using Other Browsers](#using-other-browsers)\n"
"- [Getting Started](#getting-started)\n"
"    - [Generating Tests](#generating-tests)\n"
"    - [Database Migrations](#migrations)\n"
"    - [Running Tests](#running-tests)\n"
"    - [Environment Handling](#environment-handling)\n"
"- [Browser Basics](#browser-basics)\n"
"    - [Creating Browsers](#creating-browsers)\n"
"    - [Navigation](#navigation)\n"
"    - [Resizing Browser Windows](#resizing-browser-windows)\n"
"    - [Browser Macros](#browser-macros)\n"
"    - [Authentication](#authentication)\n"
"    - [Cookies](#cookies)\n"
"    - [Executing JavaScript](#executing-javascript)\n"
"    - [Taking A Screenshot](#taking-a-screenshot)\n"
"    - [Storing Console Output To Disk](#storing-console-output-to-disk)\n"
"    - [Storing Page Source To Disk](#storing-page-source-to-disk)\n"
"- [Interacting With Elements](#interacting-with-elements)\n"
"    - [Dusk Selectors](#dusk-selectors)\n"
"    - [Text, Values, & Attributes](#text-values-and-attributes)\n"
"    - [Interacting With Forms](#interacting-with-forms)\n"
"    - [Attaching Files](#attaching-files)\n"
"    - [Pressing Buttons](#pressing-buttons)\n"
"    - [Clicking Links](#clicking-links)\n"
"    - [Using The Keyboard](#using-the-keyboard)\n"
"    - [Using The Mouse](#using-the-mouse)\n"
"    - [JavaScript Dialogs](#javascript-dialogs)\n"
"    - [Scoping Selectors](#scoping-selectors)\n"
"    - [Waiting For Elements](#waiting-for-elements)\n"
"    - [Scrolling An Element Into View](#scrolling-an-element-into-view)\n"
"- [Available Assertions](#available-assertions)\n"
"- [Pages](#pages)\n"
"    - [Generating Pages](#generating-pages)\n"
"    - [Configuring Pages](#configuring-pages)\n"
"    - [Navigating To Pages](#navigating-to-pages)\n"
"    - [Shorthand Selectors](#shorthand-selectors)\n"
"    - [Page Methods](#page-methods)\n"
"- [Components](#components)\n"
"    - [Generating Components](#generating-components)\n"
"    - [Using Components](#using-components)\n"
"- [Continuous Integration](#continuous-integration)\n"
"    - [Heroku CI](#running-tests-on-heroku-ci)\n"
"    - [Travis CI](#running-tests-on-travis-ci)\n"
"    - [GitHub Actions](#running-tests-on-github-actions)\n"
msgstr "- [安裝](#installation)\n"
"    - [管理 ChromeDriver 的安裝](#managing-chromedriver-installations)\n"
"    - [使用其他瀏覽器](#using-other-browsers)\n"
"- [入門](#getting-started)\n"
"    - [產生測試](#generating-tests)\n"
"    - [資料庫 Migration](#migrations)\n"
"    - [執行測試](#running-tests)\n"
"    - [處理環境](#environment-handling)\n"
"- [「瀏覽器」基礎](#browser-basics)\n"
"    - [建立瀏覽器](#creating-browsers)\n"
"    - [導航](#navigation)\n"
"    - [縮放瀏覽器視窗](#resizing-browser-windows)\n"
"    - [瀏覽器巨集](#browser-macros)\n"
"    - [驗證](#authentication)\n"
"    - [Cookies](#cookies)\n"
"    - [執行 JavaScript](#executing-javascript)\n"
"    - [截圖](#taking-a-screenshot)\n"
"    - [將主控台輸出儲存到磁碟上](#storing-console-output-to-disk)\n"
"    - [將網頁原始碼保存到磁碟上](#storing-page-source-to-disk)\n"
"- [與元素互動](#interacting-with-elements)\n"
"    - [Dusk 選擇器](#dusk-selectors)\n"
"    - [文字、值、與屬性](#text-values-and-attributes)\n"
"    - [與表單互動](#interacting-with-forms)\n"
"    - [附加檔案](#attaching-files)\n"
"    - [按下按鈕](#pressing-buttons)\n"
"    - [點擊連結](#clicking-links)\n"
"    - [使用鍵盤](#using-the-keyboard)\n"
"    - [使用滑鼠](#using-the-mouse)\n"
"    - [JavaScript 對話方塊](#javascript-dialogs)\n"
"    - [區域性選擇器](#scoping-selectors)\n"
"    - [等待元素](#waiting-for-elements)\n"
"    - [滾動以顯示將某個元素](#scrolling-an-element-into-view)\n"
"- [可用的 Assertion](#available-assertions)\n"
"- [頁面 - Page](#pages)\n"
"    - [產生 Page](#generating-pages)\n"
"    - [設定 Page](#configuring-pages)\n"
"    - [瀏覽到 Page](#navigating-to-pages)\n"
"    - [選擇器簡寫](#shorthand-selectors)\n"
"    - [Page 方法](#page-methods)\n"
"- [元件 - Component](#components)\n"
"    - [產生 Component](#generating-components)\n"
"    - [使用 Component](#using-components)\n"
"- [持續整合](#continuous-integration)\n"
"    - [Heroku CI](#running-tests-on-heroku-ci)\n"
"    - [Travis CI](#running-tests-on-travis-ci)\n"
"    - [GitHub Actions](#running-tests-on-github-actions)\n"

# File: docs/8.x/dusk.md, line: 52
# File: docs/master/dusk.md, line: 52
#. type: Plain text
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr "<a name=\"introduction\"></a>\n"

# File: docs/8.x/dusk.md, line: 52
# File: docs/master/dusk.md, line: 52
#. type: Title ##
#, no-wrap
msgid "Introduction"
msgstr "簡介"

# File: docs/8.x/dusk.md, line: 55
# File: docs/master/dusk.md, line: 55
#. type: Plain text
msgid "[Laravel Dusk](https://github.com/laravel/dusk) provides an expressive, easy-to-use browser automation and testing API. By default, Dusk does not require you to install JDK or Selenium on your local computer. Instead, Dusk uses a standalone [ChromeDriver](https://sites.google.com/chromium.org/driver) installation. However, you are free to utilize any other Selenium compatible driver you wish."
msgstr "[Laravel Dusk](https://github.com/laravel/dusk) 提供了一個豐富、簡單易用的瀏覽器自動化與測試 API。預設情況下，使用 Dusk 不需要額外在本機電腦上安裝 JDK 或 Slenium。Dusk 會使用獨立的 [ChromeDriver](https://sites.google.com/chromium.org/driver) 安裝。不過，也可以自由使用其他 Selenium 相容的驅動器。"

# File: docs/8.x/dusk.md, line: 57
# File: docs/master/dusk.md, line: 57
#. type: Plain text
#, no-wrap
msgid "<a name=\"installation\"></a>\n"
msgstr "<a name=\"installation\"></a>\n"

# File: docs/8.x/dusk.md, line: 57
# File: docs/master/dusk.md, line: 57
#. type: Title ##
#, no-wrap
msgid "Installation"
msgstr "安裝"

# File: docs/8.x/dusk.md, line: 60
# File: docs/master/dusk.md, line: 60
#. type: Plain text
msgid "To get started, you should install [Google Chrome](https://www.google.com/chrome) and add the `laravel/dusk` Composer dependency to your project:"
msgstr "要開始使用 Dusk，請先安裝 [Google Chrome](https://www.google.com/chrome)，並將 `laravel/dusk` Composer 相依性套件加到專案中："

# File: docs/8.x/dusk.md, line: 62
# File: docs/master/dusk.md, line: 62
#. type: Plain text
#, no-wrap
msgid "    composer require --dev laravel/dusk\n"
msgstr "    composer require --dev laravel/dusk\n"

# File: docs/8.x/dusk.md, line: 64
# File: docs/master/dusk.md, line: 64
#. type: Plain text
#, no-wrap
msgid "> {note} If you are manually registering Dusk's service provider, you should **never** register it in your production environment, as doing so could lead to arbitrary users being able to authenticate with your application.\n"
msgstr "> {note} 若要手動註冊 Dusk 的 Service Provider，請**不要**在正式環境內加上該 Provider，因為這麼會讓所有人都能任意登入任何使用者。\n"

# File: docs/8.x/dusk.md, line: 66
# File: docs/master/dusk.md, line: 66
#. type: Plain text
msgid "After installing the Dusk package, execute the `dusk:install` Artisan command. The `dusk:install` command will create a `tests/Browser` directory and an example Dusk test:"
msgstr "安裝好 Dusk 套件後，請執行 `dusk:install` Artisan 指令。`dusk:install` 指令會建立 `tests/Browser` 資料夾，以及一個 Dusk 範例測試："

# File: docs/8.x/dusk.md, line: 68
# File: docs/master/dusk.md, line: 68
#. type: Plain text
#, no-wrap
msgid "    php artisan dusk:install\n"
msgstr "    php artisan dusk:install\n"

# File: docs/8.x/dusk.md, line: 70
# File: docs/master/dusk.md, line: 70
#. type: Plain text
msgid "Next, set the `APP_URL` environment variable in your application's `.env` file. This value should match the URL you use to access your application in a browser."
msgstr "接著，請在專案的 `.env` 檔內設定 `APP_URL` 環境變數。該變數應符合要在瀏覽器內存取專案的 URL。"

# File: docs/8.x/dusk.md, line: 72
# File: docs/master/dusk.md, line: 72
#. type: Plain text
#, no-wrap
msgid "> {tip} If you are using [Laravel Sail](/docs/{{version}}/sail) to manage your local development environment, please also consult the Sail documentation on [configuring and running Dusk tests](/docs/{{version}}/sail#laravel-dusk).\n"
msgstr "> {tip} 若使用 [Laravel Sail](/docs/{{version}}/sail) 來管理本機開發環境，也請一併參考 Sail 說明文件中有關[設定與執行 Dusk 測試](/docs/{{version}}/sail#laravel-dusk)的部分。\n"

# File: docs/8.x/dusk.md, line: 74
# File: docs/master/dusk.md, line: 74
#. type: Plain text
#, no-wrap
msgid "<a name=\"managing-chromedriver-installations\"></a>\n"
msgstr "<a name=\"managing-chromedriver-installations\"></a>\n"

# File: docs/8.x/dusk.md, line: 74
# File: docs/master/dusk.md, line: 74
#. type: Title ###
#, no-wrap
msgid "Managing ChromeDriver Installations"
msgstr "管理 ChromeDriver 安裝"

# File: docs/8.x/dusk.md, line: 77
# File: docs/master/dusk.md, line: 77
#. type: Plain text
msgid "If you would like to install a different version of ChromeDriver than what is included with Laravel Dusk, you may use the `dusk:chrome-driver` command:"
msgstr "若想安裝與 Laravel Dusk 附帶的 ChromeDriver 不同的版本，可使用 `dusk:chrome-driver` 指令："

# File: docs/8.x/dusk.md, line: 80
# File: docs/master/dusk.md, line: 80
#. type: Plain text
#, no-wrap
msgid "    # Install the latest version of ChromeDriver for your OS...\n"
"    php artisan dusk:chrome-driver\n"
msgstr "    # 為目前作業系統安裝最新版的 ChromeDriver…\n"
"    php artisan dusk:chrome-driver\n"

# File: docs/8.x/dusk.md, line: 83
# File: docs/master/dusk.md, line: 83
#. type: Plain text
#, no-wrap
msgid "    # Install a given version of ChromeDriver for your OS...\n"
"    php artisan dusk:chrome-driver 86\n"
msgstr "    # 為目前作業系統安裝指定版本的 ChromeDriver…\n"
"    php artisan dusk:chrome-driver 86\n"

# File: docs/8.x/dusk.md, line: 86
# File: docs/master/dusk.md, line: 86
#. type: Plain text
#, no-wrap
msgid "    # Install a given version of ChromeDriver for all supported OSs...\n"
"    php artisan dusk:chrome-driver --all\n"
msgstr "    # 為所有支援的作業系統安裝給定版本的 ChromeDriver\n"
"    php artisan dusk:chrome-driver --all\n"

# File: docs/8.x/dusk.md, line: 89
# File: docs/master/dusk.md, line: 89
#. type: Plain text
#, no-wrap
msgid "    # Install the version of ChromeDriver that matches the detected version of Chrome / Chromium for your OS...\n"
"    php artisan dusk:chrome-driver --detect\n"
msgstr "    # 為目前作業系統安裝能偵測到的 Chrome / Chromiums 版本的 ChromeDriver…\n"
"    php artisan dusk:chrome-driver --detect\n"

# File: docs/8.x/dusk.md, line: 91
# File: docs/master/dusk.md, line: 91
#. type: Plain text
#, no-wrap
msgid "> {note} Dusk requires the `chromedriver` binaries to be executable. If you're having problems running Dusk, you should ensure the binaries are executable using the following command: `chmod -R 0755 vendor/laravel/dusk/bin/`.\n"
msgstr "> {note} 要使用 Dusk，`chromedriver` 二進位執行檔必須可執行。若無法執行 Dusk，請通過下列指令確保該二進位執行檔可執行：`chmod -R 0755 vendor/laravel/dusk/bin/`。\n"

# File: docs/8.x/dusk.md, line: 93
# File: docs/master/dusk.md, line: 93
#. type: Plain text
#, no-wrap
msgid "<a name=\"using-other-browsers\"></a>\n"
msgstr "<a name=\"using-other-browsers\"></a>\n"

# File: docs/8.x/dusk.md, line: 93
# File: docs/master/dusk.md, line: 93
#. type: Title ###
#, no-wrap
msgid "Using Other Browsers"
msgstr "使用其他瀏覽器"

# File: docs/8.x/dusk.md, line: 96
# File: docs/master/dusk.md, line: 96
#. type: Plain text
msgid "By default, Dusk uses Google Chrome and a standalone [ChromeDriver](https://sites.google.com/chromium.org/driver) installation to run your browser tests. However, you may start your own Selenium server and run your tests against any browser you wish."
msgstr "預設情況下，Dusk 會使用 Google Chrome 以及一個獨立的 [ChromeDriver](https://sites.google.com/chromium.org/driver) 安裝來執行瀏覽器測試。不過，可以自行開啟 Selenium 伺服器，並使用任何瀏覽器來執行測試。"

# File: docs/8.x/dusk.md, line: 98
# File: docs/master/dusk.md, line: 98
#. type: Plain text
msgid "To get started, open your `tests/DuskTestCase.php` file, which is the base Dusk test case for your application. Within this file, you can remove the call to the `startChromeDriver` method. This will stop Dusk from automatically starting the ChromeDriver:"
msgstr "要開始使用其他瀏覽器，請開啟 `tests/DuskTestCase.php` 檔。這個檔案是專案中所有 Dusk 測試的基礎測試類別。若在該檔案內移除 `startChromeDriver` 方法的呼叫，就可以讓 Dusk 不要自動開啟 ChromeDriver："

# File: docs/8.x/dusk.md, line: 109
# File: docs/8.x/dusk.md, line: 187
# File: docs/master/dusk.md, line: 109
# File: docs/master/dusk.md, line: 187
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Prepare for Dusk test execution.\n"
"     *\n"
"     * @beforeClass\n"
"     * @return void\n"
"     */\n"
"    public static function prepare()\n"
"    {\n"
"        // static::startChromeDriver();\n"
"    }\n"
msgstr "    /**\n"
"     * Prepare for Dusk test execution.\n"
"     *\n"
"     * @beforeClass\n"
"     * @return void\n"
"     */\n"
"    public static function prepare()\n"
"    {\n"
"        // static::startChromeDriver();\n"
"    }\n"

# File: docs/8.x/dusk.md, line: 111
# File: docs/master/dusk.md, line: 111
#. type: Plain text
msgid "Next, you may modify the `driver` method to connect to the URL and port of your choice. In addition, you may modify the \"desired capabilities\" that should be passed to the WebDriver:"
msgstr "接著，可以修改 `driver` 方法來連先到所選的 URL 與連結埠。另外，也可以修改應傳給 WebDriver 的「Desired Capabilities (所需功能)」："

# File: docs/8.x/dusk.md, line: 123
# File: docs/master/dusk.md, line: 123
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Create the RemoteWebDriver instance.\n"
"     *\n"
"     * @return \\Facebook\\WebDriver\\Remote\\RemoteWebDriver\n"
"     */\n"
"    protected function driver()\n"
"    {\n"
"        return RemoteWebDriver::create(\n"
"            'http://localhost:4444/wd/hub', DesiredCapabilities::phantomjs()\n"
"        );\n"
"    }\n"
msgstr "    /**\n"
"     * Create the RemoteWebDriver instance.\n"
"     *\n"
"     * @return \\Facebook\\WebDriver\\Remote\\RemoteWebDriver\n"
"     */\n"
"    protected function driver()\n"
"    {\n"
"        return RemoteWebDriver::create(\n"
"            'http://localhost:4444/wd/hub', DesiredCapabilities::phantomjs()\n"
"        );\n"
"    }\n"

# File: docs/8.x/dusk.md, line: 125
# File: docs/master/dusk.md, line: 125
#. type: Plain text
#, no-wrap
msgid "<a name=\"getting-started\"></a>\n"
msgstr "<a name=\"getting-started\"></a>\n"

# File: docs/8.x/dusk.md, line: 125
# File: docs/master/dusk.md, line: 125
#. type: Title ##
#, no-wrap
msgid "Getting Started"
msgstr "入門"

# File: docs/8.x/dusk.md, line: 128
# File: docs/master/dusk.md, line: 128
#. type: Plain text
#, no-wrap
msgid "<a name=\"generating-tests\"></a>\n"
msgstr "<a name=\"generating-tests\"></a>\n"

# File: docs/8.x/dusk.md, line: 128
# File: docs/master/dusk.md, line: 128
#. type: Title ###
#, no-wrap
msgid "Generating Tests"
msgstr "產生測試"

# File: docs/8.x/dusk.md, line: 131
# File: docs/master/dusk.md, line: 131
#. type: Plain text
msgid "To generate a Dusk test, use the `dusk:make` Artisan command. The generated test will be placed in the `tests/Browser` directory:"
msgstr "若要產生 Dusk 測試，請使用 `dusk:make` Artisan 指令。產生的測試將放置於 `tests/Browser` 目錄內："

# File: docs/8.x/dusk.md, line: 133
# File: docs/master/dusk.md, line: 133
#. type: Plain text
#, no-wrap
msgid "    php artisan dusk:make LoginTest\n"
msgstr "    php artisan dusk:make LoginTest\n"

# File: docs/8.x/dusk.md, line: 135
# File: docs/master/dusk.md, line: 135
#. type: Plain text
#, no-wrap
msgid "<a name=\"migrations\"></a>\n"
msgstr "<a name=\"migrations\"></a>\n"

# File: docs/8.x/dusk.md, line: 135
# File: docs/master/dusk.md, line: 135
#. type: Title ###
#, no-wrap
msgid "Database Migrations"
msgstr "資料庫 Migration"

# File: docs/8.x/dusk.md, line: 138
# File: docs/master/dusk.md, line: 138
#. type: Plain text
msgid "Most of the tests you write will interact with pages that retrieve data from your application's database; however, your Dusk tests should never use the `RefreshDatabase `trait. The `RefreshDatabase` trait leverages database transactions which will not be applicable or available across HTTP requests. Instead, use the `DatabaseMigrations` trait, which re-migrates the database for each test:"
msgstr "我們所撰寫的大部分的測試所互動的頁面都會從專案的資料庫內取得資料。不過，Dusk 測試不應使用 `RefreshDatabase` Trait。`RefreshDatabase` Trait 使用資料庫 Transaction，會讓資料無法在不同 HTTP 請求間共用。請改用 `DatabaseMigrations` Trait，為每個測試重新 Migrate 資料庫："

# File: docs/8.x/dusk.md, line: 140
# File: docs/8.x/dusk.md, line: 218
# File: docs/8.x/dusk.md, line: 323
# File: docs/8.x/dusk.md, line: 1625
# File: docs/8.x/dusk.md, line: 1672
# File: docs/8.x/dusk.md, line: 1746
# File: docs/master/dusk.md, line: 140
# File: docs/master/dusk.md, line: 218
# File: docs/master/dusk.md, line: 323
# File: docs/master/dusk.md, line: 1625
# File: docs/master/dusk.md, line: 1672
# File: docs/master/dusk.md, line: 1746
#. type: Plain text
#, no-wrap
msgid "    <?php\n"
msgstr "    <?php\n"

# File: docs/8.x/dusk.md, line: 142
# File: docs/8.x/dusk.md, line: 220
# File: docs/8.x/dusk.md, line: 1748
# File: docs/master/dusk.md, line: 142
# File: docs/master/dusk.md, line: 220
# File: docs/master/dusk.md, line: 1748
#. type: Plain text
#, no-wrap
msgid "    namespace Tests\\Browser;\n"
msgstr "    namespace Tests\\Browser;\n"

# File: docs/8.x/dusk.md, line: 147
# File: docs/8.x/dusk.md, line: 225
# File: docs/master/dusk.md, line: 147
# File: docs/master/dusk.md, line: 225
#. type: Plain text
#, no-wrap
msgid "    use App\\Models\\User;\n"
"    use Illuminate\\Foundation\\Testing\\DatabaseMigrations;\n"
"    use Laravel\\Dusk\\Chrome;\n"
"    use Tests\\DuskTestCase;\n"
msgstr "    use App\\Models\\User;\n"
"    use Illuminate\\Foundation\\Testing\\DatabaseMigrations;\n"
"    use Laravel\\Dusk\\Chrome;\n"
"    use Tests\\DuskTestCase;\n"

# File: docs/8.x/dusk.md, line: 152
# File: docs/master/dusk.md, line: 152
#. type: Plain text
#, no-wrap
msgid "    class ExampleTest extends DuskTestCase\n"
"    {\n"
"        use DatabaseMigrations;\n"
"    }\n"
msgstr "    class ExampleTest extends DuskTestCase\n"
"    {\n"
"        use DatabaseMigrations;\n"
"    }\n"

# File: docs/8.x/dusk.md, line: 154
# File: docs/master/dusk.md, line: 154
#. type: Plain text
#, no-wrap
msgid "> {note} SQLite in-memory databases may not be used when executing Dusk tests. Since the browser executes within its own process, it will not be able to access the in-memory databases of other processes.\n"
msgstr "> {note} 在記憶體內的 SQLite 資料庫無法在執行 Dusk 測試時使用。由於瀏覽器會在自己的處理程序內執行，因此將無法存取其他處理程序中在記憶體內的資料庫。\n"

# File: docs/8.x/dusk.md, line: 156
# File: docs/master/dusk.md, line: 156
#. type: Plain text
#, no-wrap
msgid "<a name=\"running-tests\"></a>\n"
msgstr "<a name=\"running-tests\"></a>\n"

# File: docs/8.x/dusk.md, line: 156
# File: docs/master/dusk.md, line: 156
#. type: Title ###
#, no-wrap
msgid "Running Tests"
msgstr "執行測試"

# File: docs/8.x/dusk.md, line: 159
# File: docs/master/dusk.md, line: 159
#. type: Plain text
msgid "To run your browser tests, execute the `dusk` Artisan command:"
msgstr "若要執行瀏覽器測試，請執行 `dusk` Artisan 指令："

# File: docs/8.x/dusk.md, line: 161
# File: docs/master/dusk.md, line: 161
#. type: Plain text
#, no-wrap
msgid "    php artisan dusk\n"
msgstr "    php artisan dusk\n"

# File: docs/8.x/dusk.md, line: 163
# File: docs/master/dusk.md, line: 163
#. type: Plain text
msgid "If you had test failures the last time you ran the `dusk` command, you may save time by re-running the failing tests first using the `dusk:fails` command:"
msgstr "若在上次執行 `dusk` 指令時有測試失敗了，則可以通過 `dusk:fails` 指令來先重新執行失敗的測試以節省時間："

# File: docs/8.x/dusk.md, line: 165
# File: docs/master/dusk.md, line: 165
#. type: Plain text
#, no-wrap
msgid "    php artisan dusk:fails\n"
msgstr "    php artisan dusk:fails\n"

# File: docs/8.x/dusk.md, line: 167
# File: docs/master/dusk.md, line: 167
#. type: Plain text
msgid "The `dusk` command accepts any argument that is normally accepted by the PHPUnit test runner, such as allowing you to only run the tests for a given [group](https://phpunit.de/manual/current/en/appendixes.annotations.html#appendixes.annotations.group):"
msgstr "`dusk` 指令接受所有一般 PHPUnit 測試執行程式所接受的引數，如可以只執行特定[群組](https://phpunit.de/manual/current/en/appendixes.annotations.html#appendixes.annotations.group)內的測試："

# File: docs/8.x/dusk.md, line: 169
# File: docs/master/dusk.md, line: 169
#. type: Plain text
#, no-wrap
msgid "    php artisan dusk --group=foo\n"
msgstr "    php artisan dusk --group=foo\n"

# File: docs/8.x/dusk.md, line: 171
# File: docs/master/dusk.md, line: 171
#. type: Plain text
#, no-wrap
msgid "> {tip} If you are using [Laravel Sail](/docs/{{version}}/sail) to manage your local development environment, please consult the Sail documentation on [configuring and running Dusk tests](/docs/{{version}}/sail#laravel-dusk).\n"
msgstr "> {tip} 若使用 [Laravel Sail](/docs/{{version}}/sail) 來管理本機開發環境，請參考 Sail 說明文件中有關[設定與執行 Dusk 測試](/docs/{{version}}/sail#laravel-dusk)的部分。\n"

# File: docs/8.x/dusk.md, line: 173
# File: docs/master/dusk.md, line: 173
#. type: Plain text
#, no-wrap
msgid "<a name=\"manually-starting-chromedriver\"></a>\n"
msgstr "<a name=\"manually-starting-chromedriver\"></a>\n"

# File: docs/8.x/dusk.md, line: 173
# File: docs/master/dusk.md, line: 173
#. type: Title ####
#, no-wrap
msgid "Manually Starting ChromeDriver"
msgstr "手動啟動 ChromeDriver"

# File: docs/8.x/dusk.md, line: 176
# File: docs/master/dusk.md, line: 176
#. type: Plain text
msgid "By default, Dusk will automatically attempt to start ChromeDriver. If this does not work for your particular system, you may manually start ChromeDriver before running the `dusk` command. If you choose to start ChromeDriver manually, you should comment out the following line of your `tests/DuskTestCase.php` file:"
msgstr "預設情況下，Dusk 會自動嘗試開啟 ChromeDriver。若你所使用的系統無法自動開啟 ChromeDriver，則可以在執行 `dusk` 指令前手動啟動 ChromeDriver。若想手動啟動 ChromeDriver，則應先在 `test/DuskTestCase.php` 檔中將下列部分註解掉："

# File: docs/8.x/dusk.md, line: 189
# File: docs/master/dusk.md, line: 189
#. type: Plain text
msgid "In addition, if you start ChromeDriver on a port other than 9515, you should modify the `driver` method of the same class to reflect the correct port:"
msgstr "此外，若在 9515 連結埠以外的其他連結埠上開啟 ChromeDriver，則應在相同類別內修改 `driver` 方法以修改為相應的連結埠："

# File: docs/8.x/dusk.md, line: 201
# File: docs/master/dusk.md, line: 201
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Create the RemoteWebDriver instance.\n"
"     *\n"
"     * @return \\Facebook\\WebDriver\\Remote\\RemoteWebDriver\n"
"     */\n"
"    protected function driver()\n"
"    {\n"
"        return RemoteWebDriver::create(\n"
"            'http://localhost:9515', DesiredCapabilities::chrome()\n"
"        );\n"
"    }\n"
msgstr "    /**\n"
"     * Create the RemoteWebDriver instance.\n"
"     *\n"
"     * @return \\Facebook\\WebDriver\\Remote\\RemoteWebDriver\n"
"     */\n"
"    protected function driver()\n"
"    {\n"
"        return RemoteWebDriver::create(\n"
"            'http://localhost:9515', DesiredCapabilities::chrome()\n"
"        );\n"
"    }\n"

# File: docs/8.x/dusk.md, line: 203
# File: docs/master/dusk.md, line: 203
#. type: Plain text
#, no-wrap
msgid "<a name=\"environment-handling\"></a>\n"
msgstr "<a name=\"environment-handling\"></a>\n"

# File: docs/8.x/dusk.md, line: 203
# File: docs/master/dusk.md, line: 203
#. type: Title ###
#, no-wrap
msgid "Environment Handling"
msgstr "處理環境"

# File: docs/8.x/dusk.md, line: 206
# File: docs/master/dusk.md, line: 206
#. type: Plain text
msgid "To force Dusk to use its own environment file when running tests, create a `.env.dusk.{environment}` file in the root of your project. For example, if you will be initiating the `dusk` command from your `local` environment, you should create a `.env.dusk.local` file."
msgstr "若要在執行測試時強制讓 Dusk 使用自己的環境檔，請在專案根目錄下建立一個 `.env.dusk.{environment}` 檔案。舉例來說，若會在 `local` 環境下執行 `dusk`，請建立 `.env.dusk.local` 檔案。"

# File: docs/8.x/dusk.md, line: 208
# File: docs/master/dusk.md, line: 208
#. type: Plain text
msgid "When running tests, Dusk will back-up your `.env` file and rename your Dusk environment to `.env`. Once the tests have completed, your `.env` file will be restored."
msgstr "執行測試時，Dusk 會備份 `.env` 檔，並將 Dusk 環境檔重新命名為 `.env`。測試完成後，會恢復原本的 `.env` 檔。"

# File: docs/8.x/dusk.md, line: 210
# File: docs/master/dusk.md, line: 210
#. type: Plain text
#, no-wrap
msgid "<a name=\"browser-basics\"></a>\n"
msgstr "<a name=\"browser-basics\"></a>\n"

# File: docs/8.x/dusk.md, line: 210
# File: docs/master/dusk.md, line: 210
#. type: Title ##
#, no-wrap
msgid "Browser Basics"
msgstr "「瀏覽器」基礎"

# File: docs/8.x/dusk.md, line: 213
# File: docs/master/dusk.md, line: 213
#. type: Plain text
#, no-wrap
msgid "<a name=\"creating-browsers\"></a>\n"
msgstr "<a name=\"creating-browsers\"></a>\n"

# File: docs/8.x/dusk.md, line: 213
# File: docs/master/dusk.md, line: 213
#. type: Title ###
#, no-wrap
msgid "Creating Browsers"
msgstr "建立瀏覽器"

# File: docs/8.x/dusk.md, line: 216
# File: docs/master/dusk.md, line: 216
#. type: Plain text
msgid "To get started, let's write a test that verifies we can log into our application. After generating a test, we can modify it to navigate to the login page, enter some credentials, and click the \"Login\" button. To create a browser instance, you may call the `browse` method from within your Dusk test:"
msgstr "要開始使用瀏覽器，我們先來建立一個用來驗證能否登入網站的測試。產生測試後，我們就可以修改該測試、前往登入頁、輸入帳號密碼、並點擊「登入」按鈕。要建立瀏覽器實體，可在 Dusk 測試內呼叫 `browser` 方法："

# File: docs/8.x/dusk.md, line: 229
# File: docs/master/dusk.md, line: 229
#. type: Plain text
#, no-wrap
msgid "    class ExampleTest extends DuskTestCase\n"
"    {\n"
"        use DatabaseMigrations;\n"
msgstr "    class ExampleTest extends DuskTestCase\n"
"    {\n"
"        use DatabaseMigrations;\n"

# File: docs/8.x/dusk.md, line: 240
# File: docs/master/dusk.md, line: 240
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * A basic browser test example.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function test_basic_example()\n"
"        {\n"
"            $user = User::factory()->create([\n"
"                'email' => 'taylor@laravel.com',\n"
"            ]);\n"
msgstr "        /**\n"
"         * A basic browser test example.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function test_basic_example()\n"
"        {\n"
"            $user = User::factory()->create([\n"
"                'email' => 'taylor@laravel.com',\n"
"            ]);\n"

# File: docs/8.x/dusk.md, line: 250
# File: docs/master/dusk.md, line: 250
#. type: Plain text
#, no-wrap
msgid "            $this->browse(function ($browser) use ($user) {\n"
"                $browser->visit('/login')\n"
"                        ->type('email', $user->email)\n"
"                        ->type('password', 'password')\n"
"                        ->press('Login')\n"
"                        ->assertPathIs('/home');\n"
"            });\n"
"        }\n"
"    }\n"
msgstr "            $this->browse(function ($browser) use ($user) {\n"
"                $browser->visit('/login')\n"
"                        ->type('email', $user->email)\n"
"                        ->type('password', 'password')\n"
"                        ->press('Login')\n"
"                        ->assertPathIs('/home');\n"
"            });\n"
"        }\n"
"    }\n"

# File: docs/8.x/dusk.md, line: 252
# File: docs/master/dusk.md, line: 252
#. type: Plain text
msgid "As you can see in the example above, the `browse` method accepts a closure. A browser instance will automatically be passed to this closure by Dusk and is the main object used to interact with and make assertions against your application."
msgstr "如上所見，`browser` 方法接受一個閉包。Dusk 會自動將瀏覽器實體傳入該閉包內，瀏覽器實體是用來與網站互動以及用來進行 Assertion 的主要物件。"

# File: docs/8.x/dusk.md, line: 254
# File: docs/master/dusk.md, line: 254
#. type: Plain text
#, no-wrap
msgid "<a name=\"creating-multiple-browsers\"></a>\n"
msgstr "<a name=\"creating-multiple-browsers\"></a>\n"

# File: docs/8.x/dusk.md, line: 254
# File: docs/master/dusk.md, line: 254
#. type: Title ####
#, no-wrap
msgid "Creating Multiple Browsers"
msgstr "建立多個瀏覽器"

# File: docs/8.x/dusk.md, line: 257
# File: docs/master/dusk.md, line: 257
#. type: Plain text
msgid "Sometimes you may need multiple browsers in order to properly carry out a test. For example, multiple browsers may be needed to test a chat screen that interacts with websockets. To create multiple browsers, simply add more browser arguments to the signature of the closure given to the `browse` method:"
msgstr "有時候，我們需要建立多個瀏覽器來正確地進行測試。舉例來說，在測試與 WebSocket 互動的聊天畫面時可能會需要多個瀏覽器。若要建立多個瀏覽器，只需要將多個瀏覽器引數加到提供給 `browser` 方法的閉包上即可："

# File: docs/8.x/dusk.md, line: 262
# File: docs/master/dusk.md, line: 262
#. type: Plain text
#, no-wrap
msgid "    $this->browse(function ($first, $second) {\n"
"        $first->loginAs(User::find(1))\n"
"              ->visit('/home')\n"
"              ->waitForText('Message');\n"
msgstr "    $this->browse(function ($first, $second) {\n"
"        $first->loginAs(User::find(1))\n"
"              ->visit('/home')\n"
"              ->waitForText('Message');\n"

# File: docs/8.x/dusk.md, line: 268
# File: docs/master/dusk.md, line: 268
#. type: Plain text
#, no-wrap
msgid "        $second->loginAs(User::find(2))\n"
"               ->visit('/home')\n"
"               ->waitForText('Message')\n"
"               ->type('message', 'Hey Taylor')\n"
"               ->press('Send');\n"
msgstr "        $second->loginAs(User::find(2))\n"
"               ->visit('/home')\n"
"               ->waitForText('Message')\n"
"               ->type('message', 'Hey Taylor')\n"
"               ->press('Send');\n"

# File: docs/8.x/dusk.md, line: 272
# File: docs/master/dusk.md, line: 272
#. type: Plain text
#, no-wrap
msgid "        $first->waitForText('Hey Taylor')\n"
"              ->assertSee('Jeffrey Way');\n"
"    });\n"
msgstr "        $first->waitForText('Hey Taylor')\n"
"              ->assertSee('Jeffrey Way');\n"
"    });\n"

# File: docs/8.x/dusk.md, line: 274
# File: docs/master/dusk.md, line: 274
#. type: Plain text
#, no-wrap
msgid "<a name=\"navigation\"></a>\n"
msgstr "<a name=\"navigation\"></a>\n"

# File: docs/8.x/dusk.md, line: 274
# File: docs/master/dusk.md, line: 274
#. type: Title ###
#, no-wrap
msgid "Navigation"
msgstr "導航"

# File: docs/8.x/dusk.md, line: 277
# File: docs/master/dusk.md, line: 277
#. type: Plain text
msgid "The `visit` method may be used to navigate to a given URI within your application:"
msgstr "`visit` 方法可用來在網站內導航到特定的 URI 上："

# File: docs/8.x/dusk.md, line: 279
# File: docs/master/dusk.md, line: 279
#. type: Plain text
#, no-wrap
msgid "    $browser->visit('/login');\n"
msgstr "    $browser->visit('/login');\n"

# File: docs/8.x/dusk.md, line: 281
# File: docs/master/dusk.md, line: 281
#. type: Plain text
msgid "You may use the `visitRoute` method to navigate to a [named route](/docs/{{version}}/routing#named-routes):"
msgstr "可以使用 `visitRoute` 方法來導航到[命名路由](/docs/{{version}}/routing#named-routes)："

# File: docs/8.x/dusk.md, line: 283
# File: docs/master/dusk.md, line: 283
#. type: Plain text
#, no-wrap
msgid "    $browser->visitRoute('login');\n"
msgstr "    $browser->visitRoute('login');\n"

# File: docs/8.x/dusk.md, line: 285
# File: docs/master/dusk.md, line: 285
#. type: Plain text
msgid "You may navigate \"back\" and \"forward\" using the `back` and `forward` methods:"
msgstr "可以使用 `back` 與 `forward` 方法來導航到「上一頁」與「下一頁」："

# File: docs/8.x/dusk.md, line: 287
# File: docs/master/dusk.md, line: 287
#. type: Plain text
#, no-wrap
msgid "    $browser->back();\n"
msgstr "    $browser->back();\n"

# File: docs/8.x/dusk.md, line: 289
# File: docs/master/dusk.md, line: 289
#. type: Plain text
#, no-wrap
msgid "    $browser->forward();\n"
msgstr "    $browser->forward();\n"

# File: docs/8.x/dusk.md, line: 291
# File: docs/master/dusk.md, line: 291
#. type: Plain text
msgid "You may use the `refresh` method to refresh the page:"
msgstr "可以使用 `refresh` 方法來重新整理頁面："

# File: docs/8.x/dusk.md, line: 293
# File: docs/master/dusk.md, line: 293
#. type: Plain text
#, no-wrap
msgid "    $browser->refresh();\n"
msgstr "    $browser->refresh();\n"

# File: docs/8.x/dusk.md, line: 295
# File: docs/master/dusk.md, line: 295
#. type: Plain text
#, no-wrap
msgid "<a name=\"resizing-browser-windows\"></a>\n"
msgstr "<a name=\"resizing-browser-windows\"></a>\n"

# File: docs/8.x/dusk.md, line: 295
# File: docs/master/dusk.md, line: 295
#. type: Title ###
#, no-wrap
msgid "Resizing Browser Windows"
msgstr "縮放瀏覽器視窗"

# File: docs/8.x/dusk.md, line: 298
# File: docs/master/dusk.md, line: 298
#. type: Plain text
msgid "You may use the `resize` method to adjust the size of the browser window:"
msgstr "可以使用 `resize` 方法來調整瀏覽器視窗的大小："

# File: docs/8.x/dusk.md, line: 300
# File: docs/master/dusk.md, line: 300
#. type: Plain text
#, no-wrap
msgid "    $browser->resize(1920, 1080);\n"
msgstr "    $browser->resize(1920, 1080);\n"

# File: docs/8.x/dusk.md, line: 302
# File: docs/master/dusk.md, line: 302
#. type: Plain text
msgid "The `maximize` method may be used to maximize the browser window:"
msgstr "`maximize` 方法可用來最大化瀏覽器視窗："

# File: docs/8.x/dusk.md, line: 304
# File: docs/master/dusk.md, line: 304
#. type: Plain text
#, no-wrap
msgid "    $browser->maximize();\n"
msgstr "    $browser->maximize();\n"

# File: docs/8.x/dusk.md, line: 306
# File: docs/master/dusk.md, line: 306
#. type: Plain text
msgid "The `fitContent` method will resize the browser window to match the size of its content:"
msgstr "`fitContent` 方法會將瀏覽器視窗縮放到符合其內容的大小："

# File: docs/8.x/dusk.md, line: 308
# File: docs/master/dusk.md, line: 308
#. type: Plain text
#, no-wrap
msgid "    $browser->fitContent();\n"
msgstr "    $browser->fitContent();\n"

# File: docs/8.x/dusk.md, line: 310
# File: docs/master/dusk.md, line: 310
#. type: Plain text
msgid "When a test fails, Dusk will automatically resize the browser to fit the content prior to taking a screenshot. You may disable this feature by calling the `disableFitOnFailure` method within your test:"
msgstr "當測試失敗時，Dusk 會自動縮放瀏覽器視窗來符合其內容，以進行截圖。可以通過在測試內呼叫 `disableFitOnFailure` 方法來禁用此功能："

# File: docs/8.x/dusk.md, line: 312
# File: docs/master/dusk.md, line: 312
#. type: Plain text
#, no-wrap
msgid "    $browser->disableFitOnFailure();\n"
msgstr "    $browser->disableFitOnFailure();\n"

# File: docs/8.x/dusk.md, line: 314
# File: docs/master/dusk.md, line: 314
#. type: Plain text
msgid "You may use the `move` method to move the browser window to a different position on your screen:"
msgstr "可以使用 `move` 方法來將瀏覽器視窗移動到畫面上的不同位置："

# File: docs/8.x/dusk.md, line: 316
# File: docs/master/dusk.md, line: 316
#. type: Plain text
#, no-wrap
msgid "    $browser->move($x = 100, $y = 100);\n"
msgstr "    $browser->move($x = 100, $y = 100);\n"

# File: docs/8.x/dusk.md, line: 318
# File: docs/master/dusk.md, line: 318
#. type: Plain text
#, no-wrap
msgid "<a name=\"browser-macros\"></a>\n"
msgstr "<a name=\"browser-macros\"></a>\n"

# File: docs/8.x/dusk.md, line: 318
# File: docs/master/dusk.md, line: 318
#. type: Title ###
#, no-wrap
msgid "Browser Macros"
msgstr "瀏覽器 Macro"

# File: docs/8.x/dusk.md, line: 321
# File: docs/master/dusk.md, line: 321
#. type: Plain text
msgid "If you would like to define a custom browser method that you can re-use in a variety of your tests, you may use the `macro` method on the `Browser` class. Typically, you should call this method from a [service provider's](/docs/{{version}}/providers) `boot` method:"
msgstr "若想定義可在各個測試內重複使用的自定瀏覽器方法，可使用 `Browser` 類別上的 `macro` 方法。通常來說，該方法應在某個 [Service Provider](/docs/{{version}}/providers) 的 `boot` 方法內呼叫："

# File: docs/8.x/dusk.md, line: 325
# File: docs/master/dusk.md, line: 325
#. type: Plain text
#, no-wrap
msgid "    namespace App\\Providers;\n"
msgstr "    namespace App\\Providers;\n"

# File: docs/8.x/dusk.md, line: 328
# File: docs/master/dusk.md, line: 328
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Support\\ServiceProvider;\n"
"    use Laravel\\Dusk\\Browser;\n"
msgstr "    use Illuminate\\Support\\ServiceProvider;\n"
"    use Laravel\\Dusk\\Browser;\n"

# File: docs/8.x/dusk.md, line: 340
# File: docs/master/dusk.md, line: 340
#. type: Plain text
#, no-wrap
msgid "    class DuskServiceProvider extends ServiceProvider\n"
"    {\n"
"        /**\n"
"         * Register Dusk's browser macros.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function boot()\n"
"        {\n"
"            Browser::macro('scrollToElement', function ($element = null) {\n"
"                $this->script(\"$('html, body').animate({ scrollTop: $('$element').offset().top }, 0);\");\n"
msgstr "    class DuskServiceProvider extends ServiceProvider\n"
"    {\n"
"        /**\n"
"         * Register Dusk's browser macros.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function boot()\n"
"        {\n"
"            Browser::macro('scrollToElement', function ($element = null) {\n"
"                $this->script(\"$('html, body').animate({ scrollTop: $('$element').offset().top }, 0);\");\n"

# File: docs/8.x/dusk.md, line: 345
# File: docs/master/dusk.md, line: 345
#. type: Plain text
#, no-wrap
msgid "                return $this;\n"
"            });\n"
"        }\n"
"    }\n"
msgstr "                return $this;\n"
"            });\n"
"        }\n"
"    }\n"

# File: docs/8.x/dusk.md, line: 347
# File: docs/master/dusk.md, line: 347
#. type: Plain text
msgid "The `macro` function accepts a name as its first argument, and a closure as its second. The macro's closure will be executed when calling the macro as a method on a `Browser` instance:"
msgstr "`macro` 方法接受一個名稱作為其第一個引數，以及閉包作為其第二個引數。當在 `Browser` 實體上以方法呼叫該 Macro 時，會執行該 Macro 的閉包："

# File: docs/8.x/dusk.md, line: 353
# File: docs/master/dusk.md, line: 353
#. type: Plain text
#, no-wrap
msgid "    $this->browse(function ($browser) use ($user) {\n"
"        $browser->visit('/pay')\n"
"                ->scrollToElement('#credit-card-details')\n"
"                ->assertSee('Enter Credit Card Details');\n"
"    });\n"
msgstr "    $this->browse(function ($browser) use ($user) {\n"
"        $browser->visit('/pay')\n"
"                ->scrollToElement('#credit-card-details')\n"
"                ->assertSee('Enter Credit Card Details');\n"
"    });\n"

# File: docs/8.x/dusk.md, line: 355
# File: docs/master/dusk.md, line: 355
#. type: Plain text
#, no-wrap
msgid "<a name=\"authentication\"></a>\n"
msgstr "<a name=\"authentication\"></a>\n"

# File: docs/8.x/dusk.md, line: 355
# File: docs/master/dusk.md, line: 355
#. type: Title ###
#, no-wrap
msgid "Authentication"
msgstr "登入驗證"

# File: docs/8.x/dusk.md, line: 358
# File: docs/master/dusk.md, line: 358
#. type: Plain text
msgid "Often, you will be testing pages that require authentication. You can use Dusk's `loginAs` method in order to avoid interacting with your application's login screen during every test. The `loginAs` method accepts a primary key associated with your authenticatable model or an authenticatable model instance:"
msgstr "一般來說，我們會需要測試需要登入的頁面。可以使用 Dusk 的 `loginAs` 方法來避免每個測試都需要處理網站的登入畫面。`loginAs` 方法接受 Authenticatable Model 所關聯的主索引鍵，或是 Authenticatable Model 實體："

# File: docs/8.x/dusk.md, line: 360
# File: docs/master/dusk.md, line: 360
#. type: Plain text
#, no-wrap
msgid "    use App\\Models\\User;\n"
msgstr "    use App\\Models\\User;\n"

# File: docs/8.x/dusk.md, line: 365
# File: docs/master/dusk.md, line: 365
#. type: Plain text
#, no-wrap
msgid "    $this->browse(function ($browser) {\n"
"        $browser->loginAs(User::find(1))\n"
"              ->visit('/home');\n"
"    });\n"
msgstr "    $this->browse(function ($browser) {\n"
"        $browser->loginAs(User::find(1))\n"
"              ->visit('/home');\n"
"    });\n"

# File: docs/8.x/dusk.md, line: 367
# File: docs/master/dusk.md, line: 367
#. type: Plain text
#, no-wrap
msgid "> {note} After using the `loginAs` method, the user session will be maintained for all tests within the file.\n"
msgstr "> {note} 使用 `loginAs` 方法後，在該檔案內所有的測試都將使用該使用者 Session。\n"

# File: docs/8.x/dusk.md, line: 369
# File: docs/master/dusk.md, line: 369
#. type: Plain text
#, no-wrap
msgid "<a name=\"cookies\"></a>\n"
msgstr "<a name=\"cookies\"></a>\n"

# File: docs/8.x/dusk.md, line: 369
# File: docs/master/dusk.md, line: 369
#. type: Title ###
#, no-wrap
msgid "Cookies"
msgstr "Cookie"

# File: docs/8.x/dusk.md, line: 372
# File: docs/master/dusk.md, line: 372
#. type: Plain text
msgid "You may use the `cookie` method to get or set an encrypted cookie's value. By default, all of the cookies created by Laravel are encrypted:"
msgstr "可以使用 `cookie` 方法來取得或設定加密的 Cookie 值。預設情況下，Laravel 所建立的所有 Cookie 都是經過加密的："

# File: docs/8.x/dusk.md, line: 374
# File: docs/master/dusk.md, line: 374
#. type: Plain text
#, no-wrap
msgid "    $browser->cookie('name');\n"
msgstr "    $browser->cookie('name');\n"

# File: docs/8.x/dusk.md, line: 376
# File: docs/master/dusk.md, line: 376
#. type: Plain text
#, no-wrap
msgid "    $browser->cookie('name', 'Taylor');\n"
msgstr "    $browser->cookie('name', 'Taylor');\n"

# File: docs/8.x/dusk.md, line: 378
# File: docs/master/dusk.md, line: 378
#. type: Plain text
msgid "You may use the `plainCookie` method to get or set an unencrypted cookie's value:"
msgstr "可以使用 `plainCookie` 方法來取得或設定未加密的 Cookie 值："

# File: docs/8.x/dusk.md, line: 380
# File: docs/master/dusk.md, line: 380
#. type: Plain text
#, no-wrap
msgid "    $browser->plainCookie('name');\n"
msgstr "    $browser->plainCookie('name');\n"

# File: docs/8.x/dusk.md, line: 382
# File: docs/master/dusk.md, line: 382
#. type: Plain text
#, no-wrap
msgid "    $browser->plainCookie('name', 'Taylor');\n"
msgstr "    $browser->plainCookie('name', 'Taylor');\n"

# File: docs/8.x/dusk.md, line: 384
# File: docs/master/dusk.md, line: 384
#. type: Plain text
msgid "You may use the `deleteCookie` method to delete the given cookie:"
msgstr "可以使用 `deleteCookie` 方法來刪除給定的 Cookie："

# File: docs/8.x/dusk.md, line: 386
# File: docs/master/dusk.md, line: 386
#. type: Plain text
#, no-wrap
msgid "    $browser->deleteCookie('name');\n"
msgstr "    $browser->deleteCookie('name');\n"

# File: docs/8.x/dusk.md, line: 388
# File: docs/master/dusk.md, line: 388
#. type: Plain text
#, no-wrap
msgid "<a name=\"executing-javascript\"></a>\n"
msgstr "<a name=\"executing-javascript\"></a>\n"

# File: docs/8.x/dusk.md, line: 388
# File: docs/master/dusk.md, line: 388
#. type: Title ###
#, no-wrap
msgid "Executing JavaScript"
msgstr "執行 JavaScript"

# File: docs/8.x/dusk.md, line: 391
# File: docs/master/dusk.md, line: 391
#. type: Plain text
msgid "You may use the `script` method to execute arbitrary JavaScript statements within the browser:"
msgstr "可以使用 `script` 方法來在瀏覽器內執行任意的 JavaScript 陳述式："

# File: docs/8.x/dusk.md, line: 393
# File: docs/master/dusk.md, line: 393
#. type: Plain text
#, no-wrap
msgid "    $browser->script('document.documentElement.scrollTop = 0');\n"
msgstr "    $browser->script('document.documentElement.scrollTop = 0');\n"

# File: docs/8.x/dusk.md, line: 398
# File: docs/master/dusk.md, line: 398
#. type: Plain text
#, no-wrap
msgid "    $browser->script([\n"
"        'document.body.scrollTop = 0',\n"
"        'document.documentElement.scrollTop = 0',\n"
"    ]);\n"
msgstr "    $browser->script([\n"
"        'document.body.scrollTop = 0',\n"
"        'document.documentElement.scrollTop = 0',\n"
"    ]);\n"

# File: docs/8.x/dusk.md, line: 400
# File: docs/master/dusk.md, line: 400
#. type: Plain text
#, no-wrap
msgid "    $output = $browser->script('return window.location.pathname');\n"
msgstr "    $output = $browser->script('return window.location.pathname');\n"

# File: docs/8.x/dusk.md, line: 402
# File: docs/master/dusk.md, line: 402
#. type: Plain text
#, no-wrap
msgid "<a name=\"taking-a-screenshot\"></a>\n"
msgstr "<a name=\"taking-a-screenshot\"></a>\n"

# File: docs/8.x/dusk.md, line: 402
# File: docs/master/dusk.md, line: 402
#. type: Title ###
#, no-wrap
msgid "Taking A Screenshot"
msgstr "截圖"

# File: docs/8.x/dusk.md, line: 405
# File: docs/master/dusk.md, line: 405
#. type: Plain text
msgid "You may use the `screenshot` method to take a screenshot and store it with the given filename. All screenshots will be stored within the `tests/Browser/screenshots` directory:"
msgstr "可以使用 `screenshot` 方法來截圖，並將截圖保存為給定的檔案名稱。所有的截圖都會保存在 `tests/Browser/screenshots` 目錄內："

# File: docs/8.x/dusk.md, line: 407
# File: docs/master/dusk.md, line: 407
#. type: Plain text
#, no-wrap
msgid "    $browser->screenshot('filename');\n"
msgstr "    $browser->screenshot('filename');\n"

# File: docs/8.x/dusk.md, line: 409
# File: docs/master/dusk.md, line: 409
#. type: Plain text
#, no-wrap
msgid "<a name=\"storing-console-output-to-disk\"></a>\n"
msgstr "<a name=\"storing-console-output-to-disk\"></a>\n"

# File: docs/8.x/dusk.md, line: 409
# File: docs/master/dusk.md, line: 409
#. type: Title ###
#, no-wrap
msgid "Storing Console Output To Disk"
msgstr "將主控台輸出保存至磁碟"

# File: docs/8.x/dusk.md, line: 412
# File: docs/master/dusk.md, line: 412
#. type: Plain text
msgid "You may use the `storeConsoleLog` method to write the current browser's console output to disk with the given filename. Console output will be stored within the `tests/Browser/console` directory:"
msgstr "可以使用 `storeConsoleLog` 方法來將目前瀏覽器的主控台輸出以給定的檔案名稱寫入到磁碟內。主控台輸出會保存在 `tests/Browser/console` 目錄內："

# File: docs/8.x/dusk.md, line: 414
# File: docs/master/dusk.md, line: 414
#. type: Plain text
#, no-wrap
msgid "    $browser->storeConsoleLog('filename');\n"
msgstr "    $browser->storeConsoleLog('filename');\n"

# File: docs/8.x/dusk.md, line: 416
# File: docs/master/dusk.md, line: 416
#. type: Plain text
#, no-wrap
msgid "<a name=\"storing-page-source-to-disk\"></a>\n"
msgstr "<a name=\"storing-page-source-to-disk\"></a>\n"

# File: docs/8.x/dusk.md, line: 416
# File: docs/master/dusk.md, line: 416
#. type: Title ###
#, no-wrap
msgid "Storing Page Source To Disk"
msgstr "將頁面原始碼儲存至磁碟"

# File: docs/8.x/dusk.md, line: 419
# File: docs/master/dusk.md, line: 419
#. type: Plain text
msgid "You may use the `storeSource` method to write the current page's source to disk with the given filename. The page source will be stored within the `tests/Browser/source` directory:"
msgstr "可以使用 `storeSource` 方法來將目前頁面的原始碼以給定的檔案名稱寫入到磁碟內。頁面原始碼會保存在 `tests/Browser/source` 目錄內："

# File: docs/8.x/dusk.md, line: 421
# File: docs/master/dusk.md, line: 421
#. type: Plain text
#, no-wrap
msgid "    $browser->storeSource('filename');\n"
msgstr "    $browser->storeSource('filename');\n"

# File: docs/8.x/dusk.md, line: 423
# File: docs/master/dusk.md, line: 423
#. type: Plain text
#, no-wrap
msgid "<a name=\"interacting-with-elements\"></a>\n"
msgstr "<a name=\"interacting-with-elements\"></a>\n"

# File: docs/8.x/dusk.md, line: 423
# File: docs/master/dusk.md, line: 423
#. type: Title ##
#, no-wrap
msgid "Interacting With Elements"
msgstr "與元素互動"

# File: docs/8.x/dusk.md, line: 426
# File: docs/master/dusk.md, line: 426
#. type: Plain text
#, no-wrap
msgid "<a name=\"dusk-selectors\"></a>\n"
msgstr "<a name=\"dusk-selectors\"></a>\n"

# File: docs/8.x/dusk.md, line: 426
# File: docs/master/dusk.md, line: 426
#. type: Title ###
#, no-wrap
msgid "Dusk Selectors"
msgstr "Dusk 選擇器"

# File: docs/8.x/dusk.md, line: 429
# File: docs/master/dusk.md, line: 429
#. type: Plain text
msgid "Choosing good CSS selectors for interacting with elements is one of the hardest parts of writing Dusk tests. Over time, frontend changes can cause CSS selectors like the following to break your tests:"
msgstr "在撰寫 Dusk 測試時，選擇一個好的 CSS 選擇器來與元素互動是最難的一部分。日子一天天過去，當前端有更改時，若有像下列這樣的 CSS 選擇器就有可能讓測試失敗："

# File: docs/8.x/dusk.md, line: 431
# File: docs/8.x/dusk.md, line: 441
# File: docs/8.x/dusk.md, line: 1463
# File: docs/master/dusk.md, line: 431
# File: docs/master/dusk.md, line: 441
# File: docs/master/dusk.md, line: 1463
#. type: Plain text
#, no-wrap
msgid "    // HTML...\n"
msgstr "    // HTML...\n"

# File: docs/8.x/dusk.md, line: 433
# File: docs/master/dusk.md, line: 433
#. type: Plain text
#, no-wrap
msgid "    <button>Login</button>\n"
msgstr "    <button>Login</button>\n"

# File: docs/8.x/dusk.md, line: 435
# File: docs/8.x/dusk.md, line: 445
# File: docs/master/dusk.md, line: 435
# File: docs/master/dusk.md, line: 445
#. type: Plain text
#, no-wrap
msgid "    // Test...\n"
msgstr "    // Test...\n"

# File: docs/8.x/dusk.md, line: 437
# File: docs/master/dusk.md, line: 437
#. type: Plain text
#, no-wrap
msgid "    $browser->click('.login-page .container div > button');\n"
msgstr "    $browser->click('.login-page .container div > button');\n"

# File: docs/8.x/dusk.md, line: 439
# File: docs/master/dusk.md, line: 439
#. type: Plain text
msgid "Dusk selectors allow you to focus on writing effective tests rather than remembering CSS selectors. To define a selector, add a `dusk` attribute to your HTML element. Then, when interacting with a Dusk browser, prefix the selector with `@` to manipulate the attached element within your test:"
msgstr "使用 Dusk 選擇器，就能讓開發人員更專注於撰寫有效的測試，而不是記住 CSS 選擇器。若要定義選擇請，請在 HTML 元素內加上 `dusk` 屬性。接著，當與 Dusk 瀏覽器互動時，請在該選擇器前方加上 `@` 來在測試內操作該元素："

# File: docs/8.x/dusk.md, line: 443
# File: docs/master/dusk.md, line: 443
#. type: Plain text
#, no-wrap
msgid "    <button dusk=\"login-button\">Login</button>\n"
msgstr "    <button dusk=\"login-button\">Login</button>\n"

# File: docs/8.x/dusk.md, line: 447
# File: docs/master/dusk.md, line: 447
#. type: Plain text
#, no-wrap
msgid "    $browser->click('@login-button');\n"
msgstr "    $browser->click('@login-button');\n"

# File: docs/8.x/dusk.md, line: 449
# File: docs/master/dusk.md, line: 449
#. type: Plain text
#, no-wrap
msgid "<a name=\"text-values-and-attributes\"></a>\n"
msgstr "<a name=\"text-values-and-attributes\"></a>\n"

# File: docs/8.x/dusk.md, line: 449
# File: docs/master/dusk.md, line: 449
#. type: Title ###
#, no-wrap
msgid "Text, Values, & Attributes"
msgstr "文字、值、與屬性"

# File: docs/8.x/dusk.md, line: 452
# File: docs/master/dusk.md, line: 452
#. type: Plain text
#, no-wrap
msgid "<a name=\"retrieving-setting-values\"></a>\n"
msgstr "<a name=\"retrieving-setting-values\"></a>\n"

# File: docs/8.x/dusk.md, line: 452
# File: docs/master/dusk.md, line: 452
#. type: Title ####
#, no-wrap
msgid "Retrieving & Setting Values"
msgstr "取得與設定值"

# File: docs/8.x/dusk.md, line: 455
# File: docs/master/dusk.md, line: 455
#. type: Plain text
msgid "Dusk provides several methods for interacting with the current value, display text, and attributes of elements on the page. For example, to get the \"value\" of an element that matches a given CSS or Dusk selector, use the `value` method:"
msgstr "Dusk 內提供了數種可與目前頁面上元素的值、顯示文字、與屬性互動的方法。舉例來說，若要在某個符合給定 CSS 或 Dusk 選擇器的元素上取得該元素的「值 (Value)」，可使用 `value` 方法："

# File: docs/8.x/dusk.md, line: 458
# File: docs/master/dusk.md, line: 458
#. type: Plain text
#, no-wrap
msgid "    // Retrieve the value...\n"
"    $value = $browser->value('selector');\n"
msgstr "    // 取得值…\n"
"    $value = $browser->value('selector');\n"

# File: docs/8.x/dusk.md, line: 461
# File: docs/master/dusk.md, line: 461
#. type: Plain text
#, no-wrap
msgid "    // Set the value...\n"
"    $browser->value('selector', 'value');\n"
msgstr "    // 設定值…\n"
"    $browser->value('selector', 'value');\n"

# File: docs/8.x/dusk.md, line: 463
# File: docs/master/dusk.md, line: 463
#. type: Plain text
msgid "You may use the `inputValue` method to get the \"value\" of an input element that has a given field name:"
msgstr "可以使用 `inputValue` 方法來取得某個給定欄位名稱之 input 元素的「值 (Value)」："

# File: docs/8.x/dusk.md, line: 465
# File: docs/master/dusk.md, line: 465
#. type: Plain text
#, no-wrap
msgid "    $value = $browser->inputValue('field');\n"
msgstr "    $value = $browser->inputValue('field');\n"

# File: docs/8.x/dusk.md, line: 467
# File: docs/master/dusk.md, line: 467
#. type: Plain text
#, no-wrap
msgid "<a name=\"retrieving-text\"></a>\n"
msgstr "<a name=\"retrieving-text\"></a>\n"

# File: docs/8.x/dusk.md, line: 467
# File: docs/master/dusk.md, line: 467
#. type: Title ####
#, no-wrap
msgid "Retrieving Text"
msgstr "取得文字"

# File: docs/8.x/dusk.md, line: 470
# File: docs/master/dusk.md, line: 470
#. type: Plain text
msgid "The `text` method may be used to retrieve the display text of an element that matches the given selector:"
msgstr "可使用 `text` 方法來取得符合給定選擇器之元素的顯示文字："

# File: docs/8.x/dusk.md, line: 472
# File: docs/master/dusk.md, line: 472
#. type: Plain text
#, no-wrap
msgid "    $text = $browser->text('selector');\n"
msgstr "    $text = $browser->text('selector');\n"

# File: docs/8.x/dusk.md, line: 474
# File: docs/master/dusk.md, line: 474
#. type: Plain text
#, no-wrap
msgid "<a name=\"retrieving-attributes\"></a>\n"
msgstr "<a name=\"retrieving-attributes\"></a>\n"

# File: docs/8.x/dusk.md, line: 474
# File: docs/master/dusk.md, line: 474
#. type: Title ####
#, no-wrap
msgid "Retrieving Attributes"
msgstr "取得屬性"

# File: docs/8.x/dusk.md, line: 477
# File: docs/master/dusk.md, line: 477
#. type: Plain text
msgid "Finally, the `attribute` method may be used to retrieve the value of an attribute of an element matching the given selector:"
msgstr "最後，可使用 `attribute` 方法來取得符合給定選擇器之元素的屬性值："

# File: docs/8.x/dusk.md, line: 479
# File: docs/master/dusk.md, line: 479
#. type: Plain text
#, no-wrap
msgid "    $attribute = $browser->attribute('selector', 'value');\n"
msgstr "    $attribute = $browser->attribute('selector', 'value');\n"

# File: docs/8.x/dusk.md, line: 481
# File: docs/master/dusk.md, line: 481
#. type: Plain text
#, no-wrap
msgid "<a name=\"interacting-with-forms\"></a>\n"
msgstr "<a name=\"interacting-with-forms\"></a>\n"

# File: docs/8.x/dusk.md, line: 481
# File: docs/master/dusk.md, line: 481
#. type: Title ###
#, no-wrap
msgid "Interacting With Forms"
msgstr "與表單互動"

# File: docs/8.x/dusk.md, line: 484
# File: docs/master/dusk.md, line: 484
#. type: Plain text
#, no-wrap
msgid "<a name=\"typing-values\"></a>\n"
msgstr "<a name=\"typing-values\"></a>\n"

# File: docs/8.x/dusk.md, line: 484
# File: docs/master/dusk.md, line: 484
#. type: Title ####
#, no-wrap
msgid "Typing Values"
msgstr "鍵入值"

# File: docs/8.x/dusk.md, line: 487
# File: docs/master/dusk.md, line: 487
#. type: Plain text
msgid "Dusk provides a variety of methods for interacting with forms and input elements. First, let's take a look at an example of typing text into an input field:"
msgstr "Dusk 提供了多種與表單以及 Input 元素互動的方法。首先，來看看一個在 Input 欄位內鍵入文字的例子："

# File: docs/8.x/dusk.md, line: 489
# File: docs/master/dusk.md, line: 489
#. type: Plain text
#, no-wrap
msgid "    $browser->type('email', 'taylor@laravel.com');\n"
msgstr "    $browser->type('email', 'taylor@laravel.com');\n"

# File: docs/8.x/dusk.md, line: 491
# File: docs/master/dusk.md, line: 491
#. type: Plain text
msgid "Note that, although the method accepts one if necessary, we are not required to pass a CSS selector into the `type` method. If a CSS selector is not provided, Dusk will search for an `input` or `textarea` field with the given `name` attribute."
msgstr "請注意這裡，雖然可將 CSS 選擇器傳入 `type` 方法，但並不需特別傳入。若未提供 CSS 選擇器，則 Dusk 會搜尋符合給定 `name` 屬性的 `input` 或 `textarea` 欄位。"

# File: docs/8.x/dusk.md, line: 493
# File: docs/master/dusk.md, line: 493
#. type: Plain text
msgid "To append text to a field without clearing its content, you may use the `append` method:"
msgstr "若要在不將其原本內容清除的情況下將文字附加在最後面，可以使用 `append` 方法："

# File: docs/8.x/dusk.md, line: 496
# File: docs/master/dusk.md, line: 496
#. type: Plain text
#, no-wrap
msgid "    $browser->type('tags', 'foo')\n"
"            ->append('tags', ', bar, baz');\n"
msgstr "    $browser->type('tags', 'foo')\n"
"            ->append('tags', ', bar, baz');\n"

# File: docs/8.x/dusk.md, line: 498
# File: docs/master/dusk.md, line: 498
#. type: Plain text
msgid "You may clear the value of an input using the `clear` method:"
msgstr "可以使用 `clear` 方法來清除某個 Input 的值："

# File: docs/8.x/dusk.md, line: 500
# File: docs/master/dusk.md, line: 500
#. type: Plain text
#, no-wrap
msgid "    $browser->clear('email');\n"
msgstr "    $browser->clear('email');\n"

# File: docs/8.x/dusk.md, line: 502
# File: docs/master/dusk.md, line: 502
#. type: Plain text
msgid "You can instruct Dusk to type slowly using the `typeSlowly` method. By default, Dusk will pause for 100 milliseconds between key presses. To customize the amount of time between key presses, you may pass the appropriate number of milliseconds as the third argument to the method:"
msgstr "可以使用 `typeSlowly` 方法來讓 Dusk 輸入得慢一點。預設情況下，Dusk 會在每個按鍵間暫停 100 毫秒。若要自定按鍵按下間的時間，可將適當的毫秒數作為第三個引數傳給該方法："

# File: docs/8.x/dusk.md, line: 504
# File: docs/master/dusk.md, line: 504
#. type: Plain text
#, no-wrap
msgid "    $browser->typeSlowly('mobile', '+1 (202) 555-5555');\n"
msgstr "    $browser->typeSlowly('mobile', '+1 (202) 555-5555');\n"

# File: docs/8.x/dusk.md, line: 506
# File: docs/master/dusk.md, line: 506
#. type: Plain text
#, no-wrap
msgid "    $browser->typeSlowly('mobile', '+1 (202) 555-5555', 300);\n"
msgstr "    $browser->typeSlowly('mobile', '+1 (202) 555-5555', 300);\n"

# File: docs/8.x/dusk.md, line: 508
# File: docs/master/dusk.md, line: 508
#. type: Plain text
msgid "You may use the `appendSlowly` method to append text slowly:"
msgstr "可以使用 `appendSlowly` 方法來慢慢地將文字附加到最後："

# File: docs/8.x/dusk.md, line: 511
# File: docs/master/dusk.md, line: 511
#. type: Plain text
#, no-wrap
msgid "    $browser->type('tags', 'foo')\n"
"            ->appendSlowly('tags', ', bar, baz');\n"
msgstr "    $browser->type('tags', 'foo')\n"
"            ->appendSlowly('tags', ', bar, baz');\n"

# File: docs/8.x/dusk.md, line: 513
# File: docs/master/dusk.md, line: 513
#. type: Plain text
#, no-wrap
msgid "<a name=\"dropdowns\"></a>\n"
msgstr "<a name=\"dropdowns\"></a>\n"

# File: docs/8.x/dusk.md, line: 513
# File: docs/master/dusk.md, line: 513
#. type: Title ####
#, no-wrap
msgid "Dropdowns"
msgstr "下拉選單"

# File: docs/8.x/dusk.md, line: 516
# File: docs/master/dusk.md, line: 516
#. type: Plain text
msgid "To select a value available on a `select` element, you may use the `select` method. Like the `type` method, the `select` method does not require a full CSS selector. When passing a value to the `select` method, you should pass the underlying option value instead of the display text:"
msgstr "若要在 `select` 元素上選擇可用的值，可使用 `select` 方法。與 `type` 方法類似，`select` 方法並不要求要提供完整的 CSS 選擇器。將值傳給 `select` 方法時，應傳入底層的選項值而非顯示的文字："

# File: docs/8.x/dusk.md, line: 518
# File: docs/master/dusk.md, line: 518
#. type: Plain text
#, no-wrap
msgid "    $browser->select('size', 'Large');\n"
msgstr "    $browser->select('size', 'Large');\n"

# File: docs/8.x/dusk.md, line: 520
# File: docs/master/dusk.md, line: 520
#. type: Plain text
msgid "You may select a random option by omitting the second argument:"
msgstr "也可以通過省略第二個引數來隨機選擇選項："

# File: docs/8.x/dusk.md, line: 522
# File: docs/master/dusk.md, line: 522
#. type: Plain text
#, no-wrap
msgid "    $browser->select('size');\n"
msgstr "    $browser->select('size');\n"

# File: docs/8.x/dusk.md, line: 524
# File: docs/master/dusk.md, line: 524
#. type: Plain text
msgid "By providing an array as the second argument to the `select` method, you can instruct the method to select multiple options:"
msgstr "在 `select` 方法的第二個引數中使用陣列，就可以選擇多個選項："

# File: docs/8.x/dusk.md, line: 526
# File: docs/master/dusk.md, line: 526
#. type: Plain text
#, no-wrap
msgid "    $browser->select('categories', ['Art', 'Music']);\n"
msgstr "    $browser->select('categories', ['Art', 'Music']);\n"

# File: docs/8.x/dusk.md, line: 528
# File: docs/master/dusk.md, line: 528
#. type: Plain text
#, no-wrap
msgid "<a name=\"checkboxes\"></a>\n"
msgstr "<a name=\"checkboxes\"></a>\n"

# File: docs/8.x/dusk.md, line: 528
# File: docs/master/dusk.md, line: 528
#. type: Title ####
#, no-wrap
msgid "Checkboxes"
msgstr "多選框"

# File: docs/8.x/dusk.md, line: 531
# File: docs/master/dusk.md, line: 531
#. type: Plain text
msgid "To \"check\" a checkbox input, you may use the `check` method. Like many other input related methods, a full CSS selector is not required. If a CSS selector match can't be found, Dusk will search for a checkbox with a matching `name` attribute:"
msgstr "若要「勾選」多選框，可使用 `check` 方法。與其他 Input 有關的方法類似，並不需要傳入完整的 CSS 選擇器。若找不到對應的 CSS 選擇器，Dusk 會自動搜尋符合 `name` 屬性的多選框："

# File: docs/8.x/dusk.md, line: 533
# File: docs/master/dusk.md, line: 533
#. type: Plain text
#, no-wrap
msgid "    $browser->check('terms');\n"
msgstr "    $browser->check('terms');\n"

# File: docs/8.x/dusk.md, line: 535
# File: docs/master/dusk.md, line: 535
#. type: Plain text
msgid "The `uncheck` method may be used to \"uncheck\" a checkbox input:"
msgstr "可使用 `uncheck` 方法來「取消勾選」多選框："

# File: docs/8.x/dusk.md, line: 537
# File: docs/master/dusk.md, line: 537
#. type: Plain text
#, no-wrap
msgid "    $browser->uncheck('terms');\n"
msgstr "    $browser->uncheck('terms');\n"

# File: docs/8.x/dusk.md, line: 539
# File: docs/master/dusk.md, line: 539
#. type: Plain text
#, no-wrap
msgid "<a name=\"radio-buttons\"></a>\n"
msgstr "<a name=\"radio-buttons\"></a>\n"

# File: docs/8.x/dusk.md, line: 539
# File: docs/master/dusk.md, line: 539
#. type: Title ####
#, no-wrap
msgid "Radio Buttons"
msgstr "單選框"

# File: docs/8.x/dusk.md, line: 542
# File: docs/master/dusk.md, line: 542
#. type: Plain text
msgid "To \"select\" a `radio` input option, you may use the `radio` method. Like many other input related methods, a full CSS selector is not required. If a CSS selector match can't be found, Dusk will search for a `radio` input with matching `name` and `value` attributes:"
msgstr "若要「勾選」`radio` 單選框，可使用 `check` 方法。與其他 Input 有關的方法類似，並不需要傳入完整的 CSS 選擇器。若找不到對應的 CSS 選擇器，Dusk 會自動搜尋符合 `name` 屬性的 `radio` 單選框："

# File: docs/8.x/dusk.md, line: 544
# File: docs/master/dusk.md, line: 544
#. type: Plain text
#, no-wrap
msgid "    $browser->radio('size', 'large');\n"
msgstr "    $browser->radio('size', 'large');\n"

# File: docs/8.x/dusk.md, line: 546
# File: docs/master/dusk.md, line: 546
#. type: Plain text
#, no-wrap
msgid "<a name=\"attaching-files\"></a>\n"
msgstr "<a name=\"attaching-files\"></a>\n"

# File: docs/8.x/dusk.md, line: 546
# File: docs/master/dusk.md, line: 546
#. type: Title ###
#, no-wrap
msgid "Attaching Files"
msgstr "附加檔案"

# File: docs/8.x/dusk.md, line: 549
# File: docs/master/dusk.md, line: 549
#. type: Plain text
msgid "The `attach` method may be used to attach a file to a `file` input element. Like many other input related methods, a full CSS selector is not required. If a CSS selector match can't be found, Dusk will search for a `file` input with a matching `name` attribute:"
msgstr "可使用 `attach` 方法來將檔案附加到 `file` Input 元素上。與其他 Input 有關的方法類似，並不需要傳入完整的 CSS 選擇器。若找不到對應的 CSS 選擇器，Dusk 會自動搜尋符合 `name` 屬性的 `file` Input："

# File: docs/8.x/dusk.md, line: 551
# File: docs/master/dusk.md, line: 551
#. type: Plain text
#, no-wrap
msgid "    $browser->attach('photo', __DIR__.'/photos/mountains.png');\n"
msgstr "    $browser->attach('photo', __DIR__.'/photos/mountains.png');\n"

# File: docs/8.x/dusk.md, line: 553
# File: docs/master/dusk.md, line: 553
#. type: Plain text
#, no-wrap
msgid "> {note} The attach function requires the `Zip` PHP extension to be installed and enabled on your server.\n"
msgstr "> {note} 要使用 attach 函式，伺服器上必須有安裝 `Zip` PHP 擴充套件並已啟用。\n"

# File: docs/8.x/dusk.md, line: 555
# File: docs/master/dusk.md, line: 555
#. type: Plain text
#, no-wrap
msgid "<a name=\"pressing-buttons\"></a>\n"
msgstr "<a name=\"pressing-buttons\"></a>\n"

# File: docs/8.x/dusk.md, line: 555
# File: docs/master/dusk.md, line: 555
#. type: Title ###
#, no-wrap
msgid "Pressing Buttons"
msgstr "按下按鈕"

# File: docs/8.x/dusk.md, line: 558
# File: docs/master/dusk.md, line: 558
#. type: Plain text
msgid "The `press` method may be used to click a button element on the page. The first argument given to the `press` method may be either the display text of the button or a CSS / Dusk selector:"
msgstr "`press` 方法可用來點擊頁面上的按鈕元素。傳給 `press` 方法的第一個引數可以是按鈕的顯示文字，或是 CSS / Dusk 選擇器："

# File: docs/8.x/dusk.md, line: 560
# File: docs/master/dusk.md, line: 560
#. type: Plain text
#, no-wrap
msgid "    $browser->press('Login');\n"
msgstr "    $browser->press('Login');\n"

# File: docs/8.x/dusk.md, line: 562
# File: docs/master/dusk.md, line: 562
#. type: Plain text
msgid "When submitting forms, many application's disable the form's submission button after it is pressed and then re-enable the button when the form submission's HTTP request is complete. To press a button and wait for the button to be re-enabled, you may use the `pressAndWaitFor` method:"
msgstr "在送出表單時，許多網站會在按鈕按下的時候禁用表單的送出按鈕，並在表單送出的 HTTP 請求完成後重新啟用該按鈕。若要按下按鈕並等待該按鈕重新啟用，可使用 `pressAndWaitFor` 方法："

# File: docs/8.x/dusk.md, line: 565
# File: docs/master/dusk.md, line: 565
#. type: Plain text
#, no-wrap
msgid "    // Press the button and wait a maximum of 5 seconds for it to be enabled...\n"
"    $browser->pressAndWaitFor('Save');\n"
msgstr "    // 按下按鈕並等待最多 5 秒讓該按鈕重新啟用……\n"
"    $browser->pressAndWaitFor('Save');\n"

# File: docs/8.x/dusk.md, line: 568
# File: docs/master/dusk.md, line: 568
#. type: Plain text
#, no-wrap
msgid "    // Press the button and wait a maximum of 1 second for it to be enabled...\n"
"    $browser->pressAndWaitFor('Save', 1);\n"
msgstr "    // 按下按鈕並等待最多 1 秒讓該按鈕重新啟用……\n"
"    $browser->pressAndWaitFor('Save', 1);\n"

# File: docs/8.x/dusk.md, line: 570
# File: docs/master/dusk.md, line: 570
#. type: Plain text
#, no-wrap
msgid "<a name=\"clicking-links\"></a>\n"
msgstr "<a name=\"clicking-links\"></a>\n"

# File: docs/8.x/dusk.md, line: 570
# File: docs/master/dusk.md, line: 570
#. type: Title ###
#, no-wrap
msgid "Clicking Links"
msgstr "點擊連結"

# File: docs/8.x/dusk.md, line: 573
# File: docs/master/dusk.md, line: 573
#. type: Plain text
msgid "To click a link, you may use the `clickLink` method on the browser instance. The `clickLink` method will click the link that has the given display text:"
msgstr "若要點擊連結，可使用瀏覽器實體上的 `clickLink` 方法。`clickLink` 方法會點擊有給定顯示文字的連結："

# File: docs/8.x/dusk.md, line: 575
# File: docs/master/dusk.md, line: 575
#. type: Plain text
#, no-wrap
msgid "    $browser->clickLink($linkText);\n"
msgstr "    $browser->clickLink($linkText);\n"

# File: docs/8.x/dusk.md, line: 577
# File: docs/master/dusk.md, line: 577
#. type: Plain text
msgid "You may use the `seeLink` method to determine if a link with the given display text is visible on the page:"
msgstr "可使用 `seeLink` 方法來判斷給定的顯示文字是否在頁面上可見："

# File: docs/8.x/dusk.md, line: 581
# File: docs/master/dusk.md, line: 581
#. type: Plain text
#, no-wrap
msgid "    if ($browser->seeLink($linkText)) {\n"
"        // ...\n"
"    }\n"
msgstr "    if ($browser->seeLink($linkText)) {\n"
"        // ...\n"
"    }\n"

# File: docs/8.x/dusk.md, line: 583
# File: docs/master/dusk.md, line: 583
#. type: Plain text
#, no-wrap
msgid "> {note} These methods interact with jQuery. If jQuery is not available on the page, Dusk will automatically inject it into the page so it is available for the test's duration.\n"
msgstr "> {note} 該方法需要與 jQuery 互動。若頁面上沒有 jQuery 可用，則 Dusk 會自動將 jQuery 插入到頁面上以在測試期間使用。\n"

# File: docs/8.x/dusk.md, line: 585
# File: docs/master/dusk.md, line: 585
#. type: Plain text
#, no-wrap
msgid "<a name=\"using-the-keyboard\"></a>\n"
msgstr "<a name=\"using-the-keyboard\"></a>\n"

# File: docs/8.x/dusk.md, line: 585
# File: docs/master/dusk.md, line: 585
#. type: Title ###
#, no-wrap
msgid "Using The Keyboard"
msgstr "使用鍵盤"

# File: docs/8.x/dusk.md, line: 588
# File: docs/master/dusk.md, line: 588
#. type: Plain text
msgid "The `keys` method allows you to provide more complex input sequences to a given element than normally allowed by the `type` method. For example, you may instruct Dusk to hold modifier keys while entering values. In this example, the `shift` key will be held while `taylor` is entered into the element matching the given selector. After `taylor` is typed, `swift` will be typed without any modifier keys:"
msgstr "比起使用一般的 `type` 方法，`keys` 方法提供了可對給定元素進行一系列更複雜輸入的能力。舉例來說，可以讓 Dusk 在輸入數值的時候按著某個輔助按鍵。在這個範例中，於符合給定選擇器的元素內輸入 `taylor` 文字時，會按著 `Shift` 鍵。輸入完 `taylor` 後，`swift` 會在不按下任何輔助按鍵的情況下輸入："

# File: docs/8.x/dusk.md, line: 590
# File: docs/master/dusk.md, line: 590
#. type: Plain text
#, no-wrap
msgid "    $browser->keys('selector', ['{shift}', 'taylor'], 'swift');\n"
msgstr "    $browser->keys('selector', ['{shift}', 'taylor'], 'swift');\n"

# File: docs/8.x/dusk.md, line: 592
# File: docs/master/dusk.md, line: 592
#. type: Plain text
msgid "Another valuable use case for the `keys` method is sending a \"keyboard shortcut\" combination to the primary CSS selector for your application:"
msgstr "`keys` 方法的另一個實用用途是給主要 CSS 選擇器傳送一組「鍵盤快捷鍵」："

# File: docs/8.x/dusk.md, line: 594
# File: docs/master/dusk.md, line: 594
#. type: Plain text
#, no-wrap
msgid "    $browser->keys('.app', ['{command}', 'j']);\n"
msgstr "    $browser->keys('.app', ['{command}', 'j']);\n"

# File: docs/8.x/dusk.md, line: 596
# File: docs/master/dusk.md, line: 596
#. type: Plain text
#, no-wrap
msgid "> {tip} All modifier keys such as `{command}` are wrapped in `{}` characters, and match the constants defined in the `Facebook\\WebDriver\\WebDriverKeys` class, which can be [found on GitHub](https://github.com/php-webdriver/php-webdriver/blob/master/lib/WebDriverKeys.php).\n"
msgstr "> {tip} 所有的輔助按鍵，如 `{command}` 都以 `{}` 字元來進行包裝，且符合 `Facebook\\WebDriver\\WebDriverKeys` 中所定義的常數值。可[在 GitHub 上找到](https://github.com/php-webdriver/php-webdriver/blob/master/lib/WebDriverKeys.php)這些常數值。\n"

# File: docs/8.x/dusk.md, line: 598
# File: docs/master/dusk.md, line: 598
#. type: Plain text
#, no-wrap
msgid "<a name=\"using-the-mouse\"></a>\n"
msgstr "<a name=\"using-the-mouse\"></a>\n"

# File: docs/8.x/dusk.md, line: 598
# File: docs/master/dusk.md, line: 598
#. type: Title ###
#, no-wrap
msgid "Using The Mouse"
msgstr "使用滑鼠"

# File: docs/8.x/dusk.md, line: 601
# File: docs/master/dusk.md, line: 601
#. type: Plain text
#, no-wrap
msgid "<a name=\"clicking-on-elements\"></a>\n"
msgstr "<a name=\"clicking-on-elements\"></a>\n"

# File: docs/8.x/dusk.md, line: 601
# File: docs/master/dusk.md, line: 601
#. type: Title ####
#, no-wrap
msgid "Clicking On Elements"
msgstr "點擊元素"

# File: docs/8.x/dusk.md, line: 604
# File: docs/master/dusk.md, line: 604
#. type: Plain text
msgid "The `click` method may be used to click on an element matching the given CSS or Dusk selector:"
msgstr "可使用 `click` 方法來點擊符合給定 CSS 或 Dusk 選擇器的元素："

# File: docs/8.x/dusk.md, line: 606
# File: docs/master/dusk.md, line: 606
#. type: Plain text
#, no-wrap
msgid "    $browser->click('.selector');\n"
msgstr "    $browser->click('.selector');\n"

# File: docs/8.x/dusk.md, line: 608
# File: docs/master/dusk.md, line: 608
#. type: Plain text
msgid "The `clickAtXPath` method may be used to click on an element matching the given XPath expression:"
msgstr "可使用 `clickAtXPath` 方法來點擊符合給定 XPath 運算式的元素："

# File: docs/8.x/dusk.md, line: 610
# File: docs/master/dusk.md, line: 610
#. type: Plain text
#, no-wrap
msgid "    $browser->clickAtXPath('//div[@class = \"selector\"]');\n"
msgstr "    $browser->clickAtXPath('//div[@class = \"selector\"]');\n"

# File: docs/8.x/dusk.md, line: 612
# File: docs/master/dusk.md, line: 612
#. type: Plain text
msgid "The `clickAtPoint` method may be used to click on the topmost element at a given pair of coordinates relative to the viewable area of the browser:"
msgstr "可使用 `clickAtPoint` 方法來點擊在相對於瀏覽器檢視區域上，符合給定座標點上最上層的元素："

# File: docs/8.x/dusk.md, line: 614
# File: docs/master/dusk.md, line: 614
#. type: Plain text
#, no-wrap
msgid "    $browser->clickAtPoint($x = 0, $y = 0);\n"
msgstr "    $browser->clickAtPoint($x = 0, $y = 0);\n"

# File: docs/8.x/dusk.md, line: 616
# File: docs/master/dusk.md, line: 616
#. type: Plain text
msgid "The `doubleClick` method may be used to simulate the double click of a mouse:"
msgstr "可使用 `doubleClick` 方法來模擬使用滑鼠點兩下："

# File: docs/8.x/dusk.md, line: 618
# File: docs/master/dusk.md, line: 618
#. type: Plain text
#, no-wrap
msgid "    $browser->doubleClick();\n"
msgstr "    $browser->doubleClick();\n"

# File: docs/8.x/dusk.md, line: 620
# File: docs/master/dusk.md, line: 620
#. type: Plain text
msgid "The `rightClick` method may be used to simulate the right click of a mouse:"
msgstr "可使用 `rightClick` 方法來模擬按滑鼠右鍵："

# File: docs/8.x/dusk.md, line: 622
# File: docs/master/dusk.md, line: 622
#. type: Plain text
#, no-wrap
msgid "    $browser->rightClick();\n"
msgstr "    $browser->rightClick();\n"

# File: docs/8.x/dusk.md, line: 624
# File: docs/master/dusk.md, line: 624
#. type: Plain text
#, no-wrap
msgid "    $browser->rightClick('.selector');\n"
msgstr "    $browser->rightClick('.selector');\n"

# File: docs/8.x/dusk.md, line: 626
# File: docs/master/dusk.md, line: 626
#. type: Plain text
msgid "The `clickAndHold` method may be used to simulate a mouse button being clicked and held down. A subsequent call to the `releaseMouse` method will undo this behavior and release the mouse button:"
msgstr "可使用 `clickAndHold` 方法來模擬按下滑鼠按鈕並保持按下。若接著呼叫 `releaseMouse` 方法，則會取消這個行為並放開滑鼠按鈕："

# File: docs/8.x/dusk.md, line: 630
# File: docs/master/dusk.md, line: 630
#. type: Plain text
#, no-wrap
msgid "    $browser->clickAndHold()\n"
"            ->pause(1000)\n"
"            ->releaseMouse();\n"
msgstr "    $browser->clickAndHold()\n"
"            ->pause(1000)\n"
"            ->releaseMouse();\n"

# File: docs/8.x/dusk.md, line: 632
# File: docs/master/dusk.md, line: 632
#. type: Plain text
#, no-wrap
msgid "<a name=\"mouseover\"></a>\n"
msgstr "<a name=\"mouseover\"></a>\n"

# File: docs/8.x/dusk.md, line: 632
# File: docs/master/dusk.md, line: 632
#. type: Title ####
#, no-wrap
msgid "Mouseover"
msgstr "滑鼠移至上方"

# File: docs/8.x/dusk.md, line: 635
# File: docs/master/dusk.md, line: 635
#. type: Plain text
msgid "The `mouseover` method may be used when you need to move the mouse over an element matching the given CSS or Dusk selector:"
msgstr "當需要將滑鼠移至符合給定 CSS 或 Dusk 選擇器的元素上時，可使用 `mouseover` 方法："

# File: docs/8.x/dusk.md, line: 637
# File: docs/master/dusk.md, line: 637
#. type: Plain text
#, no-wrap
msgid "    $browser->mouseover('.selector');\n"
msgstr "    $browser->mouseover('.selector');\n"

# File: docs/8.x/dusk.md, line: 639
# File: docs/master/dusk.md, line: 639
#. type: Plain text
#, no-wrap
msgid "<a name=\"drag-drop\"></a>\n"
msgstr "<a name=\"drag-drop\"></a>\n"

# File: docs/8.x/dusk.md, line: 639
# File: docs/master/dusk.md, line: 639
#. type: Title ####
#, no-wrap
msgid "Drag & Drop"
msgstr "拖放"

# File: docs/8.x/dusk.md, line: 642
# File: docs/master/dusk.md, line: 642
#. type: Plain text
msgid "The `drag` method may be used to drag an element matching the given selector to another element:"
msgstr "可使用 `drag` 方法來將符合給定選擇器元素拖曳至另一個元素上："

# File: docs/8.x/dusk.md, line: 644
# File: docs/master/dusk.md, line: 644
#. type: Plain text
#, no-wrap
msgid "    $browser->drag('.from-selector', '.to-selector');\n"
msgstr "    $browser->drag('.from-selector', '.to-selector');\n"

# File: docs/8.x/dusk.md, line: 646
# File: docs/master/dusk.md, line: 646
#. type: Plain text
msgid "Or, you may drag an element in a single direction:"
msgstr "或者，也可以將某個元素在單一方向上拖曳："

# File: docs/8.x/dusk.md, line: 651
# File: docs/master/dusk.md, line: 651
#. type: Plain text
#, no-wrap
msgid "    $browser->dragLeft('.selector', $pixels = 10);\n"
"    $browser->dragRight('.selector', $pixels = 10);\n"
"    $browser->dragUp('.selector', $pixels = 10);\n"
"    $browser->dragDown('.selector', $pixels = 10);\n"
msgstr "    $browser->dragLeft('.selector', $pixels = 10);\n"
"    $browser->dragRight('.selector', $pixels = 10);\n"
"    $browser->dragUp('.selector', $pixels = 10);\n"
"    $browser->dragDown('.selector', $pixels = 10);\n"

# File: docs/8.x/dusk.md, line: 653
# File: docs/master/dusk.md, line: 653
#. type: Plain text
msgid "Finally, you may drag an element by a given offset:"
msgstr "最後，可以依照給定偏移值來拖曳元素："

# File: docs/8.x/dusk.md, line: 655
# File: docs/master/dusk.md, line: 655
#. type: Plain text
#, no-wrap
msgid "    $browser->dragOffset('.selector', $x = 10, $y = 10);\n"
msgstr "    $browser->dragOffset('.selector', $x = 10, $y = 10);\n"

# File: docs/8.x/dusk.md, line: 657
# File: docs/master/dusk.md, line: 657
#. type: Plain text
#, no-wrap
msgid "<a name=\"javascript-dialogs\"></a>\n"
msgstr "<a name=\"javascript-dialogs\"></a>\n"

# File: docs/8.x/dusk.md, line: 657
# File: docs/master/dusk.md, line: 657
#. type: Title ###
#, no-wrap
msgid "JavaScript Dialogs"
msgstr "JavaScript 對話方塊"

# File: docs/8.x/dusk.md, line: 660
# File: docs/master/dusk.md, line: 660
#. type: Plain text
msgid "Dusk provides various methods to interact with JavaScript Dialogs. For example, you may use the `waitForDialog` method to wait for a JavaScript dialog to appear. This method accepts an optional argument indicating how many seconds to wait for the dialog to appear:"
msgstr "Dusk 提供了多種與 JavaScript 對話方塊互動的方法。舉例來說，可以使用 `waitForDialog` 方法來等待 JavaScript 對話方塊出現。該方法可接收一個可選的引數來判斷要等幾秒讓該對話方塊顯示出來："

# File: docs/8.x/dusk.md, line: 662
# File: docs/master/dusk.md, line: 662
#. type: Plain text
#, no-wrap
msgid "    $browser->waitForDialog($seconds = null);\n"
msgstr "    $browser->waitForDialog($seconds = null);\n"

# File: docs/8.x/dusk.md, line: 664
# File: docs/master/dusk.md, line: 664
#. type: Plain text
msgid "The `assertDialogOpened` method may be used to assert that a dialog has been displayed and contains the given message:"
msgstr "可使用 `assertDialogOpened` 方法來判斷某個對話方塊是否已顯示，且包含給定的訊息："

# File: docs/8.x/dusk.md, line: 666
# File: docs/master/dusk.md, line: 666
#. type: Plain text
#, no-wrap
msgid "    $browser->assertDialogOpened('Dialog message');\n"
msgstr "    $browser->assertDialogOpened('Dialog message');\n"

# File: docs/8.x/dusk.md, line: 668
# File: docs/master/dusk.md, line: 668
#. type: Plain text
msgid "If the JavaScript dialog contains a prompt, you may use the `typeInDialog` method to type a value into the prompt:"
msgstr "若該 JavaScript 對話方塊包含輸入提示，可使用 `typeInDialog` 方法來在該提示中輸入數值："

# File: docs/8.x/dusk.md, line: 670
# File: docs/master/dusk.md, line: 670
#. type: Plain text
#, no-wrap
msgid "    $browser->typeInDialog('Hello World');\n"
msgstr "    $browser->typeInDialog('Hello World');\n"

# File: docs/8.x/dusk.md, line: 672
# File: docs/master/dusk.md, line: 672
#. type: Plain text
msgid "To close an open JavaScript dialog by clicking the \"OK\" button, you may invoke the `acceptDialog` method:"
msgstr "若要點擊「確定」按鈕來關閉開啟的 JavaScript 對話方塊，可以叫用 `acceptDialog` 方法："

# File: docs/8.x/dusk.md, line: 674
# File: docs/master/dusk.md, line: 674
#. type: Plain text
#, no-wrap
msgid "    $browser->acceptDialog();\n"
msgstr "    $browser->acceptDialog();\n"

# File: docs/8.x/dusk.md, line: 676
# File: docs/master/dusk.md, line: 676
#. type: Plain text
msgid "To close an open JavaScript dialog by clicking the \"Cancel\" button, you may invoke the `dismissDialog` method:"
msgstr "若要點擊「取消」按鈕來關閉開啟的 JavaScript 對話方塊，可以叫用 `dismissDialog` 方法："

# File: docs/8.x/dusk.md, line: 678
# File: docs/master/dusk.md, line: 678
#. type: Plain text
#, no-wrap
msgid "    $browser->dismissDialog();\n"
msgstr "    $browser->dismissDialog();\n"

# File: docs/8.x/dusk.md, line: 680
# File: docs/master/dusk.md, line: 680
#. type: Plain text
#, no-wrap
msgid "<a name=\"scoping-selectors\"></a>\n"
msgstr "<a name=\"scoping-selectors\"></a>\n"

# File: docs/8.x/dusk.md, line: 680
# File: docs/master/dusk.md, line: 680
#. type: Title ###
#, no-wrap
msgid "Scoping Selectors"
msgstr "區域性選擇器"

# File: docs/8.x/dusk.md, line: 683
# File: docs/master/dusk.md, line: 683
#. type: Plain text
msgid "Sometimes you may wish to perform several operations while scoping all of the operations within a given selector. For example, you may wish to assert that some text exists only within a table and then click a button within that table. You may use the `with` method to accomplish this. All operations performed within the closure given to the `with` method will be scoped to the original selector:"
msgstr "有的時候，我們可能會想把多個操作限制到某個特定選擇器裡面。舉例來說，我們在判斷某段文字是否有出現時，可能只想在某個表格內檢查，並在檢查完畢後接著在該表格內點擊某個按鈕。可以使用 `with` 方法來達成。在提供給 `with` 方法的閉包內所進行的操作都會被限制在某個選擇器之內："

# File: docs/8.x/dusk.md, line: 688
# File: docs/master/dusk.md, line: 688
#. type: Plain text
#, no-wrap
msgid "    $browser->with('.table', function ($table) {\n"
"        $table->assertSee('Hello World')\n"
"              ->clickLink('Delete');\n"
"    });\n"
msgstr "    $browser->with('.table', function ($table) {\n"
"        $table->assertSee('Hello World')\n"
"              ->clickLink('Delete');\n"
"    });\n"

# File: docs/8.x/dusk.md, line: 690
# File: docs/master/dusk.md, line: 690
#. type: Plain text
msgid "You may occasionally need to execute assertions outside of the current scope. You may use the `elsewhere` and `elsewhereWhenAvailable` methods to accomplish this:"
msgstr "某些時候，我們可能需要在目前的 Scope 外執行 Assertion。可以使用 `elsewhere` 與 `elsewhereWhenAvailable` 方法來進行："

# File: docs/8.x/dusk.md, line: 693
# File: docs/master/dusk.md, line: 693
#. type: Plain text
#, no-wrap
msgid "     $browser->with('.table', function ($table) {\n"
"        // Current scope is `body .table`...\n"
msgstr "     $browser->with('.table', function ($table) {\n"
"        // 目前的 Scope 為 `body .table`...\n"

# File: docs/8.x/dusk.md, line: 698
# File: docs/master/dusk.md, line: 698
#. type: Plain text
#, no-wrap
msgid "        $browser->elsewhere('.page-title', function ($title) {\n"
"            // Current scope is `body .page-title`...\n"
"            $title->assertSee('Hello World');\n"
"        });\n"
msgstr "        $browser->elsewhere('.page-title', function ($title) {\n"
"            // 目前的 Scope 為 `body .page-title`...\n"
"            $title->assertSee('Hello World');\n"
"        });\n"

# File: docs/8.x/dusk.md, line: 704
# File: docs/master/dusk.md, line: 704
#. type: Plain text
#, no-wrap
msgid "        $browser->elsewhereWhenAvailable('.page-title', function ($title) {\n"
"            // Current scope is `body .page-title`...\n"
"            $title->assertSee('Hello World');\n"
"        });\n"
"     });\n"
msgstr "        $browser->elsewhereWhenAvailable('.page-title', function ($title) {\n"
"            // 目前的 Scope 為 `body .page-title`...\n"
"            $title->assertSee('Hello World');\n"
"        });\n"
"     });\n"

# File: docs/8.x/dusk.md, line: 706
# File: docs/master/dusk.md, line: 706
#. type: Plain text
#, no-wrap
msgid "<a name=\"waiting-for-elements\"></a>\n"
msgstr "<a name=\"waiting-for-elements\"></a>\n"

# File: docs/8.x/dusk.md, line: 706
# File: docs/master/dusk.md, line: 706
#. type: Title ###
#, no-wrap
msgid "Waiting For Elements"
msgstr "等待元素"

# File: docs/8.x/dusk.md, line: 709
# File: docs/master/dusk.md, line: 709
#. type: Plain text
msgid "When testing applications that use JavaScript extensively, it often becomes necessary to \"wait\" for certain elements or data to be available before proceeding with a test. Dusk makes this a cinch. Using a variety of methods, you may wait for elements to become visible on the page or even wait until a given JavaScript expression evaluates to `true`."
msgstr "在測試使用了大量 JavaScript 的網站時，常常會需要「等待」特定元素或資料出現後才能繼續進行測試。在 Dusk 中可以輕鬆做到。只需要使用幾個方法，就可以等待元素顯示在頁面上，或是等待某個給定的 JavaScript 運算式取值變為 `true`。"

# File: docs/8.x/dusk.md, line: 711
# File: docs/master/dusk.md, line: 711
#. type: Plain text
#, no-wrap
msgid "<a name=\"waiting\"></a>\n"
msgstr "<a name=\"waiting\"></a>\n"

# File: docs/8.x/dusk.md, line: 711
# File: docs/master/dusk.md, line: 711
#. type: Title ####
#, no-wrap
msgid "Waiting"
msgstr "等待"

# File: docs/8.x/dusk.md, line: 714
# File: docs/master/dusk.md, line: 714
#. type: Plain text
msgid "If you just need to pause the test for a given number of milliseconds, use the `pause` method:"
msgstr "若只是需要將測試暫停幾毫秒，可使用 `pause` 方法："

# File: docs/8.x/dusk.md, line: 716
# File: docs/master/dusk.md, line: 716
#. type: Plain text
#, no-wrap
msgid "    $browser->pause(1000);\n"
msgstr "    $browser->pause(1000);\n"

# File: docs/8.x/dusk.md, line: 718
# File: docs/master/dusk.md, line: 718
#. type: Plain text
#, no-wrap
msgid "<a name=\"waiting-for-selectors\"></a>\n"
msgstr "<a name=\"waiting-for-selectors\"></a>\n"

# File: docs/8.x/dusk.md, line: 718
# File: docs/master/dusk.md, line: 718
#. type: Title ####
#, no-wrap
msgid "Waiting For Selectors"
msgstr "等待選擇器"

# File: docs/8.x/dusk.md, line: 721
# File: docs/master/dusk.md, line: 721
#. type: Plain text
msgid "The `waitFor` method may be used to pause the execution of the test until the element matching the given CSS or Dusk selector is displayed on the page. By default, this will pause the test for a maximum of five seconds before throwing an exception. If necessary, you may pass a custom timeout threshold as the second argument to the method:"
msgstr "`waitFor` 方法可用來暫停執行測試，並等到符合給定 CSS 或 Dusk 選擇器的元素顯示在頁面上。預設情況下，該方法會最多會暫停測試五秒，超過則會擲回例外。若有需要，可以將自訂的逾時閥值傳入為該方法的第二個引數："

# File: docs/8.x/dusk.md, line: 724
# File: docs/master/dusk.md, line: 724
#. type: Plain text
#, no-wrap
msgid "    // Wait a maximum of five seconds for the selector...\n"
"    $browser->waitFor('.selector');\n"
msgstr "    // 等待選擇器最多 5 秒...\n"
"    $browser->waitFor('.selector');\n"

# File: docs/8.x/dusk.md, line: 727
# File: docs/master/dusk.md, line: 727
#. type: Plain text
#, no-wrap
msgid "    // Wait a maximum of one second for the selector...\n"
"    $browser->waitFor('.selector', 1);\n"
msgstr "    // 等待選擇器最多 1 秒...\n"
"    $browser->waitFor('.selector', 1);\n"

# File: docs/8.x/dusk.md, line: 729
# File: docs/master/dusk.md, line: 729
#. type: Plain text
msgid "You may also wait until the element matching the given selector contains the given text:"
msgstr "也可以等待某個符合給定選擇器的元素出現給定文字："

# File: docs/8.x/dusk.md, line: 732
# File: docs/master/dusk.md, line: 732
#. type: Plain text
#, no-wrap
msgid "    // Wait a maximum of five seconds for the selector to contain the given text...\n"
"    $browser->waitForTextIn('.selector', 'Hello World');\n"
msgstr "    // 等待選擇器包含給定文字，最多等待 5 秒...\n"
"    $browser->waitForTextIn('.selector', 'Hello World');\n"

# File: docs/8.x/dusk.md, line: 735
# File: docs/master/dusk.md, line: 735
#. type: Plain text
#, no-wrap
msgid "    // Wait a maximum of one second for the selector to contain the given text...\n"
"    $browser->waitForTextIn('.selector', 'Hello World', 1);\n"
msgstr "    // 等待選擇器包含給定文字，最多等待 1 秒...\n"
"    $browser->waitForTextIn('.selector', 'Hello World', 1);\n"

# File: docs/8.x/dusk.md, line: 737
# File: docs/master/dusk.md, line: 737
#. type: Plain text
msgid "You may also wait until the element matching the given selector is missing from the page:"
msgstr "也可以等待某個符合給定選擇器的元素消失在頁面上："

# File: docs/8.x/dusk.md, line: 740
# File: docs/master/dusk.md, line: 740
#. type: Plain text
#, no-wrap
msgid "    // Wait a maximum of five seconds until the selector is missing...\n"
"    $browser->waitUntilMissing('.selector');\n"
msgstr "    // 等待選擇器小時，最多 5 秒...\n"
"    $browser->waitUntilMissing('.selector');\n"

# File: docs/8.x/dusk.md, line: 743
# File: docs/master/dusk.md, line: 743
#. type: Plain text
#, no-wrap
msgid "    // Wait a maximum of one second until the selector is missing...\n"
"    $browser->waitUntilMissing('.selector', 1);\n"
msgstr "    // 等待選擇器小時，最多 1 秒...\n"
"    $browser->waitUntilMissing('.selector', 1);\n"

# File: docs/8.x/dusk.md, line: 745
# File: docs/master/dusk.md, line: 745
#. type: Plain text
msgid "Or, you may wait until the element matching the given selector is enabled or disabled:"
msgstr "或者，也可以等待給定的選擇器為 Enabled 或 Disabled："

# File: docs/8.x/dusk.md, line: 748
# File: docs/master/dusk.md, line: 748
#. type: Plain text
#, no-wrap
msgid "    // Wait a maximum of five seconds until the selector is enabled...\n"
"    $browser->waitUntilEnabled('.selector');\n"
msgstr "    // 等待選擇器啟用，最多 5 秒...\n"
"    $browser->waitUntilEnabled('.selector');\n"

# File: docs/8.x/dusk.md, line: 751
# File: docs/master/dusk.md, line: 751
#. type: Plain text
#, no-wrap
msgid "    // Wait a maximum of one second until the selector is enabled...\n"
"    $browser->waitUntilEnabled('.selector', 1);\n"
msgstr "    // 等待選擇器啟用，最多 1 秒...\n"
"    $browser->waitUntilEnabled('.selector', 1);\n"

# File: docs/8.x/dusk.md, line: 754
# File: docs/master/dusk.md, line: 754
#. type: Plain text
#, no-wrap
msgid "    // Wait a maximum of five seconds until the selector is disabled...\n"
"    $browser->waitUntilDisabled('.selector');\n"
msgstr "    // 等待選擇器禁用，最多 5 秒...\n"
"    $browser->waitUntilDisabled('.selector');\n"

# File: docs/8.x/dusk.md, line: 757
# File: docs/master/dusk.md, line: 757
#. type: Plain text
#, no-wrap
msgid "    // Wait a maximum of one second until the selector is disabled...\n"
"    $browser->waitUntilDisabled('.selector', 1);\n"
msgstr "    // 等待選擇器禁用，最多 1 秒...\n"
"    $browser->waitUntilDisabled('.selector', 1);\n"

# File: docs/8.x/dusk.md, line: 759
# File: docs/master/dusk.md, line: 759
#. type: Plain text
#, no-wrap
msgid "<a name=\"scoping-selectors-when-available\"></a>\n"
msgstr "<a name=\"scoping-selectors-when-available\"></a>\n"

# File: docs/8.x/dusk.md, line: 759
# File: docs/master/dusk.md, line: 759
#. type: Title ####
#, no-wrap
msgid "Scoping Selectors When Available"
msgstr "可用時進入選擇器的 Scope"

# File: docs/8.x/dusk.md, line: 762
# File: docs/master/dusk.md, line: 762
#. type: Plain text
msgid "Occasionally, you may wish to wait for an element to appear that matches a given selector and then interact with the element. For example, you may wish to wait until a modal window is available and then press the \"OK\" button within the modal. The `whenAvailable` method may be used to accomplish this. All element operations performed within the given closure will be scoped to the original selector:"
msgstr "有時候我們可能會想等待符合給定選擇器的元素出現在頁面上後再接著與該元素互動。舉例來說，我們可能會想等待某個 Modal 視窗出現，然後在該 Modal 內點擊「OK」按鈕。可以使用 `whenAvailable` 方法來完成。在給定閉包內進行的所有元素操作都會被限制在原始選擇器的作用範圍內："

# File: docs/8.x/dusk.md, line: 767
# File: docs/master/dusk.md, line: 767
#. type: Plain text
#, no-wrap
msgid "    $browser->whenAvailable('.modal', function ($modal) {\n"
"        $modal->assertSee('Hello World')\n"
"              ->press('OK');\n"
"    });\n"
msgstr "    $browser->whenAvailable('.modal', function ($modal) {\n"
"        $modal->assertSee('Hello World')\n"
"              ->press('OK');\n"
"    });\n"

# File: docs/8.x/dusk.md, line: 769
# File: docs/master/dusk.md, line: 769
#. type: Plain text
#, no-wrap
msgid "<a name=\"waiting-for-text\"></a>\n"
msgstr "<a name=\"waiting-for-text\"></a>\n"

# File: docs/8.x/dusk.md, line: 769
# File: docs/master/dusk.md, line: 769
#. type: Title ####
#, no-wrap
msgid "Waiting For Text"
msgstr "等待文字"

# File: docs/8.x/dusk.md, line: 772
# File: docs/master/dusk.md, line: 772
#. type: Plain text
msgid "The `waitForText` method may be used to wait until the given text is displayed on the page:"
msgstr "可使用 `waitForText` 方法來等待給定文字顯示在頁面上："

# File: docs/8.x/dusk.md, line: 775
# File: docs/master/dusk.md, line: 775
#. type: Plain text
#, no-wrap
msgid "    // Wait a maximum of five seconds for the text...\n"
"    $browser->waitForText('Hello World');\n"
msgstr "    // 等待文字最多 5 秒...\n"
"    $browser->waitForText('Hello World');\n"

# File: docs/8.x/dusk.md, line: 778
# File: docs/master/dusk.md, line: 778
#. type: Plain text
#, no-wrap
msgid "    // Wait a maximum of one second for the text...\n"
"    $browser->waitForText('Hello World', 1);\n"
msgstr "    // 等待文字最多 1 秒...\n"
"    $browser->waitForText('Hello World', 1);\n"

# File: docs/8.x/dusk.md, line: 780
# File: docs/master/dusk.md, line: 780
#. type: Plain text
msgid "You may use the `waitUntilMissingText` method to wait until the displayed text has been removed from the page:"
msgstr "可以使用 `waitUntilMissingText` 方法來等待某個正在顯示的文字從頁面上移除："

# File: docs/8.x/dusk.md, line: 783
# File: docs/master/dusk.md, line: 783
#. type: Plain text
#, no-wrap
msgid "    // Wait a maximum of five seconds for the text to be removed...\n"
"    $browser->waitUntilMissingText('Hello World');\n"
msgstr "    // 等待文字移除最多 5 秒...\n"
"    $browser->waitUntilMissingText('Hello World');\n"

# File: docs/8.x/dusk.md, line: 786
# File: docs/master/dusk.md, line: 786
#. type: Plain text
#, no-wrap
msgid "    // Wait a maximum of one second for the text to be removed...\n"
"    $browser->waitUntilMissingText('Hello World', 1);\n"
msgstr "    // 等待文字移除最多 1 秒...\n"
"    $browser->waitUntilMissingText('Hello World', 1);\n"

# File: docs/8.x/dusk.md, line: 788
# File: docs/master/dusk.md, line: 788
#. type: Plain text
#, no-wrap
msgid "<a name=\"waiting-for-links\"></a>\n"
msgstr "<a name=\"waiting-for-links\"></a>\n"

# File: docs/8.x/dusk.md, line: 788
# File: docs/master/dusk.md, line: 788
#. type: Title ####
#, no-wrap
msgid "Waiting For Links"
msgstr "等待連結"

# File: docs/8.x/dusk.md, line: 791
# File: docs/master/dusk.md, line: 791
#. type: Plain text
msgid "The `waitForLink` method may be used to wait until the given link text is displayed on the page:"
msgstr "可使用 `waitForLink` 方法來等待給定連結文字顯示在頁面上："

# File: docs/8.x/dusk.md, line: 794
# File: docs/master/dusk.md, line: 794
#. type: Plain text
#, no-wrap
msgid "    // Wait a maximum of five seconds for the link...\n"
"    $browser->waitForLink('Create');\n"
msgstr "    // 等待連結最多 5 秒...\n"
"    $browser->waitForLink('Create');\n"

# File: docs/8.x/dusk.md, line: 797
# File: docs/master/dusk.md, line: 797
#. type: Plain text
#, no-wrap
msgid "    // Wait a maximum of one second for the link...\n"
"    $browser->waitForLink('Create', 1);\n"
msgstr "    // 等待連結最多 1 秒...\n"
"    $browser->waitForLink('Create', 1);\n"

# File: docs/8.x/dusk.md, line: 799
# File: docs/master/dusk.md, line: 799
#. type: Plain text
#, no-wrap
msgid "<a name=\"waiting-on-the-page-location\"></a>\n"
msgstr "<a name=\"waiting-on-the-page-location\"></a>\n"

# File: docs/8.x/dusk.md, line: 799
# File: docs/master/dusk.md, line: 799
#. type: Title ####
#, no-wrap
msgid "Waiting On The Page Location"
msgstr "等待網頁位置"

# File: docs/8.x/dusk.md, line: 802
# File: docs/master/dusk.md, line: 802
#. type: Plain text
#, no-wrap
msgid "When making a path assertion such as `$browser->assertPathIs('/home')`, the assertion can fail if `window.location.pathname` is being updated asynchronously. You may use the `waitForLocation` method to wait for the location to be a given value:\n"
msgstr "在進行如 `$browser->assertPathIs('/home')` 這種路徑 Assertion 時，如果 `window.location.pathname` 是非同步更新的，則該 Assertion 可能會失敗。可以使用 `waitForLocation` 方法來等待路徑為給定的值：\n"

# File: docs/8.x/dusk.md, line: 804
# File: docs/master/dusk.md, line: 804
#. type: Plain text
#, no-wrap
msgid "    $browser->waitForLocation('/secret');\n"
msgstr "    $browser->waitForLocation('/secret');\n"

# File: docs/8.x/dusk.md, line: 806
# File: docs/master/dusk.md, line: 806
#. type: Plain text
msgid "The `waitForLocation` method can also be used to wait for the current window location to be a fully qualified URL:"
msgstr "也可以使用 `waitForLocation` 方法來等待目前視窗的路徑符合完整的 URL："

# File: docs/8.x/dusk.md, line: 808
# File: docs/master/dusk.md, line: 808
#. type: Plain text
#, no-wrap
msgid "    $browser->waitForLocation('https://example.com/path');\n"
msgstr "    $browser->waitForLocation('https://example.com/path');\n"

# File: docs/8.x/dusk.md, line: 810
# File: docs/master/dusk.md, line: 810
#. type: Plain text
msgid "You may also wait for a [named route's](/docs/{{version}}/routing#named-routes) location:"
msgstr "也可以等待 [命名路由](/docs/{{version}}/routing#named-routes) 的位置："

# File: docs/8.x/dusk.md, line: 812
# File: docs/master/dusk.md, line: 812
#. type: Plain text
#, no-wrap
msgid "    $browser->waitForRoute($routeName, $parameters);\n"
msgstr "    $browser->waitForRoute($routeName, $parameters);\n"

# File: docs/8.x/dusk.md, line: 814
# File: docs/master/dusk.md, line: 814
#. type: Plain text
#, no-wrap
msgid "<a name=\"waiting-for-page-reloads\"></a>\n"
msgstr "<a name=\"waiting-for-page-reloads\"></a>\n"

# File: docs/8.x/dusk.md, line: 814
# File: docs/master/dusk.md, line: 814
#. type: Title ####
#, no-wrap
msgid "Waiting for Page Reloads"
msgstr "等待頁面重新整理"

# File: docs/8.x/dusk.md, line: 817
# File: docs/master/dusk.md, line: 817
#. type: Plain text
msgid "If you need to wait for a page to reload after performing an action, use the `waitForReload` method:"
msgstr "若有需要在執行特定動作前等待頁面重新整理，請使用 `waitForReload` 方法："

# File: docs/8.x/dusk.md, line: 819
# File: docs/8.x/dusk.md, line: 1629
# File: docs/master/dusk.md, line: 819
# File: docs/master/dusk.md, line: 1629
#. type: Plain text
#, no-wrap
msgid "    use Laravel\\Dusk\\Browser;\n"
msgstr "    use Laravel\\Dusk\\Browser;\n"

# File: docs/8.x/dusk.md, line: 824
# File: docs/master/dusk.md, line: 824
#. type: Plain text
#, no-wrap
msgid "    $browser->waitForReload(function (Browser $browser) {\n"
"        $browser->press('Submit');\n"
"    })\n"
"    ->assertSee('Success!');\n"
msgstr "    $browser->waitForReload(function (Browser $browser) {\n"
"        $browser->press('Submit');\n"
"    })\n"
"    ->assertSee('Success!');\n"

# File: docs/8.x/dusk.md, line: 826
# File: docs/master/dusk.md, line: 826
#. type: Plain text
msgid "Since the need to wait for the page to reload typically occurs after clicking a button, you may use the `clickAndWaitForReload` method for convenience:"
msgstr "由於我們通常會在點擊按鈕後等待頁面重新整理，因此可以使用更方便的 `clickAndWaitForReload` 方法："

# File: docs/8.x/dusk.md, line: 829
# File: docs/master/dusk.md, line: 829
#. type: Plain text
#, no-wrap
msgid "    $browser->clickAndWaitForReload('.selector')\n"
"            ->assertSee('something');\n"
msgstr "    $browser->clickAndWaitForReload('.selector')\n"
"            ->assertSee('something');\n"

# File: docs/8.x/dusk.md, line: 831
# File: docs/master/dusk.md, line: 831
#. type: Plain text
#, no-wrap
msgid "<a name=\"waiting-on-javascript-expressions\"></a>\n"
msgstr "<a name=\"waiting-on-javascript-expressions\"></a>\n"

# File: docs/8.x/dusk.md, line: 831
# File: docs/master/dusk.md, line: 831
#. type: Title ####
#, no-wrap
msgid "Waiting On JavaScript Expressions"
msgstr "等待 JavaScript 運算式"

# File: docs/8.x/dusk.md, line: 834
# File: docs/master/dusk.md, line: 834
#. type: Plain text
msgid "Sometimes you may wish to pause the execution of a test until a given JavaScript expression evaluates to `true`. You may easily accomplish this using the `waitUntil` method. When passing an expression to this method, you do not need to include the `return` keyword or an ending semi-colon:"
msgstr "有時候，我們可能會想暫停測試並等待某個給定的 JavaScript 運算式取值為 `true`。可使用 `waitUntil` 方法來輕鬆達成。將運算式傳給該方法時，不需要包含 `return` 關鍵字或結尾的分號："

# File: docs/8.x/dusk.md, line: 837
# File: docs/master/dusk.md, line: 837
#. type: Plain text
#, no-wrap
msgid "    // Wait a maximum of five seconds for the expression to be true...\n"
"    $browser->waitUntil('App.data.servers.length > 0');\n"
msgstr "    // 等待運算式為 true，最多 5 秒...\n"
"    $browser->waitUntil('App.data.servers.length > 0');\n"

# File: docs/8.x/dusk.md, line: 840
# File: docs/master/dusk.md, line: 840
#. type: Plain text
#, no-wrap
msgid "    // Wait a maximum of one second for the expression to be true...\n"
"    $browser->waitUntil('App.data.servers.length > 0', 1);\n"
msgstr "    // 等待運算式為 true，最多 1 秒...\n"
"    $browser->waitUntil('App.data.servers.length > 0', 1);\n"

# File: docs/8.x/dusk.md, line: 842
# File: docs/master/dusk.md, line: 842
#. type: Plain text
#, no-wrap
msgid "<a name=\"waiting-on-vue-expressions\"></a>\n"
msgstr "<a name=\"waiting-on-vue-expressions\"></a>\n"

# File: docs/8.x/dusk.md, line: 842
# File: docs/master/dusk.md, line: 842
#. type: Title ####
#, no-wrap
msgid "Waiting On Vue Expressions"
msgstr "等待 Vue 運算式"

# File: docs/8.x/dusk.md, line: 845
# File: docs/master/dusk.md, line: 845
#. type: Plain text
msgid "The `waitUntilVue` and `waitUntilVueIsNot` methods may be used to wait until a [Vue component](https://vuejs.org) attribute has a given value:"
msgstr "可使用 `waitUntilVue` 與 `waitUntilVueIsNot` 方法來等待給定的 [Vue 元件](https://vuejs.org) 屬性具有給定的值："

# File: docs/8.x/dusk.md, line: 848
# File: docs/master/dusk.md, line: 848
#. type: Plain text
#, no-wrap
msgid "    // Wait until the component attribute contains the given value...\n"
"    $browser->waitUntilVue('user.name', 'Taylor', '@user');\n"
msgstr "    // 等待元件屬性包含給定的值...\n"
"    $browser->waitUntilVue('user.name', 'Taylor', '@user');\n"

# File: docs/8.x/dusk.md, line: 851
# File: docs/master/dusk.md, line: 851
#. type: Plain text
#, no-wrap
msgid "    // Wait until the component attribute doesn't contain the given value...\n"
"    $browser->waitUntilVueIsNot('user.name', null, '@user');\n"
msgstr "    // 等待元件屬性不包含給定的值...\n"
"    $browser->waitUntilVueIsNot('user.name', null, '@user');\n"

# File: docs/8.x/dusk.md, line: 853
# File: docs/master/dusk.md, line: 853
#. type: Plain text
#, no-wrap
msgid "<a name=\"waiting-with-a-callback\"></a>\n"
msgstr "<a name=\"waiting-with-a-callback\"></a>\n"

# File: docs/8.x/dusk.md, line: 853
# File: docs/master/dusk.md, line: 853
#. type: Title ####
#, no-wrap
msgid "Waiting With A Callback"
msgstr "包含回呼的等待"

# File: docs/8.x/dusk.md, line: 856
# File: docs/master/dusk.md, line: 856
#. type: Plain text
msgid "Many of the \"wait\" methods in Dusk rely on the underlying `waitUsing` method. You may use this method directly to wait for a given closure to return `true`. The `waitUsing` method accepts the maximum number of seconds to wait, the interval at which the closure should be evaluated, the closure, and an optional failure message:"
msgstr "在 Dusk 中，許多的「wait」方法都仰賴於底層的 `waitUsing` 方法。可以直接使用該方法來等待給定的閉包回傳 `true`。`waitUsing` 方法接受等待最大秒數、閉包取值的時間間隔、閉包、以及一個可選的錯誤訊息："

# File: docs/8.x/dusk.md, line: 860
# File: docs/master/dusk.md, line: 860
#. type: Plain text
#, no-wrap
msgid "    $browser->waitUsing(10, 1, function () use ($something) {\n"
"        return $something->isReady();\n"
"    }, \"Something wasn't ready in time.\");\n"
msgstr "    $browser->waitUsing(10, 1, function () use ($something) {\n"
"        return $something->isReady();\n"
"    }, \"Something wasn't ready in time.\");\n"

# File: docs/8.x/dusk.md, line: 862
# File: docs/master/dusk.md, line: 862
#. type: Plain text
#, no-wrap
msgid "<a name=\"scrolling-an-element-into-view\"></a>\n"
msgstr "<a name=\"scrolling-an-element-into-view\"></a>\n"

# File: docs/8.x/dusk.md, line: 862
# File: docs/master/dusk.md, line: 862
#. type: Title ###
#, no-wrap
msgid "Scrolling An Element Into View"
msgstr "將元素滾動進也沒"

# File: docs/8.x/dusk.md, line: 865
# File: docs/master/dusk.md, line: 865
#. type: Plain text
msgid "Sometimes you may not be able to click on an element because it is outside of the viewable area of the browser. The `scrollIntoView` method will scroll the browser window until the element at the given selector is within the view:"
msgstr "有時候，我們可能沒辦法點擊某個元素，因為該元素在瀏覽器可視區域外。使用 `scrollIntoView` 方法可以滾動瀏覽器視窗，直到給定選擇器元素出現在顯示區內："

# File: docs/8.x/dusk.md, line: 868
# File: docs/master/dusk.md, line: 868
#. type: Plain text
#, no-wrap
msgid "    $browser->scrollIntoView('.selector')\n"
"            ->click('.selector');\n"
msgstr "    $browser->scrollIntoView('.selector')\n"
"            ->click('.selector');\n"

# File: docs/8.x/dusk.md, line: 870
# File: docs/master/dusk.md, line: 870
#. type: Plain text
#, no-wrap
msgid "<a name=\"available-assertions\"></a>\n"
msgstr "<a name=\"available-assertions\"></a>\n"

# File: docs/8.x/dusk.md, line: 870
# File: docs/master/dusk.md, line: 870
#. type: Title ##
#, no-wrap
msgid "Available Assertions"
msgstr "可用的 Assertion"

# File: docs/8.x/dusk.md, line: 873
# File: docs/master/dusk.md, line: 873
#. type: Plain text
msgid "Dusk provides a variety of assertions that you may make against your application. All of the available assertions are documented in the list below:"
msgstr "Dusk 提供了多種可對網站進行的 Assertion。下面列出了所有可用的 Assertion："

# File: docs/8.x/dusk.md, line: 879
# File: docs/master/dusk.md, line: 879
#. type: Plain text
#, no-wrap
msgid "<style>\n"
"    .collection-method-list > p {\n"
"        column-count: 3; -moz-column-count: 3; -webkit-column-count: 3;\n"
"        column-gap: 2em; -moz-column-gap: 2em; -webkit-column-gap: 2em;\n"
"    }\n"
msgstr "<style>\n"
"    .collection-method-list > p {\n"
"        column-count: 3; -moz-column-count: 3; -webkit-column-count: 3;\n"
"        column-gap: 2em; -moz-column-gap: 2em; -webkit-column-gap: 2em;\n"
"    }\n"

# File: docs/8.x/dusk.md, line: 884
# File: docs/master/dusk.md, line: 884
#. type: Plain text
#, no-wrap
msgid "    .collection-method-list a {\n"
"        display: block;\n"
"    }\n"
"</style>\n"
msgstr "    .collection-method-list a {\n"
"        display: block;\n"
"    }\n"
"</style>\n"

# File: docs/8.x/dusk.md, line: 960
# File: docs/master/dusk.md, line: 960
#. type: Plain text
#, no-wrap
msgid "<div class=\"collection-method-list\" markdown=\"1\">\n"
"[assertTitle](#assert-title)\n"
"[assertTitleContains](#assert-title-contains)\n"
"[assertUrlIs](#assert-url-is)\n"
"[assertSchemeIs](#assert-scheme-is)\n"
"[assertSchemeIsNot](#assert-scheme-is-not)\n"
"[assertHostIs](#assert-host-is)\n"
"[assertHostIsNot](#assert-host-is-not)\n"
"[assertPortIs](#assert-port-is)\n"
"[assertPortIsNot](#assert-port-is-not)\n"
"[assertPathBeginsWith](#assert-path-begins-with)\n"
"[assertPathIs](#assert-path-is)\n"
"[assertPathIsNot](#assert-path-is-not)\n"
"[assertRouteIs](#assert-route-is)\n"
"[assertQueryStringHas](#assert-query-string-has)\n"
"[assertQueryStringMissing](#assert-query-string-missing)\n"
"[assertFragmentIs](#assert-fragment-is)\n"
"[assertFragmentBeginsWith](#assert-fragment-begins-with)\n"
"[assertFragmentIsNot](#assert-fragment-is-not)\n"
"[assertHasCookie](#assert-has-cookie)\n"
"[assertHasPlainCookie](#assert-has-plain-cookie)\n"
"[assertCookieMissing](#assert-cookie-missing)\n"
"[assertPlainCookieMissing](#assert-plain-cookie-missing)\n"
"[assertCookieValue](#assert-cookie-value)\n"
"[assertPlainCookieValue](#assert-plain-cookie-value)\n"
"[assertSee](#assert-see)\n"
"[assertDontSee](#assert-dont-see)\n"
"[assertSeeIn](#assert-see-in)\n"
"[assertDontSeeIn](#assert-dont-see-in)\n"
"[assertSeeAnythingIn](#assert-see-anything-in)\n"
"[assertSeeNothingIn](#assert-see-nothing-in)\n"
"[assertScript](#assert-script)\n"
"[assertSourceHas](#assert-source-has)\n"
"[assertSourceMissing](#assert-source-missing)\n"
"[assertSeeLink](#assert-see-link)\n"
"[assertDontSeeLink](#assert-dont-see-link)\n"
"[assertInputValue](#assert-input-value)\n"
"[assertInputValueIsNot](#assert-input-value-is-not)\n"
"[assertChecked](#assert-checked)\n"
"[assertNotChecked](#assert-not-checked)\n"
"[assertRadioSelected](#assert-radio-selected)\n"
"[assertRadioNotSelected](#assert-radio-not-selected)\n"
"[assertSelected](#assert-selected)\n"
"[assertNotSelected](#assert-not-selected)\n"
"[assertSelectHasOptions](#assert-select-has-options)\n"
"[assertSelectMissingOptions](#assert-select-missing-options)\n"
"[assertSelectHasOption](#assert-select-has-option)\n"
"[assertSelectMissingOption](#assert-select-missing-option)\n"
"[assertValue](#assert-value)\n"
"[assertValueIsNot](#assert-value-is-not)\n"
"[assertAttribute](#assert-attribute)\n"
"[assertAttributeContains](#assert-attribute-contains)\n"
"[assertAriaAttribute](#assert-aria-attribute)\n"
"[assertDataAttribute](#assert-data-attribute)\n"
"[assertVisible](#assert-visible)\n"
"[assertPresent](#assert-present)\n"
"[assertNotPresent](#assert-not-present)\n"
"[assertMissing](#assert-missing)\n"
"[assertInputPresent](#assert-input-present)\n"
"[assertInputMissing](#assert-input-missing)\n"
"[assertDialogOpened](#assert-dialog-opened)\n"
"[assertEnabled](#assert-enabled)\n"
"[assertDisabled](#assert-disabled)\n"
"[assertButtonEnabled](#assert-button-enabled)\n"
"[assertButtonDisabled](#assert-button-disabled)\n"
"[assertFocused](#assert-focused)\n"
"[assertNotFocused](#assert-not-focused)\n"
"[assertAuthenticated](#assert-authenticated)\n"
"[assertGuest](#assert-guest)\n"
"[assertAuthenticatedAs](#assert-authenticated-as)\n"
"[assertVue](#assert-vue)\n"
"[assertVueIsNot](#assert-vue-is-not)\n"
"[assertVueContains](#assert-vue-contains)\n"
"[assertVueDoesNotContain](#assert-vue-does-not-contain)\n"
"</div>\n"
msgstr "<div class=\"collection-method-list\" markdown=\"1\">\n"
"[assertTitle](#assert-title)\n"
"[assertTitleContains](#assert-title-contains)\n"
"[assertUrlIs](#assert-url-is)\n"
"[assertSchemeIs](#assert-scheme-is)\n"
"[assertSchemeIsNot](#assert-scheme-is-not)\n"
"[assertHostIs](#assert-host-is)\n"
"[assertHostIsNot](#assert-host-is-not)\n"
"[assertPortIs](#assert-port-is)\n"
"[assertPortIsNot](#assert-port-is-not)\n"
"[assertPathBeginsWith](#assert-path-begins-with)\n"
"[assertPathIs](#assert-path-is)\n"
"[assertPathIsNot](#assert-path-is-not)\n"
"[assertRouteIs](#assert-route-is)\n"
"[assertQueryStringHas](#assert-query-string-has)\n"
"[assertQueryStringMissing](#assert-query-string-missing)\n"
"[assertFragmentIs](#assert-fragment-is)\n"
"[assertFragmentBeginsWith](#assert-fragment-begins-with)\n"
"[assertFragmentIsNot](#assert-fragment-is-not)\n"
"[assertHasCookie](#assert-has-cookie)\n"
"[assertHasPlainCookie](#assert-has-plain-cookie)\n"
"[assertCookieMissing](#assert-cookie-missing)\n"
"[assertPlainCookieMissing](#assert-plain-cookie-missing)\n"
"[assertCookieValue](#assert-cookie-value)\n"
"[assertPlainCookieValue](#assert-plain-cookie-value)\n"
"[assertSee](#assert-see)\n"
"[assertDontSee](#assert-dont-see)\n"
"[assertSeeIn](#assert-see-in)\n"
"[assertDontSeeIn](#assert-dont-see-in)\n"
"[assertSeeAnythingIn](#assert-see-anything-in)\n"
"[assertSeeNothingIn](#assert-see-nothing-in)\n"
"[assertScript](#assert-script)\n"
"[assertSourceHas](#assert-source-has)\n"
"[assertSourceMissing](#assert-source-missing)\n"
"[assertSeeLink](#assert-see-link)\n"
"[assertDontSeeLink](#assert-dont-see-link)\n"
"[assertInputValue](#assert-input-value)\n"
"[assertInputValueIsNot](#assert-input-value-is-not)\n"
"[assertChecked](#assert-checked)\n"
"[assertNotChecked](#assert-not-checked)\n"
"[assertRadioSelected](#assert-radio-selected)\n"
"[assertRadioNotSelected](#assert-radio-not-selected)\n"
"[assertSelected](#assert-selected)\n"
"[assertNotSelected](#assert-not-selected)\n"
"[assertSelectHasOptions](#assert-select-has-options)\n"
"[assertSelectMissingOptions](#assert-select-missing-options)\n"
"[assertSelectHasOption](#assert-select-has-option)\n"
"[assertSelectMissingOption](#assert-select-missing-option)\n"
"[assertValue](#assert-value)\n"
"[assertValueIsNot](#assert-value-is-not)\n"
"[assertAttribute](#assert-attribute)\n"
"[assertAttributeContains](#assert-attribute-contains)\n"
"[assertAriaAttribute](#assert-aria-attribute)\n"
"[assertDataAttribute](#assert-data-attribute)\n"
"[assertVisible](#assert-visible)\n"
"[assertPresent](#assert-present)\n"
"[assertNotPresent](#assert-not-present)\n"
"[assertMissing](#assert-missing)\n"
"[assertInputPresent](#assert-input-present)\n"
"[assertInputMissing](#assert-input-missing)\n"
"[assertDialogOpened](#assert-dialog-opened)\n"
"[assertEnabled](#assert-enabled)\n"
"[assertDisabled](#assert-disabled)\n"
"[assertButtonEnabled](#assert-button-enabled)\n"
"[assertButtonDisabled](#assert-button-disabled)\n"
"[assertFocused](#assert-focused)\n"
"[assertNotFocused](#assert-not-focused)\n"
"[assertAuthenticated](#assert-authenticated)\n"
"[assertGuest](#assert-guest)\n"
"[assertAuthenticatedAs](#assert-authenticated-as)\n"
"[assertVue](#assert-vue)\n"
"[assertVueIsNot](#assert-vue-is-not)\n"
"[assertVueContains](#assert-vue-contains)\n"
"[assertVueDoesNotContain](#assert-vue-does-not-contain)\n"
"</div>\n"

# File: docs/8.x/dusk.md, line: 962
# File: docs/master/dusk.md, line: 962
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-title\"></a>\n"
msgstr "<a name=\"assert-title\"></a>\n"

# File: docs/8.x/dusk.md, line: 962
# File: docs/master/dusk.md, line: 962
#. type: Title ####
#, no-wrap
msgid "assertTitle"
msgstr "assertTitle"

# File: docs/8.x/dusk.md, line: 965
# File: docs/master/dusk.md, line: 965
#. type: Plain text
msgid "Assert that the page title matches the given text:"
msgstr "判斷頁面標題符合給定文字："

# File: docs/8.x/dusk.md, line: 967
# File: docs/master/dusk.md, line: 967
#. type: Plain text
#, no-wrap
msgid "    $browser->assertTitle($title);\n"
msgstr "    $browser->assertTitle($title);\n"

# File: docs/8.x/dusk.md, line: 969
# File: docs/master/dusk.md, line: 969
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-title-contains\"></a>\n"
msgstr "<a name=\"assert-title-contains\"></a>\n"

# File: docs/8.x/dusk.md, line: 969
# File: docs/master/dusk.md, line: 969
#. type: Title ####
#, no-wrap
msgid "assertTitleContains"
msgstr "assertTitleContains"

# File: docs/8.x/dusk.md, line: 972
# File: docs/master/dusk.md, line: 972
#. type: Plain text
msgid "Assert that the page title contains the given text:"
msgstr "判斷頁面標題包含給定文字："

# File: docs/8.x/dusk.md, line: 974
# File: docs/master/dusk.md, line: 974
#. type: Plain text
#, no-wrap
msgid "    $browser->assertTitleContains($title);\n"
msgstr "    $browser->assertTitleContains($title);\n"

# File: docs/8.x/dusk.md, line: 976
# File: docs/master/dusk.md, line: 976
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-url-is\"></a>\n"
msgstr "<a name=\"assert-url-is\"></a>\n"

# File: docs/8.x/dusk.md, line: 976
# File: docs/master/dusk.md, line: 976
#. type: Title ####
#, no-wrap
msgid "assertUrlIs"
msgstr "assertUrlIs"

# File: docs/8.x/dusk.md, line: 979
# File: docs/master/dusk.md, line: 979
#. type: Plain text
msgid "Assert that the current URL (without the query string) matches the given string:"
msgstr "判斷目前 URL (不含查詢字串 Query String) 符合給定字串："

# File: docs/8.x/dusk.md, line: 981
# File: docs/master/dusk.md, line: 981
#. type: Plain text
#, no-wrap
msgid "    $browser->assertUrlIs($url);\n"
msgstr "    $browser->assertUrlIs($url);\n"

# File: docs/8.x/dusk.md, line: 983
# File: docs/master/dusk.md, line: 983
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-scheme-is\"></a>\n"
msgstr "<a name=\"assert-scheme-is\"></a>\n"

# File: docs/8.x/dusk.md, line: 983
# File: docs/master/dusk.md, line: 983
#. type: Title ####
#, no-wrap
msgid "assertSchemeIs"
msgstr "assertSchemeIs"

# File: docs/8.x/dusk.md, line: 986
# File: docs/master/dusk.md, line: 986
#. type: Plain text
msgid "Assert that the current URL scheme matches the given scheme:"
msgstr "判斷目前 URL 的協定 (Scheme) 符合給定協定："

# File: docs/8.x/dusk.md, line: 988
# File: docs/master/dusk.md, line: 988
#. type: Plain text
#, no-wrap
msgid "    $browser->assertSchemeIs($scheme);\n"
msgstr "    $browser->assertSchemeIs($scheme);\n"

# File: docs/8.x/dusk.md, line: 990
# File: docs/master/dusk.md, line: 990
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-scheme-is-not\"></a>\n"
msgstr "<a name=\"assert-scheme-is-not\"></a>\n"

# File: docs/8.x/dusk.md, line: 990
# File: docs/master/dusk.md, line: 990
#. type: Title ####
#, no-wrap
msgid "assertSchemeIsNot"
msgstr "assertSchemeIsNot"

# File: docs/8.x/dusk.md, line: 993
# File: docs/master/dusk.md, line: 993
#. type: Plain text
msgid "Assert that the current URL scheme does not match the given scheme:"
msgstr "判斷目前的 URL 協定 (Scheme) 不符合給定協定："

# File: docs/8.x/dusk.md, line: 995
# File: docs/master/dusk.md, line: 995
#. type: Plain text
#, no-wrap
msgid "    $browser->assertSchemeIsNot($scheme);\n"
msgstr "    $browser->assertSchemeIsNot($scheme);\n"

# File: docs/8.x/dusk.md, line: 997
# File: docs/master/dusk.md, line: 997
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-host-is\"></a>\n"
msgstr "<a name=\"assert-host-is\"></a>\n"

# File: docs/8.x/dusk.md, line: 997
# File: docs/master/dusk.md, line: 997
#. type: Title ####
#, no-wrap
msgid "assertHostIs"
msgstr "assertHostIs"

# File: docs/8.x/dusk.md, line: 1000
# File: docs/master/dusk.md, line: 1000
#. type: Plain text
msgid "Assert that the current URL host matches the given host:"
msgstr "判斷目前 URL 的主機名稱 (Host) 符合給定主機名稱："

# File: docs/8.x/dusk.md, line: 1002
# File: docs/master/dusk.md, line: 1002
#. type: Plain text
#, no-wrap
msgid "    $browser->assertHostIs($host);\n"
msgstr "    $browser->assertHostIs($host);\n"

# File: docs/8.x/dusk.md, line: 1004
# File: docs/master/dusk.md, line: 1004
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-host-is-not\"></a>\n"
msgstr "<a name=\"assert-host-is-not\"></a>\n"

# File: docs/8.x/dusk.md, line: 1004
# File: docs/master/dusk.md, line: 1004
#. type: Title ####
#, no-wrap
msgid "assertHostIsNot"
msgstr "assertHostIsNot"

# File: docs/8.x/dusk.md, line: 1007
# File: docs/master/dusk.md, line: 1007
#. type: Plain text
msgid "Assert that the current URL host does not match the given host:"
msgstr "判斷目前 URL 的主機名稱 (Host) 不符合給定主機名稱："

# File: docs/8.x/dusk.md, line: 1009
# File: docs/master/dusk.md, line: 1009
#. type: Plain text
#, no-wrap
msgid "    $browser->assertHostIsNot($host);\n"
msgstr "    $browser->assertHostIsNot($host);\n"

# File: docs/8.x/dusk.md, line: 1011
# File: docs/master/dusk.md, line: 1011
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-port-is\"></a>\n"
msgstr "<a name=\"assert-port-is\"></a>\n"

# File: docs/8.x/dusk.md, line: 1011
# File: docs/master/dusk.md, line: 1011
#. type: Title ####
#, no-wrap
msgid "assertPortIs"
msgstr "assertPortIs"

# File: docs/8.x/dusk.md, line: 1014
# File: docs/master/dusk.md, line: 1014
#. type: Plain text
msgid "Assert that the current URL port matches the given port:"
msgstr "判斷目前 URL 的連接埠 (Port) 符合給定連接埠："

# File: docs/8.x/dusk.md, line: 1016
# File: docs/master/dusk.md, line: 1016
#. type: Plain text
#, no-wrap
msgid "    $browser->assertPortIs($port);\n"
msgstr "    $browser->assertPortIs($port);\n"

# File: docs/8.x/dusk.md, line: 1018
# File: docs/master/dusk.md, line: 1018
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-port-is-not\"></a>\n"
msgstr "<a name=\"assert-port-is-not\"></a>\n"

# File: docs/8.x/dusk.md, line: 1018
# File: docs/master/dusk.md, line: 1018
#. type: Title ####
#, no-wrap
msgid "assertPortIsNot"
msgstr "assertPortIsNot"

# File: docs/8.x/dusk.md, line: 1021
# File: docs/master/dusk.md, line: 1021
#. type: Plain text
msgid "Assert that the current URL port does not match the given port:"
msgstr "判斷目前 URL 的連接埠 (Port) 不符合給定連接埠："

# File: docs/8.x/dusk.md, line: 1023
# File: docs/master/dusk.md, line: 1023
#. type: Plain text
#, no-wrap
msgid "    $browser->assertPortIsNot($port);\n"
msgstr "    $browser->assertPortIsNot($port);\n"

# File: docs/8.x/dusk.md, line: 1025
# File: docs/master/dusk.md, line: 1025
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-path-begins-with\"></a>\n"
msgstr "<a name=\"assert-path-begins-with\"></a>\n"

# File: docs/8.x/dusk.md, line: 1025
# File: docs/master/dusk.md, line: 1025
#. type: Title ####
#, no-wrap
msgid "assertPathBeginsWith"
msgstr "assertPathBeginsWith"

# File: docs/8.x/dusk.md, line: 1028
# File: docs/master/dusk.md, line: 1028
#. type: Plain text
msgid "Assert that the current URL path begins with the given path:"
msgstr "判斷目前 URL 的路徑 (Path) 以給定路徑開始："

# File: docs/8.x/dusk.md, line: 1030
# File: docs/master/dusk.md, line: 1030
#. type: Plain text
#, no-wrap
msgid "    $browser->assertPathBeginsWith('/home');\n"
msgstr "    $browser->assertPathBeginsWith('/home');\n"

# File: docs/8.x/dusk.md, line: 1032
# File: docs/master/dusk.md, line: 1032
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-path-is\"></a>\n"
msgstr "<a name=\"assert-path-is\"></a>\n"

# File: docs/8.x/dusk.md, line: 1032
# File: docs/master/dusk.md, line: 1032
#. type: Title ####
#, no-wrap
msgid "assertPathIs"
msgstr "assertPathIs"

# File: docs/8.x/dusk.md, line: 1035
# File: docs/master/dusk.md, line: 1035
#. type: Plain text
msgid "Assert that the current path matches the given path:"
msgstr "判斷目前路徑 (Path) 符合給定路徑："

# File: docs/8.x/dusk.md, line: 1037
# File: docs/master/dusk.md, line: 1037
#. type: Plain text
#, no-wrap
msgid "    $browser->assertPathIs('/home');\n"
msgstr "    $browser->assertPathIs('/home');\n"

# File: docs/8.x/dusk.md, line: 1039
# File: docs/master/dusk.md, line: 1039
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-path-is-not\"></a>\n"
msgstr "<a name=\"assert-path-is-not\"></a>\n"

# File: docs/8.x/dusk.md, line: 1039
# File: docs/master/dusk.md, line: 1039
#. type: Title ####
#, no-wrap
msgid "assertPathIsNot"
msgstr "assertPathIsNot"

# File: docs/8.x/dusk.md, line: 1042
# File: docs/master/dusk.md, line: 1042
#. type: Plain text
msgid "Assert that the current path does not match the given path:"
msgstr "判斷目前路徑不符合給定路徑："

# File: docs/8.x/dusk.md, line: 1044
# File: docs/master/dusk.md, line: 1044
#. type: Plain text
#, no-wrap
msgid "    $browser->assertPathIsNot('/home');\n"
msgstr "    $browser->assertPathIsNot('/home');\n"

# File: docs/8.x/dusk.md, line: 1046
# File: docs/master/dusk.md, line: 1046
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-route-is\"></a>\n"
msgstr "<a name=\"assert-route-is\"></a>\n"

# File: docs/8.x/dusk.md, line: 1046
# File: docs/master/dusk.md, line: 1046
#. type: Title ####
#, no-wrap
msgid "assertRouteIs"
msgstr "assertRouteIs"

# File: docs/8.x/dusk.md, line: 1049
# File: docs/master/dusk.md, line: 1049
#. type: Plain text
msgid "Assert that the current URL matches the given [named route's](/docs/{{version}}/routing#named-routes) URL:"
msgstr "判斷目前 URL 符合給定的 [命名路由](/docs/{{version}}/routing#named-routes) URL："

# File: docs/8.x/dusk.md, line: 1051
# File: docs/master/dusk.md, line: 1051
#. type: Plain text
#, no-wrap
msgid "    $browser->assertRouteIs($name, $parameters);\n"
msgstr "    $browser->assertRouteIs($name, $parameters);\n"

# File: docs/8.x/dusk.md, line: 1053
# File: docs/master/dusk.md, line: 1053
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-query-string-has\"></a>\n"
msgstr "<a name=\"assert-query-string-has\"></a>\n"

# File: docs/8.x/dusk.md, line: 1053
# File: docs/master/dusk.md, line: 1053
#. type: Title ####
#, no-wrap
msgid "assertQueryStringHas"
msgstr "assertQueryStringHas"

# File: docs/8.x/dusk.md, line: 1056
# File: docs/master/dusk.md, line: 1056
#. type: Plain text
msgid "Assert that the given query string parameter is present:"
msgstr "判斷查詢字串 (Query String) 有包含給定參數："

# File: docs/8.x/dusk.md, line: 1058
# File: docs/master/dusk.md, line: 1058
#. type: Plain text
#, no-wrap
msgid "    $browser->assertQueryStringHas($name);\n"
msgstr "    $browser->assertQueryStringHas($name);\n"

# File: docs/8.x/dusk.md, line: 1060
# File: docs/master/dusk.md, line: 1060
#. type: Plain text
msgid "Assert that the given query string parameter is present and has a given value:"
msgstr "判斷查詢字串有包含給定參數，並符合給定的值："

# File: docs/8.x/dusk.md, line: 1062
# File: docs/master/dusk.md, line: 1062
#. type: Plain text
#, no-wrap
msgid "    $browser->assertQueryStringHas($name, $value);\n"
msgstr "    $browser->assertQueryStringHas($name, $value);\n"

# File: docs/8.x/dusk.md, line: 1064
# File: docs/master/dusk.md, line: 1064
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-query-string-missing\"></a>\n"
msgstr "<a name=\"assert-query-string-missing\"></a>\n"

# File: docs/8.x/dusk.md, line: 1064
# File: docs/master/dusk.md, line: 1064
#. type: Title ####
#, no-wrap
msgid "assertQueryStringMissing"
msgstr "assertQueryStringMissing"

# File: docs/8.x/dusk.md, line: 1067
# File: docs/master/dusk.md, line: 1067
#. type: Plain text
msgid "Assert that the given query string parameter is missing:"
msgstr "判斷查詢字串 (Query String) 不包含給定的參數："

# File: docs/8.x/dusk.md, line: 1069
# File: docs/master/dusk.md, line: 1069
#. type: Plain text
#, no-wrap
msgid "    $browser->assertQueryStringMissing($name);\n"
msgstr "    $browser->assertQueryStringMissing($name);\n"

# File: docs/8.x/dusk.md, line: 1071
# File: docs/master/dusk.md, line: 1071
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-fragment-is\"></a>\n"
msgstr "<a name=\"assert-fragment-is\"></a>\n"

# File: docs/8.x/dusk.md, line: 1071
# File: docs/master/dusk.md, line: 1071
#. type: Title ####
#, no-wrap
msgid "assertFragmentIs"
msgstr "assertFragmentIs"

# File: docs/8.x/dusk.md, line: 1074
# File: docs/master/dusk.md, line: 1074
#. type: Plain text
msgid "Assert that the URL's current hash fragment matches the given fragment:"
msgstr "判斷 URL 目前的雜湊片段 (Hash Fragment) 符合給定的片段："

# File: docs/8.x/dusk.md, line: 1076
# File: docs/master/dusk.md, line: 1076
#. type: Plain text
#, no-wrap
msgid "    $browser->assertFragmentIs('anchor');\n"
msgstr "    $browser->assertFragmentIs('anchor');\n"

# File: docs/8.x/dusk.md, line: 1078
# File: docs/master/dusk.md, line: 1078
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-fragment-begins-with\"></a>\n"
msgstr "<a name=\"assert-fragment-begins-with\"></a>\n"

# File: docs/8.x/dusk.md, line: 1078
# File: docs/master/dusk.md, line: 1078
#. type: Title ####
#, no-wrap
msgid "assertFragmentBeginsWith"
msgstr "assertFragmentBeginsWith"

# File: docs/8.x/dusk.md, line: 1081
# File: docs/master/dusk.md, line: 1081
#. type: Plain text
msgid "Assert that the URL's current hash fragment begins with the given fragment:"
msgstr "判斷 URL 目前的雜湊片段 (Hash Fragment) 以給定的片段開始："

# File: docs/8.x/dusk.md, line: 1083
# File: docs/master/dusk.md, line: 1083
#. type: Plain text
#, no-wrap
msgid "    $browser->assertFragmentBeginsWith('anchor');\n"
msgstr "    $browser->assertFragmentBeginsWith('anchor');\n"

# File: docs/8.x/dusk.md, line: 1085
# File: docs/master/dusk.md, line: 1085
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-fragment-is-not\"></a>\n"
msgstr "<a name=\"assert-fragment-is-not\"></a>\n"

# File: docs/8.x/dusk.md, line: 1085
# File: docs/master/dusk.md, line: 1085
#. type: Title ####
#, no-wrap
msgid "assertFragmentIsNot"
msgstr "assertFragmentIsNot"

# File: docs/8.x/dusk.md, line: 1088
# File: docs/master/dusk.md, line: 1088
#. type: Plain text
msgid "Assert that the URL's current hash fragment does not match the given fragment:"
msgstr "判斷 URL 目前的雜湊片段 (Hash Fragment) 不符合給定的片段："

# File: docs/8.x/dusk.md, line: 1090
# File: docs/master/dusk.md, line: 1090
#. type: Plain text
#, no-wrap
msgid "    $browser->assertFragmentIsNot('anchor');\n"
msgstr "    $browser->assertFragmentIsNot('anchor');\n"

# File: docs/8.x/dusk.md, line: 1092
# File: docs/master/dusk.md, line: 1092
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-has-cookie\"></a>\n"
msgstr "<a name=\"assert-has-cookie\"></a>\n"

# File: docs/8.x/dusk.md, line: 1092
# File: docs/master/dusk.md, line: 1092
#. type: Title ####
#, no-wrap
msgid "assertHasCookie"
msgstr "assertHasCookie"

# File: docs/8.x/dusk.md, line: 1095
# File: docs/master/dusk.md, line: 1095
#. type: Plain text
msgid "Assert that the given encrypted cookie is present:"
msgstr "判斷 Cookie 中含有給定的加密 Cookie："

# File: docs/8.x/dusk.md, line: 1097
# File: docs/master/dusk.md, line: 1097
#. type: Plain text
#, no-wrap
msgid "    $browser->assertHasCookie($name);\n"
msgstr "    $browser->assertHasCookie($name);\n"

# File: docs/8.x/dusk.md, line: 1099
# File: docs/master/dusk.md, line: 1099
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-has-plain-cookie\"></a>\n"
msgstr "<a name=\"assert-has-plain-cookie\"></a>\n"

# File: docs/8.x/dusk.md, line: 1099
# File: docs/master/dusk.md, line: 1099
#. type: Title ####
#, no-wrap
msgid "assertHasPlainCookie"
msgstr "assertHasPlainCookie"

# File: docs/8.x/dusk.md, line: 1102
# File: docs/master/dusk.md, line: 1102
#. type: Plain text
msgid "Assert that the given unencrypted cookie is present:"
msgstr "判斷 Cookie 中含有給定的未加密 Cookie："

# File: docs/8.x/dusk.md, line: 1104
# File: docs/master/dusk.md, line: 1104
#. type: Plain text
#, no-wrap
msgid "    $browser->assertHasPlainCookie($name);\n"
msgstr "    $browser->assertHasPlainCookie($name);\n"

# File: docs/8.x/dusk.md, line: 1106
# File: docs/master/dusk.md, line: 1106
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-cookie-missing\"></a>\n"
msgstr "<a name=\"assert-cookie-missing\"></a>\n"

# File: docs/8.x/dusk.md, line: 1106
# File: docs/master/dusk.md, line: 1106
#. type: Title ####
#, no-wrap
msgid "assertCookieMissing"
msgstr "assertCookieMissing"

# File: docs/8.x/dusk.md, line: 1109
# File: docs/master/dusk.md, line: 1109
#. type: Plain text
msgid "Assert that the given encrypted cookie is not present:"
msgstr "判斷 Cookie 中不包含給定的加密 Cookie："

# File: docs/8.x/dusk.md, line: 1111
# File: docs/master/dusk.md, line: 1111
#. type: Plain text
#, no-wrap
msgid "    $browser->assertCookieMissing($name);\n"
msgstr "    $browser->assertCookieMissing($name);\n"

# File: docs/8.x/dusk.md, line: 1113
# File: docs/master/dusk.md, line: 1113
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-plain-cookie-missing\"></a>\n"
msgstr "<a name=\"assert-plain-cookie-missing\"></a>\n"

# File: docs/8.x/dusk.md, line: 1113
# File: docs/master/dusk.md, line: 1113
#. type: Title ####
#, no-wrap
msgid "assertPlainCookieMissing"
msgstr "assertPlainCookieMissing"

# File: docs/8.x/dusk.md, line: 1116
# File: docs/master/dusk.md, line: 1116
#. type: Plain text
msgid "Assert that the given unencrypted cookie is not present:"
msgstr "判斷 Cookie 中不包含給定的未加密 Cookie："

# File: docs/8.x/dusk.md, line: 1118
# File: docs/master/dusk.md, line: 1118
#. type: Plain text
#, no-wrap
msgid "    $browser->assertPlainCookieMissing($name);\n"
msgstr "    $browser->assertPlainCookieMissing($name);\n"

# File: docs/8.x/dusk.md, line: 1120
# File: docs/master/dusk.md, line: 1120
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-cookie-value\"></a>\n"
msgstr "<a name=\"assert-cookie-value\"></a>\n"

# File: docs/8.x/dusk.md, line: 1120
# File: docs/master/dusk.md, line: 1120
#. type: Title ####
#, no-wrap
msgid "assertCookieValue"
msgstr "assertCookieValue"

# File: docs/8.x/dusk.md, line: 1123
# File: docs/master/dusk.md, line: 1123
#. type: Plain text
msgid "Assert that an encrypted cookie has a given value:"
msgstr "判斷加密 Cookie 為給定的值："

# File: docs/8.x/dusk.md, line: 1125
# File: docs/master/dusk.md, line: 1125
#. type: Plain text
#, no-wrap
msgid "    $browser->assertCookieValue($name, $value);\n"
msgstr "    $browser->assertCookieValue($name, $value);\n"

# File: docs/8.x/dusk.md, line: 1127
# File: docs/master/dusk.md, line: 1127
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-plain-cookie-value\"></a>\n"
msgstr "<a name=\"assert-plain-cookie-value\"></a>\n"

# File: docs/8.x/dusk.md, line: 1127
# File: docs/master/dusk.md, line: 1127
#. type: Title ####
#, no-wrap
msgid "assertPlainCookieValue"
msgstr "assertPlainCookieValue"

# File: docs/8.x/dusk.md, line: 1130
# File: docs/master/dusk.md, line: 1130
#. type: Plain text
msgid "Assert that an unencrypted cookie has a given value:"
msgstr "判斷未加密 Cookie 為給定的值："

# File: docs/8.x/dusk.md, line: 1132
# File: docs/master/dusk.md, line: 1132
#. type: Plain text
#, no-wrap
msgid "    $browser->assertPlainCookieValue($name, $value);\n"
msgstr "    $browser->assertPlainCookieValue($name, $value);\n"

# File: docs/8.x/dusk.md, line: 1134
# File: docs/master/dusk.md, line: 1134
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-see\"></a>\n"
msgstr "<a name=\"assert-see\"></a>\n"

# File: docs/8.x/dusk.md, line: 1134
# File: docs/master/dusk.md, line: 1134
#. type: Title ####
#, no-wrap
msgid "assertSee"
msgstr "assertSee"

# File: docs/8.x/dusk.md, line: 1137
# File: docs/master/dusk.md, line: 1137
#. type: Plain text
msgid "Assert that the given text is present on the page:"
msgstr "判斷給定文字有出現在頁面上："

# File: docs/8.x/dusk.md, line: 1139
# File: docs/master/dusk.md, line: 1139
#. type: Plain text
#, no-wrap
msgid "    $browser->assertSee($text);\n"
msgstr "    $browser->assertSee($text);\n"

# File: docs/8.x/dusk.md, line: 1141
# File: docs/master/dusk.md, line: 1141
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-dont-see\"></a>\n"
msgstr "<a name=\"assert-dont-see\"></a>\n"

# File: docs/8.x/dusk.md, line: 1141
# File: docs/master/dusk.md, line: 1141
#. type: Title ####
#, no-wrap
msgid "assertDontSee"
msgstr "assertDontSee"

# File: docs/8.x/dusk.md, line: 1144
# File: docs/master/dusk.md, line: 1144
#. type: Plain text
msgid "Assert that the given text is not present on the page:"
msgstr "判斷給定文字未出現在頁面上："

# File: docs/8.x/dusk.md, line: 1146
# File: docs/master/dusk.md, line: 1146
#. type: Plain text
#, no-wrap
msgid "    $browser->assertDontSee($text);\n"
msgstr "    $browser->assertDontSee($text);\n"

# File: docs/8.x/dusk.md, line: 1148
# File: docs/master/dusk.md, line: 1148
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-see-in\"></a>\n"
msgstr "<a name=\"assert-see-in\"></a>\n"

# File: docs/8.x/dusk.md, line: 1148
# File: docs/master/dusk.md, line: 1148
#. type: Title ####
#, no-wrap
msgid "assertSeeIn"
msgstr "assertSeeIn"

# File: docs/8.x/dusk.md, line: 1151
# File: docs/master/dusk.md, line: 1151
#. type: Plain text
msgid "Assert that the given text is present within the selector:"
msgstr "判斷給定文字出現在選擇器中："

# File: docs/8.x/dusk.md, line: 1153
# File: docs/master/dusk.md, line: 1153
#. type: Plain text
#, no-wrap
msgid "    $browser->assertSeeIn($selector, $text);\n"
msgstr "    $browser->assertSeeIn($selector, $text);\n"

# File: docs/8.x/dusk.md, line: 1155
# File: docs/master/dusk.md, line: 1155
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-dont-see-in\"></a>\n"
msgstr "<a name=\"assert-dont-see-in\"></a>\n"

# File: docs/8.x/dusk.md, line: 1155
# File: docs/master/dusk.md, line: 1155
#. type: Title ####
#, no-wrap
msgid "assertDontSeeIn"
msgstr "assertDontSeeIn"

# File: docs/8.x/dusk.md, line: 1158
# File: docs/master/dusk.md, line: 1158
#. type: Plain text
msgid "Assert that the given text is not present within the selector:"
msgstr "判斷給定文字未出現在選擇器中："

# File: docs/8.x/dusk.md, line: 1160
# File: docs/master/dusk.md, line: 1160
#. type: Plain text
#, no-wrap
msgid "    $browser->assertDontSeeIn($selector, $text);\n"
msgstr "    $browser->assertDontSeeIn($selector, $text);\n"

# File: docs/8.x/dusk.md, line: 1162
# File: docs/master/dusk.md, line: 1162
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-see-anything-in\"></a>\n"
msgstr "<a name=\"assert-see-anything-in\"></a>\n"

# File: docs/8.x/dusk.md, line: 1162
# File: docs/master/dusk.md, line: 1162
#. type: Title ####
#, no-wrap
msgid "assertSeeAnythingIn"
msgstr "assertSeeAnythingIn"

# File: docs/8.x/dusk.md, line: 1165
# File: docs/master/dusk.md, line: 1165
#. type: Plain text
msgid "Assert that any text is present within the selector:"
msgstr "判斷選擇器中有包含任何文字："

# File: docs/8.x/dusk.md, line: 1167
# File: docs/master/dusk.md, line: 1167
#. type: Plain text
#, no-wrap
msgid "    $browser->assertSeeAnythingIn($selector);\n"
msgstr "    $browser->assertSeeAnythingIn($selector);\n"

# File: docs/8.x/dusk.md, line: 1169
# File: docs/master/dusk.md, line: 1169
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-see-nothing-in\"></a>\n"
msgstr "<a name=\"assert-see-nothing-in\"></a>\n"

# File: docs/8.x/dusk.md, line: 1169
# File: docs/master/dusk.md, line: 1169
#. type: Title ####
#, no-wrap
msgid "assertSeeNothingIn"
msgstr "assertSeeNothingIn"

# File: docs/8.x/dusk.md, line: 1172
# File: docs/master/dusk.md, line: 1172
#. type: Plain text
msgid "Assert that no text is present within the selector:"
msgstr "判斷選擇器中未包含任何文字："

# File: docs/8.x/dusk.md, line: 1174
# File: docs/master/dusk.md, line: 1174
#. type: Plain text
#, no-wrap
msgid "    $browser->assertSeeNothingIn($selector);\n"
msgstr "    $browser->assertSeeNothingIn($selector);\n"

# File: docs/8.x/dusk.md, line: 1176
# File: docs/master/dusk.md, line: 1176
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-script\"></a>\n"
msgstr "<a name=\"assert-script\"></a>\n"

# File: docs/8.x/dusk.md, line: 1176
# File: docs/master/dusk.md, line: 1176
#. type: Title ####
#, no-wrap
msgid "assertScript"
msgstr "assertScript"

# File: docs/8.x/dusk.md, line: 1179
# File: docs/master/dusk.md, line: 1179
#. type: Plain text
msgid "Assert that the given JavaScript expression evaluates to the given value:"
msgstr "判斷給定的 JavaScript 運算式取值為給定的值："

# File: docs/8.x/dusk.md, line: 1182
# File: docs/master/dusk.md, line: 1182
#. type: Plain text
#, no-wrap
msgid "    $browser->assertScript('window.isLoaded')\n"
"            ->assertScript('document.readyState', 'complete');\n"
msgstr "    $browser->assertScript('window.isLoaded')\n"
"            ->assertScript('document.readyState', 'complete');\n"

# File: docs/8.x/dusk.md, line: 1184
# File: docs/master/dusk.md, line: 1184
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-source-has\"></a>\n"
msgstr "<a name=\"assert-source-has\"></a>\n"

# File: docs/8.x/dusk.md, line: 1184
# File: docs/master/dusk.md, line: 1184
#. type: Title ####
#, no-wrap
msgid "assertSourceHas"
msgstr "assertSourceHas"

# File: docs/8.x/dusk.md, line: 1187
# File: docs/master/dusk.md, line: 1187
#. type: Plain text
msgid "Assert that the given source code is present on the page:"
msgstr "判斷給定的原始碼有出現在頁面上："

# File: docs/8.x/dusk.md, line: 1189
# File: docs/master/dusk.md, line: 1189
#. type: Plain text
#, no-wrap
msgid "    $browser->assertSourceHas($code);\n"
msgstr "    $browser->assertSourceHas($code);\n"

# File: docs/8.x/dusk.md, line: 1191
# File: docs/master/dusk.md, line: 1191
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-source-missing\"></a>\n"
msgstr "<a name=\"assert-source-missing\"></a>\n"

# File: docs/8.x/dusk.md, line: 1191
# File: docs/master/dusk.md, line: 1191
#. type: Title ####
#, no-wrap
msgid "assertSourceMissing"
msgstr "assertSourceMissing"

# File: docs/8.x/dusk.md, line: 1194
# File: docs/master/dusk.md, line: 1194
#. type: Plain text
msgid "Assert that the given source code is not present on the page:"
msgstr "判斷給定的原始碼未出現在頁面上："

# File: docs/8.x/dusk.md, line: 1196
# File: docs/master/dusk.md, line: 1196
#. type: Plain text
#, no-wrap
msgid "    $browser->assertSourceMissing($code);\n"
msgstr "    $browser->assertSourceMissing($code);\n"

# File: docs/8.x/dusk.md, line: 1198
# File: docs/master/dusk.md, line: 1198
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-see-link\"></a>\n"
msgstr "<a name=\"assert-see-link\"></a>\n"

# File: docs/8.x/dusk.md, line: 1198
# File: docs/master/dusk.md, line: 1198
#. type: Title ####
#, no-wrap
msgid "assertSeeLink"
msgstr "assertSeeLink"

# File: docs/8.x/dusk.md, line: 1201
# File: docs/master/dusk.md, line: 1201
#. type: Plain text
msgid "Assert that the given link is present on the page:"
msgstr "判斷給定連結有出現在頁面上："

# File: docs/8.x/dusk.md, line: 1203
# File: docs/master/dusk.md, line: 1203
#. type: Plain text
#, no-wrap
msgid "    $browser->assertSeeLink($linkText);\n"
msgstr "    $browser->assertSeeLink($linkText);\n"

# File: docs/8.x/dusk.md, line: 1205
# File: docs/master/dusk.md, line: 1205
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-dont-see-link\"></a>\n"
msgstr "<a name=\"assert-dont-see-link\"></a>\n"

# File: docs/8.x/dusk.md, line: 1205
# File: docs/master/dusk.md, line: 1205
#. type: Title ####
#, no-wrap
msgid "assertDontSeeLink"
msgstr "assertDontSeeLink"

# File: docs/8.x/dusk.md, line: 1208
# File: docs/master/dusk.md, line: 1208
#. type: Plain text
msgid "Assert that the given link is not present on the page:"
msgstr "判斷給定連結未出現在頁面上："

# File: docs/8.x/dusk.md, line: 1210
# File: docs/master/dusk.md, line: 1210
#. type: Plain text
#, no-wrap
msgid "    $browser->assertDontSeeLink($linkText);\n"
msgstr "    $browser->assertDontSeeLink($linkText);\n"

# File: docs/8.x/dusk.md, line: 1212
# File: docs/master/dusk.md, line: 1212
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-input-value\"></a>\n"
msgstr "<a name=\"assert-input-value\"></a>\n"

# File: docs/8.x/dusk.md, line: 1212
# File: docs/master/dusk.md, line: 1212
#. type: Title ####
#, no-wrap
msgid "assertInputValue"
msgstr "assertInputValue"

# File: docs/8.x/dusk.md, line: 1215
# File: docs/master/dusk.md, line: 1215
#. type: Plain text
msgid "Assert that the given input field has the given value:"
msgstr "判斷給定的輸入欄位為給定值："

# File: docs/8.x/dusk.md, line: 1217
# File: docs/master/dusk.md, line: 1217
#. type: Plain text
#, no-wrap
msgid "    $browser->assertInputValue($field, $value);\n"
msgstr "    $browser->assertInputValue($field, $value);\n"

# File: docs/8.x/dusk.md, line: 1219
# File: docs/master/dusk.md, line: 1219
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-input-value-is-not\"></a>\n"
msgstr "<a name=\"assert-input-value-is-not\"></a>\n"

# File: docs/8.x/dusk.md, line: 1219
# File: docs/master/dusk.md, line: 1219
#. type: Title ####
#, no-wrap
msgid "assertInputValueIsNot"
msgstr "assertInputValueIsNot"

# File: docs/8.x/dusk.md, line: 1222
# File: docs/master/dusk.md, line: 1222
#. type: Plain text
msgid "Assert that the given input field does not have the given value:"
msgstr "判斷給定的輸入欄位不是給定值："

# File: docs/8.x/dusk.md, line: 1224
# File: docs/master/dusk.md, line: 1224
#. type: Plain text
#, no-wrap
msgid "    $browser->assertInputValueIsNot($field, $value);\n"
msgstr "    $browser->assertInputValueIsNot($field, $value);\n"

# File: docs/8.x/dusk.md, line: 1226
# File: docs/master/dusk.md, line: 1226
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-checked\"></a>\n"
msgstr "<a name=\"assert-checked\"></a>\n"

# File: docs/8.x/dusk.md, line: 1226
# File: docs/master/dusk.md, line: 1226
#. type: Title ####
#, no-wrap
msgid "assertChecked"
msgstr "assertChecked"

# File: docs/8.x/dusk.md, line: 1229
# File: docs/master/dusk.md, line: 1229
#. type: Plain text
msgid "Assert that the given checkbox is checked:"
msgstr "判斷給定多選況已勾選："

# File: docs/8.x/dusk.md, line: 1231
# File: docs/master/dusk.md, line: 1231
#. type: Plain text
#, no-wrap
msgid "    $browser->assertChecked($field);\n"
msgstr "    $browser->assertChecked($field);\n"

# File: docs/8.x/dusk.md, line: 1233
# File: docs/master/dusk.md, line: 1233
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-not-checked\"></a>\n"
msgstr "<a name=\"assert-not-checked\"></a>\n"

# File: docs/8.x/dusk.md, line: 1233
# File: docs/master/dusk.md, line: 1233
#. type: Title ####
#, no-wrap
msgid "assertNotChecked"
msgstr "assertNotChecked"

# File: docs/8.x/dusk.md, line: 1236
# File: docs/master/dusk.md, line: 1236
#. type: Plain text
msgid "Assert that the given checkbox is not checked:"
msgstr "判斷給定多選況未勾選："

# File: docs/8.x/dusk.md, line: 1238
# File: docs/master/dusk.md, line: 1238
#. type: Plain text
#, no-wrap
msgid "    $browser->assertNotChecked($field);\n"
msgstr "    $browser->assertNotChecked($field);\n"

# File: docs/8.x/dusk.md, line: 1240
# File: docs/master/dusk.md, line: 1240
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-radio-selected\"></a>\n"
msgstr "<a name=\"assert-radio-selected\"></a>\n"

# File: docs/8.x/dusk.md, line: 1240
# File: docs/master/dusk.md, line: 1240
#. type: Title ####
#, no-wrap
msgid "assertRadioSelected"
msgstr "assertRadioSelected"

# File: docs/8.x/dusk.md, line: 1243
# File: docs/master/dusk.md, line: 1243
#. type: Plain text
msgid "Assert that the given radio field is selected:"
msgstr "判斷給定單選框欄位已選擇："

# File: docs/8.x/dusk.md, line: 1245
# File: docs/master/dusk.md, line: 1245
#. type: Plain text
#, no-wrap
msgid "    $browser->assertRadioSelected($field, $value);\n"
msgstr "    $browser->assertRadioSelected($field, $value);\n"

# File: docs/8.x/dusk.md, line: 1247
# File: docs/master/dusk.md, line: 1247
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-radio-not-selected\"></a>\n"
msgstr "<a name=\"assert-radio-not-selected\"></a>\n"

# File: docs/8.x/dusk.md, line: 1247
# File: docs/master/dusk.md, line: 1247
#. type: Title ####
#, no-wrap
msgid "assertRadioNotSelected"
msgstr "assertRadioNotSelected"

# File: docs/8.x/dusk.md, line: 1250
# File: docs/master/dusk.md, line: 1250
#. type: Plain text
msgid "Assert that the given radio field is not selected:"
msgstr "判斷給定單選框欄位未選擇："

# File: docs/8.x/dusk.md, line: 1252
# File: docs/master/dusk.md, line: 1252
#. type: Plain text
#, no-wrap
msgid "    $browser->assertRadioNotSelected($field, $value);\n"
msgstr "    $browser->assertRadioNotSelected($field, $value);\n"

# File: docs/8.x/dusk.md, line: 1254
# File: docs/master/dusk.md, line: 1254
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-selected\"></a>\n"
msgstr "<a name=\"assert-selected\"></a>\n"

# File: docs/8.x/dusk.md, line: 1254
# File: docs/master/dusk.md, line: 1254
#. type: Title ####
#, no-wrap
msgid "assertSelected"
msgstr "assertSelected"

# File: docs/8.x/dusk.md, line: 1257
# File: docs/master/dusk.md, line: 1257
#. type: Plain text
msgid "Assert that the given dropdown has the given value selected:"
msgstr "判斷給定下拉選單已選擇給定值："

# File: docs/8.x/dusk.md, line: 1259
# File: docs/master/dusk.md, line: 1259
#. type: Plain text
#, no-wrap
msgid "    $browser->assertSelected($field, $value);\n"
msgstr "    $browser->assertSelected($field, $value);\n"

# File: docs/8.x/dusk.md, line: 1261
# File: docs/master/dusk.md, line: 1261
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-not-selected\"></a>\n"
msgstr "<a name=\"assert-not-selected\"></a>\n"

# File: docs/8.x/dusk.md, line: 1261
# File: docs/master/dusk.md, line: 1261
#. type: Title ####
#, no-wrap
msgid "assertNotSelected"
msgstr "assertNotSelected"

# File: docs/8.x/dusk.md, line: 1264
# File: docs/master/dusk.md, line: 1264
#. type: Plain text
msgid "Assert that the given dropdown does not have the given value selected:"
msgstr "判斷給定下拉選單未選擇給定值："

# File: docs/8.x/dusk.md, line: 1266
# File: docs/master/dusk.md, line: 1266
#. type: Plain text
#, no-wrap
msgid "    $browser->assertNotSelected($field, $value);\n"
msgstr "    $browser->assertNotSelected($field, $value);\n"

# File: docs/8.x/dusk.md, line: 1268
# File: docs/master/dusk.md, line: 1268
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-select-has-options\"></a>\n"
msgstr "<a name=\"assert-select-has-options\"></a>\n"

# File: docs/8.x/dusk.md, line: 1268
# File: docs/master/dusk.md, line: 1268
#. type: Title ####
#, no-wrap
msgid "assertSelectHasOptions"
msgstr "assertSelectHasOptions"

# File: docs/8.x/dusk.md, line: 1271
# File: docs/master/dusk.md, line: 1271
#. type: Plain text
msgid "Assert that the given array of values are available to be selected:"
msgstr "判斷給定陣列中的值可被選取："

# File: docs/8.x/dusk.md, line: 1273
# File: docs/master/dusk.md, line: 1273
#. type: Plain text
#, no-wrap
msgid "    $browser->assertSelectHasOptions($field, $values);\n"
msgstr "    $browser->assertSelectHasOptions($field, $values);\n"

# File: docs/8.x/dusk.md, line: 1275
# File: docs/master/dusk.md, line: 1275
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-select-missing-options\"></a>\n"
msgstr "<a name=\"assert-select-missing-options\"></a>\n"

# File: docs/8.x/dusk.md, line: 1275
# File: docs/master/dusk.md, line: 1275
#. type: Title ####
#, no-wrap
msgid "assertSelectMissingOptions"
msgstr "assertSelectMissingOptions"

# File: docs/8.x/dusk.md, line: 1278
# File: docs/master/dusk.md, line: 1278
#. type: Plain text
msgid "Assert that the given array of values are not available to be selected:"
msgstr "判斷給定陣列中的值不可被選取："

# File: docs/8.x/dusk.md, line: 1280
# File: docs/master/dusk.md, line: 1280
#. type: Plain text
#, no-wrap
msgid "    $browser->assertSelectMissingOptions($field, $values);\n"
msgstr "    $browser->assertSelectMissingOptions($field, $values);\n"

# File: docs/8.x/dusk.md, line: 1282
# File: docs/master/dusk.md, line: 1282
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-select-has-option\"></a>\n"
msgstr "<a name=\"assert-select-has-option\"></a>\n"

# File: docs/8.x/dusk.md, line: 1282
# File: docs/master/dusk.md, line: 1282
#. type: Title ####
#, no-wrap
msgid "assertSelectHasOption"
msgstr "assertSelectHasOption"

# File: docs/8.x/dusk.md, line: 1285
# File: docs/master/dusk.md, line: 1285
#. type: Plain text
msgid "Assert that the given value is available to be selected on the given field:"
msgstr "判斷給定值在給定欄位中可被選取："

# File: docs/8.x/dusk.md, line: 1287
# File: docs/master/dusk.md, line: 1287
#. type: Plain text
#, no-wrap
msgid "    $browser->assertSelectHasOption($field, $value);\n"
msgstr "    $browser->assertSelectHasOption($field, $value);\n"

# File: docs/8.x/dusk.md, line: 1289
# File: docs/master/dusk.md, line: 1289
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-select-missing-option\"></a>\n"
msgstr "<a name=\"assert-select-missing-option\"></a>\n"

# File: docs/8.x/dusk.md, line: 1289
# File: docs/master/dusk.md, line: 1289
#. type: Title ####
#, no-wrap
msgid "assertSelectMissingOption"
msgstr "assertSelectMissingOption"

# File: docs/8.x/dusk.md, line: 1292
# File: docs/master/dusk.md, line: 1292
#. type: Plain text
msgid "Assert that the given value is not available to be selected:"
msgstr "判斷給定值不可被選取："

# File: docs/8.x/dusk.md, line: 1294
# File: docs/master/dusk.md, line: 1294
#. type: Plain text
#, no-wrap
msgid "    $browser->assertSelectMissingOption($field, $value);\n"
msgstr "    $browser->assertSelectMissingOption($field, $value);\n"

# File: docs/8.x/dusk.md, line: 1296
# File: docs/master/dusk.md, line: 1296
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-value\"></a>\n"
msgstr "<a name=\"assert-value\"></a>\n"

# File: docs/8.x/dusk.md, line: 1296
# File: docs/master/dusk.md, line: 1296
#. type: Title ####
#, no-wrap
msgid "assertValue"
msgstr "assertValue"

# File: docs/8.x/dusk.md, line: 1299
# File: docs/master/dusk.md, line: 1299
#. type: Plain text
msgid "Assert that the element matching the given selector has the given value:"
msgstr "判斷符合給定選擇器的元素符合給定值："

# File: docs/8.x/dusk.md, line: 1301
# File: docs/master/dusk.md, line: 1301
#. type: Plain text
#, no-wrap
msgid "    $browser->assertValue($selector, $value);\n"
msgstr "    $browser->assertValue($selector, $value);\n"

# File: docs/8.x/dusk.md, line: 1303
# File: docs/master/dusk.md, line: 1303
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-value-is-not\"></a>\n"
msgstr "<a name=\"assert-value-is-not\"></a>\n"

# File: docs/8.x/dusk.md, line: 1303
# File: docs/master/dusk.md, line: 1303
#. type: Title ####
#, no-wrap
msgid "assertValueIsNot"
msgstr "assertValueIsNot"

# File: docs/8.x/dusk.md, line: 1306
# File: docs/master/dusk.md, line: 1306
#. type: Plain text
msgid "Assert that the element matching the given selector does not have the given value:"
msgstr "判斷符合給定選擇器的元素不符合給定值："

# File: docs/8.x/dusk.md, line: 1308
# File: docs/master/dusk.md, line: 1308
#. type: Plain text
#, no-wrap
msgid "    $browser->assertValueIsNot($selector, $value);\n"
msgstr "    $browser->assertValueIsNot($selector, $value);\n"

# File: docs/8.x/dusk.md, line: 1310
# File: docs/master/dusk.md, line: 1310
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-attribute\"></a>\n"
msgstr "<a name=\"assert-attribute\"></a>\n"

# File: docs/8.x/dusk.md, line: 1310
# File: docs/master/dusk.md, line: 1310
#. type: Title ####
#, no-wrap
msgid "assertAttribute"
msgstr "assertAttribute"

# File: docs/8.x/dusk.md, line: 1313
# File: docs/master/dusk.md, line: 1313
#. type: Plain text
msgid "Assert that the element matching the given selector has the given value in the provided attribute:"
msgstr "判斷符合給定選擇器的元素中指定的屬性為給定值："

# File: docs/8.x/dusk.md, line: 1315
# File: docs/master/dusk.md, line: 1315
#. type: Plain text
#, no-wrap
msgid "    $browser->assertAttribute($selector, $attribute, $value);\n"
msgstr "    $browser->assertAttribute($selector, $attribute, $value);\n"

# File: docs/8.x/dusk.md, line: 1317
# File: docs/master/dusk.md, line: 1317
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-attribute-contains\"></a>\n"
msgstr "<a name=\"assert-attribute-contains\"></a>\n"

# File: docs/8.x/dusk.md, line: 1317
# File: docs/master/dusk.md, line: 1317
#. type: Title ####
#, no-wrap
msgid "assertAttributeContains"
msgstr "assertAttributeContains"

# File: docs/8.x/dusk.md, line: 1320
# File: docs/master/dusk.md, line: 1320
#. type: Plain text
msgid "Assert that the element matching the given selector contains the given value in the provided attribute:"
msgstr "判斷符合給定選擇器的元素中指定的屬性包含給定值："

# File: docs/8.x/dusk.md, line: 1322
# File: docs/master/dusk.md, line: 1322
#. type: Plain text
#, no-wrap
msgid "    $browser->assertAttributeContains($selector, $attribute, $value);\n"
msgstr "    $browser->assertAttributeContains($selector, $attribute, $value);\n"

# File: docs/8.x/dusk.md, line: 1324
# File: docs/master/dusk.md, line: 1324
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-aria-attribute\"></a>\n"
msgstr "<a name=\"assert-aria-attribute\"></a>\n"

# File: docs/8.x/dusk.md, line: 1324
# File: docs/master/dusk.md, line: 1324
#. type: Title ####
#, no-wrap
msgid "assertAriaAttribute"
msgstr "assertAriaAttribute"

# File: docs/8.x/dusk.md, line: 1327
# File: docs/master/dusk.md, line: 1327
#. type: Plain text
msgid "Assert that the element matching the given selector has the given value in the provided aria attribute:"
msgstr "判斷符合給定選擇器的元素中指定的 Aria 屬性為給定值："

# File: docs/8.x/dusk.md, line: 1329
# File: docs/master/dusk.md, line: 1329
#. type: Plain text
#, no-wrap
msgid "    $browser->assertAriaAttribute($selector, $attribute, $value);\n"
msgstr "    $browser->assertAriaAttribute($selector, $attribute, $value);\n"

# File: docs/8.x/dusk.md, line: 1331
# File: docs/master/dusk.md, line: 1331
#. type: Plain text
#, no-wrap
msgid "For example, given the markup `<button aria-label=\"Add\"></button>`, you may assert against the `aria-label` attribute like so:\n"
msgstr "舉例來說，若有 `<button aria-label=\"Add\">` 標記，則可像這樣判斷 `aria-label` 屬性：\n"

# File: docs/8.x/dusk.md, line: 1333
# File: docs/master/dusk.md, line: 1333
#. type: Plain text
#, no-wrap
msgid "    $browser->assertAriaAttribute('button', 'label', 'Add')\n"
msgstr "    $browser->assertAriaAttribute('button', 'label', 'Add')\n"

# File: docs/8.x/dusk.md, line: 1335
# File: docs/master/dusk.md, line: 1335
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-data-attribute\"></a>\n"
msgstr "<a name=\"assert-data-attribute\"></a>\n"

# File: docs/8.x/dusk.md, line: 1335
# File: docs/master/dusk.md, line: 1335
#. type: Title ####
#, no-wrap
msgid "assertDataAttribute"
msgstr "assertDataAttribute"

# File: docs/8.x/dusk.md, line: 1338
# File: docs/master/dusk.md, line: 1338
#. type: Plain text
msgid "Assert that the element matching the given selector has the given value in the provided data attribute:"
msgstr "判斷符合給定選擇器的元素中指定的 Data 屬性為給定值："

# File: docs/8.x/dusk.md, line: 1340
# File: docs/master/dusk.md, line: 1340
#. type: Plain text
#, no-wrap
msgid "    $browser->assertDataAttribute($selector, $attribute, $value);\n"
msgstr "    $browser->assertDataAttribute($selector, $attribute, $value);\n"

# File: docs/8.x/dusk.md, line: 1342
# File: docs/master/dusk.md, line: 1342
#. type: Plain text
#, no-wrap
msgid "For example, given the markup `<tr id=\"row-1\" data-content=\"attendees\"></tr>`, you may assert against the `data-label` attribute like so:\n"
msgstr "舉例來說，若有 `<tr id=\"row-1\" data-content=\"attendees\"></tr>` 標記，則可像這樣判斷 `data-label` 屬性：\n"

# File: docs/8.x/dusk.md, line: 1344
# File: docs/master/dusk.md, line: 1344
#. type: Plain text
#, no-wrap
msgid "    $browser->assertDataAttribute('#row-1', 'content', 'attendees')\n"
msgstr "    $browser->assertDataAttribute('#row-1', 'content', 'attendees')\n"

# File: docs/8.x/dusk.md, line: 1346
# File: docs/master/dusk.md, line: 1346
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-visible\"></a>\n"
msgstr "<a name=\"assert-visible\"></a>\n"

# File: docs/8.x/dusk.md, line: 1346
# File: docs/master/dusk.md, line: 1346
#. type: Title ####
#, no-wrap
msgid "assertVisible"
msgstr "assertVisible"

# File: docs/8.x/dusk.md, line: 1349
# File: docs/master/dusk.md, line: 1349
#. type: Plain text
msgid "Assert that the element matching the given selector is visible:"
msgstr "判斷符合給定選擇器的元素可見："

# File: docs/8.x/dusk.md, line: 1351
# File: docs/master/dusk.md, line: 1351
#. type: Plain text
#, no-wrap
msgid "    $browser->assertVisible($selector);\n"
msgstr "    $browser->assertVisible($selector);\n"

# File: docs/8.x/dusk.md, line: 1353
# File: docs/master/dusk.md, line: 1353
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-present\"></a>\n"
msgstr "<a name=\"assert-present\"></a>\n"

# File: docs/8.x/dusk.md, line: 1353
# File: docs/master/dusk.md, line: 1353
#. type: Title ####
#, no-wrap
msgid "assertPresent"
msgstr "assertPresent"

# File: docs/8.x/dusk.md, line: 1356
# File: docs/master/dusk.md, line: 1356
#. type: Plain text
msgid "Assert that the element matching the given selector is present in the source:"
msgstr "判斷符合給定選擇器的元素存在於原始碼中："

# File: docs/8.x/dusk.md, line: 1358
# File: docs/master/dusk.md, line: 1358
#. type: Plain text
#, no-wrap
msgid "    $browser->assertPresent($selector);\n"
msgstr "    $browser->assertPresent($selector);\n"

# File: docs/8.x/dusk.md, line: 1360
# File: docs/master/dusk.md, line: 1360
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-not-present\"></a>\n"
msgstr "<a name=\"assert-not-present\"></a>\n"

# File: docs/8.x/dusk.md, line: 1360
# File: docs/master/dusk.md, line: 1360
#. type: Title ####
#, no-wrap
msgid "assertNotPresent"
msgstr "assertNotPresent"

# File: docs/8.x/dusk.md, line: 1363
# File: docs/master/dusk.md, line: 1363
#. type: Plain text
msgid "Assert that the element matching the given selector is not present in the source:"
msgstr "判斷符合給定選擇器的元素不存在於原始碼中："

# File: docs/8.x/dusk.md, line: 1365
# File: docs/master/dusk.md, line: 1365
#. type: Plain text
#, no-wrap
msgid "    $browser->assertNotPresent($selector);\n"
msgstr "    $browser->assertNotPresent($selector);\n"

# File: docs/8.x/dusk.md, line: 1367
# File: docs/master/dusk.md, line: 1367
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-missing\"></a>\n"
msgstr "<a name=\"assert-missing\"></a>\n"

# File: docs/8.x/dusk.md, line: 1367
# File: docs/master/dusk.md, line: 1367
#. type: Title ####
#, no-wrap
msgid "assertMissing"
msgstr "assertMissing"

# File: docs/8.x/dusk.md, line: 1370
# File: docs/master/dusk.md, line: 1370
#. type: Plain text
msgid "Assert that the element matching the given selector is not visible:"
msgstr "判斷符合給定選擇器的元素不可見："

# File: docs/8.x/dusk.md, line: 1372
# File: docs/master/dusk.md, line: 1372
#. type: Plain text
#, no-wrap
msgid "    $browser->assertMissing($selector);\n"
msgstr "    $browser->assertMissing($selector);\n"

# File: docs/8.x/dusk.md, line: 1374
# File: docs/master/dusk.md, line: 1374
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-input-present\"></a>\n"
msgstr "<a name=\"assert-input-present\"></a>\n"

# File: docs/8.x/dusk.md, line: 1374
# File: docs/master/dusk.md, line: 1374
#. type: Title ####
#, no-wrap
msgid "assertInputPresent"
msgstr "assertInputPresent"

# File: docs/8.x/dusk.md, line: 1377
# File: docs/master/dusk.md, line: 1377
#. type: Plain text
msgid "Assert that an input with the given name is present:"
msgstr "判斷給定名稱的輸入欄位存在："

# File: docs/8.x/dusk.md, line: 1379
# File: docs/master/dusk.md, line: 1379
#. type: Plain text
#, no-wrap
msgid "    $browser->assertInputPresent($name);\n"
msgstr "    $browser->assertInputPresent($name);\n"

# File: docs/8.x/dusk.md, line: 1381
# File: docs/master/dusk.md, line: 1381
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-input-missing\"></a>\n"
msgstr "<a name=\"assert-input-missing\"></a>\n"

# File: docs/8.x/dusk.md, line: 1381
# File: docs/master/dusk.md, line: 1381
#. type: Title ####
#, no-wrap
msgid "assertInputMissing"
msgstr "assertInputMissing"

# File: docs/8.x/dusk.md, line: 1384
# File: docs/master/dusk.md, line: 1384
#. type: Plain text
msgid "Assert that an input with the given name is not present in the source:"
msgstr "判斷給定名稱的輸入欄位不存在："

# File: docs/8.x/dusk.md, line: 1386
# File: docs/master/dusk.md, line: 1386
#. type: Plain text
#, no-wrap
msgid "    $browser->assertInputMissing($name);\n"
msgstr "    $browser->assertInputMissing($name);\n"

# File: docs/8.x/dusk.md, line: 1388
# File: docs/master/dusk.md, line: 1388
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-dialog-opened\"></a>\n"
msgstr "<a name=\"assert-dialog-opened\"></a>\n"

# File: docs/8.x/dusk.md, line: 1388
# File: docs/master/dusk.md, line: 1388
#. type: Title ####
#, no-wrap
msgid "assertDialogOpened"
msgstr "assertDialogOpened"

# File: docs/8.x/dusk.md, line: 1391
# File: docs/master/dusk.md, line: 1391
#. type: Plain text
msgid "Assert that a JavaScript dialog with the given message has been opened:"
msgstr "判斷有給定訊息的 JavaScript 對話方塊開啟："

# File: docs/8.x/dusk.md, line: 1393
# File: docs/master/dusk.md, line: 1393
#. type: Plain text
#, no-wrap
msgid "    $browser->assertDialogOpened($message);\n"
msgstr "    $browser->assertDialogOpened($message);\n"

# File: docs/8.x/dusk.md, line: 1395
# File: docs/master/dusk.md, line: 1395
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-enabled\"></a>\n"
msgstr "<a name=\"assert-enabled\"></a>\n"

# File: docs/8.x/dusk.md, line: 1395
# File: docs/master/dusk.md, line: 1395
#. type: Title ####
#, no-wrap
msgid "assertEnabled"
msgstr "assertEnabled"

# File: docs/8.x/dusk.md, line: 1398
# File: docs/master/dusk.md, line: 1398
#. type: Plain text
msgid "Assert that the given field is enabled:"
msgstr "判斷給定欄位啟用："

# File: docs/8.x/dusk.md, line: 1400
# File: docs/master/dusk.md, line: 1400
#. type: Plain text
#, no-wrap
msgid "    $browser->assertEnabled($field);\n"
msgstr "    $browser->assertEnabled($field);\n"

# File: docs/8.x/dusk.md, line: 1402
# File: docs/master/dusk.md, line: 1402
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-disabled\"></a>\n"
msgstr "<a name=\"assert-disabled\"></a>\n"

# File: docs/8.x/dusk.md, line: 1402
# File: docs/master/dusk.md, line: 1402
#. type: Title ####
#, no-wrap
msgid "assertDisabled"
msgstr "assertDisabled"

# File: docs/8.x/dusk.md, line: 1405
# File: docs/master/dusk.md, line: 1405
#. type: Plain text
msgid "Assert that the given field is disabled:"
msgstr "判斷給定欄位禁用："

# File: docs/8.x/dusk.md, line: 1407
# File: docs/master/dusk.md, line: 1407
#. type: Plain text
#, no-wrap
msgid "    $browser->assertDisabled($field);\n"
msgstr "    $browser->assertDisabled($field);\n"

# File: docs/8.x/dusk.md, line: 1409
# File: docs/master/dusk.md, line: 1409
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-button-enabled\"></a>\n"
msgstr "<a name=\"assert-button-enabled\"></a>\n"

# File: docs/8.x/dusk.md, line: 1409
# File: docs/master/dusk.md, line: 1409
#. type: Title ####
#, no-wrap
msgid "assertButtonEnabled"
msgstr "assertButtonEnabled"

# File: docs/8.x/dusk.md, line: 1412
# File: docs/master/dusk.md, line: 1412
#. type: Plain text
msgid "Assert that the given button is enabled:"
msgstr "判斷給定按鈕啟用："

# File: docs/8.x/dusk.md, line: 1414
# File: docs/master/dusk.md, line: 1414
#. type: Plain text
#, no-wrap
msgid "    $browser->assertButtonEnabled($button);\n"
msgstr "    $browser->assertButtonEnabled($button);\n"

# File: docs/8.x/dusk.md, line: 1416
# File: docs/master/dusk.md, line: 1416
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-button-disabled\"></a>\n"
msgstr "<a name=\"assert-button-disabled\"></a>\n"

# File: docs/8.x/dusk.md, line: 1416
# File: docs/master/dusk.md, line: 1416
#. type: Title ####
#, no-wrap
msgid "assertButtonDisabled"
msgstr "assertButtonDisabled"

# File: docs/8.x/dusk.md, line: 1419
# File: docs/master/dusk.md, line: 1419
#. type: Plain text
msgid "Assert that the given button is disabled:"
msgstr "判斷給定按鈕禁用："

# File: docs/8.x/dusk.md, line: 1421
# File: docs/master/dusk.md, line: 1421
#. type: Plain text
#, no-wrap
msgid "    $browser->assertButtonDisabled($button);\n"
msgstr "    $browser->assertButtonDisabled($button);\n"

# File: docs/8.x/dusk.md, line: 1423
# File: docs/master/dusk.md, line: 1423
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-focused\"></a>\n"
msgstr "<a name=\"assert-focused\"></a>\n"

# File: docs/8.x/dusk.md, line: 1423
# File: docs/master/dusk.md, line: 1423
#. type: Title ####
#, no-wrap
msgid "assertFocused"
msgstr "assertFocused"

# File: docs/8.x/dusk.md, line: 1426
# File: docs/master/dusk.md, line: 1426
#. type: Plain text
msgid "Assert that the given field is focused:"
msgstr "判斷給定欄位已聚焦："

# File: docs/8.x/dusk.md, line: 1428
# File: docs/master/dusk.md, line: 1428
#. type: Plain text
#, no-wrap
msgid "    $browser->assertFocused($field);\n"
msgstr "    $browser->assertFocused($field);\n"

# File: docs/8.x/dusk.md, line: 1430
# File: docs/master/dusk.md, line: 1430
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-not-focused\"></a>\n"
msgstr "<a name=\"assert-not-focused\"></a>\n"

# File: docs/8.x/dusk.md, line: 1430
# File: docs/master/dusk.md, line: 1430
#. type: Title ####
#, no-wrap
msgid "assertNotFocused"
msgstr "assertNotFocused"

# File: docs/8.x/dusk.md, line: 1433
# File: docs/master/dusk.md, line: 1433
#. type: Plain text
msgid "Assert that the given field is not focused:"
msgstr "判斷給定欄位未聚焦："

# File: docs/8.x/dusk.md, line: 1435
# File: docs/master/dusk.md, line: 1435
#. type: Plain text
#, no-wrap
msgid "    $browser->assertNotFocused($field);\n"
msgstr "    $browser->assertNotFocused($field);\n"

# File: docs/8.x/dusk.md, line: 1437
# File: docs/master/dusk.md, line: 1437
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-authenticated\"></a>\n"
msgstr "<a name=\"assert-authenticated\"></a>\n"

# File: docs/8.x/dusk.md, line: 1437
# File: docs/master/dusk.md, line: 1437
#. type: Title ####
#, no-wrap
msgid "assertAuthenticated"
msgstr "assertAuthenticated"

# File: docs/8.x/dusk.md, line: 1440
# File: docs/master/dusk.md, line: 1440
#. type: Plain text
msgid "Assert that the user is authenticated:"
msgstr "判斷使用者已登入："

# File: docs/8.x/dusk.md, line: 1442
# File: docs/master/dusk.md, line: 1442
#. type: Plain text
#, no-wrap
msgid "    $browser->assertAuthenticated();\n"
msgstr "    $browser->assertAuthenticated();\n"

# File: docs/8.x/dusk.md, line: 1444
# File: docs/master/dusk.md, line: 1444
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-guest\"></a>\n"
msgstr "<a name=\"assert-guest\"></a>\n"

# File: docs/8.x/dusk.md, line: 1444
# File: docs/master/dusk.md, line: 1444
#. type: Title ####
#, no-wrap
msgid "assertGuest"
msgstr "assertGuest"

# File: docs/8.x/dusk.md, line: 1447
# File: docs/master/dusk.md, line: 1447
#. type: Plain text
msgid "Assert that the user is not authenticated:"
msgstr "判斷使用者未登入："

# File: docs/8.x/dusk.md, line: 1449
# File: docs/master/dusk.md, line: 1449
#. type: Plain text
#, no-wrap
msgid "    $browser->assertGuest();\n"
msgstr "    $browser->assertGuest();\n"

# File: docs/8.x/dusk.md, line: 1451
# File: docs/master/dusk.md, line: 1451
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-authenticated-as\"></a>\n"
msgstr "<a name=\"assert-authenticated-as\"></a>\n"

# File: docs/8.x/dusk.md, line: 1451
# File: docs/master/dusk.md, line: 1451
#. type: Title ####
#, no-wrap
msgid "assertAuthenticatedAs"
msgstr "assertAuthenticatedAs"

# File: docs/8.x/dusk.md, line: 1454
# File: docs/master/dusk.md, line: 1454
#. type: Plain text
msgid "Assert that the user is authenticated as the given user:"
msgstr "判斷使用者已登入為給定使用者："

# File: docs/8.x/dusk.md, line: 1456
# File: docs/master/dusk.md, line: 1456
#. type: Plain text
#, no-wrap
msgid "    $browser->assertAuthenticatedAs($user);\n"
msgstr "    $browser->assertAuthenticatedAs($user);\n"

# File: docs/8.x/dusk.md, line: 1458
# File: docs/master/dusk.md, line: 1458
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-vue\"></a>\n"
msgstr "<a name=\"assert-vue\"></a>\n"

# File: docs/8.x/dusk.md, line: 1458
# File: docs/master/dusk.md, line: 1458
#. type: Title ####
#, no-wrap
msgid "assertVue"
msgstr "assertVue"

# File: docs/8.x/dusk.md, line: 1461
# File: docs/master/dusk.md, line: 1461
#. type: Plain text
msgid "Dusk even allows you to make assertions on the state of [Vue component](https://vuejs.org) data. For example, imagine your application contains the following Vue component:"
msgstr "在 Dusk 中，甚至可以對 [Vue 元件](https://vuejs.org) 資料的狀態進行 Assertion。舉例來說，假設網站中包含下列 Vue 元件："

# File: docs/8.x/dusk.md, line: 1465
# File: docs/master/dusk.md, line: 1465
#. type: Plain text
#, no-wrap
msgid "    <profile dusk=\"profile-component\"></profile>\n"
msgstr "    <profile dusk=\"profile-component\"></profile>\n"

# File: docs/8.x/dusk.md, line: 1467
# File: docs/master/dusk.md, line: 1467
#. type: Plain text
#, no-wrap
msgid "    // Component Definition...\n"
msgstr "    // 元件定義...\n"

# File: docs/8.x/dusk.md, line: 1470
# File: docs/master/dusk.md, line: 1470
#. type: Plain text
#, no-wrap
msgid "    Vue.component('profile', {\n"
"        template: '<div>{{ user.name }}</div>',\n"
msgstr "    Vue.component('profile', {\n"
"        template: '<div>{{ user.name }}</div>',\n"

# File: docs/8.x/dusk.md, line: 1479
# File: docs/master/dusk.md, line: 1479
#. type: Plain text
#, no-wrap
msgid "        data: function () {\n"
"            return {\n"
"                user: {\n"
"                    name: 'Taylor'\n"
"                }\n"
"            };\n"
"        }\n"
"    });\n"
msgstr "        data: function () {\n"
"            return {\n"
"                user: {\n"
"                    name: 'Taylor'\n"
"                }\n"
"            };\n"
"        }\n"
"    });\n"

# File: docs/8.x/dusk.md, line: 1481
# File: docs/master/dusk.md, line: 1481
#. type: Plain text
msgid "You may assert on the state of the Vue component like so:"
msgstr "則可像這樣判斷 Vue 元件的狀態："

# File: docs/8.x/dusk.md, line: 1494
# File: docs/master/dusk.md, line: 1494
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * A basic Vue test example.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function testVue()\n"
"    {\n"
"        $this->browse(function (Browser $browser) {\n"
"            $browser->visit('/')\n"
"                    ->assertVue('user.name', 'Taylor', '@profile-component');\n"
"        });\n"
"    }\n"
msgstr "    /**\n"
"     * A basic Vue test example.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function testVue()\n"
"    {\n"
"        $this->browse(function (Browser $browser) {\n"
"            $browser->visit('/')\n"
"                    ->assertVue('user.name', 'Taylor', '@profile-component');\n"
"        });\n"
"    }\n"

# File: docs/8.x/dusk.md, line: 1496
# File: docs/master/dusk.md, line: 1496
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-vue-is-not\"></a>\n"
msgstr "<a name=\"assert-vue-is-not\"></a>\n"

# File: docs/8.x/dusk.md, line: 1496
# File: docs/master/dusk.md, line: 1496
#. type: Title ####
#, no-wrap
msgid "assertVueIsNot"
msgstr "assertVueIsNot"

# File: docs/8.x/dusk.md, line: 1499
# File: docs/master/dusk.md, line: 1499
#. type: Plain text
msgid "Assert that a given Vue component data property does not match the given value:"
msgstr "判斷給定的 Vue 元件資料屬性不符合給定值："

# File: docs/8.x/dusk.md, line: 1501
# File: docs/master/dusk.md, line: 1501
#. type: Plain text
#, no-wrap
msgid "    $browser->assertVueIsNot($property, $value, $componentSelector = null);\n"
msgstr "    $browser->assertVueIsNot($property, $value, $componentSelector = null);\n"

# File: docs/8.x/dusk.md, line: 1503
# File: docs/master/dusk.md, line: 1503
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-vue-contains\"></a>\n"
msgstr "<a name=\"assert-vue-contains\"></a>\n"

# File: docs/8.x/dusk.md, line: 1503
# File: docs/master/dusk.md, line: 1503
#. type: Title ####
#, no-wrap
msgid "assertVueContains"
msgstr "assertVueContains"

# File: docs/8.x/dusk.md, line: 1506
# File: docs/master/dusk.md, line: 1506
#. type: Plain text
msgid "Assert that a given Vue component data property is an array and contains the given value:"
msgstr "判斷給定的 Vue 元件資料屬性為陣列，並包含給定值："

# File: docs/8.x/dusk.md, line: 1508
# File: docs/master/dusk.md, line: 1508
#. type: Plain text
#, no-wrap
msgid "    $browser->assertVueContains($property, $value, $componentSelector = null);\n"
msgstr "    $browser->assertVueContains($property, $value, $componentSelector = null);\n"

# File: docs/8.x/dusk.md, line: 1510
# File: docs/master/dusk.md, line: 1510
#. type: Plain text
#, no-wrap
msgid "<a name=\"assert-vue-does-not-contain\"></a>\n"
msgstr "<a name=\"assert-vue-does-not-contain\"></a>\n"

# File: docs/8.x/dusk.md, line: 1510
# File: docs/master/dusk.md, line: 1510
#. type: Title ####
#, no-wrap
msgid "assertVueDoesNotContain"
msgstr "assertVueDoesNotContain"

# File: docs/8.x/dusk.md, line: 1513
# File: docs/master/dusk.md, line: 1513
#. type: Plain text
msgid "Assert that a given Vue component data property is an array and does not contain the given value:"
msgstr "判斷給定的 Vue 元件資料屬性為陣列，並且不包含給定值："

# File: docs/8.x/dusk.md, line: 1515
# File: docs/master/dusk.md, line: 1515
#. type: Plain text
#, no-wrap
msgid "    $browser->assertVueDoesNotContain($property, $value, $componentSelector = null);\n"
msgstr "    $browser->assertVueDoesNotContain($property, $value, $componentSelector = null);\n"

# File: docs/8.x/dusk.md, line: 1517
# File: docs/master/dusk.md, line: 1517
#. type: Plain text
#, no-wrap
msgid "<a name=\"pages\"></a>\n"
msgstr "<a name=\"pages\"></a>\n"

# File: docs/8.x/dusk.md, line: 1517
# File: docs/master/dusk.md, line: 1517
#. type: Title ##
#, no-wrap
msgid "Pages"
msgstr "Page"

# File: docs/8.x/dusk.md, line: 1520
# File: docs/master/dusk.md, line: 1520
#. type: Plain text
msgid "Sometimes, tests require several complicated actions to be performed in sequence. This can make your tests harder to read and understand. Dusk Pages allow you to define expressive actions that may then be performed on a given page via a single method. Pages also allow you to define short-cuts to common selectors for your application or for a single page."
msgstr "有時候，測試可能會需要按照順序執行多個複雜的動作。這樣一來可能會使測試難以閱讀與理解。通過 Dusk Page，便可定義描述性的動作，並以單一方法來在給定頁面上執行。使用 Page 還可為網站或單一頁面上常用的選擇器定義捷徑。"

# File: docs/8.x/dusk.md, line: 1522
# File: docs/master/dusk.md, line: 1522
#. type: Plain text
#, no-wrap
msgid "<a name=\"generating-pages\"></a>\n"
msgstr "<a name=\"generating-pages\"></a>\n"

# File: docs/8.x/dusk.md, line: 1522
# File: docs/master/dusk.md, line: 1522
#. type: Title ###
#, no-wrap
msgid "Generating Pages"
msgstr "產生 Page"

# File: docs/8.x/dusk.md, line: 1525
# File: docs/master/dusk.md, line: 1525
#. type: Plain text
msgid "To generate a page object, execute the `dusk:page` Artisan command. All page objects will be placed in your application's `tests/Browser/Pages` directory:"
msgstr "若要產生 Page 物件，請執行 `dusk:page` Artisan 指令。"

# File: docs/8.x/dusk.md, line: 1527
# File: docs/master/dusk.md, line: 1527
#. type: Plain text
#, no-wrap
msgid "    php artisan dusk:page Login\n"
msgstr "    php artisan dusk:page Login\n"

# File: docs/8.x/dusk.md, line: 1529
# File: docs/master/dusk.md, line: 1529
#. type: Plain text
#, no-wrap
msgid "<a name=\"configuring-pages\"></a>\n"
msgstr "<a name=\"configuring-pages\"></a>\n"

# File: docs/8.x/dusk.md, line: 1529
# File: docs/master/dusk.md, line: 1529
#. type: Title ###
#, no-wrap
msgid "Configuring Pages"
msgstr "設定 Page"

# File: docs/8.x/dusk.md, line: 1532
# File: docs/master/dusk.md, line: 1532
#. type: Plain text
msgid "By default, pages have three methods: `url`, `assert`, and `elements`. We will discuss the `url` and `assert` methods now. The `elements` method will be [discussed in more detail below](#shorthand-selectors)."
msgstr "預設情況下，Page 有三個方法：`url`、`assert`、與 `elements`。我們現在先來討論 `url` 與 `assert` 方法。[稍後會來詳細討論](#shorthand-selectors)有關 `elements` 方法。"

# File: docs/8.x/dusk.md, line: 1534
# File: docs/master/dusk.md, line: 1534
#. type: Plain text
#, no-wrap
msgid "<a name=\"the-url-method\"></a>\n"
msgstr "<a name=\"the-url-method\"></a>\n"

# File: docs/8.x/dusk.md, line: 1534
# File: docs/master/dusk.md, line: 1534
#. type: Title ####
#, no-wrap
msgid "The `url` Method"
msgstr "`url` 方法"

# File: docs/8.x/dusk.md, line: 1537
# File: docs/master/dusk.md, line: 1537
#. type: Plain text
msgid "The `url` method should return the path of the URL that represents the page. Dusk will use this URL when navigating to the page in the browser:"
msgstr "`url` 方法應回傳代表該 Page 的 URL 之路徑。在瀏覽器中前往該頁面時，Dusk 會使用該 URL："

# File: docs/8.x/dusk.md, line: 1547
# File: docs/master/dusk.md, line: 1547
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the URL for the page.\n"
"     *\n"
"     * @return string\n"
"     */\n"
"    public function url()\n"
"    {\n"
"        return '/login';\n"
"    }\n"
msgstr "    /**\n"
"     * Get the URL for the page.\n"
"     *\n"
"     * @return string\n"
"     */\n"
"    public function url()\n"
"    {\n"
"        return '/login';\n"
"    }\n"

# File: docs/8.x/dusk.md, line: 1549
# File: docs/master/dusk.md, line: 1549
#. type: Plain text
#, no-wrap
msgid "<a name=\"the-assert-method\"></a>\n"
msgstr "<a name=\"the-assert-method\"></a>\n"

# File: docs/8.x/dusk.md, line: 1549
# File: docs/master/dusk.md, line: 1549
#. type: Title ####
#, no-wrap
msgid "The `assert` Method"
msgstr "`assert` 方法"

# File: docs/8.x/dusk.md, line: 1552
# File: docs/master/dusk.md, line: 1552
#. type: Plain text
msgid "The `assert` method may make any assertions necessary to verify that the browser is actually on the given page. It is not actually necessary to place anything within this method; however, you are free to make these assertions if you wish. These assertions will be run automatically when navigating to the page:"
msgstr "`assert` 方法可進行任意的 Assertion 判斷，來驗證瀏覽器是否確實在該頁面上。該方法中不一定要有內容。不過，若有需要，可以自行進行 Assertion。這些 Assertion 會在前往該頁面後被自動執行："

# File: docs/8.x/dusk.md, line: 1562
# File: docs/master/dusk.md, line: 1562
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Assert that the browser is on the page.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function assert(Browser $browser)\n"
"    {\n"
"        $browser->assertPathIs($this->url());\n"
"    }\n"
msgstr "    /**\n"
"     * Assert that the browser is on the page.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function assert(Browser $browser)\n"
"    {\n"
"        $browser->assertPathIs($this->url());\n"
"    }\n"

# File: docs/8.x/dusk.md, line: 1564
# File: docs/master/dusk.md, line: 1564
#. type: Plain text
#, no-wrap
msgid "<a name=\"navigating-to-pages\"></a>\n"
msgstr "<a name=\"navigating-to-pages\"></a>\n"

# File: docs/8.x/dusk.md, line: 1564
# File: docs/master/dusk.md, line: 1564
#. type: Title ###
#, no-wrap
msgid "Navigating To Pages"
msgstr "前往 Page"

# File: docs/8.x/dusk.md, line: 1567
# File: docs/master/dusk.md, line: 1567
#. type: Plain text
msgid "Once a page has been defined, you may navigate to it using the `visit` method:"
msgstr "Page 建立好後，就可以使用 `visit` 方法來前往該 Page："

# File: docs/8.x/dusk.md, line: 1569
# File: docs/master/dusk.md, line: 1569
#. type: Plain text
#, no-wrap
msgid "    use Tests\\Browser\\Pages\\Login;\n"
msgstr "    use Tests\\Browser\\Pages\\Login;\n"

# File: docs/8.x/dusk.md, line: 1571
# File: docs/master/dusk.md, line: 1571
#. type: Plain text
#, no-wrap
msgid "    $browser->visit(new Login);\n"
msgstr "    $browser->visit(new Login);\n"

# File: docs/8.x/dusk.md, line: 1573
# File: docs/master/dusk.md, line: 1573
#. type: Plain text
msgid "Sometimes you may already be on a given page and need to \"load\" the page's selectors and methods into the current test context. This is common when pressing a button and being redirected to a given page without explicitly navigating to it. In this situation, you may use the `on` method to load the page:"
msgstr "有時候，我們可能已經在某個給定頁面上，並且只需要將該頁面的選擇器與方法「載入」進目前的測試內容即可。常見的例子如通過點擊按鈕後跳轉至給定的頁面，而不是顯式前往該頁面。在此情況下，可使用 `on` 方法來載入頁面："

# File: docs/8.x/dusk.md, line: 1575
# File: docs/master/dusk.md, line: 1575
#. type: Plain text
#, no-wrap
msgid "    use Tests\\Browser\\Pages\\CreatePlaylist;\n"
msgstr "    use Tests\\Browser\\Pages\\CreatePlaylist;\n"

# File: docs/8.x/dusk.md, line: 1580
# File: docs/master/dusk.md, line: 1580
#. type: Plain text
#, no-wrap
msgid "    $browser->visit('/dashboard')\n"
"            ->clickLink('Create Playlist')\n"
"            ->on(new CreatePlaylist)\n"
"            ->assertSee('@create');\n"
msgstr "    $browser->visit('/dashboard')\n"
"            ->clickLink('Create Playlist')\n"
"            ->on(new CreatePlaylist)\n"
"            ->assertSee('@create');\n"

# File: docs/8.x/dusk.md, line: 1582
# File: docs/master/dusk.md, line: 1582
#. type: Plain text
#, no-wrap
msgid "<a name=\"shorthand-selectors\"></a>\n"
msgstr "<a name=\"shorthand-selectors\"></a>\n"

# File: docs/8.x/dusk.md, line: 1582
# File: docs/master/dusk.md, line: 1582
#. type: Title ###
#, no-wrap
msgid "Shorthand Selectors"
msgstr "選擇器簡寫"

# File: docs/8.x/dusk.md, line: 1585
# File: docs/master/dusk.md, line: 1585
#. type: Plain text
msgid "The `elements` method within page classes allows you to define quick, easy-to-remember shortcuts for any CSS selector on your page. For example, let's define a shortcut for the \"email\" input field of the application's login page:"
msgstr "Page 類別中的 `elements` 方法可讓你為頁面上的任意 CSS 選擇器定義快速、簡單好記的簡寫。舉例來說，來為網站登入頁的「email」輸入欄位定義捷徑："

# File: docs/8.x/dusk.md, line: 1597
# File: docs/master/dusk.md, line: 1597
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the element shortcuts for the page.\n"
"     *\n"
"     * @return array\n"
"     */\n"
"    public function elements()\n"
"    {\n"
"        return [\n"
"            '@email' => 'input[name=email]',\n"
"        ];\n"
"    }\n"
msgstr "    /**\n"
"     * Get the element shortcuts for the page.\n"
"     *\n"
"     * @return array\n"
"     */\n"
"    public function elements()\n"
"    {\n"
"        return [\n"
"            '@email' => 'input[name=email]',\n"
"        ];\n"
"    }\n"

# File: docs/8.x/dusk.md, line: 1599
# File: docs/master/dusk.md, line: 1599
#. type: Plain text
msgid "Once the shortcut has been defined, you may use the shorthand selector anywhere you would typically use a full CSS selector:"
msgstr "定義好捷徑後，就可以在其他通常需要使用完整 CSS 選擇器的地方使用該選擇器簡寫："

# File: docs/8.x/dusk.md, line: 1601
# File: docs/master/dusk.md, line: 1601
#. type: Plain text
#, no-wrap
msgid "    $browser->type('@email', 'taylor@laravel.com');\n"
msgstr "    $browser->type('@email', 'taylor@laravel.com');\n"

# File: docs/8.x/dusk.md, line: 1603
# File: docs/master/dusk.md, line: 1603
#. type: Plain text
#, no-wrap
msgid "<a name=\"global-shorthand-selectors\"></a>\n"
msgstr "<a name=\"global-shorthand-selectors\"></a>\n"

# File: docs/8.x/dusk.md, line: 1603
# File: docs/master/dusk.md, line: 1603
#. type: Title ####
#, no-wrap
msgid "Global Shorthand Selectors"
msgstr "全域選擇器簡寫"

# File: docs/8.x/dusk.md, line: 1606
# File: docs/master/dusk.md, line: 1606
#. type: Plain text
msgid "After installing Dusk, a base `Page` class will be placed in your `tests/Browser/Pages` directory. This class contains a `siteElements` method which may be used to define global shorthand selectors that should be available on every page throughout your application:"
msgstr "安裝好 Dusk 後，`tests/Browser/Pages` 目錄下會包含一個基礎的 `Page` 類別。該類別包含了一個 `siteElements` 方法，可用來定義在網站中所有頁面都可用的全域選擇器簡寫："

# File: docs/8.x/dusk.md, line: 1618
# File: docs/master/dusk.md, line: 1618
#. type: Plain text
#, no-wrap
msgid "    /**\n"
"     * Get the global element shortcuts for the site.\n"
"     *\n"
"     * @return array\n"
"     */\n"
"    public static function siteElements()\n"
"    {\n"
"        return [\n"
"            '@element' => '#selector',\n"
"        ];\n"
"    }\n"
msgstr "    /**\n"
"     * Get the global element shortcuts for the site.\n"
"     *\n"
"     * @return array\n"
"     */\n"
"    public static function siteElements()\n"
"    {\n"
"        return [\n"
"            '@element' => '#selector',\n"
"        ];\n"
"    }\n"

# File: docs/8.x/dusk.md, line: 1620
# File: docs/master/dusk.md, line: 1620
#. type: Plain text
#, no-wrap
msgid "<a name=\"page-methods\"></a>\n"
msgstr "<a name=\"page-methods\"></a>\n"

# File: docs/8.x/dusk.md, line: 1620
# File: docs/master/dusk.md, line: 1620
#. type: Title ###
#, no-wrap
msgid "Page Methods"
msgstr "Page 方法"

# File: docs/8.x/dusk.md, line: 1623
# File: docs/master/dusk.md, line: 1623
#. type: Plain text
msgid "In addition to the default methods defined on pages, you may define additional methods which may be used throughout your tests. For example, let's imagine we are building a music management application. A common action for one page of the application might be to create a playlist. Instead of re-writing the logic to create a playlist in each test, you may define a `createPlaylist` method on a page class:"
msgstr "除了 Page 中預設定義的方法外，也可以定義額外的方法來在測試中使用。舉例來說，假設我們正在製作一個音樂管理軟體。在該軟體中，建立播放清單可能會是個常見的動作。比起在每個測試中重複撰寫建立播放清單的邏輯，我們可以在 Page 類別內定義 `createPlaylist` 方法："

# File: docs/8.x/dusk.md, line: 1627
# File: docs/master/dusk.md, line: 1627
#. type: Plain text
#, no-wrap
msgid "    namespace Tests\\Browser\\Pages;\n"
msgstr "    namespace Tests\\Browser\\Pages;\n"

# File: docs/8.x/dusk.md, line: 1633
# File: docs/master/dusk.md, line: 1633
#. type: Plain text
#, no-wrap
msgid "    class Dashboard extends Page\n"
"    {\n"
"        // Other page methods...\n"
msgstr "    class Dashboard extends Page\n"
"    {\n"
"        // Other page methods...\n"

# File: docs/8.x/dusk.md, line: 1648
# File: docs/master/dusk.md, line: 1648
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * Create a new playlist.\n"
"         *\n"
"         * @param  \\Laravel\\Dusk\\Browser  $browser\n"
"         * @param  string  $name\n"
"         * @return void\n"
"         */\n"
"        public function createPlaylist(Browser $browser, $name)\n"
"        {\n"
"            $browser->type('name', $name)\n"
"                    ->check('share')\n"
"                    ->press('Create Playlist');\n"
"        }\n"
"    }\n"
msgstr "        /**\n"
"         * Create a new playlist.\n"
"         *\n"
"         * @param  \\Laravel\\Dusk\\Browser  $browser\n"
"         * @param  string  $name\n"
"         * @return void\n"
"         */\n"
"        public function createPlaylist(Browser $browser, $name)\n"
"        {\n"
"            $browser->type('name', $name)\n"
"                    ->check('share')\n"
"                    ->press('Create Playlist');\n"
"        }\n"
"    }\n"

# File: docs/8.x/dusk.md, line: 1650
# File: docs/master/dusk.md, line: 1650
#. type: Plain text
msgid "Once the method has been defined, you may use it within any test that utilizes the page. The browser instance will automatically be passed as the first argument to custom page methods:"
msgstr "定義好該方法後，就可以在任何使用該 Page 的測試中使用該方法。Browser 實體會自動作為第一個引數傳入給自訂 Page 方法內："

# File: docs/8.x/dusk.md, line: 1652
# File: docs/master/dusk.md, line: 1652
#. type: Plain text
#, no-wrap
msgid "    use Tests\\Browser\\Pages\\Dashboard;\n"
msgstr "    use Tests\\Browser\\Pages\\Dashboard;\n"

# File: docs/8.x/dusk.md, line: 1656
# File: docs/master/dusk.md, line: 1656
#. type: Plain text
#, no-wrap
msgid "    $browser->visit(new Dashboard)\n"
"            ->createPlaylist('My Playlist')\n"
"            ->assertSee('My Playlist');\n"
msgstr "    $browser->visit(new Dashboard)\n"
"            ->createPlaylist('My Playlist')\n"
"            ->assertSee('My Playlist');\n"

# File: docs/8.x/dusk.md, line: 1658
# File: docs/master/dusk.md, line: 1658
#. type: Plain text
#, no-wrap
msgid "<a name=\"components\"></a>\n"
msgstr "<a name=\"components\"></a>\n"

# File: docs/8.x/dusk.md, line: 1658
# File: docs/master/dusk.md, line: 1658
#. type: Title ##
#, no-wrap
msgid "Components"
msgstr "元件"

# File: docs/8.x/dusk.md, line: 1661
# File: docs/master/dusk.md, line: 1661
#. type: Plain text
msgid "Components are similar to Dusk’s “page objects”, but are intended for pieces of UI and functionality that are re-used throughout your application, such as a navigation bar or notification window. As such, components are not bound to specific URLs."
msgstr "Component (元件) 與 Dusk 的「Page 物件」類似，不同的地方在於元件是用於一小部分的 UI，且在整個網站中都可重複使用。如：導航列或通知視窗。因此，元件並不限定於特定的 URL。"

# File: docs/8.x/dusk.md, line: 1663
# File: docs/master/dusk.md, line: 1663
#. type: Plain text
#, no-wrap
msgid "<a name=\"generating-components\"></a>\n"
msgstr "<a name=\"generating-components\"></a>\n"

# File: docs/8.x/dusk.md, line: 1663
# File: docs/master/dusk.md, line: 1663
#. type: Title ###
#, no-wrap
msgid "Generating Components"
msgstr "產生 Component"

# File: docs/8.x/dusk.md, line: 1666
# File: docs/master/dusk.md, line: 1666
#. type: Plain text
msgid "To generate a component, execute the `dusk:component` Artisan command. New components are placed in the `tests/Browser/Components` directory:"
msgstr "若要產生 Component，請執行 `dusk:component` Artisan 指令。新建立的 Component 會放置於 `tests/Browser/Components` 目錄中："

# File: docs/8.x/dusk.md, line: 1668
# File: docs/master/dusk.md, line: 1668
#. type: Plain text
#, no-wrap
msgid "    php artisan dusk:component DatePicker\n"
msgstr "    php artisan dusk:component DatePicker\n"

# File: docs/8.x/dusk.md, line: 1670
# File: docs/master/dusk.md, line: 1670
#. type: Plain text
msgid "As shown above, a \"date picker\" is an example of a component that might exist throughout your application on a variety of pages. It can become cumbersome to manually write the browser automation logic to select a date in dozens of tests throughout your test suite. Instead, we can define a Dusk component to represent the date picker, allowing us to encapsulate that logic within the component:"
msgstr "像上面這樣，「date picker」是一個範例元件，該元件可能會在網站的各種頁面上出現。若要在測試套件中的數十個測試內手動轉寫瀏覽器自動化邏輯會很麻煩。因此，我們可以改用 Dusk Component 來代表 Date Picker，進而將此一邏輯封裝在該元件內："

# File: docs/8.x/dusk.md, line: 1674
# File: docs/master/dusk.md, line: 1674
#. type: Plain text
#, no-wrap
msgid "    namespace Tests\\Browser\\Components;\n"
msgstr "    namespace Tests\\Browser\\Components;\n"

# File: docs/8.x/dusk.md, line: 1677
# File: docs/master/dusk.md, line: 1677
#. type: Plain text
#, no-wrap
msgid "    use Laravel\\Dusk\\Browser;\n"
"    use Laravel\\Dusk\\Component as BaseComponent;\n"
msgstr "    use Laravel\\Dusk\\Browser;\n"
"    use Laravel\\Dusk\\Component as BaseComponent;\n"

# File: docs/8.x/dusk.md, line: 1689
# File: docs/master/dusk.md, line: 1689
#. type: Plain text
#, no-wrap
msgid "    class DatePicker extends BaseComponent\n"
"    {\n"
"        /**\n"
"         * Get the root selector for the component.\n"
"         *\n"
"         * @return string\n"
"         */\n"
"        public function selector()\n"
"        {\n"
"            return '.date-picker';\n"
"        }\n"
msgstr "    class DatePicker extends BaseComponent\n"
"    {\n"
"        /**\n"
"         * Get the root selector for the component.\n"
"         *\n"
"         * @return string\n"
"         */\n"
"        public function selector()\n"
"        {\n"
"            return '.date-picker';\n"
"        }\n"

# File: docs/8.x/dusk.md, line: 1700
# File: docs/master/dusk.md, line: 1700
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * Assert that the browser page contains the component.\n"
"         *\n"
"         * @param  Browser  $browser\n"
"         * @return void\n"
"         */\n"
"        public function assert(Browser $browser)\n"
"        {\n"
"            $browser->assertVisible($this->selector());\n"
"        }\n"
msgstr "        /**\n"
"         * Assert that the browser page contains the component.\n"
"         *\n"
"         * @param  Browser  $browser\n"
"         * @return void\n"
"         */\n"
"        public function assert(Browser $browser)\n"
"        {\n"
"            $browser->assertVisible($this->selector());\n"
"        }\n"

# File: docs/8.x/dusk.md, line: 1715
# File: docs/master/dusk.md, line: 1715
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * Get the element shortcuts for the component.\n"
"         *\n"
"         * @return array\n"
"         */\n"
"        public function elements()\n"
"        {\n"
"            return [\n"
"                '@date-field' => 'input.datepicker-input',\n"
"                '@year-list' => 'div > div.datepicker-years',\n"
"                '@month-list' => 'div > div.datepicker-months',\n"
"                '@day-list' => 'div > div.datepicker-days',\n"
"            ];\n"
"        }\n"
msgstr "        /**\n"
"         * Get the element shortcuts for the component.\n"
"         *\n"
"         * @return array\n"
"         */\n"
"        public function elements()\n"
"        {\n"
"            return [\n"
"                '@date-field' => 'input.datepicker-input',\n"
"                '@year-list' => 'div > div.datepicker-years',\n"
"                '@month-list' => 'div > div.datepicker-months',\n"
"                '@day-list' => 'div > div.datepicker-days',\n"
"            ];\n"
"        }\n"

# File: docs/8.x/dusk.md, line: 1739
# File: docs/master/dusk.md, line: 1739
#. type: Plain text
#, no-wrap
msgid "        /**\n"
"         * Select the given date.\n"
"         *\n"
"         * @param  \\Laravel\\Dusk\\Browser  $browser\n"
"         * @param  int  $year\n"
"         * @param  int  $month\n"
"         * @param  int  $day\n"
"         * @return void\n"
"         */\n"
"        public function selectDate(Browser $browser, $year, $month, $day)\n"
"        {\n"
"            $browser->click('@date-field')\n"
"                    ->within('@year-list', function ($browser) use ($year) {\n"
"                        $browser->click($year);\n"
"                    })\n"
"                    ->within('@month-list', function ($browser) use ($month) {\n"
"                        $browser->click($month);\n"
"                    })\n"
"                    ->within('@day-list', function ($browser) use ($day) {\n"
"                        $browser->click($day);\n"
"                    });\n"
"        }\n"
"    }\n"
msgstr "        /**\n"
"         * Select the given date.\n"
"         *\n"
"         * @param  \\Laravel\\Dusk\\Browser  $browser\n"
"         * @param  int  $year\n"
"         * @param  int  $month\n"
"         * @param  int  $day\n"
"         * @return void\n"
"         */\n"
"        public function selectDate(Browser $browser, $year, $month, $day)\n"
"        {\n"
"            $browser->click('@date-field')\n"
"                    ->within('@year-list', function ($browser) use ($year) {\n"
"                        $browser->click($year);\n"
"                    })\n"
"                    ->within('@month-list', function ($browser) use ($month) {\n"
"                        $browser->click($month);\n"
"                    })\n"
"                    ->within('@day-list', function ($browser) use ($day) {\n"
"                        $browser->click($day);\n"
"                    });\n"
"        }\n"
"    }\n"

# File: docs/8.x/dusk.md, line: 1741
# File: docs/master/dusk.md, line: 1741
#. type: Plain text
#, no-wrap
msgid "<a name=\"using-components\"></a>\n"
msgstr "<a name=\"using-components\"></a>\n"

# File: docs/8.x/dusk.md, line: 1741
# File: docs/master/dusk.md, line: 1741
#. type: Title ###
#, no-wrap
msgid "Using Components"
msgstr "使用 Component"

# File: docs/8.x/dusk.md, line: 1744
# File: docs/master/dusk.md, line: 1744
#. type: Plain text
msgid "Once the component has been defined, we can easily select a date within the date picker from any test. And, if the logic necessary to select a date changes, we only need to update the component:"
msgstr "定義好 Component 後，便可輕鬆地在任何測試內於 Date Picker 中選擇日期。而且，若選擇日期所需要的邏輯更改了，我們只需要更新 Component 即可："

# File: docs/8.x/dusk.md, line: 1753
# File: docs/master/dusk.md, line: 1753
#. type: Plain text
#, no-wrap
msgid "    use Illuminate\\Foundation\\Testing\\DatabaseMigrations;\n"
"    use Laravel\\Dusk\\Browser;\n"
"    use Tests\\Browser\\Components\\DatePicker;\n"
"    use Tests\\DuskTestCase;\n"
msgstr "    use Illuminate\\Foundation\\Testing\\DatabaseMigrations;\n"
"    use Laravel\\Dusk\\Browser;\n"
"    use Tests\\Browser\\Components\\DatePicker;\n"
"    use Tests\\DuskTestCase;\n"

# File: docs/8.x/dusk.md, line: 1772
# File: docs/master/dusk.md, line: 1772
#. type: Plain text
#, no-wrap
msgid "    class ExampleTest extends DuskTestCase\n"
"    {\n"
"        /**\n"
"         * A basic component test example.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function testBasicExample()\n"
"        {\n"
"            $this->browse(function (Browser $browser) {\n"
"                $browser->visit('/')\n"
"                        ->within(new DatePicker, function ($browser) {\n"
"                            $browser->selectDate(2019, 1, 30);\n"
"                        })\n"
"                        ->assertSee('January');\n"
"            });\n"
"        }\n"
"    }\n"
msgstr "    class ExampleTest extends DuskTestCase\n"
"    {\n"
"        /**\n"
"         * A basic component test example.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function testBasicExample()\n"
"        {\n"
"            $this->browse(function (Browser $browser) {\n"
"                $browser->visit('/')\n"
"                        ->within(new DatePicker, function ($browser) {\n"
"                            $browser->selectDate(2019, 1, 30);\n"
"                        })\n"
"                        ->assertSee('January');\n"
"            });\n"
"        }\n"
"    }\n"

# File: docs/8.x/dusk.md, line: 1774
# File: docs/master/dusk.md, line: 1774
#. type: Plain text
#, no-wrap
msgid "<a name=\"continuous-integration\"></a>\n"
msgstr "<a name=\"continuous-integration\"></a>\n"

# File: docs/8.x/dusk.md, line: 1774
# File: docs/master/dusk.md, line: 1774
#. type: Title ##
#, no-wrap
msgid "Continuous Integration"
msgstr "持續整合 (CI, Continuous Integration)"

# File: docs/8.x/dusk.md, line: 1777
# File: docs/master/dusk.md, line: 1777
#. type: Plain text
#, no-wrap
msgid "> {note} Most Dusk continuous integration configurations expect your Laravel application to be served using the built-in PHP development server on port 8000. Therefore, before continuing, you should ensure that your continuous integration environment has an `APP_URL` environment variable value of `http://127.0.0.1:8000`.\n"
msgstr "> {note} 大多數的 Dusk CI 設定都假設你的 Laravel 專案放在連接埠 8000 的 PHP 內建開發伺服器上。因此，在繼續前，請先確保 CI 環境上有將 `APP_URL` 環境變數設為 `http://127.0.0.1:8000`。\n"

# File: docs/8.x/dusk.md, line: 1779
# File: docs/master/dusk.md, line: 1779
#. type: Plain text
#, no-wrap
msgid "<a name=\"running-tests-on-heroku-ci\"></a>\n"
msgstr "<a name=\"running-tests-on-heroku-ci\"></a>\n"

# File: docs/8.x/dusk.md, line: 1779
# File: docs/master/dusk.md, line: 1779
#. type: Title ###
#, no-wrap
msgid "Heroku CI"
msgstr "Heroku CI"

# File: docs/8.x/dusk.md, line: 1782
# File: docs/master/dusk.md, line: 1782
#. type: Plain text
msgid "To run Dusk tests on [Heroku CI](https://www.heroku.com/continuous-integration), add the following Google Chrome buildpack and scripts to your Heroku `app.json` file:"
msgstr "若要在 [Heroku CI](https://www.heroku.com/continuous-integration) 上執行 Dusk 測試，請將下列 Google Chrome Buildpack 與指令嗎加到 Heroku 的 `app.json` 檔中："

# File: docs/8.x/dusk.md, line: 1797
# File: docs/master/dusk.md, line: 1797
#. type: Plain text
#, no-wrap
msgid "    {\n"
"      \"environments\": {\n"
"        \"test\": {\n"
"          \"buildpacks\": [\n"
"            { \"url\": \"heroku/php\" },\n"
"            { \"url\": \"https://github.com/heroku/heroku-buildpack-google-chrome\" }\n"
"          ],\n"
"          \"scripts\": {\n"
"            \"test-setup\": \"cp .env.testing .env\",\n"
"            \"test\": \"nohup bash -c './vendor/laravel/dusk/bin/chromedriver-linux > /dev/null 2>&1 &' && nohup bash -c 'php artisan serve --no-reload > /dev/null 2>&1 &' && php artisan dusk\"\n"
"          }\n"
"        }\n"
"      }\n"
"    }\n"
msgstr "    {\n"
"      \"environments\": {\n"
"        \"test\": {\n"
"          \"buildpacks\": [\n"
"            { \"url\": \"heroku/php\" },\n"
"            { \"url\": \"https://github.com/heroku/heroku-buildpack-google-chrome\" }\n"
"          ],\n"
"          \"scripts\": {\n"
"            \"test-setup\": \"cp .env.testing .env\",\n"
"            \"test\": \"nohup bash -c './vendor/laravel/dusk/bin/chromedriver-linux > /dev/null 2>&1 &' && nohup bash -c 'php artisan serve --no-reload > /dev/null 2>&1 &' && php artisan dusk\"\n"
"          }\n"
"        }\n"
"      }\n"
"    }\n"

# File: docs/8.x/dusk.md, line: 1799
# File: docs/master/dusk.md, line: 1799
#. type: Plain text
#, no-wrap
msgid "<a name=\"running-tests-on-travis-ci\"></a>\n"
msgstr "<a name=\"running-tests-on-travis-ci\"></a>\n"

# File: docs/8.x/dusk.md, line: 1799
# File: docs/master/dusk.md, line: 1799
#. type: Title ###
#, no-wrap
msgid "Travis CI"
msgstr "Travis CI"

# File: docs/8.x/dusk.md, line: 1802
# File: docs/master/dusk.md, line: 1802
#. type: Plain text
msgid "To run your Dusk tests on [Travis CI](https://travis-ci.org), use the following `.travis.yml` configuration. Since Travis CI is not a graphical environment, we will need to take some extra steps in order to launch a Chrome browser. In addition, we will use `php artisan serve` to launch PHP's built-in web server:"
msgstr "若要在 [Travis CI](https://travis-ci.org) 上執行 Dusk 測試，請使用下列 `.travis.yml` 組態設定檔。由於 Travis CI 並非圖形化環境，因此若要啟動 Chrome 瀏覽器，我們需要做一些額外的步驟。此外，我們會使用 `php artisan serve` 來啟動 PHP 的內建網頁伺服器："

# File: docs/8.x/dusk.md, line: 1804
# File: docs/master/dusk.md, line: 1804
#. type: Plain text
#, no-wrap
msgid "    language: php\n"
msgstr "    language: php\n"

# File: docs/8.x/dusk.md, line: 1807
# File: docs/master/dusk.md, line: 1807
#. type: Plain text
#, no-wrap
msgid "    php:\n"
"      - 7.3\n"
msgstr "    php:\n"
"      - 7.3\n"

# File: docs/8.x/dusk.md, line: 1810
# File: docs/master/dusk.md, line: 1810
#. type: Plain text
#, no-wrap
msgid "    addons:\n"
"      chrome: stable\n"
msgstr "    addons:\n"
"      chrome: stable\n"

# File: docs/8.x/dusk.md, line: 1816
# File: docs/master/dusk.md, line: 1816
#. type: Plain text
#, no-wrap
msgid "    install:\n"
"      - cp .env.testing .env\n"
"      - travis_retry composer install --no-interaction --prefer-dist\n"
"      - php artisan key:generate\n"
"      - php artisan dusk:chrome-driver\n"
msgstr "    install:\n"
"      - cp .env.testing .env\n"
"      - travis_retry composer install --no-interaction --prefer-dist\n"
"      - php artisan key:generate\n"
"      - php artisan dusk:chrome-driver\n"

# File: docs/8.x/dusk.md, line: 1820
# File: docs/master/dusk.md, line: 1820
#. type: Plain text
#, no-wrap
msgid "    before_script:\n"
"      - google-chrome-stable --headless --disable-gpu --remote-debugging-port=9222 http://localhost &\n"
"      - php artisan serve --no-reload &\n"
msgstr "    before_script:\n"
"      - google-chrome-stable --headless --disable-gpu --remote-debugging-port=9222 http://localhost &\n"
"      - php artisan serve --no-reload &\n"

# File: docs/8.x/dusk.md, line: 1823
# File: docs/master/dusk.md, line: 1823
#. type: Plain text
#, no-wrap
msgid "    script:\n"
"      - php artisan dusk\n"
msgstr "    script:\n"
"      - php artisan dusk\n"

# File: docs/8.x/dusk.md, line: 1825
# File: docs/master/dusk.md, line: 1825
#. type: Plain text
#, no-wrap
msgid "<a name=\"running-tests-on-github-actions\"></a>\n"
msgstr "<a name=\"running-tests-on-github-actions\"></a>\n"

# File: docs/8.x/dusk.md, line: 1825
# File: docs/master/dusk.md, line: 1825
#. type: Title ###
#, no-wrap
msgid "GitHub Actions"
msgstr "GitHub Actions"

# File: docs/8.x/dusk.md, line: 1828
# File: docs/master/dusk.md, line: 1828
#. type: Plain text
msgid "If you are using [Github Actions](https://github.com/features/actions) to run your Dusk tests, you may use the following configuration file as a starting point. Like TravisCI, we will use the `php artisan serve` command to launch PHP's built-in web server:"
msgstr "若要使用 [Github Actions](https://github.com/features/actions) 來執行 Dusk 測試，可參考下列組態設定檔。與 TravisCI 一樣，我們會使用 `php artisan serve` 指令來啟動 PHP 的內建網頁伺服器："

# File: docs/8.x/dusk.md, line: 1832
# File: docs/master/dusk.md, line: 1832
#. type: Plain text
#, no-wrap
msgid "    name: CI\n"
"    on: [push]\n"
"    jobs:\n"
msgstr "    name: CI\n"
"    on: [push]\n"
"    jobs:\n"

# File: docs/8.x/dusk.md, line: 1868
# File: docs/master/dusk.md, line: 1868
#. type: Plain text
#, no-wrap
msgid "      dusk-php:\n"
"        runs-on: ubuntu-latest\n"
"        steps:\n"
"          - uses: actions/checkout@v2\n"
"          - name: Prepare The Environment\n"
"            run: cp .env.example .env\n"
"          - name: Create Database\n"
"            run: |\n"
"              sudo systemctl start mysql\n"
"              mysql --user=\"root\" --password=\"root\" -e \"CREATE DATABASE 'my-database' character set UTF8mb4 collate utf8mb4_bin;\"\n"
"          - name: Install Composer Dependencies\n"
"            run: composer install --no-progress --prefer-dist --optimize-autoloader\n"
"          - name: Generate Application Key\n"
"            run: php artisan key:generate\n"
"          - name: Upgrade Chrome Driver\n"
"            run: php artisan dusk:chrome-driver `/opt/google/chrome/chrome --version | cut -d \" \" -f3 | cut -d \".\" -f1`\n"
"          - name: Start Chrome Driver\n"
"            run: ./vendor/laravel/dusk/bin/chromedriver-linux &\n"
"          - name: Run Laravel Server\n"
"            run: php artisan serve --no-reload &\n"
"          - name: Run Dusk Tests\n"
"            env:\n"
"              APP_URL: \"http://127.0.0.1:8000\"\n"
"            run: php artisan dusk\n"
"          - name: Upload Screenshots\n"
"            if: failure()\n"
"            uses: actions/upload-artifact@v2\n"
"            with:\n"
"              name: screenshots\n"
"              path: tests/Browser/screenshots\n"
"          - name: Upload Console Logs\n"
"            if: failure()\n"
"            uses: actions/upload-artifact@v2\n"
"            with:\n"
"              name: console\n"
"              path: tests/Browser/console\n"
msgstr "      dusk-php:\n"
"        runs-on: ubuntu-latest\n"
"        steps:\n"
"          - uses: actions/checkout@v2\n"
"          - name: Prepare The Environment\n"
"            run: cp .env.example .env\n"
"          - name: Create Database\n"
"            run: |\n"
"              sudo systemctl start mysql\n"
"              mysql --user=\"root\" --password=\"root\" -e \"CREATE DATABASE 'my-database' character set UTF8mb4 collate utf8mb4_bin;\"\n"
"          - name: Install Composer Dependencies\n"
"            run: composer install --no-progress --prefer-dist --optimize-autoloader\n"
"          - name: Generate Application Key\n"
"            run: php artisan key:generate\n"
"          - name: Upgrade Chrome Driver\n"
"            run: php artisan dusk:chrome-driver `/opt/google/chrome/chrome --version | cut -d \" \" -f3 | cut -d \".\" -f1`\n"
"          - name: Start Chrome Driver\n"
"            run: ./vendor/laravel/dusk/bin/chromedriver-linux &\n"
"          - name: Run Laravel Server\n"
"            run: php artisan serve --no-reload &\n"
"          - name: Run Dusk Tests\n"
"            env:\n"
"              APP_URL: \"http://127.0.0.1:8000\"\n"
"            run: php artisan dusk\n"
"          - name: Upload Screenshots\n"
"            if: failure()\n"
"            uses: actions/upload-artifact@v2\n"
"            with:\n"
"              name: screenshots\n"
"              path: tests/Browser/screenshots\n"
"          - name: Upload Console Logs\n"
"            if: failure()\n"
"            uses: actions/upload-artifact@v2\n"
"            with:\n"
"              name: console\n"
"              path: tests/Browser/console\n"

