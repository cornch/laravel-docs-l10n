msgid ""
msgstr ""
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/templates/rate-limiting.pot\n"
"X-Crowdin-File-ID: 127\n"
"Project-Id-Version: laravel-docs\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"PO-Revision-Date: 2024-06-30 08:27\n"

#: docs/10.x/rate-limiting.md:block 1 (header)
msgid "Rate Limiting"
msgstr "頻率限制"

#: docs/10.x/rate-limiting.md:block 2 (unordered list)
msgid "[Introduction](#introduction)"
msgstr "[簡介](#introduction)"

#: docs/10.x/rate-limiting.md:block 2 (unordered list)
msgid "[Cache Configuration](#cache-configuration)"
msgstr "[快取設定](#cache-configuration)"

#: docs/10.x/rate-limiting.md:block 2 (unordered list)
msgid "[Basic Usage](#basic-usage)"
msgstr "[基礎用法](#basic-usage)"

#: docs/10.x/rate-limiting.md:block 2 (unordered list)
msgid "[Manually Incrementing Attempts](#manually-incrementing-attempts)"
msgstr "[手動增加嘗試次數](#manually-incrementing-attempts)"

#: docs/10.x/rate-limiting.md:block 2 (unordered list)
msgid "[Clearing Attempts](#clearing-attempts)"
msgstr "[清除嘗試次數](#clearing-attempts)"

#: docs/10.x/rate-limiting.md:block 4 (header)
msgid "Introduction"
msgstr "簡介"

#: docs/10.x/rate-limiting.md:block 5 (paragraph)
msgid "Laravel includes a simple to use rate limiting abstraction which, in conjunction with your application's <cache>, provides an easy way to limit any action during a specified window of time."
msgstr "Laravel 中內建了一個簡單易用的頻率限制抽象功能，該功能會與專案的 <cache> 搭配使用，讓我們能輕鬆限制指定時間內任何動作的頻率。"

#: docs/10.x/rate-limiting.md:block 6 (quote)
msgid "**Note** If you are interested in rate limiting incoming HTTP requests, please consult the [rate limiter middleware documentation](routing#rate-limiting)."
msgstr "**Note** 若想對連入 HTTP Request 的頻率限制，請參考 [Rate Limiter Middleware 的說明文件](routing#rate-limiting)。"

#: docs/10.x/rate-limiting.md:block 8 (header)
msgid "Cache Configuration"
msgstr "快取設定"

#: docs/10.x/rate-limiting.md:block 9 (paragraph)
msgid "Typically, the rate limiter utilizes your default application cache as defined by the `default` key within your application's `cache` configuration file. However, you may specify which cache driver the rate limiter should use by defining a `limiter` key within your application's `cache` configuration file:"
msgstr "一般來說，Rate Limiter 會使用專案中 `cache` 設定檔 `default` 索引鍵上所定義的預設快取。不過，我們可以在專案的 `cache` 設定檔中定義 `limiter` 索引鍵來指定 Rate Limiter 要使用哪個快取 Driver："

#: docs/10.x/rate-limiting.md:block 10 (code)
msgid "'default' => 'memcached',\n\n"
"'limiter' => 'redis',\n"
msgstr "'default' => 'memcached',\n\n"
"'limiter' => 'redis',\n"

#: docs/10.x/rate-limiting.md:block 12 (header)
msgid "Basic Usage"
msgstr "基礎用法"

#: docs/10.x/rate-limiting.md:block 13 (paragraph)
msgid "The `Illuminate\\Support\\Facades\\RateLimiter` facade may be used to interact with the rate limiter. The simplest method offered by the rate limiter is the `attempt` method, which rate limits a given callback for a given number of seconds."
msgstr "可通過 `Illuminate\\Support\\Facades\\RateLimiter` Facade 來使用 Rate Limiter。Rate Limiter 所提供的最簡單的方法是 `attempt` 方法，該方法會對給定閉包以給定秒數來做頻率限制。"

#: docs/10.x/rate-limiting.md:block 14 (paragraph)
msgid "The `attempt` method returns `false` when the callback has no remaining attempts available; otherwise, the `attempt` method will return the callback's result or `true`. The first argument accepted by the `attempt` method is a rate limiter \"key\", which may be any string of your choosing that represents the action being rate limited:"
msgstr "若該回呼已無法再嘗試，則 `attempt` 方法會回傳 `false`。若還能繼續嘗試，則 `attempt` 會回傳該回呼的執行結果或 `true`。`attempt` 方法的第一個引數為 Rate Limiter 的「索引鍵」，索引鍵可以是任意字串，用來表示要被頻率限制的動作："

#: docs/10.x/rate-limiting.md:block 15 (code)
msgid "use Illuminate\\Support\\Facades\\RateLimiter;\n\n"
"$executed = RateLimiter::attempt(\n"
"    'send-message:'.$user->id,\n"
"    $perMinute = 5,\n"
"    function() {\n"
"        // Send message...\n"
"    }\n"
");\n\n"
"if (! $executed) {\n"
"  return 'Too many messages sent!';\n"
"}\n"
msgstr "use Illuminate\\Support\\Facades\\RateLimiter;\n\n"
"$executed = RateLimiter::attempt(\n"
"    'send-message:'.$user->id,\n"
"    $perMinute = 5,\n"
"    function() {\n"
"        // 傳送訊息...\n"
"    }\n"
");\n\n"
"if (! $executed) {\n"
"  return 'Too many messages sent!';\n"
"}\n"

#: docs/10.x/rate-limiting.md:block 16 (paragraph)
msgid "If necessary, you may provide a fourth argument to the `attempt` method, which is the \"decay rate\", or the number of seconds until the available attempts are reset. For example, we can modify the example above to allow five attempts every two minutes:"
msgstr "如有需要，可以為 `attempt` 方法提供第四個「Decay Rate」引數，或是直到頻率限制被重設前的秒數。例如，我們可以將上面的範例改為每 2 分鐘允許 5 次嘗試："

#: docs/10.x/rate-limiting.md:block 17 (code)
msgid "$executed = RateLimiter::attempt(\n"
"    'send-message:'.$user->id,\n"
"    $perTwoMinutes = 5,\n"
"    function() {\n"
"        // Send message...\n"
"    },\n"
"    $decayRate = 120,\n"
");\n"
msgstr "$executed = RateLimiter::attempt(\n"
"    'send-message:'.$user->id,\n"
"    $perTwoMinutes = 5,\n"
"    function() {\n"
"        // 傳送訊息...\n"
"    },\n"
"    $decayRate = 120,\n"
");\n"

#: docs/10.x/rate-limiting.md:block 19 (header)
msgid "Manually Incrementing Attempts"
msgstr "手動增加嘗試次數"

#: docs/10.x/rate-limiting.md:block 20 (paragraph)
msgid "If you would like to manually interact with the rate limiter, a variety of other methods are available. For example, you may invoke the `tooManyAttempts` method to determine if a given rate limiter key has exceeded its maximum number of allowed attempts per minute:"
msgstr "若想手動使用 Rate Limiter，則還有其他許多能使用的方法。舉例來說，我們可以叫用 `tooManyAttempts` 方法來判斷給定的 Rate Limiter 索引鍵是否已遇到其每分鐘所允許的最大嘗試次數："

#: docs/10.x/rate-limiting.md:block 21 (code)
msgid "use Illuminate\\Support\\Facades\\RateLimiter;\n\n"
"if (RateLimiter::tooManyAttempts('send-message:'.$user->id, $perMinute = 5)) {\n"
"    return 'Too many attempts!';\n"
"}\n\n"
"RateLimiter::hit('send-message:'.$user->id);\n\n"
"// Send message...\n"
msgstr "use Illuminate\\Support\\Facades\\RateLimiter;\n\n"
"if (RateLimiter::tooManyAttempts('send-message:'.$user->id, $perMinute = 5)) {\n"
"    return 'Too many attempts!';\n"
"}\n\n"
"RateLimiter::hit('send-message:'.$user->id);\n\n"
"// 傳送訊息...\n"

#: docs/10.x/rate-limiting.md:block 22 (paragraph)
msgid "Alternatively, you may use the `remaining` method to retrieve the number of attempts remaining for a given key. If a given key has retries remaining, you may invoke the `hit` method to increment the number of total attempts:"
msgstr "或者，也可以使用 `remaining` 方法來取得給定索引鍵剩下的嘗試次數。若給定的索引鍵還有可嘗試的次數，則可叫用 `hit` 方法來增加總嘗試次數："

#: docs/10.x/rate-limiting.md:block 23 (code)
msgid "use Illuminate\\Support\\Facades\\RateLimiter;\n\n"
"if (RateLimiter::remaining('send-message:'.$user->id, $perMinute = 5)) {\n"
"    RateLimiter::hit('send-message:'.$user->id);\n\n"
"    // Send message...\n"
"}\n"
msgstr "use Illuminate\\Support\\Facades\\RateLimiter;\n\n"
"if (RateLimiter::remaining('send-message:'.$user->id, $perMinute = 5)) {\n"
"    RateLimiter::hit('send-message:'.$user->id);\n\n"
"    // 傳送訊息...\n"
"}\n"

#: docs/10.x/rate-limiting.md:block 25 (header)
msgid "Determining Limiter Availability"
msgstr "判斷 Limiter 是否可用"

#: docs/10.x/rate-limiting.md:block 26 (paragraph)
msgid "When a key has no more attempts left, the `availableIn` method returns the number of seconds remaining until more attempts will be available:"
msgstr "若某個索引鍵已無可用的嘗試次數，則 `availableIn` 方法會回傳距離下次可獲得嘗試次數的剩餘秒數："

#: docs/10.x/rate-limiting.md:block 27 (code)
msgid "use Illuminate\\Support\\Facades\\RateLimiter;\n\n"
"if (RateLimiter::tooManyAttempts('send-message:'.$user->id, $perMinute = 5)) {\n"
"    $seconds = RateLimiter::availableIn('send-message:'.$user->id);\n\n"
"    return 'You may try again in '.$seconds.' seconds.';\n"
"}\n\n"
"RateLimiter::hit('send-message:'.$user->id);\n\n"
"// Send message...\n"
msgstr "use Illuminate\\Support\\Facades\\RateLimiter;\n\n"
"if (RateLimiter::tooManyAttempts('send-message:'.$user->id, $perMinute = 5)) {\n"
"    $seconds = RateLimiter::availableIn('send-message:'.$user->id);\n\n"
"    return 'You may try again in '.$seconds.' seconds.';\n"
"}\n\n"
"RateLimiter::hit('send-message:'.$user->id);\n\n"
"// 傳送訊息...\n"

#: docs/10.x/rate-limiting.md:block 29 (header)
msgid "Clearing Attempts"
msgstr "清除嘗試次數"

#: docs/10.x/rate-limiting.md:block 30 (paragraph)
msgid "You may reset the number of attempts for a given rate limiter key using the `clear` method. For example, you may reset the number of attempts when a given message is read by the receiver:"
msgstr "可使用 `clear` 方法來重設給定 Rate Limiter 索引鍵的嘗試次數。舉例來說，我們可以在收件人已閱讀某個訊息後重設嘗試次數："

#: docs/10.x/rate-limiting.md:block 31 (code)
msgid "use App\\Models\\Message;\n"
"use Illuminate\\Support\\Facades\\RateLimiter;\n\n"
"/**\n"
" * Mark the message as read.\n"
" */\n"
"public function read(Message $message): Message\n"
"{\n"
"    $message->markAsRead();\n\n"
"    RateLimiter::clear('send-message:'.$message->user_id);\n\n"
"    return $message;\n"
"}\n"
msgstr "use App\\Models\\Message;\n"
"use Illuminate\\Support\\Facades\\RateLimiter;\n\n"
"/**\n"
" * Mark the message as read.\n"
" */\n"
"public function read(Message $message): Message\n"
"{\n"
"    $message->markAsRead();\n\n"
"    RateLimiter::clear('send-message:'.$message->user_id);\n\n"
"    return $message;\n"
"}\n"

#: docs/8.x/rate-limiting.md:block 6 (quote)
msgid "{tip} If you are interested in rate limiting incoming HTTP requests, please consult the [rate limiter middleware documentation](routing#rate-limiting)."
msgstr "{tip} 若想對連入 HTTP Request 的頻率限制，請參考 [Rate Limiter Middleware 的說明文件](routing#rate-limiting)。"

#: docs/8.x/rate-limiting.md:block 19 (code)
msgid "use Illuminate\\Support\\Facades\\RateLimiter;\n\n"
"if (RateLimiter::tooManyAttempts('send-message:'.$user->id, $perMinute = 5)) {\n"
"    return 'Too many attempts!';\n"
"}\n"
msgstr "use Illuminate\\Support\\Facades\\RateLimiter;\n\n"
"if (RateLimiter::tooManyAttempts('send-message:'.$user->id, $perMinute = 5)) {\n"
"    return 'Too many attempts!';\n"
"}\n"

#: docs/8.x/rate-limiting.md:block 25 (code)
msgid "use Illuminate\\Support\\Facades\\RateLimiter;\n\n"
"if (RateLimiter::tooManyAttempts('send-message:'.$user->id, $perMinute = 5)) {\n"
"    $seconds = RateLimiter::availableIn('send-message:'.$user->id);\n\n"
"    return 'You may try again in '.$seconds.' seconds.';\n"
"}\n"
msgstr "use Illuminate\\Support\\Facades\\RateLimiter;\n\n"
"if (RateLimiter::tooManyAttempts('send-message:'.$user->id, $perMinute = 5)) {\n"
"    $seconds = RateLimiter::availableIn('send-message:'.$user->id);\n\n"
"    return 'You may try again in '.$seconds.' seconds.';\n"
"}\n"

#: docs/8.x/rate-limiting.md:block 29 (code)
msgid "use App\\Models\\Message;\n"
"use Illuminate\\Support\\Facades\\RateLimiter;\n\n"
"/**\n"
" * Mark the message as read.\n"
" *\n"
" * @param  \\App\\Models\\Message  $message\n"
" * @return \\App\\Models\\Message\n"
" */\n"
"public function read(Message $message)\n"
"{\n"
"    $message->markAsRead();\n\n"
"    RateLimiter::clear('send-message:'.$message->user_id);\n\n"
"    return $message;\n"
"}\n"
msgstr "use App\\Models\\Message;\n"
"use Illuminate\\Support\\Facades\\RateLimiter;\n\n"
"/**\n"
" * Mark the message as read.\n"
" *\n"
" * @param  \\App\\Models\\Message  $message\n"
" * @return \\App\\Models\\Message\n"
" */\n"
"public function read(Message $message)\n"
"{\n"
"    $message->markAsRead();\n\n"
"    RateLimiter::clear('send-message:'.$message->user_id);\n\n"
"    return $message;\n"
"}\n"

