msgid ""
msgstr ""
"Content-Type: text/plain; charset=UTF-8\n"
"Language: zh_TW\n"
"Language-Team: Chinese Traditional\n"
"PO-Revision-Date: 2023-02-11 10:27\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Project-Id-Version: laravel-docs\n"
"X-Crowdin-File: /main/templates/envoy.pot\n"
"X-Crowdin-File-ID: 65\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"

# H1
#: ./docs/8.x/envoy.md:1
#: ./docs/9.x/envoy.md:1
#: ./docs/10.x/envoy.md:1
#: ./docs/11.x/envoy.md:1
#: ./docs/master/envoy.md:1
msgid "Laravel Envoy"
msgstr "Laravel Envoy"

# P
#: ./docs/8.x/envoy.md:3
#: ./docs/9.x/envoy.md:3
#: ./docs/10.x/envoy.md:3
#: ./docs/11.x/envoy.md:3
#: ./docs/master/envoy.md:3
msgid "[Introduction](#introduction)"
msgstr "[簡介](#introduction)"

# P
#: ./docs/8.x/envoy.md:4
#: ./docs/9.x/envoy.md:4
#: ./docs/10.x/envoy.md:4
#: ./docs/11.x/envoy.md:4
#: ./docs/master/envoy.md:4
msgid "[Installation](#installation)"
msgstr "[安裝](#installation)"

# P
#: ./docs/8.x/envoy.md:5
#: ./docs/9.x/envoy.md:5
#: ./docs/10.x/envoy.md:5
#: ./docs/11.x/envoy.md:5
#: ./docs/master/envoy.md:5
msgid "[Writing Tasks](#writing-tasks)"
msgstr "[撰寫任務](#writing-tasks)"

# P
#: ./docs/8.x/envoy.md:6
#: ./docs/9.x/envoy.md:6
#: ./docs/10.x/envoy.md:6
#: ./docs/11.x/envoy.md:6
#: ./docs/master/envoy.md:6
msgid "[Defining Tasks](#defining-tasks)"
msgstr "[定義任務](#defining-tasks)"

# P
#: ./docs/8.x/envoy.md:7
#: ./docs/9.x/envoy.md:7
#: ./docs/10.x/envoy.md:7
#: ./docs/11.x/envoy.md:7
#: ./docs/master/envoy.md:7
msgid "[Multiple Servers](#multiple-servers)"
msgstr "[多伺服器](#multiple-servers)"

# P
#: ./docs/8.x/envoy.md:8
#: ./docs/9.x/envoy.md:8
#: ./docs/10.x/envoy.md:8
#: ./docs/11.x/envoy.md:8
#: ./docs/master/envoy.md:8
msgid "[Setup](#setup)"
msgstr "[設定](#setup)"

# P
#: ./docs/8.x/envoy.md:9
#: ./docs/9.x/envoy.md:9
#: ./docs/10.x/envoy.md:9
#: ./docs/11.x/envoy.md:9
#: ./docs/master/envoy.md:9
msgid "[Variables](#variables)"
msgstr "[變數](#variables)"

# P
#: ./docs/8.x/envoy.md:10
#: ./docs/9.x/envoy.md:10
#: ./docs/10.x/envoy.md:10
#: ./docs/11.x/envoy.md:10
#: ./docs/master/envoy.md:10
msgid "[Stories](#stories)"
msgstr "[Story](#stories)"

# P
#: ./docs/8.x/envoy.md:11
#: ./docs/9.x/envoy.md:11
#: ./docs/10.x/envoy.md:11
#: ./docs/11.x/envoy.md:11
#: ./docs/master/envoy.md:11
msgid "[Hooks](#completion-hooks)"
msgstr "[Hook](#completion-hooks)"

# P
#: ./docs/8.x/envoy.md:12
#: ./docs/9.x/envoy.md:12
#: ./docs/10.x/envoy.md:12
#: ./docs/11.x/envoy.md:12
#: ./docs/master/envoy.md:12
msgid "[Running Tasks](#running-tasks)"
msgstr "[執行任務](#running-tasks)"

# P
#: ./docs/8.x/envoy.md:13
#: ./docs/9.x/envoy.md:13
#: ./docs/10.x/envoy.md:13
#: ./docs/11.x/envoy.md:13
#: ./docs/master/envoy.md:13
msgid "[Confirming Task Execution](#confirming-task-execution)"
msgstr "[確認任務的執行](#confirming-task-execution)"

# P
#: ./docs/8.x/envoy.md:14
#: ./docs/9.x/envoy.md:14
#: ./docs/10.x/envoy.md:14
#: ./docs/11.x/envoy.md:14
#: ./docs/master/envoy.md:14
msgid "[Notifications](#notifications)"
msgstr "[通知](#notifications)"

# P
#: ./docs/8.x/envoy.md:15
#: ./docs/9.x/envoy.md:15
#: ./docs/10.x/envoy.md:15
#: ./docs/11.x/envoy.md:15
#: ./docs/master/envoy.md:15
msgid "[Slack](#slack)"
msgstr "[Slack](#slack)"

# P
#: ./docs/8.x/envoy.md:16
#: ./docs/9.x/envoy.md:16
#: ./docs/10.x/envoy.md:16
#: ./docs/11.x/envoy.md:16
#: ./docs/master/envoy.md:16
msgid "[Discord](#discord)"
msgstr "[Discord](#discord)"

# P
#: ./docs/8.x/envoy.md:17
#: ./docs/9.x/envoy.md:17
#: ./docs/10.x/envoy.md:17
#: ./docs/11.x/envoy.md:17
#: ./docs/master/envoy.md:17
msgid "[Telegram](#telegram)"
msgstr "[Telegram](#telegram)"

# P
#: ./docs/8.x/envoy.md:18
#: ./docs/9.x/envoy.md:18
#: ./docs/10.x/envoy.md:18
#: ./docs/11.x/envoy.md:18
#: ./docs/master/envoy.md:18
msgid "[Microsoft Teams](#microsoft-teams)"
msgstr "[Microsoft Teams](#microsoft-teams)"

# P
#: ./docs/8.x/envoy.md:20
#: ./docs/9.x/envoy.md:20
#: ./docs/10.x/envoy.md:20
#: ./docs/11.x/envoy.md:20
#: ./docs/master/envoy.md:20
#~ msgid "<a name=\"introduction\"></a>"
#~ msgstr ""

# H2
#: ./docs/8.x/envoy.md:21
#: ./docs/9.x/envoy.md:21
#: ./docs/10.x/envoy.md:21
#: ./docs/11.x/envoy.md:21
#: ./docs/master/envoy.md:21
msgid "Introduction"
msgstr "簡介"

# P
#: ./docs/8.x/envoy.md:23
#: ./docs/9.x/envoy.md:23
#: ./docs/10.x/envoy.md:23
#: ./docs/11.x/envoy.md:23
#: ./docs/master/envoy.md:23
msgid "[Laravel Envoy](https://github.com/laravel/envoy) is a tool for executing common tasks you run on your remote servers. Using [Blade](/docs/{{version}}/blade) style syntax, you can easily setup tasks for deployment, Artisan commands, and more. Currently, Envoy only supports the Mac and Linux operating systems. However, Windows support is achievable using [WSL2](https://docs.microsoft.com/en-us/windows/wsl/install-win10)."
msgstr "[Laravel Envoy](https://github.com/laravel/envoy) 是一個用於在遠端伺服器上執行通用性任務的工具。只要使用 [Blade](/docs/{{version}}/blade) 風格的語法，就能輕鬆地設定部署任務、執行 Artisan 指令…等更多的任務。目前，Envoy 只支援 Mac 與 Linux 作業系統。不過，在 Windows 上可以通過 [WSL2](https://docs.microsoft.com/zh-tw/windows/wsl/install-win10) 來支援。"

# P
#: ./docs/8.x/envoy.md:25
#: ./docs/9.x/envoy.md:25
#: ./docs/10.x/envoy.md:25
#: ./docs/11.x/envoy.md:25
#: ./docs/master/envoy.md:25
#~ msgid "<a name=\"installation\"></a>"
#~ msgstr ""

# H2
#: ./docs/8.x/envoy.md:26
#: ./docs/9.x/envoy.md:26
#: ./docs/10.x/envoy.md:26
#: ./docs/11.x/envoy.md:26
#: ./docs/master/envoy.md:26
msgid "Installation"
msgstr "安裝"

# P
#: ./docs/8.x/envoy.md:28
#: ./docs/9.x/envoy.md:28
#: ./docs/10.x/envoy.md:28
#: ./docs/11.x/envoy.md:28
#: ./docs/master/envoy.md:28
msgid "First, install Envoy into your project using the Composer package manager:"
msgstr "首先，使用 Composer 套件管理員來將 Envoy 裝到你的專案中："

# CODE
# CODE: shell
#: ./docs/8.x/envoy.md:30
#: ./docs/9.x/envoy.md:30
#: ./docs/10.x/envoy.md:30
#: ./docs/11.x/envoy.md:30
#: ./docs/master/envoy.md:30
msgid "composer require laravel/envoy --dev"
msgstr ""

# P
#: ./docs/8.x/envoy.md:32
#: ./docs/9.x/envoy.md:34
#: ./docs/10.x/envoy.md:34
#: ./docs/11.x/envoy.md:34
#: ./docs/master/envoy.md:34
msgid "Once Envoy has been installed, the Envoy binary will be available in your application's `vendor/bin` directory:"
msgstr "安裝好 Envoy 後，Envoy 執行檔就會被放在專案的 `vendor/bin` 目錄下："

# CODE
# CODE: shell
#: ./docs/8.x/envoy.md:34
#: ./docs/9.x/envoy.md:36
#: ./docs/10.x/envoy.md:36
#: ./docs/11.x/envoy.md:36
#: ./docs/master/envoy.md:36
msgid "php vendor/bin/envoy"
msgstr ""

# P
#: ./docs/8.x/envoy.md:36
#: ./docs/9.x/envoy.md:40
#: ./docs/10.x/envoy.md:40
#: ./docs/11.x/envoy.md:40
#: ./docs/master/envoy.md:40
#~ msgid "<a name=\"writing-tasks\"></a>"
#~ msgstr ""

# H2
#: ./docs/8.x/envoy.md:37
#: ./docs/9.x/envoy.md:41
#: ./docs/10.x/envoy.md:41
#: ./docs/11.x/envoy.md:41
#: ./docs/master/envoy.md:41
msgid "Writing Tasks"
msgstr "撰寫任務"

# P
#: ./docs/8.x/envoy.md:39
#: ./docs/9.x/envoy.md:43
#: ./docs/10.x/envoy.md:43
#: ./docs/11.x/envoy.md:43
#: ./docs/master/envoy.md:43
#~ msgid "<a name=\"defining-tasks\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/envoy.md:40
#: ./docs/9.x/envoy.md:44
#: ./docs/10.x/envoy.md:44
#: ./docs/11.x/envoy.md:44
#: ./docs/master/envoy.md:44
msgid "Defining Tasks"
msgstr "定義任務"

# P
#: ./docs/8.x/envoy.md:42
#: ./docs/9.x/envoy.md:46
#: ./docs/10.x/envoy.md:46
#: ./docs/11.x/envoy.md:46
#: ./docs/master/envoy.md:46
msgid "Tasks are the basic building block of Envoy. Tasks define the shell commands that should execute on your remote servers when the task is invoked. For example, you might define a task that executes the `php artisan queue:restart` command on all of your application's queue worker servers."
msgstr "「任務」是 Envoy 中基本的建置區塊。任務定義了當某個任務被呼叫時，要在遠端伺服器上執行哪些 Shell 指令。舉例來說，可以定義一個會在專案的所有 Queue Worker 伺服器上執行 `php artisan queue:restart` 指令的任務。"

# P
#: ./docs/8.x/envoy.md:44
#: ./docs/9.x/envoy.md:48
#: ./docs/10.x/envoy.md:48
#: ./docs/11.x/envoy.md:48
#: ./docs/master/envoy.md:48
msgid "All of your Envoy tasks should be defined in an `Envoy.blade.php` file at the root of your application. Here's an example to get you started:"
msgstr "所有的 Envoy 任務都應定義在專案根目錄上的 `Envoy.blade.php` 檔中。我們來看看一個入門範例："

# CODE: bash
# CODE: blade
#: ./docs/8.x/envoy.md:46
#: ./docs/9.x/envoy.md:50
#: ./docs/10.x/envoy.md:50
#: ./docs/11.x/envoy.md:50
#: ./docs/master/envoy.md:50
msgid ""
"@servers(['web' => ['user@192.168.1.1'], 'workers' => ['user@192.168.1.2']])\n"
"\n"
"@task('restart-queues', ['on' => 'workers'])\n"
"    cd /home/user/example.com\n"
"    php artisan queue:restart\n"
"@endtask"
msgstr ""

# P
#: ./docs/8.x/envoy.md:55
#: ./docs/9.x/envoy.md:59
#: ./docs/10.x/envoy.md:59
#: ./docs/11.x/envoy.md:59
#: ./docs/master/envoy.md:59
msgid "As you can see, an array of `@servers` is defined at the top of the file, allowing you to reference these servers via the `on` option of your task declarations. The `@servers` declaration should always be placed on a single line. Within your `@task` declarations, you should place the shell commands that should execute on your servers when the task is invoked."
msgstr "就像這樣，檔案最上方定義了一組 `@servers` 的陣列，可以在定義任務的 `on` 選項中參照到這些伺服器。`@servers` 定義必須保持在同一行內。在 `@task` 定義內，應放置所有該任務在伺服器上被呼叫時要執行的 Shell 指令。"

# P
#: ./docs/8.x/envoy.md:57
#: ./docs/9.x/envoy.md:61
#: ./docs/10.x/envoy.md:61
#: ./docs/11.x/envoy.md:61
#: ./docs/master/envoy.md:61
#~ msgid "<a name=\"local-tasks\"></a>"
#~ msgstr ""

# H4
#: ./docs/8.x/envoy.md:58
#: ./docs/9.x/envoy.md:62
#: ./docs/10.x/envoy.md:62
#: ./docs/11.x/envoy.md:62
#: ./docs/master/envoy.md:62
msgid "Local Tasks"
msgstr "本機任務"

# P
#: ./docs/8.x/envoy.md:60
#: ./docs/9.x/envoy.md:64
#: ./docs/10.x/envoy.md:64
#: ./docs/11.x/envoy.md:64
#: ./docs/master/envoy.md:64
msgid "You can force a script to run on your local computer by specifying the server's IP address as `127.0.0.1`:"
msgstr "只要將伺服器的 IP 指定為 `127.0.0.1`，就可以強制讓某個 Script 在你的本機電腦上執行："

# CODE: bash
# CODE: blade
#: ./docs/8.x/envoy.md:62
#: ./docs/9.x/envoy.md:66
#: ./docs/10.x/envoy.md:66
#: ./docs/11.x/envoy.md:66
#: ./docs/master/envoy.md:66
msgid "@servers(['localhost' => '127.0.0.1'])"
msgstr ""

# P
#: ./docs/8.x/envoy.md:66
#: ./docs/9.x/envoy.md:70
#: ./docs/10.x/envoy.md:70
#: ./docs/11.x/envoy.md:70
#: ./docs/master/envoy.md:70
#~ msgid "<a name=\"importing-envoy-tasks\"></a>"
#~ msgstr ""

# H4
#: ./docs/8.x/envoy.md:67
#: ./docs/9.x/envoy.md:71
#: ./docs/10.x/envoy.md:71
#: ./docs/11.x/envoy.md:71
#: ./docs/master/envoy.md:71
msgid "Importing Envoy Tasks"
msgstr "匯入 Envoy 任務"

# P
#: ./docs/8.x/envoy.md:69
#: ./docs/9.x/envoy.md:73
#: ./docs/10.x/envoy.md:73
#: ./docs/11.x/envoy.md:73
#: ./docs/master/envoy.md:73
msgid "Using the `@import` directive, you may import other Envoy files so their stories and tasks are added to yours. After the files have been imported, you may execute the tasks they contain as if they were defined in your own Envoy file:"
msgstr "使用 `@import` 指示詞即可匯入其他 Envoy 檔案，讓其他 Envoy 檔案中的 Story 與任務變成目前這個檔案內的 Story 與任務。匯入的檔案後，就呼叫匯入檔案內的定義："

# CODE: bash
# CODE: blade
#: ./docs/8.x/envoy.md:71
#: ./docs/9.x/envoy.md:75
#: ./docs/10.x/envoy.md:75
#: ./docs/11.x/envoy.md:75
#: ./docs/master/envoy.md:75
msgid "@import('vendor/package/Envoy.blade.php')"
msgstr ""

# P
#: ./docs/8.x/envoy.md:75
#: ./docs/9.x/envoy.md:79
#: ./docs/10.x/envoy.md:79
#: ./docs/11.x/envoy.md:79
#: ./docs/master/envoy.md:79
#~ msgid "<a name=\"multiple-servers\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/envoy.md:76
#: ./docs/9.x/envoy.md:80
#: ./docs/10.x/envoy.md:80
#: ./docs/11.x/envoy.md:80
#: ./docs/master/envoy.md:80
msgid "Multiple Servers"
msgstr "多個伺服器"

# P
#: ./docs/8.x/envoy.md:78
#: ./docs/9.x/envoy.md:82
#: ./docs/10.x/envoy.md:82
#: ./docs/11.x/envoy.md:82
#: ./docs/master/envoy.md:82
msgid "Envoy allows you to easily run a task across multiple servers. First, add additional servers to your `@servers` declaration. Each server should be assigned a unique name. Once you have defined your additional servers you may list each of the servers in the task's `on` array:"
msgstr "在 Envoy 中，我們可以輕鬆地在多個伺服器上執行同一個任務。首先，在 `@servers` 定義中加上更多的伺服器。請為各個伺服器指定一個不重複的名稱。定義好伺服器後，就可以在任務的 `on` 陣列中列出這些伺服器："

# CODE: bash
# CODE: blade
#: ./docs/8.x/envoy.md:80
#: ./docs/9.x/envoy.md:84
#: ./docs/10.x/envoy.md:84
#: ./docs/11.x/envoy.md:84
#: ./docs/master/envoy.md:84
msgid ""
"@servers(['web-1' => '192.168.1.1', 'web-2' => '192.168.1.2'])\n"
"\n"
"@task('deploy', ['on' => ['web-1', 'web-2']])\n"
"    cd /home/user/example.com\n"
"    git pull origin {{ $branch }}\n"
"    php artisan migrate --force\n"
"@endtask"
msgstr ""

# P
#: ./docs/8.x/envoy.md:90
#: ./docs/9.x/envoy.md:94
#: ./docs/10.x/envoy.md:94
#: ./docs/11.x/envoy.md:94
#: ./docs/master/envoy.md:94
#~ msgid "<a name=\"parallel-execution\"></a>"
#~ msgstr ""

# H4
#: ./docs/8.x/envoy.md:91
#: ./docs/9.x/envoy.md:95
#: ./docs/10.x/envoy.md:95
#: ./docs/11.x/envoy.md:95
#: ./docs/master/envoy.md:95
msgid "Parallel Execution"
msgstr "平行執行"

# P
#: ./docs/8.x/envoy.md:93
#: ./docs/9.x/envoy.md:97
#: ./docs/10.x/envoy.md:97
#: ./docs/11.x/envoy.md:97
#: ./docs/master/envoy.md:97
msgid "By default, tasks will be executed on each server serially. In other words, a task will finish running on the first server before proceeding to execute on the second server. If you would like to run a task across multiple servers in parallel, add the `parallel` option to your task declaration:"
msgstr "預設情況下，任務會在各個伺服器間依序執行。也就是說，某個任務會先在第一個伺服器上執行，然後才在第二個伺服器上執行。若想讓某個任務在多個伺服器間平行執行，請在任務定義中加上 `parallel` 選項："

# CODE: bash
# CODE: blade
#: ./docs/8.x/envoy.md:95
#: ./docs/9.x/envoy.md:99
#: ./docs/10.x/envoy.md:99
#: ./docs/11.x/envoy.md:99
#: ./docs/master/envoy.md:99
msgid ""
"@servers(['web-1' => '192.168.1.1', 'web-2' => '192.168.1.2'])\n"
"\n"
"@task('deploy', ['on' => ['web-1', 'web-2'], 'parallel' => true])\n"
"    cd /home/user/example.com\n"
"    git pull origin {{ $branch }}\n"
"    php artisan migrate --force\n"
"@endtask"
msgstr ""

# P
#: ./docs/8.x/envoy.md:105
#: ./docs/9.x/envoy.md:109
#: ./docs/10.x/envoy.md:109
#: ./docs/11.x/envoy.md:109
#: ./docs/master/envoy.md:109
#~ msgid "<a name=\"setup\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/envoy.md:106
#: ./docs/9.x/envoy.md:110
#: ./docs/10.x/envoy.md:110
#: ./docs/11.x/envoy.md:110
#: ./docs/master/envoy.md:110
msgid "Setup"
msgstr "設定"

# P
#: ./docs/8.x/envoy.md:108
#: ./docs/9.x/envoy.md:112
#: ./docs/10.x/envoy.md:112
#: ./docs/11.x/envoy.md:112
#: ./docs/master/envoy.md:112
msgid "Sometimes, you may need to execute arbitrary PHP code before running your Envoy tasks. You may use the `@setup` directive to define a block of PHP code that should execute before your tasks:"
msgstr "有時候，我們需要在 Envoy 任務前先執行一些 PHP 程式碼。可以使用 `@setup` 指示詞來定義一組 PHP 程式碼區塊，這個程式碼區塊會在任務前執行："

# CODE: php
#: ./docs/8.x/envoy.md:110
#: ./docs/9.x/envoy.md:114
#: ./docs/10.x/envoy.md:114
#: ./docs/11.x/envoy.md:114
#: ./docs/master/envoy.md:114
msgid ""
"@setup\n"
"    $now = new DateTime;\n"
"@endsetup"
msgstr ""

# P
#: ./docs/8.x/envoy.md:116
#: ./docs/9.x/envoy.md:120
#: ./docs/10.x/envoy.md:120
#: ./docs/11.x/envoy.md:120
#: ./docs/master/envoy.md:120
msgid "If you need to require other PHP files before your task is executed, you may use the `@include` directive at the top of your `Envoy.blade.php` file:"
msgstr "若有需要在任務執行前 require 其他的 PHP 的哪敢，可以在 `Envoy.blade.php` 檔案的頂端使用 `@include` 指示詞："

# CODE: bash
# CODE: blade
#: ./docs/8.x/envoy.md:118
#: ./docs/9.x/envoy.md:122
#: ./docs/10.x/envoy.md:122
#: ./docs/11.x/envoy.md:122
#: ./docs/master/envoy.md:122
msgid ""
"@include('vendor/autoload.php')\n"
"\n"
"@task('restart-queues')\n"
"    # ...\n"
"@endtask"
msgstr ""

# P
#: ./docs/8.x/envoy.md:126
#: ./docs/9.x/envoy.md:130
#: ./docs/10.x/envoy.md:130
#: ./docs/11.x/envoy.md:130
#: ./docs/master/envoy.md:130
#~ msgid "<a name=\"variables\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/envoy.md:127
#: ./docs/9.x/envoy.md:131
#: ./docs/10.x/envoy.md:131
#: ./docs/11.x/envoy.md:131
#: ./docs/master/envoy.md:131
msgid "Variables"
msgstr "變數"

# P
#: ./docs/8.x/envoy.md:129
#: ./docs/9.x/envoy.md:133
#: ./docs/10.x/envoy.md:133
#: ./docs/11.x/envoy.md:133
#: ./docs/master/envoy.md:133
msgid "If needed, you may pass arguments to Envoy tasks by specifying them on the command line when invoking Envoy:"
msgstr "若有需要，可以在執行 Envoy 時在指令列上指定要傳給 Envoy 的引數："

# CODE
# CODE: shell
#: ./docs/8.x/envoy.md:131
#: ./docs/9.x/envoy.md:135
#: ./docs/10.x/envoy.md:135
#: ./docs/11.x/envoy.md:135
#: ./docs/master/envoy.md:135
msgid "php vendor/bin/envoy run deploy --branch=master"
msgstr ""

# P
#: ./docs/8.x/envoy.md:133
#: ./docs/9.x/envoy.md:139
#: ./docs/10.x/envoy.md:139
#: ./docs/11.x/envoy.md:139
#: ./docs/master/envoy.md:139
msgid "You may access the options within your tasks using Blade's \"echo\" syntax. You may also define Blade `if` statements and loops within your tasks. For example, let's verify the presence of the `$branch` variable before executing the `git pull` command:"
msgstr "可以使用 Blade 的「echo」語法來在任務中存取這些選項。在任務中，也可以定義 Blade 的 `if` 陳述式與迴圈。舉例來說，我們來看看一個在執行 `git pull` 指令前先檢查 `$branch` 變數是否存在的範例："

# CODE: bash
# CODE: blade
#: ./docs/8.x/envoy.md:135
#: ./docs/9.x/envoy.md:141
#: ./docs/10.x/envoy.md:141
#: ./docs/11.x/envoy.md:141
#: ./docs/master/envoy.md:141
msgid ""
"@servers(['web' => ['user@192.168.1.1']])\n"
"\n"
"@task('deploy', ['on' => 'web'])\n"
"    cd /home/user/example.com\n"
"\n"
"    @if ($branch)\n"
"        git pull origin {{ $branch }}\n"
"    @endif\n"
"\n"
"    php artisan migrate --force\n"
"@endtask"
msgstr ""

# P
#: ./docs/8.x/envoy.md:149
#: ./docs/9.x/envoy.md:155
#: ./docs/10.x/envoy.md:155
#: ./docs/11.x/envoy.md:155
#: ./docs/master/envoy.md:155
#~ msgid "<a name=\"stories\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/envoy.md:150
#: ./docs/9.x/envoy.md:156
#: ./docs/10.x/envoy.md:156
#: ./docs/11.x/envoy.md:156
#: ./docs/master/envoy.md:156
msgid "Stories"
msgstr "Story"

# P
#: ./docs/8.x/envoy.md:152
#: ./docs/9.x/envoy.md:158
#: ./docs/10.x/envoy.md:158
#: ./docs/11.x/envoy.md:158
#: ./docs/master/envoy.md:158
msgid "Stories group a set of tasks under a single, convenient name. For instance, a `deploy` story may run the `update-code` and `install-dependencies` tasks by listing the task names within its definition:"
msgstr "「Story」是一組任務，通過「Story」可以將這組任務放在單一一個名稱下以方便重複使用。舉例來說，若要讓 `deploy` Story 執行 `update-code` 與 `install-dependencies` 任務，我們只需要在 `deploy` 這個 Story 的定義中分別列出這些任務即可："

# CODE: bash
# CODE: blade
#: ./docs/8.x/envoy.md:154
#: ./docs/9.x/envoy.md:160
#: ./docs/10.x/envoy.md:160
#: ./docs/11.x/envoy.md:160
#: ./docs/master/envoy.md:160
msgid ""
"@servers(['web' => ['user@192.168.1.1']])\n"
"\n"
"@story('deploy')\n"
"    update-code\n"
"    install-dependencies\n"
"@endstory\n"
"\n"
"@task('update-code')\n"
"    cd /home/user/example.com\n"
"    git pull origin master\n"
"@endtask\n"
"\n"
"@task('install-dependencies')\n"
"    cd /home/user/example.com\n"
"    composer install\n"
"@endtask"
msgstr ""

# P
#: ./docs/8.x/envoy.md:173
#: ./docs/9.x/envoy.md:179
#: ./docs/10.x/envoy.md:179
#: ./docs/11.x/envoy.md:179
#: ./docs/master/envoy.md:179
msgid "Once the story has been written, you may invoke it in the same way you would invoke a task:"
msgstr "寫好 Story 後，就可以像執行任務一樣執行 Story："

# CODE
# CODE: shell
#: ./docs/8.x/envoy.md:175
#: ./docs/8.x/envoy.md:252
#: ./docs/9.x/envoy.md:181
#: ./docs/9.x/envoy.md:260
#: ./docs/10.x/envoy.md:181
#: ./docs/10.x/envoy.md:260
#: ./docs/11.x/envoy.md:181
#: ./docs/11.x/envoy.md:260
#: ./docs/master/envoy.md:181
#: ./docs/master/envoy.md:260
msgid "php vendor/bin/envoy run deploy"
msgstr ""

# P
#: ./docs/8.x/envoy.md:177
#: ./docs/9.x/envoy.md:185
#: ./docs/10.x/envoy.md:185
#: ./docs/11.x/envoy.md:185
#: ./docs/master/envoy.md:185
#~ msgid "<a name=\"completion-hooks\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/envoy.md:178
#: ./docs/9.x/envoy.md:186
#: ./docs/10.x/envoy.md:186
#: ./docs/11.x/envoy.md:186
#: ./docs/master/envoy.md:186
msgid "Hooks"
msgstr "Hook"

# P
#: ./docs/8.x/envoy.md:180
#: ./docs/9.x/envoy.md:188
#: ./docs/10.x/envoy.md:188
#: ./docs/11.x/envoy.md:188
#: ./docs/master/envoy.md:188
msgid "When tasks and stories run, a number of hooks are executed. The hook types supported by Envoy are `@before`, `@after`, `@error`, `@success`, and `@finished`. All of the code in these hooks is interpreted as PHP and executed locally, not on the remote servers that your tasks interact with."
msgstr "在執行任務與 Story 時，也會執行到多個 Hook。Envoy 支援的 Hook 類型為 `@before`、`@after`、`@error`、`@success`、與 `@finished`。這些 Hook 中所有的程式碼都會在本機上以 PHP 執行，而不是在執行任務的遠端伺服器上執行："

# P
#: ./docs/8.x/envoy.md:182
#: ./docs/9.x/envoy.md:190
#: ./docs/10.x/envoy.md:190
#: ./docs/11.x/envoy.md:190
#: ./docs/master/envoy.md:190
msgid "You may define as many of each of these hooks as you like. They will be executed in the order that they appear in your Envoy script."
msgstr "可以依照需求任意定義這些 Hook。這些 Hook 會以在 Envoy 指令稿內出現的順序執行："

# P
#: ./docs/8.x/envoy.md:184
#: ./docs/9.x/envoy.md:192
#: ./docs/10.x/envoy.md:192
#: ./docs/11.x/envoy.md:192
#: ./docs/master/envoy.md:192
#~ msgid "<a name=\"hook-before\"></a>"
#~ msgstr ""

# H4
#: ./docs/8.x/envoy.md:185
#: ./docs/9.x/envoy.md:193
#: ./docs/10.x/envoy.md:193
#: ./docs/11.x/envoy.md:193
#: ./docs/master/envoy.md:193
msgid "`@before`"
msgstr "`@before`"

# P
#: ./docs/8.x/envoy.md:187
#: ./docs/9.x/envoy.md:195
#: ./docs/10.x/envoy.md:195
#: ./docs/11.x/envoy.md:195
#: ./docs/master/envoy.md:195
msgid "Before each task execution, all of the `@before` hooks registered in your Envoy script will execute. The `@before` hooks receive the name of the task that will be executed:"
msgstr "在執行各個任務之前，會執行所有在 Envoy 指令稿內註冊的 `@before` hook 。`@before` Hook 會收到正在執行的任務名稱："

# CODE: php
# CODE: blade
#: ./docs/8.x/envoy.md:189
#: ./docs/9.x/envoy.md:197
#: ./docs/10.x/envoy.md:197
#: ./docs/11.x/envoy.md:197
#: ./docs/master/envoy.md:197
msgid ""
"@before\n"
"    if ($task === 'deploy') {\n"
"        // ...\n"
"    }\n"
"@endbefore"
msgstr ""

# P
#: ./docs/8.x/envoy.md:197
#: ./docs/9.x/envoy.md:205
#: ./docs/10.x/envoy.md:205
#: ./docs/11.x/envoy.md:205
#: ./docs/master/envoy.md:205
#~ msgid "<a name=\"completion-after\"></a>"
#~ msgstr ""

# H4
#: ./docs/8.x/envoy.md:198
#: ./docs/9.x/envoy.md:206
#: ./docs/10.x/envoy.md:206
#: ./docs/11.x/envoy.md:206
#: ./docs/master/envoy.md:206
msgid "`@after`"
msgstr "`@after`"

# P
#: ./docs/8.x/envoy.md:200
#: ./docs/9.x/envoy.md:208
#: ./docs/10.x/envoy.md:208
#: ./docs/11.x/envoy.md:208
#: ./docs/master/envoy.md:208
msgid "After each task execution, all of the `@after` hooks registered in your Envoy script will execute. The `@after` hooks receive the name of the task that was executed:"
msgstr "在執行各個任務之後，會執行所有在 Envoy 指令稿內註冊的 `@after` hook 。`@after` Hook 會收到剛才執行完畢的任務名稱："

# CODE: php
# CODE: blade
#: ./docs/8.x/envoy.md:202
#: ./docs/9.x/envoy.md:210
#: ./docs/10.x/envoy.md:210
#: ./docs/11.x/envoy.md:210
#: ./docs/master/envoy.md:210
msgid ""
"@after\n"
"    if ($task === 'deploy') {\n"
"        // ...\n"
"    }\n"
"@endafter"
msgstr ""

# P
#: ./docs/8.x/envoy.md:210
#: ./docs/9.x/envoy.md:218
#: ./docs/10.x/envoy.md:218
#: ./docs/11.x/envoy.md:218
#: ./docs/master/envoy.md:218
#~ msgid "<a name=\"completion-error\"></a>"
#~ msgstr ""

# H4
#: ./docs/8.x/envoy.md:211
#: ./docs/9.x/envoy.md:219
#: ./docs/10.x/envoy.md:219
#: ./docs/11.x/envoy.md:219
#: ./docs/master/envoy.md:219
msgid "`@error`"
msgstr "`@error`"

# P
#: ./docs/8.x/envoy.md:213
#: ./docs/9.x/envoy.md:221
#: ./docs/10.x/envoy.md:221
#: ./docs/11.x/envoy.md:221
#: ./docs/master/envoy.md:221
msgid "After every task failure (exits with a status code greater than `0`), all of the `@error` hooks registered in your Envoy script will execute. The `@error` hooks receive the name of the task that was executed:"
msgstr "當有任何任務失敗 (終止代碼大於 `0` 時)，會執行所有在 Envoy 指令稿內註冊的 `@error` hook 。`@error` Hook 會收到剛才執行完畢的任務名稱："

# CODE: php
# CODE: blade
#: ./docs/8.x/envoy.md:215
#: ./docs/9.x/envoy.md:223
#: ./docs/10.x/envoy.md:223
#: ./docs/11.x/envoy.md:223
#: ./docs/master/envoy.md:223
msgid ""
"@error\n"
"    if ($task === 'deploy') {\n"
"        // ...\n"
"    }\n"
"@enderror"
msgstr ""

# P
#: ./docs/8.x/envoy.md:223
#: ./docs/9.x/envoy.md:231
#: ./docs/10.x/envoy.md:231
#: ./docs/11.x/envoy.md:231
#: ./docs/master/envoy.md:231
#~ msgid "<a name=\"completion-success\"></a>"
#~ msgstr ""

# H4
#: ./docs/8.x/envoy.md:224
#: ./docs/9.x/envoy.md:232
#: ./docs/10.x/envoy.md:232
#: ./docs/11.x/envoy.md:232
#: ./docs/master/envoy.md:232
msgid "`@success`"
msgstr "`@success`"

# P
#: ./docs/8.x/envoy.md:226
#: ./docs/9.x/envoy.md:234
#: ./docs/10.x/envoy.md:234
#: ./docs/11.x/envoy.md:234
#: ./docs/master/envoy.md:234
msgid "If all tasks have executed without errors, all of the `@success` hooks registered in your Envoy script will execute:"
msgstr "若所有任務都完成執行且沒有產生錯誤，則會執行所有 Envoy 指令稿內註冊的 `@success` Hook："

# CODE: bash
# CODE: blade
#: ./docs/8.x/envoy.md:228
#: ./docs/9.x/envoy.md:236
#: ./docs/10.x/envoy.md:236
#: ./docs/11.x/envoy.md:236
#: ./docs/master/envoy.md:236
msgid ""
"@success\n"
"    // ...\n"
"@endsuccess"
msgstr ""

# P
#: ./docs/8.x/envoy.md:234
#: ./docs/9.x/envoy.md:242
#: ./docs/10.x/envoy.md:242
#: ./docs/11.x/envoy.md:242
#: ./docs/master/envoy.md:242
#~ msgid "<a name=\"completion-finished\"></a>"
#~ msgstr ""

# H4
#: ./docs/8.x/envoy.md:235
#: ./docs/9.x/envoy.md:243
#: ./docs/10.x/envoy.md:243
#: ./docs/11.x/envoy.md:243
#: ./docs/master/envoy.md:243
msgid "`@finished`"
msgstr "`@finished`"

# P
#: ./docs/8.x/envoy.md:237
#: ./docs/9.x/envoy.md:245
#: ./docs/10.x/envoy.md:245
#: ./docs/11.x/envoy.md:245
#: ./docs/master/envoy.md:245
msgid "After all tasks have been executed (regardless of exit status), all of the `@finished` hooks will be executed. The `@finished` hooks receive the status code of the completed task, which may be `null` or an `integer` greater than or equal to `0`:"
msgstr "當所有任務都執行完畢後 (無論終止狀態碼為何)，會執行所有 `@finished` Hook。`@finished` Hook 會收到已完成任務的終止狀態碼，該狀態碼可能是 `null`，或是大於或等於 `0` 的 `integer`："

# CODE: bash
# CODE: blade
#: ./docs/8.x/envoy.md:239
#: ./docs/9.x/envoy.md:247
#: ./docs/10.x/envoy.md:247
#: ./docs/11.x/envoy.md:247
#: ./docs/master/envoy.md:247
msgid ""
"@finished\n"
"    if ($exitCode > 0) {\n"
"        // There were errors in one of the tasks...\n"
"    }\n"
"@endfinished"
msgstr ""

# P
#: ./docs/8.x/envoy.md:247
#: ./docs/9.x/envoy.md:255
#: ./docs/10.x/envoy.md:255
#: ./docs/11.x/envoy.md:255
#: ./docs/master/envoy.md:255
#~ msgid "<a name=\"running-tasks\"></a>"
#~ msgstr ""

# H2
#: ./docs/8.x/envoy.md:248
#: ./docs/9.x/envoy.md:256
#: ./docs/10.x/envoy.md:256
#: ./docs/11.x/envoy.md:256
#: ./docs/master/envoy.md:256
msgid "Running Tasks"
msgstr "執行任務"

# P
#: ./docs/8.x/envoy.md:250
#: ./docs/9.x/envoy.md:258
#: ./docs/10.x/envoy.md:258
#: ./docs/11.x/envoy.md:258
#: ./docs/master/envoy.md:258
msgid "To run a task or story that is defined in your application's `Envoy.blade.php` file, execute Envoy's `run` command, passing the name of the task or story you would like to execute. Envoy will execute the task and display the output from your remote servers as the task is running:"
msgstr "若要執行專案中 `Envoy.blade.php` 檔案所定義的任務或 Story，可以執行 Envoy 的 `run` 指令，並傳入要執行的任務或 Story 名稱。Envoy 會執行該任務，並在執行任務時顯示遠端伺服器上的輸出："

# P
#: ./docs/8.x/envoy.md:254
#: ./docs/9.x/envoy.md:264
#: ./docs/10.x/envoy.md:264
#: ./docs/11.x/envoy.md:264
#: ./docs/master/envoy.md:264
#~ msgid "<a name=\"confirming-task-execution\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/envoy.md:255
#: ./docs/9.x/envoy.md:265
#: ./docs/10.x/envoy.md:265
#: ./docs/11.x/envoy.md:265
#: ./docs/master/envoy.md:265
msgid "Confirming Task Execution"
msgstr "確認任務的執行"

# P
#: ./docs/8.x/envoy.md:257
#: ./docs/9.x/envoy.md:267
#: ./docs/10.x/envoy.md:267
#: ./docs/11.x/envoy.md:267
#: ./docs/master/envoy.md:267
msgid "If you would like to be prompted for confirmation before running a given task on your servers, you should add the `confirm` directive to your task declaration. This option is particularly useful for destructive operations:"
msgstr "若想在任務於遠端伺服器上執行前提示確認，請在任務定義中加上 `confirm` 指示詞。對於一些破壞性的操作，就特別適合這個選項："

# CODE: bash
# CODE: blade
#: ./docs/8.x/envoy.md:259
#: ./docs/9.x/envoy.md:269
#: ./docs/10.x/envoy.md:269
#: ./docs/11.x/envoy.md:269
#: ./docs/master/envoy.md:269
msgid ""
"@task('deploy', ['on' => 'web', 'confirm' => true])\n"
"    cd /home/user/example.com\n"
"    git pull origin {{ $branch }}\n"
"    php artisan migrate\n"
"@endtask"
msgstr ""

# P
#: ./docs/8.x/envoy.md:267
#: ./docs/9.x/envoy.md:277
#: ./docs/10.x/envoy.md:277
#: ./docs/11.x/envoy.md:277
#: ./docs/master/envoy.md:277
#~ msgid "<a name=\"notifications\"></a>"
#~ msgstr ""

# H2
#: ./docs/8.x/envoy.md:268
#: ./docs/9.x/envoy.md:278
#: ./docs/10.x/envoy.md:278
#: ./docs/11.x/envoy.md:278
#: ./docs/master/envoy.md:278
msgid "Notifications"
msgstr "通知"

# P
#: ./docs/8.x/envoy.md:270
#: ./docs/9.x/envoy.md:280
#: ./docs/10.x/envoy.md:280
#: ./docs/11.x/envoy.md:280
#: ./docs/master/envoy.md:280
#~ msgid "<a name=\"slack\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/envoy.md:271
#: ./docs/9.x/envoy.md:281
#: ./docs/10.x/envoy.md:281
#: ./docs/11.x/envoy.md:281
#: ./docs/master/envoy.md:281
msgid "Slack"
msgstr "Slack"

# P
#: ./docs/8.x/envoy.md:273
#: ./docs/9.x/envoy.md:283
#: ./docs/10.x/envoy.md:283
#: ./docs/11.x/envoy.md:283
#: ./docs/master/envoy.md:283
msgid "Envoy supports sending notifications to [Slack](https://slack.com) after each task is executed. The `@slack` directive accepts a Slack hook URL and a channel / user name. You may retrieve your webhook URL by creating an \"Incoming WebHooks\" integration in your Slack control panel."
msgstr "Envoy 支援在當任務執行完畢後將通知傳送給 [Slack](https://slack.com)。`@slack` 指示詞接受一組 Slack Hook URL 與一組 Channel (頻道) / User name (使用者名稱)。可以在 Slack 的控制面板中建立「Incoming WebHooks (連入 Webhook)」來取得一組 Webhook URL。"

# P
#: ./docs/8.x/envoy.md:275
#: ./docs/9.x/envoy.md:285
#: ./docs/10.x/envoy.md:285
#: ./docs/11.x/envoy.md:285
#: ./docs/master/envoy.md:285
msgid "You should pass the entire webhook URL as the first argument given to the `@slack` directive. The second argument given to the `@slack` directive should be a channel name (`#channel`) or a user name (`@user`):"
msgstr "請將完整的 Webhook URL 作為第一個引數傳給 `@slack` 指示詞。傳給 `@slack` 指示詞的第二個引數應為頻道名稱 (`#channel`) 或使用者名稱 (`@user`)："

# CODE
# CODE: blade
#: ./docs/8.x/envoy.md:277
#: ./docs/9.x/envoy.md:287
#: ./docs/10.x/envoy.md:287
#: ./docs/11.x/envoy.md:287
#: ./docs/master/envoy.md:287
msgid ""
"@finished\n"
"    @slack('webhook-url', '#bots')\n"
"@endfinished"
msgstr ""

# P
#: ./docs/8.x/envoy.md:281
#: ./docs/9.x/envoy.md:293
#: ./docs/10.x/envoy.md:293
#: ./docs/11.x/envoy.md:293
#: ./docs/master/envoy.md:293
msgid "By default, Envoy notifications will send a message to the notification channel describing the task that was executed. However, you may overwrite this message with your own custom message by passing a third argument to the `@slack` directive:"
msgstr "預設情況下，Envoy 會傳送描述已執行任務的訊息給通知頻道。不過，只要傳入第三個引數給 `@slack` 指示詞，就可以使用自定訊息來複寫這個訊息："

# CODE
# CODE: blade
#: ./docs/8.x/envoy.md:283
#: ./docs/9.x/envoy.md:295
#: ./docs/10.x/envoy.md:295
#: ./docs/11.x/envoy.md:295
#: ./docs/master/envoy.md:295
msgid ""
"@finished\n"
"    @slack('webhook-url', '#bots', 'Hello, Slack.')\n"
"@endfinished"
msgstr ""

# P
#: ./docs/8.x/envoy.md:287
#: ./docs/9.x/envoy.md:301
#: ./docs/10.x/envoy.md:301
#: ./docs/11.x/envoy.md:301
#: ./docs/master/envoy.md:301
#~ msgid "<a name=\"discord\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/envoy.md:288
#: ./docs/9.x/envoy.md:302
#: ./docs/10.x/envoy.md:302
#: ./docs/11.x/envoy.md:302
#: ./docs/master/envoy.md:302
msgid "Discord"
msgstr "Discord"

# P
#: ./docs/8.x/envoy.md:290
#: ./docs/9.x/envoy.md:304
#: ./docs/10.x/envoy.md:304
#: ./docs/11.x/envoy.md:304
#: ./docs/master/envoy.md:304
msgid "Envoy also supports sending notifications to [Discord](https://discord.com) after each task is executed. The `@discord` directive accepts a Discord hook URL and a message. You may retrieve your webhook URL by creating a \"Webhook\" in your Server Settings and choosing which channel the webhook should post to. You should pass the entire Webhook URL into the `@discord` directive:"
msgstr "Envoy 也支援在各個任務執行完畢後傳送通知給 [Discord](https://discord.com)。`@discord` 指示詞接受一個 Discord Hook URL 與訊息。若要取得 Webhook URL，請在 Dsicrod 的伺服器設定建立一個「Webhook」，並指定該 Webhook 要傳送訊息到哪個頻道。請將完整的 Webhook URL 傳入 `@discord` 指示詞內："

# CODE
# CODE: blade
#: ./docs/8.x/envoy.md:292
#: ./docs/9.x/envoy.md:306
#: ./docs/10.x/envoy.md:306
#: ./docs/11.x/envoy.md:306
#: ./docs/master/envoy.md:306
msgid ""
"@finished\n"
"    @discord('discord-webhook-url')\n"
"@endfinished"
msgstr ""

# P
#: ./docs/8.x/envoy.md:296
#: ./docs/9.x/envoy.md:312
#: ./docs/10.x/envoy.md:312
#: ./docs/11.x/envoy.md:312
#: ./docs/master/envoy.md:312
#~ msgid "<a name=\"telegram\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/envoy.md:297
#: ./docs/9.x/envoy.md:313
#: ./docs/10.x/envoy.md:313
#: ./docs/11.x/envoy.md:313
#: ./docs/master/envoy.md:313
msgid "Telegram"
msgstr "Telegram"

# P
#: ./docs/8.x/envoy.md:299
#: ./docs/9.x/envoy.md:315
#: ./docs/10.x/envoy.md:315
#: ./docs/11.x/envoy.md:315
#: ./docs/master/envoy.md:315
msgid "Envoy also supports sending notifications to [Telegram](https://telegram.org) after each task is executed. The `@telegram` directive accepts a Telegram Bot ID and a Chat ID. You may retrieve your Bot ID by creating a new bot using [BotFather](https://t.me/botfather). You can retrieve a valid Chat ID using [@username_to_id_bot](https://t.me/username_to_id_bot). You should pass the entire Bot ID and Chat ID into the `@telegram` directive:"
msgstr "Envoy 也支援在各個任務執行完畢後傳送通知到 [Telegram](https://telegram.org)。`@telegram` 指示詞接受一個 Telegram Bot ID 與一個 Chat ID。若要取得 Bot ID，可以使用 [BotFather](https://t.me/botfather) 來建立一個新的 Bot。使用 [@username_to_id_bot](https://t.me/username_to_id_bot) 即可取得有效的 Chat ID。請傳入完整的 Bot ID 與 Chat ID 給 `@telegram` 指示詞："

# CODE
# CODE: blade
#: ./docs/8.x/envoy.md:301
#: ./docs/9.x/envoy.md:317
#: ./docs/10.x/envoy.md:317
#: ./docs/11.x/envoy.md:317
#: ./docs/master/envoy.md:317
msgid ""
"@finished\n"
"    @telegram('bot-id','chat-id')\n"
"@endfinished"
msgstr ""

# P
#: ./docs/8.x/envoy.md:305
#: ./docs/9.x/envoy.md:323
#: ./docs/10.x/envoy.md:323
#: ./docs/11.x/envoy.md:323
#: ./docs/master/envoy.md:323
#~ msgid "<a name=\"microsoft-teams\"></a>"
#~ msgstr ""

# H3
#: ./docs/8.x/envoy.md:306
#: ./docs/9.x/envoy.md:324
#: ./docs/10.x/envoy.md:324
#: ./docs/11.x/envoy.md:324
#: ./docs/master/envoy.md:324
msgid "Microsoft Teams"
msgstr "Microsoft Teams"

# P
#: ./docs/8.x/envoy.md:308
msgid "Envoy also supports sending notifications to [Microsoft Teams](https://www.microsoft.com/en-us/microsoft-teams) after each task is executed. The `@microsoftTeams` directive accepts a Teams Webhook (required), a message, theme color (success, info, warning, error), and an array of options. You may retrieve your Teams Webook by creating a new [incoming webhook](https://docs.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/add-incoming-webhook). The Teams API has many other attributes to customize your message box like title, summary, and sections. You can find more information on the [Microsoft Teams documentation](https://docs.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/connectors-using?tabs=cURL#example-of-connector-message). You should pass the entire Webhook URL into the `@microsoftTeams` directive:"
msgstr "Envoy 也支援在任務執行完成後傳送通知給 [Microsoft Teams](https://www.microsoft.com/en-us/microsoft-teams)。`@microsoftTeams` 指示詞的引數為一個 Teams Webhook (必填)、一個訊息、主題色 (success、info、warning、error)、與一組選項陣列。若要取得 Teams Webhook，請建立一個新的 [連入 Webhook](https://docs.microsoft.com/zh-tw/microsoftteams/platform/webhooks-and-connectors/how-to/add-incoming-webhook)。Teams 的 API 還有其他選項，可用在自定 Message Box，如標題、摘要、段落等。更多資訊請參考 [Microsoft Teams 的說明文件](https://docs.microsoft.com/zh-tw/microsoftteams/platform/webhooks-and-connectors/how-to/connectors-using?tabs=cURL#example-of-connector-message)。請傳入完整的 Webhook URL 給 `@microsoftTeams` 指示詞："

# CODE
# CODE: blade
#: ./docs/8.x/envoy.md:310
#: ./docs/9.x/envoy.md:328
#: ./docs/10.x/envoy.md:328
#: ./docs/11.x/envoy.md:328
#: ./docs/master/envoy.md:328
msgid ""
"@finished\n"
"    @microsoftTeams('webhook-url')\n"
"@endfinished"
msgstr ""

# P
#: ./docs/9.x/envoy.md:326
#: ./docs/10.x/envoy.md:326
#: ./docs/11.x/envoy.md:326
#: ./docs/master/envoy.md:326
msgid "Envoy also supports sending notifications to [Microsoft Teams](https://www.microsoft.com/en-us/microsoft-teams) after each task is executed. The `@microsoftTeams` directive accepts a Teams Webhook (required), a message, theme color (success, info, warning, error), and an array of options. You may retrieve your Teams Webhook by creating a new [incoming webhook](https://docs.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/add-incoming-webhook). The Teams API has many other attributes to customize your message box like title, summary, and sections. You can find more information on the [Microsoft Teams documentation](https://docs.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/connectors-using?tabs=cURL#example-of-connector-message). You should pass the entire Webhook URL into the `@microsoftTeams` directive:"
msgstr "Envoy 也支援在任務執行完成後傳送通知給 [Microsoft Teams](https://www.microsoft.com/en-us/microsoft-teams)。`@microsoftTeams` 指示詞的引數為一個 Teams Webhook (必填)、一個訊息、主題色 (success、info、warning、error)、與一組選項陣列。若要取得 Teams Webhook，請建立一個新的 [連入 Webhook](https://docs.microsoft.com/zh-tw/microsoftteams/platform/webhooks-and-connectors/how-to/add-incoming-webhook)。Teams 的 API 還有其他選項，可用在自定 Message Box，如標題、摘要、段落等。更多資訊請參考 [Microsoft Teams 的說明文件](https://docs.microsoft.com/zh-tw/microsoftteams/platform/webhooks-and-connectors/how-to/connectors-using?tabs=cURL#example-of-connector-message)。請傳入完整的 Webhook URL 給 `@microsoftTeams` 指示詞："
