msgid ""
msgstr ""
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/templates/folio.pot\n"
"X-Crowdin-File-ID: 186\n"
"Project-Id-Version: laravel-docs\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"PO-Revision-Date: 2024-11-30 05:58\n"

#: ./docs/10.x/folio.md:1
#: ./docs/11.x/folio.md:1
#: ./docs/master/folio.md:1
msgid "Laravel Folio"
msgstr ""

#: ./docs/10.x/folio.md:3
#: ./docs/11.x/folio.md:3
#: ./docs/master/folio.md:3
msgid "[Introduction](#introduction)"
msgstr ""

#: ./docs/10.x/folio.md:4
#: ./docs/11.x/folio.md:4
#: ./docs/master/folio.md:4
msgid "[Installation](#installation)"
msgstr ""

#: ./docs/10.x/folio.md:5
#: ./docs/11.x/folio.md:5
#: ./docs/master/folio.md:5
msgid "[Page Paths / URIs](#page-paths-uris)"
msgstr ""

#: ./docs/10.x/folio.md:6
#: ./docs/11.x/folio.md:6
#: ./docs/master/folio.md:6
msgid "[Subdomain Routing](#subdomain-routing)"
msgstr ""

#: ./docs/10.x/folio.md:7
#: ./docs/11.x/folio.md:7
#: ./docs/master/folio.md:7
msgid "[Creating Routes](#creating-routes)"
msgstr ""

#: ./docs/10.x/folio.md:8
#: ./docs/11.x/folio.md:8
#: ./docs/master/folio.md:8
msgid "[Nested Routes](#nested-routes)"
msgstr ""

#: ./docs/10.x/folio.md:9
#: ./docs/11.x/folio.md:9
#: ./docs/master/folio.md:9
msgid "[Index Routes](#index-routes)"
msgstr ""

#: ./docs/10.x/folio.md:10
#: ./docs/11.x/folio.md:10
#: ./docs/master/folio.md:10
msgid "[Route Parameters](#route-parameters)"
msgstr ""

#: ./docs/10.x/folio.md:11
#: ./docs/11.x/folio.md:11
#: ./docs/master/folio.md:11
msgid "[Route Model Binding](#route-model-binding)"
msgstr ""

#: ./docs/10.x/folio.md:12
#: ./docs/11.x/folio.md:12
#: ./docs/master/folio.md:12
msgid "[Soft Deleted Models](#soft-deleted-models)"
msgstr ""

#: ./docs/10.x/folio.md:13
#: ./docs/11.x/folio.md:13
#: ./docs/master/folio.md:13
msgid "[Render Hooks](#render-hooks)"
msgstr ""

#: ./docs/10.x/folio.md:14
#: ./docs/11.x/folio.md:14
#: ./docs/master/folio.md:14
msgid "[Named Routes](#named-routes)"
msgstr ""

#: ./docs/10.x/folio.md:15
#: ./docs/11.x/folio.md:15
#: ./docs/master/folio.md:15
msgid "[Middleware](#middleware)"
msgstr ""

#: ./docs/10.x/folio.md:16
#: ./docs/11.x/folio.md:16
#: ./docs/master/folio.md:16
msgid "[Route Caching](#route-caching)"
msgstr ""

#: ./docs/10.x/folio.md:18
#: ./docs/11.x/folio.md:18
#: ./docs/master/folio.md:18
#~ msgctxt "P"
#~ msgid "<a name=\"introduction\"></a>"
#~ msgstr ""

#: ./docs/10.x/folio.md:19
#: ./docs/11.x/folio.md:19
#: ./docs/master/folio.md:19
msgid "Introduction"
msgstr ""

#: ./docs/10.x/folio.md:21
#: ./docs/11.x/folio.md:21
#: ./docs/master/folio.md:21
msgid "[Laravel Folio](https://github.com/laravel/folio) is a powerful page based router designed to simplify routing in Laravel applications. With Laravel Folio, generating a route becomes as effortless as creating a Blade template within your application's `resources/views/pages` directory."
msgstr ""

#: ./docs/10.x/folio.md:23
#: ./docs/11.x/folio.md:23
#: ./docs/master/folio.md:23
msgid "For example, to create a page that is accessible at the `/greeting` URL, just create a `greeting.blade.php` file in your application's `resources/views/pages` directory:"
msgstr ""

#: ./docs/10.x/folio.md:25
#: ./docs/11.x/folio.md:25
#: ./docs/master/folio.md:25
msgid "<div>\n"
"    Hello World\n"
"</div>"
msgstr ""

#: ./docs/10.x/folio.md:31
#: ./docs/11.x/folio.md:31
#: ./docs/master/folio.md:31
#~ msgctxt "P"
#~ msgid "<a name=\"installation\"></a>"
#~ msgstr ""

#: ./docs/10.x/folio.md:32
#: ./docs/11.x/folio.md:32
#: ./docs/master/folio.md:32
msgid "Installation"
msgstr ""

#: ./docs/10.x/folio.md:34
#: ./docs/11.x/folio.md:34
#: ./docs/master/folio.md:34
msgid "To get started, install Folio into your project using the Composer package manager:"
msgstr ""

#: ./docs/10.x/folio.md:36
#: ./docs/11.x/folio.md:36
#: ./docs/master/folio.md:36
msgid "composer require laravel/folio"
msgstr ""

#: ./docs/10.x/folio.md:40
#: ./docs/11.x/folio.md:40
#: ./docs/master/folio.md:40
msgid "After installing Folio, you may execute the `folio:install` Artisan command, which will install Folio's service provider into your application. This service provider registers the directory where Folio will search for routes / pages:"
msgstr ""

#: ./docs/10.x/folio.md:42
#: ./docs/11.x/folio.md:42
#: ./docs/master/folio.md:42
msgid "php artisan folio:install"
msgstr ""

#: ./docs/10.x/folio.md:46
#: ./docs/11.x/folio.md:46
#: ./docs/master/folio.md:46
#~ msgctxt "P"
#~ msgid "<a name=\"page-paths-uris\"></a>"
#~ msgstr ""

#: ./docs/10.x/folio.md:47
#: ./docs/11.x/folio.md:47
#: ./docs/master/folio.md:47
msgid "Page Paths / URIs"
msgstr ""

#: ./docs/10.x/folio.md:49
#: ./docs/11.x/folio.md:49
#: ./docs/master/folio.md:49
msgid "By default, Folio serves pages from your application's `resources/views/pages` directory, but you may customize these directories in your Folio service provider's `boot` method."
msgstr ""

#: ./docs/10.x/folio.md:51
#: ./docs/11.x/folio.md:51
#: ./docs/master/folio.md:51
msgid "For example, sometimes it may be convenient to specify multiple Folio paths in the same Laravel application. You may wish to have a separate directory of Folio pages for your application's \"admin\" area, while using another directory for the rest of your application's pages."
msgstr ""

#: ./docs/10.x/folio.md:53
#: ./docs/11.x/folio.md:53
#: ./docs/master/folio.md:53
msgid "You may accomplish this using the `Folio::path` and `Folio::uri` methods. The `path` method registers a directory that Folio will scan for pages when routing incoming HTTP requests, while the `uri` method specifies the \"base URI\" for that directory of pages:"
msgstr ""

#: ./docs/10.x/folio.md:55
#: ./docs/11.x/folio.md:55
#: ./docs/master/folio.md:55
msgid "use Laravel\\Folio\\Folio;\n\n"
"Folio::path(resource_path('views/pages/guest'))->uri('/');\n\n"
"Folio::path(resource_path('views/pages/admin'))\n"
"    ->uri('/admin')\n"
"    ->middleware([\n"
"        '*' => [\n"
"            'auth',\n"
"            'verified',\n\n"
"            // ...\n"
"        ],\n"
"    ]);"
msgstr ""

#: ./docs/10.x/folio.md:72
#: ./docs/11.x/folio.md:72
#: ./docs/master/folio.md:72
#~ msgctxt "P"
#~ msgid "<a name=\"subdomain-routing\"></a>"
#~ msgstr ""

#: ./docs/10.x/folio.md:73
#: ./docs/11.x/folio.md:73
#: ./docs/master/folio.md:73
msgid "Subdomain Routing"
msgstr ""

#: ./docs/10.x/folio.md:75
#: ./docs/11.x/folio.md:75
#: ./docs/master/folio.md:75
msgid "You may also route to pages based on the incoming request's subdomain. For example, you may wish to route requests from `admin.example.com` to a different page directory than the rest of your Folio pages. You may accomplish this by invoking the `domain` method after invoking the `Folio::path` method:"
msgstr ""

#: ./docs/10.x/folio.md:77
#: ./docs/11.x/folio.md:77
#: ./docs/master/folio.md:77
msgid "use Laravel\\Folio\\Folio;\n\n"
"Folio::domain('admin.example.com')\n"
"    ->path(resource_path('views/pages/admin'));"
msgstr ""

#: ./docs/10.x/folio.md:84
#: ./docs/11.x/folio.md:84
#: ./docs/master/folio.md:84
msgid "The `domain` method also allows you to capture parts of the domain or subdomain as parameters. These parameters will be injected into your page template:"
msgstr ""

#: ./docs/10.x/folio.md:86
#: ./docs/11.x/folio.md:86
#: ./docs/master/folio.md:86
msgid "use Laravel\\Folio\\Folio;\n\n"
"Folio::domain('{account}.example.com')\n"
"    ->path(resource_path('views/pages/admin'));"
msgstr ""

#: ./docs/10.x/folio.md:93
#: ./docs/11.x/folio.md:93
#: ./docs/master/folio.md:93
#~ msgctxt "P"
#~ msgid "<a name=\"creating-routes\"></a>"
#~ msgstr ""

#: ./docs/10.x/folio.md:94
#: ./docs/11.x/folio.md:94
#: ./docs/master/folio.md:94
msgid "Creating Routes"
msgstr ""

#: ./docs/10.x/folio.md:96
#: ./docs/11.x/folio.md:96
#: ./docs/master/folio.md:96
msgid "You may create a Folio route by placing a Blade template in any of your Folio mounted directories. By default, Folio mounts the `resources/views/pages` directory, but you may customize these directories in your Folio service provider's `boot` method."
msgstr ""

#: ./docs/10.x/folio.md:98
#: ./docs/11.x/folio.md:98
#: ./docs/master/folio.md:98
msgid "Once a Blade template has been placed in a Folio mounted directory, you may immediately access it via your browser. For example, a page placed in `pages/schedule.blade.php` may be accessed in your browser at `http://example.com/schedule`."
msgstr ""

#: ./docs/10.x/folio.md:100
#: ./docs/11.x/folio.md:100
#: ./docs/master/folio.md:100
msgid "To quickly view a list of all of your Folio pages / routes, you may invoke the `folio:list` Artisan command:"
msgstr ""

#: ./docs/10.x/folio.md:102
#: ./docs/11.x/folio.md:102
#: ./docs/master/folio.md:102
msgid "php artisan folio:list"
msgstr ""

#: ./docs/10.x/folio.md:106
#: ./docs/11.x/folio.md:106
#: ./docs/master/folio.md:106
#~ msgctxt "P"
#~ msgid "<a name=\"nested-routes\"></a>"
#~ msgstr ""

#: ./docs/10.x/folio.md:107
#: ./docs/11.x/folio.md:107
#: ./docs/master/folio.md:107
msgid "Nested Routes"
msgstr ""

#: ./docs/10.x/folio.md:109
#: ./docs/11.x/folio.md:109
#: ./docs/master/folio.md:109
msgid "You may create a nested route by creating one or more directories within one of Folio's directories. For instance, to create a page that is accessible via `/user/profile`, create a `profile.blade.php` template within the `pages/user` directory:"
msgstr ""

#: ./docs/10.x/folio.md:111
#: ./docs/master/folio.md:111
msgid "php artisan make:folio user/profile\n\n"
"# pages/user/profile.blade.php → /user/profile"
msgstr ""

#: ./docs/11.x/folio.md:111
msgid "php artisan folio:page user/profile\n\n"
"# pages/user/profile.blade.php → /user/profile"
msgstr ""

#: ./docs/10.x/folio.md:117
#: ./docs/11.x/folio.md:117
#: ./docs/master/folio.md:117
#~ msgctxt "P"
#~ msgid "<a name=\"index-routes\"></a>"
#~ msgstr ""

#: ./docs/10.x/folio.md:118
#: ./docs/11.x/folio.md:118
#: ./docs/master/folio.md:118
msgid "Index Routes"
msgstr ""

#: ./docs/10.x/folio.md:120
#: ./docs/11.x/folio.md:120
#: ./docs/master/folio.md:120
msgid "Sometimes, you may wish to make a given page the \"index\" of a directory. By placing an `index.blade.php` template within a Folio directory, any requests to the root of that directory will be routed to that page:"
msgstr ""

#: ./docs/10.x/folio.md:122
#: ./docs/master/folio.md:122
msgid "php artisan make:folio index\n"
"# pages/index.blade.php → /\n\n"
"php artisan make:folio users/index\n"
"# pages/users/index.blade.php → /users"
msgstr ""

#: ./docs/11.x/folio.md:122
msgid "php artisan folio:page index\n"
"# pages/index.blade.php → /\n\n"
"php artisan folio:page users/index\n"
"# pages/users/index.blade.php → /users"
msgstr ""

#: ./docs/10.x/folio.md:130
#: ./docs/11.x/folio.md:130
#: ./docs/master/folio.md:130
#~ msgctxt "P"
#~ msgid "<a name=\"route-parameters\"></a>"
#~ msgstr ""

#: ./docs/10.x/folio.md:131
#: ./docs/11.x/folio.md:131
#: ./docs/master/folio.md:131
msgid "Route Parameters"
msgstr ""

#: ./docs/10.x/folio.md:133
#: ./docs/11.x/folio.md:133
#: ./docs/master/folio.md:133
msgid "Often, you will need to have segments of the incoming request's URL injected into your page so that you can interact with them. For example, you may need to access the \"ID\" of the user whose profile is being displayed. To accomplish this, you may encapsulate a segment of the page's filename in square brackets:"
msgstr ""

#: ./docs/10.x/folio.md:135
#: ./docs/master/folio.md:135
msgid "php artisan make:folio \"users/[id]\"\n\n"
"# pages/users/[id].blade.php → /users/1"
msgstr ""

#: ./docs/11.x/folio.md:135
msgid "php artisan folio:page \"users/[id]\"\n\n"
"# pages/users/[id].blade.php → /users/1"
msgstr ""

#: ./docs/10.x/folio.md:141
#: ./docs/11.x/folio.md:141
#: ./docs/master/folio.md:141
msgid "Captured segments can be accessed as variables within your Blade template:"
msgstr ""

#: ./docs/10.x/folio.md:143
#: ./docs/11.x/folio.md:143
#: ./docs/master/folio.md:143
msgid "<div>\n"
"    User {{ $id }}\n"
"</div>"
msgstr ""

#: ./docs/10.x/folio.md:149
#: ./docs/11.x/folio.md:149
#: ./docs/master/folio.md:149
msgid "To capture multiple segments, you can prefix the encapsulated segment with three dots `...`:"
msgstr ""

#: ./docs/10.x/folio.md:151
#: ./docs/master/folio.md:151
msgid "php artisan make:folio \"users/[...ids]\"\n\n"
"# pages/users/[...ids].blade.php → /users/1/2/3"
msgstr ""

#: ./docs/11.x/folio.md:151
msgid "php artisan folio:page \"users/[...ids]\"\n\n"
"# pages/users/[...ids].blade.php → /users/1/2/3"
msgstr ""

#: ./docs/10.x/folio.md:157
#: ./docs/11.x/folio.md:157
#: ./docs/master/folio.md:157
msgid "When capturing multiple segments, the captured segments will be injected into the page as an array:"
msgstr ""

#: ./docs/10.x/folio.md:159
#: ./docs/11.x/folio.md:159
#: ./docs/master/folio.md:159
msgid "<ul>\n"
"    @foreach ($ids as $id)\n"
"        <li>User {{ $id }}</li>\n"
"    @endforeach\n"
"</ul>"
msgstr ""

#: ./docs/10.x/folio.md:167
#: ./docs/11.x/folio.md:167
#: ./docs/master/folio.md:167
#~ msgctxt "P"
#~ msgid "<a name=\"route-model-binding\"></a>"
#~ msgstr ""

#: ./docs/10.x/folio.md:168
#: ./docs/11.x/folio.md:168
#: ./docs/master/folio.md:168
msgid "Route Model Binding"
msgstr ""

#: ./docs/10.x/folio.md:170
#: ./docs/11.x/folio.md:170
#: ./docs/master/folio.md:170
msgid "If a wildcard segment of your page template's filename corresponds one of your application's Eloquent models, Folio will automatically take advantage of Laravel's route model binding capabilities and attempt to inject the resolved model instance into your page:"
msgstr ""

#: ./docs/10.x/folio.md:172
#: ./docs/master/folio.md:172
msgid "php artisan make:folio \"users/[User]\"\n\n"
"# pages/users/[User].blade.php → /users/1"
msgstr ""

#: ./docs/11.x/folio.md:172
msgid "php artisan folio:page \"users/[User]\"\n\n"
"# pages/users/[User].blade.php → /users/1"
msgstr ""

#: ./docs/10.x/folio.md:178
#: ./docs/11.x/folio.md:178
#: ./docs/master/folio.md:178
msgid "Captured models can be accessed as variables within your Blade template. The model's variable name will be converted to \"camel case\":"
msgstr ""

#: ./docs/10.x/folio.md:180
#: ./docs/11.x/folio.md:180
#: ./docs/master/folio.md:180
msgid "<div>\n"
"    User {{ $user->id }}\n"
"</div>"
msgstr ""

#: ./docs/10.x/folio.md:186
#: ./docs/11.x/folio.md:186
#: ./docs/master/folio.md:186
msgid "Customizing the Key"
msgstr ""

#: ./docs/10.x/folio.md:188
#: ./docs/11.x/folio.md:188
#: ./docs/master/folio.md:188
msgid "Sometimes you may wish to resolve bound Eloquent models using a column other than `id`. To do so, you may specify the column in the page's filename. For example, a page with the filename `[Post:slug].blade.php` will attempt to resolve the bound model via the `slug` column instead of the `id` column."
msgstr ""

#: ./docs/10.x/folio.md:190
#: ./docs/11.x/folio.md:190
#: ./docs/master/folio.md:190
msgid "On Windows, you should use `-` to separate the model name from the key: `[Post-slug].blade.php`."
msgstr ""

#: ./docs/10.x/folio.md:192
#: ./docs/11.x/folio.md:192
#: ./docs/master/folio.md:192
msgid "Model Location"
msgstr ""

#: ./docs/10.x/folio.md:194
#: ./docs/11.x/folio.md:194
#: ./docs/master/folio.md:194
msgid "By default, Folio will search for your model within your application's `app/Models` directory. However, if needed, you may specify the fully-qualified model class name in your template's filename:"
msgstr ""

#: ./docs/10.x/folio.md:196
#: ./docs/master/folio.md:196
msgid "php artisan make:folio \"users/[.App.Models.User]\"\n\n"
"# pages/users/[.App.Models.User].blade.php → /users/1"
msgstr ""

#: ./docs/11.x/folio.md:196
msgid "php artisan folio:page \"users/[.App.Models.User]\"\n\n"
"# pages/users/[.App.Models.User].blade.php → /users/1"
msgstr ""

#: ./docs/10.x/folio.md:202
#: ./docs/11.x/folio.md:202
#: ./docs/master/folio.md:202
#~ msgctxt "P"
#~ msgid "<a name=\"soft-deleted-models\"></a>"
#~ msgstr ""

#: ./docs/10.x/folio.md:203
#: ./docs/11.x/folio.md:203
#: ./docs/master/folio.md:203
msgid "Soft Deleted Models"
msgstr ""

#: ./docs/10.x/folio.md:205
#: ./docs/11.x/folio.md:205
#: ./docs/master/folio.md:205
msgid "By default, models that have been soft deleted are not retrieved when resolving implicit model bindings. However, if you wish, you can instruct Folio to retrieve soft deleted models by invoking the `withTrashed` function within the page's template:"
msgstr ""

#: ./docs/10.x/folio.md:207
#: ./docs/11.x/folio.md:207
#: ./docs/master/folio.md:207
msgid "<?php\n\n"
"use function Laravel\\Folio\\{withTrashed};\n\n"
"withTrashed();\n\n"
"?>\n\n"
"<div>\n"
"    User {{ $user->id }}\n"
"</div>"
msgstr ""

#: ./docs/10.x/folio.md:221
#: ./docs/11.x/folio.md:221
#: ./docs/master/folio.md:221
#~ msgctxt "P"
#~ msgid "<a name=\"render-hooks\"></a>"
#~ msgstr ""

#: ./docs/10.x/folio.md:222
#: ./docs/11.x/folio.md:222
#: ./docs/master/folio.md:222
msgid "Render Hooks"
msgstr ""

#: ./docs/10.x/folio.md:224
#: ./docs/11.x/folio.md:224
#: ./docs/master/folio.md:224
msgid "By default, Folio will return the content of the page's Blade template as the response to the incoming request. However, you may customize the response by invoking the `render` function within the page's template."
msgstr ""

#: ./docs/10.x/folio.md:226
#: ./docs/11.x/folio.md:226
#: ./docs/master/folio.md:226
msgid "The `render` function accepts a closure which will receive the `View` instance being rendered by Folio, allowing you to add additional data to the view or customize the entire response. In addition to receiving the `View` instance, any additional route parameters or model bindings will also be provided to the `render` closure:"
msgstr ""

#: ./docs/10.x/folio.md:228
#: ./docs/11.x/folio.md:228
#: ./docs/master/folio.md:228
msgid "<?php\n\n"
"use App\\Models\\Post;\n"
"use Illuminate\\Support\\Facades\\Auth;\n"
"use Illuminate\\View\\View;\n\n"
"use function Laravel\\Folio\\render;\n\n"
"render(function (View $view, Post $post) {\n"
"    if (! Auth::user()->can('view', $post)) {\n"
"        return response('Unauthorized', 403);\n"
"    }\n\n"
"    return $view->with('photos', $post->author->photos);\n"
"}); ?>\n\n"
"<div>\n"
"    {{ $post->content }}\n"
"</div>\n\n"
"<div>\n"
"    This author has also taken {{ count($photos) }} photos.\n"
"</div>"
msgstr ""

#: ./docs/10.x/folio.md:254
#: ./docs/11.x/folio.md:254
#: ./docs/master/folio.md:254
#~ msgctxt "P"
#~ msgid "<a name=\"named-routes\"></a>"
#~ msgstr ""

#: ./docs/10.x/folio.md:255
#: ./docs/11.x/folio.md:255
#: ./docs/master/folio.md:255
msgid "Named Routes"
msgstr ""

#: ./docs/10.x/folio.md:257
#: ./docs/11.x/folio.md:257
#: ./docs/master/folio.md:257
msgid "You may specify a name for a given page's route using the `name` function:"
msgstr ""

#: ./docs/10.x/folio.md:259
#: ./docs/11.x/folio.md:259
#: ./docs/master/folio.md:259
msgid "<?php\n\n"
"use function Laravel\\Folio\\name;\n\n"
"name('users.index');"
msgstr ""

#: ./docs/10.x/folio.md:267
#: ./docs/11.x/folio.md:267
#: ./docs/master/folio.md:267
msgid "Just like Laravel's named routes, you may use the `route` function to generate URLs to Folio pages that have been assigned a name:"
msgstr ""

#: ./docs/10.x/folio.md:269
#: ./docs/11.x/folio.md:269
#: ./docs/master/folio.md:269
msgid "<a href=\"{{ route('users.index') }}\">\n"
"    All Users\n"
"</a>"
msgstr ""

#: ./docs/10.x/folio.md:275
#: ./docs/11.x/folio.md:275
#: ./docs/master/folio.md:275
msgid "If the page has parameters, you may simply pass their values to the `route` function:"
msgstr ""

#: ./docs/10.x/folio.md:277
#: ./docs/11.x/folio.md:277
#: ./docs/master/folio.md:277
msgid "route('users.show', ['user' => $user]);"
msgstr ""

#: ./docs/10.x/folio.md:281
#: ./docs/11.x/folio.md:281
#: ./docs/master/folio.md:281
#~ msgctxt "P"
#~ msgid "<a name=\"middleware\"></a>"
#~ msgstr ""

#: ./docs/10.x/folio.md:282
#: ./docs/11.x/folio.md:282
#: ./docs/master/folio.md:282
msgid "Middleware"
msgstr ""

#: ./docs/10.x/folio.md:284
#: ./docs/11.x/folio.md:284
#: ./docs/master/folio.md:284
msgid "You can apply middleware to a specific page by invoking the `middleware` function within the page's template:"
msgstr ""

#: ./docs/10.x/folio.md:286
#: ./docs/11.x/folio.md:286
#: ./docs/master/folio.md:286
msgid "<?php\n\n"
"use function Laravel\\Folio\\{middleware};\n\n"
"middleware(['auth', 'verified']);\n\n"
"?>\n\n"
"<div>\n"
"    Dashboard\n"
"</div>"
msgstr ""

#: ./docs/10.x/folio.md:300
#: ./docs/11.x/folio.md:300
#: ./docs/master/folio.md:300
msgid "Or, to assign middleware to a group of pages, you may chain the `middleware` method after invoking the `Folio::path` method."
msgstr ""

#: ./docs/10.x/folio.md:302
#: ./docs/11.x/folio.md:302
#: ./docs/master/folio.md:302
msgid "To specify which pages the middleware should be applied to, the array of middleware may be keyed using the corresponding URL patterns of the pages they should be applied to. The `*` character may be utilized as a wildcard character:"
msgstr ""

#: ./docs/10.x/folio.md:304
#: ./docs/11.x/folio.md:304
#: ./docs/master/folio.md:304
msgid "use Laravel\\Folio\\Folio;\n\n"
"Folio::path(resource_path('views/pages'))->middleware([\n"
"    'admin/*' => [\n"
"        'auth',\n"
"        'verified',\n\n"
"        // ...\n"
"    ],\n"
"]);"
msgstr ""

#: ./docs/10.x/folio.md:317
#: ./docs/11.x/folio.md:317
#: ./docs/master/folio.md:317
msgid "You may include closures in the array of middleware to define inline, anonymous middleware:"
msgstr ""

#: ./docs/10.x/folio.md:319
#: ./docs/11.x/folio.md:319
#: ./docs/master/folio.md:319
msgid "use Closure;\n"
"use Illuminate\\Http\\Request;\n"
"use Laravel\\Folio\\Folio;\n\n"
"Folio::path(resource_path('views/pages'))->middleware([\n"
"    'admin/*' => [\n"
"        'auth',\n"
"        'verified',\n\n"
"        function (Request $request, Closure $next) {\n"
"            // ...\n\n"
"            return $next($request);\n"
"        },\n"
"    ],\n"
"]);"
msgstr ""

#: ./docs/10.x/folio.md:338
#: ./docs/11.x/folio.md:338
#: ./docs/master/folio.md:338
#~ msgctxt "P"
#~ msgid "<a name=\"route-caching\"></a>"
#~ msgstr ""

#: ./docs/10.x/folio.md:339
#: ./docs/11.x/folio.md:339
#: ./docs/master/folio.md:339
msgid "Route Caching"
msgstr ""

#: ./docs/10.x/folio.md:341
#: ./docs/11.x/folio.md:341
#: ./docs/master/folio.md:341
msgid "When using Folio, you should always take advantage of [Laravel's route caching capabilities](/docs/{{version}}/routing#route-caching). Folio listens for the `route:cache` Artisan command to ensure that Folio page definitions and route names are properly cached for maximum performance."
msgstr ""

