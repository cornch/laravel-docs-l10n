# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Taylor Otwell
# This file is distributed under the same license as the Laravel Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Laravel Documentation VERSION\n"
"POT-Creation-Date: 2022-01-29 05:35+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"
#
#. type: Title #
# File: docs/8.x/providers.md, line: 1
# File: docs/master/providers.md, line: 1
#, no-wrap
msgid "Service Providers"
msgstr ""
#
#. type: Bullet: '- '
# File: docs/8.x/providers.md, line: 9
# File: docs/master/providers.md, line: 9
msgid "[Introduction](#introduction)"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 9
# File: docs/master/providers.md, line: 9
#, no-wrap
msgid ""
"- [Writing Service Providers](#writing-service-providers)\n"
"    - [The Register Method](#the-register-method)\n"
"    - [The Boot Method](#the-boot-method)\n"
"- [Registering Providers](#registering-providers)\n"
"- [Deferred Providers](#deferred-providers)\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 11
# File: docs/master/providers.md, line: 11
#, no-wrap
msgid "<a name=\"introduction\"></a>\n"
msgstr ""
#
#. type: Title ##
# File: docs/8.x/providers.md, line: 11
# File: docs/master/providers.md, line: 11
#, no-wrap
msgid "Introduction"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 14
# File: docs/master/providers.md, line: 14
msgid "Service providers are the central place of all Laravel application bootstrapping. Your own application, as well as all of Laravel's core services, are bootstrapped via service providers."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 16
# File: docs/master/providers.md, line: 16
msgid "But, what do we mean by \"bootstrapped\"? In general, we mean **registering** things, including registering service container bindings, event listeners, middleware, and even routes. Service providers are the central place to configure your application."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 18
# File: docs/master/providers.md, line: 18
msgid "If you open the `config/app.php` file included with Laravel, you will see a `providers` array. These are all of the service provider classes that will be loaded for your application. By default, a set of Laravel core service providers are listed in this array. These providers bootstrap the core Laravel components, such as the mailer, queue, cache, and others. Many of these providers are \"deferred\" providers, meaning they will not be loaded on every request, but only when the services they provide are actually needed."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 20
# File: docs/master/providers.md, line: 20
msgid "In this overview, you will learn how to write your own service providers and register them with your Laravel application."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 22
# File: docs/master/providers.md, line: 22
#, no-wrap
msgid "> {tip} If you would like to learn more about how Laravel handles requests and works internally, check out our documentation on the Laravel [request lifecycle](/docs/{{version}}/lifecycle).\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 24
# File: docs/master/providers.md, line: 24
#, no-wrap
msgid "<a name=\"writing-service-providers\"></a>\n"
msgstr ""
#
#. type: Title ##
# File: docs/8.x/providers.md, line: 24
# File: docs/master/providers.md, line: 24
#, no-wrap
msgid "Writing Service Providers"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 27
# File: docs/master/providers.md, line: 27
msgid "All service providers extend the `Illuminate\\Support\\ServiceProvider` class. Most service providers contain a `register` and a `boot` method. Within the `register` method, you should **only bind things into the [service container](/docs/{{version}}/container)**. You should never attempt to register any event listeners, routes, or any other piece of functionality within the `register` method."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 29
# File: docs/master/providers.md, line: 29
msgid "The Artisan CLI can generate a new provider via the `make:provider` command:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 31
# File: docs/master/providers.md, line: 31
#, no-wrap
msgid "    php artisan make:provider RiakServiceProvider\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 33
# File: docs/master/providers.md, line: 33
#, no-wrap
msgid "<a name=\"the-register-method\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/8.x/providers.md, line: 33
# File: docs/master/providers.md, line: 33
#, no-wrap
msgid "The Register Method"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 36
# File: docs/master/providers.md, line: 36
msgid "As mentioned previously, within the `register` method, you should only bind things into the [service container](/docs/{{version}}/container). You should never attempt to register any event listeners, routes, or any other piece of functionality within the `register` method. Otherwise, you may accidentally use a service that is provided by a service provider which has not loaded yet."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 38
# File: docs/master/providers.md, line: 38
msgid "Let's take a look at a basic service provider. Within any of your service provider methods, you always have access to the `$app` property which provides access to the service container:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 40
# File: docs/8.x/providers.md, line: 69
# File: docs/8.x/providers.md, line: 107
# File: docs/8.x/providers.md, line: 171
# File: docs/master/providers.md, line: 40
# File: docs/master/providers.md, line: 69
# File: docs/master/providers.md, line: 107
# File: docs/master/providers.md, line: 171
#, no-wrap
msgid "    <?php\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 42
# File: docs/8.x/providers.md, line: 71
# File: docs/8.x/providers.md, line: 109
# File: docs/8.x/providers.md, line: 173
# File: docs/master/providers.md, line: 42
# File: docs/master/providers.md, line: 71
# File: docs/master/providers.md, line: 109
# File: docs/master/providers.md, line: 173
#, no-wrap
msgid "    namespace App\\Providers;\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 45
# File: docs/master/providers.md, line: 45
#, no-wrap
msgid ""
"    use App\\Services\\Riak\\Connection;\n"
"    use Illuminate\\Support\\ServiceProvider;\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 60
# File: docs/master/providers.md, line: 60
#, no-wrap
msgid ""
"    class RiakServiceProvider extends ServiceProvider\n"
"    {\n"
"        /**\n"
"         * Register any application services.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function register()\n"
"        {\n"
"            $this->app->singleton(Connection::class, function ($app) {\n"
"                return new Connection(config('riak'));\n"
"            });\n"
"        }\n"
"    }\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 62
# File: docs/master/providers.md, line: 62
msgid "This service provider only defines a `register` method, and uses that method to define an implementation of `App\\Services\\Riak\\Connection` in the service container. If you're not yet familiar with Laravel's service container, check out [its documentation](/docs/{{version}}/container)."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 64
# File: docs/master/providers.md, line: 64
#, no-wrap
msgid "<a name=\"the-bindings-and-singletons-properties\"></a>\n"
msgstr ""
#
#. type: Title ####
# File: docs/8.x/providers.md, line: 64
# File: docs/master/providers.md, line: 64
#, no-wrap
msgid "The `bindings` And `singletons` Properties"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 67
# File: docs/master/providers.md, line: 67
msgid "If your service provider registers many simple bindings, you may wish to use the `bindings` and `singletons` properties instead of manually registering each container binding. When the service provider is loaded by the framework, it will automatically check for these properties and register their bindings:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 78
# File: docs/master/providers.md, line: 78
#, no-wrap
msgid ""
"    use App\\Contracts\\DowntimeNotifier;\n"
"    use App\\Contracts\\ServerProvider;\n"
"    use App\\Services\\DigitalOceanServerProvider;\n"
"    use App\\Services\\PingdomDowntimeNotifier;\n"
"    use App\\Services\\ServerToolsProvider;\n"
"    use Illuminate\\Support\\ServiceProvider;\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 89
# File: docs/master/providers.md, line: 89
#, no-wrap
msgid ""
"    class AppServiceProvider extends ServiceProvider\n"
"    {\n"
"        /**\n"
"         * All of the container bindings that should be registered.\n"
"         *\n"
"         * @var array\n"
"         */\n"
"        public $bindings = [\n"
"            ServerProvider::class => DigitalOceanServerProvider::class,\n"
"        ];\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 100
# File: docs/master/providers.md, line: 100
#, no-wrap
msgid ""
"        /**\n"
"         * All of the container singletons that should be registered.\n"
"         *\n"
"         * @var array\n"
"         */\n"
"        public $singletons = [\n"
"            DowntimeNotifier::class => PingdomDowntimeNotifier::class,\n"
"            ServerProvider::class => ServerToolsProvider::class,\n"
"        ];\n"
"    }\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 102
# File: docs/master/providers.md, line: 102
#, no-wrap
msgid "<a name=\"the-boot-method\"></a>\n"
msgstr ""
#
#. type: Title ###
# File: docs/8.x/providers.md, line: 102
# File: docs/master/providers.md, line: 102
#, no-wrap
msgid "The Boot Method"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 105
# File: docs/master/providers.md, line: 105
msgid "So, what if we need to register a [view composer](/docs/{{version}}/views#view-composers) within our service provider? This should be done within the `boot` method. **This method is called after all other service providers have been registered**, meaning you have access to all other services that have been registered by the framework:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 112
# File: docs/master/providers.md, line: 112
#, no-wrap
msgid ""
"    use Illuminate\\Support\\Facades\\View;\n"
"    use Illuminate\\Support\\ServiceProvider;\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 127
# File: docs/master/providers.md, line: 127
#, no-wrap
msgid ""
"    class ComposerServiceProvider extends ServiceProvider\n"
"    {\n"
"        /**\n"
"         * Bootstrap any application services.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function boot()\n"
"        {\n"
"            View::composer('view', function () {\n"
"                //\n"
"            });\n"
"        }\n"
"    }\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 129
# File: docs/master/providers.md, line: 129
#, no-wrap
msgid "<a name=\"boot-method-dependency-injection\"></a>\n"
msgstr ""
#
#. type: Title ####
# File: docs/8.x/providers.md, line: 129
# File: docs/master/providers.md, line: 129
#, no-wrap
msgid "Boot Method Dependency Injection"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 132
# File: docs/master/providers.md, line: 132
msgid "You may type-hint dependencies for your service provider's `boot` method. The [service container](/docs/{{version}}/container) will automatically inject any dependencies you need:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 134
# File: docs/master/providers.md, line: 134
#, no-wrap
msgid "    use Illuminate\\Contracts\\Routing\\ResponseFactory;\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 147
# File: docs/master/providers.md, line: 147
#, no-wrap
msgid ""
"    /**\n"
"     * Bootstrap any application services.\n"
"     *\n"
"     * @param  \\Illuminate\\Contracts\\Routing\\ResponseFactory  $response\n"
"     * @return void\n"
"     */\n"
"    public function boot(ResponseFactory $response)\n"
"    {\n"
"        $response->macro('serialized', function ($value) {\n"
"            //\n"
"        });\n"
"    }\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 149
# File: docs/master/providers.md, line: 149
#, no-wrap
msgid "<a name=\"registering-providers\"></a>\n"
msgstr ""
#
#. type: Title ##
# File: docs/8.x/providers.md, line: 149
# File: docs/master/providers.md, line: 149
#, no-wrap
msgid "Registering Providers"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 152
# File: docs/master/providers.md, line: 152
msgid "All service providers are registered in the `config/app.php` configuration file. This file contains a `providers` array where you can list the class names of your service providers. By default, a set of Laravel core service providers are listed in this array. These providers bootstrap the core Laravel components, such as the mailer, queue, cache, and others."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 154
# File: docs/master/providers.md, line: 154
msgid "To register your provider, add it to the array:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 157
# File: docs/master/providers.md, line: 157
#, no-wrap
msgid ""
"    'providers' => [\n"
"        // Other Service Providers\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 160
# File: docs/master/providers.md, line: 160
#, no-wrap
msgid ""
"        App\\Providers\\ComposerServiceProvider::class,\n"
"    ],\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 162
# File: docs/master/providers.md, line: 162
#, no-wrap
msgid "<a name=\"deferred-providers\"></a>\n"
msgstr ""
#
#. type: Title ##
# File: docs/8.x/providers.md, line: 162
# File: docs/master/providers.md, line: 162
#, no-wrap
msgid "Deferred Providers"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 165
# File: docs/master/providers.md, line: 165
msgid "If your provider is **only** registering bindings in the [service container](/docs/{{version}}/container), you may choose to defer its registration until one of the registered bindings is actually needed. Deferring the loading of such a provider will improve the performance of your application, since it is not loaded from the filesystem on every request."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 167
# File: docs/master/providers.md, line: 167
msgid "Laravel compiles and stores a list of all of the services supplied by deferred service providers, along with the name of its service provider class. Then, only when you attempt to resolve one of these services does Laravel load the service provider."
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 169
# File: docs/master/providers.md, line: 169
msgid "To defer the loading of a provider, implement the `\\Illuminate\\Contracts\\Support\\DeferrableProvider` interface and define a `provides` method. The `provides` method should return the service container bindings registered by the provider:"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 177
# File: docs/master/providers.md, line: 177
#, no-wrap
msgid ""
"    use App\\Services\\Riak\\Connection;\n"
"    use Illuminate\\Contracts\\Support\\DeferrableProvider;\n"
"    use Illuminate\\Support\\ServiceProvider;\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 191
# File: docs/master/providers.md, line: 191
#, no-wrap
msgid ""
"    class RiakServiceProvider extends ServiceProvider implements DeferrableProvider\n"
"    {\n"
"        /**\n"
"         * Register any application services.\n"
"         *\n"
"         * @return void\n"
"         */\n"
"        public function register()\n"
"        {\n"
"            $this->app->singleton(Connection::class, function ($app) {\n"
"                return new Connection($app['config']['riak']);\n"
"            });\n"
"        }\n"
msgstr ""
#
#. type: Plain text
# File: docs/8.x/providers.md, line: 201
# File: docs/master/providers.md, line: 201
#, no-wrap
msgid ""
"        /**\n"
"         * Get the services provided by the provider.\n"
"         *\n"
"         * @return array\n"
"         */\n"
"        public function provides()\n"
"        {\n"
"            return [Connection::class];\n"
"        }\n"
"    }\n"
msgstr ""
