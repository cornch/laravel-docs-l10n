msgid ""
msgstr ""
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/templates/helpers.pot\n"
"X-Crowdin-File-ID: 79\n"
"Project-Id-Version: laravel-docs\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"PO-Revision-Date: 2024-11-30 06:48\n"

#: ./docs/8.x/helpers.md:1
#: ./docs/9.x/helpers.md:1
#: ./docs/10.x/helpers.md:1
#: ./docs/11.x/helpers.md:1
#: ./docs/master/helpers.md:1
msgctxt "H1"
msgid "Helpers"
msgstr ""

#: ./docs/8.x/helpers.md:3
#: ./docs/9.x/helpers.md:3
#: ./docs/10.x/helpers.md:3
#: ./docs/11.x/helpers.md:3
#: ./docs/master/helpers.md:3
msgctxt "P"
msgid "[Introduction](#introduction)"
msgstr ""

#: ./docs/8.x/helpers.md:4
#: ./docs/9.x/helpers.md:4
#: ./docs/10.x/helpers.md:4
#: ./docs/11.x/helpers.md:4
#: ./docs/master/helpers.md:4
msgctxt "P"
msgid "[Available Methods](#available-methods)"
msgstr ""

#: ./docs/9.x/helpers.md:5
#: ./docs/10.x/helpers.md:5
#: ./docs/11.x/helpers.md:5
#: ./docs/master/helpers.md:5
msgctxt "P"
msgid "[Other Utilities](#other-utilities)"
msgstr ""

#: ./docs/8.x/helpers.md:6
#: ./docs/9.x/helpers.md:9
#: ./docs/10.x/helpers.md:12
#: ./docs/11.x/helpers.md:13
#: ./docs/master/helpers.md:12
#~ msgctxt "P"
#~ msgid "<a name=\"introduction\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:6
#: ./docs/10.x/helpers.md:6
#: ./docs/11.x/helpers.md:6
#: ./docs/master/helpers.md:6
msgctxt "P"
msgid "[Benchmarking](#benchmarking)"
msgstr ""

#: ./docs/10.x/helpers.md:7
#: ./docs/11.x/helpers.md:7
#: ./docs/master/helpers.md:7
msgctxt "P"
msgid "[Dates](#dates)"
msgstr ""

#: ./docs/8.x/helpers.md:7
#: ./docs/9.x/helpers.md:10
#: ./docs/10.x/helpers.md:13
#: ./docs/11.x/helpers.md:14
#: ./docs/master/helpers.md:13
msgctxt "H2"
msgid "Introduction"
msgstr ""

#: ./docs/9.x/helpers.md:7
#: ./docs/10.x/helpers.md:8
#: ./docs/11.x/helpers.md:9
#: ./docs/master/helpers.md:8
msgctxt "P"
msgid "[Lottery](#lottery)"
msgstr ""

#: ./docs/11.x/helpers.md:8
msgctxt "P"
msgid "[Deferred Functions](#deferred-functions)"
msgstr ""

#: ./docs/10.x/helpers.md:9
#: ./docs/11.x/helpers.md:10
#: ./docs/master/helpers.md:9
msgctxt "P"
msgid "[Pipeline](#pipeline)"
msgstr ""

#: ./docs/8.x/helpers.md:9
#: ./docs/9.x/helpers.md:12
#: ./docs/10.x/helpers.md:15
#: ./docs/11.x/helpers.md:16
#: ./docs/master/helpers.md:15
msgctxt "P"
msgid "Laravel includes a variety of global \"helper\" PHP functions. Many of these functions are used by the framework itself; however, you are free to use them in your own applications if you find them convenient."
msgstr ""

#: ./docs/10.x/helpers.md:10
#: ./docs/11.x/helpers.md:11
#: ./docs/master/helpers.md:10
msgctxt "P"
msgid "[Sleep](#sleep)"
msgstr ""

#: ./docs/8.x/helpers.md:11
#: ./docs/9.x/helpers.md:14
#: ./docs/10.x/helpers.md:17
#: ./docs/11.x/helpers.md:18
#: ./docs/master/helpers.md:17
#~ msgctxt "P"
#~ msgid "<a name=\"available-methods\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:12
#: ./docs/9.x/helpers.md:15
#: ./docs/10.x/helpers.md:18
#: ./docs/11.x/helpers.md:19
#: ./docs/master/helpers.md:18
msgctxt "H2"
msgid "Available Methods"
msgstr ""

#: ./docs/8.x/helpers.md:25
#: ./docs/9.x/helpers.md:30
#: ./docs/10.x/helpers.md:33
#: ./docs/11.x/helpers.md:34
#: ./docs/master/helpers.md:33
#~ msgctxt "P"
#~ msgid "<a name=\"arrays-and-objects-method-list\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:26
#: ./docs/8.x/helpers.md:312
#: ./docs/9.x/helpers.md:31
#: ./docs/9.x/helpers.md:355
#: ./docs/10.x/helpers.md:34
#: ./docs/10.x/helpers.md:201
#: ./docs/11.x/helpers.md:35
#: ./docs/11.x/helpers.md:211
#: ./docs/master/helpers.md:34
#: ./docs/master/helpers.md:203
msgctxt "H3"
msgid "Arrays & Objects"
msgstr ""

#: ./docs/8.x/helpers.md:30
msgctxt "P"
msgid "[Arr::accessible](#method-array-accessible)\n"
"[Arr::add](#method-array-add)\n"
"[Arr::collapse](#method-array-collapse)\n"
"[Arr::crossJoin](#method-array-crossjoin)\n"
"[Arr::divide](#method-array-divide)\n"
"[Arr::dot](#method-array-dot)\n"
"[Arr::except](#method-array-except)\n"
"[Arr::exists](#method-array-exists)\n"
"[Arr::first](#method-array-first)\n"
"[Arr::flatten](#method-array-flatten)\n"
"[Arr::forget](#method-array-forget)\n"
"[Arr::get](#method-array-get)\n"
"[Arr::has](#method-array-has)\n"
"[Arr::hasAny](#method-array-hasany)\n"
"[Arr::isAssoc](#method-array-isassoc)\n"
"[Arr::last](#method-array-last)\n"
"[Arr::only](#method-array-only)\n"
"[Arr::pluck](#method-array-pluck)\n"
"[Arr::prepend](#method-array-prepend)\n"
"[Arr::pull](#method-array-pull)\n"
"[Arr::query](#method-array-query)\n"
"[Arr::random](#method-array-random)\n"
"[Arr::set](#method-array-set)\n"
"[Arr::shuffle](#method-array-shuffle)\n"
"[Arr::sort](#method-array-sort)\n"
"[Arr::sortRecursive](#method-array-sort-recursive)\n"
"[Arr::toCssClasses](#method-array-to-css-classes)\n"
"[Arr::undot](#method-array-undot)\n"
"[Arr::where](#method-array-where)\n"
"[Arr::whereNotNull](#method-array-where-not-null)\n"
"[Arr::wrap](#method-array-wrap)\n"
"[data_fill](#method-data-fill)\n"
"[data_get](#method-data-get)\n"
"[data_set](#method-data-set)\n"
"[head](#method-head)\n"
"[last](#method-last)"
msgstr ""

#: ./docs/9.x/helpers.md:35
msgctxt "P"
msgid "[Arr::accessible](#method-array-accessible)\n"
"[Arr::add](#method-array-add)\n"
"[Arr::collapse](#method-array-collapse)\n"
"[Arr::crossJoin](#method-array-crossjoin)\n"
"[Arr::divide](#method-array-divide)\n"
"[Arr::dot](#method-array-dot)\n"
"[Arr::except](#method-array-except)\n"
"[Arr::exists](#method-array-exists)\n"
"[Arr::first](#method-array-first)\n"
"[Arr::flatten](#method-array-flatten)\n"
"[Arr::forget](#method-array-forget)\n"
"[Arr::get](#method-array-get)\n"
"[Arr::has](#method-array-has)\n"
"[Arr::hasAny](#method-array-hasany)\n"
"[Arr::isAssoc](#method-array-isassoc)\n"
"[Arr::isList](#method-array-islist)\n"
"[Arr::join](#method-array-join)\n"
"[Arr::keyBy](#method-array-keyby)\n"
"[Arr::last](#method-array-last)\n"
"[Arr::map](#method-array-map)\n"
"[Arr::only](#method-array-only)\n"
"[Arr::pluck](#method-array-pluck)\n"
"[Arr::prepend](#method-array-prepend)\n"
"[Arr::prependKeysWith](#method-array-prependkeyswith)\n"
"[Arr::pull](#method-array-pull)\n"
"[Arr::query](#method-array-query)\n"
"[Arr::random](#method-array-random)\n"
"[Arr::set](#method-array-set)\n"
"[Arr::shuffle](#method-array-shuffle)\n"
"[Arr::sort](#method-array-sort)\n"
"[Arr::sortDesc](#method-array-sort-desc)\n"
"[Arr::sortRecursive](#method-array-sort-recursive)\n"
"[Arr::toCssClasses](#method-array-to-css-classes)\n"
"[Arr::undot](#method-array-undot)\n"
"[Arr::where](#method-array-where)\n"
"[Arr::whereNotNull](#method-array-where-not-null)\n"
"[Arr::wrap](#method-array-wrap)\n"
"[data_fill](#method-data-fill)\n"
"[data_get](#method-data-get)\n"
"[data_set](#method-data-set)\n"
"[head](#method-head)\n"
"[last](#method-last)"
msgstr ""

#: ./docs/10.x/helpers.md:38
#: ./docs/master/helpers.md:38
msgctxt "P"
msgid "[Arr::accessible](#method-array-accessible)\n"
"[Arr::add](#method-array-add)\n"
"[Arr::collapse](#method-array-collapse)\n"
"[Arr::crossJoin](#method-array-crossjoin)\n"
"[Arr::divide](#method-array-divide)\n"
"[Arr::dot](#method-array-dot)\n"
"[Arr::except](#method-array-except)\n"
"[Arr::exists](#method-array-exists)\n"
"[Arr::first](#method-array-first)\n"
"[Arr::flatten](#method-array-flatten)\n"
"[Arr::forget](#method-array-forget)\n"
"[Arr::get](#method-array-get)\n"
"[Arr::has](#method-array-has)\n"
"[Arr::hasAny](#method-array-hasany)\n"
"[Arr::isAssoc](#method-array-isassoc)\n"
"[Arr::isList](#method-array-islist)\n"
"[Arr::join](#method-array-join)\n"
"[Arr::keyBy](#method-array-keyby)\n"
"[Arr::last](#method-array-last)\n"
"[Arr::map](#method-array-map)\n"
"[Arr::mapWithKeys](#method-array-map-with-keys)\n"
"[Arr::only](#method-array-only)\n"
"[Arr::pluck](#method-array-pluck)\n"
"[Arr::prepend](#method-array-prepend)\n"
"[Arr::prependKeysWith](#method-array-prependkeyswith)\n"
"[Arr::pull](#method-array-pull)\n"
"[Arr::query](#method-array-query)\n"
"[Arr::random](#method-array-random)\n"
"[Arr::set](#method-array-set)\n"
"[Arr::shuffle](#method-array-shuffle)\n"
"[Arr::sort](#method-array-sort)\n"
"[Arr::sortDesc](#method-array-sort-desc)\n"
"[Arr::sortRecursive](#method-array-sort-recursive)\n"
"[Arr::sortRecursiveDesc](#method-array-sort-recursive-desc)\n"
"[Arr::take](#method-array-take)\n"
"[Arr::toCssClasses](#method-array-to-css-classes)\n"
"[Arr::toCssStyles](#method-array-to-css-styles)\n"
"[Arr::undot](#method-array-undot)\n"
"[Arr::where](#method-array-where)\n"
"[Arr::whereNotNull](#method-array-where-not-null)\n"
"[Arr::wrap](#method-array-wrap)\n"
"[data_fill](#method-data-fill)\n"
"[data_get](#method-data-get)\n"
"[data_set](#method-data-set)\n"
"[data_forget](#method-data-forget)\n"
"[head](#method-head)\n"
"[last](#method-last)"
msgstr ""

#: ./docs/11.x/helpers.md:39
msgctxt "P"
msgid "[Arr::accessible](#method-array-accessible)\n"
"[Arr::add](#method-array-add)\n"
"[Arr::collapse](#method-array-collapse)\n"
"[Arr::crossJoin](#method-array-crossjoin)\n"
"[Arr::divide](#method-array-divide)\n"
"[Arr::dot](#method-array-dot)\n"
"[Arr::except](#method-array-except)\n"
"[Arr::exists](#method-array-exists)\n"
"[Arr::first](#method-array-first)\n"
"[Arr::flatten](#method-array-flatten)\n"
"[Arr::forget](#method-array-forget)\n"
"[Arr::get](#method-array-get)\n"
"[Arr::has](#method-array-has)\n"
"[Arr::hasAny](#method-array-hasany)\n"
"[Arr::isAssoc](#method-array-isassoc)\n"
"[Arr::isList](#method-array-islist)\n"
"[Arr::join](#method-array-join)\n"
"[Arr::keyBy](#method-array-keyby)\n"
"[Arr::last](#method-array-last)\n"
"[Arr::map](#method-array-map)\n"
"[Arr::mapSpread](#method-array-map-spread)\n"
"[Arr::mapWithKeys](#method-array-map-with-keys)\n"
"[Arr::only](#method-array-only)\n"
"[Arr::pluck](#method-array-pluck)\n"
"[Arr::prepend](#method-array-prepend)\n"
"[Arr::prependKeysWith](#method-array-prependkeyswith)\n"
"[Arr::pull](#method-array-pull)\n"
"[Arr::query](#method-array-query)\n"
"[Arr::random](#method-array-random)\n"
"[Arr::set](#method-array-set)\n"
"[Arr::shuffle](#method-array-shuffle)\n"
"[Arr::sort](#method-array-sort)\n"
"[Arr::sortDesc](#method-array-sort-desc)\n"
"[Arr::sortRecursive](#method-array-sort-recursive)\n"
"[Arr::take](#method-array-take)\n"
"[Arr::toCssClasses](#method-array-to-css-classes)\n"
"[Arr::toCssStyles](#method-array-to-css-styles)\n"
"[Arr::undot](#method-array-undot)\n"
"[Arr::where](#method-array-where)\n"
"[Arr::whereNotNull](#method-array-where-not-null)\n"
"[Arr::wrap](#method-array-wrap)\n"
"[data_fill](#method-data-fill)\n"
"[data_get](#method-data-get)\n"
"[data_set](#method-data-set)\n"
"[data_forget](#method-data-forget)\n"
"[head](#method-head)\n"
"[last](#method-last)"
msgstr ""

#: ./docs/8.x/helpers.md:68
#: ./docs/9.x/helpers.md:79
#: ./docs/10.x/helpers.md:107
#: ./docs/11.x/helpers.md:113
#: ./docs/master/helpers.md:107
#~ msgctxt "P"
#~ msgid "<a name=\"paths-method-list\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:69
#: ./docs/8.x/helpers.md:1009
#: ./docs/9.x/helpers.md:80
#: ./docs/9.x/helpers.md:1176
#: ./docs/10.x/helpers.md:108
#: ./docs/10.x/helpers.md:1357
#: ./docs/11.x/helpers.md:114
#: ./docs/11.x/helpers.md:1481
#: ./docs/master/helpers.md:108
#: ./docs/master/helpers.md:1372
msgctxt "H3"
msgid "Paths"
msgstr ""

#: ./docs/8.x/helpers.md:73
msgctxt "P"
msgid "[app_path](#method-app-path)\n"
"[base_path](#method-base-path)\n"
"[config_path](#method-config-path)\n"
"[database_path](#method-database-path)\n"
"[mix](#method-mix)\n"
"[public_path](#method-public-path)\n"
"[resource_path](#method-resource-path)\n"
"[storage_path](#method-storage-path)"
msgstr ""

#: ./docs/8.x/helpers.md:84
#: ./docs/9.x/helpers.md:96
#~ msgctxt "P"
#~ msgid "<a name=\"strings-method-list\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:84
#: ./docs/10.x/helpers.md:112
#: ./docs/11.x/helpers.md:118
#: ./docs/master/helpers.md:112
msgctxt "P"
msgid "[app_path](#method-app-path)\n"
"[base_path](#method-base-path)\n"
"[config_path](#method-config-path)\n"
"[database_path](#method-database-path)\n"
"[lang_path](#method-lang-path)\n"
"[mix](#method-mix)\n"
"[public_path](#method-public-path)\n"
"[resource_path](#method-resource-path)\n"
"[storage_path](#method-storage-path)"
msgstr ""

#: ./docs/8.x/helpers.md:85
#: ./docs/8.x/helpers.md:1082
#: ./docs/9.x/helpers.md:97
#: ./docs/9.x/helpers.md:1258
msgctxt "H3"
msgid "Strings"
msgstr ""

#: ./docs/10.x/helpers.md:87
#: ./docs/11.x/helpers.md:88
#: ./docs/master/helpers.md:87
#~ msgctxt "P"
#~ msgid "<a name=\"numbers-method-list\"></a>"
#~ msgstr ""

#: ./docs/10.x/helpers.md:88
#: ./docs/10.x/helpers.md:1128
#: ./docs/11.x/helpers.md:89
#: ./docs/11.x/helpers.md:1173
#: ./docs/master/helpers.md:88
#: ./docs/master/helpers.md:1143
msgctxt "H3"
msgid "Numbers"
msgstr ""

#: ./docs/8.x/helpers.md:89
msgctxt "P"
msgid "[__](#method-__)\n"
"[class_basename](#method-class-basename)\n"
"[e](#method-e)\n"
"[preg_replace_array](#method-preg-replace-array)\n"
"[Str::after](#method-str-after)\n"
"[Str::afterLast](#method-str-after-last)\n"
"[Str::ascii](#method-str-ascii)\n"
"[Str::before](#method-str-before)\n"
"[Str::beforeLast](#method-str-before-last)\n"
"[Str::between](#method-str-between)\n"
"[Str::camel](#method-camel-case)\n"
"[Str::contains](#method-str-contains)\n"
"[Str::containsAll](#method-str-contains-all)\n"
"[Str::endsWith](#method-ends-with)\n"
"[Str::finish](#method-str-finish)\n"
"[Str::headline](#method-str-headline)\n"
"[Str::is](#method-str-is)\n"
"[Str::isAscii](#method-str-is-ascii)\n"
"[Str::isUuid](#method-str-is-uuid)\n"
"[Str::kebab](#method-kebab-case)\n"
"[Str::length](#method-str-length)\n"
"[Str::limit](#method-str-limit)\n"
"[Str::lower](#method-str-lower)\n"
"[Str::markdown](#method-str-markdown)\n"
"[Str::mask](#method-str-mask)\n"
"[Str::orderedUuid](#method-str-ordered-uuid)\n"
"[Str::padBoth](#method-str-padboth)\n"
"[Str::padLeft](#method-str-padleft)\n"
"[Str::padRight](#method-str-padright)\n"
"[Str::plural](#method-str-plural)\n"
"[Str::pluralStudly](#method-str-plural-studly)\n"
"[Str::random](#method-str-random)\n"
"[Str::remove](#method-str-remove)\n"
"[Str::replace](#method-str-replace)\n"
"[Str::replaceArray](#method-str-replace-array)\n"
"[Str::replaceFirst](#method-str-replace-first)\n"
"[Str::replaceLast](#method-str-replace-last)\n"
"[Str::reverse](#method-str-reverse)\n"
"[Str::singular](#method-str-singular)\n"
"[Str::slug](#method-str-slug)\n"
"[Str::snake](#method-snake-case)\n"
"[Str::start](#method-str-start)\n"
"[Str::startsWith](#method-starts-with)\n"
"[Str::studly](#method-studly-case)\n"
"[Str::substr](#method-str-substr)\n"
"[Str::substrCount](#method-str-substrcount)\n"
"[Str::substrReplace](#method-str-substrreplace)\n"
"[Str::title](#method-title-case)\n"
"[Str::toHtmlString](#method-str-to-html-string)\n"
"[Str::ucfirst](#method-str-ucfirst)\n"
"[Str::upper](#method-str-upper)\n"
"[Str::uuid](#method-str-uuid)\n"
"[Str::wordCount](#method-str-word-count)\n"
"[Str::words](#method-str-words)\n"
"[trans](#method-trans)\n"
"[trans_choice](#method-trans-choice)"
msgstr ""

#: ./docs/10.x/helpers.md:92
#: ./docs/master/helpers.md:92
msgctxt "P"
msgid "[Number::abbreviate](#method-number-abbreviate)\n"
"[Number::clamp](#method-number-clamp)\n"
"[Number::currency](#method-number-currency)\n"
"[Number::fileSize](#method-number-file-size)\n"
"[Number::forHumans](#method-number-for-humans)\n"
"[Number::format](#method-number-format)\n"
"[Number::ordinal](#method-number-ordinal)\n"
"[Number::percentage](#method-number-percentage)\n"
"[Number::spell](#method-number-spell)\n"
"[Number::useLocale](#method-number-use-locale)\n"
"[Number::withLocale](#method-number-with-locale)"
msgstr ""

#: ./docs/11.x/helpers.md:93
msgctxt "P"
msgid "[Number::abbreviate](#method-number-abbreviate)\n"
"[Number::clamp](#method-number-clamp)\n"
"[Number::currency](#method-number-currency)\n"
"[Number::defaultCurrency](#method-default-currency)\n"
"[Number::defaultLocale](#method-default-locale)\n"
"[Number::fileSize](#method-number-file-size)\n"
"[Number::forHumans](#method-number-for-humans)\n"
"[Number::format](#method-number-format)\n"
"[Number::ordinal](#method-number-ordinal)\n"
"[Number::pairs](#method-number-pairs)\n"
"[Number::percentage](#method-number-percentage)\n"
"[Number::spell](#method-number-spell)\n"
"[Number::trim](#method-number-trim)\n"
"[Number::useLocale](#method-number-use-locale)\n"
"[Number::withLocale](#method-number-with-locale)\n"
"[Number::useCurrency](#method-number-use-currency)\n"
"[Number::withCurrency](#method-number-with-currency)"
msgstr ""

#: ./docs/9.x/helpers.md:101
msgctxt "P"
msgid "[__](#method-__)\n"
"[class_basename](#method-class-basename)\n"
"[e](#method-e)\n"
"[preg_replace_array](#method-preg-replace-array)\n"
"[Str::after](#method-str-after)\n"
"[Str::afterLast](#method-str-after-last)\n"
"[Str::ascii](#method-str-ascii)\n"
"[Str::before](#method-str-before)\n"
"[Str::beforeLast](#method-str-before-last)\n"
"[Str::between](#method-str-between)\n"
"[Str::betweenFirst](#method-str-between-first)\n"
"[Str::camel](#method-camel-case)\n"
"[Str::contains](#method-str-contains)\n"
"[Str::containsAll](#method-str-contains-all)\n"
"[Str::endsWith](#method-ends-with)\n"
"[Str::excerpt](#method-excerpt)\n"
"[Str::finish](#method-str-finish)\n"
"[Str::headline](#method-str-headline)\n"
"[Str::inlineMarkdown](#method-str-inline-markdown)\n"
"[Str::is](#method-str-is)\n"
"[Str::isAscii](#method-str-is-ascii)\n"
"[Str::isJson](#method-str-is-json)\n"
"[Str::isUlid](#method-str-is-ulid)\n"
"[Str::isUuid](#method-str-is-uuid)\n"
"[Str::kebab](#method-kebab-case)\n"
"[Str::lcfirst](#method-str-lcfirst)\n"
"[Str::length](#method-str-length)\n"
"[Str::limit](#method-str-limit)\n"
"[Str::lower](#method-str-lower)\n"
"[Str::markdown](#method-str-markdown)\n"
"[Str::mask](#method-str-mask)\n"
"[Str::orderedUuid](#method-str-ordered-uuid)\n"
"[Str::padBoth](#method-str-padboth)\n"
"[Str::padLeft](#method-str-padleft)\n"
"[Str::padRight](#method-str-padright)\n"
"[Str::plural](#method-str-plural)\n"
"[Str::pluralStudly](#method-str-plural-studly)\n"
"[Str::random](#method-str-random)\n"
"[Str::remove](#method-str-remove)\n"
"[Str::replace](#method-str-replace)\n"
"[Str::replaceArray](#method-str-replace-array)\n"
"[Str::replaceFirst](#method-str-replace-first)\n"
"[Str::replaceLast](#method-str-replace-last)\n"
"[Str::reverse](#method-str-reverse)\n"
"[Str::singular](#method-str-singular)\n"
"[Str::slug](#method-str-slug)\n"
"[Str::snake](#method-snake-case)\n"
"[Str::squish](#method-str-squish)\n"
"[Str::start](#method-str-start)\n"
"[Str::startsWith](#method-starts-with)\n"
"[Str::studly](#method-studly-case)\n"
"[Str::substr](#method-str-substr)\n"
"[Str::substrCount](#method-str-substrcount)\n"
"[Str::substrReplace](#method-str-substrreplace)\n"
"[Str::swap](#method-str-swap)\n"
"[Str::title](#method-title-case)\n"
"[Str::toHtmlString](#method-str-to-html-string)\n"
"[Str::ucfirst](#method-str-ucfirst)\n"
"[Str::ucsplit](#method-str-ucsplit)\n"
"[Str::upper](#method-str-upper)\n"
"[Str::ulid](#method-str-ulid)\n"
"[Str::uuid](#method-str-uuid)\n"
"[Str::wordCount](#method-str-word-count)\n"
"[Str::words](#method-str-words)\n"
"[str](#method-str)\n"
"[trans](#method-trans)\n"
"[trans_choice](#method-trans-choice)"
msgstr ""

#: ./docs/10.x/helpers.md:144
msgctxt "P"
msgid "[abort](#method-abort)\n"
"[abort_if](#method-abort-if)\n"
"[abort_unless](#method-abort-unless)\n"
"[app](#method-app)\n"
"[auth](#method-auth)\n"
"[back](#method-back)\n"
"[bcrypt](#method-bcrypt)\n"
"[blank](#method-blank)\n"
"[broadcast](#method-broadcast)\n"
"[cache](#method-cache)\n"
"[class_uses_recursive](#method-class-uses-recursive)\n"
"[collect](#method-collect)\n"
"[config](#method-config)\n"
"[cookie](#method-cookie)\n"
"[csrf_field](#method-csrf-field)\n"
"[csrf_token](#method-csrf-token)\n"
"[decrypt](#method-decrypt)\n"
"[dd](#method-dd)\n"
"[dispatch](#method-dispatch)\n"
"[dispatch_sync](#method-dispatch-sync)\n"
"[dump](#method-dump)\n"
"[encrypt](#method-encrypt)\n"
"[env](#method-env)\n"
"[event](#method-event)\n"
"[fake](#method-fake)\n"
"[filled](#method-filled)\n"
"[info](#method-info)\n"
"[logger](#method-logger)\n"
"[method_field](#method-method-field)\n"
"[now](#method-now)\n"
"[old](#method-old)\n"
"[optional](#method-optional)\n"
"[policy](#method-policy)\n"
"[redirect](#method-redirect)\n"
"[report](#method-report)\n"
"[report_if](#method-report-if)\n"
"[report_unless](#method-report-unless)\n"
"[request](#method-request)\n"
"[rescue](#method-rescue)\n"
"[resolve](#method-resolve)\n"
"[response](#method-response)\n"
"[retry](#method-retry)\n"
"[session](#method-session)\n"
"[tap](#method-tap)\n"
"[throw_if](#method-throw-if)\n"
"[throw_unless](#method-throw-unless)\n"
"[today](#method-today)\n"
"[trait_uses_recursive](#method-trait-uses-recursive)\n"
"[transform](#method-transform)\n"
"[validator](#method-validator)\n"
"[value](#method-value)\n"
"[view](#method-view)\n"
"[with](#method-with)"
msgstr ""

#: ./docs/master/helpers.md:144
msgctxt "P"
msgid "[abort](#method-abort)\n"
"[abort_if](#method-abort-if)\n"
"[abort_unless](#method-abort-unless)\n"
"[app](#method-app)\n"
"[auth](#method-auth)\n"
"[back](#method-back)\n"
"[bcrypt](#method-bcrypt)\n"
"[blank](#method-blank)\n"
"[broadcast](#method-broadcast)\n"
"[cache](#method-cache)\n"
"[class_uses_recursive](#method-class-uses-recursive)\n"
"[collect](#method-collect)\n"
"[config](#method-config)\n"
"[cookie](#method-cookie)\n"
"[csrf_field](#method-csrf-field)\n"
"[csrf_token](#method-csrf-token)\n"
"[decrypt](#method-decrypt)\n"
"[dd](#method-dd)\n"
"[dispatch](#method-dispatch)\n"
"[dispatch_sync](#method-dispatch-sync)\n"
"[dump](#method-dump)\n"
"[encrypt](#method-encrypt)\n"
"[env](#method-env)\n"
"[event](#method-event)\n"
"[fake](#method-fake)\n"
"[filled](#method-filled)\n"
"[info](#method-info)\n"
"[literal](#method-literal)\n"
"[logger](#method-logger)\n"
"[method_field](#method-method-field)\n"
"[now](#method-now)\n"
"[old](#method-old)\n"
"[once](#method-once)\n"
"[optional](#method-optional)\n"
"[policy](#method-policy)\n"
"[redirect](#method-redirect)\n"
"[report](#method-report)\n"
"[report_if](#method-report-if)\n"
"[report_unless](#method-report-unless)\n"
"[request](#method-request)\n"
"[rescue](#method-rescue)\n"
"[resolve](#method-resolve)\n"
"[response](#method-response)\n"
"[retry](#method-retry)\n"
"[session](#method-session)\n"
"[tap](#method-tap)\n"
"[throw_if](#method-throw-if)\n"
"[throw_unless](#method-throw-unless)\n"
"[today](#method-today)\n"
"[trait_uses_recursive](#method-trait-uses-recursive)\n"
"[transform](#method-transform)\n"
"[validator](#method-validator)\n"
"[value](#method-value)\n"
"[view](#method-view)\n"
"[with](#method-with)"
msgstr ""

#: ./docs/8.x/helpers.md:148
#: ./docs/9.x/helpers.md:171
#~ msgctxt "P"
#~ msgid "<a name=\"fluent-strings-method-list\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:149
#: ./docs/8.x/helpers.md:1819
#: ./docs/9.x/helpers.md:172
#: ./docs/9.x/helpers.md:2150
msgctxt "H3"
msgid "Fluent Strings"
msgstr ""

#: ./docs/11.x/helpers.md:150
msgctxt "P"
msgid "[abort](#method-abort)\n"
"[abort_if](#method-abort-if)\n"
"[abort_unless](#method-abort-unless)\n"
"[app](#method-app)\n"
"[auth](#method-auth)\n"
"[back](#method-back)\n"
"[bcrypt](#method-bcrypt)\n"
"[blank](#method-blank)\n"
"[broadcast](#method-broadcast)\n"
"[cache](#method-cache)\n"
"[class_uses_recursive](#method-class-uses-recursive)\n"
"[collect](#method-collect)\n"
"[config](#method-config)\n"
"[context](#method-context)\n"
"[cookie](#method-cookie)\n"
"[csrf_field](#method-csrf-field)\n"
"[csrf_token](#method-csrf-token)\n"
"[decrypt](#method-decrypt)\n"
"[dd](#method-dd)\n"
"[dispatch](#method-dispatch)\n"
"[dispatch_sync](#method-dispatch-sync)\n"
"[dump](#method-dump)\n"
"[encrypt](#method-encrypt)\n"
"[env](#method-env)\n"
"[event](#method-event)\n"
"[fake](#method-fake)\n"
"[filled](#method-filled)\n"
"[info](#method-info)\n"
"[literal](#method-literal)\n"
"[logger](#method-logger)\n"
"[method_field](#method-method-field)\n"
"[now](#method-now)\n"
"[old](#method-old)\n"
"[once](#method-once)\n"
"[optional](#method-optional)\n"
"[policy](#method-policy)\n"
"[redirect](#method-redirect)\n"
"[report](#method-report)\n"
"[report_if](#method-report-if)\n"
"[report_unless](#method-report-unless)\n"
"[request](#method-request)\n"
"[rescue](#method-rescue)\n"
"[resolve](#method-resolve)\n"
"[response](#method-response)\n"
"[retry](#method-retry)\n"
"[session](#method-session)\n"
"[tap](#method-tap)\n"
"[throw_if](#method-throw-if)\n"
"[throw_unless](#method-throw-unless)\n"
"[today](#method-today)\n"
"[trait_uses_recursive](#method-trait-uses-recursive)\n"
"[transform](#method-transform)\n"
"[validator](#method-validator)\n"
"[value](#method-value)\n"
"[view](#method-view)\n"
"[with](#method-with)\n"
"[when](#method-when)"
msgstr ""

#: ./docs/8.x/helpers.md:153
msgctxt "P"
msgid "[after](#method-fluent-str-after)\n"
"[afterLast](#method-fluent-str-after-last)\n"
"[append](#method-fluent-str-append)\n"
"[ascii](#method-fluent-str-ascii)\n"
"[basename](#method-fluent-str-basename)\n"
"[before](#method-fluent-str-before)\n"
"[beforeLast](#method-fluent-str-before-last)\n"
"[between](#method-fluent-str-between)\n"
"[camel](#method-fluent-str-camel)\n"
"[contains](#method-fluent-str-contains)\n"
"[containsAll](#method-fluent-str-contains-all)\n"
"[dirname](#method-fluent-str-dirname)\n"
"[endsWith](#method-fluent-str-ends-with)\n"
"[exactly](#method-fluent-str-exactly)\n"
"[explode](#method-fluent-str-explode)\n"
"[finish](#method-fluent-str-finish)\n"
"[is](#method-fluent-str-is)\n"
"[isAscii](#method-fluent-str-is-ascii)\n"
"[isEmpty](#method-fluent-str-is-empty)\n"
"[isNotEmpty](#method-fluent-str-is-not-empty)\n"
"[isUuid](#method-fluent-str-is-uuid)\n"
"[kebab](#method-fluent-str-kebab)\n"
"[length](#method-fluent-str-length)\n"
"[limit](#method-fluent-str-limit)\n"
"[lower](#method-fluent-str-lower)\n"
"[ltrim](#method-fluent-str-ltrim)\n"
"[markdown](#method-fluent-str-markdown)\n"
"[mask](#method-fluent-str-mask)\n"
"[match](#method-fluent-str-match)\n"
"[matchAll](#method-fluent-str-match-all)\n"
"[padBoth](#method-fluent-str-padboth)\n"
"[padLeft](#method-fluent-str-padleft)\n"
"[padRight](#method-fluent-str-padright)\n"
"[pipe](#method-fluent-str-pipe)\n"
"[plural](#method-fluent-str-plural)\n"
"[prepend](#method-fluent-str-prepend)\n"
"[remove](#method-fluent-str-remove)\n"
"[replace](#method-fluent-str-replace)\n"
"[replaceArray](#method-fluent-str-replace-array)\n"
"[replaceFirst](#method-fluent-str-replace-first)\n"
"[replaceLast](#method-fluent-str-replace-last)\n"
"[replaceMatches](#method-fluent-str-replace-matches)\n"
"[rtrim](#method-fluent-str-rtrim)\n"
"[scan](#method-fluent-str-scan)\n"
"[singular](#method-fluent-str-singular)\n"
"[slug](#method-fluent-str-slug)\n"
"[snake](#method-fluent-str-snake)\n"
"[split](#method-fluent-str-split)\n"
"[start](#method-fluent-str-start)\n"
"[startsWith](#method-fluent-str-starts-with)\n"
"[studly](#method-fluent-str-studly)\n"
"[substr](#method-fluent-str-substr)\n"
"[substrReplace](#method-fluent-str-substrreplace)\n"
"[tap](#method-fluent-str-tap)\n"
"[test](#method-fluent-str-test)\n"
"[title](#method-fluent-str-title)\n"
"[trim](#method-fluent-str-trim)\n"
"[ucfirst](#method-fluent-str-ucfirst)\n"
"[upper](#method-fluent-str-upper)\n"
"[when](#method-fluent-str-when)\n"
"[whenContains](#method-fluent-str-when-contains)\n"
"[whenContainsAll](#method-fluent-str-when-contains-all)\n"
"[whenEmpty](#method-fluent-str-when-empty)\n"
"[whenNotEmpty](#method-fluent-str-when-not-empty)\n"
"[whenStartsWith](#method-fluent-str-when-starts-with)\n"
"[whenEndsWith](#method-fluent-str-when-ends-with)\n"
"[whenExactly](#method-fluent-str-when-exactly)\n"
"[whenIs](#method-fluent-str-when-is)\n"
"[whenIsAscii](#method-fluent-str-when-is-ascii)\n"
"[whenIsUuid](#method-fluent-str-when-is-uuid)\n"
"[whenTest](#method-fluent-str-when-test)\n"
"[wordCount](#method-fluent-str-word-count)\n"
"[words](#method-fluent-str-words)"
msgstr ""

#: ./docs/9.x/helpers.md:176
msgctxt "P"
msgid "[after](#method-fluent-str-after)\n"
"[afterLast](#method-fluent-str-after-last)\n"
"[append](#method-fluent-str-append)\n"
"[ascii](#method-fluent-str-ascii)\n"
"[basename](#method-fluent-str-basename)\n"
"[before](#method-fluent-str-before)\n"
"[beforeLast](#method-fluent-str-before-last)\n"
"[between](#method-fluent-str-between)\n"
"[betweenFirst](#method-fluent-str-between-first)\n"
"[camel](#method-fluent-str-camel)\n"
"[classBasename](#method-fluent-str-class-basename)\n"
"[contains](#method-fluent-str-contains)\n"
"[containsAll](#method-fluent-str-contains-all)\n"
"[dirname](#method-fluent-str-dirname)\n"
"[endsWith](#method-fluent-str-ends-with)\n"
"[excerpt](#method-fluent-str-excerpt)\n"
"[exactly](#method-fluent-str-exactly)\n"
"[explode](#method-fluent-str-explode)\n"
"[finish](#method-fluent-str-finish)\n"
"[headline](#method-fluent-str-headline)\n"
"[inlineMarkdown](#method-fluent-str-inline-markdown)\n"
"[is](#method-fluent-str-is)\n"
"[isAscii](#method-fluent-str-is-ascii)\n"
"[isEmpty](#method-fluent-str-is-empty)\n"
"[isNotEmpty](#method-fluent-str-is-not-empty)\n"
"[isJson](#method-fluent-str-is-json)\n"
"[isUlid](#method-fluent-str-is-ulid)\n"
"[isUuid](#method-fluent-str-is-uuid)\n"
"[kebab](#method-fluent-str-kebab)\n"
"[lcfirst](#method-fluent-str-lcfirst)\n"
"[length](#method-fluent-str-length)\n"
"[limit](#method-fluent-str-limit)\n"
"[lower](#method-fluent-str-lower)\n"
"[ltrim](#method-fluent-str-ltrim)\n"
"[markdown](#method-fluent-str-markdown)\n"
"[mask](#method-fluent-str-mask)\n"
"[match](#method-fluent-str-match)\n"
"[matchAll](#method-fluent-str-match-all)\n"
"[newLine](#method-fluent-str-new-line)\n"
"[padBoth](#method-fluent-str-padboth)\n"
"[padLeft](#method-fluent-str-padleft)\n"
"[padRight](#method-fluent-str-padright)\n"
"[pipe](#method-fluent-str-pipe)\n"
"[plural](#method-fluent-str-plural)\n"
"[prepend](#method-fluent-str-prepend)\n"
"[remove](#method-fluent-str-remove)\n"
"[replace](#method-fluent-str-replace)\n"
"[replaceArray](#method-fluent-str-replace-array)\n"
"[replaceFirst](#method-fluent-str-replace-first)\n"
"[replaceLast](#method-fluent-str-replace-last)\n"
"[replaceMatches](#method-fluent-str-replace-matches)\n"
"[rtrim](#method-fluent-str-rtrim)\n"
"[scan](#method-fluent-str-scan)\n"
"[singular](#method-fluent-str-singular)\n"
"[slug](#method-fluent-str-slug)\n"
"[snake](#method-fluent-str-snake)\n"
"[split](#method-fluent-str-split)\n"
"[squish](#method-fluent-str-squish)\n"
"[start](#method-fluent-str-start)\n"
"[startsWith](#method-fluent-str-starts-with)\n"
"[studly](#method-fluent-str-studly)\n"
"[substr](#method-fluent-str-substr)\n"
"[substrReplace](#method-fluent-str-substrreplace)\n"
"[swap](#method-fluent-str-swap)\n"
"[tap](#method-fluent-str-tap)\n"
"[test](#method-fluent-str-test)\n"
"[title](#method-fluent-str-title)\n"
"[trim](#method-fluent-str-trim)\n"
"[ucfirst](#method-fluent-str-ucfirst)\n"
"[ucsplit](#method-fluent-str-ucsplit)\n"
"[upper](#method-fluent-str-upper)\n"
"[when](#method-fluent-str-when)\n"
"[whenContains](#method-fluent-str-when-contains)\n"
"[whenContainsAll](#method-fluent-str-when-contains-all)\n"
"[whenEmpty](#method-fluent-str-when-empty)\n"
"[whenNotEmpty](#method-fluent-str-when-not-empty)\n"
"[whenStartsWith](#method-fluent-str-when-starts-with)\n"
"[whenEndsWith](#method-fluent-str-when-ends-with)\n"
"[whenExactly](#method-fluent-str-when-exactly)\n"
"[whenNotExactly](#method-fluent-str-when-not-exactly)\n"
"[whenIs](#method-fluent-str-when-is)\n"
"[whenIsAscii](#method-fluent-str-when-is-ascii)\n"
"[whenIsUlid](#method-fluent-str-when-is-ulid)\n"
"[whenIsUuid](#method-fluent-str-when-is-uuid)\n"
"[whenTest](#method-fluent-str-when-test)\n"
"[wordCount](#method-fluent-str-word-count)\n"
"[words](#method-fluent-str-words)"
msgstr ""

#: ./docs/8.x/helpers.md:229
#: ./docs/9.x/helpers.md:266
#: ./docs/10.x/helpers.md:124
#: ./docs/11.x/helpers.md:130
#: ./docs/master/helpers.md:124
#~ msgctxt "P"
#~ msgid "<a name=\"urls-method-list\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:230
#: ./docs/8.x/helpers.md:2847
#: ./docs/9.x/helpers.md:267
#: ./docs/9.x/helpers.md:3377
#: ./docs/10.x/helpers.md:125
#: ./docs/10.x/helpers.md:1442
#: ./docs/11.x/helpers.md:131
#: ./docs/11.x/helpers.md:1566
#: ./docs/master/helpers.md:125
#: ./docs/master/helpers.md:1457
msgctxt "H3"
msgid "URLs"
msgstr ""

#: ./docs/8.x/helpers.md:234
msgctxt "P"
msgid "[action](#method-action)\n"
"[asset](#method-asset)\n"
"[route](#method-route)\n"
"[secure_asset](#method-secure-asset)\n"
"[secure_url](#method-secure-url)\n"
"[url](#method-url)"
msgstr ""

#: ./docs/8.x/helpers.md:243
#: ./docs/9.x/helpers.md:281
#: ./docs/10.x/helpers.md:139
#: ./docs/11.x/helpers.md:145
#: ./docs/master/helpers.md:139
#~ msgctxt "P"
#~ msgid "<a name=\"miscellaneous-method-list\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:244
#: ./docs/8.x/helpers.md:2924
#: ./docs/9.x/helpers.md:282
#: ./docs/9.x/helpers.md:3465
#: ./docs/10.x/helpers.md:140
#: ./docs/10.x/helpers.md:1530
#: ./docs/11.x/helpers.md:146
#: ./docs/11.x/helpers.md:1654
#: ./docs/master/helpers.md:140
#: ./docs/master/helpers.md:1545
msgctxt "H3"
msgid "Miscellaneous"
msgstr ""

#: ./docs/8.x/helpers.md:248
msgctxt "P"
msgid "[abort](#method-abort)\n"
"[abort_if](#method-abort-if)\n"
"[abort_unless](#method-abort-unless)\n"
"[app](#method-app)\n"
"[auth](#method-auth)\n"
"[back](#method-back)\n"
"[bcrypt](#method-bcrypt)\n"
"[blank](#method-blank)\n"
"[broadcast](#method-broadcast)\n"
"[cache](#method-cache)\n"
"[class_uses_recursive](#method-class-uses-recursive)\n"
"[collect](#method-collect)\n"
"[config](#method-config)\n"
"[cookie](#method-cookie)\n"
"[csrf_field](#method-csrf-field)\n"
"[csrf_token](#method-csrf-token)\n"
"[dd](#method-dd)\n"
"[dispatch](#method-dispatch)\n"
"[dump](#method-dump)\n"
"[env](#method-env)\n"
"[event](#method-event)\n"
"[filled](#method-filled)\n"
"[info](#method-info)\n"
"[logger](#method-logger)\n"
"[method_field](#method-method-field)\n"
"[now](#method-now)\n"
"[old](#method-old)\n"
"[optional](#method-optional)\n"
"[policy](#method-policy)\n"
"[redirect](#method-redirect)\n"
"[report](#method-report)\n"
"[request](#method-request)\n"
"[rescue](#method-rescue)\n"
"[resolve](#method-resolve)\n"
"[response](#method-response)\n"
"[retry](#method-retry)\n"
"[session](#method-session)\n"
"[tap](#method-tap)\n"
"[throw_if](#method-throw-if)\n"
"[throw_unless](#method-throw-unless)\n"
"[today](#method-today)\n"
"[trait_uses_recursive](#method-trait-uses-recursive)\n"
"[transform](#method-transform)\n"
"[validator](#method-validator)\n"
"[value](#method-value)\n"
"[view](#method-view)\n"
"[with](#method-with)"
msgstr ""

#: ./docs/9.x/helpers.md:271
#: ./docs/10.x/helpers.md:129
#: ./docs/11.x/helpers.md:135
#: ./docs/master/helpers.md:129
msgctxt "P"
msgid "[action](#method-action)\n"
"[asset](#method-asset)\n"
"[route](#method-route)\n"
"[secure_asset](#method-secure-asset)\n"
"[secure_url](#method-secure-url)\n"
"[to_route](#method-to-route)\n"
"[url](#method-url)"
msgstr ""

#: ./docs/9.x/helpers.md:286
msgctxt "P"
msgid "[abort](#method-abort)\n"
"[abort_if](#method-abort-if)\n"
"[abort_unless](#method-abort-unless)\n"
"[app](#method-app)\n"
"[auth](#method-auth)\n"
"[back](#method-back)\n"
"[bcrypt](#method-bcrypt)\n"
"[blank](#method-blank)\n"
"[broadcast](#method-broadcast)\n"
"[cache](#method-cache)\n"
"[class_uses_recursive](#method-class-uses-recursive)\n"
"[collect](#method-collect)\n"
"[config](#method-config)\n"
"[cookie](#method-cookie)\n"
"[csrf_field](#method-csrf-field)\n"
"[csrf_token](#method-csrf-token)\n"
"[decrypt](#method-decrypt)\n"
"[dd](#method-dd)\n"
"[dispatch](#method-dispatch)\n"
"[dump](#method-dump)\n"
"[encrypt](#method-encrypt)\n"
"[env](#method-env)\n"
"[event](#method-event)\n"
"[fake](#method-fake)\n"
"[filled](#method-filled)\n"
"[info](#method-info)\n"
"[logger](#method-logger)\n"
"[method_field](#method-method-field)\n"
"[now](#method-now)\n"
"[old](#method-old)\n"
"[optional](#method-optional)\n"
"[policy](#method-policy)\n"
"[redirect](#method-redirect)\n"
"[report](#method-report)\n"
"[report_if](#method-report-if)\n"
"[report_unless](#method-report-unless)\n"
"[request](#method-request)\n"
"[rescue](#method-rescue)\n"
"[resolve](#method-resolve)\n"
"[response](#method-response)\n"
"[retry](#method-retry)\n"
"[session](#method-session)\n"
"[tap](#method-tap)\n"
"[throw_if](#method-throw-if)\n"
"[throw_unless](#method-throw-unless)\n"
"[today](#method-today)\n"
"[trait_uses_recursive](#method-trait-uses-recursive)\n"
"[transform](#method-transform)\n"
"[validator](#method-validator)\n"
"[value](#method-value)\n"
"[view](#method-view)\n"
"[with](#method-with)"
msgstr ""

#: ./docs/8.x/helpers.md:298
#: ./docs/9.x/helpers.md:341
#~ msgctxt "P"
#~ msgid "<a name=\"method-listing\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:299
#: ./docs/9.x/helpers.md:342
msgctxt "H2"
msgid "Method Listing"
msgstr ""

#: ./docs/8.x/helpers.md:311
#: ./docs/9.x/helpers.md:354
#: ./docs/10.x/helpers.md:200
#: ./docs/11.x/helpers.md:210
#: ./docs/master/helpers.md:202
#~ msgctxt "P"
#~ msgid "<a name=\"arrays\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:314
#: ./docs/9.x/helpers.md:357
#: ./docs/10.x/helpers.md:203
#: ./docs/11.x/helpers.md:213
#: ./docs/master/helpers.md:205
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-accessible\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:315
#: ./docs/9.x/helpers.md:358
#: ./docs/10.x/helpers.md:204
#: ./docs/11.x/helpers.md:214
#: ./docs/master/helpers.md:206
msgctxt "H4"
msgid "`Arr::accessible()` {.collection-method .first-collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:317
#: ./docs/9.x/helpers.md:360
#: ./docs/10.x/helpers.md:206
#: ./docs/11.x/helpers.md:216
#: ./docs/master/helpers.md:208
msgctxt "P"
msgid "The `Arr::accessible` method determines if the given value is array accessible:"
msgstr ""

#: ./docs/8.x/helpers.md:319
#: ./docs/9.x/helpers.md:362
#: ./docs/10.x/helpers.md:208
#: ./docs/11.x/helpers.md:218
#: ./docs/master/helpers.md:210
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n"
"use Illuminate\\Support\\Collection;\n\n"
"$isAccessible = Arr::accessible(['a' => 1, 'b' => 2]);\n\n"
"// true\n\n"
"$isAccessible = Arr::accessible(new Collection);\n\n"
"// true\n\n"
"$isAccessible = Arr::accessible('abc');\n\n"
"// false\n\n"
"$isAccessible = Arr::accessible(new stdClass);\n\n"
"// false"
msgstr ""

#: ./docs/8.x/helpers.md:338
#: ./docs/9.x/helpers.md:381
#: ./docs/10.x/helpers.md:227
#: ./docs/11.x/helpers.md:237
#: ./docs/master/helpers.md:229
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-add\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:339
#: ./docs/9.x/helpers.md:382
#: ./docs/10.x/helpers.md:228
#: ./docs/11.x/helpers.md:238
#: ./docs/master/helpers.md:230
msgctxt "H4"
msgid "`Arr::add()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:341
#: ./docs/9.x/helpers.md:384
#: ./docs/10.x/helpers.md:230
#: ./docs/11.x/helpers.md:240
#: ./docs/master/helpers.md:232
msgctxt "P"
msgid "The `Arr::add` method adds a given key / value pair to an array if the given key doesn't already exist in the array or is set to `null`:"
msgstr ""

#: ./docs/8.x/helpers.md:343
#: ./docs/9.x/helpers.md:386
#: ./docs/10.x/helpers.md:232
#: ./docs/11.x/helpers.md:242
#: ./docs/master/helpers.md:234
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = Arr::add(['name' => 'Desk'], 'price', 100);\n\n"
"// ['name' => 'Desk', 'price' => 100]\n\n"
"$array = Arr::add(['name' => 'Desk', 'price' => null], 'price', 100);\n\n"
"// ['name' => 'Desk', 'price' => 100]"
msgstr ""

#: ./docs/10.x/helpers.md:348
#: ./docs/11.x/helpers.md:357
#: ./docs/master/helpers.md:350
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [100, 200, 300];\n\n"
"$first = Arr::first($array, function (int $value, int $key) {\n"
"    return $value >= 150;\n"
"});\n\n"
"// 200"
msgstr ""

#: ./docs/8.x/helpers.md:354
#: ./docs/9.x/helpers.md:397
#: ./docs/10.x/helpers.md:243
#: ./docs/11.x/helpers.md:252
#: ./docs/master/helpers.md:245
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-collapse\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:355
#: ./docs/9.x/helpers.md:398
#: ./docs/10.x/helpers.md:244
#: ./docs/11.x/helpers.md:253
#: ./docs/master/helpers.md:246
msgctxt "H4"
msgid "`Arr::collapse()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:357
#: ./docs/9.x/helpers.md:400
#: ./docs/10.x/helpers.md:246
#: ./docs/11.x/helpers.md:255
#: ./docs/master/helpers.md:248
msgctxt "P"
msgid "The `Arr::collapse` method collapses an array of arrays into a single array:"
msgstr ""

#: ./docs/8.x/helpers.md:359
#: ./docs/9.x/helpers.md:402
#: ./docs/10.x/helpers.md:248
#: ./docs/11.x/helpers.md:257
#: ./docs/master/helpers.md:250
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = Arr::collapse([[1, 2, 3], [4, 5, 6], [7, 8, 9]]);\n\n"
"// [1, 2, 3, 4, 5, 6, 7, 8, 9]"
msgstr ""

#: ./docs/8.x/helpers.md:365
#: ./docs/9.x/helpers.md:408
#: ./docs/10.x/helpers.md:254
#: ./docs/11.x/helpers.md:263
#: ./docs/master/helpers.md:256
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-crossjoin\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:366
#: ./docs/9.x/helpers.md:409
#: ./docs/10.x/helpers.md:255
#: ./docs/11.x/helpers.md:264
#: ./docs/master/helpers.md:257
msgctxt "H4"
msgid "`Arr::crossJoin()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:368
#: ./docs/9.x/helpers.md:411
#: ./docs/10.x/helpers.md:257
#: ./docs/11.x/helpers.md:266
#: ./docs/master/helpers.md:259
msgctxt "P"
msgid "The `Arr::crossJoin` method cross joins the given arrays, returning a Cartesian product with all possible permutations:"
msgstr ""

#: ./docs/8.x/helpers.md:370
#: ./docs/9.x/helpers.md:413
#: ./docs/10.x/helpers.md:259
#: ./docs/11.x/helpers.md:268
#: ./docs/master/helpers.md:261
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$matrix = Arr::crossJoin([1, 2], ['a', 'b']);\n\n"
"/*\n"
"    [\n"
"        [1, 'a'],\n"
"        [1, 'b'],\n"
"        [2, 'a'],\n"
"        [2, 'b'],\n"
"    ]\n"
"*/\n\n"
"$matrix = Arr::crossJoin([1, 2], ['a', 'b'], ['I', 'II']);\n\n"
"/*\n"
"    [\n"
"        [1, 'a', 'I'],\n"
"        [1, 'a', 'II'],\n"
"        [1, 'b', 'I'],\n"
"        [1, 'b', 'II'],\n"
"        [2, 'a', 'I'],\n"
"        [2, 'a', 'II'],\n"
"        [2, 'b', 'I'],\n"
"        [2, 'b', 'II'],\n"
"    ]\n"
"*/"
msgstr ""

#: ./docs/8.x/helpers.md:398
#: ./docs/9.x/helpers.md:441
#: ./docs/10.x/helpers.md:287
#: ./docs/11.x/helpers.md:296
#: ./docs/master/helpers.md:289
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-divide\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:399
#: ./docs/9.x/helpers.md:442
#: ./docs/10.x/helpers.md:288
#: ./docs/11.x/helpers.md:297
#: ./docs/master/helpers.md:290
msgctxt "H4"
msgid "`Arr::divide()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:401
#: ./docs/9.x/helpers.md:444
#: ./docs/10.x/helpers.md:290
#: ./docs/11.x/helpers.md:299
#: ./docs/master/helpers.md:292
msgctxt "P"
msgid "The `Arr::divide` method returns two arrays: one containing the keys and the other containing the values of the given array:"
msgstr ""

#: ./docs/8.x/helpers.md:403
#: ./docs/9.x/helpers.md:446
#: ./docs/10.x/helpers.md:292
#: ./docs/11.x/helpers.md:301
#: ./docs/master/helpers.md:294
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"[$keys, $values] = Arr::divide(['name' => 'Desk']);\n\n"
"// $keys: ['name']\n\n"
"// $values: ['Desk']"
msgstr ""

#: ./docs/8.x/helpers.md:411
#: ./docs/9.x/helpers.md:454
#: ./docs/10.x/helpers.md:300
#: ./docs/11.x/helpers.md:309
#: ./docs/master/helpers.md:302
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-dot\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:412
#: ./docs/9.x/helpers.md:455
#: ./docs/10.x/helpers.md:301
#: ./docs/11.x/helpers.md:310
#: ./docs/master/helpers.md:303
msgctxt "H4"
msgid "`Arr::dot()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:414
#: ./docs/9.x/helpers.md:457
#: ./docs/10.x/helpers.md:303
#: ./docs/11.x/helpers.md:312
#: ./docs/master/helpers.md:305
msgctxt "P"
msgid "The `Arr::dot` method flattens a multi-dimensional array into a single level array that uses \"dot\" notation to indicate depth:"
msgstr ""

#: ./docs/8.x/helpers.md:416
#: ./docs/9.x/helpers.md:459
#: ./docs/10.x/helpers.md:305
#: ./docs/11.x/helpers.md:314
#: ./docs/master/helpers.md:307
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['products' => ['desk' => ['price' => 100]]];\n\n"
"$flattened = Arr::dot($array);\n\n"
"// ['products.desk.price' => 100]"
msgstr ""

#: ./docs/8.x/helpers.md:424
#: ./docs/9.x/helpers.md:467
#: ./docs/10.x/helpers.md:313
#: ./docs/11.x/helpers.md:322
#: ./docs/master/helpers.md:315
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-except\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:425
#: ./docs/9.x/helpers.md:468
#: ./docs/10.x/helpers.md:314
#: ./docs/11.x/helpers.md:323
#: ./docs/master/helpers.md:316
msgctxt "H4"
msgid "`Arr::except()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:427
#: ./docs/9.x/helpers.md:470
#: ./docs/10.x/helpers.md:316
#: ./docs/11.x/helpers.md:325
#: ./docs/master/helpers.md:318
msgctxt "P"
msgid "The `Arr::except` method removes the given key / value pairs from an array:"
msgstr ""

#: ./docs/8.x/helpers.md:429
#: ./docs/9.x/helpers.md:472
#: ./docs/10.x/helpers.md:318
#: ./docs/11.x/helpers.md:327
#: ./docs/master/helpers.md:320
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['name' => 'Desk', 'price' => 100];\n\n"
"$filtered = Arr::except($array, ['price']);\n\n"
"// ['name' => 'Desk']"
msgstr ""

#: ./docs/8.x/helpers.md:437
#: ./docs/9.x/helpers.md:480
#: ./docs/10.x/helpers.md:326
#: ./docs/11.x/helpers.md:335
#: ./docs/master/helpers.md:328
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-exists\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:438
#: ./docs/9.x/helpers.md:481
#: ./docs/10.x/helpers.md:327
#: ./docs/11.x/helpers.md:336
#: ./docs/master/helpers.md:329
msgctxt "H4"
msgid "`Arr::exists()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:440
#: ./docs/9.x/helpers.md:483
#: ./docs/10.x/helpers.md:329
#: ./docs/11.x/helpers.md:338
#: ./docs/master/helpers.md:331
msgctxt "P"
msgid "The `Arr::exists` method checks that the given key exists in the provided array:"
msgstr ""

#: ./docs/8.x/helpers.md:442
#: ./docs/9.x/helpers.md:485
#: ./docs/10.x/helpers.md:331
#: ./docs/11.x/helpers.md:340
#: ./docs/master/helpers.md:333
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['name' => 'John Doe', 'age' => 17];\n\n"
"$exists = Arr::exists($array, 'name');\n\n"
"// true\n\n"
"$exists = Arr::exists($array, 'salary');\n\n"
"// false"
msgstr ""

#: ./docs/8.x/helpers.md:454
#: ./docs/9.x/helpers.md:497
#: ./docs/10.x/helpers.md:343
#: ./docs/11.x/helpers.md:352
#: ./docs/master/helpers.md:345
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-first\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:455
#: ./docs/9.x/helpers.md:498
#: ./docs/10.x/helpers.md:344
#: ./docs/11.x/helpers.md:353
#: ./docs/master/helpers.md:346
msgctxt "H4"
msgid "`Arr::first()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:457
#: ./docs/9.x/helpers.md:500
#: ./docs/10.x/helpers.md:346
#: ./docs/11.x/helpers.md:355
#: ./docs/master/helpers.md:348
msgctxt "P"
msgid "The `Arr::first` method returns the first element of an array passing a given truth test:"
msgstr ""

#: ./docs/8.x/helpers.md:459
#: ./docs/9.x/helpers.md:502
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [100, 200, 300];\n\n"
"$first = Arr::first($array, function ($value, $key) {\n"
"    return $value >= 150;\n"
"});\n\n"
"// 200"
msgstr ""

#: ./docs/8.x/helpers.md:469
#: ./docs/9.x/helpers.md:512
#: ./docs/10.x/helpers.md:358
#: ./docs/11.x/helpers.md:367
#: ./docs/master/helpers.md:360
msgctxt "P"
msgid "A default value may also be passed as the third parameter to the method. This value will be returned if no value passes the truth test:"
msgstr ""

#: ./docs/8.x/helpers.md:471
#: ./docs/9.x/helpers.md:514
#: ./docs/10.x/helpers.md:360
#: ./docs/11.x/helpers.md:369
#: ./docs/master/helpers.md:362
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$first = Arr::first($array, $callback, $default);"
msgstr ""

#: ./docs/8.x/helpers.md:475
#: ./docs/9.x/helpers.md:518
#: ./docs/10.x/helpers.md:364
#: ./docs/11.x/helpers.md:373
#: ./docs/master/helpers.md:366
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-flatten\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:476
#: ./docs/9.x/helpers.md:519
#: ./docs/10.x/helpers.md:365
#: ./docs/11.x/helpers.md:374
#: ./docs/master/helpers.md:367
msgctxt "H4"
msgid "`Arr::flatten()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:478
#: ./docs/9.x/helpers.md:521
#: ./docs/10.x/helpers.md:367
#: ./docs/11.x/helpers.md:376
#: ./docs/master/helpers.md:369
msgctxt "P"
msgid "The `Arr::flatten` method flattens a multi-dimensional array into a single level array:"
msgstr ""

#: ./docs/8.x/helpers.md:480
#: ./docs/9.x/helpers.md:523
#: ./docs/10.x/helpers.md:369
#: ./docs/11.x/helpers.md:378
#: ./docs/master/helpers.md:371
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['name' => 'Joe', 'languages' => ['PHP', 'Ruby']];\n\n"
"$flattened = Arr::flatten($array);\n\n"
"// ['Joe', 'PHP', 'Ruby']"
msgstr ""

#: ./docs/8.x/helpers.md:488
#: ./docs/9.x/helpers.md:531
#: ./docs/10.x/helpers.md:377
#: ./docs/11.x/helpers.md:386
#: ./docs/master/helpers.md:379
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-forget\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:489
#: ./docs/9.x/helpers.md:532
#: ./docs/10.x/helpers.md:378
#: ./docs/11.x/helpers.md:387
#: ./docs/master/helpers.md:380
msgctxt "H4"
msgid "`Arr::forget()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:491
#: ./docs/9.x/helpers.md:534
#: ./docs/10.x/helpers.md:380
#: ./docs/11.x/helpers.md:389
#: ./docs/master/helpers.md:382
msgctxt "P"
msgid "The `Arr::forget` method removes a given key / value pair from a deeply nested array using \"dot\" notation:"
msgstr ""

#: ./docs/8.x/helpers.md:493
#: ./docs/9.x/helpers.md:536
#: ./docs/10.x/helpers.md:382
#: ./docs/11.x/helpers.md:391
#: ./docs/master/helpers.md:384
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['products' => ['desk' => ['price' => 100]]];\n\n"
"Arr::forget($array, 'products.desk');\n\n"
"// ['products' => []]"
msgstr ""

#: ./docs/8.x/helpers.md:501
#: ./docs/9.x/helpers.md:544
#: ./docs/10.x/helpers.md:390
#: ./docs/11.x/helpers.md:399
#: ./docs/master/helpers.md:392
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-get\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:502
#: ./docs/9.x/helpers.md:545
#: ./docs/10.x/helpers.md:391
#: ./docs/11.x/helpers.md:400
#: ./docs/master/helpers.md:393
msgctxt "H4"
msgid "`Arr::get()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:504
#: ./docs/9.x/helpers.md:547
#: ./docs/10.x/helpers.md:393
#: ./docs/11.x/helpers.md:402
#: ./docs/master/helpers.md:395
msgctxt "P"
msgid "The `Arr::get` method retrieves a value from a deeply nested array using \"dot\" notation:"
msgstr ""

#: ./docs/8.x/helpers.md:506
#: ./docs/9.x/helpers.md:549
#: ./docs/10.x/helpers.md:395
#: ./docs/11.x/helpers.md:404
#: ./docs/master/helpers.md:397
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['products' => ['desk' => ['price' => 100]]];\n\n"
"$price = Arr::get($array, 'products.desk.price');\n\n"
"// 100"
msgstr ""

#: ./docs/8.x/helpers.md:514
#: ./docs/9.x/helpers.md:557
#: ./docs/10.x/helpers.md:403
#: ./docs/11.x/helpers.md:412
#: ./docs/master/helpers.md:405
msgctxt "P"
msgid "The `Arr::get` method also accepts a default value, which will be returned if the specified key is not present in the array:"
msgstr ""

#: ./docs/8.x/helpers.md:516
#: ./docs/9.x/helpers.md:559
#: ./docs/10.x/helpers.md:405
#: ./docs/11.x/helpers.md:414
#: ./docs/master/helpers.md:407
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$discount = Arr::get($array, 'products.desk.discount', 0);\n\n"
"// 0"
msgstr ""

#: ./docs/10.x/helpers.md:522
#: ./docs/11.x/helpers.md:531
#: ./docs/master/helpers.md:524
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [100, 200, 300, 110];\n\n"
"$last = Arr::last($array, function (int $value, int $key) {\n"
"    return $value >= 150;\n"
"});\n\n"
"// 300"
msgstr ""

#: ./docs/8.x/helpers.md:522
#: ./docs/9.x/helpers.md:565
#: ./docs/10.x/helpers.md:411
#: ./docs/11.x/helpers.md:420
#: ./docs/master/helpers.md:413
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-has\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:523
#: ./docs/9.x/helpers.md:566
#: ./docs/10.x/helpers.md:412
#: ./docs/11.x/helpers.md:421
#: ./docs/master/helpers.md:414
msgctxt "H4"
msgid "`Arr::has()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:525
#: ./docs/9.x/helpers.md:568
#: ./docs/10.x/helpers.md:414
#: ./docs/11.x/helpers.md:423
#: ./docs/master/helpers.md:416
msgctxt "P"
msgid "The `Arr::has` method checks whether a given item or items exists in an array using \"dot\" notation:"
msgstr ""

#: ./docs/8.x/helpers.md:527
#: ./docs/9.x/helpers.md:570
#: ./docs/10.x/helpers.md:416
#: ./docs/11.x/helpers.md:425
#: ./docs/master/helpers.md:418
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['product' => ['name' => 'Desk', 'price' => 100]];\n\n"
"$contains = Arr::has($array, 'product.name');\n\n"
"// true\n\n"
"$contains = Arr::has($array, ['product.price', 'product.discount']);\n\n"
"// false"
msgstr ""

#: ./docs/8.x/helpers.md:539
#: ./docs/9.x/helpers.md:582
#: ./docs/10.x/helpers.md:428
#: ./docs/11.x/helpers.md:437
#: ./docs/master/helpers.md:430
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-hasany\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:540
#: ./docs/9.x/helpers.md:583
#: ./docs/10.x/helpers.md:429
#: ./docs/11.x/helpers.md:438
#: ./docs/master/helpers.md:431
msgctxt "H4"
msgid "`Arr::hasAny()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:542
#: ./docs/9.x/helpers.md:585
#: ./docs/10.x/helpers.md:431
#: ./docs/11.x/helpers.md:440
#: ./docs/master/helpers.md:433
msgctxt "P"
msgid "The `Arr::hasAny` method checks whether any item in a given set exists in an array using \"dot\" notation:"
msgstr ""

#: ./docs/10.x/helpers.md:543
#: ./docs/11.x/helpers.md:552
#: ./docs/master/helpers.md:545
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['first' => 'james', 'last' => 'kirk'];\n\n"
"$mapped = Arr::map($array, function (string $value, string $key) {\n"
"    return ucfirst($value);\n"
"});\n\n"
"// ['first' => 'James', 'last' => 'Kirk']"
msgstr ""

#: ./docs/8.x/helpers.md:544
#: ./docs/9.x/helpers.md:587
#: ./docs/10.x/helpers.md:433
#: ./docs/11.x/helpers.md:442
#: ./docs/master/helpers.md:435
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['product' => ['name' => 'Desk', 'price' => 100]];\n\n"
"$contains = Arr::hasAny($array, 'product.name');\n\n"
"// true\n\n"
"$contains = Arr::hasAny($array, ['product.name', 'product.discount']);\n\n"
"// true\n\n"
"$contains = Arr::hasAny($array, ['category', 'product.discount']);\n\n"
"// false"
msgstr ""

#: ./docs/10.x/helpers.md:553
#: ./docs/11.x/helpers.md:585
#: ./docs/master/helpers.md:555
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-map-with-keys\"></a>"
#~ msgstr ""

#: ./docs/10.x/helpers.md:554
#: ./docs/11.x/helpers.md:586
#: ./docs/master/helpers.md:556
msgctxt "H4"
msgid "`Arr::mapWithKeys()` {.collection-method}"
msgstr ""

#: ./docs/10.x/helpers.md:556
#: ./docs/11.x/helpers.md:588
#: ./docs/master/helpers.md:558
msgctxt "P"
msgid "The `Arr::mapWithKeys` method iterates through the array and passes each value to the given callback. The callback should return an associative array containing a single key / value pair:"
msgstr ""

#: ./docs/10.x/helpers.md:558
#: ./docs/11.x/helpers.md:590
#: ./docs/master/helpers.md:560
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [\n"
"    [\n"
"        'name' => 'John',\n"
"        'department' => 'Sales',\n"
"        'email' => 'john@example.com',\n"
"    ],\n"
"    [\n"
"        'name' => 'Jane',\n"
"        'department' => 'Marketing',\n"
"        'email' => 'jane@example.com',\n"
"    ]\n"
"];\n\n"
"$mapped = Arr::mapWithKeys($array, function (array $item, int $key) {\n"
"    return [$item['email'] => $item['name']];\n"
"});\n\n"
"/*\n"
"    [\n"
"        'john@example.com' => 'John',\n"
"        'jane@example.com' => 'Jane',\n"
"    ]\n"
"*/"
msgstr ""

#: ./docs/8.x/helpers.md:560
#: ./docs/9.x/helpers.md:603
#: ./docs/10.x/helpers.md:449
#: ./docs/11.x/helpers.md:458
#: ./docs/master/helpers.md:451
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-isassoc\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:561
#: ./docs/9.x/helpers.md:604
#: ./docs/10.x/helpers.md:450
#: ./docs/11.x/helpers.md:459
#: ./docs/master/helpers.md:452
msgctxt "H4"
msgid "`Arr::isAssoc()` {.collection-method}"
msgstr ""

#: ./docs/11.x/helpers.md:562
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-map-spread\"></a>"
#~ msgstr ""

#: ./docs/11.x/helpers.md:563
msgctxt "H4"
msgid "`Arr::mapSpread()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:563
msgctxt "P"
msgid "The `Arr::isAssoc` returns `true` if the given array is an associative array. An array is considered \"associative\" if it doesn't have sequential numerical keys beginning with zero:"
msgstr ""

#: ./docs/11.x/helpers.md:565
msgctxt "P"
msgid "The `Arr::mapSpread` method iterates over the array, passing each nested item value into the given closure. The closure is free to modify the item and return it, thus forming a new array of modified items:"
msgstr ""

#: ./docs/8.x/helpers.md:565
#: ./docs/9.x/helpers.md:608
#: ./docs/10.x/helpers.md:454
#: ./docs/11.x/helpers.md:463
#: ./docs/master/helpers.md:456
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$isAssoc = Arr::isAssoc(['product' => ['name' => 'Desk', 'price' => 100]]);\n\n"
"// true\n\n"
"$isAssoc = Arr::isAssoc([1, 2, 3]);\n\n"
"// false"
msgstr ""

#: ./docs/11.x/helpers.md:567
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [\n"
"    [0, 1],\n"
"    [2, 3],\n"
"    [4, 5],\n"
"    [6, 7],\n"
"    [8, 9],\n"
"];\n\n"
"$mapped = Arr::mapSpread($array, function (int $even, int $odd) {\n"
"    return $even + $odd;\n"
"});\n\n"
"/*\n"
"    [1, 5, 9, 13, 17]\n"
"*/"
msgstr ""

#: ./docs/8.x/helpers.md:575
#: ./docs/9.x/helpers.md:671
#: ./docs/10.x/helpers.md:517
#: ./docs/11.x/helpers.md:526
#: ./docs/master/helpers.md:519
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-last\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:576
#: ./docs/9.x/helpers.md:672
#: ./docs/10.x/helpers.md:518
#: ./docs/11.x/helpers.md:527
#: ./docs/master/helpers.md:520
msgctxt "H4"
msgid "`Arr::last()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:578
#: ./docs/9.x/helpers.md:674
#: ./docs/10.x/helpers.md:520
#: ./docs/11.x/helpers.md:529
#: ./docs/master/helpers.md:522
msgctxt "P"
msgid "The `Arr::last` method returns the last element of an array passing a given truth test:"
msgstr ""

#: ./docs/8.x/helpers.md:580
#: ./docs/9.x/helpers.md:676
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [100, 200, 300, 110];\n\n"
"$last = Arr::last($array, function ($value, $key) {\n"
"    return $value >= 150;\n"
"});\n\n"
"// 300"
msgstr ""

#: ./docs/8.x/helpers.md:590
#: ./docs/9.x/helpers.md:686
#: ./docs/10.x/helpers.md:532
#: ./docs/11.x/helpers.md:541
#: ./docs/master/helpers.md:534
msgctxt "P"
msgid "A default value may be passed as the third argument to the method. This value will be returned if no value passes the truth test:"
msgstr ""

#: ./docs/8.x/helpers.md:592
#: ./docs/9.x/helpers.md:688
#: ./docs/10.x/helpers.md:534
#: ./docs/11.x/helpers.md:543
#: ./docs/master/helpers.md:536
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$last = Arr::last($array, $callback, $default);"
msgstr ""

#: ./docs/8.x/helpers.md:596
#: ./docs/9.x/helpers.md:707
#: ./docs/10.x/helpers.md:584
#: ./docs/11.x/helpers.md:616
#: ./docs/master/helpers.md:586
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-only\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:597
#: ./docs/9.x/helpers.md:708
#: ./docs/10.x/helpers.md:585
#: ./docs/11.x/helpers.md:617
#: ./docs/master/helpers.md:587
msgctxt "H4"
msgid "`Arr::only()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:599
#: ./docs/9.x/helpers.md:710
#: ./docs/10.x/helpers.md:587
#: ./docs/11.x/helpers.md:619
#: ./docs/master/helpers.md:589
msgctxt "P"
msgid "The `Arr::only` method returns only the specified key / value pairs from the given array:"
msgstr ""

#: ./docs/8.x/helpers.md:601
#: ./docs/9.x/helpers.md:712
#: ./docs/10.x/helpers.md:589
#: ./docs/11.x/helpers.md:621
#: ./docs/master/helpers.md:591
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['name' => 'Desk', 'price' => 100, 'orders' => 10];\n\n"
"$slice = Arr::only($array, ['name', 'price']);\n\n"
"// ['name' => 'Desk', 'price' => 100]"
msgstr ""

#: ./docs/9.x/helpers.md:606
#: ./docs/10.x/helpers.md:452
#: ./docs/11.x/helpers.md:461
#: ./docs/master/helpers.md:454
msgctxt "P"
msgid "The `Arr::isAssoc` method returns `true` if the given array is an associative array. An array is considered \"associative\" if it doesn't have sequential numerical keys beginning with zero:"
msgstr ""

#: ./docs/8.x/helpers.md:609
#: ./docs/9.x/helpers.md:720
#: ./docs/10.x/helpers.md:597
#: ./docs/11.x/helpers.md:629
#: ./docs/master/helpers.md:599
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-pluck\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:610
#: ./docs/9.x/helpers.md:721
#: ./docs/10.x/helpers.md:598
#: ./docs/11.x/helpers.md:630
#: ./docs/master/helpers.md:600
msgctxt "H4"
msgid "`Arr::pluck()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:612
#: ./docs/9.x/helpers.md:723
#: ./docs/10.x/helpers.md:600
#: ./docs/11.x/helpers.md:632
#: ./docs/master/helpers.md:602
msgctxt "P"
msgid "The `Arr::pluck` method retrieves all of the values for a given key from an array:"
msgstr ""

#: ./docs/8.x/helpers.md:614
#: ./docs/9.x/helpers.md:725
#: ./docs/10.x/helpers.md:602
#: ./docs/11.x/helpers.md:634
#: ./docs/master/helpers.md:604
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [\n"
"    ['developer' => ['id' => 1, 'name' => 'Taylor']],\n"
"    ['developer' => ['id' => 2, 'name' => 'Abigail']],\n"
"];\n\n"
"$names = Arr::pluck($array, 'developer.name');\n\n"
"// ['Taylor', 'Abigail']"
msgstr ""

#: ./docs/9.x/helpers.md:618
#: ./docs/10.x/helpers.md:464
#: ./docs/11.x/helpers.md:473
#: ./docs/master/helpers.md:466
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-islist\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:619
#: ./docs/10.x/helpers.md:465
#: ./docs/11.x/helpers.md:474
#: ./docs/master/helpers.md:467
msgctxt "H4"
msgid "`Arr::isList()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:621
#: ./docs/10.x/helpers.md:467
#: ./docs/11.x/helpers.md:476
#: ./docs/master/helpers.md:469
msgctxt "P"
msgid "The `Arr::isList` method returns `true` if the given array's keys are sequential integers beginning from zero:"
msgstr ""

#: ./docs/9.x/helpers.md:623
#: ./docs/10.x/helpers.md:469
#: ./docs/11.x/helpers.md:478
#: ./docs/master/helpers.md:471
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$isList = Arr::isList(['foo', 'bar', 'baz']);\n\n"
"// true\n\n"
"$isList = Arr::isList(['product' => ['name' => 'Desk', 'price' => 100]]);\n\n"
"// false"
msgstr ""

#: ./docs/8.x/helpers.md:625
#: ./docs/9.x/helpers.md:736
#: ./docs/10.x/helpers.md:613
#: ./docs/11.x/helpers.md:645
#: ./docs/master/helpers.md:615
msgctxt "P"
msgid "You may also specify how you wish the resulting list to be keyed:"
msgstr ""

#: ./docs/8.x/helpers.md:627
#: ./docs/9.x/helpers.md:738
#: ./docs/10.x/helpers.md:615
#: ./docs/11.x/helpers.md:647
#: ./docs/master/helpers.md:617
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$names = Arr::pluck($array, 'developer.name', 'developer.id');\n\n"
"// [1 => 'Taylor', 2 => 'Abigail']"
msgstr ""

#: ./docs/8.x/helpers.md:633
#: ./docs/9.x/helpers.md:744
#: ./docs/10.x/helpers.md:621
#: ./docs/11.x/helpers.md:653
#: ./docs/master/helpers.md:623
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-prepend\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:633
#: ./docs/10.x/helpers.md:479
#: ./docs/11.x/helpers.md:488
#: ./docs/master/helpers.md:481
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-join\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:634
#: ./docs/9.x/helpers.md:745
#: ./docs/10.x/helpers.md:622
#: ./docs/11.x/helpers.md:654
#: ./docs/master/helpers.md:624
msgctxt "H4"
msgid "`Arr::prepend()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:634
#: ./docs/10.x/helpers.md:480
#: ./docs/11.x/helpers.md:489
#: ./docs/master/helpers.md:482
msgctxt "H4"
msgid "`Arr::join()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:636
#: ./docs/9.x/helpers.md:747
#: ./docs/10.x/helpers.md:624
#: ./docs/11.x/helpers.md:656
#: ./docs/master/helpers.md:626
msgctxt "P"
msgid "The `Arr::prepend` method will push an item onto the beginning of an array:"
msgstr ""

#: ./docs/9.x/helpers.md:636
#: ./docs/10.x/helpers.md:482
#: ./docs/11.x/helpers.md:491
#: ./docs/master/helpers.md:484
msgctxt "P"
msgid "The `Arr::join` method joins array elements with a string. Using this method's second argument, you may also specify the joining string for the final element of the array:"
msgstr ""

#: ./docs/8.x/helpers.md:638
#: ./docs/9.x/helpers.md:749
#: ./docs/10.x/helpers.md:626
#: ./docs/11.x/helpers.md:658
#: ./docs/master/helpers.md:628
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['one', 'two', 'three', 'four'];\n\n"
"$array = Arr::prepend($array, 'zero');\n\n"
"// ['zero', 'one', 'two', 'three', 'four']"
msgstr ""

#: ./docs/9.x/helpers.md:638
#: ./docs/10.x/helpers.md:484
#: ./docs/11.x/helpers.md:493
#: ./docs/master/helpers.md:486
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['Tailwind', 'Alpine', 'Laravel', 'Livewire'];\n\n"
"$joined = Arr::join($array, ', ');\n\n"
"// Tailwind, Alpine, Laravel, Livewire\n\n"
"$joined = Arr::join($array, ', ', ' and ');\n\n"
"// Tailwind, Alpine, Laravel and Livewire"
msgstr ""

#: ./docs/8.x/helpers.md:646
#: ./docs/9.x/helpers.md:757
#: ./docs/10.x/helpers.md:634
#: ./docs/11.x/helpers.md:666
#: ./docs/master/helpers.md:636
msgctxt "P"
msgid "If needed, you may specify the key that should be used for the value:"
msgstr ""

#: ./docs/8.x/helpers.md:648
#: ./docs/9.x/helpers.md:759
#: ./docs/10.x/helpers.md:636
#: ./docs/11.x/helpers.md:668
#: ./docs/master/helpers.md:638
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['price' => 100];\n\n"
"$array = Arr::prepend($array, 'Desk', 'name');\n\n"
"// ['name' => 'Desk', 'price' => 100]"
msgstr ""

#: ./docs/9.x/helpers.md:650
#: ./docs/10.x/helpers.md:496
#: ./docs/11.x/helpers.md:505
#: ./docs/master/helpers.md:498
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-keyby\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:651
#: ./docs/10.x/helpers.md:497
#: ./docs/11.x/helpers.md:506
#: ./docs/master/helpers.md:499
msgctxt "H4"
msgid "`Arr::keyBy()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:653
#: ./docs/10.x/helpers.md:499
#: ./docs/11.x/helpers.md:508
#: ./docs/master/helpers.md:501
msgctxt "P"
msgid "The `Arr::keyBy` method keys the array by the given key. If multiple items have the same key, only the last one will appear in the new array:"
msgstr ""

#: ./docs/9.x/helpers.md:655
#: ./docs/10.x/helpers.md:501
#: ./docs/11.x/helpers.md:510
#: ./docs/master/helpers.md:503
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [\n"
"    ['product_id' => 'prod-100', 'name' => 'Desk'],\n"
"    ['product_id' => 'prod-200', 'name' => 'Chair'],\n"
"];\n\n"
"$keyed = Arr::keyBy($array, 'product_id');\n\n"
"/*\n"
"    [\n"
"        'prod-100' => ['product_id' => 'prod-100', 'name' => 'Desk'],\n"
"        'prod-200' => ['product_id' => 'prod-200', 'name' => 'Chair'],\n"
"    ]\n"
"*/"
msgstr ""

#: ./docs/8.x/helpers.md:656
#: ./docs/9.x/helpers.md:788
#: ./docs/10.x/helpers.md:665
#: ./docs/11.x/helpers.md:697
#: ./docs/master/helpers.md:667
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-pull\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:657
#: ./docs/9.x/helpers.md:789
#: ./docs/10.x/helpers.md:666
#: ./docs/11.x/helpers.md:698
#: ./docs/master/helpers.md:668
msgctxt "H4"
msgid "`Arr::pull()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:659
#: ./docs/9.x/helpers.md:791
#: ./docs/10.x/helpers.md:668
#: ./docs/11.x/helpers.md:700
#: ./docs/master/helpers.md:670
msgctxt "P"
msgid "The `Arr::pull` method returns and removes a key / value pair from an array:"
msgstr ""

#: ./docs/8.x/helpers.md:661
#: ./docs/9.x/helpers.md:793
#: ./docs/10.x/helpers.md:670
#: ./docs/11.x/helpers.md:702
#: ./docs/master/helpers.md:672
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['name' => 'Desk', 'price' => 100];\n\n"
"$name = Arr::pull($array, 'name');\n\n"
"// $name: Desk\n\n"
"// $array: ['price' => 100]"
msgstr ""

#: ./docs/8.x/helpers.md:671
#: ./docs/9.x/helpers.md:803
#: ./docs/10.x/helpers.md:680
#: ./docs/11.x/helpers.md:712
#: ./docs/master/helpers.md:682
msgctxt "P"
msgid "A default value may be passed as the third argument to the method. This value will be returned if the key doesn't exist:"
msgstr ""

#: ./docs/8.x/helpers.md:673
#: ./docs/9.x/helpers.md:805
#: ./docs/10.x/helpers.md:682
#: ./docs/11.x/helpers.md:714
#: ./docs/master/helpers.md:684
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$value = Arr::pull($array, $key, $default);"
msgstr ""

#: ./docs/8.x/helpers.md:677
#: ./docs/9.x/helpers.md:809
#: ./docs/10.x/helpers.md:686
#: ./docs/11.x/helpers.md:718
#: ./docs/master/helpers.md:688
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-query\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:678
#: ./docs/9.x/helpers.md:810
#: ./docs/10.x/helpers.md:687
#: ./docs/11.x/helpers.md:719
#: ./docs/master/helpers.md:689
msgctxt "H4"
msgid "`Arr::query()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:680
#: ./docs/9.x/helpers.md:812
#: ./docs/10.x/helpers.md:689
#: ./docs/11.x/helpers.md:721
#: ./docs/master/helpers.md:691
msgctxt "P"
msgid "The `Arr::query` method converts the array into a query string:"
msgstr ""

#: ./docs/8.x/helpers.md:682
#: ./docs/9.x/helpers.md:814
#: ./docs/10.x/helpers.md:691
#: ./docs/11.x/helpers.md:723
#: ./docs/master/helpers.md:693
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [\n"
"    'name' => 'Taylor',\n"
"    'order' => [\n"
"        'column' => 'created_at',\n"
"        'direction' => 'desc'\n"
"    ]\n"
"];\n\n"
"Arr::query($array);\n\n"
"// name=Taylor&order[column]=created_at&order[direction]=desc"
msgstr ""

#: ./docs/9.x/helpers.md:692
#: ./docs/10.x/helpers.md:538
#: ./docs/11.x/helpers.md:547
#: ./docs/master/helpers.md:540
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-map\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:693
#: ./docs/10.x/helpers.md:539
#: ./docs/11.x/helpers.md:548
#: ./docs/master/helpers.md:541
msgctxt "H4"
msgid "`Arr::map()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:695
#: ./docs/10.x/helpers.md:541
#: ./docs/11.x/helpers.md:550
#: ./docs/master/helpers.md:543
msgctxt "P"
msgid "The `Arr::map` method iterates through the array and passes each value and key to the given callback. The array value is replaced by the value returned by the callback:"
msgstr ""

#: ./docs/8.x/helpers.md:696
#: ./docs/9.x/helpers.md:828
#: ./docs/10.x/helpers.md:705
#: ./docs/11.x/helpers.md:737
#: ./docs/master/helpers.md:707
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-random\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:697
#: ./docs/9.x/helpers.md:829
#: ./docs/10.x/helpers.md:706
#: ./docs/11.x/helpers.md:738
#: ./docs/master/helpers.md:708
msgctxt "H4"
msgid "`Arr::random()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:697
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['first' => 'james', 'last' => 'kirk'];\n\n"
"$mapped = Arr::map($array, function ($value, $key) {\n"
"    return ucfirst($value);\n"
"});\n\n"
"// ['first' => 'James', 'last' => 'Kirk']"
msgstr ""

#: ./docs/8.x/helpers.md:699
#: ./docs/9.x/helpers.md:831
#: ./docs/10.x/helpers.md:708
#: ./docs/11.x/helpers.md:740
#: ./docs/master/helpers.md:710
msgctxt "P"
msgid "The `Arr::random` method returns a random value from an array:"
msgstr ""

#: ./docs/8.x/helpers.md:701
#: ./docs/9.x/helpers.md:833
#: ./docs/10.x/helpers.md:710
#: ./docs/11.x/helpers.md:742
#: ./docs/master/helpers.md:712
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [1, 2, 3, 4, 5];\n\n"
"$random = Arr::random($array);\n\n"
"// 4 - (retrieved randomly)"
msgstr ""

#: ./docs/8.x/helpers.md:709
#: ./docs/9.x/helpers.md:841
#: ./docs/10.x/helpers.md:718
#: ./docs/11.x/helpers.md:750
#: ./docs/master/helpers.md:720
msgctxt "P"
msgid "You may also specify the number of items to return as an optional second argument. Note that providing this argument will return an array even if only one item is desired:"
msgstr ""

#: ./docs/8.x/helpers.md:711
#: ./docs/9.x/helpers.md:843
#: ./docs/10.x/helpers.md:720
#: ./docs/11.x/helpers.md:752
#: ./docs/master/helpers.md:722
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$items = Arr::random($array, 2);\n\n"
"// [2, 5] - (retrieved randomly)"
msgstr ""

#: ./docs/8.x/helpers.md:717
#: ./docs/9.x/helpers.md:849
#: ./docs/10.x/helpers.md:726
#: ./docs/11.x/helpers.md:758
#: ./docs/master/helpers.md:728
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-set\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:718
#: ./docs/9.x/helpers.md:850
#: ./docs/10.x/helpers.md:727
#: ./docs/11.x/helpers.md:759
#: ./docs/master/helpers.md:729
msgctxt "H4"
msgid "`Arr::set()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:720
#: ./docs/9.x/helpers.md:852
#: ./docs/10.x/helpers.md:729
#: ./docs/11.x/helpers.md:761
#: ./docs/master/helpers.md:731
msgctxt "P"
msgid "The `Arr::set` method sets a value within a deeply nested array using \"dot\" notation:"
msgstr ""

#: ./docs/8.x/helpers.md:722
#: ./docs/9.x/helpers.md:854
#: ./docs/10.x/helpers.md:731
#: ./docs/11.x/helpers.md:763
#: ./docs/master/helpers.md:733
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['products' => ['desk' => ['price' => 100]]];\n\n"
"Arr::set($array, 'products.desk.price', 200);\n\n"
"// ['products' => ['desk' => ['price' => 200]]]"
msgstr ""

#: ./docs/8.x/helpers.md:730
#: ./docs/9.x/helpers.md:862
#: ./docs/10.x/helpers.md:739
#: ./docs/11.x/helpers.md:771
#: ./docs/master/helpers.md:741
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-shuffle\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:731
#: ./docs/9.x/helpers.md:863
#: ./docs/10.x/helpers.md:740
#: ./docs/11.x/helpers.md:772
#: ./docs/master/helpers.md:742
msgctxt "H4"
msgid "`Arr::shuffle()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:733
#: ./docs/9.x/helpers.md:865
#: ./docs/10.x/helpers.md:742
#: ./docs/11.x/helpers.md:774
#: ./docs/master/helpers.md:744
msgctxt "P"
msgid "The `Arr::shuffle` method randomly shuffles the items in the array:"
msgstr ""

#: ./docs/8.x/helpers.md:735
#: ./docs/9.x/helpers.md:867
#: ./docs/10.x/helpers.md:744
#: ./docs/11.x/helpers.md:776
#: ./docs/master/helpers.md:746
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = Arr::shuffle([1, 2, 3, 4, 5]);\n\n"
"// [3, 2, 5, 1, 4] - (generated randomly)"
msgstr ""

#: ./docs/8.x/helpers.md:741
#: ./docs/9.x/helpers.md:873
#: ./docs/10.x/helpers.md:750
#: ./docs/11.x/helpers.md:782
#: ./docs/master/helpers.md:752
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-sort\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:742
#: ./docs/9.x/helpers.md:874
#: ./docs/10.x/helpers.md:751
#: ./docs/11.x/helpers.md:783
#: ./docs/master/helpers.md:753
msgctxt "H4"
msgid "`Arr::sort()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:744
#: ./docs/9.x/helpers.md:876
#: ./docs/10.x/helpers.md:753
#: ./docs/11.x/helpers.md:785
#: ./docs/master/helpers.md:755
msgctxt "P"
msgid "The `Arr::sort` method sorts an array by its values:"
msgstr ""

#: ./docs/8.x/helpers.md:746
#: ./docs/9.x/helpers.md:878
#: ./docs/10.x/helpers.md:755
#: ./docs/11.x/helpers.md:787
#: ./docs/master/helpers.md:757
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['Desk', 'Table', 'Chair'];\n\n"
"$sorted = Arr::sort($array);\n\n"
"// ['Chair', 'Desk', 'Table']"
msgstr ""

#: ./docs/8.x/helpers.md:754
#: ./docs/9.x/helpers.md:886
#: ./docs/9.x/helpers.md:921
#: ./docs/10.x/helpers.md:763
#: ./docs/10.x/helpers.md:798
#: ./docs/11.x/helpers.md:795
#: ./docs/11.x/helpers.md:830
#: ./docs/master/helpers.md:765
#: ./docs/master/helpers.md:800
msgctxt "P"
msgid "You may also sort the array by the results of a given closure:"
msgstr ""

#: ./docs/8.x/helpers.md:756
#: ./docs/9.x/helpers.md:888
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [\n"
"    ['name' => 'Desk'],\n"
"    ['name' => 'Table'],\n"
"    ['name' => 'Chair'],\n"
"];\n\n"
"$sorted = array_values(Arr::sort($array, function ($value) {\n"
"    return $value['name'];\n"
"}));\n\n"
"/*\n"
"    [\n"
"        ['name' => 'Chair'],\n"
"        ['name' => 'Desk'],\n"
"        ['name' => 'Table'],\n"
"    ]\n"
"*/"
msgstr ""

#: ./docs/10.x/helpers.md:765
#: ./docs/11.x/helpers.md:797
#: ./docs/master/helpers.md:767
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [\n"
"    ['name' => 'Desk'],\n"
"    ['name' => 'Table'],\n"
"    ['name' => 'Chair'],\n"
"];\n\n"
"$sorted = array_values(Arr::sort($array, function (array $value) {\n"
"    return $value['name'];\n"
"}));\n\n"
"/*\n"
"    [\n"
"        ['name' => 'Chair'],\n"
"        ['name' => 'Desk'],\n"
"        ['name' => 'Table'],\n"
"    ]\n"
"*/"
msgstr ""

#: ./docs/9.x/helpers.md:767
#: ./docs/10.x/helpers.md:644
#: ./docs/11.x/helpers.md:676
#: ./docs/master/helpers.md:646
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-prependkeyswith\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:768
#: ./docs/10.x/helpers.md:645
#: ./docs/11.x/helpers.md:677
#: ./docs/master/helpers.md:647
msgctxt "H4"
msgid "`Arr::prependKeysWith()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:770
#: ./docs/10.x/helpers.md:647
#: ./docs/11.x/helpers.md:679
#: ./docs/master/helpers.md:649
msgctxt "P"
msgid "The `Arr::prependKeysWith` prepends all key names of an associative array with the given prefix:"
msgstr ""

#: ./docs/9.x/helpers.md:772
#: ./docs/10.x/helpers.md:649
#: ./docs/11.x/helpers.md:681
#: ./docs/master/helpers.md:651
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [\n"
"    'name' => 'Desk',\n"
"    'price' => 100,\n"
"];\n\n"
"$keyed = Arr::prependKeysWith($array, 'product.');\n\n"
"/*\n"
"    [\n"
"        'product.name' => 'Desk',\n"
"        'product.price' => 100,\n"
"    ]\n"
"*/"
msgstr ""

#: ./docs/8.x/helpers.md:776
#: ./docs/9.x/helpers.md:943
#: ./docs/10.x/helpers.md:820
#: ./docs/11.x/helpers.md:852
#: ./docs/master/helpers.md:822
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-sort-recursive\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:777
#: ./docs/9.x/helpers.md:944
#: ./docs/10.x/helpers.md:821
#: ./docs/11.x/helpers.md:853
#: ./docs/master/helpers.md:823
msgctxt "H4"
msgid "`Arr::sortRecursive()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:779
#: ./docs/9.x/helpers.md:946
#: ./docs/10.x/helpers.md:823
#: ./docs/11.x/helpers.md:855
#: ./docs/master/helpers.md:825
msgctxt "P"
msgid "The `Arr::sortRecursive` method recursively sorts an array using the `sort` function for numerically indexed sub-arrays and the `ksort` function for associative sub-arrays:"
msgstr ""

#: ./docs/8.x/helpers.md:781
#: ./docs/9.x/helpers.md:948
#: ./docs/10.x/helpers.md:825
#: ./docs/11.x/helpers.md:857
#: ./docs/master/helpers.md:827
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [\n"
"    ['Roman', 'Taylor', 'Li'],\n"
"    ['PHP', 'Ruby', 'JavaScript'],\n"
"    ['one' => 1, 'two' => 2, 'three' => 3],\n"
"];\n\n"
"$sorted = Arr::sortRecursive($array);\n\n"
"/*\n"
"    [\n"
"        ['JavaScript', 'PHP', 'Ruby'],\n"
"        ['one' => 1, 'three' => 3, 'two' => 2],\n"
"        ['Li', 'Roman', 'Taylor'],\n"
"    ]\n"
"*/"
msgstr ""

#: ./docs/8.x/helpers.md:799
#: ./docs/9.x/helpers.md:966
#: ./docs/10.x/helpers.md:868
#: ./docs/11.x/helpers.md:900
#: ./docs/master/helpers.md:870
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-to-css-classes\"></a>"
#~ msgstr ""

#: ./docs/10.x/helpers.md:800
#: ./docs/11.x/helpers.md:832
#: ./docs/master/helpers.md:802
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [\n"
"    ['name' => 'Desk'],\n"
"    ['name' => 'Table'],\n"
"    ['name' => 'Chair'],\n"
"];\n\n"
"$sorted = array_values(Arr::sortDesc($array, function (array $value) {\n"
"    return $value['name'];\n"
"}));\n\n"
"/*\n"
"    [\n"
"        ['name' => 'Table'],\n"
"        ['name' => 'Desk'],\n"
"        ['name' => 'Chair'],\n"
"    ]\n"
"*/"
msgstr ""

#: ./docs/8.x/helpers.md:800
#: ./docs/9.x/helpers.md:967
#: ./docs/10.x/helpers.md:869
#: ./docs/11.x/helpers.md:901
#: ./docs/master/helpers.md:871
msgctxt "H4"
msgid "`Arr::toCssClasses()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:802
#: ./docs/9.x/helpers.md:969
msgctxt "P"
msgid "The `Arr::toCssClasses` conditionally compiles a CSS class string. The method accepts an array of classes where the array key contains the class or classes you wish to add, while the value is a boolean expression. If the array element has a numeric key, it will always be included in the rendered class list:"
msgstr ""

#: ./docs/8.x/helpers.md:804
#: ./docs/9.x/helpers.md:971
#: ./docs/10.x/helpers.md:873
#: ./docs/11.x/helpers.md:905
#: ./docs/master/helpers.md:875
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$isActive = false;\n"
"$hasError = true;\n\n"
"$array = ['p-4', 'font-bold' => $isActive, 'bg-red' => $hasError];\n\n"
"$classes = Arr::toCssClasses($array);\n\n"
"/*\n"
"    'p-4 bg-red'\n"
"*/"
msgstr ""

#: ./docs/8.x/helpers.md:817
#: ./docs/9.x/helpers.md:984
#: ./docs/10.x/helpers.md:905
#: ./docs/11.x/helpers.md:937
#: ./docs/master/helpers.md:907
msgctxt "P"
msgid "This method powers Laravel's functionality allowing [merging classes with a Blade component's attribute bag](/docs/{{version}}/blade#conditionally-merge-classes) as well as the `@class` [Blade directive](/docs/{{version}}/blade#conditional-classes)."
msgstr ""

#: ./docs/8.x/helpers.md:819
#: ./docs/9.x/helpers.md:986
#: ./docs/10.x/helpers.md:907
#: ./docs/11.x/helpers.md:939
#: ./docs/master/helpers.md:909
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-undot\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:820
#: ./docs/9.x/helpers.md:987
#: ./docs/10.x/helpers.md:908
#: ./docs/11.x/helpers.md:940
#: ./docs/master/helpers.md:910
msgctxt "H4"
msgid "`Arr::undot()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:822
#: ./docs/9.x/helpers.md:989
#: ./docs/10.x/helpers.md:910
#: ./docs/11.x/helpers.md:942
#: ./docs/master/helpers.md:912
msgctxt "P"
msgid "The `Arr::undot` method expands a single-dimensional array that uses \"dot\" notation into a multi-dimensional array:"
msgstr ""

#: ./docs/8.x/helpers.md:824
#: ./docs/9.x/helpers.md:991
#: ./docs/10.x/helpers.md:912
#: ./docs/11.x/helpers.md:944
#: ./docs/master/helpers.md:914
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [\n"
"    'user.name' => 'Kevin Malone',\n"
"    'user.occupation' => 'Accountant',\n"
"];\n\n"
"$array = Arr::undot($array);\n\n"
"// ['user' => ['name' => 'Kevin Malone', 'occupation' => 'Accountant']]"
msgstr ""

#: ./docs/8.x/helpers.md:835
#: ./docs/9.x/helpers.md:1002
#: ./docs/10.x/helpers.md:923
#: ./docs/11.x/helpers.md:955
#: ./docs/master/helpers.md:925
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-where\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:836
#: ./docs/9.x/helpers.md:1003
#: ./docs/10.x/helpers.md:924
#: ./docs/11.x/helpers.md:956
#: ./docs/master/helpers.md:926
msgctxt "H4"
msgid "`Arr::where()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:838
#: ./docs/9.x/helpers.md:1005
#: ./docs/10.x/helpers.md:926
#: ./docs/11.x/helpers.md:958
#: ./docs/master/helpers.md:928
msgctxt "P"
msgid "The `Arr::where` method filters an array using the given closure:"
msgstr ""

#: ./docs/8.x/helpers.md:840
#: ./docs/9.x/helpers.md:1007
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [100, '200', 300, '400', 500];\n\n"
"$filtered = Arr::where($array, function ($value, $key) {\n"
"    return is_string($value);\n"
"});\n\n"
"// [1 => '200', 3 => '400']"
msgstr ""

#: ./docs/10.x/helpers.md:843
#: ./docs/11.x/helpers.md:875
#: ./docs/master/helpers.md:845
msgctxt "P"
msgid "If you would like the results sorted in descending order, you may use the `Arr::sortRecursiveDesc` method."
msgstr ""

#: ./docs/10.x/helpers.md:845
#: ./docs/11.x/helpers.md:877
#: ./docs/master/helpers.md:847
msgctxt "CODE"
msgid "$sorted = Arr::sortRecursiveDesc($array);"
msgstr ""

#: ./docs/10.x/helpers.md:847
#: ./docs/11.x/helpers.md:879
#: ./docs/master/helpers.md:849
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-take\"></a>"
#~ msgstr ""

#: ./docs/10.x/helpers.md:848
#: ./docs/11.x/helpers.md:880
#: ./docs/master/helpers.md:850
msgctxt "H4"
msgid "`Arr::take()` {.collection-method}"
msgstr ""

#: ./docs/10.x/helpers.md:850
#: ./docs/11.x/helpers.md:882
#: ./docs/master/helpers.md:852
msgctxt "P"
msgid "The `Arr::take` method returns a new array with the specified number of items:"
msgstr ""

#: ./docs/8.x/helpers.md:850
#: ./docs/9.x/helpers.md:1017
#: ./docs/10.x/helpers.md:938
#: ./docs/11.x/helpers.md:970
#: ./docs/master/helpers.md:940
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-where-not-null\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:851
#: ./docs/9.x/helpers.md:1018
#: ./docs/10.x/helpers.md:939
#: ./docs/11.x/helpers.md:971
#: ./docs/master/helpers.md:941
msgctxt "H4"
msgid "`Arr::whereNotNull()` {.collection-method}"
msgstr ""

#: ./docs/10.x/helpers.md:852
#: ./docs/11.x/helpers.md:884
#: ./docs/master/helpers.md:854
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [0, 1, 2, 3, 4, 5];\n\n"
"$chunk = Arr::take($array, 3);\n\n"
"// [0, 1, 2]"
msgstr ""

#: ./docs/8.x/helpers.md:853
#: ./docs/9.x/helpers.md:1020
#: ./docs/10.x/helpers.md:941
#: ./docs/11.x/helpers.md:973
#: ./docs/master/helpers.md:943
msgctxt "P"
msgid "The `Arr::whereNotNull` method removes all `null` values from the given array:"
msgstr ""

#: ./docs/8.x/helpers.md:855
#: ./docs/9.x/helpers.md:1022
#: ./docs/10.x/helpers.md:943
#: ./docs/11.x/helpers.md:975
#: ./docs/master/helpers.md:945
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [0, null];\n\n"
"$filtered = Arr::whereNotNull($array);\n\n"
"// [0 => 0]"
msgstr ""

#: ./docs/10.x/helpers.md:860
#: ./docs/11.x/helpers.md:892
#: ./docs/master/helpers.md:862
msgctxt "P"
msgid "You may also pass a negative integer to take the specified number of items from the end of the array:"
msgstr ""

#: ./docs/10.x/helpers.md:862
#: ./docs/11.x/helpers.md:894
#: ./docs/master/helpers.md:864
msgctxt "CODE"
msgid "$array = [0, 1, 2, 3, 4, 5];\n\n"
"$chunk = Arr::take($array, -2);\n\n"
"// [4, 5]"
msgstr ""

#: ./docs/8.x/helpers.md:863
#: ./docs/9.x/helpers.md:1030
#: ./docs/10.x/helpers.md:951
#: ./docs/11.x/helpers.md:983
#: ./docs/master/helpers.md:953
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-wrap\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:864
#: ./docs/9.x/helpers.md:1031
#: ./docs/10.x/helpers.md:952
#: ./docs/11.x/helpers.md:984
#: ./docs/master/helpers.md:954
msgctxt "H4"
msgid "`Arr::wrap()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:866
#: ./docs/9.x/helpers.md:1033
#: ./docs/10.x/helpers.md:954
#: ./docs/11.x/helpers.md:986
#: ./docs/master/helpers.md:956
msgctxt "P"
msgid "The `Arr::wrap` method wraps the given value in an array. If the given value is already an array it will be returned without modification:"
msgstr ""

#: ./docs/8.x/helpers.md:868
#: ./docs/9.x/helpers.md:1035
#: ./docs/10.x/helpers.md:956
#: ./docs/11.x/helpers.md:988
#: ./docs/master/helpers.md:958
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$string = 'Laravel';\n\n"
"$array = Arr::wrap($string);\n\n"
"// ['Laravel']"
msgstr ""

#: ./docs/10.x/helpers.md:871
#: ./docs/11.x/helpers.md:903
#: ./docs/master/helpers.md:873
msgctxt "P"
msgid "The `Arr::toCssClasses` method conditionally compiles a CSS class string. The method accepts an array of classes where the array key contains the class or classes you wish to add, while the value is a boolean expression. If the array element has a numeric key, it will always be included in the rendered class list:"
msgstr ""

#: ./docs/8.x/helpers.md:876
#: ./docs/9.x/helpers.md:1043
#: ./docs/10.x/helpers.md:964
#: ./docs/11.x/helpers.md:996
#: ./docs/master/helpers.md:966
msgctxt "P"
msgid "If the given value is `null`, an empty array will be returned:"
msgstr ""

#: ./docs/8.x/helpers.md:878
#: ./docs/9.x/helpers.md:1045
#: ./docs/10.x/helpers.md:966
#: ./docs/11.x/helpers.md:998
#: ./docs/master/helpers.md:968
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = Arr::wrap(null);\n\n"
"// []"
msgstr ""

#: ./docs/8.x/helpers.md:884
#: ./docs/9.x/helpers.md:1051
#: ./docs/10.x/helpers.md:972
#: ./docs/11.x/helpers.md:1004
#: ./docs/master/helpers.md:974
#~ msgctxt "P"
#~ msgid "<a name=\"method-data-fill\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:885
#: ./docs/9.x/helpers.md:1052
#: ./docs/10.x/helpers.md:973
#: ./docs/11.x/helpers.md:1005
#: ./docs/master/helpers.md:975
msgctxt "H4"
msgid "`data_fill()` {.collection-method}"
msgstr ""

#: ./docs/10.x/helpers.md:886
#: ./docs/11.x/helpers.md:918
#: ./docs/master/helpers.md:888
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-to-css-styles\"></a>"
#~ msgstr ""

#: ./docs/10.x/helpers.md:887
#: ./docs/11.x/helpers.md:919
#: ./docs/master/helpers.md:889
msgctxt "H4"
msgid "`Arr::toCssStyles()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:887
#: ./docs/9.x/helpers.md:1054
#: ./docs/10.x/helpers.md:975
#: ./docs/11.x/helpers.md:1007
#: ./docs/master/helpers.md:977
msgctxt "P"
msgid "The `data_fill` function sets a missing value within a nested array or object using \"dot\" notation:"
msgstr ""

#: ./docs/10.x/helpers.md:889
#: ./docs/11.x/helpers.md:921
#: ./docs/master/helpers.md:891
msgctxt "P"
msgid "The `Arr::toCssStyles` conditionally compiles a CSS style string. The method accepts an array of classes where the array key contains the class or classes you wish to add, while the value is a boolean expression. If the array element has a numeric key, it will always be included in the rendered class list:"
msgstr ""

#: ./docs/8.x/helpers.md:889
#: ./docs/9.x/helpers.md:1056
#: ./docs/10.x/helpers.md:977
#: ./docs/11.x/helpers.md:1009
#: ./docs/master/helpers.md:979
msgctxt "CODE"
msgid "$data = ['products' => ['desk' => ['price' => 100]]];\n\n"
"data_fill($data, 'products.desk.price', 200);\n\n"
"// ['products' => ['desk' => ['price' => 100]]]\n\n"
"data_fill($data, 'products.desk.discount', 10);\n\n"
"// ['products' => ['desk' => ['price' => 100, 'discount' => 10]]]"
msgstr ""

#: ./docs/10.x/helpers.md:891
#: ./docs/11.x/helpers.md:923
#: ./docs/master/helpers.md:893
msgctxt "CODE: php"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$hasColor = true;\n\n"
"$array = ['background-color: blue', 'color: blue' => $hasColor];\n\n"
"$classes = Arr::toCssStyles($array);\n\n"
"/*\n"
"    'background-color: blue; color: blue;'\n"
"*/"
msgstr ""

#: ./docs/8.x/helpers.md:899
#: ./docs/9.x/helpers.md:1066
#: ./docs/10.x/helpers.md:987
#: ./docs/11.x/helpers.md:1019
#: ./docs/master/helpers.md:989
msgctxt "P"
msgid "This function also accepts asterisks as wildcards and will fill the target accordingly:"
msgstr ""

#: ./docs/8.x/helpers.md:901
#: ./docs/9.x/helpers.md:1068
#: ./docs/10.x/helpers.md:989
#: ./docs/11.x/helpers.md:1021
#: ./docs/master/helpers.md:991
msgctxt "CODE"
msgid "$data = [\n"
"    'products' => [\n"
"        ['name' => 'Desk 1', 'price' => 100],\n"
"        ['name' => 'Desk 2'],\n"
"    ],\n"
"];\n\n"
"data_fill($data, 'products.*.price', 200);\n\n"
"/*\n"
"    [\n"
"        'products' => [\n"
"            ['name' => 'Desk 1', 'price' => 100],\n"
"            ['name' => 'Desk 2', 'price' => 200],\n"
"        ],\n"
"    ]\n"
"*/"
msgstr ""

#: ./docs/9.x/helpers.md:908
#: ./docs/10.x/helpers.md:785
#: ./docs/11.x/helpers.md:817
#: ./docs/master/helpers.md:787
#~ msgctxt "P"
#~ msgid "<a name=\"method-array-sort-desc\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:909
#: ./docs/10.x/helpers.md:786
#: ./docs/11.x/helpers.md:818
#: ./docs/master/helpers.md:788
msgctxt "H4"
msgid "`Arr::sortDesc()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:911
#: ./docs/10.x/helpers.md:788
#: ./docs/11.x/helpers.md:820
#: ./docs/master/helpers.md:790
msgctxt "P"
msgid "The `Arr::sortDesc` method sorts an array in descending order by its values:"
msgstr ""

#: ./docs/9.x/helpers.md:913
#: ./docs/10.x/helpers.md:790
#: ./docs/11.x/helpers.md:822
#: ./docs/master/helpers.md:792
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = ['Desk', 'Table', 'Chair'];\n\n"
"$sorted = Arr::sortDesc($array);\n\n"
"// ['Table', 'Desk', 'Chair']"
msgstr ""

#: ./docs/8.x/helpers.md:919
#: ./docs/9.x/helpers.md:1086
#: ./docs/10.x/helpers.md:1007
#: ./docs/11.x/helpers.md:1039
#: ./docs/master/helpers.md:1009
#~ msgctxt "P"
#~ msgid "<a name=\"method-data-get\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:920
#: ./docs/9.x/helpers.md:1087
#: ./docs/10.x/helpers.md:1008
#: ./docs/11.x/helpers.md:1040
#: ./docs/master/helpers.md:1010
msgctxt "H4"
msgid "`data_get()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:922
#: ./docs/9.x/helpers.md:1089
#: ./docs/10.x/helpers.md:1010
#: ./docs/11.x/helpers.md:1042
#: ./docs/master/helpers.md:1012
msgctxt "P"
msgid "The `data_get` function retrieves a value from a nested array or object using \"dot\" notation:"
msgstr ""

#: ./docs/9.x/helpers.md:923
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [\n"
"    ['name' => 'Desk'],\n"
"    ['name' => 'Table'],\n"
"    ['name' => 'Chair'],\n"
"];\n\n"
"$sorted = array_values(Arr::sortDesc($array, function ($value) {\n"
"    return $value['name'];\n"
"}));\n\n"
"/*\n"
"    [\n"
"        ['name' => 'Table'],\n"
"        ['name' => 'Desk'],\n"
"        ['name' => 'Chair'],\n"
"    ]\n"
"*/"
msgstr ""

#: ./docs/8.x/helpers.md:924
#: ./docs/9.x/helpers.md:1091
#: ./docs/10.x/helpers.md:1012
#: ./docs/11.x/helpers.md:1044
#: ./docs/master/helpers.md:1014
msgctxt "CODE"
msgid "$data = ['products' => ['desk' => ['price' => 100]]];\n\n"
"$price = data_get($data, 'products.desk.price');\n\n"
"// 100"
msgstr ""

#: ./docs/10.x/helpers.md:928
#: ./docs/11.x/helpers.md:960
#: ./docs/master/helpers.md:930
msgctxt "CODE"
msgid "use Illuminate\\Support\\Arr;\n\n"
"$array = [100, '200', 300, '400', 500];\n\n"
"$filtered = Arr::where($array, function (string|int $value, int $key) {\n"
"    return is_string($value);\n"
"});\n\n"
"// [1 => '200', 3 => '400']"
msgstr ""

#: ./docs/8.x/helpers.md:930
#: ./docs/9.x/helpers.md:1097
#: ./docs/10.x/helpers.md:1018
#: ./docs/11.x/helpers.md:1050
#: ./docs/master/helpers.md:1020
msgctxt "P"
msgid "The `data_get` function also accepts a default value, which will be returned if the specified key is not found:"
msgstr ""

#: ./docs/8.x/helpers.md:932
#: ./docs/9.x/helpers.md:1099
#: ./docs/10.x/helpers.md:1020
#: ./docs/11.x/helpers.md:1052
#: ./docs/master/helpers.md:1022
msgctxt "CODE"
msgid "$discount = data_get($data, 'products.desk.discount', 0);\n\n"
"// 0"
msgstr ""

#: ./docs/8.x/helpers.md:936
#: ./docs/9.x/helpers.md:1103
#: ./docs/10.x/helpers.md:1024
#: ./docs/11.x/helpers.md:1056
#: ./docs/master/helpers.md:1026
msgctxt "P"
msgid "The function also accepts wildcards using asterisks, which may target any key of the array or object:"
msgstr ""

#: ./docs/8.x/helpers.md:938
#: ./docs/9.x/helpers.md:1105
#: ./docs/10.x/helpers.md:1026
#: ./docs/11.x/helpers.md:1058
#: ./docs/master/helpers.md:1028
msgctxt "CODE"
msgid "$data = [\n"
"    'product-one' => ['name' => 'Desk 1', 'price' => 100],\n"
"    'product-two' => ['name' => 'Desk 2', 'price' => 150],\n"
"];\n\n"
"data_get($data, '*.name');\n\n"
"// ['Desk 1', 'Desk 2'];"
msgstr ""

#: ./docs/8.x/helpers.md:947
#: ./docs/9.x/helpers.md:1114
#: ./docs/10.x/helpers.md:1035
#: ./docs/11.x/helpers.md:1080
#: ./docs/master/helpers.md:1050
#~ msgctxt "P"
#~ msgid "<a name=\"method-data-set\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:948
#: ./docs/9.x/helpers.md:1115
#: ./docs/10.x/helpers.md:1036
#: ./docs/11.x/helpers.md:1081
#: ./docs/master/helpers.md:1051
msgctxt "H4"
msgid "`data_set()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:950
#: ./docs/9.x/helpers.md:1117
#: ./docs/10.x/helpers.md:1038
#: ./docs/11.x/helpers.md:1083
#: ./docs/master/helpers.md:1053
msgctxt "P"
msgid "The `data_set` function sets a value within a nested array or object using \"dot\" notation:"
msgstr ""

#: ./docs/8.x/helpers.md:952
#: ./docs/9.x/helpers.md:1119
#: ./docs/10.x/helpers.md:1040
#: ./docs/11.x/helpers.md:1085
#: ./docs/master/helpers.md:1055
msgctxt "CODE"
msgid "$data = ['products' => ['desk' => ['price' => 100]]];\n\n"
"data_set($data, 'products.desk.price', 200);\n\n"
"// ['products' => ['desk' => ['price' => 200]]]"
msgstr ""

#: ./docs/8.x/helpers.md:958
#: ./docs/9.x/helpers.md:1125
#: ./docs/10.x/helpers.md:1046
#: ./docs/11.x/helpers.md:1091
#: ./docs/master/helpers.md:1061
msgctxt "P"
msgid "This function also accepts wildcards using asterisks and will set values on the target accordingly:"
msgstr ""

#: ./docs/8.x/helpers.md:960
#: ./docs/9.x/helpers.md:1127
#: ./docs/10.x/helpers.md:1048
#: ./docs/11.x/helpers.md:1093
#: ./docs/master/helpers.md:1063
msgctxt "CODE"
msgid "$data = [\n"
"    'products' => [\n"
"        ['name' => 'Desk 1', 'price' => 100],\n"
"        ['name' => 'Desk 2', 'price' => 150],\n"
"    ],\n"
"];\n\n"
"data_set($data, 'products.*.price', 200);\n\n"
"/*\n"
"    [\n"
"        'products' => [\n"
"            ['name' => 'Desk 1', 'price' => 200],\n"
"            ['name' => 'Desk 2', 'price' => 200],\n"
"        ],\n"
"    ]\n"
"*/"
msgstr ""

#: ./docs/8.x/helpers.md:978
#: ./docs/9.x/helpers.md:1145
#: ./docs/10.x/helpers.md:1066
#: ./docs/11.x/helpers.md:1111
#: ./docs/master/helpers.md:1081
msgctxt "P"
msgid "By default, any existing values are overwritten. If you wish to only set a value if it doesn't exist, you may pass `false` as the fourth argument to the function:"
msgstr ""

#: ./docs/8.x/helpers.md:980
msgctxt "CODE"
msgid "$data = ['products' => ['desk' => ['price' => 100]]];\n\n"
"data_set($data, 'products.desk.price', 200, $overwrite = false);\n\n"
"// ['products' => ['desk' => ['price' => 100]]]"
msgstr ""

#: ./docs/8.x/helpers.md:986
#: ./docs/9.x/helpers.md:1153
#: ./docs/10.x/helpers.md:1105
#: ./docs/11.x/helpers.md:1150
#: ./docs/master/helpers.md:1120
#~ msgctxt "P"
#~ msgid "<a name=\"method-head\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:987
#: ./docs/9.x/helpers.md:1154
#: ./docs/10.x/helpers.md:1106
#: ./docs/11.x/helpers.md:1151
#: ./docs/master/helpers.md:1121
msgctxt "H4"
msgid "`head()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:989
#: ./docs/9.x/helpers.md:1156
#: ./docs/10.x/helpers.md:1108
#: ./docs/11.x/helpers.md:1153
#: ./docs/master/helpers.md:1123
msgctxt "P"
msgid "The `head` function returns the first element in the given array:"
msgstr ""

#: ./docs/8.x/helpers.md:991
#: ./docs/9.x/helpers.md:1158
#: ./docs/10.x/helpers.md:1110
#: ./docs/11.x/helpers.md:1155
#: ./docs/master/helpers.md:1125
msgctxt "CODE"
msgid "$array = [100, 200, 300];\n\n"
"$first = head($array);\n\n"
"// 100"
msgstr ""

#: ./docs/8.x/helpers.md:997
#: ./docs/9.x/helpers.md:1164
#: ./docs/10.x/helpers.md:1116
#: ./docs/11.x/helpers.md:1161
#: ./docs/master/helpers.md:1131
#~ msgctxt "P"
#~ msgid "<a name=\"method-last\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:998
#: ./docs/9.x/helpers.md:1165
#: ./docs/10.x/helpers.md:1117
#: ./docs/11.x/helpers.md:1162
#: ./docs/master/helpers.md:1132
msgctxt "H4"
msgid "`last()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1000
#: ./docs/9.x/helpers.md:1167
#: ./docs/10.x/helpers.md:1119
#: ./docs/11.x/helpers.md:1164
#: ./docs/master/helpers.md:1134
msgctxt "P"
msgid "The `last` function returns the last element in the given array:"
msgstr ""

#: ./docs/8.x/helpers.md:1002
#: ./docs/9.x/helpers.md:1169
#: ./docs/10.x/helpers.md:1121
#: ./docs/11.x/helpers.md:1166
#: ./docs/master/helpers.md:1136
msgctxt "CODE"
msgid "$array = [100, 200, 300];\n\n"
"$last = last($array);\n\n"
"// 300"
msgstr ""

#: ./docs/8.x/helpers.md:1008
#: ./docs/9.x/helpers.md:1175
#: ./docs/10.x/helpers.md:1356
#: ./docs/11.x/helpers.md:1480
#: ./docs/master/helpers.md:1371
#~ msgctxt "P"
#~ msgid "<a name=\"paths\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1011
#: ./docs/9.x/helpers.md:1178
#: ./docs/10.x/helpers.md:1359
#: ./docs/11.x/helpers.md:1483
#: ./docs/master/helpers.md:1374
#~ msgctxt "P"
#~ msgid "<a name=\"method-app-path\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1012
#: ./docs/9.x/helpers.md:1179
#: ./docs/10.x/helpers.md:1360
#: ./docs/11.x/helpers.md:1484
#: ./docs/master/helpers.md:1375
msgctxt "H4"
msgid "`app_path()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1014
#: ./docs/9.x/helpers.md:1181
#: ./docs/10.x/helpers.md:1362
#: ./docs/11.x/helpers.md:1486
#: ./docs/master/helpers.md:1377
msgctxt "P"
msgid "The `app_path` function returns the fully qualified path to your application's `app` directory. You may also use the `app_path` function to generate a fully qualified path to a file relative to the application directory:"
msgstr ""

#: ./docs/8.x/helpers.md:1016
#: ./docs/9.x/helpers.md:1183
#: ./docs/10.x/helpers.md:1364
#: ./docs/11.x/helpers.md:1488
#: ./docs/master/helpers.md:1379
msgctxt "CODE"
msgid "$path = app_path();\n\n"
"$path = app_path('Http/Controllers/Controller.php');"
msgstr ""

#: ./docs/8.x/helpers.md:1020
#: ./docs/9.x/helpers.md:1187
#: ./docs/10.x/helpers.md:1368
#: ./docs/11.x/helpers.md:1492
#: ./docs/master/helpers.md:1383
#~ msgctxt "P"
#~ msgid "<a name=\"method-base-path\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1021
#: ./docs/9.x/helpers.md:1188
#: ./docs/10.x/helpers.md:1369
#: ./docs/11.x/helpers.md:1493
#: ./docs/master/helpers.md:1384
msgctxt "H4"
msgid "`base_path()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1023
#: ./docs/9.x/helpers.md:1190
#: ./docs/10.x/helpers.md:1371
#: ./docs/11.x/helpers.md:1495
#: ./docs/master/helpers.md:1386
msgctxt "P"
msgid "The `base_path` function returns the fully qualified path to your application's root directory. You may also use the `base_path` function to generate a fully qualified path to a given file relative to the project root directory:"
msgstr ""

#: ./docs/8.x/helpers.md:1025
#: ./docs/9.x/helpers.md:1192
#: ./docs/10.x/helpers.md:1373
#: ./docs/11.x/helpers.md:1497
#: ./docs/master/helpers.md:1388
msgctxt "CODE"
msgid "$path = base_path();\n\n"
"$path = base_path('vendor/bin');"
msgstr ""

#: ./docs/8.x/helpers.md:1029
#: ./docs/9.x/helpers.md:1196
#: ./docs/10.x/helpers.md:1377
#: ./docs/11.x/helpers.md:1501
#: ./docs/master/helpers.md:1392
#~ msgctxt "P"
#~ msgid "<a name=\"method-config-path\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1030
#: ./docs/9.x/helpers.md:1197
#: ./docs/10.x/helpers.md:1378
#: ./docs/11.x/helpers.md:1502
#: ./docs/master/helpers.md:1393
msgctxt "H4"
msgid "`config_path()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1032
#: ./docs/9.x/helpers.md:1199
#: ./docs/10.x/helpers.md:1380
#: ./docs/11.x/helpers.md:1504
#: ./docs/master/helpers.md:1395
msgctxt "P"
msgid "The `config_path` function returns the fully qualified path to your application's `config` directory. You may also use the `config_path` function to generate a fully qualified path to a given file within the application's configuration directory:"
msgstr ""

#: ./docs/8.x/helpers.md:1034
#: ./docs/9.x/helpers.md:1201
#: ./docs/10.x/helpers.md:1382
#: ./docs/11.x/helpers.md:1506
#: ./docs/master/helpers.md:1397
msgctxt "CODE"
msgid "$path = config_path();\n\n"
"$path = config_path('app.php');"
msgstr ""

#: ./docs/8.x/helpers.md:1038
#: ./docs/9.x/helpers.md:1205
#: ./docs/10.x/helpers.md:1386
#: ./docs/11.x/helpers.md:1510
#: ./docs/master/helpers.md:1401
#~ msgctxt "P"
#~ msgid "<a name=\"method-database-path\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1039
#: ./docs/9.x/helpers.md:1206
#: ./docs/10.x/helpers.md:1387
#: ./docs/11.x/helpers.md:1511
#: ./docs/master/helpers.md:1402
msgctxt "H4"
msgid "`database_path()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1041
#: ./docs/9.x/helpers.md:1208
#: ./docs/10.x/helpers.md:1389
#: ./docs/11.x/helpers.md:1513
#: ./docs/master/helpers.md:1404
msgctxt "P"
msgid "The `database_path` function returns the fully qualified path to your application's `database` directory. You may also use the `database_path` function to generate a fully qualified path to a given file within the database directory:"
msgstr ""

#: ./docs/8.x/helpers.md:1043
#: ./docs/9.x/helpers.md:1210
#: ./docs/10.x/helpers.md:1391
#: ./docs/11.x/helpers.md:1515
#: ./docs/master/helpers.md:1406
msgctxt "CODE"
msgid "$path = database_path();\n\n"
"$path = database_path('factories/UserFactory.php');"
msgstr ""

#: ./docs/8.x/helpers.md:1047
#: ./docs/9.x/helpers.md:1223
#: ./docs/10.x/helpers.md:1407
#: ./docs/11.x/helpers.md:1531
#: ./docs/master/helpers.md:1422
#~ msgctxt "P"
#~ msgid "<a name=\"method-mix\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1048
#: ./docs/9.x/helpers.md:1224
#: ./docs/10.x/helpers.md:1408
#: ./docs/11.x/helpers.md:1532
#: ./docs/master/helpers.md:1423
msgctxt "H4"
msgid "`mix()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1050
#: ./docs/9.x/helpers.md:1226
#: ./docs/10.x/helpers.md:1410
#: ./docs/11.x/helpers.md:1534
#: ./docs/master/helpers.md:1425
msgctxt "P"
msgid "The `mix` function returns the path to a [versioned Mix file](/docs/{{version}}/mix):"
msgstr ""

#: ./docs/8.x/helpers.md:1052
#: ./docs/9.x/helpers.md:1228
#: ./docs/10.x/helpers.md:1412
#: ./docs/11.x/helpers.md:1536
#: ./docs/master/helpers.md:1427
msgctxt "CODE"
msgid "$path = mix('css/app.css');"
msgstr ""

#: ./docs/8.x/helpers.md:1054
#: ./docs/9.x/helpers.md:1230
#: ./docs/10.x/helpers.md:1414
#: ./docs/11.x/helpers.md:1538
#: ./docs/master/helpers.md:1429
#~ msgctxt "P"
#~ msgid "<a name=\"method-public-path\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1055
#: ./docs/9.x/helpers.md:1231
#: ./docs/10.x/helpers.md:1415
#: ./docs/11.x/helpers.md:1539
#: ./docs/master/helpers.md:1430
msgctxt "H4"
msgid "`public_path()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1057
#: ./docs/9.x/helpers.md:1233
#: ./docs/10.x/helpers.md:1417
#: ./docs/11.x/helpers.md:1541
#: ./docs/master/helpers.md:1432
msgctxt "P"
msgid "The `public_path` function returns the fully qualified path to your application's `public` directory. You may also use the `public_path` function to generate a fully qualified path to a given file within the public directory:"
msgstr ""

#: ./docs/8.x/helpers.md:1059
#: ./docs/9.x/helpers.md:1235
#: ./docs/10.x/helpers.md:1419
#: ./docs/11.x/helpers.md:1543
#: ./docs/master/helpers.md:1434
msgctxt "CODE"
msgid "$path = public_path();\n\n"
"$path = public_path('css/app.css');"
msgstr ""

#: ./docs/8.x/helpers.md:1063
#: ./docs/9.x/helpers.md:1239
#: ./docs/10.x/helpers.md:1423
#: ./docs/11.x/helpers.md:1547
#: ./docs/master/helpers.md:1438
#~ msgctxt "P"
#~ msgid "<a name=\"method-resource-path\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1064
#: ./docs/9.x/helpers.md:1240
#: ./docs/10.x/helpers.md:1424
#: ./docs/11.x/helpers.md:1548
#: ./docs/master/helpers.md:1439
msgctxt "H4"
msgid "`resource_path()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1066
#: ./docs/9.x/helpers.md:1242
#: ./docs/10.x/helpers.md:1426
#: ./docs/11.x/helpers.md:1550
#: ./docs/master/helpers.md:1441
msgctxt "P"
msgid "The `resource_path` function returns the fully qualified path to your application's `resources` directory. You may also use the `resource_path` function to generate a fully qualified path to a given file within the resources directory:"
msgstr ""

#: ./docs/11.x/helpers.md:1067
#: ./docs/master/helpers.md:1037
msgctxt "P"
msgid "The `{first}` and `{last}` placeholders may be used to retrieve the first or last items in an array:"
msgstr ""

#: ./docs/8.x/helpers.md:1068
#: ./docs/9.x/helpers.md:1244
#: ./docs/10.x/helpers.md:1428
#: ./docs/11.x/helpers.md:1552
#: ./docs/master/helpers.md:1443
msgctxt "CODE"
msgid "$path = resource_path();\n\n"
"$path = resource_path('sass/app.scss');"
msgstr ""

#: ./docs/11.x/helpers.md:1069
#: ./docs/master/helpers.md:1039
msgctxt "CODE"
msgid "$flight = [\n"
"    'segments' => [\n"
"        ['from' => 'LHR', 'departure' => '9:00', 'to' => 'IST', 'arrival' => '15:00'],\n"
"        ['from' => 'IST', 'departure' => '16:00', 'to' => 'PKX', 'arrival' => '20:00'],\n"
"    ],\n"
"];\n\n"
"data_get($flight, 'segments.{first}.arrival');\n\n"
"// 15:00"
msgstr ""

#: ./docs/8.x/helpers.md:1072
#: ./docs/9.x/helpers.md:1248
#: ./docs/10.x/helpers.md:1432
#: ./docs/11.x/helpers.md:1556
#: ./docs/master/helpers.md:1447
#~ msgctxt "P"
#~ msgid "<a name=\"method-storage-path\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1073
#: ./docs/9.x/helpers.md:1249
#: ./docs/10.x/helpers.md:1433
#: ./docs/11.x/helpers.md:1557
#: ./docs/master/helpers.md:1448
msgctxt "H4"
msgid "`storage_path()` {.collection-method}"
msgstr ""

#: ./docs/10.x/helpers.md:1074
#: ./docs/11.x/helpers.md:1119
#: ./docs/master/helpers.md:1089
#~ msgctxt "P"
#~ msgid "<a name=\"method-data-forget\"></a>"
#~ msgstr ""

#: ./docs/10.x/helpers.md:1075
#: ./docs/11.x/helpers.md:1120
#: ./docs/master/helpers.md:1090
msgctxt "H4"
msgid "`data_forget()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1075
#: ./docs/9.x/helpers.md:1251
#: ./docs/10.x/helpers.md:1435
#: ./docs/11.x/helpers.md:1559
#: ./docs/master/helpers.md:1450
msgctxt "P"
msgid "The `storage_path` function returns the fully qualified path to your application's `storage` directory. You may also use the `storage_path` function to generate a fully qualified path to a given file within the storage directory:"
msgstr ""

#: ./docs/10.x/helpers.md:1077
#: ./docs/11.x/helpers.md:1122
#: ./docs/master/helpers.md:1092
msgctxt "P"
msgid "The `data_forget` function removes a value within a nested array or object using \"dot\" notation:"
msgstr ""

#: ./docs/8.x/helpers.md:1077
#: ./docs/9.x/helpers.md:1253
#: ./docs/10.x/helpers.md:1437
#: ./docs/11.x/helpers.md:1561
#: ./docs/master/helpers.md:1452
msgctxt "CODE"
msgid "$path = storage_path();\n\n"
"$path = storage_path('app/file.txt');"
msgstr ""

#: ./docs/10.x/helpers.md:1079
#: ./docs/11.x/helpers.md:1124
#: ./docs/master/helpers.md:1094
msgctxt "CODE"
msgid "$data = ['products' => ['desk' => ['price' => 100]]];\n\n"
"data_forget($data, 'products.desk.price');\n\n"
"// ['products' => ['desk' => []]]"
msgstr ""

#: ./docs/8.x/helpers.md:1081
#: ./docs/9.x/helpers.md:1257
#~ msgctxt "P"
#~ msgid "<a name=\"strings\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1084
#: ./docs/9.x/helpers.md:1260
#~ msgctxt "P"
#~ msgid "<a name=\"method-__\"></a>"
#~ msgstr ""

#: ./docs/10.x/helpers.md:1085
#: ./docs/11.x/helpers.md:1130
#: ./docs/master/helpers.md:1100
msgctxt "P"
msgid "This function also accepts wildcards using asterisks and will remove values on the target accordingly:"
msgstr ""

#: ./docs/8.x/helpers.md:1085
#: ./docs/9.x/helpers.md:1261
msgctxt "H4"
msgid "`__()` {.collection-method}"
msgstr ""

#: ./docs/10.x/helpers.md:1087
#: ./docs/11.x/helpers.md:1132
#: ./docs/master/helpers.md:1102
msgctxt "CODE"
msgid "$data = [\n"
"    'products' => [\n"
"        ['name' => 'Desk 1', 'price' => 100],\n"
"        ['name' => 'Desk 2', 'price' => 150],\n"
"    ],\n"
"];\n\n"
"data_forget($data, 'products.*.price');\n\n"
"/*\n"
"    [\n"
"        'products' => [\n"
"            ['name' => 'Desk 1'],\n"
"            ['name' => 'Desk 2'],\n"
"        ],\n"
"    ]\n"
"*/"
msgstr ""

#: ./docs/8.x/helpers.md:1087
#: ./docs/9.x/helpers.md:1263
msgctxt "P"
msgid "The `__` function translates the given translation string or translation key using your [localization files](/docs/{{version}}/localization):"
msgstr ""

#: ./docs/8.x/helpers.md:1089
#: ./docs/9.x/helpers.md:1265
msgctxt "CODE"
msgid "echo __('Welcome to our application');\n\n"
"echo __('messages.welcome');"
msgstr ""

#: ./docs/8.x/helpers.md:1093
#: ./docs/9.x/helpers.md:1269
msgctxt "P"
msgid "If the specified translation string or key does not exist, the `__` function will return the given value. So, using the example above, the `__` function would return `messages.welcome` if that translation key does not exist."
msgstr ""

#: ./docs/8.x/helpers.md:1095
#: ./docs/9.x/helpers.md:1271
#~ msgctxt "P"
#~ msgid "<a name=\"method-class-basename\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1096
#: ./docs/9.x/helpers.md:1272
msgctxt "H4"
msgid "`class_basename()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1098
#: ./docs/9.x/helpers.md:1274
msgctxt "P"
msgid "The `class_basename` function returns the class name of the given class with the class's namespace removed:"
msgstr ""

#: ./docs/8.x/helpers.md:1100
#: ./docs/9.x/helpers.md:1276
msgctxt "CODE"
msgid "$class = class_basename('Foo\\Bar\\Baz');\n\n"
"// Baz"
msgstr ""

#: ./docs/8.x/helpers.md:1104
#: ./docs/9.x/helpers.md:1280
#~ msgctxt "P"
#~ msgid "<a name=\"method-e\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1105
#: ./docs/9.x/helpers.md:1281
msgctxt "H4"
msgid "`e()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1107
#: ./docs/9.x/helpers.md:1283
msgctxt "P"
msgid "The `e` function runs PHP's `htmlspecialchars` function with the `double_encode` option set to `true` by default:"
msgstr ""

#: ./docs/8.x/helpers.md:1109
#: ./docs/9.x/helpers.md:1285
msgctxt "CODE"
msgid "echo e('<html>foo</html>');\n\n"
"// &lt;html&gt;foo&lt;/html&gt;"
msgstr ""

#: ./docs/8.x/helpers.md:1113
#: ./docs/9.x/helpers.md:1289
#~ msgctxt "P"
#~ msgid "<a name=\"method-preg-replace-array\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1114
#: ./docs/9.x/helpers.md:1290
msgctxt "H4"
msgid "`preg_replace_array()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1116
#: ./docs/9.x/helpers.md:1292
msgctxt "P"
msgid "The `preg_replace_array` function replaces a given pattern in the string sequentially using an array:"
msgstr ""

#: ./docs/8.x/helpers.md:1118
#: ./docs/9.x/helpers.md:1294
msgctxt "CODE"
msgid "$string = 'The event will take place between :start and :end';\n\n"
"$replaced = preg_replace_array('/:[a-z_]+/', ['8:30', '9:00'], $string);\n\n"
"// The event will take place between 8:30 and 9:00"
msgstr ""

#: ./docs/8.x/helpers.md:1124
#: ./docs/9.x/helpers.md:1300
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-after\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1125
#: ./docs/9.x/helpers.md:1301
msgctxt "H4"
msgid "`Str::after()` {.collection-method}"
msgstr ""

#: ./docs/10.x/helpers.md:1127
#: ./docs/11.x/helpers.md:1172
#: ./docs/master/helpers.md:1142
#~ msgctxt "P"
#~ msgid "<a name=\"numbers\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1127
#: ./docs/9.x/helpers.md:1303
msgctxt "P"
msgid "The `Str::after` method returns everything after the given value in a string. The entire string will be returned if the value does not exist within the string:"
msgstr ""

#: ./docs/8.x/helpers.md:1129
#: ./docs/9.x/helpers.md:1305
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::after('This is my name', 'This is');\n\n"
"// ' my name'"
msgstr ""

#: ./docs/10.x/helpers.md:1130
#: ./docs/11.x/helpers.md:1175
#: ./docs/master/helpers.md:1145
#~ msgctxt "P"
#~ msgid "<a name=\"method-number-abbreviate\"></a>"
#~ msgstr ""

#: ./docs/10.x/helpers.md:1131
#: ./docs/11.x/helpers.md:1176
#: ./docs/master/helpers.md:1146
msgctxt "H4"
msgid "`Number::abbreviate()` {.collection-method}"
msgstr ""

#: ./docs/10.x/helpers.md:1133
#: ./docs/11.x/helpers.md:1178
#: ./docs/master/helpers.md:1148
msgctxt "P"
msgid "The `Number::abbreviate` method returns the human-readable format of the provided numerical value, with an abbreviation for the units:"
msgstr ""

#: ./docs/10.x/helpers.md:1135
#: ./docs/11.x/helpers.md:1180
#: ./docs/master/helpers.md:1150
msgctxt "CODE"
msgid "use Illuminate\\Support\\Number;\n\n"
"$number = Number::abbreviate(1000);\n\n"
"// 1K\n\n"
"$number = Number::abbreviate(489939);\n\n"
"// 490K\n\n"
"$number = Number::abbreviate(1230000, precision: 2);\n\n"
"// 1.23M"
msgstr ""

#: ./docs/8.x/helpers.md:1135
#: ./docs/9.x/helpers.md:1311
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-after-last\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1136
#: ./docs/9.x/helpers.md:1312
msgctxt "H4"
msgid "`Str::afterLast()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1138
#: ./docs/9.x/helpers.md:1314
msgctxt "P"
msgid "The `Str::afterLast` method returns everything after the last occurrence of the given value in a string. The entire string will be returned if the value does not exist within the string:"
msgstr ""

#: ./docs/8.x/helpers.md:1140
#: ./docs/9.x/helpers.md:1316
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::afterLast('App\\Http\\Controllers\\Controller', '\\\\');\n\n"
"// 'Controller'"
msgstr ""

#: ./docs/8.x/helpers.md:1146
#: ./docs/9.x/helpers.md:1322
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-ascii\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1147
#: ./docs/9.x/helpers.md:1323
msgctxt "H4"
msgid "`Str::ascii()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:1147
#: ./docs/10.x/helpers.md:1068
#: ./docs/11.x/helpers.md:1113
#: ./docs/master/helpers.md:1083
msgctxt "CODE"
msgid "$data = ['products' => ['desk' => ['price' => 100]]];\n\n"
"data_set($data, 'products.desk.price', 200, overwrite: false);\n\n"
"// ['products' => ['desk' => ['price' => 100]]]"
msgstr ""

#: ./docs/10.x/helpers.md:1149
#: ./docs/11.x/helpers.md:1194
#: ./docs/master/helpers.md:1164
#~ msgctxt "P"
#~ msgid "<a name=\"method-number-clamp\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1149
#: ./docs/9.x/helpers.md:1325
msgctxt "P"
msgid "The `Str::ascii` method will attempt to transliterate the string into an ASCII value:"
msgstr ""

#: ./docs/10.x/helpers.md:1150
#: ./docs/11.x/helpers.md:1195
#: ./docs/master/helpers.md:1165
msgctxt "H4"
msgid "`Number::clamp()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1151
#: ./docs/9.x/helpers.md:1327
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::ascii('û');\n\n"
"// 'u'"
msgstr ""

#: ./docs/10.x/helpers.md:1152
#: ./docs/11.x/helpers.md:1197
#: ./docs/master/helpers.md:1167
msgctxt "P"
msgid "The `Number::clamp` method ensures a given number stays within a specified range. If the number is lower than the minimum, the minimum value is returned. If the number is higher than the maximum, the maximum value is returned:"
msgstr ""

#: ./docs/10.x/helpers.md:1154
#: ./docs/11.x/helpers.md:1199
#: ./docs/master/helpers.md:1169
msgctxt "CODE"
msgid "use Illuminate\\Support\\Number;\n\n"
"$number = Number::clamp(105, min: 10, max: 100);\n\n"
"// 100\n\n"
"$number = Number::clamp(5, min: 10, max: 100);\n\n"
"// 10\n\n"
"$number = Number::clamp(10, min: 10, max: 100);\n\n"
"// 10\n\n"
"$number = Number::clamp(20, min: 10, max: 100);\n\n"
"// 20"
msgstr ""

#: ./docs/8.x/helpers.md:1157
#: ./docs/9.x/helpers.md:1333
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-before\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1158
#: ./docs/9.x/helpers.md:1334
msgctxt "H4"
msgid "`Str::before()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1160
#: ./docs/9.x/helpers.md:1336
msgctxt "P"
msgid "The `Str::before` method returns everything before the given value in a string:"
msgstr ""

#: ./docs/8.x/helpers.md:1162
#: ./docs/9.x/helpers.md:1338
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::before('This is my name', 'my name');\n\n"
"// 'This is '"
msgstr ""

#: ./docs/8.x/helpers.md:1168
#: ./docs/9.x/helpers.md:1344
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-before-last\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1169
#: ./docs/9.x/helpers.md:1345
msgctxt "H4"
msgid "`Str::beforeLast()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1171
#: ./docs/9.x/helpers.md:1347
msgctxt "P"
msgid "The `Str::beforeLast` method returns everything before the last occurrence of the given value in a string:"
msgstr ""

#: ./docs/10.x/helpers.md:1172
#: ./docs/11.x/helpers.md:1217
#: ./docs/master/helpers.md:1187
#~ msgctxt "P"
#~ msgid "<a name=\"method-number-currency\"></a>"
#~ msgstr ""

#: ./docs/10.x/helpers.md:1173
#: ./docs/11.x/helpers.md:1218
#: ./docs/master/helpers.md:1188
msgctxt "H4"
msgid "`Number::currency()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1173
#: ./docs/9.x/helpers.md:1349
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::beforeLast('This is my name', 'is');\n\n"
"// 'This '"
msgstr ""

#: ./docs/10.x/helpers.md:1175
#: ./docs/11.x/helpers.md:1220
#: ./docs/master/helpers.md:1190
msgctxt "P"
msgid "The `Number::currency` method returns the currency representation of the given value as a string:"
msgstr ""

#: ./docs/10.x/helpers.md:1177
#: ./docs/master/helpers.md:1192
msgctxt "CODE"
msgid "use Illuminate\\Support\\Number;\n\n"
"$currency = Number::currency(1000);\n\n"
"// $1,000\n\n"
"$currency = Number::currency(1000, in: 'EUR');\n\n"
"// €1,000\n\n"
"$currency = Number::currency(1000, in: 'EUR', locale: 'de');\n\n"
"// 1.000 €"
msgstr ""

#: ./docs/8.x/helpers.md:1179
#: ./docs/9.x/helpers.md:1355
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-between\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1180
#: ./docs/9.x/helpers.md:1356
msgctxt "H4"
msgid "`Str::between()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1182
#: ./docs/9.x/helpers.md:1358
msgctxt "P"
msgid "The `Str::between` method returns the portion of a string between two values:"
msgstr ""

#: ./docs/8.x/helpers.md:1184
#: ./docs/9.x/helpers.md:1360
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::between('This is my name', 'This', 'name');\n\n"
"// ' is my '"
msgstr ""

#: ./docs/8.x/helpers.md:1190
#: ./docs/9.x/helpers.md:1377
#~ msgctxt "P"
#~ msgid "<a name=\"method-camel-case\"></a>"
#~ msgstr ""

#: ./docs/10.x/helpers.md:1191
#: ./docs/11.x/helpers.md:1258
#: ./docs/master/helpers.md:1206
#~ msgctxt "P"
#~ msgid "<a name=\"method-number-file-size\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1191
#: ./docs/9.x/helpers.md:1378
msgctxt "H4"
msgid "`Str::camel()` {.collection-method}"
msgstr ""

#: ./docs/10.x/helpers.md:1192
#: ./docs/11.x/helpers.md:1259
#: ./docs/master/helpers.md:1207
msgctxt "H4"
msgid "`Number::fileSize()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1193
#: ./docs/9.x/helpers.md:1380
msgctxt "P"
msgid "The `Str::camel` method converts the given string to `camelCase`:"
msgstr ""

#: ./docs/10.x/helpers.md:1194
#: ./docs/11.x/helpers.md:1261
#: ./docs/master/helpers.md:1209
msgctxt "P"
msgid "The `Number::fileSize` method returns the file size representation of the given byte value as a string:"
msgstr ""

#: ./docs/8.x/helpers.md:1195
#: ./docs/9.x/helpers.md:1382
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::camel('foo_bar');\n\n"
"// fooBar"
msgstr ""

#: ./docs/10.x/helpers.md:1196
#: ./docs/11.x/helpers.md:1263
#: ./docs/master/helpers.md:1211
msgctxt "CODE"
msgid "use Illuminate\\Support\\Number;\n\n"
"$size = Number::fileSize(1024);\n\n"
"// 1 KB\n\n"
"$size = Number::fileSize(1024 * 1024);\n\n"
"// 1 MB\n\n"
"$size = Number::fileSize(1024, precision: 2);\n\n"
"// 1.00 KB"
msgstr ""

#: ./docs/8.x/helpers.md:1201
#: ./docs/9.x/helpers.md:1388
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-contains\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1202
#: ./docs/9.x/helpers.md:1389
msgctxt "H4"
msgid "`Str::contains()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1204
#: ./docs/9.x/helpers.md:1391
msgctxt "P"
msgid "The `Str::contains` method determines if the given string contains the given value. This method is case sensitive:"
msgstr ""

#: ./docs/8.x/helpers.md:1206
#: ./docs/9.x/helpers.md:1393
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$contains = Str::contains('This is my name', 'my');\n\n"
"// true"
msgstr ""

#: ./docs/10.x/helpers.md:1210
#: ./docs/11.x/helpers.md:1277
#: ./docs/master/helpers.md:1225
#~ msgctxt "P"
#~ msgid "<a name=\"method-number-for-humans\"></a>"
#~ msgstr ""

#: ./docs/10.x/helpers.md:1211
#: ./docs/11.x/helpers.md:1278
#: ./docs/master/helpers.md:1226
msgctxt "H4"
msgid "`Number::forHumans()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1212
#: ./docs/8.x/helpers.md:1941
#: ./docs/8.x/helpers.md:2680
#: ./docs/9.x/helpers.md:1399
#: ./docs/9.x/helpers.md:2294
#: ./docs/9.x/helpers.md:3184
msgctxt "P"
msgid "You may also pass an array of values to determine if the given string contains any of the values in the array:"
msgstr ""

#: ./docs/10.x/helpers.md:1213
#: ./docs/11.x/helpers.md:1280
#: ./docs/master/helpers.md:1228
msgctxt "P"
msgid "The `Number::forHumans` method returns the human-readable format of the provided numerical value:"
msgstr ""

#: ./docs/8.x/helpers.md:1214
#: ./docs/9.x/helpers.md:1401
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$contains = Str::contains('This is my name', ['my', 'foo']);\n\n"
"// true"
msgstr ""

#: ./docs/9.x/helpers.md:1214
#: ./docs/10.x/helpers.md:1395
#: ./docs/11.x/helpers.md:1519
#: ./docs/master/helpers.md:1410
#~ msgctxt "P"
#~ msgid "<a name=\"method-lang-path\"></a>"
#~ msgstr ""

#: ./docs/10.x/helpers.md:1215
#: ./docs/11.x/helpers.md:1282
#: ./docs/master/helpers.md:1230
msgctxt "CODE"
msgid "use Illuminate\\Support\\Number;\n\n"
"$number = Number::forHumans(1000);\n\n"
"// 1 thousand\n\n"
"$number = Number::forHumans(489939);\n\n"
"// 490 thousand\n\n"
"$number = Number::forHumans(1230000, precision: 2);\n\n"
"// 1.23 million"
msgstr ""

#: ./docs/9.x/helpers.md:1215
#: ./docs/10.x/helpers.md:1396
#: ./docs/11.x/helpers.md:1520
#: ./docs/master/helpers.md:1411
msgctxt "H4"
msgid "`lang_path()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:1217
#: ./docs/10.x/helpers.md:1398
#: ./docs/11.x/helpers.md:1522
#: ./docs/master/helpers.md:1413
msgctxt "P"
msgid "The `lang_path` function returns the fully qualified path to your application's `lang` directory. You may also use the `lang_path` function to generate a fully qualified path to a given file within the directory:"
msgstr ""

#: ./docs/9.x/helpers.md:1219
#: ./docs/10.x/helpers.md:1400
#: ./docs/11.x/helpers.md:1524
#: ./docs/master/helpers.md:1415
msgctxt "CODE"
msgid "$path = lang_path();\n\n"
"$path = lang_path('en/messages.php');"
msgstr ""

#: ./docs/8.x/helpers.md:1220
#: ./docs/9.x/helpers.md:1407
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-contains-all\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1221
#: ./docs/9.x/helpers.md:1408
msgctxt "H4"
msgid "`Str::containsAll()` {.collection-method}"
msgstr ""

#: ./docs/11.x/helpers.md:1222
msgctxt "CODE"
msgid "use Illuminate\\Support\\Number;\n\n"
"$currency = Number::currency(1000);\n\n"
"// $1,000.00\n\n"
"$currency = Number::currency(1000, in: 'EUR');\n\n"
"// €1,000.00\n\n"
"$currency = Number::currency(1000, in: 'EUR', locale: 'de');\n\n"
"// 1.000,00 €"
msgstr ""

#: ./docs/8.x/helpers.md:1223
#: ./docs/9.x/helpers.md:1410
msgctxt "P"
msgid "The `Str::containsAll` method determines if the given string contains all of the values in a given array:"
msgstr ""

#: ./docs/8.x/helpers.md:1225
#: ./docs/9.x/helpers.md:1412
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$containsAll = Str::containsAll('This is my name', ['my', 'name']);\n\n"
"// true"
msgstr ""

#: ./docs/10.x/helpers.md:1229
#: ./docs/11.x/helpers.md:1296
#: ./docs/master/helpers.md:1244
#~ msgctxt "P"
#~ msgid "<a name=\"method-number-format\"></a>"
#~ msgstr ""

#: ./docs/10.x/helpers.md:1230
#: ./docs/11.x/helpers.md:1297
#: ./docs/master/helpers.md:1245
msgctxt "H4"
msgid "`Number::format()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1231
#: ./docs/9.x/helpers.md:1418
#~ msgctxt "P"
#~ msgid "<a name=\"method-ends-with\"></a>"
#~ msgstr ""

#: ./docs/10.x/helpers.md:1232
#: ./docs/11.x/helpers.md:1299
#: ./docs/master/helpers.md:1247
msgctxt "P"
msgid "The `Number::format` method formats the given number into a locale specific string:"
msgstr ""

#: ./docs/8.x/helpers.md:1232
#: ./docs/9.x/helpers.md:1419
msgctxt "H4"
msgid "`Str::endsWith()` {.collection-method}"
msgstr ""

#: ./docs/10.x/helpers.md:1234
#: ./docs/11.x/helpers.md:1301
#: ./docs/master/helpers.md:1249
msgctxt "CODE"
msgid "use Illuminate\\Support\\Number;\n\n"
"$number = Number::format(100000);\n\n"
"// 100,000\n\n"
"$number = Number::format(100000, precision: 2);\n\n"
"// 100,000.00\n\n"
"$number = Number::format(100000.123, maxPrecision: 2);\n\n"
"// 100,000.12\n\n"
"$number = Number::format(100000, locale: 'de');\n\n"
"// 100.000"
msgstr ""

#: ./docs/8.x/helpers.md:1234
#: ./docs/9.x/helpers.md:1421
msgctxt "P"
msgid "The `Str::endsWith` method determines if the given string ends with the given value:"
msgstr ""

#: ./docs/11.x/helpers.md:1236
#~ msgctxt "P"
#~ msgid "<a name=\"method-default-currency\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1236
#: ./docs/9.x/helpers.md:1423
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::endsWith('This is my name', 'name');\n\n"
"// true"
msgstr ""

#: ./docs/11.x/helpers.md:1237
msgctxt "H4"
msgid "`Number::defaultCurrency()` {.collection-method}"
msgstr ""

#: ./docs/11.x/helpers.md:1239
msgctxt "P"
msgid "The `Number::defaultCurrency` method returns the default currency being used by the `Number` class:"
msgstr ""

#: ./docs/11.x/helpers.md:1241
msgctxt "CODE"
msgid "use Illuminate\\Support\\Number;\n\n"
"$currency = Number::defaultCurrency();\n\n"
"// USD"
msgstr ""

#: ./docs/8.x/helpers.md:1243
#: ./docs/8.x/helpers.md:1990
#: ./docs/9.x/helpers.md:1430
#: ./docs/9.x/helpers.md:2369
msgctxt "P"
msgid "You may also pass an array of values to determine if the given string ends with any of the values in the array:"
msgstr ""

#: ./docs/8.x/helpers.md:1245
#: ./docs/9.x/helpers.md:1432
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::endsWith('This is my name', ['name', 'foo']);\n\n"
"// true\n\n"
"$result = Str::endsWith('This is my name', ['this', 'foo']);\n\n"
"// false"
msgstr ""

#: ./docs/11.x/helpers.md:1247
#~ msgctxt "P"
#~ msgid "<a name=\"method-default-locale\"></a>"
#~ msgstr ""

#: ./docs/11.x/helpers.md:1248
msgctxt "H4"
msgid "`Number::defaultLocale()` {.collection-method}"
msgstr ""

#: ./docs/11.x/helpers.md:1250
msgctxt "P"
msgid "The `Number::defaultLocale` method returns the default locale being used by the `Number` class:"
msgstr ""

#: ./docs/10.x/helpers.md:1252
#: ./docs/11.x/helpers.md:1319
#: ./docs/master/helpers.md:1267
#~ msgctxt "P"
#~ msgid "<a name=\"method-number-ordinal\"></a>"
#~ msgstr ""

#: ./docs/11.x/helpers.md:1252
msgctxt "CODE"
msgid "use Illuminate\\Support\\Number;\n\n"
"$locale = Number::defaultLocale();\n\n"
"// en"
msgstr ""

#: ./docs/10.x/helpers.md:1253
#: ./docs/11.x/helpers.md:1320
#: ./docs/master/helpers.md:1268
msgctxt "H4"
msgid "`Number::ordinal()` {.collection-method}"
msgstr ""

#: ./docs/10.x/helpers.md:1255
#: ./docs/11.x/helpers.md:1322
#: ./docs/master/helpers.md:1270
msgctxt "P"
msgid "The `Number::ordinal` method returns a number's ordinal representation:"
msgstr ""

#: ./docs/8.x/helpers.md:1255
#: ./docs/9.x/helpers.md:1468
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-finish\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1256
#: ./docs/9.x/helpers.md:1469
msgctxt "H4"
msgid "`Str::finish()` {.collection-method}"
msgstr ""

#: ./docs/10.x/helpers.md:1257
#: ./docs/11.x/helpers.md:1324
#: ./docs/master/helpers.md:1272
msgctxt "CODE"
msgid "use Illuminate\\Support\\Number;\n\n"
"$number = Number::ordinal(1);\n\n"
"// 1st\n\n"
"$number = Number::ordinal(2);\n\n"
"// 2nd\n\n"
"$number = Number::ordinal(21);\n\n"
"// 21st"
msgstr ""

#: ./docs/8.x/helpers.md:1258
#: ./docs/9.x/helpers.md:1471
msgctxt "P"
msgid "The `Str::finish` method adds a single instance of the given value to a string if it does not already end with that value:"
msgstr ""

#: ./docs/8.x/helpers.md:1260
#: ./docs/9.x/helpers.md:1473
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$adjusted = Str::finish('this/string', '/');\n\n"
"// this/string/\n\n"
"$adjusted = Str::finish('this/string/', '/');\n\n"
"// this/string/"
msgstr ""

#: ./docs/8.x/helpers.md:1270
#: ./docs/9.x/helpers.md:1483
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-headline\"></a>"
#~ msgstr ""

#: ./docs/10.x/helpers.md:1271
#: ./docs/11.x/helpers.md:1355
#: ./docs/master/helpers.md:1286
#~ msgctxt "P"
#~ msgid "<a name=\"method-number-percentage\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1271
#: ./docs/9.x/helpers.md:1484
msgctxt "H4"
msgid "`Str::headline()` {.collection-method}"
msgstr ""

#: ./docs/10.x/helpers.md:1272
#: ./docs/11.x/helpers.md:1356
#: ./docs/master/helpers.md:1287
msgctxt "H4"
msgid "`Number::percentage()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1273
#: ./docs/9.x/helpers.md:1486
msgctxt "P"
msgid "The `Str::headline` method will convert strings delimited by casing, hyphens, or underscores into a space delimited string with each word's first letter capitalized:"
msgstr ""

#: ./docs/10.x/helpers.md:1274
#: ./docs/11.x/helpers.md:1358
#: ./docs/master/helpers.md:1289
msgctxt "P"
msgid "The `Number::percentage` method returns the percentage representation of the given value as a string:"
msgstr ""

#: ./docs/8.x/helpers.md:1275
#: ./docs/9.x/helpers.md:1488
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$headline = Str::headline('steve_jobs');\n\n"
"// Steve Jobs\n\n"
"$headline = Str::headline('EmailNotificationSent');\n\n"
"// Email Notification Sent"
msgstr ""

#: ./docs/10.x/helpers.md:1276
#: ./docs/11.x/helpers.md:1360
#: ./docs/master/helpers.md:1291
msgctxt "CODE"
msgid "use Illuminate\\Support\\Number;\n\n"
"$percentage = Number::percentage(10);\n\n"
"// 10%\n\n"
"$percentage = Number::percentage(10, precision: 2);\n\n"
"// 10.00%\n\n"
"$percentage = Number::percentage(10.123, maxPrecision: 2);\n\n"
"// 10.12%\n\n"
"$percentage = Number::percentage(10, precision: 2, locale: 'de');\n\n"
"// 10,00%"
msgstr ""

#: ./docs/8.x/helpers.md:1285
#: ./docs/9.x/helpers.md:1509
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-is\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1286
#: ./docs/9.x/helpers.md:1510
msgctxt "H4"
msgid "`Str::is()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1288
#: ./docs/9.x/helpers.md:1512
msgctxt "P"
msgid "The `Str::is` method determines if a given string matches a given pattern. Asterisks may be used as wildcard values:"
msgstr ""

#: ./docs/8.x/helpers.md:1290
#: ./docs/9.x/helpers.md:1514
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$matches = Str::is('foo*', 'foobar');\n\n"
"// true\n\n"
"$matches = Str::is('baz*', 'foobar');\n\n"
"// false"
msgstr ""

#: ./docs/10.x/helpers.md:1294
#: ./docs/11.x/helpers.md:1378
#: ./docs/master/helpers.md:1309
#~ msgctxt "P"
#~ msgid "<a name=\"method-number-spell\"></a>"
#~ msgstr ""

#: ./docs/10.x/helpers.md:1295
#: ./docs/11.x/helpers.md:1379
#: ./docs/master/helpers.md:1310
msgctxt "H4"
msgid "`Number::spell()` {.collection-method}"
msgstr ""

#: ./docs/10.x/helpers.md:1297
#: ./docs/11.x/helpers.md:1381
#: ./docs/master/helpers.md:1312
msgctxt "P"
msgid "The `Number::spell` method transforms the given number into a string of words:"
msgstr ""

#: ./docs/10.x/helpers.md:1299
#: ./docs/11.x/helpers.md:1383
#: ./docs/master/helpers.md:1314
msgctxt "CODE"
msgid "use Illuminate\\Support\\Number;\n\n"
"$number = Number::spell(102);\n\n"
"// one hundred and two\n\n"
"$number = Number::spell(88, locale: 'fr');\n\n"
"// quatre-vingt-huit"
msgstr ""

#: ./docs/8.x/helpers.md:1300
#: ./docs/9.x/helpers.md:1524
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-is-ascii\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1301
#: ./docs/9.x/helpers.md:1525
msgctxt "H4"
msgid "`Str::isAscii()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1303
#: ./docs/9.x/helpers.md:1527
msgctxt "P"
msgid "The `Str::isAscii` method determines if a given string is 7 bit ASCII:"
msgstr ""

#: ./docs/8.x/helpers.md:1305
#: ./docs/9.x/helpers.md:1529
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$isAscii = Str::isAscii('Taylor');\n\n"
"// true\n\n"
"$isAscii = Str::isAscii('ü');\n\n"
"// false"
msgstr ""

#: ./docs/10.x/helpers.md:1310
#: ./docs/11.x/helpers.md:1393
#: ./docs/master/helpers.md:1325
msgctxt "P"
msgid "The `after` argument allows you to specify a value after which all numbers should be spelled out:"
msgstr ""

#: ./docs/10.x/helpers.md:1312
#: ./docs/11.x/helpers.md:1395
#: ./docs/master/helpers.md:1327
msgctxt "CODE"
msgid "$number = Number::spell(10, after: 10);\n\n"
"// 10\n\n"
"$number = Number::spell(11, after: 10);\n\n"
"// eleven"
msgstr ""

#: ./docs/8.x/helpers.md:1315
#: ./docs/9.x/helpers.md:1573
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-is-uuid\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1316
#: ./docs/9.x/helpers.md:1574
msgctxt "H4"
msgid "`Str::isUuid()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1318
#: ./docs/9.x/helpers.md:1576
msgctxt "P"
msgid "The `Str::isUuid` method determines if the given string is a valid UUID:"
msgstr ""

#: ./docs/10.x/helpers.md:1320
#: ./docs/11.x/helpers.md:1403
#: ./docs/master/helpers.md:1335
msgctxt "P"
msgid "The `until` argument allows you to specify a value before which all numbers should be spelled out:"
msgstr ""

#: ./docs/8.x/helpers.md:1320
#: ./docs/9.x/helpers.md:1578
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$isUuid = Str::isUuid('a0a2a2d2-0b87-4a18-83f2-2529882be2de');\n\n"
"// true\n\n"
"$isUuid = Str::isUuid('laravel');\n\n"
"// false"
msgstr ""

#: ./docs/10.x/helpers.md:1322
#: ./docs/11.x/helpers.md:1405
#: ./docs/master/helpers.md:1337
msgctxt "CODE"
msgid "$number = Number::spell(5, until: 10);\n\n"
"// five\n\n"
"$number = Number::spell(10, until: 10);\n\n"
"// 10"
msgstr ""

#: ./docs/10.x/helpers.md:1330
#: ./docs/11.x/helpers.md:1428
#: ./docs/master/helpers.md:1345
#~ msgctxt "P"
#~ msgid "<a name=\"method-number-use-locale\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1330
#: ./docs/9.x/helpers.md:1588
#~ msgctxt "P"
#~ msgid "<a name=\"method-kebab-case\"></a>"
#~ msgstr ""

#: ./docs/10.x/helpers.md:1331
#: ./docs/11.x/helpers.md:1429
#: ./docs/master/helpers.md:1346
msgctxt "H4"
msgid "`Number::useLocale()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1331
#: ./docs/9.x/helpers.md:1589
msgctxt "H4"
msgid "`Str::kebab()` {.collection-method}"
msgstr ""

#: ./docs/10.x/helpers.md:1333
#: ./docs/11.x/helpers.md:1431
#: ./docs/master/helpers.md:1348
msgctxt "P"
msgid "The `Number::useLocale` method sets the default number locale globally, which affects how numbers and currency are formatted by subsequent invocations to the `Number` class's methods:"
msgstr ""

#: ./docs/8.x/helpers.md:1333
#: ./docs/9.x/helpers.md:1591
msgctxt "P"
msgid "The `Str::kebab` method converts the given string to `kebab-case`:"
msgstr ""

#: ./docs/10.x/helpers.md:1335
#: ./docs/11.x/helpers.md:1433
#: ./docs/master/helpers.md:1350
msgctxt "CODE"
msgid "use Illuminate\\Support\\Number;\n\n"
"/**\n"
" * Bootstrap any application services.\n"
" */\n"
"public function boot(): void\n"
"{\n"
"    Number::useLocale('de');\n"
"}"
msgstr ""

#: ./docs/8.x/helpers.md:1335
#: ./docs/9.x/helpers.md:1593
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::kebab('fooBar');\n\n"
"// foo-bar"
msgstr ""

#: ./docs/11.x/helpers.md:1338
#~ msgctxt "P"
#~ msgid "<a name=\"method-number-pairs\"></a>"
#~ msgstr ""

#: ./docs/11.x/helpers.md:1339
msgctxt "H4"
msgid "`Number::pairs()` {.collection-method}"
msgstr ""

#: ./docs/11.x/helpers.md:1341
msgctxt "P"
msgid "The `Number::pairs` method generates an array of number pairs (sub-ranges) based on a specified range and step value. This method can be useful for dividing a larger range of numbers into smaller, manageable sub-ranges for things like pagination or batching tasks. The `pairs` method returns an array of arrays, where each inner array represents a pair (sub-range) of numbers:"
msgstr ""

#: ./docs/8.x/helpers.md:1341
#: ./docs/9.x/helpers.md:1610
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-length\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1342
#: ./docs/9.x/helpers.md:1611
msgctxt "H4"
msgid "`Str::length()` {.collection-method}"
msgstr ""

#: ./docs/11.x/helpers.md:1343
msgctxt "CODE: php"
msgid "use Illuminate\\Support\\Number;\n\n"
"$result = Number::pairs(25, 10);\n\n"
"// [[1, 10], [11, 20], [21, 25]]\n\n"
"$result = Number::pairs(25, 10, offset: 0);\n\n"
"// [[0, 10], [10, 20], [20, 25]]"
msgstr ""

#: ./docs/8.x/helpers.md:1344
#: ./docs/9.x/helpers.md:1613
msgctxt "P"
msgid "The `Str::length` method returns the length of the given string:"
msgstr ""

#: ./docs/10.x/helpers.md:1345
#: ./docs/11.x/helpers.md:1443
#: ./docs/master/helpers.md:1360
#~ msgctxt "P"
#~ msgid "<a name=\"method-number-with-locale\"></a>"
#~ msgstr ""

#: ./docs/10.x/helpers.md:1346
#: ./docs/11.x/helpers.md:1444
#: ./docs/master/helpers.md:1361
msgctxt "H4"
msgid "`Number::withLocale()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1346
#: ./docs/9.x/helpers.md:1615
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$length = Str::length('Laravel');\n\n"
"// 7"
msgstr ""

#: ./docs/10.x/helpers.md:1348
#: ./docs/11.x/helpers.md:1446
#: ./docs/master/helpers.md:1363
msgctxt "P"
msgid "The `Number::withLocale` method executes the given closure using the specified locale and then restores the original locale after the callback has executed:"
msgstr ""

#: ./docs/10.x/helpers.md:1350
#: ./docs/11.x/helpers.md:1448
#: ./docs/master/helpers.md:1365
msgctxt "CODE"
msgid "use Illuminate\\Support\\Number;\n\n"
"$number = Number::withLocale('de', function () {\n"
"    return Number::format(1500);\n"
"});"
msgstr ""

#: ./docs/8.x/helpers.md:1352
#: ./docs/9.x/helpers.md:1621
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-limit\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1353
#: ./docs/9.x/helpers.md:1622
msgctxt "H4"
msgid "`Str::limit()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1355
#: ./docs/9.x/helpers.md:1624
msgctxt "P"
msgid "The `Str::limit` method truncates the given string to the specified length:"
msgstr ""

#: ./docs/8.x/helpers.md:1357
#: ./docs/9.x/helpers.md:1626
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$truncated = Str::limit('The quick brown fox jumps over the lazy dog', 20);\n\n"
"// The quick brown fox..."
msgstr ""

#: ./docs/8.x/helpers.md:1363
#: ./docs/9.x/helpers.md:1632
msgctxt "P"
msgid "You may pass a third argument to the method to change the string that will be appended to the end of the truncated string:"
msgstr ""

#: ./docs/8.x/helpers.md:1365
#: ./docs/9.x/helpers.md:1634
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$truncated = Str::limit('The quick brown fox jumps over the lazy dog', 20, ' (...)');\n\n"
"// The quick brown fox (...)"
msgstr ""

#: ./docs/9.x/helpers.md:1366
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-between-first\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:1367
msgctxt "H4"
msgid "`Str::betweenFirst()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:1369
msgctxt "P"
msgid "The `Str::betweenFirst` method returns the smallest possible portion of a string between two values:"
msgstr ""

#: ./docs/8.x/helpers.md:1371
#: ./docs/9.x/helpers.md:1640
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-lower\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:1371
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::betweenFirst('[a] bc [d]', '[', ']');\n\n"
"// 'a'"
msgstr ""

#: ./docs/8.x/helpers.md:1372
#: ./docs/9.x/helpers.md:1641
msgctxt "H4"
msgid "`Str::lower()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1374
#: ./docs/9.x/helpers.md:1643
msgctxt "P"
msgid "The `Str::lower` method converts the given string to lowercase:"
msgstr ""

#: ./docs/8.x/helpers.md:1376
#: ./docs/9.x/helpers.md:1645
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::lower('LARAVEL');\n\n"
"// laravel"
msgstr ""

#: ./docs/8.x/helpers.md:1382
#: ./docs/9.x/helpers.md:1651
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-markdown\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1383
#: ./docs/9.x/helpers.md:1652
msgctxt "H4"
msgid "`Str::markdown()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1385
msgctxt "P"
msgid "The `Str::markdown` method converts GitHub flavored Markdown into HTML:"
msgstr ""

#: ./docs/8.x/helpers.md:1387
#: ./docs/9.x/helpers.md:1656
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$html = Str::markdown('# Laravel');\n\n"
"// <h1>Laravel</h1>\n\n"
"$html = Str::markdown('# Taylor <b>Otwell</b>', [\n"
"    'html_input' => 'strip',\n"
"]);\n\n"
"// <h1>Taylor Otwell</h1>"
msgstr ""

#: ./docs/8.x/helpers.md:1399
#: ./docs/9.x/helpers.md:1668
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-mask\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1400
#: ./docs/9.x/helpers.md:1669
msgctxt "H4"
msgid "`Str::mask()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1402
#: ./docs/9.x/helpers.md:1671
msgctxt "P"
msgid "The `Str::mask` method masks a portion of a string with a repeated character, and may be used to obfuscate segments of strings such as email addresses and phone numbers:"
msgstr ""

#: ./docs/8.x/helpers.md:1404
#: ./docs/9.x/helpers.md:1673
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::mask('taylor@example.com', '*', 3);\n\n"
"// tay***************"
msgstr ""

#: ./docs/10.x/helpers.md:1405
#: ./docs/11.x/helpers.md:1529
#: ./docs/master/helpers.md:1420
msgctxt "P"
msgid "By default, the Laravel application skeleton does not include the `lang` directory. If you would like to customize Laravel's language files, you may publish them via the `lang:publish` Artisan command."
msgstr ""

#: ./docs/8.x/helpers.md:1410
#: ./docs/8.x/helpers.md:2210
#: ./docs/9.x/helpers.md:1679
msgctxt "P"
msgid "If needed, you provide a negative number as the third argument to the `mask` method, which will instruct the method to begin masking at the given distance from the end of the string:"
msgstr ""

#: ./docs/8.x/helpers.md:1412
#: ./docs/9.x/helpers.md:1681
msgctxt "CODE"
msgid "$string = Str::mask('taylor@example.com', '*', -15, 3);\n\n"
"// tay***@example.com"
msgstr ""

#: ./docs/11.x/helpers.md:1413
#~ msgctxt "P"
#~ msgid "<a name=\"method-number-trim\"></a>"
#~ msgstr ""

#: ./docs/11.x/helpers.md:1414
msgctxt "H4"
msgid "`Number::trim()` {.collection-method}"
msgstr ""

#: ./docs/11.x/helpers.md:1416
msgctxt "P"
msgid "The `Number::trim` method removes any trailing zero digits after the decimal point of the given number:"
msgstr ""

#: ./docs/8.x/helpers.md:1416
#: ./docs/9.x/helpers.md:1685
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-ordered-uuid\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1417
#: ./docs/9.x/helpers.md:1686
msgctxt "H4"
msgid "`Str::orderedUuid()` {.collection-method}"
msgstr ""

#: ./docs/11.x/helpers.md:1418
msgctxt "CODE"
msgid "use Illuminate\\Support\\Number;\n\n"
"$number = Number::trim(12.0);\n\n"
"// 12\n\n"
"$number = Number::trim(12.30);\n\n"
"// 12.3"
msgstr ""

#: ./docs/8.x/helpers.md:1419
#: ./docs/9.x/helpers.md:1688
msgctxt "P"
msgid "The `Str::orderedUuid` method generates a \"timestamp first\" UUID that may be efficiently stored in an indexed database column. Each UUID that is generated using this method will be sorted after UUIDs previously generated using the method:"
msgstr ""

#: ./docs/8.x/helpers.md:1421
#: ./docs/9.x/helpers.md:1690
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"return (string) Str::orderedUuid();"
msgstr ""

#: ./docs/8.x/helpers.md:1425
#: ./docs/9.x/helpers.md:1694
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-padboth\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1426
#: ./docs/9.x/helpers.md:1695
msgctxt "H4"
msgid "`Str::padBoth()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1428
#: ./docs/9.x/helpers.md:1697
msgctxt "P"
msgid "The `Str::padBoth` method wraps PHP's `str_pad` function, padding both sides of a string with another string until the final string reaches a desired length:"
msgstr ""

#: ./docs/8.x/helpers.md:1430
#: ./docs/9.x/helpers.md:1699
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$padded = Str::padBoth('James', 10, '_');\n\n"
"// '__James___'\n\n"
"$padded = Str::padBoth('James', 10);\n\n"
"// '  James   '"
msgstr ""

#: ./docs/8.x/helpers.md:1440
#: ./docs/9.x/helpers.md:1709
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-padleft\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1441
#: ./docs/9.x/helpers.md:1710
msgctxt "H4"
msgid "`Str::padLeft()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:1442
#~ msgctxt "P"
#~ msgid "<a name=\"method-excerpt\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1443
#: ./docs/9.x/helpers.md:1712
msgctxt "P"
msgid "The `Str::padLeft` method wraps PHP's `str_pad` function, padding the left side of a string with another string until the final string reaches a desired length:"
msgstr ""

#: ./docs/9.x/helpers.md:1443
msgctxt "H4"
msgid "`Str::excerpt()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1445
#: ./docs/9.x/helpers.md:1714
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$padded = Str::padLeft('James', 10, '-=');\n\n"
"// '-=-=-James'\n\n"
"$padded = Str::padLeft('James', 10);\n\n"
"// '     James'"
msgstr ""

#: ./docs/9.x/helpers.md:1445
msgctxt "P"
msgid "The `Str::excerpt` method extracts an excerpt from a given string that matches the first instance of a phrase within that string:"
msgstr ""

#: ./docs/9.x/helpers.md:1447
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$excerpt = Str::excerpt('This is my name', 'my', [\n"
"    'radius' => 3\n"
"]);\n\n"
"// '...is my na...'"
msgstr ""

#: ./docs/11.x/helpers.md:1454
#~ msgctxt "P"
#~ msgid "<a name=\"method-number-use-currency\"></a>"
#~ msgstr ""

#: ./docs/11.x/helpers.md:1455
msgctxt "H4"
msgid "`Number::useCurrency()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1455
#: ./docs/9.x/helpers.md:1724
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-padright\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:1455
#: ./docs/9.x/helpers.md:2345
msgctxt "P"
msgid "The `radius` option, which defaults to `100`, allows you to define the number of characters that should appear on each side of the truncated string."
msgstr ""

#: ./docs/8.x/helpers.md:1456
#: ./docs/9.x/helpers.md:1725
msgctxt "H4"
msgid "`Str::padRight()` {.collection-method}"
msgstr ""

#: ./docs/11.x/helpers.md:1457
msgctxt "P"
msgid "The `Number::useCurrency` method sets the default number currency globally, which affects how the currency is formatted by subsequent invocations to the `Number` class's methods:"
msgstr ""

#: ./docs/9.x/helpers.md:1457
msgctxt "P"
msgid "In addition, you may use the `omission` option to define the string that will be prepended and appended to the truncated string:"
msgstr ""

#: ./docs/8.x/helpers.md:1458
#: ./docs/9.x/helpers.md:1727
msgctxt "P"
msgid "The `Str::padRight` method wraps PHP's `str_pad` function, padding the right side of a string with another string until the final string reaches a desired length:"
msgstr ""

#: ./docs/11.x/helpers.md:1459
msgctxt "CODE"
msgid "use Illuminate\\Support\\Number;\n\n"
"/**\n"
" * Bootstrap any application services.\n"
" */\n"
"public function boot(): void\n"
"{\n"
"    Number::useCurrency('GBP');\n"
"}"
msgstr ""

#: ./docs/9.x/helpers.md:1459
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$excerpt = Str::excerpt('This is my name', 'name', [\n"
"    'radius' => 3,\n"
"    'omission' => '(...) '\n"
"]);\n\n"
"// '(...) my name'"
msgstr ""

#: ./docs/8.x/helpers.md:1460
#: ./docs/9.x/helpers.md:1729
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$padded = Str::padRight('James', 10, '-');\n\n"
"// 'James-----'\n\n"
"$padded = Str::padRight('James', 10);\n\n"
"// 'James     '"
msgstr ""

#: ./docs/11.x/helpers.md:1469
#~ msgctxt "P"
#~ msgid "<a name=\"method-number-with-currency\"></a>"
#~ msgstr ""

#: ./docs/11.x/helpers.md:1470
msgctxt "H4"
msgid "`Number::withCurrency()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1470
#: ./docs/9.x/helpers.md:1739
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-plural\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1471
#: ./docs/9.x/helpers.md:1740
msgctxt "H4"
msgid "`Str::plural()` {.collection-method}"
msgstr ""

#: ./docs/11.x/helpers.md:1472
msgctxt "P"
msgid "The `Number::withCurrency` method executes the given closure using the specified currency and then restores the original currency after the callback has executed:"
msgstr ""

#: ./docs/8.x/helpers.md:1473
msgctxt "P"
msgid "The `Str::plural` method converts a singular word string to its plural form. This function currently only supports the English language:"
msgstr ""

#: ./docs/11.x/helpers.md:1474
msgctxt "CODE"
msgid "use Illuminate\\Support\\Number;\n\n"
"$number = Number::withCurrency('GBP', function () {\n"
"    // ...\n"
"});"
msgstr ""

#: ./docs/8.x/helpers.md:1475
#: ./docs/9.x/helpers.md:1744
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$plural = Str::plural('car');\n\n"
"// cars\n\n"
"$plural = Str::plural('child');\n\n"
"// children"
msgstr ""

#: ./docs/8.x/helpers.md:1485
#: ./docs/8.x/helpers.md:1512
#: ./docs/8.x/helpers.md:2329
#: ./docs/9.x/helpers.md:1754
#: ./docs/9.x/helpers.md:1781
#: ./docs/9.x/helpers.md:2796
msgctxt "P"
msgid "You may provide an integer as a second argument to the function to retrieve the singular or plural form of the string:"
msgstr ""

#: ./docs/8.x/helpers.md:1487
#: ./docs/9.x/helpers.md:1756
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$plural = Str::plural('child', 2);\n\n"
"// children\n\n"
"$singular = Str::plural('child', 1);\n\n"
"// child"
msgstr ""

#: ./docs/8.x/helpers.md:1497
#: ./docs/9.x/helpers.md:1766
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-plural-studly\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1498
#: ./docs/9.x/helpers.md:1767
msgctxt "H4"
msgid "`Str::pluralStudly()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:1498
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-inline-markdown\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:1499
msgctxt "H4"
msgid "`Str::inlineMarkdown()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1500
msgctxt "P"
msgid "The `Str::pluralStudly` method converts a singular word string formatted in studly caps case to its plural form. This function currently only supports the English language:"
msgstr ""

#: ./docs/9.x/helpers.md:1501
msgctxt "P"
msgid "The `Str::inlineMarkdown` method converts GitHub flavored Markdown into inline HTML using [CommonMark](https://commonmark.thephpleague.com/). However, unlike the `markdown` method, it does not wrap all generated HTML in a block-level element:"
msgstr ""

#: ./docs/8.x/helpers.md:1502
#: ./docs/9.x/helpers.md:1771
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$plural = Str::pluralStudly('VerifiedHuman');\n\n"
"// VerifiedHumans\n\n"
"$plural = Str::pluralStudly('UserFeedback');\n\n"
"// UserFeedback"
msgstr ""

#: ./docs/9.x/helpers.md:1503
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$html = Str::inlineMarkdown('**Laravel**');\n\n"
"// <strong>Laravel</strong>"
msgstr ""

#: ./docs/8.x/helpers.md:1514
#: ./docs/9.x/helpers.md:1783
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$plural = Str::pluralStudly('VerifiedHuman', 2);\n\n"
"// VerifiedHumans\n\n"
"$singular = Str::pluralStudly('VerifiedHuman', 1);\n\n"
"// VerifiedHuman"
msgstr ""

#: ./docs/8.x/helpers.md:1524
#: ./docs/9.x/helpers.md:1793
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-random\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1525
#: ./docs/9.x/helpers.md:1794
msgctxt "H4"
msgid "`Str::random()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1527
#: ./docs/9.x/helpers.md:1796
msgctxt "P"
msgid "The `Str::random` method generates a random string of the specified length. This function uses PHP's `random_bytes` function:"
msgstr ""

#: ./docs/8.x/helpers.md:1529
#: ./docs/9.x/helpers.md:1798
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$random = Str::random(40);"
msgstr ""

#: ./docs/8.x/helpers.md:1533
#: ./docs/9.x/helpers.md:1802
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-remove\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1534
#: ./docs/9.x/helpers.md:1803
msgctxt "H4"
msgid "`Str::remove()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1536
#: ./docs/9.x/helpers.md:1805
msgctxt "P"
msgid "The `Str::remove` method removes the given value or array of values from the string:"
msgstr ""

#: ./docs/8.x/helpers.md:1538
#: ./docs/9.x/helpers.md:1807
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = 'Peter Piper picked a peck of pickled peppers.';\n\n"
"$removed = Str::remove('e', $string);\n\n"
"// Ptr Pipr pickd a pck of pickld ppprs."
msgstr ""

#: ./docs/9.x/helpers.md:1539
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-is-json\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:1540
msgctxt "H4"
msgid "`Str::isJson()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:1542
msgctxt "P"
msgid "The `Str::isJson` method determines if the given string is valid JSON:"
msgstr ""

#: ./docs/9.x/helpers.md:1544
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::isJson('[1,2,3]');\n\n"
"// true\n\n"
"$result = Str::isJson('{\"first\": \"John\", \"last\": \"Doe\"}');\n\n"
"// true\n\n"
"$result = Str::isJson('{first: \"John\", last: \"Doe\"}');\n\n"
"// false"
msgstr ""

#: ./docs/8.x/helpers.md:1546
#: ./docs/9.x/helpers.md:1815
msgctxt "P"
msgid "You may also pass `false` as a third argument to the `remove` method to ignore case when removing strings."
msgstr ""

#: ./docs/8.x/helpers.md:1548
#: ./docs/9.x/helpers.md:1817
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-replace\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1549
#: ./docs/9.x/helpers.md:1818
msgctxt "H4"
msgid "`Str::replace()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1551
#: ./docs/9.x/helpers.md:1820
msgctxt "P"
msgid "The `Str::replace` method replaces a given string within the string:"
msgstr ""

#: ./docs/8.x/helpers.md:1553
#: ./docs/9.x/helpers.md:1822
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = 'Laravel 8.x';\n\n"
"$replaced = Str::replace('8.x', '9.x', $string);\n\n"
"// Laravel 9.x"
msgstr ""

#: ./docs/9.x/helpers.md:1558
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-is-ulid\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:1559
msgctxt "H4"
msgid "`Str::isUlid()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1561
#: ./docs/9.x/helpers.md:1830
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-replace-array\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:1561
msgctxt "P"
msgid "The `Str::isUlid` method determines if the given string is a valid ULID:"
msgstr ""

#: ./docs/8.x/helpers.md:1562
#: ./docs/9.x/helpers.md:1831
msgctxt "H4"
msgid "`Str::replaceArray()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:1563
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$isUlid = Str::isUlid('01gd6r360bp37zj17nxb55yv40');\n\n"
"// true\n\n"
"$isUlid = Str::isUlid('laravel');\n\n"
"// false"
msgstr ""

#: ./docs/8.x/helpers.md:1564
#: ./docs/9.x/helpers.md:1833
msgctxt "P"
msgid "The `Str::replaceArray` method replaces a given value in the string sequentially using an array:"
msgstr ""

#: ./docs/8.x/helpers.md:1566
#: ./docs/9.x/helpers.md:1835
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = 'The event will take place between ? and ?';\n\n"
"$replaced = Str::replaceArray('?', ['8:30', '9:00'], $string);\n\n"
"// The event will take place between 8:30 and 9:00"
msgstr ""

#: ./docs/8.x/helpers.md:1574
#: ./docs/9.x/helpers.md:1843
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-replace-first\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1575
#: ./docs/9.x/helpers.md:1844
msgctxt "H4"
msgid "`Str::replaceFirst()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1577
#: ./docs/9.x/helpers.md:1846
msgctxt "P"
msgid "The `Str::replaceFirst` method replaces the first occurrence of a given value in a string:"
msgstr ""

#: ./docs/8.x/helpers.md:1579
#: ./docs/9.x/helpers.md:1848
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$replaced = Str::replaceFirst('the', 'a', 'the quick brown fox jumps over the lazy dog');\n\n"
"// a quick brown fox jumps over the lazy dog"
msgstr ""

#: ./docs/8.x/helpers.md:1585
#: ./docs/9.x/helpers.md:1854
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-replace-last\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1586
#: ./docs/9.x/helpers.md:1855
msgctxt "H4"
msgid "`Str::replaceLast()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1588
#: ./docs/9.x/helpers.md:1857
msgctxt "P"
msgid "The `Str::replaceLast` method replaces the last occurrence of a given value in a string:"
msgstr ""

#: ./docs/8.x/helpers.md:1590
#: ./docs/9.x/helpers.md:1859
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$replaced = Str::replaceLast('the', 'a', 'the quick brown fox jumps over the lazy dog');\n\n"
"// the quick brown fox jumps over a lazy dog"
msgstr ""

#: ./docs/8.x/helpers.md:1597
#: ./docs/9.x/helpers.md:1866
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-reverse\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1598
#: ./docs/9.x/helpers.md:1867
msgctxt "H4"
msgid "`Str::reverse()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:1599
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-lcfirst\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1600
#: ./docs/9.x/helpers.md:1869
msgctxt "P"
msgid "The `Str::reverse` method reverses the given string:"
msgstr ""

#: ./docs/9.x/helpers.md:1600
msgctxt "H4"
msgid "`Str::lcfirst()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1602
#: ./docs/9.x/helpers.md:1871
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$reversed = Str::reverse('Hello World');\n\n"
"// dlroW olleH"
msgstr ""

#: ./docs/9.x/helpers.md:1602
msgctxt "P"
msgid "The `Str::lcfirst` method returns the given string with the first character lowercased:"
msgstr ""

#: ./docs/9.x/helpers.md:1604
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::lcfirst('Foo Bar');\n\n"
"// foo Bar"
msgstr ""

#: ./docs/8.x/helpers.md:1608
#: ./docs/9.x/helpers.md:1877
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-singular\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1609
#: ./docs/9.x/helpers.md:1878
msgctxt "H4"
msgid "`Str::singular()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1611
msgctxt "P"
msgid "The `Str::singular` method converts a string to its singular form. This function currently only supports the English language:"
msgstr ""

#: ./docs/8.x/helpers.md:1613
#: ./docs/9.x/helpers.md:1882
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$singular = Str::singular('cars');\n\n"
"// car\n\n"
"$singular = Str::singular('children');\n\n"
"// child"
msgstr ""

#: ./docs/8.x/helpers.md:1623
#: ./docs/9.x/helpers.md:1892
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-slug\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1624
#: ./docs/9.x/helpers.md:1893
msgctxt "H4"
msgid "`Str::slug()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1626
#: ./docs/9.x/helpers.md:1895
msgctxt "P"
msgid "The `Str::slug` method generates a URL friendly \"slug\" from the given string:"
msgstr ""

#: ./docs/8.x/helpers.md:1628
#: ./docs/9.x/helpers.md:1897
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$slug = Str::slug('Laravel 5 Framework', '-');\n\n"
"// laravel-5-framework"
msgstr ""

#: ./docs/8.x/helpers.md:1634
#: ./docs/9.x/helpers.md:1903
#~ msgctxt "P"
#~ msgid "<a name=\"method-snake-case\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1635
#: ./docs/9.x/helpers.md:1904
msgctxt "H4"
msgid "`Str::snake()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1637
#: ./docs/9.x/helpers.md:1906
msgctxt "P"
msgid "The `Str::snake` method converts the given string to `snake_case`:"
msgstr ""

#: ./docs/8.x/helpers.md:1639
#: ./docs/9.x/helpers.md:1908
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::snake('fooBar');\n\n"
"// foo_bar\n\n"
"$converted = Str::snake('fooBar', '-');\n\n"
"// foo-bar"
msgstr ""

#: ./docs/8.x/helpers.md:1649
#: ./docs/9.x/helpers.md:1929
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-start\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1650
#: ./docs/9.x/helpers.md:1930
msgctxt "H4"
msgid "`Str::start()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1652
#: ./docs/9.x/helpers.md:1932
msgctxt "P"
msgid "The `Str::start` method adds a single instance of the given value to a string if it does not already start with that value:"
msgstr ""

#: ./docs/8.x/helpers.md:1654
#: ./docs/9.x/helpers.md:1934
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$adjusted = Str::start('this/string', '/');\n\n"
"// /this/string\n\n"
"$adjusted = Str::start('/this/string', '/');\n\n"
"// /this/string"
msgstr ""

#: ./docs/9.x/helpers.md:1654
msgctxt "P"
msgid "The `Str::markdown` method converts GitHub flavored Markdown into HTML using [CommonMark](https://commonmark.thephpleague.com/):"
msgstr ""

#: ./docs/11.x/helpers.md:1659
msgctxt "P"
msgid "The `abort` function throws [an HTTP exception](/docs/{{version}}/errors#http-exceptions) which will be rendered by the [exception handler](/docs/{{version}}/errors#handling-exceptions):"
msgstr ""

#: ./docs/8.x/helpers.md:1664
#: ./docs/9.x/helpers.md:1944
#~ msgctxt "P"
#~ msgid "<a name=\"method-starts-with\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1665
#: ./docs/9.x/helpers.md:1945
msgctxt "H4"
msgid "`Str::startsWith()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1667
#: ./docs/9.x/helpers.md:1947
msgctxt "P"
msgid "The `Str::startsWith` method determines if the given string begins with the given value:"
msgstr ""

#: ./docs/8.x/helpers.md:1669
#: ./docs/9.x/helpers.md:1949
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::startsWith('This is my name', 'This');\n\n"
"// true"
msgstr ""

#: ./docs/8.x/helpers.md:1675
#: ./docs/9.x/helpers.md:1955
msgctxt "P"
msgid "If an array of possible values is passed, the `startsWith` method will return `true` if the string begins with any of the given values:"
msgstr ""

#: ./docs/8.x/helpers.md:1677
#: ./docs/9.x/helpers.md:1957
msgctxt "CODE"
msgid "$result = Str::startsWith('This is my name', ['This', 'That', 'There']);\n\n"
"// true"
msgstr ""

#: ./docs/8.x/helpers.md:1681
#: ./docs/9.x/helpers.md:1961
#~ msgctxt "P"
#~ msgid "<a name=\"method-studly-case\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1682
#: ./docs/9.x/helpers.md:1962
msgctxt "H4"
msgid "`Str::studly()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1684
#: ./docs/9.x/helpers.md:1964
msgctxt "P"
msgid "The `Str::studly` method converts the given string to `StudlyCase`:"
msgstr ""

#: ./docs/8.x/helpers.md:1686
#: ./docs/9.x/helpers.md:1966
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::studly('foo_bar');\n\n"
"// FooBar"
msgstr ""

#: ./docs/8.x/helpers.md:1692
#: ./docs/9.x/helpers.md:1972
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-substr\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1693
#: ./docs/9.x/helpers.md:1973
msgctxt "H4"
msgid "`Str::substr()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1695
#: ./docs/9.x/helpers.md:1975
msgctxt "P"
msgid "The `Str::substr` method returns the portion of string specified by the start and length parameters:"
msgstr ""

#: ./docs/8.x/helpers.md:1697
#: ./docs/9.x/helpers.md:1977
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::substr('The Laravel Framework', 4, 7);\n\n"
"// Laravel"
msgstr ""

#: ./docs/10.x/helpers.md:1701
#: ./docs/11.x/helpers.md:1840
#: ./docs/master/helpers.md:1716
msgctxt "P"
msgid "The `dd` function dumps the given variables and ends the execution of the script:"
msgstr ""

#: ./docs/8.x/helpers.md:1703
#: ./docs/9.x/helpers.md:1983
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-substrcount\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1704
#: ./docs/9.x/helpers.md:1984
msgctxt "H4"
msgid "`Str::substrCount()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1706
#: ./docs/9.x/helpers.md:1986
msgctxt "P"
msgid "The `Str::substrCount` method returns the number of occurrences of a given value in the given string:"
msgstr ""

#: ./docs/8.x/helpers.md:1708
#: ./docs/9.x/helpers.md:1988
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$count = Str::substrCount('If you like ice cream, you will like snow cones.', 'like');\n\n"
"// 2"
msgstr ""

#: ./docs/8.x/helpers.md:1714
#: ./docs/9.x/helpers.md:1994
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-substrreplace\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1715
#: ./docs/9.x/helpers.md:1995
msgctxt "H4"
msgid "`Str::substrReplace()` {.collection-method}"
msgstr ""

#: ./docs/10.x/helpers.md:1716
#: ./docs/11.x/helpers.md:1855
#: ./docs/master/helpers.md:1731
#~ msgctxt "P"
#~ msgid "<a name=\"method-dispatch-sync\"></a>"
#~ msgstr ""

#: ./docs/10.x/helpers.md:1717
#: ./docs/11.x/helpers.md:1856
#: ./docs/master/helpers.md:1732
msgctxt "H4"
msgid "`dispatch_sync()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1717
#: ./docs/9.x/helpers.md:1997
msgctxt "P"
msgid "The `Str::substrReplace` method replaces text within a portion of a string, starting at the position specified by the third argument and replacing the number of characters specified by the fourth argument. Passing `0` to the method's fourth argument will insert the string at the specified position without replacing any of the existing characters in the string:"
msgstr ""

#: ./docs/10.x/helpers.md:1719
#: ./docs/11.x/helpers.md:1858
#: ./docs/master/helpers.md:1734
msgctxt "P"
msgid "The `dispatch_sync` function pushes the given job to the [sync](/docs/{{version}}/queues#synchronous-dispatching) queue so that it is processed immediately:"
msgstr ""

#: ./docs/8.x/helpers.md:1719
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::substrReplace('1300', ':', 2); \n"
"// 13:\n\n"
"$result = Str::substrReplace('1300', ':', 2, 0); \n"
"// 13:00"
msgstr ""

#: ./docs/10.x/helpers.md:1721
#: ./docs/11.x/helpers.md:1860
#: ./docs/master/helpers.md:1736
msgctxt "CODE"
msgid "dispatch_sync(new App\\Jobs\\SendEmails);"
msgstr ""

#: ./docs/8.x/helpers.md:1727
#: ./docs/9.x/helpers.md:2021
#~ msgctxt "P"
#~ msgid "<a name=\"method-title-case\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1728
#: ./docs/9.x/helpers.md:2022
msgctxt "H4"
msgid "`Str::title()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1730
#: ./docs/9.x/helpers.md:2024
msgctxt "P"
msgid "The `Str::title` method converts the given string to `Title Case`:"
msgstr ""

#: ./docs/8.x/helpers.md:1732
#: ./docs/9.x/helpers.md:2026
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::title('a nice title uses the correct case');\n\n"
"// A Nice Title Uses The Correct Case"
msgstr ""

#: ./docs/8.x/helpers.md:1738
#: ./docs/9.x/helpers.md:2032
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-to-html-string\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1739
#: ./docs/9.x/helpers.md:2033
msgctxt "H4"
msgid "`Str::toHtmlString()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1741
#: ./docs/9.x/helpers.md:2035
msgctxt "P"
msgid "The `Str::toHtmlString` method converts the string instance to an instance of `Illuminate\\Support\\HtmlString`, which may be displayed in Blade templates:"
msgstr ""

#: ./docs/9.x/helpers.md:1742
msgctxt "P"
msgid "The `Str::plural` method converts a singular word string to its plural form. This function supports [any of the languages support by Laravel's pluralizer](/docs/{{version}}/localization#pluralization-language):"
msgstr ""

#: ./docs/8.x/helpers.md:1743
#: ./docs/9.x/helpers.md:2037
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$htmlString = Str::of('Nuno Maduro')->toHtmlString();"
msgstr ""

#: ./docs/8.x/helpers.md:1747
#: ./docs/9.x/helpers.md:2041
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-ucfirst\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1748
#: ./docs/9.x/helpers.md:2042
msgctxt "H4"
msgid "`Str::ucfirst()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1750
#: ./docs/9.x/helpers.md:2044
msgctxt "P"
msgid "The `Str::ucfirst` method returns the given string with the first character capitalized:"
msgstr ""

#: ./docs/8.x/helpers.md:1752
#: ./docs/9.x/helpers.md:2046
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::ucfirst('foo bar');\n\n"
"// Foo bar"
msgstr ""

#: ./docs/8.x/helpers.md:1758
#: ./docs/9.x/helpers.md:2063
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-upper\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1759
#: ./docs/9.x/helpers.md:2064
msgctxt "H4"
msgid "`Str::upper()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1761
#: ./docs/9.x/helpers.md:2066
msgctxt "P"
msgid "The `Str::upper` method converts the given string to uppercase:"
msgstr ""

#: ./docs/8.x/helpers.md:1763
#: ./docs/9.x/helpers.md:2068
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::upper('laravel');\n\n"
"// LARAVEL"
msgstr ""

#: ./docs/8.x/helpers.md:1769
#: ./docs/9.x/helpers.md:2085
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-uuid\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:1769
msgctxt "P"
msgid "The `Str::pluralStudly` method converts a singular word string formatted in studly caps case to its plural form. This function supports [any of the languages support by Laravel's pluralizer](/docs/{{version}}/localization#pluralization-language):"
msgstr ""

#: ./docs/8.x/helpers.md:1770
#: ./docs/9.x/helpers.md:2086
msgctxt "H4"
msgid "`Str::uuid()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1772
#: ./docs/9.x/helpers.md:2088
msgctxt "P"
msgid "The `Str::uuid` method generates a UUID (version 4):"
msgstr ""

#: ./docs/8.x/helpers.md:1774
#: ./docs/9.x/helpers.md:2090
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"return (string) Str::uuid();"
msgstr ""

#: ./docs/8.x/helpers.md:1778
#: ./docs/9.x/helpers.md:2094
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-word-count\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1779
#: ./docs/9.x/helpers.md:2095
msgctxt "H4"
msgid "`Str::wordCount()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1781
#: ./docs/9.x/helpers.md:2097
msgctxt "P"
msgid "The `Str::wordCount` method returns the number of words that a string contains:"
msgstr ""

#: ./docs/8.x/helpers.md:1783
#: ./docs/9.x/helpers.md:2099
msgctxt "CODE: php"
msgid "use Illuminate\\Support\\Str;\n\n"
"Str::wordCount('Hello, world!'); // 2"
msgstr ""

#: ./docs/8.x/helpers.md:1789
#: ./docs/9.x/helpers.md:2105
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-words\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1790
#: ./docs/9.x/helpers.md:2106
msgctxt "H4"
msgid "`Str::words()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1792
#: ./docs/9.x/helpers.md:2108
msgctxt "P"
msgid "The `Str::words` method limits the number of words in a string. An additional string may be passed to this method via its third argument to specify which string should be appended to the end of the truncated string:"
msgstr ""

#: ./docs/11.x/helpers.md:1794
#~ msgctxt "P"
#~ msgid "<a name=\"method-context\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1794
#: ./docs/9.x/helpers.md:2110
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"return Str::words('Perfectly balanced, as all things should be.', 3, ' >>>');\n\n"
"// Perfectly balanced, as >>>"
msgstr ""

#: ./docs/11.x/helpers.md:1795
msgctxt "H4"
msgid "`context()` {.collection-method}"
msgstr ""

#: ./docs/11.x/helpers.md:1797
msgctxt "P"
msgid "The `context` function gets the value from the [current context](/docs/{{version}}/context). A default value may be specified and is returned if the context key does not exist:"
msgstr ""

#: ./docs/11.x/helpers.md:1799
msgctxt "CODE"
msgid "$value = context('trace_id');\n\n"
"$value = context('trace_id', $default);"
msgstr ""

#: ./docs/8.x/helpers.md:1800
#: ./docs/9.x/helpers.md:2131
#~ msgctxt "P"
#~ msgid "<a name=\"method-trans\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1801
#: ./docs/9.x/helpers.md:2132
msgctxt "H4"
msgid "`trans()` {.collection-method}"
msgstr ""

#: ./docs/11.x/helpers.md:1803
msgctxt "P"
msgid "You may set context values by passing an array of key / value pairs:"
msgstr ""

#: ./docs/8.x/helpers.md:1803
#: ./docs/9.x/helpers.md:2134
msgctxt "P"
msgid "The `trans` function translates the given translation key using your [localization files](/docs/{{version}}/localization):"
msgstr ""

#: ./docs/11.x/helpers.md:1805
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"context(['trace_id' => Str::uuid()->toString()]);"
msgstr ""

#: ./docs/8.x/helpers.md:1805
#: ./docs/9.x/helpers.md:2136
msgctxt "CODE"
msgid "echo trans('messages.welcome');"
msgstr ""

#: ./docs/8.x/helpers.md:1807
#: ./docs/9.x/helpers.md:2138
msgctxt "P"
msgid "If the specified translation key does not exist, the `trans` function will return the given key. So, using the example above, the `trans` function would return `messages.welcome` if the translation key does not exist."
msgstr ""

#: ./docs/8.x/helpers.md:1809
#: ./docs/9.x/helpers.md:2140
#~ msgctxt "P"
#~ msgid "<a name=\"method-trans-choice\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1810
#: ./docs/9.x/helpers.md:2141
msgctxt "H4"
msgid "`trans_choice()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1812
#: ./docs/9.x/helpers.md:2143
msgctxt "P"
msgid "The `trans_choice` function translates the given translation key with inflection:"
msgstr ""

#: ./docs/8.x/helpers.md:1814
#: ./docs/9.x/helpers.md:2145
msgctxt "CODE"
msgid "echo trans_choice('messages.notifications', $unreadCount);"
msgstr ""

#: ./docs/8.x/helpers.md:1816
#: ./docs/9.x/helpers.md:2147
msgctxt "P"
msgid "If the specified translation key does not exist, the `trans_choice` function will return the given key. So, using the example above, the `trans_choice` function would return `messages.notifications` if the translation key does not exist."
msgstr ""

#: ./docs/8.x/helpers.md:1818
#: ./docs/9.x/helpers.md:2149
#~ msgctxt "P"
#~ msgid "<a name=\"fluent-strings\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1821
#: ./docs/9.x/helpers.md:2152
msgctxt "P"
msgid "Fluent strings provide a more fluent, object-oriented interface for working with string values, allowing you to chain multiple string operations together using a more readable syntax compared to traditional string operations."
msgstr ""

#: ./docs/8.x/helpers.md:1823
#: ./docs/9.x/helpers.md:2154
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-after\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1824
#: ./docs/9.x/helpers.md:2155
msgctxt "H4"
msgid "`after` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1826
#: ./docs/9.x/helpers.md:2157
msgctxt "P"
msgid "The `after` method returns everything after the given value in a string. The entire string will be returned if the value does not exist within the string:"
msgstr ""

#: ./docs/8.x/helpers.md:1828
#: ./docs/9.x/helpers.md:2159
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::of('This is my name')->after('This is');\n\n"
"// ' my name'"
msgstr ""

#: ./docs/master/helpers.md:1830
msgctxt "P"
msgid "\"The `literal` function creates a new [stdClass](https://www.php.net/manual/en/class.stdclass.php) instance with the given named arguments as properties:"
msgstr ""

#: ./docs/8.x/helpers.md:1834
#: ./docs/9.x/helpers.md:2165
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-after-last\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1835
#: ./docs/9.x/helpers.md:2166
msgctxt "H4"
msgid "`afterLast` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1837
#: ./docs/9.x/helpers.md:2168
msgctxt "P"
msgid "The `afterLast` method returns everything after the last occurrence of the given value in a string. The entire string will be returned if the value does not exist within the string:"
msgstr ""

#: ./docs/8.x/helpers.md:1839
#: ./docs/9.x/helpers.md:2170
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::of('App\\Http\\Controllers\\Controller')->afterLast('\\\\');\n\n"
"// 'Controller'"
msgstr ""

#: ./docs/8.x/helpers.md:1845
#: ./docs/9.x/helpers.md:2176
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-append\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1846
#: ./docs/9.x/helpers.md:2177
msgctxt "H4"
msgid "`append` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1848
#: ./docs/9.x/helpers.md:2179
msgctxt "P"
msgid "The `append` method appends the given values to the string:"
msgstr ""

#: ./docs/8.x/helpers.md:1850
#: ./docs/9.x/helpers.md:2181
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Taylor')->append(' Otwell');\n\n"
"// 'Taylor Otwell'"
msgstr ""

#: ./docs/8.x/helpers.md:1856
#: ./docs/9.x/helpers.md:2187
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-ascii\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1857
#: ./docs/9.x/helpers.md:2188
msgctxt "H4"
msgid "`ascii` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1859
#: ./docs/9.x/helpers.md:2190
msgctxt "P"
msgid "The `ascii` method will attempt to transliterate the string into an ASCII value:"
msgstr ""

#: ./docs/8.x/helpers.md:1861
#: ./docs/9.x/helpers.md:2192
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('ü')->ascii();\n\n"
"// 'u'"
msgstr ""

#: ./docs/8.x/helpers.md:1867
#: ./docs/9.x/helpers.md:2198
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-basename\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1868
#: ./docs/9.x/helpers.md:2199
msgctxt "H4"
msgid "`basename` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1870
#: ./docs/9.x/helpers.md:2201
msgctxt "P"
msgid "The `basename` method will return the trailing name component of the given string:"
msgstr ""

#: ./docs/10.x/helpers.md:1871
#: ./docs/11.x/helpers.md:2062
#: ./docs/master/helpers.md:1938
msgctxt "CODE"
msgid "return optional(User::find($id), function (User $user) {\n"
"    return $user->name;\n"
"});"
msgstr ""

#: ./docs/8.x/helpers.md:1872
#: ./docs/9.x/helpers.md:2203
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('/foo/bar/baz')->basename();\n\n"
"// 'baz'"
msgstr ""

#: ./docs/8.x/helpers.md:1878
#: ./docs/9.x/helpers.md:2209
msgctxt "P"
msgid "If needed, you may provide an \"extension\" that will be removed from the trailing component:"
msgstr ""

#: ./docs/8.x/helpers.md:1880
#: ./docs/9.x/helpers.md:2211
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('/foo/bar/baz.jpg')->basename('.jpg');\n\n"
"// 'baz'"
msgstr ""

#: ./docs/9.x/helpers.md:1880
msgctxt "P"
msgid "The `Str::singular` method converts a string to its singular form. This function supports [any of the languages support by Laravel's pluralizer](/docs/{{version}}/localization#pluralization-language):"
msgstr ""

#: ./docs/8.x/helpers.md:1886
#: ./docs/9.x/helpers.md:2217
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-before\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1887
#: ./docs/9.x/helpers.md:2218
msgctxt "H4"
msgid "`before` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1889
#: ./docs/9.x/helpers.md:2220
msgctxt "P"
msgid "The `before` method returns everything before the given value in a string:"
msgstr ""

#: ./docs/8.x/helpers.md:1891
#: ./docs/9.x/helpers.md:2222
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::of('This is my name')->before('my name');\n\n"
"// 'This is '"
msgstr ""

#: ./docs/8.x/helpers.md:1897
#: ./docs/9.x/helpers.md:2228
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-before-last\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1898
#: ./docs/9.x/helpers.md:2229
msgctxt "H4"
msgid "`beforeLast` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1900
#: ./docs/9.x/helpers.md:2231
msgctxt "P"
msgid "The `beforeLast` method returns everything before the last occurrence of the given value in a string:"
msgstr ""

#: ./docs/8.x/helpers.md:1902
#: ./docs/9.x/helpers.md:2233
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$slice = Str::of('This is my name')->beforeLast('is');\n\n"
"// 'This '"
msgstr ""

#: ./docs/8.x/helpers.md:1908
#: ./docs/9.x/helpers.md:2239
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-between\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1909
#: ./docs/9.x/helpers.md:2240
msgctxt "H4"
msgid "`between` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1911
#: ./docs/9.x/helpers.md:2242
msgctxt "P"
msgid "The `between` method returns the portion of a string between two values:"
msgstr ""

#: ./docs/8.x/helpers.md:1913
#: ./docs/9.x/helpers.md:2244
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::of('This is my name')->between('This', 'name');\n\n"
"// ' is my '"
msgstr ""

#: ./docs/11.x/helpers.md:1916
#: ./docs/master/helpers.md:1792
msgctxt "P"
msgid "By default, the `fake` function will utilize the `app.faker_locale` configuration option in your `config/app.php` configuration. Typically, this configuration option is set via the `APP_FAKER_LOCALE` environment variable. You may also specify the locale by passing it to the `fake` function. Each locale will resolve an individual singleton:"
msgstr ""

#: ./docs/9.x/helpers.md:1918
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-squish\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1919
#: ./docs/9.x/helpers.md:2261
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-camel\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:1919
msgctxt "H4"
msgid "`Str::squish()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1920
#: ./docs/9.x/helpers.md:2262
msgctxt "H4"
msgid "`camel` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:1921
msgctxt "P"
msgid "The `Str::squish` method removes all extraneous white space from a string, including extraneous white space between words:"
msgstr ""

#: ./docs/8.x/helpers.md:1922
#: ./docs/9.x/helpers.md:2264
msgctxt "P"
msgid "The `camel` method converts the given string to `camelCase`:"
msgstr ""

#: ./docs/9.x/helpers.md:1923
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::squish('    laravel    framework    ');\n\n"
"// laravel framework"
msgstr ""

#: ./docs/8.x/helpers.md:1924
#: ./docs/9.x/helpers.md:2266
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::of('foo_bar')->camel();\n\n"
"// fooBar"
msgstr ""

#: ./docs/8.x/helpers.md:1930
#: ./docs/9.x/helpers.md:2283
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-contains\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1931
#: ./docs/9.x/helpers.md:2284
msgctxt "H4"
msgid "`contains` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1933
#: ./docs/9.x/helpers.md:2286
msgctxt "P"
msgid "The `contains` method determines if the given string contains the given value. This method is case sensitive:"
msgstr ""

#: ./docs/8.x/helpers.md:1935
#: ./docs/9.x/helpers.md:2288
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$contains = Str::of('This is my name')->contains('my');\n\n"
"// true"
msgstr ""

#: ./docs/8.x/helpers.md:1943
#: ./docs/9.x/helpers.md:2296
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$contains = Str::of('This is my name')->contains(['my', 'foo']);\n\n"
"// true"
msgstr ""

#: ./docs/8.x/helpers.md:1949
#: ./docs/9.x/helpers.md:2302
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-contains-all\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1950
#: ./docs/9.x/helpers.md:2303
msgctxt "H4"
msgid "`containsAll` {.collection-method}"
msgstr ""

#: ./docs/11.x/helpers.md:1951
#: ./docs/master/helpers.md:1827
#~ msgctxt "P"
#~ msgid "<a name=\"method-literal\"></a>"
#~ msgstr ""

#: ./docs/10.x/helpers.md:1952
#: ./docs/11.x/helpers.md:2143
#: ./docs/master/helpers.md:2019
msgctxt "P"
msgid "A `report` argument may be provided to the `rescue` function to determine if the exception should be reported via the `report` function:"
msgstr ""

#: ./docs/11.x/helpers.md:1952
#: ./docs/master/helpers.md:1828
msgctxt "H4"
msgid "`literal()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1952
#: ./docs/9.x/helpers.md:2305
msgctxt "P"
msgid "The `containsAll` method determines if the given string contains all of the values in the given array:"
msgstr ""

#: ./docs/10.x/helpers.md:1954
#: ./docs/11.x/helpers.md:2145
#: ./docs/master/helpers.md:2021
msgctxt "CODE"
msgid "return rescue(function () {\n"
"    return $this->method();\n"
"}, report: function (Throwable $throwable) {\n"
"    return $throwable instanceof InvalidArgumentException;\n"
"});"
msgstr ""

#: ./docs/11.x/helpers.md:1954
msgctxt "P"
msgid "The `literal` function creates a new [stdClass](https://www.php.net/manual/en/class.stdclass.php) instance with the given named arguments as properties:"
msgstr ""

#: ./docs/8.x/helpers.md:1954
#: ./docs/9.x/helpers.md:2307
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$containsAll = Str::of('This is my name')->containsAll(['my', 'name']);\n\n"
"// true"
msgstr ""

#: ./docs/11.x/helpers.md:1956
#: ./docs/master/helpers.md:1832
msgctxt "CODE"
msgid "$obj = literal(\n"
"    name: 'Joe',\n"
"    languages: ['PHP', 'Ruby'],\n"
");\n\n"
"$obj->name; // 'Joe'\n"
"$obj->languages; // ['PHP', 'Ruby']"
msgstr ""

#: ./docs/8.x/helpers.md:1960
#: ./docs/9.x/helpers.md:2313
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-dirname\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1961
#: ./docs/9.x/helpers.md:2314
msgctxt "H4"
msgid "`dirname` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1963
#: ./docs/9.x/helpers.md:2316
msgctxt "P"
msgid "The `dirname` method returns the parent directory portion of the given string:"
msgstr ""

#: ./docs/8.x/helpers.md:1965
#: ./docs/9.x/helpers.md:2318
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('/foo/bar/baz')->dirname();\n\n"
"// '/foo/bar'"
msgstr ""

#: ./docs/8.x/helpers.md:1971
#: ./docs/9.x/helpers.md:2324
msgctxt "P"
msgid "If necessary, you may specify how many directory levels you wish to trim from the string:"
msgstr ""

#: ./docs/8.x/helpers.md:1973
#: ./docs/9.x/helpers.md:2326
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('/foo/bar/baz')->dirname(2);\n\n"
"// '/foo'"
msgstr ""

#: ./docs/11.x/helpers.md:1975
msgctxt "P"
msgid "A [logger](/docs/{{version}}/logging) instance will be returned if no value is passed to the function:"
msgstr ""

#: ./docs/8.x/helpers.md:1979
#: ./docs/9.x/helpers.md:2358
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-ends-with\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:1980
#: ./docs/9.x/helpers.md:2359
msgctxt "H4"
msgid "`endsWith` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:1982
#: ./docs/9.x/helpers.md:2361
msgctxt "P"
msgid "The `endsWith` method determines if the given string ends with the given value:"
msgstr ""

#: ./docs/8.x/helpers.md:1984
#: ./docs/9.x/helpers.md:2363
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('This is my name')->endsWith('name');\n\n"
"// true"
msgstr ""

#: ./docs/10.x/helpers.md:1987
#: ./docs/11.x/helpers.md:2178
#: ./docs/master/helpers.md:2054
msgctxt "CODE"
msgid "use Exception;\n\n"
"return retry(5, function () {\n"
"    // ...\n"
"}, function (int $attempt, Exception $exception) {\n"
"    return $attempt * 100;\n"
"});"
msgstr ""

#: ./docs/8.x/helpers.md:1992
#: ./docs/9.x/helpers.md:2371
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('This is my name')->endsWith(['name', 'foo']);\n\n"
"// true\n\n"
"$result = Str::of('This is my name')->endsWith(['this', 'foo']);\n\n"
"// false"
msgstr ""

#: ./docs/9.x/helpers.md:1999
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::substrReplace('1300', ':', 2);\n"
"// 13:\n\n"
"$result = Str::substrReplace('1300', ':', 2, 0);\n"
"// 13:00"
msgstr ""

#: ./docs/8.x/helpers.md:2002
#: ./docs/9.x/helpers.md:2381
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-exactly\"></a>"
#~ msgstr ""

#: ./docs/10.x/helpers.md:2003
#: ./docs/11.x/helpers.md:2194
#: ./docs/master/helpers.md:2070
msgctxt "CODE"
msgid "use Exception;\n\n"
"return retry(5, function () {\n"
"    // ...\n"
"}, 100, function (Exception $exception) {\n"
"    return $exception instanceof RetryException;\n"
"});"
msgstr ""

#: ./docs/8.x/helpers.md:2003
#: ./docs/9.x/helpers.md:2382
msgctxt "H4"
msgid "`exactly` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2005
#: ./docs/9.x/helpers.md:2384
msgctxt "P"
msgid "The `exactly` method determines if the given string is an exact match with another string:"
msgstr ""

#: ./docs/8.x/helpers.md:2007
#: ./docs/9.x/helpers.md:2386
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('Laravel')->exactly('Laravel');\n\n"
"// true"
msgstr ""

#: ./docs/9.x/helpers.md:2007
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-swap\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:2008
msgctxt "H4"
msgid "`Str::swap()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:2010
msgctxt "P"
msgid "The `Str::swap` method replaces multiple values in the given string using PHP's `strtr` function:"
msgstr ""

#: ./docs/11.x/helpers.md:2012
#: ./docs/master/helpers.md:1888
#~ msgctxt "P"
#~ msgid "<a name=\"method-once\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:2012
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::swap([\n"
"    'Tacos' => 'Burritos',\n"
"    'great' => 'fantastic',\n"
"], 'Tacos are great!');\n\n"
"// Burritos are fantastic!"
msgstr ""

#: ./docs/11.x/helpers.md:2013
#: ./docs/master/helpers.md:1889
msgctxt "H4"
msgid "`once()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2013
#: ./docs/9.x/helpers.md:2392
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-explode\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2014
#: ./docs/9.x/helpers.md:2393
msgctxt "H4"
msgid "`explode` {.collection-method}"
msgstr ""

#: ./docs/11.x/helpers.md:2015
#: ./docs/master/helpers.md:1891
msgctxt "P"
msgid "The `once` function executes the given callback and caches the result in memory for the duration of the request. Any subsequent calls to the `once` function with the same callback will return the previously cached result:"
msgstr ""

#: ./docs/8.x/helpers.md:2016
#: ./docs/9.x/helpers.md:2395
msgctxt "P"
msgid "The `explode` method splits the string by the given delimiter and returns a collection containing each section of the split string:"
msgstr ""

#: ./docs/11.x/helpers.md:2017
#: ./docs/master/helpers.md:1893
msgctxt "CODE"
msgid "function random(): int\n"
"{\n"
"    return once(function () {\n"
"        return random_int(1, 1000);\n"
"    });\n"
"}\n\n"
"random(); // 123\n"
"random(); // 123 (cached result)\n"
"random(); // 123 (cached result)"
msgstr ""

#: ./docs/8.x/helpers.md:2018
#: ./docs/9.x/helpers.md:2397
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$collection = Str::of('foo bar baz')->explode(' ');\n\n"
"// collect(['foo', 'bar', 'baz'])"
msgstr ""

#: ./docs/8.x/helpers.md:2024
#: ./docs/9.x/helpers.md:2403
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-finish\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2025
#: ./docs/9.x/helpers.md:2404
msgctxt "H4"
msgid "`finish` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2027
#: ./docs/9.x/helpers.md:2406
msgctxt "P"
msgid "The `finish` method adds a single instance of the given value to a string if it does not already end with that value:"
msgstr ""

#: ./docs/11.x/helpers.md:2028
#: ./docs/master/helpers.md:1904
msgctxt "P"
msgid "When the `once` function is executed from within an object instance, the cached result will be unique to that object instance:"
msgstr ""

#: ./docs/8.x/helpers.md:2029
#: ./docs/9.x/helpers.md:2408
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$adjusted = Str::of('this/string')->finish('/');\n\n"
"// this/string/\n\n"
"$adjusted = Str::of('this/string/')->finish('/');\n\n"
"// this/string/"
msgstr ""

#: ./docs/11.x/helpers.md:2030
#: ./docs/master/helpers.md:1906
msgctxt "CODE: php"
msgid "<?php\n\n"
"class NumberService\n"
"{\n"
"    public function all(): array\n"
"    {\n"
"        return once(fn () => [1, 2, 3]);\n"
"    }\n"
"}\n\n"
"$service = new NumberService;\n\n"
"$service->all();\n"
"$service->all(); // (cached result)\n\n"
"$secondService = new NumberService;\n\n"
"$secondService->all();\n"
"$secondService->all(); // (cached result)"
msgstr ""

#: ./docs/10.x/helpers.md:2033
#: ./docs/11.x/helpers.md:2224
#: ./docs/master/helpers.md:2100
msgctxt "CODE"
msgid "$user = tap(User::first(), function (User $user) {\n"
"    $user->name = 'taylor';\n\n"
"    $user->save();\n"
"});"
msgstr ""

#: ./docs/8.x/helpers.md:2039
#: ./docs/9.x/helpers.md:2444
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-is\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2040
#: ./docs/9.x/helpers.md:2445
msgctxt "H4"
msgid "`is` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2042
#: ./docs/9.x/helpers.md:2447
msgctxt "P"
msgid "The `is` method determines if a given string matches a given pattern. Asterisks may be used as wildcard values"
msgstr ""

#: ./docs/8.x/helpers.md:2044
#: ./docs/9.x/helpers.md:2449
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$matches = Str::of('foobar')->is('foo*');\n\n"
"// true\n\n"
"$matches = Str::of('foobar')->is('baz*');\n\n"
"// false"
msgstr ""

#: ./docs/10.x/helpers.md:2048
#: ./docs/11.x/helpers.md:2239
#: ./docs/master/helpers.md:2115
msgctxt "CODE"
msgid "return $user->tap(function (User $user) {\n"
"    // ...\n"
"});"
msgstr ""

#: ./docs/9.x/helpers.md:2052
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-ucsplit\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:2053
msgctxt "H4"
msgid "`Str::ucsplit()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2054
#: ./docs/9.x/helpers.md:2459
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-is-ascii\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2055
#: ./docs/9.x/helpers.md:2460
msgctxt "H4"
msgid "`isAscii` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:2055
msgctxt "P"
msgid "The `Str::ucsplit` method splits the given string into an array by uppercase characters:"
msgstr ""

#: ./docs/8.x/helpers.md:2057
#: ./docs/9.x/helpers.md:2462
msgctxt "P"
msgid "The `isAscii` method determines if a given string is an ASCII string:"
msgstr ""

#: ./docs/9.x/helpers.md:2057
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$segments = Str::ucsplit('FooBar');\n\n"
"// [0 => 'Foo', 1 => 'Bar']"
msgstr ""

#: ./docs/8.x/helpers.md:2059
#: ./docs/9.x/helpers.md:2464
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('Taylor')->isAscii();\n\n"
"// true\n\n"
"$result = Str::of('ü')->isAscii();\n\n"
"// false"
msgstr ""

#: ./docs/8.x/helpers.md:2069
#: ./docs/9.x/helpers.md:2474
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-is-empty\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2070
#: ./docs/9.x/helpers.md:2475
msgctxt "H4"
msgid "`isEmpty` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2072
#: ./docs/9.x/helpers.md:2477
msgctxt "P"
msgid "The `isEmpty` method determines if the given string is empty:"
msgstr ""

#: ./docs/8.x/helpers.md:2074
#: ./docs/9.x/helpers.md:2479
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('  ')->trim()->isEmpty();\n\n"
"// true\n\n"
"$result = Str::of('Laravel')->trim()->isEmpty();\n\n"
"// false"
msgstr ""

#: ./docs/9.x/helpers.md:2074
#~ msgctxt "P"
#~ msgid "<a name=\"method-str-ulid\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:2075
msgctxt "H4"
msgid "`Str::ulid()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:2077
msgctxt "P"
msgid "The `Str::ulid` method generates a ULID:"
msgstr ""

#: ./docs/9.x/helpers.md:2079
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"return (string) Str::ulid();\n\n"
"// 01gd6r360bp37zj17nxb55yv40"
msgstr ""

#: ./docs/8.x/helpers.md:2084
#: ./docs/9.x/helpers.md:2489
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-is-not-empty\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2085
#: ./docs/9.x/helpers.md:2490
msgctxt "H4"
msgid "`isNotEmpty` {.collection-method}"
msgstr ""

#: ./docs/11.x/helpers.md:2087
msgctxt "P"
msgid "The `report` function will report an exception using your [exception handler](/docs/{{version}}/errors#handling-exceptions):"
msgstr ""

#: ./docs/8.x/helpers.md:2087
#: ./docs/9.x/helpers.md:2492
msgctxt "P"
msgid "The `isNotEmpty` method determines if the given string is not empty:"
msgstr ""

#: ./docs/8.x/helpers.md:2090
#: ./docs/9.x/helpers.md:2495
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('  ')->trim()->isNotEmpty();\n\n"
"// false\n\n"
"$result = Str::of('Laravel')->trim()->isNotEmpty();\n\n"
"// true"
msgstr ""

#: ./docs/10.x/helpers.md:2097
#: ./docs/11.x/helpers.md:2288
#: ./docs/master/helpers.md:2164
msgctxt "CODE"
msgid "$callback = function (int $value) {\n"
"    return $value * 2;\n"
"};\n\n"
"$result = transform(5, $callback);\n\n"
"// 10"
msgstr ""

#: ./docs/11.x/helpers.md:2098
msgctxt "P"
msgid "The `report_if` function will report an exception using your [exception handler](/docs/{{version}}/errors#handling-exceptions) if the given condition is `true`:"
msgstr ""

#: ./docs/8.x/helpers.md:2100
#: ./docs/9.x/helpers.md:2539
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-is-uuid\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2101
#: ./docs/9.x/helpers.md:2540
msgctxt "H4"
msgid "`isUuid` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2103
#: ./docs/9.x/helpers.md:2542
msgctxt "P"
msgid "The `isUuid` method determines if a given string is a UUID:"
msgstr ""

#: ./docs/8.x/helpers.md:2105
#: ./docs/9.x/helpers.md:2544
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('5ace9ab9-e9cf-4ec6-a19d-5881212a452c')->isUuid();\n\n"
"// true\n\n"
"$result = Str::of('Taylor')->isUuid();\n\n"
"// false"
msgstr ""

#: ./docs/11.x/helpers.md:2107
msgctxt "P"
msgid "The `report_unless` function will report an exception using your [exception handler](/docs/{{version}}/errors#handling-exceptions) if the given condition is `false`:"
msgstr ""

#: ./docs/8.x/helpers.md:2115
#: ./docs/9.x/helpers.md:2554
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-kebab\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2116
#: ./docs/9.x/helpers.md:2555
msgctxt "H4"
msgid "`kebab` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:2116
#~ msgctxt "P"
#~ msgid "<a name=\"method-str\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:2117
msgctxt "H4"
msgid "`str()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2118
#: ./docs/9.x/helpers.md:2557
msgctxt "P"
msgid "The `kebab` method converts the given string to `kebab-case`:"
msgstr ""

#: ./docs/9.x/helpers.md:2119
msgctxt "P"
msgid "The `str` function returns a new `Illuminate\\Support\\Stringable` instance of the given string. This function is equivalent to the `Str::of` method:"
msgstr ""

#: ./docs/8.x/helpers.md:2120
#: ./docs/9.x/helpers.md:2559
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::of('fooBar')->kebab();\n\n"
"// foo-bar"
msgstr ""

#: ./docs/9.x/helpers.md:2121
msgctxt "CODE"
msgid "$string = str('Taylor')->append(' Otwell');\n\n"
"// 'Taylor Otwell'"
msgstr ""

#: ./docs/11.x/helpers.md:2125
msgctxt "P"
msgid "The `rescue` function executes the given closure and catches any exceptions that occur during its execution. All exceptions that are caught will be sent to your [exception handler](/docs/{{version}}/errors#handling-exceptions); however, the request will continue processing:"
msgstr ""

#: ./docs/9.x/helpers.md:2125
msgctxt "P"
msgid "If no argument is provided to the `str` function, the function returns an instance of `Illuminate\\Support\\Str`:"
msgstr ""

#: ./docs/8.x/helpers.md:2126
#: ./docs/9.x/helpers.md:2577
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-length\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2127
#: ./docs/9.x/helpers.md:2578
msgctxt "H4"
msgid "`length` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:2127
msgctxt "CODE"
msgid "$snake = str()->snake('FooBar');\n\n"
"// 'foo_bar'"
msgstr ""

#: ./docs/8.x/helpers.md:2129
#: ./docs/9.x/helpers.md:2580
msgctxt "P"
msgid "The `length` method returns the length of the given string:"
msgstr ""

#: ./docs/8.x/helpers.md:2131
#: ./docs/9.x/helpers.md:2582
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$length = Str::of('Laravel')->length();\n\n"
"// 7"
msgstr ""

#: ./docs/10.x/helpers.md:2135
#: ./docs/11.x/helpers.md:2326
#: ./docs/master/helpers.md:2202
msgctxt "CODE"
msgid "$result = value(function (string $name) {\n"
"    return $name;\n"
"}, 'Taylor');\n\n"
"// 'Taylor'"
msgstr ""

#: ./docs/8.x/helpers.md:2137
#: ./docs/9.x/helpers.md:2588
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-limit\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2138
#: ./docs/9.x/helpers.md:2589
msgctxt "H4"
msgid "`limit` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2140
#: ./docs/9.x/helpers.md:2591
msgctxt "P"
msgid "The `limit` method truncates the given string to the specified length:"
msgstr ""

#: ./docs/8.x/helpers.md:2142
#: ./docs/9.x/helpers.md:2593
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$truncated = Str::of('The quick brown fox jumps over the lazy dog')->limit(20);\n\n"
"// The quick brown fox..."
msgstr ""

#: ./docs/8.x/helpers.md:2148
#: ./docs/9.x/helpers.md:2599
msgctxt "P"
msgid "You may also pass a second argument to change the string that will be appended to the end of the truncated string:"
msgstr ""

#: ./docs/8.x/helpers.md:2150
#: ./docs/9.x/helpers.md:2601
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$truncated = Str::of('The quick brown fox jumps over the lazy dog')->limit(20, ' (...)');\n\n"
"// The quick brown fox (...)"
msgstr ""

#: ./docs/10.x/helpers.md:2153
#: ./docs/11.x/helpers.md:2344
#: ./docs/master/helpers.md:2220
msgctxt "CODE"
msgid "$callback = function (mixed $value) {\n"
"    return is_numeric($value) ? $value * 2 : 0;\n"
"};\n\n"
"$result = with(5, $callback);\n\n"
"// 10\n\n"
"$result = with(null, $callback);\n\n"
"// 0\n\n"
"$result = with(5, null);\n\n"
"// 5"
msgstr ""

#: ./docs/8.x/helpers.md:2156
#: ./docs/9.x/helpers.md:2607
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-lower\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2157
#: ./docs/9.x/helpers.md:2608
msgctxt "H4"
msgid "`lower` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2159
#: ./docs/9.x/helpers.md:2610
msgctxt "P"
msgid "The `lower` method converts the given string to lowercase:"
msgstr ""

#: ./docs/8.x/helpers.md:2161
#: ./docs/9.x/helpers.md:2612
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('LARAVEL')->lower();\n\n"
"// 'laravel'"
msgstr ""

#: ./docs/8.x/helpers.md:2167
#: ./docs/9.x/helpers.md:2618
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-ltrim\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2168
#: ./docs/9.x/helpers.md:2619
msgctxt "H4"
msgid "`ltrim` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2170
#: ./docs/9.x/helpers.md:2621
msgctxt "P"
msgid "The `ltrim` method trims the left side of the string:"
msgstr ""

#: ./docs/8.x/helpers.md:2172
#: ./docs/9.x/helpers.md:2623
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('  Laravel  ')->ltrim();\n\n"
"// 'Laravel  '\n\n"
"$string = Str::of('/Laravel/')->ltrim('/');\n\n"
"// 'Laravel/'"
msgstr ""

#: ./docs/8.x/helpers.md:2182
#: ./docs/9.x/helpers.md:2633
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-markdown\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2183
#: ./docs/9.x/helpers.md:2634
msgctxt "H4"
msgid "`markdown` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2185
#: ./docs/9.x/helpers.md:2636
msgctxt "P"
msgid "The `markdown` method converts GitHub flavored Markdown into HTML:"
msgstr ""

#: ./docs/8.x/helpers.md:2187
#: ./docs/9.x/helpers.md:2638
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$html = Str::of('# Laravel')->markdown();\n\n"
"// <h1>Laravel</h1>\n\n"
"$html = Str::of('# Taylor <b>Otwell</b>')->markdown([\n"
"    'html_input' => 'strip',\n"
"]);\n\n"
"// <h1>Taylor Otwell</h1>"
msgstr ""

#: ./docs/10.x/helpers.md:2195
#: ./docs/11.x/helpers.md:2403
#: ./docs/master/helpers.md:2262
msgctxt "P"
msgid "Sometimes, you may want to benchmark the execution of a callback while still obtaining the value returned by the callback. The `value` method will return a tuple containing the value returned by the callback and the amount of milliseconds it took to execute the callback:"
msgstr ""

#: ./docs/10.x/helpers.md:2197
#: ./docs/11.x/helpers.md:2405
#: ./docs/master/helpers.md:2264
msgctxt "CODE"
msgid "[$count, $duration] = Benchmark::value(fn () => User::count());"
msgstr ""

#: ./docs/10.x/helpers.md:2199
#: ./docs/11.x/helpers.md:2407
#: ./docs/master/helpers.md:2266
#~ msgctxt "P"
#~ msgid "<a name=\"dates\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2199
#: ./docs/9.x/helpers.md:2650
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-mask\"></a>"
#~ msgstr ""

#: ./docs/10.x/helpers.md:2200
#: ./docs/11.x/helpers.md:2408
#: ./docs/master/helpers.md:2267
msgctxt "H3"
msgid "Dates"
msgstr ""

#: ./docs/8.x/helpers.md:2200
#: ./docs/9.x/helpers.md:2651
msgctxt "H4"
msgid "`mask` {.collection-method}"
msgstr ""

#: ./docs/10.x/helpers.md:2202
#: ./docs/11.x/helpers.md:2410
#: ./docs/master/helpers.md:2269
msgctxt "P"
msgid "Laravel includes [Carbon](https://carbon.nesbot.com/docs/), a powerful date and time manipulation library. To create a new `Carbon` instance, you may invoke the `now` function. This function is globally available within your Laravel application:"
msgstr ""

#: ./docs/8.x/helpers.md:2202
#: ./docs/9.x/helpers.md:2653
msgctxt "P"
msgid "The `mask` method masks a portion of a string with a repeated character, and may be used to obfuscate segments of strings such as email addresses and phone numbers:"
msgstr ""

#: ./docs/8.x/helpers.md:2204
#: ./docs/9.x/helpers.md:2655
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('taylor@example.com')->mask('*', 3);\n\n"
"// tay***************"
msgstr ""

#: ./docs/10.x/helpers.md:2208
#: ./docs/11.x/helpers.md:2416
#: ./docs/master/helpers.md:2275
msgctxt "P"
msgid "Or, you may create a new `Carbon` instance using the `Illuminate\\Support\\Carbon` class:"
msgstr ""

#: ./docs/10.x/helpers.md:2210
#: ./docs/11.x/helpers.md:2418
#: ./docs/master/helpers.md:2277
msgctxt "CODE: php"
msgid "use Illuminate\\Support\\Carbon;\n\n"
"$now = Carbon::now();"
msgstr ""

#: ./docs/8.x/helpers.md:2212
msgctxt "CODE"
msgid "$string = Str::of('taylor@example.com')->mask('*', -15, 3);\n\n"
"// tay***@example.com"
msgstr ""

#: ./docs/10.x/helpers.md:2216
#: ./docs/11.x/helpers.md:2424
#: ./docs/master/helpers.md:2283
msgctxt "P"
msgid "For a thorough discussion of Carbon and its features, please consult the [official Carbon documentation](https://carbon.nesbot.com/docs/)."
msgstr ""

#: ./docs/8.x/helpers.md:2216
#: ./docs/9.x/helpers.md:2671
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-match\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2217
#: ./docs/9.x/helpers.md:2672
msgctxt "H4"
msgid "`match` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2219
#: ./docs/9.x/helpers.md:2674
msgctxt "P"
msgid "The `match` method will return the portion of a string that matches a given regular expression pattern:"
msgstr ""

#: ./docs/8.x/helpers.md:2221
#: ./docs/9.x/helpers.md:2676
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('foo bar')->match('/bar/');\n\n"
"// 'bar'\n\n"
"$result = Str::of('foo bar')->match('/foo (.*)/');\n\n"
"// 'bar'"
msgstr ""

#: ./docs/8.x/helpers.md:2231
#: ./docs/9.x/helpers.md:2686
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-match-all\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2232
#: ./docs/9.x/helpers.md:2687
msgctxt "H4"
msgid "`matchAll` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2234
#: ./docs/9.x/helpers.md:2689
msgctxt "P"
msgid "The `matchAll` method will return a collection containing the portions of a string that match a given regular expression pattern:"
msgstr ""

#: ./docs/8.x/helpers.md:2236
#: ./docs/9.x/helpers.md:2691
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('bar foo bar')->matchAll('/bar/');\n\n"
"// collect(['bar', 'bar'])"
msgstr ""

#: ./docs/8.x/helpers.md:2242
#: ./docs/9.x/helpers.md:2697
msgctxt "P"
msgid "If you specify a matching group within the expression, Laravel will return a collection of that group's matches:"
msgstr ""

#: ./docs/8.x/helpers.md:2244
#: ./docs/9.x/helpers.md:2699
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('bar fun bar fly')->matchAll('/f(\\w*)/');\n\n"
"// collect(['un', 'ly']);"
msgstr ""

#: ./docs/8.x/helpers.md:2250
#: ./docs/9.x/helpers.md:2705
msgctxt "P"
msgid "If no matches are found, an empty collection will be returned."
msgstr ""

#: ./docs/9.x/helpers.md:2250
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-between-first\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:2251
msgctxt "H4"
msgid "`betweenFirst` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2252
#: ./docs/9.x/helpers.md:2719
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-padboth\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2253
#: ./docs/9.x/helpers.md:2720
msgctxt "H4"
msgid "`padBoth` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:2253
msgctxt "P"
msgid "The `betweenFirst` method returns the smallest possible portion of a string between two values:"
msgstr ""

#: ./docs/8.x/helpers.md:2255
#: ./docs/9.x/helpers.md:2722
msgctxt "P"
msgid "The `padBoth` method wraps PHP's `str_pad` function, padding both sides of a string with another string until the final string reaches the desired length:"
msgstr ""

#: ./docs/9.x/helpers.md:2255
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::of('[a] bc [d]')->betweenFirst('[', ']');\n\n"
"// 'a'"
msgstr ""

#: ./docs/8.x/helpers.md:2257
#: ./docs/9.x/helpers.md:2724
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$padded = Str::of('James')->padBoth(10, '_');\n\n"
"// '__James___'\n\n"
"$padded = Str::of('James')->padBoth(10);\n\n"
"// '  James   '"
msgstr ""

#: ./docs/10.x/helpers.md:2258
#: ./docs/11.x/helpers.md:2568
#: ./docs/master/helpers.md:2325
#~ msgctxt "P"
#~ msgid "<a name=\"pipeline\"></a>"
#~ msgstr ""

#: ./docs/10.x/helpers.md:2259
#: ./docs/11.x/helpers.md:2569
#: ./docs/master/helpers.md:2326
msgctxt "H3"
msgid "Pipeline"
msgstr ""

#: ./docs/10.x/helpers.md:2261
#: ./docs/11.x/helpers.md:2571
#: ./docs/master/helpers.md:2328
msgctxt "P"
msgid "Laravel's `Pipeline` facade provides a convenient way to \"pipe\" a given input through a series of invokable classes, closures, or callables, giving each class the opportunity to inspect or modify the input and invoke the next callable in the pipeline:"
msgstr ""

#: ./docs/10.x/helpers.md:2263
#: ./docs/11.x/helpers.md:2573
#: ./docs/master/helpers.md:2330
msgctxt "CODE: php"
msgid "use Closure;\n"
"use App\\Models\\User;\n"
"use Illuminate\\Support\\Facades\\Pipeline;\n\n"
"$user = Pipeline::send($user)\n"
"            ->through([\n"
"                function (User $user, Closure $next) {\n"
"                    // ...\n\n"
"                    return $next($user);\n"
"                },\n"
"                function (User $user, Closure $next) {\n"
"                    // ...\n\n"
"                    return $next($user);\n"
"                },\n"
"            ])\n"
"            ->then(fn (User $user) => $user);"
msgstr ""

#: ./docs/8.x/helpers.md:2267
#: ./docs/9.x/helpers.md:2734
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-padleft\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2268
#: ./docs/9.x/helpers.md:2735
msgctxt "H4"
msgid "`padLeft` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2270
#: ./docs/9.x/helpers.md:2737
msgctxt "P"
msgid "The `padLeft` method wraps PHP's `str_pad` function, padding the left side of a string with another string until the final string reaches the desired length:"
msgstr ""

#: ./docs/8.x/helpers.md:2272
#: ./docs/9.x/helpers.md:2739
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$padded = Str::of('James')->padLeft(10, '-=');\n\n"
"// '-=-=-James'\n\n"
"$padded = Str::of('James')->padLeft(10);\n\n"
"// '     James'"
msgstr ""

#: ./docs/9.x/helpers.md:2272
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-class-basename\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:2273
msgctxt "H4"
msgid "`classBasename` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:2275
msgctxt "P"
msgid "The `classBasename` method returns the class name of the given class with the class's namespace removed:"
msgstr ""

#: ./docs/9.x/helpers.md:2277
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$class = Str::of('Foo\\Bar\\Baz')->classBasename();\n\n"
"// Baz"
msgstr ""

#: ./docs/8.x/helpers.md:2282
#: ./docs/9.x/helpers.md:2749
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-padright\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2283
#: ./docs/9.x/helpers.md:2750
msgctxt "H4"
msgid "`padRight` {.collection-method}"
msgstr ""

#: ./docs/10.x/helpers.md:2284
#: ./docs/11.x/helpers.md:2594
#: ./docs/master/helpers.md:2351
msgctxt "P"
msgid "As you can see, each invokable class or closure in the pipeline is provided the input and a `$next` closure. Invoking the `$next` closure will invoke the next callable in the pipeline. As you may have noticed, this is very similar to [middleware](/docs/{{version}}/middleware)."
msgstr ""

#: ./docs/8.x/helpers.md:2285
#: ./docs/9.x/helpers.md:2752
msgctxt "P"
msgid "The `padRight` method wraps PHP's `str_pad` function, padding the right side of a string with another string until the final string reaches the desired length:"
msgstr ""

#: ./docs/10.x/helpers.md:2286
#: ./docs/11.x/helpers.md:2596
#: ./docs/master/helpers.md:2353
msgctxt "P"
msgid "When the last callable in the pipeline invokes the `$next` closure, the callable provided to the `then` method will be invoked. Typically, this callable will simply return the given input."
msgstr ""

#: ./docs/8.x/helpers.md:2287
#: ./docs/9.x/helpers.md:2754
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$padded = Str::of('James')->padRight(10, '-');\n\n"
"// 'James-----'\n\n"
"$padded = Str::of('James')->padRight(10);\n\n"
"// 'James     '"
msgstr ""

#: ./docs/10.x/helpers.md:2288
#: ./docs/11.x/helpers.md:2598
#: ./docs/master/helpers.md:2355
msgctxt "P"
msgid "Of course, as discussed previously, you are not limited to providing closures to your pipeline. You may also provide invokable classes. If a class name is provided, the class will be instantiated via Laravel's [service container](/docs/{{version}}/container), allowing dependencies to be injected into the invokable class:"
msgstr ""

#: ./docs/10.x/helpers.md:2290
#: ./docs/11.x/helpers.md:2600
#: ./docs/master/helpers.md:2357
msgctxt "CODE: php"
msgid "$user = Pipeline::send($user)\n"
"            ->through([\n"
"                GenerateProfilePhoto::class,\n"
"                ActivateSubscription::class,\n"
"                SendWelcomeEmail::class,\n"
"            ])\n"
"            ->then(fn (User $user) => $user);"
msgstr ""

#: ./docs/8.x/helpers.md:2297
#: ./docs/9.x/helpers.md:2764
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-pipe\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2298
#: ./docs/9.x/helpers.md:2765
msgctxt "H4"
msgid "`pipe` {.collection-method}"
msgstr ""

#: ./docs/10.x/helpers.md:2300
#: ./docs/11.x/helpers.md:2610
#: ./docs/master/helpers.md:2367
#~ msgctxt "P"
#~ msgid "<a name=\"sleep\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2300
#: ./docs/9.x/helpers.md:2767
msgctxt "P"
msgid "The `pipe` method allows you to transform the string by passing its current value to the given callable:"
msgstr ""

#: ./docs/10.x/helpers.md:2301
#: ./docs/11.x/helpers.md:2611
#: ./docs/master/helpers.md:2368
msgctxt "H3"
msgid "Sleep"
msgstr ""

#: ./docs/8.x/helpers.md:2302
#: ./docs/9.x/helpers.md:2769
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$hash = Str::of('Laravel')->pipe('md5')->prepend('Checksum: ');\n\n"
"// 'Checksum: a5c95b86291ea299fcbe64458ed12702'\n\n"
"$closure = Str::of('foo')->pipe(function ($str) {\n"
"    return 'bar';\n"
"});\n\n"
"// 'bar'"
msgstr ""

#: ./docs/10.x/helpers.md:2303
#: ./docs/11.x/helpers.md:2613
#: ./docs/master/helpers.md:2370
msgctxt "P"
msgid "Laravel's `Sleep` class is a light-weight wrapper around PHP's native `sleep` and `usleep` functions, offering greater testability while also exposing a developer friendly API for working with time:"
msgstr ""

#: ./docs/10.x/helpers.md:2305
#: ./docs/11.x/helpers.md:2615
#: ./docs/master/helpers.md:2372
msgctxt "CODE"
msgid "use Illuminate\\Support\\Sleep;\n\n"
"$waiting = true;\n\n"
"while ($waiting) {\n"
"    Sleep::for(1)->second();\n\n"
"    $waiting = /* ... */;\n"
"}"
msgstr ""

#: ./docs/8.x/helpers.md:2314
#: ./docs/9.x/helpers.md:2781
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-plural\"></a>"
#~ msgstr ""

#: ./docs/10.x/helpers.md:2315
#: ./docs/11.x/helpers.md:2625
#: ./docs/master/helpers.md:2382
msgctxt "P"
msgid "The `Sleep` class offers a variety of methods that allow you to work with different units of time:"
msgstr ""

#: ./docs/8.x/helpers.md:2315
#: ./docs/9.x/helpers.md:2782
msgctxt "H4"
msgid "`plural` {.collection-method}"
msgstr ""

#: ./docs/10.x/helpers.md:2317
#: ./docs/master/helpers.md:2384
msgctxt "CODE"
msgid "// Pause execution for 90 seconds...\n"
"Sleep::for(1.5)->minutes();\n\n"
"// Pause execution for 2 seconds...\n"
"Sleep::for(2)->seconds();\n\n"
"// Pause execution for 500 milliseconds...\n"
"Sleep::for(500)->milliseconds();\n\n"
"// Pause execution for 5,000 microseconds...\n"
"Sleep::for(5000)->microseconds();\n\n"
"// Pause execution until a given time...\n"
"Sleep::until(now()->addMinute());\n\n"
"// Alias of PHP's native \"sleep\" function...\n"
"Sleep::sleep(2);\n\n"
"// Alias of PHP's native \"usleep\" function...\n"
"Sleep::usleep(5000);"
msgstr ""

#: ./docs/8.x/helpers.md:2317
msgctxt "P"
msgid "The `plural` method converts a singular word string to its plural form. This function currently only supports the English language:"
msgstr ""

#: ./docs/8.x/helpers.md:2319
#: ./docs/9.x/helpers.md:2786
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$plural = Str::of('car')->plural();\n\n"
"// cars\n\n"
"$plural = Str::of('child')->plural();\n\n"
"// children"
msgstr ""

#: ./docs/8.x/helpers.md:2331
#: ./docs/9.x/helpers.md:2798
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$plural = Str::of('child')->plural(2);\n\n"
"// children\n\n"
"$plural = Str::of('child')->plural(1);\n\n"
"// child"
msgstr ""

#: ./docs/9.x/helpers.md:2332
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-excerpt\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:2333
msgctxt "H4"
msgid "`excerpt` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:2335
msgctxt "P"
msgid "The `excerpt` method extracts an excerpt from the string that matches the first instance of a phrase within that string:"
msgstr ""

#: ./docs/9.x/helpers.md:2337
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$excerpt = Str::of('This is my name')->excerpt('my', [\n"
"    'radius' => 3\n"
"]);\n\n"
"// '...is my na...'"
msgstr ""

#: ./docs/10.x/helpers.md:2338
#: ./docs/11.x/helpers.md:2654
#: ./docs/master/helpers.md:2405
msgctxt "P"
msgid "To easily combine units of time, you may use the `and` method:"
msgstr ""

#: ./docs/10.x/helpers.md:2340
#: ./docs/11.x/helpers.md:2656
#: ./docs/master/helpers.md:2407
msgctxt "CODE"
msgid "Sleep::for(1)->second()->and(10)->milliseconds();"
msgstr ""

#: ./docs/8.x/helpers.md:2341
#: ./docs/9.x/helpers.md:2808
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-prepend\"></a>"
#~ msgstr ""

#: ./docs/10.x/helpers.md:2342
#: ./docs/11.x/helpers.md:2658
#: ./docs/master/helpers.md:2409
#~ msgctxt "P"
#~ msgid "<a name=\"testing-sleep\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2342
#: ./docs/9.x/helpers.md:2809
msgctxt "H4"
msgid "`prepend` {.collection-method}"
msgstr ""

#: ./docs/10.x/helpers.md:2343
#: ./docs/11.x/helpers.md:2659
#: ./docs/master/helpers.md:2410
msgctxt "H4"
msgid "Testing Sleep"
msgstr ""

#: ./docs/8.x/helpers.md:2344
#: ./docs/9.x/helpers.md:2811
msgctxt "P"
msgid "The `prepend` method prepends the given values onto the string:"
msgstr ""

#: ./docs/10.x/helpers.md:2345
#: ./docs/11.x/helpers.md:2661
#: ./docs/master/helpers.md:2412
msgctxt "P"
msgid "When testing code that utilizes the `Sleep` class or PHP's native sleep functions, your test will pause execution. As you might expect, this makes your test suite significantly slower. For example, imagine you are testing the following code:"
msgstr ""

#: ./docs/8.x/helpers.md:2346
#: ./docs/9.x/helpers.md:2813
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Framework')->prepend('Laravel ');\n\n"
"// Laravel Framework"
msgstr ""

#: ./docs/10.x/helpers.md:2347
#: ./docs/11.x/helpers.md:2663
#: ./docs/master/helpers.md:2414
msgctxt "CODE"
msgid "$waiting = /* ... */;\n\n"
"$seconds = 1;\n\n"
"while ($waiting) {\n"
"    Sleep::for($seconds++)->seconds();\n\n"
"    $waiting = /* ... */;\n"
"}"
msgstr ""

#: ./docs/9.x/helpers.md:2347
msgctxt "P"
msgid "In addition, you may use the `omission` option to change the string that will be prepended and appended to the truncated string:"
msgstr ""

#: ./docs/9.x/helpers.md:2349
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$excerpt = Str::of('This is my name')->excerpt('name', [\n"
"    'radius' => 3,\n"
"    'omission' => '(...) '\n"
"]);\n\n"
"// '(...) my name'"
msgstr ""

#: ./docs/8.x/helpers.md:2352
#: ./docs/9.x/helpers.md:2819
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-remove\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2353
#: ./docs/9.x/helpers.md:2820
msgctxt "H4"
msgid "`remove` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2355
#: ./docs/9.x/helpers.md:2822
msgctxt "P"
msgid "The `remove` method removes the given value or array of values from the string:"
msgstr ""

#: ./docs/10.x/helpers.md:2357
#: ./docs/11.x/helpers.md:2673
#: ./docs/master/helpers.md:2424
msgctxt "P"
msgid "Typically, testing this code would take *at least* one second. Luckily, the `Sleep` class allows us to \"fake\" sleeping so that our test suite stays fast:"
msgstr ""

#: ./docs/8.x/helpers.md:2357
#: ./docs/9.x/helpers.md:2824
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Arkansas is quite beautiful!')->remove('quite');\n\n"
"// Arkansas is beautiful!"
msgstr ""

#: ./docs/10.x/helpers.md:2359
#: ./docs/11.x/helpers.md:2683
#: ./docs/master/helpers.md:2434
msgctxt "CODE"
msgid "public function test_it_waits_until_ready()\n"
"{\n"
"    Sleep::fake();\n\n"
"    // ...\n"
"}"
msgstr ""

#: ./docs/11.x/helpers.md:2360
#~ msgctxt "P"
#~ msgid "<a name=\"method-when\"></a>"
#~ msgstr ""

#: ./docs/11.x/helpers.md:2361
msgctxt "H4"
msgid "`when()` {.collection-method}"
msgstr ""

#: ./docs/11.x/helpers.md:2363
msgctxt "P"
msgid "The `when` function returns the value it is given if a given condition evaluates to `true`. Otherwise, `null` is returned. If a closure is passed as the second argument to the function, the closure will be executed and its returned value will be returned:"
msgstr ""

#: ./docs/8.x/helpers.md:2363
#: ./docs/9.x/helpers.md:2830
msgctxt "P"
msgid "You may also pass `false` as a second parameter to ignore case when removing strings."
msgstr ""

#: ./docs/11.x/helpers.md:2365
msgctxt "CODE"
msgid "$value = when(true, 'Hello World');\n\n"
"$value = when(true, fn () => 'Hello World');"
msgstr ""

#: ./docs/8.x/helpers.md:2365
#: ./docs/9.x/helpers.md:2832
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-replace\"></a>"
#~ msgstr ""

#: ./docs/10.x/helpers.md:2366
#: ./docs/11.x/helpers.md:2692
#: ./docs/master/helpers.md:2443
msgctxt "P"
msgid "When faking the `Sleep` class, the actual execution pause is by-passed, leading to a substantially faster test."
msgstr ""

#: ./docs/8.x/helpers.md:2366
#: ./docs/9.x/helpers.md:2833
msgctxt "H4"
msgid "`replace` {.collection-method}"
msgstr ""

#: ./docs/10.x/helpers.md:2368
#: ./docs/11.x/helpers.md:2694
#: ./docs/master/helpers.md:2445
msgctxt "P"
msgid "Once the `Sleep` class has been faked, it is possible to make assertions against the expected \"sleeps\" that should have occurred. To illustrate this, let's imagine we are testing code that pauses execution three times, with each pause increasing by a single second. Using the `assertSequence` method, we can assert that our code \"slept\" for the proper amount of time while keeping our test fast:"
msgstr ""

#: ./docs/8.x/helpers.md:2368
#: ./docs/9.x/helpers.md:2835
msgctxt "P"
msgid "The `replace` method replaces a given string within the string:"
msgstr ""

#: ./docs/11.x/helpers.md:2369
msgctxt "P"
msgid "The `when` function is primarily useful for conditionally rendering HTML attributes:"
msgstr ""

#: ./docs/10.x/helpers.md:2370
#: ./docs/master/helpers.md:2461
msgctxt "CODE"
msgid "public function test_it_checks_if_ready_four_times()\n"
"{\n"
"    Sleep::fake();\n\n"
"    // ...\n\n"
"    Sleep::assertSequence([\n"
"        Sleep::for(1)->second(),\n"
"        Sleep::for(2)->seconds(),\n"
"        Sleep::for(3)->seconds(),\n"
"    ]);\n"
"}"
msgstr ""

#: ./docs/8.x/helpers.md:2370
#: ./docs/9.x/helpers.md:2837
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$replaced = Str::of('Laravel 6.x')->replace('6.x', '7.x');\n\n"
"// Laravel 7.x"
msgstr ""

#: ./docs/11.x/helpers.md:2371
msgctxt "CODE: blade"
msgid "<div {!! when($condition, 'wire:poll=\"calculate\"') !!}>\n"
"    ...\n"
"</div>"
msgstr ""

#: ./docs/8.x/helpers.md:2376
#: ./docs/9.x/helpers.md:2843
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-replace-array\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2377
#: ./docs/9.x/helpers.md:2844
msgctxt "H4"
msgid "`replaceArray` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2379
#: ./docs/9.x/helpers.md:2846
msgctxt "P"
msgid "The `replaceArray` method replaces a given value in the string sequentially using an array:"
msgstr ""

#: ./docs/8.x/helpers.md:2381
#: ./docs/9.x/helpers.md:2848
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = 'The event will take place between ? and ?';\n\n"
"$replaced = Str::of($string)->replaceArray('?', ['8:30', '9:00']);\n\n"
"// The event will take place between 8:30 and 9:00"
msgstr ""

#: ./docs/10.x/helpers.md:2383
#: ./docs/11.x/helpers.md:2725
#: ./docs/master/helpers.md:2476
msgctxt "P"
msgid "Of course, the `Sleep` class offers a variety of other assertions you may use when testing:"
msgstr ""

#: ./docs/10.x/helpers.md:2385
#: ./docs/11.x/helpers.md:2727
#: ./docs/master/helpers.md:2478
msgctxt "CODE"
msgid "use Carbon\\CarbonInterval as Duration;\n"
"use Illuminate\\Support\\Sleep;\n\n"
"// Assert that sleep was called 3 times...\n"
"Sleep::assertSleptTimes(3);\n\n"
"// Assert against the duration of sleep...\n"
"Sleep::assertSlept(function (Duration $duration): bool {\n"
"    return /* ... */;\n"
"}, times: 1);\n\n"
"// Assert that the Sleep class was never invoked...\n"
"Sleep::assertNeverSlept();\n\n"
"// Assert that, even if Sleep was called, no execution paused occurred...\n"
"Sleep::assertInsomniac();"
msgstr ""

#: ./docs/8.x/helpers.md:2389
#: ./docs/9.x/helpers.md:2856
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-replace-first\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2390
#: ./docs/9.x/helpers.md:2857
msgctxt "H4"
msgid "`replaceFirst` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2392
#: ./docs/9.x/helpers.md:2859
msgctxt "P"
msgid "The `replaceFirst` method replaces the first occurrence of a given value in a string:"
msgstr ""

#: ./docs/8.x/helpers.md:2394
#: ./docs/9.x/helpers.md:2861
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$replaced = Str::of('the quick brown fox jumps over the lazy dog')->replaceFirst('the', 'a');\n\n"
"// a quick brown fox jumps over the lazy dog"
msgstr ""

#: ./docs/8.x/helpers.md:2400
#: ./docs/9.x/helpers.md:2867
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-replace-last\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2401
#: ./docs/9.x/helpers.md:2868
msgctxt "H4"
msgid "`replaceLast` {.collection-method}"
msgstr ""

#: ./docs/10.x/helpers.md:2402
#: ./docs/11.x/helpers.md:2744
#: ./docs/master/helpers.md:2495
msgctxt "P"
msgid "Sometimes it may be useful to perform an action whenever a fake sleep occurs in your application code. To achieve this, you may provide a callback to the `whenFakingSleep` method. In the following example, we use Laravel's [time manipulation helpers](/docs/{{version}}/mocking#interacting-with-time) to instantly progress time by the duration of each sleep:"
msgstr ""

#: ./docs/8.x/helpers.md:2403
#: ./docs/9.x/helpers.md:2870
msgctxt "P"
msgid "The `replaceLast` method replaces the last occurrence of a given value in a string:"
msgstr ""

#: ./docs/10.x/helpers.md:2404
#: ./docs/11.x/helpers.md:2746
#: ./docs/master/helpers.md:2497
msgctxt "CODE: php"
msgid "use Carbon\\CarbonInterval as Duration;\n\n"
"$this->freezeTime();\n\n"
"Sleep::fake();\n\n"
"Sleep::whenFakingSleep(function (Duration $duration) {\n"
"    // Progress time when faking sleep...\n"
"    $this->travel($duration->totalMilliseconds)->milliseconds();\n"
"});"
msgstr ""

#: ./docs/8.x/helpers.md:2405
#: ./docs/9.x/helpers.md:2872
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$replaced = Str::of('the quick brown fox jumps over the lazy dog')->replaceLast('the', 'a');\n\n"
"// the quick brown fox jumps over a lazy dog"
msgstr ""

#: ./docs/8.x/helpers.md:2411
#: ./docs/9.x/helpers.md:2878
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-replace-matches\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2412
#: ./docs/9.x/helpers.md:2879
msgctxt "H4"
msgid "`replaceMatches` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2414
#: ./docs/9.x/helpers.md:2881
msgctxt "P"
msgid "The `replaceMatches` method replaces all portions of a string matching a pattern with the given replacement string:"
msgstr ""

#: ./docs/8.x/helpers.md:2416
#: ./docs/9.x/helpers.md:2883
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$replaced = Str::of('(+1) 501-555-1000')->replaceMatches('/[^A-Za-z0-9]++/', '')\n\n"
"// '15015551000'"
msgstr ""

#: ./docs/10.x/helpers.md:2417
#: ./docs/11.x/helpers.md:2771
#: ./docs/master/helpers.md:2510
msgctxt "P"
msgid "Laravel uses the `Sleep` class internally whenever it is pausing execution. For example, the [`retry`](#method-retry) helper uses the `Sleep` class when sleeping, allowing for improved testability when using that helper."
msgstr ""

#: ./docs/9.x/helpers.md:2418
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-headline\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:2419
msgctxt "H4"
msgid "`headline` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:2421
msgctxt "P"
msgid "The `headline` method will convert strings delimited by casing, hyphens, or underscores into a space delimited string with each word's first letter capitalized:"
msgstr ""

#: ./docs/8.x/helpers.md:2422
#: ./docs/9.x/helpers.md:2889
msgctxt "P"
msgid "The `replaceMatches` method also accepts a closure that will be invoked with each portion of the string matching the given pattern, allowing you to perform the replacement logic within the closure and return the replaced value:"
msgstr ""

#: ./docs/9.x/helpers.md:2423
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$headline = Str::of('taylor_otwell')->headline();\n\n"
"// Taylor Otwell\n\n"
"$headline = Str::of('EmailNotificationSent')->headline();\n\n"
"// Email Notification Sent"
msgstr ""

#: ./docs/8.x/helpers.md:2424
#: ./docs/9.x/helpers.md:2891
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$replaced = Str::of('123')->replaceMatches('/\\d/', function ($match) {\n"
"    return '['.$match[0].']';\n"
"});\n\n"
"// '[1][2][3]'"
msgstr ""

#: ./docs/11.x/helpers.md:2426
#~ msgctxt "P"
#~ msgid "<a name=\"deferred-functions\"></a>"
#~ msgstr ""

#: ./docs/11.x/helpers.md:2427
msgctxt "H3"
msgid "Deferred Functions"
msgstr ""

#: ./docs/11.x/helpers.md:2430
msgctxt "P"
msgid "Deferred functions are currently in beta while we gather community feedback."
msgstr ""

#: ./docs/11.x/helpers.md:2432
msgctxt "P"
msgid "While Laravel's [queued jobs](/docs/{{version}}/queues) allow you to queue tasks for background processing, sometimes you may have simple tasks you would like to defer without configuring or maintaining a long-running queue worker."
msgstr ""

#: ./docs/8.x/helpers.md:2432
#: ./docs/9.x/helpers.md:2899
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-rtrim\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2433
#: ./docs/9.x/helpers.md:2900
msgctxt "H4"
msgid "`rtrim` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:2433
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-inline-markdown\"></a>"
#~ msgstr ""

#: ./docs/11.x/helpers.md:2434
msgctxt "P"
msgid "Deferred functions allow you to defer the execution of a closure until after the HTTP response has been sent to the user, keeping your application feeling fast and responsive. To defer the execution of a closure, simply pass the closure to the `Illuminate\\Support\\defer` function:"
msgstr ""

#: ./docs/9.x/helpers.md:2434
msgctxt "H4"
msgid "`inlineMarkdown` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2435
#: ./docs/9.x/helpers.md:2902
msgctxt "P"
msgid "The `rtrim` method trims the right side of the given string:"
msgstr ""

#: ./docs/11.x/helpers.md:2436
msgctxt "CODE: php"
msgid "use App\\Services\\Metrics;\n"
"use Illuminate\\Http\\Request;\n"
"use Illuminate\\Support\\Facades\\Route;\n"
"use function Illuminate\\Support\\defer;\n\n"
"Route::post('/orders', function (Request $request) {\n"
"    // Create order...\n\n"
"    defer(fn () => Metrics::reportOrder($order));\n\n"
"    return $order;\n"
"});"
msgstr ""

#: ./docs/9.x/helpers.md:2436
msgctxt "P"
msgid "The `inlineMarkdown` method converts GitHub flavored Markdown into inline HTML using [CommonMark](https://commonmark.thephpleague.com/). However, unlike the `markdown` method, it does not wrap all generated HTML in a block-level element:"
msgstr ""

#: ./docs/8.x/helpers.md:2437
#: ./docs/9.x/helpers.md:2904
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('  Laravel  ')->rtrim();\n\n"
"// '  Laravel'\n\n"
"$string = Str::of('/Laravel/')->rtrim('/');\n\n"
"// '/Laravel'"
msgstr ""

#: ./docs/9.x/helpers.md:2438
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$html = Str::of('**Laravel**')->inlineMarkdown();\n\n"
"// <strong>Laravel</strong>"
msgstr ""

#: ./docs/8.x/helpers.md:2447
#: ./docs/9.x/helpers.md:2914
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-scan\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2448
#: ./docs/9.x/helpers.md:2915
msgctxt "H4"
msgid "`scan` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2450
#: ./docs/9.x/helpers.md:2917
msgctxt "P"
msgid "The `scan` method parses input from a string into a collection according to a format supported by the [`sscanf` PHP function](https://www.php.net/manual/en/function.sscanf.php):"
msgstr ""

#: ./docs/11.x/helpers.md:2451
msgctxt "P"
msgid "By default, deferred functions will only be executed if the HTTP response, Artisan command, or queued job from which `Illuminate\\Support\\defer` is invoked completes successfully. This means that deferred functions will not be executed if a request results in a `4xx` or `5xx` HTTP response. If you would like a deferred function to always execute, you may chain the `always` method onto your deferred function:"
msgstr ""

#: ./docs/8.x/helpers.md:2452
#: ./docs/9.x/helpers.md:2919
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$collection = Str::of('filename.jpg')->scan('%[^.].%s');\n\n"
"// collect(['filename', 'jpg'])"
msgstr ""

#: ./docs/11.x/helpers.md:2453
msgctxt "CODE: php"
msgid "defer(fn () => Metrics::reportOrder($order))->always();"
msgstr ""

#: ./docs/11.x/helpers.md:2457
#~ msgctxt "P"
#~ msgid "<a name=\"cancelling-deferred-functions\"></a>"
#~ msgstr ""

#: ./docs/11.x/helpers.md:2458
msgctxt "H4"
msgid "Cancelling Deferred Functions"
msgstr ""

#: ./docs/8.x/helpers.md:2458
#: ./docs/9.x/helpers.md:2925
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-singular\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2459
#: ./docs/9.x/helpers.md:2926
msgctxt "H4"
msgid "`singular` {.collection-method}"
msgstr ""

#: ./docs/11.x/helpers.md:2460
msgctxt "P"
msgid "If you need to cancel a deferred function before it is executed, you can use the `forget` method to cancel the function by its name. To name a deferred function, provide a second argument to the `Illuminate\\Support\\defer` function:"
msgstr ""

#: ./docs/8.x/helpers.md:2461
msgctxt "P"
msgid "The `singular` method converts a string to its singular form. This function currently only supports the English language:"
msgstr ""

#: ./docs/11.x/helpers.md:2462
msgctxt "CODE: php"
msgid "defer(fn () => Metrics::report(), 'reportMetrics');\n\n"
"defer()->forget('reportMetrics');"
msgstr ""

#: ./docs/8.x/helpers.md:2463
#: ./docs/9.x/helpers.md:2930
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$singular = Str::of('cars')->singular();\n\n"
"// car\n\n"
"$singular = Str::of('children')->singular();\n\n"
"// child"
msgstr ""

#: ./docs/11.x/helpers.md:2468
#~ msgctxt "P"
#~ msgid "<a name=\"deferred-function-compatibility\"></a>"
#~ msgstr ""

#: ./docs/11.x/helpers.md:2469
msgctxt "H4"
msgid "Deferred Function Compatibility"
msgstr ""

#: ./docs/11.x/helpers.md:2471
msgctxt "P"
msgid "If you upgraded to Laravel 11.x from a Laravel 10.x application and your application's skeleton still contains an `app/Http/Kernel.php` file, you should add the `InvokeDeferredCallbacks` middleware to the beginning of the kernel's `$middleware` property:"
msgstr ""

#: ./docs/11.x/helpers.md:2473
msgctxt "CODE: php"
msgid "protected $middleware = [\n"
"    \\Illuminate\\Foundation\\Http\\Middleware\\InvokeDeferredCallbacks::class, // [tl! add]\n"
"    \\App\\Http\\Middleware\\TrustProxies::class,\n"
"    // ...\n"
"];"
msgstr ""

#: ./docs/8.x/helpers.md:2473
#: ./docs/9.x/helpers.md:2940
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-slug\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2474
#: ./docs/9.x/helpers.md:2941
msgctxt "H4"
msgid "`slug` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2476
#: ./docs/9.x/helpers.md:2943
msgctxt "P"
msgid "The `slug` method generates a URL friendly \"slug\" from the given string:"
msgstr ""

#: ./docs/8.x/helpers.md:2478
#: ./docs/9.x/helpers.md:2945
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$slug = Str::of('Laravel Framework')->slug('-');\n\n"
"// laravel-framework"
msgstr ""

#: ./docs/11.x/helpers.md:2481
#~ msgctxt "P"
#~ msgid "<a name=\"disabling-deferred-functions-in-tests\"></a>"
#~ msgstr ""

#: ./docs/11.x/helpers.md:2482
msgctxt "H4"
msgid "Disabling Deferred Functions in Tests"
msgstr ""

#: ./docs/11.x/helpers.md:2484
msgctxt "P"
msgid "When writing tests, it may be useful to disable deferred functions. You may call `withoutDefer` in your test to instruct Laravel to invoke all deferred functions immediately:"
msgstr ""

#: ./docs/8.x/helpers.md:2484
#: ./docs/9.x/helpers.md:2951
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-snake\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2485
#: ./docs/9.x/helpers.md:2952
msgctxt "H4"
msgid "`snake` {.collection-method}"
msgstr ""

#: ./docs/11.x/helpers.md:2486
msgctxt "CODE: php tab=Pest"
msgid "test('without defer', function () {\n"
"    $this->withoutDefer();\n\n"
"    // ...\n"
"});"
msgstr ""

#: ./docs/8.x/helpers.md:2487
#: ./docs/9.x/helpers.md:2954
msgctxt "P"
msgid "The `snake` method converts the given string to `snake_case`:"
msgstr ""

#: ./docs/8.x/helpers.md:2489
#: ./docs/9.x/helpers.md:2956
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::of('fooBar')->snake();\n\n"
"// foo_bar"
msgstr ""

#: ./docs/11.x/helpers.md:2494
msgctxt "CODE: php tab=PHPUnit"
msgid "use Tests\\TestCase;\n\n"
"class ExampleTest extends TestCase\n"
"{\n"
"    public function test_without_defer(): void\n"
"    {\n"
"        $this->withoutDefer();\n\n"
"        // ...\n"
"    }\n"
"}"
msgstr ""

#: ./docs/8.x/helpers.md:2495
#: ./docs/9.x/helpers.md:2962
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-split\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2496
#: ./docs/9.x/helpers.md:2963
msgctxt "H4"
msgid "`split` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2498
#: ./docs/9.x/helpers.md:2965
msgctxt "P"
msgid "The `split` method splits a string into a collection using a regular expression:"
msgstr ""

#: ./docs/8.x/helpers.md:2500
#: ./docs/9.x/helpers.md:2967
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$segments = Str::of('one, two, three')->split('/[\\s,]+/');\n\n"
"// collect([\"one\", \"two\", \"three\"])"
msgstr ""

#: ./docs/9.x/helpers.md:2505
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-is-json\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2506
#: ./docs/9.x/helpers.md:2984
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-start\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:2506
msgctxt "H4"
msgid "`isJson` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2507
#: ./docs/9.x/helpers.md:2985
msgctxt "H4"
msgid "`start` {.collection-method}"
msgstr ""

#: ./docs/11.x/helpers.md:2508
msgctxt "P"
msgid "If you would like to disable deferred functions for all tests within a test case, you may call the `withoutDefer` method from the `setUp` method on your base `TestCase` class:"
msgstr ""

#: ./docs/9.x/helpers.md:2508
msgctxt "P"
msgid "The `isJson` method determines if a given string is valid JSON:"
msgstr ""

#: ./docs/8.x/helpers.md:2509
#: ./docs/9.x/helpers.md:2987
msgctxt "P"
msgid "The `start` method adds a single instance of the given value to a string if it does not already start with that value:"
msgstr ""

#: ./docs/11.x/helpers.md:2510
msgctxt "CODE: php"
msgid "<?php\n\n"
"namespace Tests;\n\n"
"use Illuminate\\Foundation\\Testing\\TestCase as BaseTestCase;\n\n"
"abstract class TestCase extends BaseTestCase\n"
"{\n"
"    protected function setUp(): void// [tl! add:start]\n"
"    {\n"
"        parent::setUp();\n\n"
"        $this->withoutDefer();\n"
"    }// [tl! add:end]\n"
"}"
msgstr ""

#: ./docs/9.x/helpers.md:2510
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('[1,2,3]')->isJson();\n\n"
"// true\n\n"
"$result = Str::of('{\"first\": \"John\", \"last\": \"Doe\"}')->isJson();\n\n"
"// true\n\n"
"$result = Str::of('{first: \"John\", last: \"Doe\"}')->isJson();\n\n"
"// false"
msgstr ""

#: ./docs/8.x/helpers.md:2511
#: ./docs/9.x/helpers.md:2989
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$adjusted = Str::of('this/string')->start('/');\n\n"
"// /this/string\n\n"
"$adjusted = Str::of('/this/string')->start('/');\n\n"
"// /this/string"
msgstr ""

#: ./docs/8.x/helpers.md:2521
#: ./docs/9.x/helpers.md:2999
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-starts-with\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2522
#: ./docs/9.x/helpers.md:3000
msgctxt "H4"
msgid "`startsWith` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2524
#: ./docs/9.x/helpers.md:3002
msgctxt "P"
msgid "The `startsWith` method determines if the given string begins with the given value:"
msgstr ""

#: ./docs/9.x/helpers.md:2524
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-is-ulid\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:2525
msgctxt "H4"
msgid "`isUlid` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2526
#: ./docs/9.x/helpers.md:3004
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('This is my name')->startsWith('This');\n\n"
"// true"
msgstr ""

#: ./docs/9.x/helpers.md:2527
msgctxt "P"
msgid "The `isUlid` method determines if a given string is a ULID:"
msgstr ""

#: ./docs/9.x/helpers.md:2529
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('01gd6r360bp37zj17nxb55yv40')->isUlid();\n\n"
"// true\n\n"
"$result = Str::of('Taylor')->isUlid();\n\n"
"// false"
msgstr ""

#: ./docs/8.x/helpers.md:2532
#: ./docs/9.x/helpers.md:3010
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-studly\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2533
#: ./docs/9.x/helpers.md:3011
msgctxt "H4"
msgid "`studly` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2535
#: ./docs/9.x/helpers.md:3013
msgctxt "P"
msgid "The `studly` method converts the given string to `StudlyCase`:"
msgstr ""

#: ./docs/8.x/helpers.md:2537
#: ./docs/9.x/helpers.md:3015
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::of('foo_bar')->studly();\n\n"
"// FooBar"
msgstr ""

#: ./docs/8.x/helpers.md:2543
#: ./docs/9.x/helpers.md:3021
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-substr\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2544
#: ./docs/9.x/helpers.md:3022
msgctxt "H4"
msgid "`substr` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2546
#: ./docs/9.x/helpers.md:3024
msgctxt "P"
msgid "The `substr` method returns the portion of the string specified by the given start and length parameters:"
msgstr ""

#: ./docs/8.x/helpers.md:2548
#: ./docs/9.x/helpers.md:3026
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Laravel Framework')->substr(8);\n\n"
"// Framework\n\n"
"$string = Str::of('Laravel Framework')->substr(8, 5);\n\n"
"// Frame"
msgstr ""

#: ./docs/8.x/helpers.md:2558
#: ./docs/9.x/helpers.md:3036
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-substrreplace\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2559
#: ./docs/9.x/helpers.md:3037
msgctxt "H4"
msgid "`substrReplace` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2561
msgctxt "P"
msgid "The `substrReplace` method replaces text within a portion of a string, starting at the position specified by the third argument and replacing the number of characters specified by the fourth argument. Passing `0` to the method's fourth argument will insert the string at the specified position without replacing any of the existing characters in the string:"
msgstr ""

#: ./docs/8.x/helpers.md:2563
#: ./docs/9.x/helpers.md:3041
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('1300')->substrReplace(':', 2);\n\n"
"// 13:\n\n"
"$string = Str::of('The Framework')->substrReplace(' Laravel', 3, 0);\n\n"
"// The Laravel Framework"
msgstr ""

#: ./docs/9.x/helpers.md:2565
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-lcfirst\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:2566
msgctxt "H4"
msgid "`lcfirst` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:2568
msgctxt "P"
msgid "The `lcfirst` method returns the given string with the first character lowercased:"
msgstr ""

#: ./docs/9.x/helpers.md:2570
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Foo Bar')->lcfirst();\n\n"
"// foo Bar"
msgstr ""

#: ./docs/8.x/helpers.md:2573
#: ./docs/9.x/helpers.md:3066
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-tap\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2574
#: ./docs/9.x/helpers.md:3067
msgctxt "H4"
msgid "`tap` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2576
#: ./docs/9.x/helpers.md:3069
msgctxt "P"
msgid "The `tap` method passes the string to the given closure, allowing you to examine and interact with the string while not affecting the string itself. The original string is returned by the `tap` method regardless of what is returned by the closure:"
msgstr ""

#: ./docs/8.x/helpers.md:2578
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Laravel')\n"
"    ->append(' Framework')\n"
"    ->tap(function ($string) {\n"
"        dump('String after append: ' . $string);\n"
"    })\n"
"    ->upper();\n\n"
"// LARAVEL FRAMEWORK"
msgstr ""

#: ./docs/8.x/helpers.md:2589
#: ./docs/9.x/helpers.md:3082
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-test\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2590
#: ./docs/9.x/helpers.md:3083
msgctxt "H4"
msgid "`test` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2592
#: ./docs/9.x/helpers.md:3085
msgctxt "P"
msgid "The `test` method determines if a string matches the given regular expression pattern:"
msgstr ""

#: ./docs/8.x/helpers.md:2594
#: ./docs/9.x/helpers.md:3087
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$result = Str::of('Laravel Framework')->test('/Laravel/');\n\n"
"// true"
msgstr ""

#: ./docs/8.x/helpers.md:2600
#: ./docs/9.x/helpers.md:3093
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-title\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2601
#: ./docs/9.x/helpers.md:3094
msgctxt "H4"
msgid "`title` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2603
#: ./docs/9.x/helpers.md:3096
msgctxt "P"
msgid "The `title` method converts the given string to `Title Case`:"
msgstr ""

#: ./docs/8.x/helpers.md:2605
#: ./docs/9.x/helpers.md:3098
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$converted = Str::of('a nice title uses the correct case')->title();\n\n"
"// A Nice Title Uses The Correct Case"
msgstr ""

#: ./docs/8.x/helpers.md:2611
#: ./docs/9.x/helpers.md:3104
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-trim\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2612
#: ./docs/9.x/helpers.md:3105
msgctxt "H4"
msgid "`trim` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2614
#: ./docs/9.x/helpers.md:3107
msgctxt "P"
msgid "The `trim` method trims the given string:"
msgstr ""

#: ./docs/8.x/helpers.md:2616
#: ./docs/9.x/helpers.md:3109
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('  Laravel  ')->trim();\n\n"
"// 'Laravel'\n\n"
"$string = Str::of('/Laravel/')->trim('/');\n\n"
"// 'Laravel'"
msgstr ""

#: ./docs/8.x/helpers.md:2626
#: ./docs/9.x/helpers.md:3119
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-ucfirst\"></a>"
#~ msgstr ""

#: ./docs/11.x/helpers.md:2627
msgctxt "CODE"
msgid "// Return a value after sleeping...\n"
"$result = Sleep::for(1)->second()->then(fn () => 1 + 1);\n\n"
"// Sleep while a given value is true...\n"
"Sleep::for(1)->second()->while(fn () => shouldKeepSleeping());\n\n"
"// Pause execution for 90 seconds...\n"
"Sleep::for(1.5)->minutes();\n\n"
"// Pause execution for 2 seconds...\n"
"Sleep::for(2)->seconds();\n\n"
"// Pause execution for 500 milliseconds...\n"
"Sleep::for(500)->milliseconds();\n\n"
"// Pause execution for 5,000 microseconds...\n"
"Sleep::for(5000)->microseconds();\n\n"
"// Pause execution until a given time...\n"
"Sleep::until(now()->addMinute());\n\n"
"// Alias of PHP's native \"sleep\" function...\n"
"Sleep::sleep(2);\n\n"
"// Alias of PHP's native \"usleep\" function...\n"
"Sleep::usleep(5000);"
msgstr ""

#: ./docs/8.x/helpers.md:2627
#: ./docs/9.x/helpers.md:3120
msgctxt "H4"
msgid "`ucfirst` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2629
#: ./docs/9.x/helpers.md:3122
msgctxt "P"
msgid "The `ucfirst` method returns the given string with the first character capitalized:"
msgstr ""

#: ./docs/8.x/helpers.md:2631
#: ./docs/9.x/helpers.md:3124
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('foo bar')->ucfirst();\n\n"
"// Foo bar"
msgstr ""

#: ./docs/8.x/helpers.md:2637
#: ./docs/9.x/helpers.md:3141
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-upper\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2638
#: ./docs/9.x/helpers.md:3142
msgctxt "H4"
msgid "`upper` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2640
#: ./docs/9.x/helpers.md:3144
msgctxt "P"
msgid "The `upper` method converts the given string to uppercase:"
msgstr ""

#: ./docs/8.x/helpers.md:2642
#: ./docs/9.x/helpers.md:3146
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$adjusted = Str::of('laravel')->upper();\n\n"
"// LARAVEL"
msgstr ""

#: ./docs/8.x/helpers.md:2648
#: ./docs/9.x/helpers.md:3152
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-when\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2649
#: ./docs/9.x/helpers.md:3153
msgctxt "H4"
msgid "`when` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2651
#: ./docs/9.x/helpers.md:3155
msgctxt "P"
msgid "The `when` method invokes the given closure if a given condition is `true`. The closure will receive the fluent string instance:"
msgstr ""

#: ./docs/8.x/helpers.md:2653
#: ./docs/9.x/helpers.md:3157
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Taylor')\n"
"                ->when(true, function ($string) {\n"
"                    return $string->append(' Otwell');\n"
"                });\n\n"
"// 'Taylor Otwell'"
msgstr ""

#: ./docs/9.x/helpers.md:2661
msgctxt "P"
msgid "If needed, you may provide negative numbers as the third or fourth argument to the `mask` method, which will instruct the method to begin masking at the given distance from the end of the string:"
msgstr ""

#: ./docs/8.x/helpers.md:2662
#: ./docs/8.x/helpers.md:2705
#: ./docs/9.x/helpers.md:3166
#: ./docs/9.x/helpers.md:3209
msgctxt "P"
msgid "If necessary, you may pass another closure as the third parameter to the `when` method. This closure will execute if the condition parameter evaluates to `false`."
msgstr ""

#: ./docs/9.x/helpers.md:2663
msgctxt "CODE"
msgid "$string = Str::of('taylor@example.com')->mask('*', -15, 3);\n\n"
"// tay***@example.com\n\n"
"$string = Str::of('taylor@example.com')->mask('*', 4, -4);\n\n"
"// tayl**********.com"
msgstr ""

#: ./docs/8.x/helpers.md:2664
#: ./docs/9.x/helpers.md:3168
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-when-contains\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2665
#: ./docs/9.x/helpers.md:3169
msgctxt "H4"
msgid "`whenContains` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2667
#: ./docs/9.x/helpers.md:3171
msgctxt "P"
msgid "The `whenContains` method invokes the given closure if the string contains the given value. The closure will receive the fluent string instance:"
msgstr ""

#: ./docs/8.x/helpers.md:2669
#: ./docs/9.x/helpers.md:3173
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('tony stark')\n"
"            ->whenContains('tony', function ($string) {\n"
"                return $string->title();\n"
"            });\n\n"
"// 'Tony Stark'"
msgstr ""

#: ./docs/11.x/helpers.md:2675
#: ./docs/master/helpers.md:2426
msgctxt "CODE: php tab=Pest"
msgid "it('waits until ready', function () {\n"
"    Sleep::fake();\n\n"
"    // ...\n"
"});"
msgstr ""

#: ./docs/8.x/helpers.md:2678
#: ./docs/9.x/helpers.md:3182
msgctxt "P"
msgid "If necessary, you may pass another closure as the third parameter to the `when` method. This closure will execute if the string does not contain the given value."
msgstr ""

#: ./docs/8.x/helpers.md:2682
#: ./docs/9.x/helpers.md:3186
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('tony stark')\n"
"            ->whenContains(['tony', 'hulk'], function ($string) {\n"
"                return $string->title();\n"
"            });\n\n"
"// Tony Stark"
msgstr ""

#: ./docs/8.x/helpers.md:2691
#: ./docs/9.x/helpers.md:3195
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-when-contains-all\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2692
#: ./docs/9.x/helpers.md:3196
msgctxt "H4"
msgid "`whenContainsAll` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2694
#: ./docs/9.x/helpers.md:3198
msgctxt "P"
msgid "The `whenContainsAll` method invokes the given closure if the string contains all of the given sub-strings. The closure will receive the fluent string instance:"
msgstr ""

#: ./docs/11.x/helpers.md:2696
#: ./docs/master/helpers.md:2447
msgctxt "CODE: php tab=Pest"
msgid "it('checks if ready three times', function () {\n"
"    Sleep::fake();\n\n"
"    // ...\n\n"
"    Sleep::assertSequence([\n"
"        Sleep::for(1)->second(),\n"
"        Sleep::for(2)->seconds(),\n"
"        Sleep::for(3)->seconds(),\n"
"    ]);\n"
"}"
msgstr ""

#: ./docs/8.x/helpers.md:2696
#: ./docs/9.x/helpers.md:3200
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('tony stark')\n"
"                ->whenContainsAll(['tony', 'stark'], function ($string) {\n"
"                    return $string->title();\n"
"                });\n\n"
"// 'Tony Stark'"
msgstr ""

#: ./docs/8.x/helpers.md:2707
#: ./docs/9.x/helpers.md:3211
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-when-empty\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:2707
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-new-line\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2708
#: ./docs/9.x/helpers.md:3212
msgctxt "H4"
msgid "`whenEmpty` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:2708
msgctxt "H4"
msgid "`newLine` {.collection-method}"
msgstr ""

#: ./docs/11.x/helpers.md:2710
msgctxt "CODE: php tab=PHPUnit"
msgid "public function test_it_checks_if_ready_three_times()\n"
"{\n"
"    Sleep::fake();\n\n"
"    // ...\n\n"
"    Sleep::assertSequence([\n"
"        Sleep::for(1)->second(),\n"
"        Sleep::for(2)->seconds(),\n"
"        Sleep::for(3)->seconds(),\n"
"    ]);\n"
"}"
msgstr ""

#: ./docs/8.x/helpers.md:2710
#: ./docs/9.x/helpers.md:3214
msgctxt "P"
msgid "The `whenEmpty` method invokes the given closure if the string is empty. If the closure returns a value, that value will also be returned by the `whenEmpty` method. If the closure does not return a value, the fluent string instance will be returned:"
msgstr ""

#: ./docs/9.x/helpers.md:2710
msgctxt "P"
msgid "The `newLine` method appends an \"end of line\" character to a string:"
msgstr ""

#: ./docs/8.x/helpers.md:2712
#: ./docs/9.x/helpers.md:3216
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('  ')->whenEmpty(function ($string) {\n"
"    return $string->trim()->prepend('Laravel');\n"
"});\n\n"
"// 'Laravel'"
msgstr ""

#: ./docs/9.x/helpers.md:2712
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$padded = Str::of('Laravel')->newLine()->append('Framework');\n\n"
"// 'Laravel\n"
"//  Framework'"
msgstr ""

#: ./docs/8.x/helpers.md:2720
#: ./docs/9.x/helpers.md:3224
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-when-not-empty\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2721
#: ./docs/9.x/helpers.md:3225
msgctxt "H4"
msgid "`whenNotEmpty` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2723
#: ./docs/9.x/helpers.md:3227
msgctxt "P"
msgid "The `whenNotEmpty` method invokes the given closure if the string is not empty. If the closure returns a value, that value will also be returned by the `whenNotEmpty` method. If the closure does not return a value, the fluent string instance will be returned:"
msgstr ""

#: ./docs/8.x/helpers.md:2725
#: ./docs/9.x/helpers.md:3229
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Framework')->whenNotEmpty(function ($string) {\n"
"    return $string->prepend('Laravel ');\n"
"});\n\n"
"// 'Laravel Framework'"
msgstr ""

#: ./docs/8.x/helpers.md:2733
#: ./docs/9.x/helpers.md:3237
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-when-starts-with\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2734
#: ./docs/9.x/helpers.md:3238
msgctxt "H4"
msgid "`whenStartsWith` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2736
#: ./docs/9.x/helpers.md:3240
msgctxt "P"
msgid "The `whenStartsWith` method invokes the given closure if the string starts with the given sub-string. The closure will receive the fluent string instance:"
msgstr ""

#: ./docs/8.x/helpers.md:2738
#: ./docs/9.x/helpers.md:3242
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('disney world')->whenStartsWith('disney', function ($string) {\n"
"    return $string->title();\n"
"});\n\n"
"// 'Disney World'"
msgstr ""

#: ./docs/8.x/helpers.md:2746
#: ./docs/9.x/helpers.md:3250
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-when-ends-with\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2747
#: ./docs/9.x/helpers.md:3251
msgctxt "H4"
msgid "`whenEndsWith` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2749
#: ./docs/9.x/helpers.md:3253
msgctxt "P"
msgid "The `whenEndsWith` method invokes the given closure if the string ends with the given sub-string. The closure will receive the fluent string instance:"
msgstr ""

#: ./docs/8.x/helpers.md:2751
#: ./docs/9.x/helpers.md:3255
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('disney world')->whenEndsWith('world', function ($string) {\n"
"    return $string->title();\n"
"});\n\n"
"// 'Disney World'"
msgstr ""

#: ./docs/11.x/helpers.md:2759
msgctxt "P"
msgid "As progressing time is a common requirement, the `fake` method accepts a `syncWithCarbon` argument to keep Carbon in sync when sleeping within a test:"
msgstr ""

#: ./docs/8.x/helpers.md:2759
#: ./docs/9.x/helpers.md:3263
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-when-exactly\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2760
#: ./docs/9.x/helpers.md:3264
msgctxt "H4"
msgid "`whenExactly` {.collection-method}"
msgstr ""

#: ./docs/11.x/helpers.md:2761
msgctxt "CODE: php"
msgid "Sleep::fake(syncWithCarbon: true);\n\n"
"$start = now();\n\n"
"Sleep::for(1)->second();\n\n"
"$start->diffForHumans(); // 1 second ago"
msgstr ""

#: ./docs/8.x/helpers.md:2762
#: ./docs/9.x/helpers.md:3266
msgctxt "P"
msgid "The `whenExactly` method invokes the given closure if the string exactly matches the given string. The closure will receive the fluent string instance:"
msgstr ""

#: ./docs/8.x/helpers.md:2764
#: ./docs/9.x/helpers.md:3268
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('laravel')->whenExactly('laravel', function ($string) {\n"
"    return $string->title();\n"
"});\n\n"
"// 'Laravel'"
msgstr ""

#: ./docs/8.x/helpers.md:2772
#: ./docs/9.x/helpers.md:3289
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-when-is\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2773
#: ./docs/9.x/helpers.md:3290
msgctxt "H4"
msgid "`whenIs` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2775
#: ./docs/9.x/helpers.md:3292
msgctxt "P"
msgid "The `whenIs` method invokes the given closure if the string matches a given pattern. Asterisks may be used as wildcard values. The closure will receive the fluent string instance:"
msgstr ""

#: ./docs/8.x/helpers.md:2777
#: ./docs/9.x/helpers.md:3294
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('foo/bar')->whenIs('foo/*', function ($string) {\n"
"    return $string->append('/baz');\n"
"});\n\n"
"// 'foo/bar/baz'"
msgstr ""

#: ./docs/9.x/helpers.md:2784
msgctxt "P"
msgid "The `plural` method converts a singular word string to its plural form. This function supports [any of the languages support by Laravel's pluralizer](/docs/{{version}}/localization#pluralization-language):"
msgstr ""

#: ./docs/8.x/helpers.md:2785
#: ./docs/9.x/helpers.md:3302
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-when-is-ascii\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2786
#: ./docs/9.x/helpers.md:3303
msgctxt "H4"
msgid "`whenIsAscii` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2788
#: ./docs/9.x/helpers.md:3305
msgctxt "P"
msgid "The `whenIsAscii` method invokes the given closure if the string is 7 bit ASCII. The closure will receive the fluent string instance:"
msgstr ""

#: ./docs/8.x/helpers.md:2790
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('foo/bar')->whenIsAscii('laravel', function ($string) {\n"
"    return $string->title();\n"
"});\n\n"
"// 'Laravel'"
msgstr ""

#: ./docs/8.x/helpers.md:2798
#: ./docs/9.x/helpers.md:3328
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-when-is-uuid\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2799
#: ./docs/9.x/helpers.md:3329
msgctxt "H4"
msgid "`whenIsUuid` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2801
#: ./docs/9.x/helpers.md:3331
msgctxt "P"
msgid "The `whenIsUuid` method invokes the given closure if the string is a valid UUID. The closure will receive the fluent string instance:"
msgstr ""

#: ./docs/8.x/helpers.md:2803
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('foo/bar')->whenIsUuid('a0a2a2d2-0b87-4a18-83f2-2529882be2de', function ($string) {\n"
"    return $string->substr(0, 8);\n"
"});\n\n"
"// 'a0a2a2d2'"
msgstr ""

#: ./docs/8.x/helpers.md:2811
#: ./docs/9.x/helpers.md:3341
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-when-test\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2812
#: ./docs/9.x/helpers.md:3342
msgctxt "H4"
msgid "`whenTest` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2814
#: ./docs/9.x/helpers.md:3344
msgctxt "P"
msgid "The `whenTest` method invokes the given closure if the string matches the given regular expression. The closure will receive the fluent string instance:"
msgstr ""

#: ./docs/8.x/helpers.md:2816
#: ./docs/9.x/helpers.md:3346
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('laravel framework')->whenTest('/laravel/', function ($string) {\n"
"    return $string->title();\n"
"});\n\n"
"// 'Laravel Framework'"
msgstr ""

#: ./docs/8.x/helpers.md:2824
#: ./docs/9.x/helpers.md:3354
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-word-count\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2825
#: ./docs/9.x/helpers.md:3355
msgctxt "H4"
msgid "`wordCount` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2827
#: ./docs/9.x/helpers.md:3357
msgctxt "P"
msgid "The `wordCount` method returns the number of words that a string contains:"
msgstr ""

#: ./docs/8.x/helpers.md:2829
#: ./docs/9.x/helpers.md:3359
msgctxt "CODE: php"
msgid "use Illuminate\\Support\\Str;\n\n"
"Str::of('Hello, world!')->wordCount(); // 2"
msgstr ""

#: ./docs/8.x/helpers.md:2835
#: ./docs/9.x/helpers.md:3365
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-words\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2836
#: ./docs/9.x/helpers.md:3366
msgctxt "H4"
msgid "`words` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2838
#: ./docs/9.x/helpers.md:3368
msgctxt "P"
msgid "The `words` method limits the number of words in a string. If necessary, you may specify an additional string that will be appended to the truncated string:"
msgstr ""

#: ./docs/8.x/helpers.md:2840
#: ./docs/9.x/helpers.md:3370
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Perfectly balanced, as all things should be.')->words(3, ' >>>');\n\n"
"// Perfectly balanced, as >>>"
msgstr ""

#: ./docs/8.x/helpers.md:2846
#: ./docs/9.x/helpers.md:3376
#: ./docs/10.x/helpers.md:1441
#: ./docs/11.x/helpers.md:1565
#: ./docs/master/helpers.md:1456
#~ msgctxt "P"
#~ msgid "<a name=\"urls\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2849
#: ./docs/9.x/helpers.md:3379
#: ./docs/10.x/helpers.md:1444
#: ./docs/11.x/helpers.md:1568
#: ./docs/master/helpers.md:1459
#~ msgctxt "P"
#~ msgid "<a name=\"method-action\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2850
#: ./docs/9.x/helpers.md:3380
#: ./docs/10.x/helpers.md:1445
#: ./docs/11.x/helpers.md:1569
#: ./docs/master/helpers.md:1460
msgctxt "H4"
msgid "`action()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2852
#: ./docs/9.x/helpers.md:3382
#: ./docs/10.x/helpers.md:1447
#: ./docs/11.x/helpers.md:1571
#: ./docs/master/helpers.md:1462
msgctxt "P"
msgid "The `action` function generates a URL for the given controller action:"
msgstr ""

#: ./docs/8.x/helpers.md:2854
#: ./docs/9.x/helpers.md:3384
#: ./docs/10.x/helpers.md:1449
#: ./docs/11.x/helpers.md:1573
#: ./docs/master/helpers.md:1464
msgctxt "CODE"
msgid "use App\\Http\\Controllers\\HomeController;\n\n"
"$url = action([HomeController::class, 'index']);"
msgstr ""

#: ./docs/8.x/helpers.md:2858
#: ./docs/9.x/helpers.md:3388
#: ./docs/10.x/helpers.md:1453
#: ./docs/11.x/helpers.md:1577
#: ./docs/master/helpers.md:1468
msgctxt "P"
msgid "If the method accepts route parameters, you may pass them as the second argument to the method:"
msgstr ""

#: ./docs/8.x/helpers.md:2860
#: ./docs/9.x/helpers.md:3390
#: ./docs/10.x/helpers.md:1455
#: ./docs/11.x/helpers.md:1579
#: ./docs/master/helpers.md:1470
msgctxt "CODE"
msgid "$url = action([UserController::class, 'profile'], ['id' => 1]);"
msgstr ""

#: ./docs/8.x/helpers.md:2862
#: ./docs/9.x/helpers.md:3392
#: ./docs/10.x/helpers.md:1457
#: ./docs/11.x/helpers.md:1581
#: ./docs/master/helpers.md:1472
#~ msgctxt "P"
#~ msgid "<a name=\"method-asset\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2863
#: ./docs/9.x/helpers.md:3393
#: ./docs/10.x/helpers.md:1458
#: ./docs/11.x/helpers.md:1582
#: ./docs/master/helpers.md:1473
msgctxt "H4"
msgid "`asset()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2865
#: ./docs/9.x/helpers.md:3395
#: ./docs/10.x/helpers.md:1460
#: ./docs/11.x/helpers.md:1584
#: ./docs/master/helpers.md:1475
msgctxt "P"
msgid "The `asset` function generates a URL for an asset using the current scheme of the request (HTTP or HTTPS):"
msgstr ""

#: ./docs/8.x/helpers.md:2867
#: ./docs/9.x/helpers.md:3397
#: ./docs/10.x/helpers.md:1462
#: ./docs/11.x/helpers.md:1586
#: ./docs/master/helpers.md:1477
msgctxt "CODE"
msgid "$url = asset('img/photo.jpg');"
msgstr ""

#: ./docs/8.x/helpers.md:2869
#: ./docs/9.x/helpers.md:3399
#: ./docs/10.x/helpers.md:1464
#: ./docs/11.x/helpers.md:1588
#: ./docs/master/helpers.md:1479
msgctxt "P"
msgid "You can configure the asset URL host by setting the `ASSET_URL` variable in your `.env` file. This can be useful if you host your assets on an external service like Amazon S3 or another CDN:"
msgstr ""

#: ./docs/8.x/helpers.md:2871
#: ./docs/9.x/helpers.md:3401
#: ./docs/10.x/helpers.md:1466
#: ./docs/11.x/helpers.md:1590
#: ./docs/master/helpers.md:1481
msgctxt "CODE"
msgid "// ASSET_URL=http://example.com/assets\n\n"
"$url = asset('img/photo.jpg'); // http://example.com/assets/img/photo.jpg"
msgstr ""

#: ./docs/8.x/helpers.md:2875
#: ./docs/9.x/helpers.md:3405
#: ./docs/10.x/helpers.md:1470
#: ./docs/11.x/helpers.md:1594
#: ./docs/master/helpers.md:1485
#~ msgctxt "P"
#~ msgid "<a name=\"method-route\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2876
#: ./docs/9.x/helpers.md:3406
#: ./docs/10.x/helpers.md:1471
#: ./docs/11.x/helpers.md:1595
#: ./docs/master/helpers.md:1486
msgctxt "H4"
msgid "`route()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2878
#: ./docs/9.x/helpers.md:3408
#: ./docs/10.x/helpers.md:1473
#: ./docs/11.x/helpers.md:1597
#: ./docs/master/helpers.md:1488
msgctxt "P"
msgid "The `route` function generates a URL for a given [named route](/docs/{{version}}/routing#named-routes):"
msgstr ""

#: ./docs/8.x/helpers.md:2880
#: ./docs/9.x/helpers.md:3410
#: ./docs/10.x/helpers.md:1475
#: ./docs/11.x/helpers.md:1599
#: ./docs/master/helpers.md:1490
msgctxt "CODE"
msgid "$url = route('route.name');"
msgstr ""

#: ./docs/8.x/helpers.md:2882
#: ./docs/9.x/helpers.md:3412
#: ./docs/10.x/helpers.md:1477
#: ./docs/11.x/helpers.md:1601
#: ./docs/master/helpers.md:1492
msgctxt "P"
msgid "If the route accepts parameters, you may pass them as the second argument to the function:"
msgstr ""

#: ./docs/8.x/helpers.md:2884
#: ./docs/9.x/helpers.md:3414
#: ./docs/10.x/helpers.md:1479
#: ./docs/11.x/helpers.md:1603
#: ./docs/master/helpers.md:1494
msgctxt "CODE"
msgid "$url = route('route.name', ['id' => 1]);"
msgstr ""

#: ./docs/8.x/helpers.md:2886
#: ./docs/9.x/helpers.md:3416
#: ./docs/10.x/helpers.md:1481
#: ./docs/11.x/helpers.md:1605
#: ./docs/master/helpers.md:1496
msgctxt "P"
msgid "By default, the `route` function generates an absolute URL. If you wish to generate a relative URL, you may pass `false` as the third argument to the function:"
msgstr ""

#: ./docs/8.x/helpers.md:2888
#: ./docs/9.x/helpers.md:3418
#: ./docs/10.x/helpers.md:1483
#: ./docs/11.x/helpers.md:1607
#: ./docs/master/helpers.md:1498
msgctxt "CODE"
msgid "$url = route('route.name', ['id' => 1], false);"
msgstr ""

#: ./docs/8.x/helpers.md:2890
#: ./docs/9.x/helpers.md:3420
#: ./docs/10.x/helpers.md:1485
#: ./docs/11.x/helpers.md:1609
#: ./docs/master/helpers.md:1500
#~ msgctxt "P"
#~ msgid "<a name=\"method-secure-asset\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2891
#: ./docs/9.x/helpers.md:3421
#: ./docs/10.x/helpers.md:1486
#: ./docs/11.x/helpers.md:1610
#: ./docs/master/helpers.md:1501
msgctxt "H4"
msgid "`secure_asset()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2893
#: ./docs/9.x/helpers.md:3423
#: ./docs/10.x/helpers.md:1488
#: ./docs/11.x/helpers.md:1612
#: ./docs/master/helpers.md:1503
msgctxt "P"
msgid "The `secure_asset` function generates a URL for an asset using HTTPS:"
msgstr ""

#: ./docs/8.x/helpers.md:2895
#: ./docs/9.x/helpers.md:3425
#: ./docs/10.x/helpers.md:1490
#: ./docs/11.x/helpers.md:1614
#: ./docs/master/helpers.md:1505
msgctxt "CODE"
msgid "$url = secure_asset('img/photo.jpg');"
msgstr ""

#: ./docs/8.x/helpers.md:2897
#: ./docs/9.x/helpers.md:3427
#: ./docs/10.x/helpers.md:1492
#: ./docs/11.x/helpers.md:1616
#: ./docs/master/helpers.md:1507
#~ msgctxt "P"
#~ msgid "<a name=\"method-secure-url\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2898
#: ./docs/9.x/helpers.md:3428
#: ./docs/10.x/helpers.md:1493
#: ./docs/11.x/helpers.md:1617
#: ./docs/master/helpers.md:1508
msgctxt "H4"
msgid "`secure_url()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2900
#: ./docs/9.x/helpers.md:3430
#: ./docs/10.x/helpers.md:1495
#: ./docs/11.x/helpers.md:1619
#: ./docs/master/helpers.md:1510
msgctxt "P"
msgid "The `secure_url` function generates a fully qualified HTTPS URL to the given path. Additional URL segments may be passed in the function's second argument:"
msgstr ""

#: ./docs/8.x/helpers.md:2902
#: ./docs/9.x/helpers.md:3432
#: ./docs/10.x/helpers.md:1497
#: ./docs/11.x/helpers.md:1621
#: ./docs/master/helpers.md:1512
msgctxt "CODE"
msgid "$url = secure_url('user/profile');\n\n"
"$url = secure_url('user/profile', [1]);"
msgstr ""

#: ./docs/8.x/helpers.md:2906
#: ./docs/9.x/helpers.md:3447
#: ./docs/10.x/helpers.md:1512
#: ./docs/11.x/helpers.md:1636
#: ./docs/master/helpers.md:1527
#~ msgctxt "P"
#~ msgid "<a name=\"method-url\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2907
#: ./docs/9.x/helpers.md:3448
#: ./docs/10.x/helpers.md:1513
#: ./docs/11.x/helpers.md:1637
#: ./docs/master/helpers.md:1528
msgctxt "H4"
msgid "`url()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2909
#: ./docs/9.x/helpers.md:3450
#: ./docs/10.x/helpers.md:1515
#: ./docs/11.x/helpers.md:1639
#: ./docs/master/helpers.md:1530
msgctxt "P"
msgid "The `url` function generates a fully qualified URL to the given path:"
msgstr ""

#: ./docs/8.x/helpers.md:2911
#: ./docs/9.x/helpers.md:3452
#: ./docs/10.x/helpers.md:1517
#: ./docs/11.x/helpers.md:1641
#: ./docs/master/helpers.md:1532
msgctxt "CODE"
msgid "$url = url('user/profile');\n\n"
"$url = url('user/profile', [1]);"
msgstr ""

#: ./docs/8.x/helpers.md:2915
#: ./docs/9.x/helpers.md:3456
#: ./docs/10.x/helpers.md:1521
#: ./docs/11.x/helpers.md:1645
#: ./docs/master/helpers.md:1536
msgctxt "P"
msgid "If no path is provided, an `Illuminate\\Routing\\UrlGenerator` instance is returned:"
msgstr ""

#: ./docs/8.x/helpers.md:2917
#: ./docs/9.x/helpers.md:3458
#: ./docs/10.x/helpers.md:1523
#: ./docs/11.x/helpers.md:1647
#: ./docs/master/helpers.md:1538
msgctxt "CODE"
msgid "$current = url()->current();\n\n"
"$full = url()->full();\n\n"
"$previous = url()->previous();"
msgstr ""

#: ./docs/8.x/helpers.md:2923
#: ./docs/9.x/helpers.md:3464
#: ./docs/10.x/helpers.md:1529
#: ./docs/11.x/helpers.md:1653
#: ./docs/master/helpers.md:1544
#~ msgctxt "P"
#~ msgid "<a name=\"miscellaneous\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2926
#: ./docs/9.x/helpers.md:3467
#: ./docs/10.x/helpers.md:1532
#: ./docs/11.x/helpers.md:1656
#: ./docs/master/helpers.md:1547
#~ msgctxt "P"
#~ msgid "<a name=\"method-abort\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2927
#: ./docs/9.x/helpers.md:3468
#: ./docs/10.x/helpers.md:1533
#: ./docs/11.x/helpers.md:1657
#: ./docs/master/helpers.md:1548
msgctxt "H4"
msgid "`abort()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:2928
msgctxt "P"
msgid "The `singular` method converts a string to its singular form. This function supports [any of the languages support by Laravel's pluralizer](/docs/{{version}}/localization#pluralization-language):"
msgstr ""

#: ./docs/8.x/helpers.md:2929
#: ./docs/9.x/helpers.md:3470
#: ./docs/10.x/helpers.md:1535
#: ./docs/master/helpers.md:1550
msgctxt "P"
msgid "The `abort` function throws [an HTTP exception](/docs/{{version}}/errors#http-exceptions) which will be rendered by the [exception handler](/docs/{{version}}/errors#the-exception-handler):"
msgstr ""

#: ./docs/8.x/helpers.md:2931
#: ./docs/9.x/helpers.md:3472
#: ./docs/10.x/helpers.md:1537
#: ./docs/11.x/helpers.md:1661
#: ./docs/master/helpers.md:1552
msgctxt "CODE"
msgid "abort(403);"
msgstr ""

#: ./docs/8.x/helpers.md:2933
#: ./docs/9.x/helpers.md:3474
#: ./docs/10.x/helpers.md:1539
#: ./docs/11.x/helpers.md:1663
#: ./docs/master/helpers.md:1554
msgctxt "P"
msgid "You may also provide the exception's message and custom HTTP response headers that should be sent to the browser:"
msgstr ""

#: ./docs/8.x/helpers.md:2935
#: ./docs/9.x/helpers.md:3476
#: ./docs/10.x/helpers.md:1541
#: ./docs/11.x/helpers.md:1665
#: ./docs/master/helpers.md:1556
msgctxt "CODE"
msgid "abort(403, 'Unauthorized.', $headers);"
msgstr ""

#: ./docs/8.x/helpers.md:2937
#: ./docs/9.x/helpers.md:3478
#: ./docs/10.x/helpers.md:1543
#: ./docs/11.x/helpers.md:1667
#: ./docs/master/helpers.md:1558
#~ msgctxt "P"
#~ msgid "<a name=\"method-abort-if\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2938
#: ./docs/9.x/helpers.md:3479
#: ./docs/10.x/helpers.md:1544
#: ./docs/11.x/helpers.md:1668
#: ./docs/master/helpers.md:1559
msgctxt "H4"
msgid "`abort_if()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2940
#: ./docs/9.x/helpers.md:3481
#: ./docs/10.x/helpers.md:1546
#: ./docs/11.x/helpers.md:1670
#: ./docs/master/helpers.md:1561
msgctxt "P"
msgid "The `abort_if` function throws an HTTP exception if a given boolean expression evaluates to `true`:"
msgstr ""

#: ./docs/8.x/helpers.md:2942
#: ./docs/9.x/helpers.md:3483
#: ./docs/10.x/helpers.md:1548
#: ./docs/11.x/helpers.md:1672
#: ./docs/master/helpers.md:1563
msgctxt "CODE"
msgid "abort_if(! Auth::user()->isAdmin(), 403);"
msgstr ""

#: ./docs/8.x/helpers.md:2944
#: ./docs/8.x/helpers.md:2953
#: ./docs/9.x/helpers.md:3485
#: ./docs/9.x/helpers.md:3494
#: ./docs/10.x/helpers.md:1550
#: ./docs/10.x/helpers.md:1559
#: ./docs/11.x/helpers.md:1674
#: ./docs/11.x/helpers.md:1683
#: ./docs/master/helpers.md:1565
#: ./docs/master/helpers.md:1574
msgctxt "P"
msgid "Like the `abort` method, you may also provide the exception's response text as the third argument and an array of custom response headers as the fourth argument to the function."
msgstr ""

#: ./docs/8.x/helpers.md:2946
#: ./docs/9.x/helpers.md:3487
#: ./docs/10.x/helpers.md:1552
#: ./docs/11.x/helpers.md:1676
#: ./docs/master/helpers.md:1567
#~ msgctxt "P"
#~ msgid "<a name=\"method-abort-unless\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2947
#: ./docs/9.x/helpers.md:3488
#: ./docs/10.x/helpers.md:1553
#: ./docs/11.x/helpers.md:1677
#: ./docs/master/helpers.md:1568
msgctxt "H4"
msgid "`abort_unless()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2949
#: ./docs/9.x/helpers.md:3490
#: ./docs/10.x/helpers.md:1555
#: ./docs/11.x/helpers.md:1679
#: ./docs/master/helpers.md:1570
msgctxt "P"
msgid "The `abort_unless` function throws an HTTP exception if a given boolean expression evaluates to `false`:"
msgstr ""

#: ./docs/8.x/helpers.md:2951
#: ./docs/9.x/helpers.md:3492
#: ./docs/10.x/helpers.md:1557
#: ./docs/11.x/helpers.md:1681
#: ./docs/master/helpers.md:1572
msgctxt "CODE"
msgid "abort_unless(Auth::user()->isAdmin(), 403);"
msgstr ""

#: ./docs/8.x/helpers.md:2955
#: ./docs/9.x/helpers.md:3496
#: ./docs/10.x/helpers.md:1561
#: ./docs/11.x/helpers.md:1685
#: ./docs/master/helpers.md:1576
#~ msgctxt "P"
#~ msgid "<a name=\"method-app\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2956
#: ./docs/9.x/helpers.md:3497
#: ./docs/10.x/helpers.md:1562
#: ./docs/11.x/helpers.md:1686
#: ./docs/master/helpers.md:1577
msgctxt "H4"
msgid "`app()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2958
#: ./docs/9.x/helpers.md:3499
#: ./docs/10.x/helpers.md:1564
#: ./docs/11.x/helpers.md:1688
#: ./docs/master/helpers.md:1579
msgctxt "P"
msgid "The `app` function returns the [service container](/docs/{{version}}/container) instance:"
msgstr ""

#: ./docs/8.x/helpers.md:2960
#: ./docs/9.x/helpers.md:3501
#: ./docs/10.x/helpers.md:1566
#: ./docs/11.x/helpers.md:1690
#: ./docs/master/helpers.md:1581
msgctxt "CODE"
msgid "$container = app();"
msgstr ""

#: ./docs/8.x/helpers.md:2962
#: ./docs/9.x/helpers.md:3503
#: ./docs/10.x/helpers.md:1568
#: ./docs/11.x/helpers.md:1692
#: ./docs/master/helpers.md:1583
msgctxt "P"
msgid "You may pass a class or interface name to resolve it from the container:"
msgstr ""

#: ./docs/8.x/helpers.md:2964
#: ./docs/9.x/helpers.md:3505
#: ./docs/10.x/helpers.md:1570
#: ./docs/11.x/helpers.md:1694
#: ./docs/master/helpers.md:1585
msgctxt "CODE"
msgid "$api = app('HelpSpot\\API');"
msgstr ""

#: ./docs/8.x/helpers.md:2966
#: ./docs/9.x/helpers.md:3507
#: ./docs/10.x/helpers.md:1572
#: ./docs/11.x/helpers.md:1696
#: ./docs/master/helpers.md:1587
#~ msgctxt "P"
#~ msgid "<a name=\"method-auth\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2967
#: ./docs/9.x/helpers.md:3508
#: ./docs/10.x/helpers.md:1573
#: ./docs/11.x/helpers.md:1697
#: ./docs/master/helpers.md:1588
msgctxt "H4"
msgid "`auth()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2969
#: ./docs/9.x/helpers.md:3510
#: ./docs/10.x/helpers.md:1575
#: ./docs/11.x/helpers.md:1699
#: ./docs/master/helpers.md:1590
msgctxt "P"
msgid "The `auth` function returns an [authenticator](/docs/{{version}}/authentication) instance. You may use it as an alternative to the `Auth` facade:"
msgstr ""

#: ./docs/8.x/helpers.md:2971
#: ./docs/9.x/helpers.md:3512
#: ./docs/10.x/helpers.md:1577
#: ./docs/11.x/helpers.md:1701
#: ./docs/master/helpers.md:1592
msgctxt "CODE"
msgid "$user = auth()->user();"
msgstr ""

#: ./docs/8.x/helpers.md:2973
#: ./docs/9.x/helpers.md:3514
#: ./docs/10.x/helpers.md:1579
#: ./docs/11.x/helpers.md:1703
#: ./docs/master/helpers.md:1594
msgctxt "P"
msgid "If needed, you may specify which guard instance you would like to access:"
msgstr ""

#: ./docs/9.x/helpers.md:2973
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-squish\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:2974
msgctxt "H4"
msgid "`squish` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2975
#: ./docs/9.x/helpers.md:3516
#: ./docs/10.x/helpers.md:1581
#: ./docs/11.x/helpers.md:1705
#: ./docs/master/helpers.md:1596
msgctxt "CODE"
msgid "$user = auth('admin')->user();"
msgstr ""

#: ./docs/9.x/helpers.md:2976
msgctxt "P"
msgid "The `squish` method removes all extraneous white space from a string, including extraneous white space between words:"
msgstr ""

#: ./docs/8.x/helpers.md:2977
#: ./docs/9.x/helpers.md:3518
#: ./docs/10.x/helpers.md:1583
#: ./docs/11.x/helpers.md:1707
#: ./docs/master/helpers.md:1598
#~ msgctxt "P"
#~ msgid "<a name=\"method-back\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2978
#: ./docs/9.x/helpers.md:3519
#: ./docs/10.x/helpers.md:1584
#: ./docs/11.x/helpers.md:1708
#: ./docs/master/helpers.md:1599
msgctxt "H4"
msgid "`back()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:2978
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('    laravel    framework    ')->squish();\n\n"
"// laravel framework"
msgstr ""

#: ./docs/8.x/helpers.md:2980
#: ./docs/9.x/helpers.md:3521
#: ./docs/10.x/helpers.md:1586
#: ./docs/11.x/helpers.md:1710
#: ./docs/master/helpers.md:1601
msgctxt "P"
msgid "The `back` function generates a [redirect HTTP response](/docs/{{version}}/responses#redirects) to the user's previous location:"
msgstr ""

#: ./docs/8.x/helpers.md:2982
#: ./docs/9.x/helpers.md:3523
#: ./docs/10.x/helpers.md:1588
#: ./docs/11.x/helpers.md:1712
#: ./docs/master/helpers.md:1603
msgctxt "CODE"
msgid "return back($status = 302, $headers = [], $fallback = '/');\n\n"
"return back();"
msgstr ""

#: ./docs/8.x/helpers.md:2986
#: ./docs/9.x/helpers.md:3527
#: ./docs/10.x/helpers.md:1592
#: ./docs/11.x/helpers.md:1716
#: ./docs/master/helpers.md:1607
#~ msgctxt "P"
#~ msgid "<a name=\"method-bcrypt\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2987
#: ./docs/9.x/helpers.md:3528
#: ./docs/10.x/helpers.md:1593
#: ./docs/11.x/helpers.md:1717
#: ./docs/master/helpers.md:1608
msgctxt "H4"
msgid "`bcrypt()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2989
#: ./docs/9.x/helpers.md:3530
#: ./docs/10.x/helpers.md:1595
#: ./docs/11.x/helpers.md:1719
#: ./docs/master/helpers.md:1610
msgctxt "P"
msgid "The `bcrypt` function [hashes](/docs/{{version}}/hashing) the given value using Bcrypt. You may use this function as an alternative to the `Hash` facade:"
msgstr ""

#: ./docs/8.x/helpers.md:2991
#: ./docs/9.x/helpers.md:3532
#: ./docs/10.x/helpers.md:1597
#: ./docs/11.x/helpers.md:1721
#: ./docs/master/helpers.md:1612
msgctxt "CODE"
msgid "$password = bcrypt('my-secret-password');"
msgstr ""

#: ./docs/8.x/helpers.md:2993
#: ./docs/9.x/helpers.md:3534
#: ./docs/10.x/helpers.md:1599
#: ./docs/11.x/helpers.md:1723
#: ./docs/master/helpers.md:1614
#~ msgctxt "P"
#~ msgid "<a name=\"method-blank\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:2994
#: ./docs/9.x/helpers.md:3535
#: ./docs/10.x/helpers.md:1600
#: ./docs/11.x/helpers.md:1724
#: ./docs/master/helpers.md:1615
msgctxt "H4"
msgid "`blank()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:2996
#: ./docs/9.x/helpers.md:3537
#: ./docs/10.x/helpers.md:1602
#: ./docs/11.x/helpers.md:1726
#: ./docs/master/helpers.md:1617
msgctxt "P"
msgid "The `blank` function determines whether the given value is \"blank\":"
msgstr ""

#: ./docs/8.x/helpers.md:2998
#: ./docs/9.x/helpers.md:3539
#: ./docs/10.x/helpers.md:1604
#: ./docs/11.x/helpers.md:1728
#: ./docs/master/helpers.md:1619
msgctxt "CODE"
msgid "blank('');\n"
"blank('   ');\n"
"blank(null);\n"
"blank(collect());\n\n"
"// true\n\n"
"blank(0);\n"
"blank(true);\n"
"blank(false);\n\n"
"// false"
msgstr ""

#: ./docs/8.x/helpers.md:3011
#: ./docs/9.x/helpers.md:3552
#: ./docs/10.x/helpers.md:1617
#: ./docs/11.x/helpers.md:1741
#: ./docs/master/helpers.md:1632
msgctxt "P"
msgid "For the inverse of `blank`, see the [`filled`](#method-filled) method."
msgstr ""

#: ./docs/8.x/helpers.md:3013
#: ./docs/9.x/helpers.md:3554
#: ./docs/10.x/helpers.md:1619
#: ./docs/11.x/helpers.md:1743
#: ./docs/master/helpers.md:1634
#~ msgctxt "P"
#~ msgid "<a name=\"method-broadcast\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3014
#: ./docs/9.x/helpers.md:3555
#: ./docs/10.x/helpers.md:1620
#: ./docs/11.x/helpers.md:1744
#: ./docs/master/helpers.md:1635
msgctxt "H4"
msgid "`broadcast()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3016
#: ./docs/9.x/helpers.md:3557
#: ./docs/10.x/helpers.md:1622
#: ./docs/11.x/helpers.md:1746
#: ./docs/master/helpers.md:1637
msgctxt "P"
msgid "The `broadcast` function [broadcasts](/docs/{{version}}/broadcasting) the given [event](/docs/{{version}}/events) to its listeners:"
msgstr ""

#: ./docs/8.x/helpers.md:3018
#: ./docs/9.x/helpers.md:3559
#: ./docs/10.x/helpers.md:1624
#: ./docs/11.x/helpers.md:1748
#: ./docs/master/helpers.md:1639
msgctxt "CODE"
msgid "broadcast(new UserRegistered($user));\n\n"
"broadcast(new UserRegistered($user))->toOthers();"
msgstr ""

#: ./docs/8.x/helpers.md:3022
#: ./docs/9.x/helpers.md:3563
#: ./docs/10.x/helpers.md:1628
#: ./docs/11.x/helpers.md:1752
#: ./docs/master/helpers.md:1643
#~ msgctxt "P"
#~ msgid "<a name=\"method-cache\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3023
#: ./docs/9.x/helpers.md:3564
#: ./docs/10.x/helpers.md:1629
#: ./docs/11.x/helpers.md:1753
#: ./docs/master/helpers.md:1644
msgctxt "H4"
msgid "`cache()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3025
#: ./docs/9.x/helpers.md:3566
#: ./docs/10.x/helpers.md:1631
#: ./docs/11.x/helpers.md:1755
#: ./docs/master/helpers.md:1646
msgctxt "P"
msgid "The `cache` function may be used to get values from the [cache](/docs/{{version}}/cache). If the given key does not exist in the cache, an optional default value will be returned:"
msgstr ""

#: ./docs/8.x/helpers.md:3027
#: ./docs/9.x/helpers.md:3568
#: ./docs/10.x/helpers.md:1633
#: ./docs/11.x/helpers.md:1757
#: ./docs/master/helpers.md:1648
msgctxt "CODE"
msgid "$value = cache('key');\n\n"
"$value = cache('key', 'default');"
msgstr ""

#: ./docs/8.x/helpers.md:3031
#: ./docs/9.x/helpers.md:3572
#: ./docs/10.x/helpers.md:1637
#: ./docs/11.x/helpers.md:1761
#: ./docs/master/helpers.md:1652
msgctxt "P"
msgid "You may add items to the cache by passing an array of key / value pairs to the function. You should also pass the number of seconds or duration the cached value should be considered valid:"
msgstr ""

#: ./docs/8.x/helpers.md:3033
#: ./docs/9.x/helpers.md:3574
#: ./docs/10.x/helpers.md:1639
#: ./docs/11.x/helpers.md:1763
#: ./docs/master/helpers.md:1654
msgctxt "CODE"
msgid "cache(['key' => 'value'], 300);\n\n"
"cache(['key' => 'value'], now()->addSeconds(10));"
msgstr ""

#: ./docs/8.x/helpers.md:3037
#: ./docs/9.x/helpers.md:3578
#: ./docs/10.x/helpers.md:1643
#: ./docs/11.x/helpers.md:1767
#: ./docs/master/helpers.md:1658
#~ msgctxt "P"
#~ msgid "<a name=\"method-class-uses-recursive\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3038
#: ./docs/9.x/helpers.md:3579
#: ./docs/10.x/helpers.md:1644
#: ./docs/11.x/helpers.md:1768
#: ./docs/master/helpers.md:1659
msgctxt "H4"
msgid "`class_uses_recursive()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:3039
msgctxt "P"
msgid "The `substrReplace` method replaces text within a portion of a string, starting at the position specified by the second argument and replacing the number of characters specified by the third argument. Passing `0` to the method's third argument will insert the string at the specified position without replacing any of the existing characters in the string:"
msgstr ""

#: ./docs/8.x/helpers.md:3040
#: ./docs/9.x/helpers.md:3581
#: ./docs/10.x/helpers.md:1646
#: ./docs/11.x/helpers.md:1770
#: ./docs/master/helpers.md:1661
msgctxt "P"
msgid "The `class_uses_recursive` function returns all traits used by a class, including traits used by all of its parent classes:"
msgstr ""

#: ./docs/8.x/helpers.md:3042
#: ./docs/9.x/helpers.md:3583
#: ./docs/10.x/helpers.md:1648
#: ./docs/11.x/helpers.md:1772
#: ./docs/master/helpers.md:1663
msgctxt "CODE"
msgid "$traits = class_uses_recursive(App\\Models\\User::class);"
msgstr ""

#: ./docs/8.x/helpers.md:3044
#: ./docs/9.x/helpers.md:3585
#: ./docs/10.x/helpers.md:1650
#: ./docs/11.x/helpers.md:1774
#: ./docs/master/helpers.md:1665
#~ msgctxt "P"
#~ msgid "<a name=\"method-collect\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3045
#: ./docs/9.x/helpers.md:3586
#: ./docs/10.x/helpers.md:1651
#: ./docs/11.x/helpers.md:1775
#: ./docs/master/helpers.md:1666
msgctxt "H4"
msgid "`collect()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3047
#: ./docs/9.x/helpers.md:3588
#: ./docs/10.x/helpers.md:1653
#: ./docs/11.x/helpers.md:1777
#: ./docs/master/helpers.md:1668
msgctxt "P"
msgid "The `collect` function creates a [collection](/docs/{{version}}/collections) instance from the given value:"
msgstr ""

#: ./docs/8.x/helpers.md:3049
#: ./docs/9.x/helpers.md:3590
#: ./docs/10.x/helpers.md:1655
#: ./docs/11.x/helpers.md:1779
#: ./docs/master/helpers.md:1670
msgctxt "CODE"
msgid "$collection = collect(['taylor', 'abigail']);"
msgstr ""

#: ./docs/8.x/helpers.md:3051
#: ./docs/9.x/helpers.md:3592
#: ./docs/10.x/helpers.md:1657
#: ./docs/11.x/helpers.md:1781
#: ./docs/master/helpers.md:1672
#~ msgctxt "P"
#~ msgid "<a name=\"method-config\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:3051
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-swap\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3052
#: ./docs/9.x/helpers.md:3593
#: ./docs/10.x/helpers.md:1658
#: ./docs/11.x/helpers.md:1782
#: ./docs/master/helpers.md:1673
msgctxt "H4"
msgid "`config()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:3052
msgctxt "H4"
msgid "`swap` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3054
#: ./docs/9.x/helpers.md:3595
#: ./docs/10.x/helpers.md:1660
#: ./docs/11.x/helpers.md:1784
#: ./docs/master/helpers.md:1675
msgctxt "P"
msgid "The `config` function gets the value of a [configuration](/docs/{{version}}/configuration) variable. The configuration values may be accessed using \"dot\" syntax, which includes the name of the file and the option you wish to access. A default value may be specified and is returned if the configuration option does not exist:"
msgstr ""

#: ./docs/9.x/helpers.md:3054
msgctxt "P"
msgid "The `swap` method replaces multiple values in the string using PHP's `strtr` function:"
msgstr ""

#: ./docs/8.x/helpers.md:3056
#: ./docs/9.x/helpers.md:3597
#: ./docs/10.x/helpers.md:1662
#: ./docs/11.x/helpers.md:1786
#: ./docs/master/helpers.md:1677
msgctxt "CODE"
msgid "$value = config('app.timezone');\n\n"
"$value = config('app.timezone', $default);"
msgstr ""

#: ./docs/9.x/helpers.md:3056
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Tacos are great!')\n"
"    ->swap([\n"
"        'Tacos' => 'Burritos',\n"
"        'great' => 'fantastic',\n"
"    ]);\n\n"
"// Burritos are fantastic!"
msgstr ""

#: ./docs/8.x/helpers.md:3060
#: ./docs/9.x/helpers.md:3601
#: ./docs/10.x/helpers.md:1666
#: ./docs/11.x/helpers.md:1790
#: ./docs/master/helpers.md:1681
msgctxt "P"
msgid "You may set configuration variables at runtime by passing an array of key / value pairs. However, note that this function only affects the configuration value for the current request and does not update your actual configuration values:"
msgstr ""

#: ./docs/8.x/helpers.md:3062
#: ./docs/9.x/helpers.md:3603
#: ./docs/10.x/helpers.md:1668
#: ./docs/11.x/helpers.md:1792
#: ./docs/master/helpers.md:1683
msgctxt "CODE"
msgid "config(['app.debug' => true]);"
msgstr ""

#: ./docs/8.x/helpers.md:3064
#: ./docs/9.x/helpers.md:3605
#: ./docs/10.x/helpers.md:1670
#: ./docs/11.x/helpers.md:1809
#: ./docs/master/helpers.md:1685
#~ msgctxt "P"
#~ msgid "<a name=\"method-cookie\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3065
#: ./docs/9.x/helpers.md:3606
#: ./docs/10.x/helpers.md:1671
#: ./docs/11.x/helpers.md:1810
#: ./docs/master/helpers.md:1686
msgctxt "H4"
msgid "`cookie()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3067
#: ./docs/9.x/helpers.md:3608
#: ./docs/10.x/helpers.md:1673
#: ./docs/11.x/helpers.md:1812
#: ./docs/master/helpers.md:1688
msgctxt "P"
msgid "The `cookie` function creates a new [cookie](/docs/{{version}}/requests#cookies) instance:"
msgstr ""

#: ./docs/8.x/helpers.md:3069
#: ./docs/9.x/helpers.md:3610
#: ./docs/10.x/helpers.md:1675
#: ./docs/11.x/helpers.md:1814
#: ./docs/master/helpers.md:1690
msgctxt "CODE"
msgid "$cookie = cookie('name', 'value', $minutes);"
msgstr ""

#: ./docs/8.x/helpers.md:3071
#: ./docs/9.x/helpers.md:3612
#: ./docs/10.x/helpers.md:1677
#: ./docs/11.x/helpers.md:1816
#: ./docs/master/helpers.md:1692
#~ msgctxt "P"
#~ msgid "<a name=\"method-csrf-field\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:3071
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Laravel')\n"
"    ->append(' Framework')\n"
"    ->tap(function ($string) {\n"
"        dump('String after append: '.$string);\n"
"    })\n"
"    ->upper();\n\n"
"// LARAVEL FRAMEWORK"
msgstr ""

#: ./docs/8.x/helpers.md:3072
#: ./docs/9.x/helpers.md:3613
#: ./docs/10.x/helpers.md:1678
#: ./docs/11.x/helpers.md:1817
#: ./docs/master/helpers.md:1693
msgctxt "H4"
msgid "`csrf_field()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3074
#: ./docs/9.x/helpers.md:3615
#: ./docs/10.x/helpers.md:1680
#: ./docs/11.x/helpers.md:1819
#: ./docs/master/helpers.md:1695
msgctxt "P"
msgid "The `csrf_field` function generates an HTML `hidden` input field containing the value of the CSRF token. For example, using [Blade syntax](/docs/{{version}}/blade):"
msgstr ""

#: ./docs/8.x/helpers.md:3076
#: ./docs/9.x/helpers.md:3617
#: ./docs/10.x/helpers.md:1682
#: ./docs/11.x/helpers.md:1821
#: ./docs/master/helpers.md:1697
msgctxt "CODE"
msgid "{{ csrf_field() }}"
msgstr ""

#: ./docs/8.x/helpers.md:3078
#: ./docs/9.x/helpers.md:3619
#: ./docs/10.x/helpers.md:1684
#: ./docs/11.x/helpers.md:1823
#: ./docs/master/helpers.md:1699
#~ msgctxt "P"
#~ msgid "<a name=\"method-csrf-token\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3079
#: ./docs/9.x/helpers.md:3620
#: ./docs/10.x/helpers.md:1685
#: ./docs/11.x/helpers.md:1824
#: ./docs/master/helpers.md:1700
msgctxt "H4"
msgid "`csrf_token()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3081
#: ./docs/9.x/helpers.md:3622
#: ./docs/10.x/helpers.md:1687
#: ./docs/11.x/helpers.md:1826
#: ./docs/master/helpers.md:1702
msgctxt "P"
msgid "The `csrf_token` function retrieves the value of the current CSRF token:"
msgstr ""

#: ./docs/8.x/helpers.md:3083
#: ./docs/9.x/helpers.md:3624
#: ./docs/10.x/helpers.md:1689
#: ./docs/11.x/helpers.md:1828
#: ./docs/master/helpers.md:1704
msgctxt "CODE"
msgid "$token = csrf_token();"
msgstr ""

#: ./docs/8.x/helpers.md:3085
#: ./docs/9.x/helpers.md:3633
#: ./docs/10.x/helpers.md:1698
#: ./docs/11.x/helpers.md:1837
#: ./docs/master/helpers.md:1713
#~ msgctxt "P"
#~ msgid "<a name=\"method-dd\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3086
#: ./docs/9.x/helpers.md:3634
#: ./docs/10.x/helpers.md:1699
#: ./docs/11.x/helpers.md:1838
#: ./docs/master/helpers.md:1714
msgctxt "H4"
msgid "`dd()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3088
#: ./docs/9.x/helpers.md:3636
msgctxt "P"
msgid "The `dd` function dumps the given variables and ends execution of the script:"
msgstr ""

#: ./docs/8.x/helpers.md:3090
#: ./docs/9.x/helpers.md:3638
#: ./docs/10.x/helpers.md:1703
#: ./docs/11.x/helpers.md:1842
#: ./docs/master/helpers.md:1718
msgctxt "CODE"
msgid "dd($value);\n\n"
"dd($value1, $value2, $value3, ...);"
msgstr ""

#: ./docs/8.x/helpers.md:3094
#: ./docs/9.x/helpers.md:3642
#: ./docs/10.x/helpers.md:1707
#: ./docs/11.x/helpers.md:1846
#: ./docs/master/helpers.md:1722
msgctxt "P"
msgid "If you do not want to halt the execution of your script, use the [`dump`](#method-dump) function instead."
msgstr ""

#: ./docs/8.x/helpers.md:3096
#: ./docs/9.x/helpers.md:3644
#: ./docs/10.x/helpers.md:1709
#: ./docs/11.x/helpers.md:1848
#: ./docs/master/helpers.md:1724
#~ msgctxt "P"
#~ msgid "<a name=\"method-dispatch\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3097
#: ./docs/9.x/helpers.md:3645
#: ./docs/10.x/helpers.md:1710
#: ./docs/11.x/helpers.md:1849
#: ./docs/master/helpers.md:1725
msgctxt "H4"
msgid "`dispatch()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3099
#: ./docs/9.x/helpers.md:3647
#: ./docs/10.x/helpers.md:1712
#: ./docs/11.x/helpers.md:1851
#: ./docs/master/helpers.md:1727
msgctxt "P"
msgid "The `dispatch` function pushes the given [job](/docs/{{version}}/queues#creating-jobs) onto the Laravel [job queue](/docs/{{version}}/queues):"
msgstr ""

#: ./docs/8.x/helpers.md:3101
#: ./docs/9.x/helpers.md:3649
#: ./docs/10.x/helpers.md:1714
#: ./docs/11.x/helpers.md:1853
#: ./docs/master/helpers.md:1729
msgctxt "CODE"
msgid "dispatch(new App\\Jobs\\SendEmails);"
msgstr ""

#: ./docs/8.x/helpers.md:3103
#: ./docs/9.x/helpers.md:3651
#: ./docs/10.x/helpers.md:1723
#: ./docs/11.x/helpers.md:1862
#: ./docs/master/helpers.md:1738
#~ msgctxt "P"
#~ msgid "<a name=\"method-dump\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3104
#: ./docs/9.x/helpers.md:3652
#: ./docs/10.x/helpers.md:1724
#: ./docs/11.x/helpers.md:1863
#: ./docs/master/helpers.md:1739
msgctxt "H4"
msgid "`dump()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3106
#: ./docs/9.x/helpers.md:3654
#: ./docs/10.x/helpers.md:1726
#: ./docs/11.x/helpers.md:1865
#: ./docs/master/helpers.md:1741
msgctxt "P"
msgid "The `dump` function dumps the given variables:"
msgstr ""

#: ./docs/8.x/helpers.md:3108
#: ./docs/9.x/helpers.md:3656
#: ./docs/10.x/helpers.md:1728
#: ./docs/11.x/helpers.md:1867
#: ./docs/master/helpers.md:1743
msgctxt "CODE"
msgid "dump($value);\n\n"
"dump($value1, $value2, $value3, ...);"
msgstr ""

#: ./docs/8.x/helpers.md:3112
#: ./docs/9.x/helpers.md:3660
#: ./docs/10.x/helpers.md:1732
#: ./docs/11.x/helpers.md:1871
#: ./docs/master/helpers.md:1747
msgctxt "P"
msgid "If you want to stop executing the script after dumping the variables, use the [`dd`](#method-dd) function instead."
msgstr ""

#: ./docs/8.x/helpers.md:3114
#: ./docs/9.x/helpers.md:3669
#: ./docs/10.x/helpers.md:1741
#: ./docs/11.x/helpers.md:1880
#: ./docs/master/helpers.md:1756
#~ msgctxt "P"
#~ msgid "<a name=\"method-env\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3115
#: ./docs/9.x/helpers.md:3670
#: ./docs/10.x/helpers.md:1742
#: ./docs/11.x/helpers.md:1881
#: ./docs/master/helpers.md:1757
msgctxt "H4"
msgid "`env()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3117
#: ./docs/9.x/helpers.md:3672
#: ./docs/10.x/helpers.md:1744
#: ./docs/11.x/helpers.md:1883
#: ./docs/master/helpers.md:1759
msgctxt "P"
msgid "The `env` function retrieves the value of an [environment variable](/docs/{{version}}/configuration#environment-configuration) or returns a default value:"
msgstr ""

#: ./docs/8.x/helpers.md:3119
#: ./docs/9.x/helpers.md:3674
#: ./docs/10.x/helpers.md:1746
#: ./docs/11.x/helpers.md:1885
#: ./docs/master/helpers.md:1761
msgctxt "CODE"
msgid "$env = env('APP_ENV');\n\n"
"$env = env('APP_ENV', 'production');"
msgstr ""

#: ./docs/8.x/helpers.md:3123
#: ./docs/9.x/helpers.md:3679
#: ./docs/10.x/helpers.md:1751
#: ./docs/11.x/helpers.md:1890
#: ./docs/master/helpers.md:1766
msgctxt "P"
msgid "If you execute the `config:cache` command during your deployment process, you should be sure that you are only calling the `env` function from within your configuration files. Once the configuration has been cached, the `.env` file will not be loaded and all calls to the `env` function will return `null`."
msgstr ""

#: ./docs/8.x/helpers.md:3125
#: ./docs/9.x/helpers.md:3681
#: ./docs/10.x/helpers.md:1753
#: ./docs/11.x/helpers.md:1892
#: ./docs/master/helpers.md:1768
#~ msgctxt "P"
#~ msgid "<a name=\"method-event\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3126
#: ./docs/9.x/helpers.md:3682
#: ./docs/10.x/helpers.md:1754
#: ./docs/11.x/helpers.md:1893
#: ./docs/master/helpers.md:1769
msgctxt "H4"
msgid "`event()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3128
#: ./docs/9.x/helpers.md:3684
#: ./docs/10.x/helpers.md:1756
#: ./docs/11.x/helpers.md:1895
#: ./docs/master/helpers.md:1771
msgctxt "P"
msgid "The `event` function dispatches the given [event](/docs/{{version}}/events) to its listeners:"
msgstr ""

#: ./docs/8.x/helpers.md:3130
#: ./docs/9.x/helpers.md:3686
#: ./docs/10.x/helpers.md:1758
#: ./docs/11.x/helpers.md:1897
#: ./docs/master/helpers.md:1773
msgctxt "CODE"
msgid "event(new UserRegistered($user));"
msgstr ""

#: ./docs/9.x/helpers.md:3130
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-ucsplit\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:3131
msgctxt "H4"
msgid "`ucsplit` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3132
#: ./docs/9.x/helpers.md:3709
#: ./docs/10.x/helpers.md:1781
#: ./docs/11.x/helpers.md:1920
#: ./docs/master/helpers.md:1796
#~ msgctxt "P"
#~ msgid "<a name=\"method-filled\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3133
#: ./docs/9.x/helpers.md:3710
#: ./docs/10.x/helpers.md:1782
#: ./docs/11.x/helpers.md:1921
#: ./docs/master/helpers.md:1797
msgctxt "H4"
msgid "`filled()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:3133
msgctxt "P"
msgid "The `ucsplit` method splits the given string into a collection by uppercase characters:"
msgstr ""

#: ./docs/8.x/helpers.md:3135
#: ./docs/9.x/helpers.md:3712
#: ./docs/10.x/helpers.md:1784
#: ./docs/11.x/helpers.md:1923
#: ./docs/master/helpers.md:1799
msgctxt "P"
msgid "The `filled` function determines whether the given value is not \"blank\":"
msgstr ""

#: ./docs/9.x/helpers.md:3135
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('Foo Bar')->ucsplit();\n\n"
"// collect(['Foo', 'Bar'])"
msgstr ""

#: ./docs/8.x/helpers.md:3137
#: ./docs/9.x/helpers.md:3714
#: ./docs/10.x/helpers.md:1786
#: ./docs/11.x/helpers.md:1925
#: ./docs/master/helpers.md:1801
msgctxt "CODE"
msgid "filled(0);\n"
"filled(true);\n"
"filled(false);\n\n"
"// true\n\n"
"filled('');\n"
"filled('   ');\n"
"filled(null);\n"
"filled(collect());\n\n"
"// false"
msgstr ""

#: ./docs/8.x/helpers.md:3150
#: ./docs/9.x/helpers.md:3727
#: ./docs/10.x/helpers.md:1799
#: ./docs/11.x/helpers.md:1938
#: ./docs/master/helpers.md:1814
msgctxt "P"
msgid "For the inverse of `filled`, see the [`blank`](#method-blank) method."
msgstr ""

#: ./docs/8.x/helpers.md:3152
#: ./docs/9.x/helpers.md:3729
#: ./docs/10.x/helpers.md:1801
#: ./docs/11.x/helpers.md:1940
#: ./docs/master/helpers.md:1816
#~ msgctxt "P"
#~ msgid "<a name=\"method-info\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3153
#: ./docs/9.x/helpers.md:3730
#: ./docs/10.x/helpers.md:1802
#: ./docs/11.x/helpers.md:1941
#: ./docs/master/helpers.md:1817
msgctxt "H4"
msgid "`info()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3155
#: ./docs/9.x/helpers.md:3732
#: ./docs/10.x/helpers.md:1804
#: ./docs/11.x/helpers.md:1943
#: ./docs/master/helpers.md:1819
msgctxt "P"
msgid "The `info` function will write information to your application's [log](/docs/{{version}}/logging):"
msgstr ""

#: ./docs/8.x/helpers.md:3157
#: ./docs/9.x/helpers.md:3734
#: ./docs/10.x/helpers.md:1806
#: ./docs/11.x/helpers.md:1945
#: ./docs/master/helpers.md:1821
msgctxt "CODE"
msgid "info('Some helpful information!');"
msgstr ""

#: ./docs/8.x/helpers.md:3159
#: ./docs/8.x/helpers.md:3170
#: ./docs/9.x/helpers.md:3736
#: ./docs/9.x/helpers.md:3747
#: ./docs/10.x/helpers.md:1808
#: ./docs/10.x/helpers.md:1819
#: ./docs/11.x/helpers.md:1947
#: ./docs/11.x/helpers.md:1971
#: ./docs/master/helpers.md:1823
#: ./docs/master/helpers.md:1847
msgctxt "P"
msgid "An array of contextual data may also be passed to the function:"
msgstr ""

#: ./docs/8.x/helpers.md:3161
#: ./docs/9.x/helpers.md:3738
#: ./docs/10.x/helpers.md:1810
#: ./docs/11.x/helpers.md:1949
#: ./docs/master/helpers.md:1825
msgctxt "CODE"
msgid "info('User login attempt failed.', ['id' => $user->id]);"
msgstr ""

#: ./docs/8.x/helpers.md:3163
#: ./docs/9.x/helpers.md:3740
#: ./docs/10.x/helpers.md:1812
#: ./docs/11.x/helpers.md:1964
#: ./docs/master/helpers.md:1840
#~ msgctxt "P"
#~ msgid "<a name=\"method-logger\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3164
#: ./docs/9.x/helpers.md:3741
#: ./docs/10.x/helpers.md:1813
#: ./docs/11.x/helpers.md:1965
#: ./docs/master/helpers.md:1841
msgctxt "H4"
msgid "`logger()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3166
#: ./docs/9.x/helpers.md:3743
#: ./docs/10.x/helpers.md:1815
#: ./docs/11.x/helpers.md:1967
#: ./docs/master/helpers.md:1843
msgctxt "P"
msgid "The `logger` function can be used to write a `debug` level message to the [log](/docs/{{version}}/logging):"
msgstr ""

#: ./docs/8.x/helpers.md:3168
#: ./docs/9.x/helpers.md:3745
#: ./docs/10.x/helpers.md:1817
#: ./docs/11.x/helpers.md:1969
#: ./docs/master/helpers.md:1845
msgctxt "CODE"
msgid "logger('Debug message');"
msgstr ""

#: ./docs/8.x/helpers.md:3172
#: ./docs/9.x/helpers.md:3749
#: ./docs/10.x/helpers.md:1821
#: ./docs/11.x/helpers.md:1973
#: ./docs/master/helpers.md:1849
msgctxt "CODE"
msgid "logger('User has logged in.', ['id' => $user->id]);"
msgstr ""

#: ./docs/8.x/helpers.md:3174
#: ./docs/9.x/helpers.md:3751
#: ./docs/10.x/helpers.md:1823
#: ./docs/master/helpers.md:1851
msgctxt "P"
msgid "A [logger](/docs/{{version}}/errors#logging) instance will be returned if no value is passed to the function:"
msgstr ""

#: ./docs/8.x/helpers.md:3176
#: ./docs/9.x/helpers.md:3753
#: ./docs/10.x/helpers.md:1825
#: ./docs/11.x/helpers.md:1977
#: ./docs/master/helpers.md:1853
msgctxt "CODE"
msgid "logger()->error('You are not allowed here.');"
msgstr ""

#: ./docs/8.x/helpers.md:3178
#: ./docs/9.x/helpers.md:3755
#: ./docs/10.x/helpers.md:1827
#: ./docs/11.x/helpers.md:1979
#: ./docs/master/helpers.md:1855
#~ msgctxt "P"
#~ msgid "<a name=\"method-method-field\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3179
#: ./docs/9.x/helpers.md:3756
#: ./docs/10.x/helpers.md:1828
#: ./docs/11.x/helpers.md:1980
#: ./docs/master/helpers.md:1856
msgctxt "H4"
msgid "`method_field()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3181
#: ./docs/9.x/helpers.md:3758
#: ./docs/10.x/helpers.md:1830
#: ./docs/11.x/helpers.md:1982
#: ./docs/master/helpers.md:1858
msgctxt "P"
msgid "The `method_field` function generates an HTML `hidden` input field containing the spoofed value of the form's HTTP verb. For example, using [Blade syntax](/docs/{{version}}/blade):"
msgstr ""

#: ./docs/8.x/helpers.md:3183
#: ./docs/9.x/helpers.md:3760
#: ./docs/10.x/helpers.md:1832
#: ./docs/11.x/helpers.md:1984
#: ./docs/master/helpers.md:1860
msgctxt "CODE"
msgid "<form method=\"POST\">\n"
"    {{ method_field('DELETE') }}\n"
"</form>"
msgstr ""

#: ./docs/8.x/helpers.md:3187
#: ./docs/9.x/helpers.md:3764
#: ./docs/10.x/helpers.md:1836
#: ./docs/11.x/helpers.md:1988
#: ./docs/master/helpers.md:1864
#~ msgctxt "P"
#~ msgid "<a name=\"method-now\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3188
#: ./docs/9.x/helpers.md:3765
#: ./docs/10.x/helpers.md:1837
#: ./docs/11.x/helpers.md:1989
#: ./docs/master/helpers.md:1865
msgctxt "H4"
msgid "`now()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3190
#: ./docs/9.x/helpers.md:3767
#: ./docs/10.x/helpers.md:1839
#: ./docs/11.x/helpers.md:1991
#: ./docs/master/helpers.md:1867
msgctxt "P"
msgid "The `now` function creates a new `Illuminate\\Support\\Carbon` instance for the current time:"
msgstr ""

#: ./docs/8.x/helpers.md:3192
#: ./docs/9.x/helpers.md:3769
#: ./docs/10.x/helpers.md:1841
#: ./docs/10.x/helpers.md:2204
#: ./docs/11.x/helpers.md:1993
#: ./docs/11.x/helpers.md:2412
#: ./docs/master/helpers.md:1869
#: ./docs/master/helpers.md:2271
msgctxt "CODE"
msgid "$now = now();"
msgstr ""

#: ./docs/8.x/helpers.md:3194
#: ./docs/9.x/helpers.md:3771
#: ./docs/10.x/helpers.md:1843
#: ./docs/11.x/helpers.md:1995
#: ./docs/master/helpers.md:1871
#~ msgctxt "P"
#~ msgid "<a name=\"method-old\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3195
#: ./docs/9.x/helpers.md:3772
#: ./docs/10.x/helpers.md:1844
#: ./docs/11.x/helpers.md:1996
#: ./docs/master/helpers.md:1872
msgctxt "H4"
msgid "`old()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3197
#: ./docs/9.x/helpers.md:3774
#: ./docs/10.x/helpers.md:1846
#: ./docs/11.x/helpers.md:1998
#: ./docs/master/helpers.md:1874
msgctxt "P"
msgid "The `old` function [retrieves](/docs/{{version}}/requests#retrieving-input) an [old input](/docs/{{version}}/requests#old-input) value flashed into the session:"
msgstr ""

#: ./docs/8.x/helpers.md:3199
#: ./docs/9.x/helpers.md:3776
#: ./docs/10.x/helpers.md:1848
#: ./docs/11.x/helpers.md:2000
#: ./docs/master/helpers.md:1876
msgctxt "CODE"
msgid "$value = old('value');\n\n"
"$value = old('value', 'default');"
msgstr ""

#: ./docs/8.x/helpers.md:3203
#: ./docs/9.x/helpers.md:3788
#: ./docs/10.x/helpers.md:1860
#: ./docs/11.x/helpers.md:2051
#: ./docs/master/helpers.md:1927
#~ msgctxt "P"
#~ msgid "<a name=\"method-optional\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3204
#: ./docs/9.x/helpers.md:3789
#: ./docs/10.x/helpers.md:1861
#: ./docs/11.x/helpers.md:2052
#: ./docs/master/helpers.md:1928
msgctxt "H4"
msgid "`optional()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3206
#: ./docs/9.x/helpers.md:3791
#: ./docs/10.x/helpers.md:1863
#: ./docs/11.x/helpers.md:2054
#: ./docs/master/helpers.md:1930
msgctxt "P"
msgid "The `optional` function accepts any argument and allows you to access properties or call methods on that object. If the given object is `null`, properties and methods will return `null` instead of causing an error:"
msgstr ""

#: ./docs/8.x/helpers.md:3208
#: ./docs/9.x/helpers.md:3793
#: ./docs/10.x/helpers.md:1865
#: ./docs/11.x/helpers.md:2056
#: ./docs/master/helpers.md:1932
msgctxt "CODE"
msgid "return optional($user->address)->street;\n\n"
"{!! old('name', optional($user)->name) !!}"
msgstr ""

#: ./docs/8.x/helpers.md:3212
#: ./docs/9.x/helpers.md:3797
#: ./docs/10.x/helpers.md:1869
#: ./docs/11.x/helpers.md:2060
#: ./docs/master/helpers.md:1936
msgctxt "P"
msgid "The `optional` function also accepts a closure as its second argument. The closure will be invoked if the value provided as the first argument is not null:"
msgstr ""

#: ./docs/8.x/helpers.md:3214
#: ./docs/9.x/helpers.md:3799
msgctxt "CODE"
msgid "return optional(User::find($id), function ($user) {\n"
"    return $user->name;\n"
"});"
msgstr ""

#: ./docs/8.x/helpers.md:3218
#: ./docs/9.x/helpers.md:3803
#: ./docs/10.x/helpers.md:1875
#: ./docs/11.x/helpers.md:2066
#: ./docs/master/helpers.md:1942
#~ msgctxt "P"
#~ msgid "<a name=\"method-policy\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3219
#: ./docs/9.x/helpers.md:3804
#: ./docs/10.x/helpers.md:1876
#: ./docs/11.x/helpers.md:2067
#: ./docs/master/helpers.md:1943
msgctxt "H4"
msgid "`policy()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3221
#: ./docs/9.x/helpers.md:3806
#: ./docs/10.x/helpers.md:1878
#: ./docs/11.x/helpers.md:2069
#: ./docs/master/helpers.md:1945
msgctxt "P"
msgid "The `policy` method retrieves a [policy](/docs/{{version}}/authorization#creating-policies) instance for a given class:"
msgstr ""

#: ./docs/8.x/helpers.md:3223
#: ./docs/9.x/helpers.md:3808
#: ./docs/10.x/helpers.md:1880
#: ./docs/11.x/helpers.md:2071
#: ./docs/master/helpers.md:1947
msgctxt "CODE"
msgid "$policy = policy(App\\Models\\User::class);"
msgstr ""

#: ./docs/8.x/helpers.md:3225
#: ./docs/9.x/helpers.md:3810
#: ./docs/10.x/helpers.md:1882
#: ./docs/11.x/helpers.md:2073
#: ./docs/master/helpers.md:1949
#~ msgctxt "P"
#~ msgid "<a name=\"method-redirect\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3226
#: ./docs/9.x/helpers.md:3811
#: ./docs/10.x/helpers.md:1883
#: ./docs/11.x/helpers.md:2074
#: ./docs/master/helpers.md:1950
msgctxt "H4"
msgid "`redirect()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3228
#: ./docs/9.x/helpers.md:3813
#: ./docs/10.x/helpers.md:1885
#: ./docs/11.x/helpers.md:2076
#: ./docs/master/helpers.md:1952
msgctxt "P"
msgid "The `redirect` function returns a [redirect HTTP response](/docs/{{version}}/responses#redirects), or returns the redirector instance if called with no arguments:"
msgstr ""

#: ./docs/8.x/helpers.md:3230
#: ./docs/9.x/helpers.md:3815
#: ./docs/10.x/helpers.md:1887
#: ./docs/11.x/helpers.md:2078
#: ./docs/master/helpers.md:1954
msgctxt "CODE"
msgid "return redirect($to = null, $status = 302, $headers = [], $https = null);\n\n"
"return redirect('/home');\n\n"
"return redirect()->route('route.name');"
msgstr ""

#: ./docs/8.x/helpers.md:3236
#: ./docs/9.x/helpers.md:3821
#: ./docs/10.x/helpers.md:1893
#: ./docs/11.x/helpers.md:2084
#: ./docs/master/helpers.md:1960
#~ msgctxt "P"
#~ msgid "<a name=\"method-report\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3237
#: ./docs/9.x/helpers.md:3822
#: ./docs/10.x/helpers.md:1894
#: ./docs/11.x/helpers.md:2085
#: ./docs/master/helpers.md:1961
msgctxt "H4"
msgid "`report()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3239
#: ./docs/9.x/helpers.md:3824
#: ./docs/10.x/helpers.md:1896
#: ./docs/master/helpers.md:1963
msgctxt "P"
msgid "The `report` function will report an exception using your [exception handler](/docs/{{version}}/errors#the-exception-handler):"
msgstr ""

#: ./docs/8.x/helpers.md:3241
#: ./docs/9.x/helpers.md:3826
#: ./docs/10.x/helpers.md:1898
#: ./docs/11.x/helpers.md:2089
#: ./docs/master/helpers.md:1965
msgctxt "CODE"
msgid "report($e);"
msgstr ""

#: ./docs/8.x/helpers.md:3243
#: ./docs/9.x/helpers.md:3828
#: ./docs/10.x/helpers.md:1900
#: ./docs/11.x/helpers.md:2091
#: ./docs/master/helpers.md:1967
msgctxt "P"
msgid "The `report` function also accepts a string as an argument. When a string is given to the function, the function will create an exception with the given string as its message:"
msgstr ""

#: ./docs/8.x/helpers.md:3245
#: ./docs/9.x/helpers.md:3830
#: ./docs/10.x/helpers.md:1902
#: ./docs/11.x/helpers.md:2093
#: ./docs/master/helpers.md:1969
msgctxt "CODE"
msgid "report('Something went wrong.');"
msgstr ""

#: ./docs/8.x/helpers.md:3247
#: ./docs/9.x/helpers.md:3850
#: ./docs/10.x/helpers.md:1922
#: ./docs/11.x/helpers.md:2113
#: ./docs/master/helpers.md:1989
#~ msgctxt "P"
#~ msgid "<a name=\"method-request\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3248
#: ./docs/9.x/helpers.md:3851
#: ./docs/10.x/helpers.md:1923
#: ./docs/11.x/helpers.md:2114
#: ./docs/master/helpers.md:1990
msgctxt "H4"
msgid "`request()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3250
#: ./docs/9.x/helpers.md:3853
#: ./docs/10.x/helpers.md:1925
#: ./docs/11.x/helpers.md:2116
#: ./docs/master/helpers.md:1992
msgctxt "P"
msgid "The `request` function returns the current [request](/docs/{{version}}/requests) instance or obtains an input field's value from the current request:"
msgstr ""

#: ./docs/8.x/helpers.md:3252
#: ./docs/9.x/helpers.md:3855
#: ./docs/10.x/helpers.md:1927
#: ./docs/11.x/helpers.md:2118
#: ./docs/master/helpers.md:1994
msgctxt "CODE"
msgid "$request = request();\n\n"
"$value = request('key', $default);"
msgstr ""

#: ./docs/8.x/helpers.md:3256
#: ./docs/9.x/helpers.md:3859
#: ./docs/10.x/helpers.md:1931
#: ./docs/11.x/helpers.md:2122
#: ./docs/master/helpers.md:1998
#~ msgctxt "P"
#~ msgid "<a name=\"method-rescue\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3257
#: ./docs/9.x/helpers.md:3860
#: ./docs/10.x/helpers.md:1932
#: ./docs/11.x/helpers.md:2123
#: ./docs/master/helpers.md:1999
msgctxt "H4"
msgid "`rescue()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3259
#: ./docs/9.x/helpers.md:3862
#: ./docs/10.x/helpers.md:1934
#: ./docs/master/helpers.md:2001
msgctxt "P"
msgid "The `rescue` function executes the given closure and catches any exceptions that occur during its execution. All exceptions that are caught will be sent to your [exception handler](/docs/{{version}}/errors#the-exception-handler); however, the request will continue processing:"
msgstr ""

#: ./docs/8.x/helpers.md:3261
#: ./docs/9.x/helpers.md:3864
#: ./docs/10.x/helpers.md:1936
#: ./docs/11.x/helpers.md:2127
#: ./docs/master/helpers.md:2003
msgctxt "CODE"
msgid "return rescue(function () {\n"
"    return $this->method();\n"
"});"
msgstr ""

#: ./docs/8.x/helpers.md:3265
#: ./docs/9.x/helpers.md:3868
#: ./docs/10.x/helpers.md:1940
#: ./docs/11.x/helpers.md:2131
#: ./docs/master/helpers.md:2007
msgctxt "P"
msgid "You may also pass a second argument to the `rescue` function. This argument will be the \"default\" value that should be returned if an exception occurs while executing the closure:"
msgstr ""

#: ./docs/8.x/helpers.md:3267
#: ./docs/9.x/helpers.md:3870
#: ./docs/10.x/helpers.md:1942
#: ./docs/11.x/helpers.md:2133
#: ./docs/master/helpers.md:2009
msgctxt "CODE"
msgid "return rescue(function () {\n"
"    return $this->method();\n"
"}, false);\n\n"
"return rescue(function () {\n"
"    return $this->method();\n"
"}, function () {\n"
"    return $this->failure();\n"
"});"
msgstr ""

#: ./docs/9.x/helpers.md:3276
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-when-not-exactly\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3277
#: ./docs/9.x/helpers.md:3880
#: ./docs/10.x/helpers.md:1960
#: ./docs/11.x/helpers.md:2151
#: ./docs/master/helpers.md:2027
#~ msgctxt "P"
#~ msgid "<a name=\"method-resolve\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:3277
msgctxt "H4"
msgid "`whenNotExactly` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3278
#: ./docs/9.x/helpers.md:3881
#: ./docs/10.x/helpers.md:1961
#: ./docs/11.x/helpers.md:2152
#: ./docs/master/helpers.md:2028
msgctxt "H4"
msgid "`resolve()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:3279
msgctxt "P"
msgid "The `whenNotExactly` method invokes the given closure if the string does not exactly match the given string. The closure will receive the fluent string instance:"
msgstr ""

#: ./docs/8.x/helpers.md:3280
#: ./docs/9.x/helpers.md:3883
#: ./docs/10.x/helpers.md:1963
#: ./docs/11.x/helpers.md:2154
#: ./docs/master/helpers.md:2030
msgctxt "P"
msgid "The `resolve` function resolves a given class or interface name to an instance using the [service container](/docs/{{version}}/container):"
msgstr ""

#: ./docs/9.x/helpers.md:3281
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('framework')->whenNotExactly('laravel', function ($string) {\n"
"    return $string->title();\n"
"});\n\n"
"// 'Framework'"
msgstr ""

#: ./docs/8.x/helpers.md:3282
#: ./docs/9.x/helpers.md:3885
#: ./docs/10.x/helpers.md:1965
#: ./docs/11.x/helpers.md:2156
#: ./docs/master/helpers.md:2032
msgctxt "CODE"
msgid "$api = resolve('HelpSpot\\API');"
msgstr ""

#: ./docs/8.x/helpers.md:3284
#: ./docs/9.x/helpers.md:3887
#: ./docs/10.x/helpers.md:1967
#: ./docs/11.x/helpers.md:2158
#: ./docs/master/helpers.md:2034
#~ msgctxt "P"
#~ msgid "<a name=\"method-response\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3285
#: ./docs/9.x/helpers.md:3888
#: ./docs/10.x/helpers.md:1968
#: ./docs/11.x/helpers.md:2159
#: ./docs/master/helpers.md:2035
msgctxt "H4"
msgid "`response()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3287
#: ./docs/9.x/helpers.md:3890
#: ./docs/10.x/helpers.md:1970
#: ./docs/11.x/helpers.md:2161
#: ./docs/master/helpers.md:2037
msgctxt "P"
msgid "The `response` function creates a [response](/docs/{{version}}/responses) instance or obtains an instance of the response factory:"
msgstr ""

#: ./docs/8.x/helpers.md:3289
#: ./docs/9.x/helpers.md:3892
#: ./docs/10.x/helpers.md:1972
#: ./docs/11.x/helpers.md:2163
#: ./docs/master/helpers.md:2039
msgctxt "CODE"
msgid "return response('Hello World', 200, $headers);\n\n"
"return response()->json(['foo' => 'bar'], 200, $headers);"
msgstr ""

#: ./docs/8.x/helpers.md:3293
#: ./docs/9.x/helpers.md:3896
#: ./docs/10.x/helpers.md:1976
#: ./docs/11.x/helpers.md:2167
#: ./docs/master/helpers.md:2043
#~ msgctxt "P"
#~ msgid "<a name=\"method-retry\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3294
#: ./docs/9.x/helpers.md:3897
#: ./docs/10.x/helpers.md:1977
#: ./docs/11.x/helpers.md:2168
#: ./docs/master/helpers.md:2044
msgctxt "H4"
msgid "`retry()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3296
#: ./docs/9.x/helpers.md:3899
#: ./docs/10.x/helpers.md:1979
#: ./docs/11.x/helpers.md:2170
#: ./docs/master/helpers.md:2046
msgctxt "P"
msgid "The `retry` function attempts to execute the given callback until the given maximum attempt threshold is met. If the callback does not throw an exception, its return value will be returned. If the callback throws an exception, it will automatically be retried. If the maximum attempt count is exceeded, the exception will be thrown:"
msgstr ""

#: ./docs/8.x/helpers.md:3298
msgctxt "CODE"
msgid "return retry(5, function () {\n"
"    // Attempt 5 times while resting 100ms in between attempts...\n"
"}, 100);"
msgstr ""

#: ./docs/8.x/helpers.md:3302
msgctxt "P"
msgid "If you would like to manually calculate the number of milliseconds to sleep in between attempts, you may pass a closure as the third argument to the `retry` function:"
msgstr ""

#: ./docs/8.x/helpers.md:3304
msgctxt "CODE"
msgid "return retry(5, function () {\n"
"    // ...\n"
"}, function ($attempt) {\n"
"    return $attempt * 100;\n"
"});"
msgstr ""

#: ./docs/9.x/helpers.md:3307
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('laravel')->whenIsAscii(function ($string) {\n"
"    return $string->title();\n"
"});\n\n"
"// 'Laravel'"
msgstr ""

#: ./docs/8.x/helpers.md:3311
#: ./docs/9.x/helpers.md:3919
#: ./docs/10.x/helpers.md:2001
#: ./docs/11.x/helpers.md:2192
#: ./docs/master/helpers.md:2068
msgctxt "P"
msgid "To only retry under specific conditions, you may pass a closure as the fourth argument to the `retry` function:"
msgstr ""

#: ./docs/8.x/helpers.md:3313
#: ./docs/9.x/helpers.md:3921
msgctxt "CODE"
msgid "return retry(5, function () {\n"
"    // ...\n"
"}, 100, function ($exception) {\n"
"    return $exception instanceof RetryException;\n"
"});"
msgstr ""

#: ./docs/9.x/helpers.md:3315
#~ msgctxt "P"
#~ msgid "<a name=\"method-fluent-str-when-is-ulid\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:3316
msgctxt "H4"
msgid "`whenIsUlid` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:3318
msgctxt "P"
msgid "The `whenIsUlid` method invokes the given closure if the string is a valid ULID. The closure will receive the fluent string instance:"
msgstr ""

#: ./docs/8.x/helpers.md:3319
#: ./docs/9.x/helpers.md:3927
#: ./docs/10.x/helpers.md:2011
#: ./docs/11.x/helpers.md:2202
#: ./docs/master/helpers.md:2078
#~ msgctxt "P"
#~ msgid "<a name=\"method-session\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3320
#: ./docs/9.x/helpers.md:3928
#: ./docs/10.x/helpers.md:2012
#: ./docs/11.x/helpers.md:2203
#: ./docs/master/helpers.md:2079
msgctxt "H4"
msgid "`session()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:3320
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('01gd6r360bp37zj17nxb55yv40')->whenIsUlid(function ($string) {\n"
"    return $string->substr(0, 8);\n"
"});\n\n"
"// '01gd6r36'"
msgstr ""

#: ./docs/8.x/helpers.md:3322
#: ./docs/9.x/helpers.md:3930
#: ./docs/10.x/helpers.md:2014
#: ./docs/11.x/helpers.md:2205
#: ./docs/master/helpers.md:2081
msgctxt "P"
msgid "The `session` function may be used to get or set [session](/docs/{{version}}/session) values:"
msgstr ""

#: ./docs/8.x/helpers.md:3324
#: ./docs/9.x/helpers.md:3932
#: ./docs/10.x/helpers.md:2016
#: ./docs/11.x/helpers.md:2207
#: ./docs/master/helpers.md:2083
msgctxt "CODE"
msgid "$value = session('key');"
msgstr ""

#: ./docs/8.x/helpers.md:3326
#: ./docs/9.x/helpers.md:3934
#: ./docs/10.x/helpers.md:2018
#: ./docs/11.x/helpers.md:2209
#: ./docs/master/helpers.md:2085
msgctxt "P"
msgid "You may set values by passing an array of key / value pairs to the function:"
msgstr ""

#: ./docs/8.x/helpers.md:3328
#: ./docs/9.x/helpers.md:3936
#: ./docs/10.x/helpers.md:2020
#: ./docs/11.x/helpers.md:2211
#: ./docs/master/helpers.md:2087
msgctxt "CODE"
msgid "session(['chairs' => 7, 'instruments' => 3]);"
msgstr ""

#: ./docs/8.x/helpers.md:3330
#: ./docs/9.x/helpers.md:3938
#: ./docs/10.x/helpers.md:2022
#: ./docs/11.x/helpers.md:2213
#: ./docs/master/helpers.md:2089
msgctxt "P"
msgid "The session store will be returned if no value is passed to the function:"
msgstr ""

#: ./docs/8.x/helpers.md:3332
#: ./docs/9.x/helpers.md:3940
#: ./docs/10.x/helpers.md:2024
#: ./docs/11.x/helpers.md:2215
#: ./docs/master/helpers.md:2091
msgctxt "CODE"
msgid "$value = session()->get('key');\n\n"
"session()->put('key', $value);"
msgstr ""

#: ./docs/9.x/helpers.md:3333
msgctxt "CODE"
msgid "use Illuminate\\Support\\Str;\n\n"
"$string = Str::of('a0a2a2d2-0b87-4a18-83f2-2529882be2de')->whenIsUuid(function ($string) {\n"
"    return $string->substr(0, 8);\n"
"});\n\n"
"// 'a0a2a2d2'"
msgstr ""

#: ./docs/8.x/helpers.md:3336
#: ./docs/9.x/helpers.md:3944
#: ./docs/10.x/helpers.md:2028
#: ./docs/11.x/helpers.md:2219
#: ./docs/master/helpers.md:2095
#~ msgctxt "P"
#~ msgid "<a name=\"method-tap\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3337
#: ./docs/9.x/helpers.md:3945
#: ./docs/10.x/helpers.md:2029
#: ./docs/11.x/helpers.md:2220
#: ./docs/master/helpers.md:2096
msgctxt "H4"
msgid "`tap()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3339
#: ./docs/9.x/helpers.md:3947
#: ./docs/10.x/helpers.md:2031
#: ./docs/11.x/helpers.md:2222
#: ./docs/master/helpers.md:2098
msgctxt "P"
msgid "The `tap` function accepts two arguments: an arbitrary `$value` and a closure. The `$value` will be passed to the closure and then be returned by the `tap` function. The return value of the closure is irrelevant:"
msgstr ""

#: ./docs/8.x/helpers.md:3341
#: ./docs/9.x/helpers.md:3949
msgctxt "CODE"
msgid "$user = tap(User::first(), function ($user) {\n"
"    $user->name = 'taylor';\n\n"
"    $user->save();\n"
"});"
msgstr ""

#: ./docs/8.x/helpers.md:3347
#: ./docs/9.x/helpers.md:3955
#: ./docs/10.x/helpers.md:2039
#: ./docs/11.x/helpers.md:2230
#: ./docs/master/helpers.md:2106
msgctxt "P"
msgid "If no closure is passed to the `tap` function, you may call any method on the given `$value`. The return value of the method you call will always be `$value`, regardless of what the method actually returns in its definition. For example, the Eloquent `update` method typically returns an integer. However, we can force the method to return the model itself by chaining the `update` method call through the `tap` function:"
msgstr ""

#: ./docs/8.x/helpers.md:3349
#: ./docs/9.x/helpers.md:3957
#: ./docs/10.x/helpers.md:2041
#: ./docs/11.x/helpers.md:2232
#: ./docs/master/helpers.md:2108
msgctxt "CODE"
msgid "$user = tap($user)->update([\n"
"    'name' => $name,\n"
"    'email' => $email,\n"
"]);"
msgstr ""

#: ./docs/8.x/helpers.md:3354
#: ./docs/9.x/helpers.md:3962
#: ./docs/10.x/helpers.md:2046
#: ./docs/11.x/helpers.md:2237
#: ./docs/master/helpers.md:2113
msgctxt "P"
msgid "To add a `tap` method to a class, you may add the `Illuminate\\Support\\Traits\\Tappable` trait to the class. The `tap` method of this trait accepts a Closure as its only argument. The object instance itself will be passed to the Closure and then be returned by the `tap` method:"
msgstr ""

#: ./docs/8.x/helpers.md:3356
#: ./docs/9.x/helpers.md:3964
msgctxt "CODE"
msgid "return $user->tap(function ($user) {\n"
"    //\n"
"});"
msgstr ""

#: ./docs/8.x/helpers.md:3360
#: ./docs/9.x/helpers.md:3968
#: ./docs/10.x/helpers.md:2052
#: ./docs/11.x/helpers.md:2243
#: ./docs/master/helpers.md:2119
#~ msgctxt "P"
#~ msgid "<a name=\"method-throw-if\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3361
#: ./docs/9.x/helpers.md:3969
#: ./docs/10.x/helpers.md:2053
#: ./docs/11.x/helpers.md:2244
#: ./docs/master/helpers.md:2120
msgctxt "H4"
msgid "`throw_if()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3363
#: ./docs/9.x/helpers.md:3971
#: ./docs/10.x/helpers.md:2055
#: ./docs/11.x/helpers.md:2246
#: ./docs/master/helpers.md:2122
msgctxt "P"
msgid "The `throw_if` function throws the given exception if a given boolean expression evaluates to `true`:"
msgstr ""

#: ./docs/8.x/helpers.md:3365
#: ./docs/9.x/helpers.md:3973
#: ./docs/10.x/helpers.md:2057
#: ./docs/11.x/helpers.md:2248
#: ./docs/master/helpers.md:2124
msgctxt "CODE"
msgid "throw_if(! Auth::user()->isAdmin(), AuthorizationException::class);\n\n"
"throw_if(\n"
"    ! Auth::user()->isAdmin(),\n"
"    AuthorizationException::class,\n"
"    'You are not allowed to access this page.'\n"
");"
msgstr ""

#: ./docs/8.x/helpers.md:3373
#: ./docs/9.x/helpers.md:3981
#: ./docs/10.x/helpers.md:2065
#: ./docs/11.x/helpers.md:2256
#: ./docs/master/helpers.md:2132
#~ msgctxt "P"
#~ msgid "<a name=\"method-throw-unless\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3374
#: ./docs/9.x/helpers.md:3982
#: ./docs/10.x/helpers.md:2066
#: ./docs/11.x/helpers.md:2257
#: ./docs/master/helpers.md:2133
msgctxt "H4"
msgid "`throw_unless()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3376
#: ./docs/9.x/helpers.md:3984
#: ./docs/10.x/helpers.md:2068
#: ./docs/11.x/helpers.md:2259
#: ./docs/master/helpers.md:2135
msgctxt "P"
msgid "The `throw_unless` function throws the given exception if a given boolean expression evaluates to `false`:"
msgstr ""

#: ./docs/8.x/helpers.md:3378
#: ./docs/9.x/helpers.md:3986
#: ./docs/10.x/helpers.md:2070
#: ./docs/11.x/helpers.md:2261
#: ./docs/master/helpers.md:2137
msgctxt "CODE"
msgid "throw_unless(Auth::user()->isAdmin(), AuthorizationException::class);\n\n"
"throw_unless(\n"
"    Auth::user()->isAdmin(),\n"
"    AuthorizationException::class,\n"
"    'You are not allowed to access this page.'\n"
");"
msgstr ""

#: ./docs/8.x/helpers.md:3386
#: ./docs/9.x/helpers.md:3994
#: ./docs/10.x/helpers.md:2078
#: ./docs/11.x/helpers.md:2269
#: ./docs/master/helpers.md:2145
#~ msgctxt "P"
#~ msgid "<a name=\"method-today\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3387
#: ./docs/9.x/helpers.md:3995
#: ./docs/10.x/helpers.md:2079
#: ./docs/11.x/helpers.md:2270
#: ./docs/master/helpers.md:2146
msgctxt "H4"
msgid "`today()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3389
#: ./docs/9.x/helpers.md:3997
#: ./docs/10.x/helpers.md:2081
#: ./docs/11.x/helpers.md:2272
#: ./docs/master/helpers.md:2148
msgctxt "P"
msgid "The `today` function creates a new `Illuminate\\Support\\Carbon` instance for the current date:"
msgstr ""

#: ./docs/8.x/helpers.md:3391
#: ./docs/9.x/helpers.md:3999
#: ./docs/10.x/helpers.md:2083
#: ./docs/11.x/helpers.md:2274
#: ./docs/master/helpers.md:2150
msgctxt "CODE"
msgid "$today = today();"
msgstr ""

#: ./docs/8.x/helpers.md:3393
#: ./docs/9.x/helpers.md:4001
#: ./docs/10.x/helpers.md:2085
#: ./docs/11.x/helpers.md:2276
#: ./docs/master/helpers.md:2152
#~ msgctxt "P"
#~ msgid "<a name=\"method-trait-uses-recursive\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3394
#: ./docs/9.x/helpers.md:4002
#: ./docs/10.x/helpers.md:2086
#: ./docs/11.x/helpers.md:2277
#: ./docs/master/helpers.md:2153
msgctxt "H4"
msgid "`trait_uses_recursive()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3396
#: ./docs/9.x/helpers.md:4004
#: ./docs/10.x/helpers.md:2088
#: ./docs/11.x/helpers.md:2279
#: ./docs/master/helpers.md:2155
msgctxt "P"
msgid "The `trait_uses_recursive` function returns all traits used by a trait:"
msgstr ""

#: ./docs/8.x/helpers.md:3398
#: ./docs/9.x/helpers.md:4006
#: ./docs/10.x/helpers.md:2090
#: ./docs/11.x/helpers.md:2281
#: ./docs/master/helpers.md:2157
msgctxt "CODE"
msgid "$traits = trait_uses_recursive(\\Illuminate\\Notifications\\Notifiable::class);"
msgstr ""

#: ./docs/8.x/helpers.md:3400
#: ./docs/9.x/helpers.md:4008
#: ./docs/10.x/helpers.md:2092
#: ./docs/11.x/helpers.md:2283
#: ./docs/master/helpers.md:2159
#~ msgctxt "P"
#~ msgid "<a name=\"method-transform\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3401
#: ./docs/9.x/helpers.md:4009
#: ./docs/10.x/helpers.md:2093
#: ./docs/11.x/helpers.md:2284
#: ./docs/master/helpers.md:2160
msgctxt "H4"
msgid "`transform()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3403
#: ./docs/9.x/helpers.md:4011
#: ./docs/10.x/helpers.md:2095
#: ./docs/11.x/helpers.md:2286
#: ./docs/master/helpers.md:2162
msgctxt "P"
msgid "The `transform` function executes a closure on a given value if the value is not [blank](#method-blank) and then returns the return value of the closure:"
msgstr ""

#: ./docs/8.x/helpers.md:3405
#: ./docs/9.x/helpers.md:4013
msgctxt "CODE"
msgid "$callback = function ($value) {\n"
"    return $value * 2;\n"
"};\n\n"
"$result = transform(5, $callback);\n\n"
"// 10"
msgstr ""

#: ./docs/8.x/helpers.md:3413
#: ./docs/9.x/helpers.md:4021
#: ./docs/10.x/helpers.md:2105
#: ./docs/11.x/helpers.md:2296
#: ./docs/master/helpers.md:2172
msgctxt "P"
msgid "A default value or closure may be passed as the third argument to the function. This value will be returned if the given value is blank:"
msgstr ""

#: ./docs/8.x/helpers.md:3415
#: ./docs/9.x/helpers.md:4023
#: ./docs/10.x/helpers.md:2107
#: ./docs/11.x/helpers.md:2298
#: ./docs/master/helpers.md:2174
msgctxt "CODE"
msgid "$result = transform(null, $callback, 'The value is blank');\n\n"
"// The value is blank"
msgstr ""

#: ./docs/8.x/helpers.md:3419
#: ./docs/9.x/helpers.md:4027
#: ./docs/10.x/helpers.md:2111
#: ./docs/11.x/helpers.md:2302
#: ./docs/master/helpers.md:2178
#~ msgctxt "P"
#~ msgid "<a name=\"method-validator\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3420
#: ./docs/9.x/helpers.md:4028
#: ./docs/10.x/helpers.md:2112
#: ./docs/11.x/helpers.md:2303
#: ./docs/master/helpers.md:2179
msgctxt "H4"
msgid "`validator()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3422
#: ./docs/9.x/helpers.md:4030
#: ./docs/10.x/helpers.md:2114
#: ./docs/11.x/helpers.md:2305
#: ./docs/master/helpers.md:2181
msgctxt "P"
msgid "The `validator` function creates a new [validator](/docs/{{version}}/validation) instance with the given arguments. You may use it as an alternative to the `Validator` facade:"
msgstr ""

#: ./docs/8.x/helpers.md:3424
#: ./docs/9.x/helpers.md:4032
#: ./docs/10.x/helpers.md:2116
#: ./docs/11.x/helpers.md:2307
#: ./docs/master/helpers.md:2183
msgctxt "CODE"
msgid "$validator = validator($data, $rules, $messages);"
msgstr ""

#: ./docs/8.x/helpers.md:3426
#: ./docs/9.x/helpers.md:4034
#: ./docs/10.x/helpers.md:2118
#: ./docs/11.x/helpers.md:2309
#: ./docs/master/helpers.md:2185
#~ msgctxt "P"
#~ msgid "<a name=\"method-value\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3427
#: ./docs/9.x/helpers.md:4035
#: ./docs/10.x/helpers.md:2119
#: ./docs/11.x/helpers.md:2310
#: ./docs/master/helpers.md:2186
msgctxt "H4"
msgid "`value()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3429
#: ./docs/9.x/helpers.md:4037
#: ./docs/10.x/helpers.md:2121
#: ./docs/11.x/helpers.md:2312
#: ./docs/master/helpers.md:2188
msgctxt "P"
msgid "The `value` function returns the value it is given. However, if you pass a closure to the function, the closure will be executed and its returned value will be returned:"
msgstr ""

#: ./docs/8.x/helpers.md:3431
#: ./docs/9.x/helpers.md:4039
#: ./docs/10.x/helpers.md:2123
#: ./docs/11.x/helpers.md:2314
#: ./docs/master/helpers.md:2190
msgctxt "CODE"
msgid "$result = value(true);\n\n"
"// true\n\n"
"$result = value(function () {\n"
"    return false;\n"
"});\n\n"
"// false"
msgstr ""

#: ./docs/9.x/helpers.md:3436
#: ./docs/10.x/helpers.md:1501
#: ./docs/11.x/helpers.md:1625
#: ./docs/master/helpers.md:1516
#~ msgctxt "P"
#~ msgid "<a name=\"method-to-route\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:3437
#: ./docs/10.x/helpers.md:1502
#: ./docs/11.x/helpers.md:1626
#: ./docs/master/helpers.md:1517
msgctxt "H4"
msgid "`to_route()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:3439
#: ./docs/10.x/helpers.md:1504
#: ./docs/11.x/helpers.md:1628
#: ./docs/master/helpers.md:1519
msgctxt "P"
msgid "The `to_route` function generates a [redirect HTTP response](/docs/{{version}}/responses#redirects) for a given [named route](/docs/{{version}}/routing#named-routes):"
msgstr ""

#: ./docs/8.x/helpers.md:3441
#: ./docs/9.x/helpers.md:4057
#: ./docs/10.x/helpers.md:2141
#: ./docs/11.x/helpers.md:2332
#: ./docs/master/helpers.md:2208
#~ msgctxt "P"
#~ msgid "<a name=\"method-view\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:3441
#: ./docs/10.x/helpers.md:1506
#: ./docs/11.x/helpers.md:1630
#: ./docs/master/helpers.md:1521
msgctxt "CODE"
msgid "return to_route('users.show', ['user' => 1]);"
msgstr ""

#: ./docs/8.x/helpers.md:3442
#: ./docs/9.x/helpers.md:4058
#: ./docs/10.x/helpers.md:2142
#: ./docs/11.x/helpers.md:2333
#: ./docs/master/helpers.md:2209
msgctxt "H4"
msgid "`view()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:3443
#: ./docs/10.x/helpers.md:1508
#: ./docs/11.x/helpers.md:1632
#: ./docs/master/helpers.md:1523
msgctxt "P"
msgid "If necessary, you may pass the HTTP status code that should be assigned to the redirect and any additional response headers as the third and fourth arguments to the `to_route` method:"
msgstr ""

#: ./docs/8.x/helpers.md:3444
#: ./docs/9.x/helpers.md:4060
#: ./docs/10.x/helpers.md:2144
#: ./docs/11.x/helpers.md:2335
#: ./docs/master/helpers.md:2211
msgctxt "P"
msgid "The `view` function retrieves a [view](/docs/{{version}}/views) instance:"
msgstr ""

#: ./docs/9.x/helpers.md:3445
#: ./docs/10.x/helpers.md:1510
#: ./docs/11.x/helpers.md:1634
#: ./docs/master/helpers.md:1525
msgctxt "CODE"
msgid "return to_route('users.show', ['user' => 1], 302, ['X-Framework' => 'Laravel']);"
msgstr ""

#: ./docs/8.x/helpers.md:3446
#: ./docs/9.x/helpers.md:4062
#: ./docs/10.x/helpers.md:2146
#: ./docs/11.x/helpers.md:2337
#: ./docs/master/helpers.md:2213
msgctxt "CODE"
msgid "return view('auth.login');"
msgstr ""

#: ./docs/8.x/helpers.md:3448
#: ./docs/9.x/helpers.md:4064
#: ./docs/10.x/helpers.md:2148
#: ./docs/11.x/helpers.md:2339
#: ./docs/master/helpers.md:2215
#~ msgctxt "P"
#~ msgid "<a name=\"method-with\"></a>"
#~ msgstr ""

#: ./docs/8.x/helpers.md:3449
#: ./docs/9.x/helpers.md:4065
#: ./docs/10.x/helpers.md:2149
#: ./docs/11.x/helpers.md:2340
#: ./docs/master/helpers.md:2216
msgctxt "H4"
msgid "`with()` {.collection-method}"
msgstr ""

#: ./docs/8.x/helpers.md:3451
#: ./docs/9.x/helpers.md:4067
#: ./docs/10.x/helpers.md:2151
#: ./docs/11.x/helpers.md:2342
#: ./docs/master/helpers.md:2218
msgctxt "P"
msgid "The `with` function returns the value it is given. If a closure is passed as the second argument to the function, the closure will be executed and its returned value will be returned:"
msgstr ""

#: ./docs/8.x/helpers.md:3453
#: ./docs/9.x/helpers.md:4069
msgctxt "CODE"
msgid "$callback = function ($value) {\n"
"    return is_numeric($value) ? $value * 2 : 0;\n"
"};\n\n"
"$result = with(5, $callback);\n\n"
"// 10\n\n"
"$result = with(null, $callback);\n\n"
"// 0\n\n"
"$result = with(5, null);\n\n"
"// 5"
msgstr ""

#: ./docs/9.x/helpers.md:3626
#: ./docs/10.x/helpers.md:1691
#: ./docs/11.x/helpers.md:1830
#: ./docs/master/helpers.md:1706
#~ msgctxt "P"
#~ msgid "<a name=\"method-decrypt\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:3627
#: ./docs/10.x/helpers.md:1692
#: ./docs/11.x/helpers.md:1831
#: ./docs/master/helpers.md:1707
msgctxt "H4"
msgid "`decrypt()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:3629
#: ./docs/10.x/helpers.md:1694
#: ./docs/11.x/helpers.md:1833
#: ./docs/master/helpers.md:1709
msgctxt "P"
msgid "The `decrypt` function [decrypts](/docs/{{version}}/encryption) the given value. You may use this function as an alternative to the `Crypt` facade:"
msgstr ""

#: ./docs/9.x/helpers.md:3631
#: ./docs/10.x/helpers.md:1696
#: ./docs/11.x/helpers.md:1835
#: ./docs/master/helpers.md:1711
msgctxt "CODE"
msgid "$password = decrypt($value);"
msgstr ""

#: ./docs/9.x/helpers.md:3662
#: ./docs/10.x/helpers.md:1734
#: ./docs/11.x/helpers.md:1873
#: ./docs/master/helpers.md:1749
#~ msgctxt "P"
#~ msgid "<a name=\"method-encrypt\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:3663
#: ./docs/10.x/helpers.md:1735
#: ./docs/11.x/helpers.md:1874
#: ./docs/master/helpers.md:1750
msgctxt "H4"
msgid "`encrypt()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:3665
#: ./docs/10.x/helpers.md:1737
#: ./docs/11.x/helpers.md:1876
#: ./docs/master/helpers.md:1752
msgctxt "P"
msgid "The `encrypt` function [encrypts](/docs/{{version}}/encryption) the given value. You may use this function as an alternative to the `Crypt` facade:"
msgstr ""

#: ./docs/9.x/helpers.md:3667
#: ./docs/10.x/helpers.md:1739
#: ./docs/11.x/helpers.md:1878
#: ./docs/master/helpers.md:1754
msgctxt "CODE"
msgid "$secret = encrypt('my-secret-value');"
msgstr ""

#: ./docs/9.x/helpers.md:3688
#: ./docs/10.x/helpers.md:1760
#: ./docs/11.x/helpers.md:1899
#: ./docs/master/helpers.md:1775
#~ msgctxt "P"
#~ msgid "<a name=\"method-fake\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:3689
#: ./docs/10.x/helpers.md:1761
#: ./docs/11.x/helpers.md:1900
#: ./docs/master/helpers.md:1776
msgctxt "H4"
msgid "`fake()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:3691
#: ./docs/10.x/helpers.md:1763
#: ./docs/11.x/helpers.md:1902
#: ./docs/master/helpers.md:1778
msgctxt "P"
msgid "The `fake` function resolves a [Faker](https://github.com/FakerPHP/Faker) singleton from the container, which can be useful when creating fake data in model factories, database seeding, tests, and prototyping views:"
msgstr ""

#: ./docs/9.x/helpers.md:3693
#: ./docs/10.x/helpers.md:1765
#: ./docs/11.x/helpers.md:1904
#: ./docs/master/helpers.md:1780
msgctxt "CODE: blade"
msgid "@for($i = 0; $i < 10; $i++)\n"
"    <dl>\n"
"        <dt>Name</dt>\n"
"        <dd>{{ fake()->name() }}</dd>\n\n"
"        <dt>Email</dt>\n"
"        <dd>{{ fake()->unique()->safeEmail() }}</dd>\n"
"    </dl>\n"
"@endfor"
msgstr ""

#: ./docs/9.x/helpers.md:3705
#: ./docs/10.x/helpers.md:1777
msgctxt "P"
msgid "By default, the `fake` function will utilize the `app.faker_locale` configuration option in your `config/app.php` configuration file; however, you may also specify the locale by passing it to the `fake` function. Each locale will resolve an individual singleton:"
msgstr ""

#: ./docs/9.x/helpers.md:3707
#: ./docs/10.x/helpers.md:1779
#: ./docs/11.x/helpers.md:1918
#: ./docs/master/helpers.md:1794
msgctxt "CODE"
msgid "fake('nl_NL')->name()"
msgstr ""

#: ./docs/9.x/helpers.md:3780
#: ./docs/10.x/helpers.md:1852
#: ./docs/11.x/helpers.md:2004
#: ./docs/master/helpers.md:1880
msgctxt "P"
msgid "Since the \"default value\" provided as the second argument to the `old` function is often an attribute of an Eloquent model, Laravel allows you to simply pass the entire Eloquent model as the second argument to the `old` function. When doing so, Laravel will assume the first argument provided to the `old` function is the name of the Eloquent attribute that should be considered the \"default value\":"
msgstr ""

#: ./docs/9.x/helpers.md:3782
#: ./docs/10.x/helpers.md:1854
#: ./docs/11.x/helpers.md:2006
#: ./docs/master/helpers.md:1882
msgctxt "CODE"
msgid "{{ old('name', $user->name) }}\n\n"
"// Is equivalent to...\n\n"
"{{ old('name', $user) }}"
msgstr ""

#: ./docs/9.x/helpers.md:3832
#: ./docs/10.x/helpers.md:1904
#: ./docs/11.x/helpers.md:2095
#: ./docs/master/helpers.md:1971
#~ msgctxt "P"
#~ msgid "<a name=\"method-report-if\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:3833
#: ./docs/10.x/helpers.md:1905
#: ./docs/11.x/helpers.md:2096
#: ./docs/master/helpers.md:1972
msgctxt "H4"
msgid "`report_if()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:3835
#: ./docs/10.x/helpers.md:1907
#: ./docs/master/helpers.md:1974
msgctxt "P"
msgid "The `report_if` function will report an exception using your [exception handler](/docs/{{version}}/errors#the-exception-handler) if the given condition is `true`:"
msgstr ""

#: ./docs/9.x/helpers.md:3837
#: ./docs/10.x/helpers.md:1909
#: ./docs/11.x/helpers.md:2100
#: ./docs/master/helpers.md:1976
msgctxt "CODE"
msgid "report_if($shouldReport, $e);\n\n"
"report_if($shouldReport, 'Something went wrong.');"
msgstr ""

#: ./docs/9.x/helpers.md:3841
#: ./docs/10.x/helpers.md:1913
#: ./docs/11.x/helpers.md:2104
#: ./docs/master/helpers.md:1980
#~ msgctxt "P"
#~ msgid "<a name=\"method-report-unless\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:3842
#: ./docs/10.x/helpers.md:1914
#: ./docs/11.x/helpers.md:2105
#: ./docs/master/helpers.md:1981
msgctxt "H4"
msgid "`report_unless()` {.collection-method}"
msgstr ""

#: ./docs/9.x/helpers.md:3844
#: ./docs/10.x/helpers.md:1916
#: ./docs/master/helpers.md:1983
msgctxt "P"
msgid "The `report_unless` function will report an exception using your [exception handler](/docs/{{version}}/errors#the-exception-handler) if the given condition is `false`:"
msgstr ""

#: ./docs/9.x/helpers.md:3846
#: ./docs/10.x/helpers.md:1918
#: ./docs/11.x/helpers.md:2109
#: ./docs/master/helpers.md:1985
msgctxt "CODE"
msgid "report_unless($reportingDisabled, $e);\n\n"
"report_unless($reportingDisabled, 'Something went wrong.');"
msgstr ""

#: ./docs/9.x/helpers.md:3901
#: ./docs/10.x/helpers.md:1981
#: ./docs/11.x/helpers.md:2172
#: ./docs/master/helpers.md:2048
msgctxt "CODE"
msgid "return retry(5, function () {\n"
"    // Attempt 5 times while resting 100ms between attempts...\n"
"}, 100);"
msgstr ""

#: ./docs/9.x/helpers.md:3905
#: ./docs/10.x/helpers.md:1985
#: ./docs/11.x/helpers.md:2176
#: ./docs/master/helpers.md:2052
msgctxt "P"
msgid "If you would like to manually calculate the number of milliseconds to sleep between attempts, you may pass a closure as the third argument to the `retry` function:"
msgstr ""

#: ./docs/9.x/helpers.md:3907
msgctxt "CODE"
msgid "return retry(5, function () {\n"
"    // ...\n"
"}, function ($attempt, $exception) {\n"
"    return $attempt * 100;\n"
"});"
msgstr ""

#: ./docs/9.x/helpers.md:3913
#: ./docs/10.x/helpers.md:1995
#: ./docs/11.x/helpers.md:2186
#: ./docs/master/helpers.md:2062
msgctxt "P"
msgid "For convenience, you may provide an array as the first argument to the `retry` function. This array will be used to determine how many milliseconds to sleep between subsequent attempts:"
msgstr ""

#: ./docs/9.x/helpers.md:3915
#: ./docs/10.x/helpers.md:1997
#: ./docs/11.x/helpers.md:2188
#: ./docs/master/helpers.md:2064
msgctxt "CODE"
msgid "return retry([100, 200], function () {\n"
"    // Sleep for 100ms on first retry, 200ms on second retry...\n"
"});"
msgstr ""

#: ./docs/9.x/helpers.md:4049
#: ./docs/10.x/helpers.md:2133
#: ./docs/11.x/helpers.md:2324
#: ./docs/master/helpers.md:2200
msgctxt "P"
msgid "Additional arguments may be passed to the `value` function. If the first argument is a closure then the additional parameters will be passed to the closure as arguments, otherwise they will be ignored:"
msgstr ""

#: ./docs/9.x/helpers.md:4051
msgctxt "CODE"
msgid "$result = value(function ($name) {\n"
"    return $parameter;\n"
"}, 'Taylor');\n\n"
"// 'Taylor'"
msgstr ""

#: ./docs/9.x/helpers.md:4085
#: ./docs/10.x/helpers.md:2169
#: ./docs/11.x/helpers.md:2377
#: ./docs/master/helpers.md:2236
#~ msgctxt "P"
#~ msgid "<a name=\"other-utilities\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:4086
#: ./docs/10.x/helpers.md:2170
#: ./docs/11.x/helpers.md:2378
#: ./docs/master/helpers.md:2237
msgctxt "H2"
msgid "Other Utilities"
msgstr ""

#: ./docs/9.x/helpers.md:4088
#: ./docs/10.x/helpers.md:2172
#: ./docs/11.x/helpers.md:2380
#: ./docs/master/helpers.md:2239
#~ msgctxt "P"
#~ msgid "<a name=\"benchmarking\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:4089
#: ./docs/10.x/helpers.md:2173
#: ./docs/11.x/helpers.md:2381
#: ./docs/master/helpers.md:2240
msgctxt "H3"
msgid "Benchmarking"
msgstr ""

#: ./docs/9.x/helpers.md:4091
#: ./docs/10.x/helpers.md:2175
#: ./docs/11.x/helpers.md:2383
#: ./docs/master/helpers.md:2242
msgctxt "P"
msgid "Sometimes you may wish to quickly test the performance of certain parts of your application. On those occasions, you may utilize the `Benchmark` support class to measure the number of milliseconds it takes for the given callbacks to complete:"
msgstr ""

#: ./docs/9.x/helpers.md:4093
#: ./docs/10.x/helpers.md:2177
#: ./docs/11.x/helpers.md:2385
#: ./docs/master/helpers.md:2244
msgctxt "CODE"
msgid "<?php\n\n"
"use App\\Models\\User;\n"
"use Illuminate\\Support\\Benchmark;\n\n"
"Benchmark::dd(fn () => User::find(1)); // 0.1 ms\n\n"
"Benchmark::dd([\n"
"    'Scenario 1' => fn () => User::count(), // 0.5 ms\n"
"    'Scenario 2' => fn () => User::all()->count(), // 20.0 ms\n"
"]);"
msgstr ""

#: ./docs/9.x/helpers.md:4105
#: ./docs/10.x/helpers.md:2189
#: ./docs/11.x/helpers.md:2397
#: ./docs/master/helpers.md:2256
msgctxt "P"
msgid "By default, the given callbacks will be executed once (one iteration), and their duration will be displayed in the browser / console."
msgstr ""

#: ./docs/9.x/helpers.md:4107
#: ./docs/10.x/helpers.md:2191
#: ./docs/11.x/helpers.md:2399
#: ./docs/master/helpers.md:2258
msgctxt "P"
msgid "To invoke a callback more than once, you may specify the number of iterations that the callback should be invoked as the second argument to the method. When executing a callback more than once, the `Benchmark` class will return the average amount of milliseconds it took to execute the callback across all iterations:"
msgstr ""

#: ./docs/9.x/helpers.md:4109
#: ./docs/10.x/helpers.md:2193
#: ./docs/11.x/helpers.md:2401
#: ./docs/master/helpers.md:2260
msgctxt "CODE"
msgid "Benchmark::dd(fn () => User::count(), iterations: 10); // 0.5 ms"
msgstr ""

#: ./docs/9.x/helpers.md:4111
#: ./docs/10.x/helpers.md:2218
#: ./docs/11.x/helpers.md:2528
#: ./docs/master/helpers.md:2285
#~ msgctxt "P"
#~ msgid "<a name=\"lottery\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:4112
#: ./docs/10.x/helpers.md:2219
#: ./docs/11.x/helpers.md:2529
#: ./docs/master/helpers.md:2286
msgctxt "H3"
msgid "Lottery"
msgstr ""

#: ./docs/9.x/helpers.md:4114
#: ./docs/10.x/helpers.md:2221
#: ./docs/11.x/helpers.md:2531
#: ./docs/master/helpers.md:2288
msgctxt "P"
msgid "Laravel's lottery class may be used to execute callbacks based on a set of given odds. This can be particularly useful when you only want to execute code for a percentage of your incoming requests:"
msgstr ""

#: ./docs/9.x/helpers.md:4116
#: ./docs/10.x/helpers.md:2223
#: ./docs/11.x/helpers.md:2533
#: ./docs/master/helpers.md:2290
msgctxt "CODE"
msgid "use Illuminate\\Support\\Lottery;\n\n"
"Lottery::odds(1, 20)\n"
"    ->winner(fn () => $user->won())\n"
"    ->loser(fn () => $user->lost())\n"
"    ->choose();"
msgstr ""

#: ./docs/9.x/helpers.md:4123
#: ./docs/10.x/helpers.md:2230
#: ./docs/11.x/helpers.md:2540
#: ./docs/master/helpers.md:2297
msgctxt "P"
msgid "You may combine Laravel's lottery class with other Laravel features. For example, you may wish to only report a small percentage of slow queries to your exception handler. And, since the lottery class is callable, we may pass an instance of the class into any method that accepts callables:"
msgstr ""

#: ./docs/9.x/helpers.md:4125
#: ./docs/10.x/helpers.md:2232
#: ./docs/11.x/helpers.md:2542
#: ./docs/master/helpers.md:2299
msgctxt "CODE"
msgid "use Carbon\\CarbonInterval;\n"
"use Illuminate\\Support\\Facades\\DB;\n"
"use Illuminate\\Support\\Lottery;\n\n"
"DB::whenQueryingForLongerThan(\n"
"    CarbonInterval::seconds(2),\n"
"    Lottery::odds(1, 100)->winner(fn () => report('Querying > 2 seconds.')),\n"
");"
msgstr ""

#: ./docs/9.x/helpers.md:4134
#: ./docs/10.x/helpers.md:2241
#: ./docs/11.x/helpers.md:2551
#: ./docs/master/helpers.md:2308
#~ msgctxt "P"
#~ msgid "<a name=\"testing-lotteries\"></a>"
#~ msgstr ""

#: ./docs/9.x/helpers.md:4135
#: ./docs/10.x/helpers.md:2242
#: ./docs/11.x/helpers.md:2552
#: ./docs/master/helpers.md:2309
msgctxt "H4"
msgid "Testing Lotteries"
msgstr ""

#: ./docs/9.x/helpers.md:4137
#: ./docs/10.x/helpers.md:2244
#: ./docs/11.x/helpers.md:2554
#: ./docs/master/helpers.md:2311
msgctxt "P"
msgid "Laravel provides some simple methods to allow you to easily test your application's lottery invocations:"
msgstr ""

#: ./docs/9.x/helpers.md:4139
#: ./docs/10.x/helpers.md:2246
#: ./docs/11.x/helpers.md:2556
#: ./docs/master/helpers.md:2313
msgctxt "CODE"
msgid "// Lottery will always win...\n"
"Lottery::alwaysWin();\n\n"
"// Lottery will always lose...\n"
"Lottery::alwaysLose();\n\n"
"// Lottery will win then lose, and finally return to normal behavior...\n"
"Lottery::fix([true, false]);\n\n"
"// Lottery will return to normal behavior...\n"
"Lottery::determineResultsNormally();"
msgstr ""

