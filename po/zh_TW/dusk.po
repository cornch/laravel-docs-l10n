msgid ""
msgstr ""
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: laravel-docs\n"
"X-Crowdin-Project-ID: 447952\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /main/templates/dusk.pot\n"
"X-Crowdin-File-ID: 49\n"
"Project-Id-Version: laravel-docs\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language-Team: Chinese Traditional\n"
"Language: zh_TW\n"
"PO-Revision-Date: 2024-11-30 06:47\n"

#: ./docs/8.x/dusk.md:1
#: ./docs/9.x/dusk.md:1
#: ./docs/10.x/dusk.md:1
#: ./docs/11.x/dusk.md:1
#: ./docs/master/dusk.md:1
msgctxt "H1"
msgid "Laravel Dusk"
msgstr ""

#: ./docs/8.x/dusk.md:3
#: ./docs/9.x/dusk.md:3
#: ./docs/10.x/dusk.md:3
#: ./docs/11.x/dusk.md:3
#: ./docs/master/dusk.md:3
msgctxt "P"
msgid "[Introduction](#introduction)"
msgstr ""

#: ./docs/8.x/dusk.md:4
#: ./docs/9.x/dusk.md:4
#: ./docs/10.x/dusk.md:4
#: ./docs/11.x/dusk.md:4
#: ./docs/master/dusk.md:4
msgctxt "P"
msgid "[Installation](#installation)"
msgstr ""

#: ./docs/8.x/dusk.md:5
#: ./docs/9.x/dusk.md:5
#: ./docs/10.x/dusk.md:5
#: ./docs/11.x/dusk.md:5
#: ./docs/master/dusk.md:5
msgctxt "P"
msgid "[Managing ChromeDriver Installations](#managing-chromedriver-installations)"
msgstr ""

#: ./docs/8.x/dusk.md:6
#: ./docs/9.x/dusk.md:6
#: ./docs/10.x/dusk.md:6
#: ./docs/11.x/dusk.md:6
#: ./docs/master/dusk.md:6
msgctxt "P"
msgid "[Using Other Browsers](#using-other-browsers)"
msgstr ""

#: ./docs/8.x/dusk.md:7
#: ./docs/9.x/dusk.md:7
#: ./docs/10.x/dusk.md:7
#: ./docs/11.x/dusk.md:7
#: ./docs/master/dusk.md:7
msgctxt "P"
msgid "[Getting Started](#getting-started)"
msgstr ""

#: ./docs/8.x/dusk.md:8
#: ./docs/9.x/dusk.md:8
#: ./docs/10.x/dusk.md:8
#: ./docs/11.x/dusk.md:8
#: ./docs/master/dusk.md:8
msgctxt "P"
msgid "[Generating Tests](#generating-tests)"
msgstr ""

#: ./docs/10.x/dusk.md:9
#: ./docs/11.x/dusk.md:9
#: ./docs/master/dusk.md:9
msgctxt "P"
msgid "[Resetting the Database After Each Test](#resetting-the-database-after-each-test)"
msgstr ""

#: ./docs/8.x/dusk.md:9
msgctxt "P"
msgid "[Database Migrations](#migrations)"
msgstr ""

#: ./docs/9.x/dusk.md:9
msgctxt "P"
msgid "[Resetting The Database After Each Test](#resetting-the-database-after-each-test)"
msgstr ""

#: ./docs/8.x/dusk.md:10
#: ./docs/9.x/dusk.md:10
#: ./docs/10.x/dusk.md:10
#: ./docs/11.x/dusk.md:10
#: ./docs/master/dusk.md:10
msgctxt "P"
msgid "[Running Tests](#running-tests)"
msgstr ""

#: ./docs/8.x/dusk.md:11
#: ./docs/9.x/dusk.md:11
#: ./docs/10.x/dusk.md:11
#: ./docs/11.x/dusk.md:11
#: ./docs/master/dusk.md:11
msgctxt "P"
msgid "[Environment Handling](#environment-handling)"
msgstr ""

#: ./docs/8.x/dusk.md:12
#: ./docs/9.x/dusk.md:12
#: ./docs/10.x/dusk.md:12
#: ./docs/11.x/dusk.md:12
#: ./docs/master/dusk.md:12
msgctxt "P"
msgid "[Browser Basics](#browser-basics)"
msgstr ""

#: ./docs/8.x/dusk.md:13
#: ./docs/9.x/dusk.md:13
#: ./docs/10.x/dusk.md:13
#: ./docs/11.x/dusk.md:13
#: ./docs/master/dusk.md:13
msgctxt "P"
msgid "[Creating Browsers](#creating-browsers)"
msgstr ""

#: ./docs/8.x/dusk.md:14
#: ./docs/9.x/dusk.md:14
#: ./docs/10.x/dusk.md:14
#: ./docs/11.x/dusk.md:14
#: ./docs/master/dusk.md:14
msgctxt "P"
msgid "[Navigation](#navigation)"
msgstr ""

#: ./docs/8.x/dusk.md:15
#: ./docs/9.x/dusk.md:15
#: ./docs/10.x/dusk.md:15
#: ./docs/11.x/dusk.md:15
#: ./docs/master/dusk.md:15
msgctxt "P"
msgid "[Resizing Browser Windows](#resizing-browser-windows)"
msgstr ""

#: ./docs/8.x/dusk.md:16
#: ./docs/9.x/dusk.md:16
#: ./docs/10.x/dusk.md:16
#: ./docs/11.x/dusk.md:16
#: ./docs/master/dusk.md:16
msgctxt "P"
msgid "[Browser Macros](#browser-macros)"
msgstr ""

#: ./docs/8.x/dusk.md:17
#: ./docs/9.x/dusk.md:17
#: ./docs/10.x/dusk.md:17
#: ./docs/11.x/dusk.md:17
#: ./docs/master/dusk.md:17
msgctxt "P"
msgid "[Authentication](#authentication)"
msgstr ""

#: ./docs/8.x/dusk.md:18
#: ./docs/9.x/dusk.md:18
#: ./docs/10.x/dusk.md:18
#: ./docs/11.x/dusk.md:18
#: ./docs/master/dusk.md:18
msgctxt "P"
msgid "[Cookies](#cookies)"
msgstr ""

#: ./docs/8.x/dusk.md:19
#: ./docs/9.x/dusk.md:19
#: ./docs/10.x/dusk.md:19
#: ./docs/11.x/dusk.md:19
#: ./docs/master/dusk.md:19
msgctxt "P"
msgid "[Executing JavaScript](#executing-javascript)"
msgstr ""

#: ./docs/10.x/dusk.md:20
#: ./docs/11.x/dusk.md:20
#: ./docs/master/dusk.md:20
msgctxt "P"
msgid "[Taking a Screenshot](#taking-a-screenshot)"
msgstr ""

#: ./docs/8.x/dusk.md:20
#: ./docs/9.x/dusk.md:20
msgctxt "P"
msgid "[Taking A Screenshot](#taking-a-screenshot)"
msgstr ""

#: ./docs/10.x/dusk.md:21
#: ./docs/11.x/dusk.md:21
#: ./docs/master/dusk.md:21
msgctxt "P"
msgid "[Storing Console Output to Disk](#storing-console-output-to-disk)"
msgstr ""

#: ./docs/8.x/dusk.md:21
#: ./docs/9.x/dusk.md:21
msgctxt "P"
msgid "[Storing Console Output To Disk](#storing-console-output-to-disk)"
msgstr ""

#: ./docs/10.x/dusk.md:22
#: ./docs/11.x/dusk.md:22
#: ./docs/master/dusk.md:22
msgctxt "P"
msgid "[Storing Page Source to Disk](#storing-page-source-to-disk)"
msgstr ""

#: ./docs/8.x/dusk.md:22
#: ./docs/9.x/dusk.md:22
msgctxt "P"
msgid "[Storing Page Source To Disk](#storing-page-source-to-disk)"
msgstr ""

#: ./docs/8.x/dusk.md:23
#: ./docs/9.x/dusk.md:23
#: ./docs/10.x/dusk.md:23
#: ./docs/11.x/dusk.md:23
#: ./docs/master/dusk.md:23
msgctxt "P"
msgid "[Interacting With Elements](#interacting-with-elements)"
msgstr ""

#: ./docs/8.x/dusk.md:24
#: ./docs/9.x/dusk.md:24
#: ./docs/10.x/dusk.md:24
#: ./docs/11.x/dusk.md:24
#: ./docs/master/dusk.md:24
msgctxt "P"
msgid "[Dusk Selectors](#dusk-selectors)"
msgstr ""

#: ./docs/10.x/dusk.md:25
#: ./docs/11.x/dusk.md:25
#: ./docs/master/dusk.md:25
msgctxt "P"
msgid "[Text, Values, and Attributes](#text-values-and-attributes)"
msgstr ""

#: ./docs/8.x/dusk.md:25
#: ./docs/9.x/dusk.md:25
msgctxt "P"
msgid "[Text, Values, & Attributes](#text-values-and-attributes)"
msgstr ""

#: ./docs/8.x/dusk.md:26
#: ./docs/9.x/dusk.md:26
#: ./docs/10.x/dusk.md:26
#: ./docs/11.x/dusk.md:26
#: ./docs/master/dusk.md:26
msgctxt "P"
msgid "[Interacting With Forms](#interacting-with-forms)"
msgstr ""

#: ./docs/8.x/dusk.md:27
#: ./docs/9.x/dusk.md:27
#: ./docs/10.x/dusk.md:27
#: ./docs/11.x/dusk.md:27
#: ./docs/master/dusk.md:27
msgctxt "P"
msgid "[Attaching Files](#attaching-files)"
msgstr ""

#: ./docs/8.x/dusk.md:28
#: ./docs/9.x/dusk.md:28
#: ./docs/10.x/dusk.md:28
#: ./docs/11.x/dusk.md:28
#: ./docs/master/dusk.md:28
msgctxt "P"
msgid "[Pressing Buttons](#pressing-buttons)"
msgstr ""

#: ./docs/8.x/dusk.md:29
#: ./docs/9.x/dusk.md:29
#: ./docs/10.x/dusk.md:29
#: ./docs/11.x/dusk.md:29
#: ./docs/master/dusk.md:29
msgctxt "P"
msgid "[Clicking Links](#clicking-links)"
msgstr ""

#: ./docs/10.x/dusk.md:30
#: ./docs/11.x/dusk.md:30
#: ./docs/master/dusk.md:30
msgctxt "P"
msgid "[Using the Keyboard](#using-the-keyboard)"
msgstr ""

#: ./docs/8.x/dusk.md:30
#: ./docs/9.x/dusk.md:30
msgctxt "P"
msgid "[Using The Keyboard](#using-the-keyboard)"
msgstr ""

#: ./docs/10.x/dusk.md:31
#: ./docs/11.x/dusk.md:31
#: ./docs/master/dusk.md:31
msgctxt "P"
msgid "[Using the Mouse](#using-the-mouse)"
msgstr ""

#: ./docs/8.x/dusk.md:31
#: ./docs/9.x/dusk.md:31
msgctxt "P"
msgid "[Using The Mouse](#using-the-mouse)"
msgstr ""

#: ./docs/8.x/dusk.md:32
#: ./docs/9.x/dusk.md:32
#: ./docs/10.x/dusk.md:32
#: ./docs/11.x/dusk.md:32
#: ./docs/master/dusk.md:32
msgctxt "P"
msgid "[JavaScript Dialogs](#javascript-dialogs)"
msgstr ""

#: ./docs/10.x/dusk.md:33
#: ./docs/11.x/dusk.md:33
#: ./docs/master/dusk.md:33
msgctxt "P"
msgid "[Interacting With Inline Frames](#interacting-with-iframes)"
msgstr ""

#: ./docs/8.x/dusk.md:33
#: ./docs/9.x/dusk.md:33
#: ./docs/10.x/dusk.md:34
#: ./docs/11.x/dusk.md:34
#: ./docs/master/dusk.md:34
msgctxt "P"
msgid "[Scoping Selectors](#scoping-selectors)"
msgstr ""

#: ./docs/8.x/dusk.md:34
#: ./docs/9.x/dusk.md:34
msgctxt "P"
msgid "[Waiting For Elements](#waiting-for-elements)"
msgstr ""

#: ./docs/10.x/dusk.md:35
#: ./docs/11.x/dusk.md:35
#: ./docs/master/dusk.md:35
msgctxt "P"
msgid "[Waiting for Elements](#waiting-for-elements)"
msgstr ""

#: ./docs/8.x/dusk.md:35
#: ./docs/9.x/dusk.md:35
msgctxt "P"
msgid "[Scrolling An Element Into View](#scrolling-an-element-into-view)"
msgstr ""

#: ./docs/10.x/dusk.md:36
#: ./docs/11.x/dusk.md:36
#: ./docs/master/dusk.md:36
msgctxt "P"
msgid "[Scrolling an Element Into View](#scrolling-an-element-into-view)"
msgstr ""

#: ./docs/8.x/dusk.md:36
#: ./docs/9.x/dusk.md:36
#: ./docs/10.x/dusk.md:37
#: ./docs/11.x/dusk.md:37
#: ./docs/master/dusk.md:37
msgctxt "P"
msgid "[Available Assertions](#available-assertions)"
msgstr ""

#: ./docs/8.x/dusk.md:37
#: ./docs/9.x/dusk.md:37
#: ./docs/10.x/dusk.md:38
#: ./docs/11.x/dusk.md:38
#: ./docs/master/dusk.md:38
msgctxt "P"
msgid "[Pages](#pages)"
msgstr ""

#: ./docs/8.x/dusk.md:38
#: ./docs/9.x/dusk.md:38
#: ./docs/10.x/dusk.md:39
#: ./docs/11.x/dusk.md:39
#: ./docs/master/dusk.md:39
msgctxt "P"
msgid "[Generating Pages](#generating-pages)"
msgstr ""

#: ./docs/8.x/dusk.md:39
#: ./docs/9.x/dusk.md:39
#: ./docs/10.x/dusk.md:40
#: ./docs/11.x/dusk.md:40
#: ./docs/master/dusk.md:40
msgctxt "P"
msgid "[Configuring Pages](#configuring-pages)"
msgstr ""

#: ./docs/8.x/dusk.md:40
#: ./docs/9.x/dusk.md:40
msgctxt "P"
msgid "[Navigating To Pages](#navigating-to-pages)"
msgstr ""

#: ./docs/10.x/dusk.md:41
#: ./docs/11.x/dusk.md:41
#: ./docs/master/dusk.md:41
msgctxt "P"
msgid "[Navigating to Pages](#navigating-to-pages)"
msgstr ""

#: ./docs/8.x/dusk.md:41
#: ./docs/9.x/dusk.md:41
#: ./docs/10.x/dusk.md:42
#: ./docs/11.x/dusk.md:42
#: ./docs/master/dusk.md:42
msgctxt "P"
msgid "[Shorthand Selectors](#shorthand-selectors)"
msgstr ""

#: ./docs/8.x/dusk.md:42
#: ./docs/9.x/dusk.md:42
#: ./docs/10.x/dusk.md:43
#: ./docs/11.x/dusk.md:43
#: ./docs/master/dusk.md:43
msgctxt "P"
msgid "[Page Methods](#page-methods)"
msgstr ""

#: ./docs/8.x/dusk.md:43
#: ./docs/9.x/dusk.md:43
#: ./docs/10.x/dusk.md:44
#: ./docs/11.x/dusk.md:44
#: ./docs/master/dusk.md:44
msgctxt "P"
msgid "[Components](#components)"
msgstr ""

#: ./docs/8.x/dusk.md:44
#: ./docs/9.x/dusk.md:44
#: ./docs/10.x/dusk.md:45
#: ./docs/11.x/dusk.md:45
#: ./docs/master/dusk.md:45
msgctxt "P"
msgid "[Generating Components](#generating-components)"
msgstr ""

#: ./docs/8.x/dusk.md:45
#: ./docs/9.x/dusk.md:45
#: ./docs/10.x/dusk.md:46
#: ./docs/11.x/dusk.md:46
#: ./docs/master/dusk.md:46
msgctxt "P"
msgid "[Using Components](#using-components)"
msgstr ""

#: ./docs/8.x/dusk.md:46
#: ./docs/9.x/dusk.md:46
#: ./docs/10.x/dusk.md:47
#: ./docs/11.x/dusk.md:47
#: ./docs/master/dusk.md:47
msgctxt "P"
msgid "[Continuous Integration](#continuous-integration)"
msgstr ""

#: ./docs/8.x/dusk.md:47
#: ./docs/9.x/dusk.md:47
#: ./docs/10.x/dusk.md:48
#: ./docs/11.x/dusk.md:48
#: ./docs/master/dusk.md:48
msgctxt "P"
msgid "[Heroku CI](#running-tests-on-heroku-ci)"
msgstr ""

#: ./docs/8.x/dusk.md:48
#: ./docs/9.x/dusk.md:48
#: ./docs/10.x/dusk.md:49
#: ./docs/11.x/dusk.md:49
#: ./docs/master/dusk.md:49
msgctxt "P"
msgid "[Travis CI](#running-tests-on-travis-ci)"
msgstr ""

#: ./docs/8.x/dusk.md:49
#: ./docs/9.x/dusk.md:49
#: ./docs/10.x/dusk.md:50
#: ./docs/11.x/dusk.md:50
#: ./docs/master/dusk.md:50
msgctxt "P"
msgid "[GitHub Actions](#running-tests-on-github-actions)"
msgstr ""

#: ./docs/10.x/dusk.md:51
#: ./docs/11.x/dusk.md:51
#: ./docs/master/dusk.md:51
msgctxt "P"
msgid "[Chipper CI](#running-tests-on-chipper-ci)"
msgstr ""

#: ./docs/8.x/dusk.md:51
#: ./docs/9.x/dusk.md:51
#: ./docs/10.x/dusk.md:53
#: ./docs/11.x/dusk.md:53
#: ./docs/master/dusk.md:53
#~ msgctxt "P"
#~ msgid "<a name=\"introduction\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:52
#: ./docs/9.x/dusk.md:52
#: ./docs/10.x/dusk.md:54
#: ./docs/11.x/dusk.md:54
#: ./docs/master/dusk.md:54
msgctxt "H2"
msgid "Introduction"
msgstr ""

#: ./docs/8.x/dusk.md:54
#: ./docs/9.x/dusk.md:54
#: ./docs/10.x/dusk.md:56
#: ./docs/11.x/dusk.md:56
#: ./docs/master/dusk.md:56
msgctxt "P"
msgid "[Laravel Dusk](https://github.com/laravel/dusk) provides an expressive, easy-to-use browser automation and testing API. By default, Dusk does not require you to install JDK or Selenium on your local computer. Instead, Dusk uses a standalone [ChromeDriver](https://sites.google.com/chromium.org/driver) installation. However, you are free to utilize any other Selenium compatible driver you wish."
msgstr ""

#: ./docs/8.x/dusk.md:56
#: ./docs/9.x/dusk.md:56
#: ./docs/10.x/dusk.md:58
#: ./docs/11.x/dusk.md:58
#: ./docs/master/dusk.md:58
#~ msgctxt "P"
#~ msgid "<a name=\"installation\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:57
#: ./docs/9.x/dusk.md:57
#: ./docs/10.x/dusk.md:59
#: ./docs/11.x/dusk.md:59
#: ./docs/master/dusk.md:59
msgctxt "H2"
msgid "Installation"
msgstr ""

#: ./docs/8.x/dusk.md:59
#: ./docs/9.x/dusk.md:59
#: ./docs/10.x/dusk.md:61
#: ./docs/11.x/dusk.md:61
#: ./docs/master/dusk.md:61
msgctxt "P"
msgid "To get started, you should install [Google Chrome](https://www.google.com/chrome) and add the `laravel/dusk` Composer dependency to your project:"
msgstr ""

#: ./docs/8.x/dusk.md:61
#: ./docs/9.x/dusk.md:61
msgctxt "CODE"
msgid "composer require --dev laravel/dusk"
msgstr ""

#: ./docs/10.x/dusk.md:63
#: ./docs/11.x/dusk.md:63
#: ./docs/master/dusk.md:63
msgctxt "CODE: shell"
msgid "composer require laravel/dusk --dev"
msgstr ""

#: ./docs/8.x/dusk.md:63
#: ./docs/9.x/dusk.md:66
#: ./docs/10.x/dusk.md:68
#: ./docs/11.x/dusk.md:68
#: ./docs/master/dusk.md:68
msgctxt "P"
msgid "If you are manually registering Dusk's service provider, you should **never** register it in your production environment, as doing so could lead to arbitrary users being able to authenticate with your application."
msgstr ""

#: ./docs/8.x/dusk.md:65
msgctxt "P"
msgid "After installing the Dusk package, execute the `dusk:install` Artisan command. The `dusk:install` command will create a `tests/Browser` directory and an example Dusk test:"
msgstr ""

#: ./docs/8.x/dusk.md:67
#: ./docs/9.x/dusk.md:70
#: ./docs/10.x/dusk.md:72
#: ./docs/11.x/dusk.md:72
#: ./docs/master/dusk.md:72
msgctxt "CODE"
msgid "php artisan dusk:install"
msgstr ""

#: ./docs/9.x/dusk.md:68
#: ./docs/10.x/dusk.md:70
#: ./docs/11.x/dusk.md:70
#: ./docs/master/dusk.md:70
msgctxt "P"
msgid "After installing the Dusk package, execute the `dusk:install` Artisan command. The `dusk:install` command will create a `tests/Browser` directory, an example Dusk test, and install the Chrome Driver binary for your operating system:"
msgstr ""

#: ./docs/8.x/dusk.md:69
#: ./docs/9.x/dusk.md:74
#: ./docs/10.x/dusk.md:76
#: ./docs/11.x/dusk.md:76
#: ./docs/master/dusk.md:76
msgctxt "P"
msgid "Next, set the `APP_URL` environment variable in your application's `.env` file. This value should match the URL you use to access your application in a browser."
msgstr ""

#: ./docs/8.x/dusk.md:71
#: ./docs/9.x/dusk.md:77
#: ./docs/10.x/dusk.md:79
#: ./docs/11.x/dusk.md:79
#: ./docs/master/dusk.md:79
msgctxt "P"
msgid "If you are using [Laravel Sail](/docs/{{version}}/sail) to manage your local development environment, please also consult the Sail documentation on [configuring and running Dusk tests](/docs/{{version}}/sail#laravel-dusk)."
msgstr ""

#: ./docs/8.x/dusk.md:73
#: ./docs/9.x/dusk.md:79
#: ./docs/10.x/dusk.md:81
#: ./docs/11.x/dusk.md:81
#: ./docs/master/dusk.md:81
#~ msgctxt "P"
#~ msgid "<a name=\"managing-chromedriver-installations\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:74
#: ./docs/9.x/dusk.md:80
#: ./docs/10.x/dusk.md:82
#: ./docs/11.x/dusk.md:82
#: ./docs/master/dusk.md:82
msgctxt "H3"
msgid "Managing ChromeDriver Installations"
msgstr ""

#: ./docs/8.x/dusk.md:76
msgctxt "P"
msgid "If you would like to install a different version of ChromeDriver than what is included with Laravel Dusk, you may use the `dusk:chrome-driver` command:"
msgstr ""

#: ./docs/8.x/dusk.md:78
#: ./docs/9.x/dusk.md:84
#: ./docs/10.x/dusk.md:86
#: ./docs/11.x/dusk.md:86
#: ./docs/master/dusk.md:86
msgctxt "CODE"
msgid "# Install the latest version of ChromeDriver for your OS...\n"
"php artisan dusk:chrome-driver\n\n"
"# Install a given version of ChromeDriver for your OS...\n"
"php artisan dusk:chrome-driver 86\n\n"
"# Install a given version of ChromeDriver for all supported OSs...\n"
"php artisan dusk:chrome-driver --all\n\n"
"# Install the version of ChromeDriver that matches the detected version of Chrome / Chromium for your OS...\n"
"php artisan dusk:chrome-driver --detect"
msgstr ""

#: ./docs/9.x/dusk.md:82
#: ./docs/10.x/dusk.md:84
#: ./docs/11.x/dusk.md:84
#: ./docs/master/dusk.md:84
msgctxt "P"
msgid "If you would like to install a different version of ChromeDriver than what is installed by Laravel Dusk via the `dusk:install` command, you may use the `dusk:chrome-driver` command:"
msgstr ""

#: ./docs/8.x/dusk.md:90
#: ./docs/9.x/dusk.md:99
#: ./docs/10.x/dusk.md:101
#: ./docs/11.x/dusk.md:101
#: ./docs/master/dusk.md:101
msgctxt "P"
msgid "Dusk requires the `chromedriver` binaries to be executable. If you're having problems running Dusk, you should ensure the binaries are executable using the following command: `chmod -R 0755 vendor/laravel/dusk/bin/`."
msgstr ""

#: ./docs/8.x/dusk.md:92
#: ./docs/9.x/dusk.md:101
#: ./docs/10.x/dusk.md:103
#: ./docs/11.x/dusk.md:103
#: ./docs/master/dusk.md:103
#~ msgctxt "P"
#~ msgid "<a name=\"using-other-browsers\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:93
#: ./docs/9.x/dusk.md:102
#: ./docs/10.x/dusk.md:104
#: ./docs/11.x/dusk.md:104
#: ./docs/master/dusk.md:104
msgctxt "H3"
msgid "Using Other Browsers"
msgstr ""

#: ./docs/8.x/dusk.md:95
#: ./docs/9.x/dusk.md:104
#: ./docs/10.x/dusk.md:106
#: ./docs/11.x/dusk.md:106
#: ./docs/master/dusk.md:106
msgctxt "P"
msgid "By default, Dusk uses Google Chrome and a standalone [ChromeDriver](https://sites.google.com/chromium.org/driver) installation to run your browser tests. However, you may start your own Selenium server and run your tests against any browser you wish."
msgstr ""

#: ./docs/8.x/dusk.md:97
#: ./docs/9.x/dusk.md:106
#: ./docs/10.x/dusk.md:108
#: ./docs/11.x/dusk.md:108
#: ./docs/master/dusk.md:108
msgctxt "P"
msgid "To get started, open your `tests/DuskTestCase.php` file, which is the base Dusk test case for your application. Within this file, you can remove the call to the `startChromeDriver` method. This will stop Dusk from automatically starting the ChromeDriver:"
msgstr ""

#: ./docs/8.x/dusk.md:99
#: ./docs/8.x/dusk.md:177
#: ./docs/9.x/dusk.md:108
#: ./docs/9.x/dusk.md:253
msgctxt "CODE"
msgid "/**\n"
" * Prepare for Dusk test execution.\n"
" *\n"
" * @beforeClass\n"
" * @return void\n"
" */\n"
"public static function prepare()\n"
"{\n"
"    // static::startChromeDriver();\n"
"}"
msgstr ""

#: ./docs/10.x/dusk.md:110
#: ./docs/10.x/dusk.md:272
#: ./docs/11.x/dusk.md:110
#: ./docs/11.x/dusk.md:298
#: ./docs/master/dusk.md:110
#: ./docs/master/dusk.md:298
msgctxt "CODE"
msgid "/**\n"
" * Prepare for Dusk test execution.\n"
" *\n"
" * @beforeClass\n"
" */\n"
"public static function prepare(): void\n"
"{\n"
"    // static::startChromeDriver();\n"
"}"
msgstr ""

#: ./docs/8.x/dusk.md:110
#: ./docs/9.x/dusk.md:119
#: ./docs/10.x/dusk.md:120
#: ./docs/11.x/dusk.md:120
#: ./docs/master/dusk.md:120
msgctxt "P"
msgid "Next, you may modify the `driver` method to connect to the URL and port of your choice. In addition, you may modify the \"desired capabilities\" that should be passed to the WebDriver:"
msgstr ""

#: ./docs/8.x/dusk.md:112
#: ./docs/9.x/dusk.md:121
msgctxt "CODE"
msgid "/**\n"
" * Create the RemoteWebDriver instance.\n"
" *\n"
" * @return \\Facebook\\WebDriver\\Remote\\RemoteWebDriver\n"
" */\n"
"protected function driver()\n"
"{\n"
"    return RemoteWebDriver::create(\n"
"        'http://localhost:4444/wd/hub', DesiredCapabilities::phantomjs()\n"
"    );\n"
"}"
msgstr ""

#: ./docs/10.x/dusk.md:122
#: ./docs/11.x/dusk.md:122
#: ./docs/master/dusk.md:122
msgctxt "CODE"
msgid "use Facebook\\WebDriver\\Remote\\RemoteWebDriver;\n\n"
"/**\n"
" * Create the RemoteWebDriver instance.\n"
" */\n"
"protected function driver(): RemoteWebDriver\n"
"{\n"
"    return RemoteWebDriver::create(\n"
"        'http://localhost:4444/wd/hub', DesiredCapabilities::phantomjs()\n"
"    );\n"
"}"
msgstr ""

#: ./docs/8.x/dusk.md:124
#: ./docs/9.x/dusk.md:133
#: ./docs/10.x/dusk.md:134
#: ./docs/11.x/dusk.md:134
#: ./docs/master/dusk.md:134
#~ msgctxt "P"
#~ msgid "<a name=\"getting-started\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:125
#: ./docs/9.x/dusk.md:134
#: ./docs/10.x/dusk.md:135
#: ./docs/11.x/dusk.md:135
#: ./docs/master/dusk.md:135
msgctxt "H2"
msgid "Getting Started"
msgstr ""

#: ./docs/8.x/dusk.md:127
#: ./docs/9.x/dusk.md:136
#: ./docs/10.x/dusk.md:137
#: ./docs/11.x/dusk.md:137
#: ./docs/master/dusk.md:137
#~ msgctxt "P"
#~ msgid "<a name=\"generating-tests\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:128
#: ./docs/9.x/dusk.md:137
#: ./docs/10.x/dusk.md:138
#: ./docs/11.x/dusk.md:138
#: ./docs/master/dusk.md:138
msgctxt "H3"
msgid "Generating Tests"
msgstr ""

#: ./docs/8.x/dusk.md:130
#: ./docs/9.x/dusk.md:139
#: ./docs/10.x/dusk.md:140
#: ./docs/11.x/dusk.md:140
#: ./docs/master/dusk.md:140
msgctxt "P"
msgid "To generate a Dusk test, use the `dusk:make` Artisan command. The generated test will be placed in the `tests/Browser` directory:"
msgstr ""

#: ./docs/8.x/dusk.md:132
#: ./docs/9.x/dusk.md:141
#: ./docs/10.x/dusk.md:142
#: ./docs/11.x/dusk.md:142
#: ./docs/master/dusk.md:142
msgctxt "CODE"
msgid "php artisan dusk:make LoginTest"
msgstr ""

#: ./docs/8.x/dusk.md:134
#~ msgctxt "P"
#~ msgid "<a name=\"migrations\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:135
msgctxt "H3"
msgid "Database Migrations"
msgstr ""

#: ./docs/8.x/dusk.md:137
msgctxt "P"
msgid "Most of the tests you write will interact with pages that retrieve data from your application's database; however, your Dusk tests should never use the `RefreshDatabase `trait. The `RefreshDatabase` trait leverages database transactions which will not be applicable or available across HTTP requests. Instead, use the `DatabaseMigrations` trait, which re-migrates the database for each test:"
msgstr ""

#: ./docs/8.x/dusk.md:139
#: ./docs/9.x/dusk.md:155
#: ./docs/10.x/dusk.md:156
msgctxt "CODE"
msgid "<?php\n\n"
"namespace Tests\\Browser;\n\n"
"use App\\Models\\User;\n"
"use Illuminate\\Foundation\\Testing\\DatabaseMigrations;\n"
"use Laravel\\Dusk\\Chrome;\n"
"use Tests\\DuskTestCase;\n\n"
"class ExampleTest extends DuskTestCase\n"
"{\n"
"    use DatabaseMigrations;\n"
"}"
msgstr ""

#: ./docs/9.x/dusk.md:145
#: ./docs/10.x/dusk.md:146
#: ./docs/11.x/dusk.md:146
#: ./docs/master/dusk.md:146
#~ msgctxt "P"
#~ msgid "<a name=\"resetting-the-database-after-each-test\"></a>"
#~ msgstr ""

#: ./docs/9.x/dusk.md:146
msgctxt "H3"
msgid "Resetting The Database After Each Test"
msgstr ""

#: ./docs/10.x/dusk.md:147
#: ./docs/11.x/dusk.md:147
#: ./docs/master/dusk.md:147
msgctxt "H3"
msgid "Resetting the Database After Each Test"
msgstr ""

#: ./docs/9.x/dusk.md:148
#: ./docs/10.x/dusk.md:149
#: ./docs/11.x/dusk.md:149
#: ./docs/master/dusk.md:149
msgctxt "P"
msgid "Most of the tests you write will interact with pages that retrieve data from your application's database; however, your Dusk tests should never use the `RefreshDatabase` trait. The `RefreshDatabase` trait leverages database transactions which will not be applicable or available across HTTP requests. Instead, you have two options: the `DatabaseMigrations` trait and the `DatabaseTruncation` trait."
msgstr ""

#: ./docs/9.x/dusk.md:150
#: ./docs/10.x/dusk.md:151
#: ./docs/11.x/dusk.md:151
#: ./docs/master/dusk.md:151
#~ msgctxt "P"
#~ msgid "<a name=\"reset-migrations\"></a>"
#~ msgstr ""

#: ./docs/9.x/dusk.md:151
#: ./docs/10.x/dusk.md:152
#: ./docs/11.x/dusk.md:152
#: ./docs/master/dusk.md:152
msgctxt "H4"
msgid "Using Database Migrations"
msgstr ""

#: ./docs/8.x/dusk.md:153
#: ./docs/9.x/dusk.md:170
#: ./docs/10.x/dusk.md:171
#: ./docs/11.x/dusk.md:185
#: ./docs/master/dusk.md:185
msgctxt "P"
msgid "SQLite in-memory databases may not be used when executing Dusk tests. Since the browser executes within its own process, it will not be able to access the in-memory databases of other processes."
msgstr ""

#: ./docs/9.x/dusk.md:153
#: ./docs/10.x/dusk.md:154
#: ./docs/11.x/dusk.md:154
#: ./docs/master/dusk.md:154
msgctxt "P"
msgid "The `DatabaseMigrations` trait will run your database migrations before each test. However, dropping and re-creating your database tables for each test is typically slower than truncating the tables:"
msgstr ""

#: ./docs/8.x/dusk.md:155
#: ./docs/9.x/dusk.md:224
#: ./docs/10.x/dusk.md:243
#: ./docs/11.x/dusk.md:269
#: ./docs/master/dusk.md:269
#~ msgctxt "P"
#~ msgid "<a name=\"running-tests\"></a>"
#~ msgstr ""

#: ./docs/11.x/dusk.md:156
#: ./docs/master/dusk.md:156
msgctxt "CODE: php tab=Pest"
msgid "<?php\n\n"
"use Illuminate\\Foundation\\Testing\\DatabaseMigrations;\n"
"use Laravel\\Dusk\\Browser;\n\n"
"uses(DatabaseMigrations::class);\n\n"
"//"
msgstr ""

#: ./docs/8.x/dusk.md:156
#: ./docs/9.x/dusk.md:225
#: ./docs/10.x/dusk.md:244
#: ./docs/11.x/dusk.md:270
#: ./docs/master/dusk.md:270
msgctxt "H3"
msgid "Running Tests"
msgstr ""

#: ./docs/8.x/dusk.md:158
#: ./docs/9.x/dusk.md:227
#: ./docs/10.x/dusk.md:246
#: ./docs/11.x/dusk.md:272
#: ./docs/master/dusk.md:272
msgctxt "P"
msgid "To run your browser tests, execute the `dusk` Artisan command:"
msgstr ""

#: ./docs/8.x/dusk.md:160
#: ./docs/9.x/dusk.md:229
#: ./docs/10.x/dusk.md:248
#: ./docs/11.x/dusk.md:274
#: ./docs/master/dusk.md:274
msgctxt "CODE"
msgid "php artisan dusk"
msgstr ""

#: ./docs/8.x/dusk.md:162
#: ./docs/9.x/dusk.md:233
#: ./docs/10.x/dusk.md:252
#: ./docs/11.x/dusk.md:278
#: ./docs/master/dusk.md:278
msgctxt "P"
msgid "If you had test failures the last time you ran the `dusk` command, you may save time by re-running the failing tests first using the `dusk:fails` command:"
msgstr ""

#: ./docs/8.x/dusk.md:164
#: ./docs/9.x/dusk.md:235
#: ./docs/10.x/dusk.md:254
#: ./docs/11.x/dusk.md:280
#: ./docs/master/dusk.md:280
msgctxt "CODE"
msgid "php artisan dusk:fails"
msgstr ""

#: ./docs/8.x/dusk.md:166
msgctxt "P"
msgid "The `dusk` command accepts any argument that is normally accepted by the PHPUnit test runner, such as allowing you to only run the tests for a given [group](https://phpunit.de/manual/current/en/appendixes.annotations.html#appendixes.annotations.group):"
msgstr ""

#: ./docs/11.x/dusk.md:167
#: ./docs/master/dusk.md:167
msgctxt "CODE: php tab=PHPUnit"
msgid "<?php\n\n"
"namespace Tests\\Browser;\n\n"
"use Illuminate\\Foundation\\Testing\\DatabaseMigrations;\n"
"use Laravel\\Dusk\\Browser;\n"
"use Tests\\DuskTestCase;\n\n"
"class ExampleTest extends DuskTestCase\n"
"{\n"
"    use DatabaseMigrations;\n\n"
"    //\n"
"}"
msgstr ""

#: ./docs/8.x/dusk.md:168
#: ./docs/9.x/dusk.md:241
#: ./docs/10.x/dusk.md:260
#: ./docs/11.x/dusk.md:286
#: ./docs/master/dusk.md:286
msgctxt "CODE"
msgid "php artisan dusk --group=foo"
msgstr ""

#: ./docs/8.x/dusk.md:170
#: ./docs/9.x/dusk.md:246
#: ./docs/10.x/dusk.md:265
#: ./docs/11.x/dusk.md:291
#: ./docs/master/dusk.md:291
msgctxt "P"
msgid "If you are using [Laravel Sail](/docs/{{version}}/sail) to manage your local development environment, please consult the Sail documentation on [configuring and running Dusk tests](/docs/{{version}}/sail#laravel-dusk)."
msgstr ""

#: ./docs/8.x/dusk.md:172
#: ./docs/9.x/dusk.md:248
#: ./docs/10.x/dusk.md:267
#: ./docs/11.x/dusk.md:293
#: ./docs/master/dusk.md:293
#~ msgctxt "P"
#~ msgid "<a name=\"manually-starting-chromedriver\"></a>"
#~ msgstr ""

#: ./docs/9.x/dusk.md:172
#: ./docs/10.x/dusk.md:173
#: ./docs/11.x/dusk.md:187
#: ./docs/master/dusk.md:187
#~ msgctxt "P"
#~ msgid "<a name=\"reset-truncation\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:173
#: ./docs/9.x/dusk.md:249
#: ./docs/10.x/dusk.md:268
#: ./docs/11.x/dusk.md:294
#: ./docs/master/dusk.md:294
msgctxt "H4"
msgid "Manually Starting ChromeDriver"
msgstr ""

#: ./docs/9.x/dusk.md:173
#: ./docs/10.x/dusk.md:174
#: ./docs/11.x/dusk.md:188
#: ./docs/master/dusk.md:188
msgctxt "H4"
msgid "Using Database Truncation"
msgstr ""

#: ./docs/8.x/dusk.md:175
#: ./docs/9.x/dusk.md:251
#: ./docs/10.x/dusk.md:270
#: ./docs/11.x/dusk.md:296
#: ./docs/master/dusk.md:296
msgctxt "P"
msgid "By default, Dusk will automatically attempt to start ChromeDriver. If this does not work for your particular system, you may manually start ChromeDriver before running the `dusk` command. If you choose to start ChromeDriver manually, you should comment out the following line of your `tests/DuskTestCase.php` file:"
msgstr ""

#: ./docs/9.x/dusk.md:175
#: ./docs/10.x/dusk.md:176
msgctxt "P"
msgid "Before using the `DatabaseTruncation` trait, you must install the `doctrine/dbal` package using the Composer package manager:"
msgstr ""

#: ./docs/9.x/dusk.md:177
#: ./docs/10.x/dusk.md:178
msgctxt "CODE: shell"
msgid "composer require --dev doctrine/dbal"
msgstr ""

#: ./docs/9.x/dusk.md:181
#: ./docs/10.x/dusk.md:182
#: ./docs/11.x/dusk.md:190
#: ./docs/master/dusk.md:190
msgctxt "P"
msgid "The `DatabaseTruncation` trait will migrate your database on the first test in order to ensure your database tables have been properly created. However, on subsequent tests, the database's tables will simply be truncated - providing a speed boost over re-running all of your database migrations:"
msgstr ""

#: ./docs/9.x/dusk.md:183
#: ./docs/10.x/dusk.md:184
msgctxt "CODE"
msgid "<?php\n\n"
"namespace Tests\\Browser;\n\n"
"use App\\Models\\User;\n"
"use Illuminate\\Foundation\\Testing\\DatabaseTruncation;\n"
"use Laravel\\Dusk\\Chrome;\n"
"use Tests\\DuskTestCase;\n\n"
"class ExampleTest extends DuskTestCase\n"
"{\n"
"    use DatabaseTruncation;\n"
"}"
msgstr ""

#: ./docs/8.x/dusk.md:188
#: ./docs/9.x/dusk.md:264
#: ./docs/10.x/dusk.md:282
#: ./docs/11.x/dusk.md:308
#: ./docs/master/dusk.md:308
msgctxt "P"
msgid "In addition, if you start ChromeDriver on a port other than 9515, you should modify the `driver` method of the same class to reflect the correct port:"
msgstr ""

#: ./docs/8.x/dusk.md:190
#: ./docs/9.x/dusk.md:266
msgctxt "CODE"
msgid "/**\n"
" * Create the RemoteWebDriver instance.\n"
" *\n"
" * @return \\Facebook\\WebDriver\\Remote\\RemoteWebDriver\n"
" */\n"
"protected function driver()\n"
"{\n"
"    return RemoteWebDriver::create(\n"
"        'http://localhost:9515', DesiredCapabilities::chrome()\n"
"    );\n"
"}"
msgstr ""

#: ./docs/11.x/dusk.md:192
#: ./docs/master/dusk.md:192
msgctxt "CODE: php tab=Pest"
msgid "<?php\n\n"
"use Illuminate\\Foundation\\Testing\\DatabaseTruncation;\n"
"use Laravel\\Dusk\\Browser;\n\n"
"uses(DatabaseTruncation::class);\n\n"
"//"
msgstr ""

#: ./docs/9.x/dusk.md:197
#: ./docs/10.x/dusk.md:198
#: ./docs/11.x/dusk.md:221
#: ./docs/master/dusk.md:221
msgctxt "P"
msgid "By default, this trait will truncate all tables except the `migrations` table. If you would like to customize the tables that should be truncated, you may define a `$tablesToTruncate` property on your test class:"
msgstr ""

#: ./docs/9.x/dusk.md:199
#: ./docs/10.x/dusk.md:200
#: ./docs/11.x/dusk.md:226
#: ./docs/master/dusk.md:226
msgctxt "CODE"
msgid "/**\n"
" * Indicates which tables should be truncated.\n"
" *\n"
" * @var array\n"
" */\n"
"protected $tablesToTruncate = ['users'];"
msgstr ""

#: ./docs/8.x/dusk.md:202
#: ./docs/9.x/dusk.md:278
#: ./docs/10.x/dusk.md:296
#: ./docs/11.x/dusk.md:322
#: ./docs/master/dusk.md:322
#~ msgctxt "P"
#~ msgid "<a name=\"environment-handling\"></a>"
#~ msgstr ""

#: ./docs/11.x/dusk.md:203
#: ./docs/master/dusk.md:203
msgctxt "CODE: php tab=PHPUnit"
msgid "<?php\n\n"
"namespace Tests\\Browser;\n\n"
"use App\\Models\\User;\n"
"use Illuminate\\Foundation\\Testing\\DatabaseTruncation;\n"
"use Laravel\\Dusk\\Browser;\n"
"use Tests\\DuskTestCase;\n\n"
"class ExampleTest extends DuskTestCase\n"
"{\n"
"    use DatabaseTruncation;\n\n"
"    //\n"
"}"
msgstr ""

#: ./docs/8.x/dusk.md:203
#: ./docs/9.x/dusk.md:279
#: ./docs/10.x/dusk.md:297
#: ./docs/11.x/dusk.md:323
#: ./docs/master/dusk.md:323
msgctxt "H3"
msgid "Environment Handling"
msgstr ""

#: ./docs/8.x/dusk.md:205
#: ./docs/9.x/dusk.md:281
#: ./docs/10.x/dusk.md:299
#: ./docs/11.x/dusk.md:325
#: ./docs/master/dusk.md:325
msgctxt "P"
msgid "To force Dusk to use its own environment file when running tests, create a `.env.dusk.{environment}` file in the root of your project. For example, if you will be initiating the `dusk` command from your `local` environment, you should create a `.env.dusk.local` file."
msgstr ""

#: ./docs/9.x/dusk.md:206
#: ./docs/10.x/dusk.md:207
#: ./docs/11.x/dusk.md:233
#: ./docs/master/dusk.md:233
msgctxt "P"
msgid "Alternatively, you may define an `$exceptTables` property on your test class to specify which tables should be excluded from truncation:"
msgstr ""

#: ./docs/8.x/dusk.md:207
#: ./docs/9.x/dusk.md:283
#: ./docs/10.x/dusk.md:301
#: ./docs/11.x/dusk.md:327
#: ./docs/master/dusk.md:327
msgctxt "P"
msgid "When running tests, Dusk will back-up your `.env` file and rename your Dusk environment to `.env`. Once the tests have completed, your `.env` file will be restored."
msgstr ""

#: ./docs/9.x/dusk.md:208
#: ./docs/10.x/dusk.md:209
#: ./docs/11.x/dusk.md:235
#: ./docs/master/dusk.md:235
msgctxt "CODE"
msgid "/**\n"
" * Indicates which tables should be excluded from truncation.\n"
" *\n"
" * @var array\n"
" */\n"
"protected $exceptTables = ['users'];"
msgstr ""

#: ./docs/8.x/dusk.md:209
#: ./docs/9.x/dusk.md:285
#: ./docs/10.x/dusk.md:303
#: ./docs/11.x/dusk.md:329
#: ./docs/master/dusk.md:329
#~ msgctxt "P"
#~ msgid "<a name=\"browser-basics\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:210
#: ./docs/9.x/dusk.md:286
#: ./docs/10.x/dusk.md:304
#: ./docs/11.x/dusk.md:330
#: ./docs/master/dusk.md:330
msgctxt "H2"
msgid "Browser Basics"
msgstr ""

#: ./docs/8.x/dusk.md:212
#: ./docs/9.x/dusk.md:288
#: ./docs/10.x/dusk.md:306
#: ./docs/11.x/dusk.md:332
#: ./docs/master/dusk.md:332
#~ msgctxt "P"
#~ msgid "<a name=\"creating-browsers\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:213
#: ./docs/9.x/dusk.md:289
#: ./docs/10.x/dusk.md:307
#: ./docs/11.x/dusk.md:333
#: ./docs/master/dusk.md:333
msgctxt "H3"
msgid "Creating Browsers"
msgstr ""

#: ./docs/8.x/dusk.md:215
#: ./docs/9.x/dusk.md:291
#: ./docs/10.x/dusk.md:309
#: ./docs/11.x/dusk.md:335
#: ./docs/master/dusk.md:335
msgctxt "P"
msgid "To get started, let's write a test that verifies we can log into our application. After generating a test, we can modify it to navigate to the login page, enter some credentials, and click the \"Login\" button. To create a browser instance, you may call the `browse` method from within your Dusk test:"
msgstr ""

#: ./docs/9.x/dusk.md:215
#: ./docs/10.x/dusk.md:216
#: ./docs/11.x/dusk.md:242
#: ./docs/master/dusk.md:242
msgctxt "P"
msgid "To specify the database connections that should have their tables truncated, you may define a `$connectionsToTruncate` property on your test class:"
msgstr ""

#: ./docs/8.x/dusk.md:217
#: ./docs/9.x/dusk.md:293
msgctxt "CODE"
msgid "<?php\n\n"
"namespace Tests\\Browser;\n\n"
"use App\\Models\\User;\n"
"use Illuminate\\Foundation\\Testing\\DatabaseMigrations;\n"
"use Laravel\\Dusk\\Chrome;\n"
"use Tests\\DuskTestCase;\n\n"
"class ExampleTest extends DuskTestCase\n"
"{\n"
"    use DatabaseMigrations;\n\n"
"    /**\n"
"     * A basic browser test example.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function test_basic_example()\n"
"    {\n"
"        $user = User::factory()->create([\n"
"            'email' => 'taylor@laravel.com',\n"
"        ]);\n\n"
"        $this->browse(function ($browser) use ($user) {\n"
"            $browser->visit('/login')\n"
"                    ->type('email', $user->email)\n"
"                    ->type('password', 'password')\n"
"                    ->press('Login')\n"
"                    ->assertPathIs('/home');\n"
"        });\n"
"    }\n"
"}"
msgstr ""

#: ./docs/9.x/dusk.md:217
#: ./docs/10.x/dusk.md:218
#: ./docs/11.x/dusk.md:244
#: ./docs/master/dusk.md:244
msgctxt "CODE"
msgid "/**\n"
" * Indicates which connections should have their tables truncated.\n"
" *\n"
" * @var array\n"
" */\n"
"protected $connectionsToTruncate = ['mysql'];"
msgstr ""

#: ./docs/11.x/dusk.md:224
#: ./docs/master/dusk.md:224
msgctxt "P"
msgid "If you are using Pest, you should define properties or methods on the base `DuskTestCase` class or on any class your test file extends."
msgstr ""

#: ./docs/10.x/dusk.md:225
#: ./docs/11.x/dusk.md:251
#: ./docs/master/dusk.md:251
msgctxt "P"
msgid "If you would like to execute code before or after database truncation is performed, you may define `beforeTruncatingDatabase` or `afterTruncatingDatabase` methods on your test class:"
msgstr ""

#: ./docs/10.x/dusk.md:227
#: ./docs/11.x/dusk.md:253
#: ./docs/master/dusk.md:253
msgctxt "CODE"
msgid "/**\n"
" * Perform any work that should take place before the database has started truncating.\n"
" */\n"
"protected function beforeTruncatingDatabase(): void\n"
"{\n"
"    //\n"
"}\n\n"
"/**\n"
" * Perform any work that should take place after the database has finished truncating.\n"
" */\n"
"protected function afterTruncatingDatabase(): void\n"
"{\n"
"    //\n"
"}"
msgstr ""

#: ./docs/9.x/dusk.md:239
msgctxt "P"
msgid "The `dusk` command accepts any argument that is normally accepted by the PHPUnit test runner, such as allowing you to only run the tests for a given [group](https://phpunit.readthedocs.io/en/9.5/annotations.html#group):"
msgstr ""

#: ./docs/8.x/dusk.md:251
#: ./docs/9.x/dusk.md:327
#: ./docs/10.x/dusk.md:344
#: ./docs/11.x/dusk.md:395
#: ./docs/master/dusk.md:395
msgctxt "P"
msgid "As you can see in the example above, the `browse` method accepts a closure. A browser instance will automatically be passed to this closure by Dusk and is the main object used to interact with and make assertions against your application."
msgstr ""

#: ./docs/8.x/dusk.md:253
#: ./docs/9.x/dusk.md:329
#: ./docs/10.x/dusk.md:346
#: ./docs/11.x/dusk.md:397
#: ./docs/master/dusk.md:397
#~ msgctxt "P"
#~ msgid "<a name=\"creating-multiple-browsers\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:254
#: ./docs/9.x/dusk.md:330
#: ./docs/10.x/dusk.md:347
#: ./docs/11.x/dusk.md:398
#: ./docs/master/dusk.md:398
msgctxt "H4"
msgid "Creating Multiple Browsers"
msgstr ""

#: ./docs/8.x/dusk.md:256
#: ./docs/9.x/dusk.md:332
#: ./docs/10.x/dusk.md:349
#: ./docs/11.x/dusk.md:400
#: ./docs/master/dusk.md:400
msgctxt "P"
msgid "Sometimes you may need multiple browsers in order to properly carry out a test. For example, multiple browsers may be needed to test a chat screen that interacts with websockets. To create multiple browsers, simply add more browser arguments to the signature of the closure given to the `browse` method:"
msgstr ""

#: ./docs/10.x/dusk.md:258
msgctxt "P"
msgid "The `dusk` command accepts any argument that is normally accepted by the PHPUnit test runner, such as allowing you to only run the tests for a given [group](https://docs.phpunit.de/en/10.5/annotations.html#group):"
msgstr ""

#: ./docs/8.x/dusk.md:258
#: ./docs/9.x/dusk.md:334
msgctxt "CODE"
msgid "$this->browse(function ($first, $second) {\n"
"    $first->loginAs(User::find(1))\n"
"          ->visit('/home')\n"
"          ->waitForText('Message');\n\n"
"    $second->loginAs(User::find(2))\n"
"           ->visit('/home')\n"
"           ->waitForText('Message')\n"
"           ->type('message', 'Hey Taylor')\n"
"           ->press('Send');\n\n"
"    $first->waitForText('Hey Taylor')\n"
"          ->assertSee('Jeffrey Way');\n"
"});"
msgstr ""

#: ./docs/8.x/dusk.md:273
#: ./docs/9.x/dusk.md:349
#: ./docs/10.x/dusk.md:366
#: ./docs/11.x/dusk.md:417
#: ./docs/master/dusk.md:417
#~ msgctxt "P"
#~ msgid "<a name=\"navigation\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:274
#: ./docs/9.x/dusk.md:350
#: ./docs/10.x/dusk.md:367
#: ./docs/11.x/dusk.md:418
#: ./docs/master/dusk.md:418
msgctxt "H3"
msgid "Navigation"
msgstr ""

#: ./docs/8.x/dusk.md:276
#: ./docs/9.x/dusk.md:352
#: ./docs/10.x/dusk.md:369
#: ./docs/11.x/dusk.md:420
#: ./docs/master/dusk.md:420
msgctxt "P"
msgid "The `visit` method may be used to navigate to a given URI within your application:"
msgstr ""

#: ./docs/8.x/dusk.md:278
#: ./docs/9.x/dusk.md:354
#: ./docs/10.x/dusk.md:371
#: ./docs/11.x/dusk.md:422
#: ./docs/master/dusk.md:422
msgctxt "CODE"
msgid "$browser->visit('/login');"
msgstr ""

#: ./docs/8.x/dusk.md:280
#: ./docs/9.x/dusk.md:356
#: ./docs/10.x/dusk.md:373
#: ./docs/11.x/dusk.md:424
#: ./docs/master/dusk.md:424
msgctxt "P"
msgid "You may use the `visitRoute` method to navigate to a [named route](/docs/{{version}}/routing#named-routes):"
msgstr ""

#: ./docs/8.x/dusk.md:282
#: ./docs/9.x/dusk.md:358
#: ./docs/10.x/dusk.md:375
#: ./docs/master/dusk.md:426
msgctxt "CODE"
msgid "$browser->visitRoute('login');"
msgstr ""

#: ./docs/10.x/dusk.md:284
#: ./docs/11.x/dusk.md:310
#: ./docs/master/dusk.md:310
msgctxt "CODE"
msgid "use Facebook\\WebDriver\\Remote\\RemoteWebDriver;\n\n"
"/**\n"
" * Create the RemoteWebDriver instance.\n"
" */\n"
"protected function driver(): RemoteWebDriver\n"
"{\n"
"    return RemoteWebDriver::create(\n"
"        'http://localhost:9515', DesiredCapabilities::chrome()\n"
"    );\n"
"}"
msgstr ""

#: ./docs/11.x/dusk.md:284
#: ./docs/master/dusk.md:284
msgctxt "P"
msgid "The `dusk` command accepts any argument that is normally accepted by the Pest / PHPUnit test runner, such as allowing you to only run the tests for a given [group](https://docs.phpunit.de/en/10.5/annotations.html#group):"
msgstr ""

#: ./docs/8.x/dusk.md:284
#: ./docs/9.x/dusk.md:360
#: ./docs/10.x/dusk.md:377
#: ./docs/11.x/dusk.md:428
#: ./docs/master/dusk.md:428
msgctxt "P"
msgid "You may navigate \"back\" and \"forward\" using the `back` and `forward` methods:"
msgstr ""

#: ./docs/8.x/dusk.md:286
#: ./docs/9.x/dusk.md:362
#: ./docs/10.x/dusk.md:379
#: ./docs/11.x/dusk.md:430
#: ./docs/master/dusk.md:430
msgctxt "CODE"
msgid "$browser->back();\n\n"
"$browser->forward();"
msgstr ""

#: ./docs/8.x/dusk.md:290
#: ./docs/9.x/dusk.md:366
#: ./docs/10.x/dusk.md:383
#: ./docs/11.x/dusk.md:434
#: ./docs/master/dusk.md:434
msgctxt "P"
msgid "You may use the `refresh` method to refresh the page:"
msgstr ""

#: ./docs/8.x/dusk.md:292
#: ./docs/9.x/dusk.md:368
#: ./docs/10.x/dusk.md:385
#: ./docs/11.x/dusk.md:436
#: ./docs/master/dusk.md:436
msgctxt "CODE"
msgid "$browser->refresh();"
msgstr ""

#: ./docs/8.x/dusk.md:294
#: ./docs/9.x/dusk.md:370
#: ./docs/10.x/dusk.md:387
#: ./docs/11.x/dusk.md:438
#: ./docs/master/dusk.md:438
#~ msgctxt "P"
#~ msgid "<a name=\"resizing-browser-windows\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:295
#: ./docs/9.x/dusk.md:371
#: ./docs/10.x/dusk.md:388
#: ./docs/11.x/dusk.md:439
#: ./docs/master/dusk.md:439
msgctxt "H3"
msgid "Resizing Browser Windows"
msgstr ""

#: ./docs/8.x/dusk.md:297
#: ./docs/9.x/dusk.md:373
#: ./docs/10.x/dusk.md:390
#: ./docs/11.x/dusk.md:441
#: ./docs/master/dusk.md:441
msgctxt "P"
msgid "You may use the `resize` method to adjust the size of the browser window:"
msgstr ""

#: ./docs/8.x/dusk.md:299
#: ./docs/9.x/dusk.md:375
#: ./docs/10.x/dusk.md:392
#: ./docs/11.x/dusk.md:443
#: ./docs/master/dusk.md:443
msgctxt "CODE"
msgid "$browser->resize(1920, 1080);"
msgstr ""

#: ./docs/8.x/dusk.md:301
#: ./docs/9.x/dusk.md:377
#: ./docs/10.x/dusk.md:394
#: ./docs/11.x/dusk.md:445
#: ./docs/master/dusk.md:445
msgctxt "P"
msgid "The `maximize` method may be used to maximize the browser window:"
msgstr ""

#: ./docs/8.x/dusk.md:303
#: ./docs/9.x/dusk.md:379
#: ./docs/10.x/dusk.md:396
#: ./docs/11.x/dusk.md:447
#: ./docs/master/dusk.md:447
msgctxt "CODE"
msgid "$browser->maximize();"
msgstr ""

#: ./docs/8.x/dusk.md:305
#: ./docs/9.x/dusk.md:381
#: ./docs/10.x/dusk.md:398
#: ./docs/11.x/dusk.md:449
#: ./docs/master/dusk.md:449
msgctxt "P"
msgid "The `fitContent` method will resize the browser window to match the size of its content:"
msgstr ""

#: ./docs/8.x/dusk.md:307
#: ./docs/9.x/dusk.md:383
#: ./docs/10.x/dusk.md:400
#: ./docs/11.x/dusk.md:451
#: ./docs/master/dusk.md:451
msgctxt "CODE"
msgid "$browser->fitContent();"
msgstr ""

#: ./docs/8.x/dusk.md:309
#: ./docs/9.x/dusk.md:385
#: ./docs/10.x/dusk.md:402
#: ./docs/11.x/dusk.md:453
#: ./docs/master/dusk.md:453
msgctxt "P"
msgid "When a test fails, Dusk will automatically resize the browser to fit the content prior to taking a screenshot. You may disable this feature by calling the `disableFitOnFailure` method within your test:"
msgstr ""

#: ./docs/10.x/dusk.md:311
msgctxt "CODE"
msgid "<?php\n\n"
"namespace Tests\\Browser;\n\n"
"use App\\Models\\User;\n"
"use Illuminate\\Foundation\\Testing\\DatabaseMigrations;\n"
"use Laravel\\Dusk\\Browser;\n"
"use Laravel\\Dusk\\Chrome;\n"
"use Tests\\DuskTestCase;\n\n"
"class ExampleTest extends DuskTestCase\n"
"{\n"
"    use DatabaseMigrations;\n\n"
"    /**\n"
"     * A basic browser test example.\n"
"     */\n"
"    public function test_basic_example(): void\n"
"    {\n"
"        $user = User::factory()->create([\n"
"            'email' => 'taylor@laravel.com',\n"
"        ]);\n\n"
"        $this->browse(function (Browser $browser) use ($user) {\n"
"            $browser->visit('/login')\n"
"                    ->type('email', $user->email)\n"
"                    ->type('password', 'password')\n"
"                    ->press('Login')\n"
"                    ->assertPathIs('/home');\n"
"        });\n"
"    }\n"
"}"
msgstr ""

#: ./docs/8.x/dusk.md:311
#: ./docs/9.x/dusk.md:387
#: ./docs/10.x/dusk.md:404
#: ./docs/11.x/dusk.md:455
#: ./docs/master/dusk.md:455
msgctxt "CODE"
msgid "$browser->disableFitOnFailure();"
msgstr ""

#: ./docs/8.x/dusk.md:313
#: ./docs/9.x/dusk.md:389
#: ./docs/10.x/dusk.md:406
#: ./docs/11.x/dusk.md:457
#: ./docs/master/dusk.md:457
msgctxt "P"
msgid "You may use the `move` method to move the browser window to a different position on your screen:"
msgstr ""

#: ./docs/8.x/dusk.md:315
#: ./docs/9.x/dusk.md:391
#: ./docs/10.x/dusk.md:408
#: ./docs/11.x/dusk.md:459
#: ./docs/master/dusk.md:459
msgctxt "CODE"
msgid "$browser->move($x = 100, $y = 100);"
msgstr ""

#: ./docs/8.x/dusk.md:317
#: ./docs/9.x/dusk.md:393
#: ./docs/10.x/dusk.md:410
#: ./docs/11.x/dusk.md:461
#: ./docs/master/dusk.md:461
#~ msgctxt "P"
#~ msgid "<a name=\"browser-macros\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:318
#: ./docs/9.x/dusk.md:394
#: ./docs/10.x/dusk.md:411
#: ./docs/11.x/dusk.md:462
#: ./docs/master/dusk.md:462
msgctxt "H3"
msgid "Browser Macros"
msgstr ""

#: ./docs/8.x/dusk.md:320
#: ./docs/9.x/dusk.md:396
#: ./docs/10.x/dusk.md:413
#: ./docs/11.x/dusk.md:464
#: ./docs/master/dusk.md:464
msgctxt "P"
msgid "If you would like to define a custom browser method that you can re-use in a variety of your tests, you may use the `macro` method on the `Browser` class. Typically, you should call this method from a [service provider's](/docs/{{version}}/providers) `boot` method:"
msgstr ""

#: ./docs/8.x/dusk.md:322
#: ./docs/9.x/dusk.md:398
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Providers;\n\n"
"use Illuminate\\Support\\ServiceProvider;\n"
"use Laravel\\Dusk\\Browser;\n\n"
"class DuskServiceProvider extends ServiceProvider\n"
"{\n"
"    /**\n"
"     * Register Dusk's browser macros.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function boot()\n"
"    {\n"
"        Browser::macro('scrollToElement', function ($element = null) {\n"
"            $this->script(\"$('html, body').animate({ scrollTop: $('$element').offset().top }, 0);\");\n\n"
"            return $this;\n"
"        });\n"
"    }\n"
"}"
msgstr ""

#: ./docs/11.x/dusk.md:337
#: ./docs/master/dusk.md:337
msgctxt "CODE: php tab=Pest"
msgid "<?php\n\n"
"use App\\Models\\User;\n"
"use Illuminate\\Foundation\\Testing\\DatabaseMigrations;\n"
"use Laravel\\Dusk\\Browser;\n\n"
"uses(DatabaseMigrations::class);\n\n"
"test('basic example', function () {\n"
"    $user = User::factory()->create([\n"
"        'email' => 'taylor@laravel.com',\n"
"    ]);\n\n"
"    $this->browse(function (Browser $browser) use ($user) {\n"
"        $browser->visit('/login')\n"
"                ->type('email', $user->email)\n"
"                ->type('password', 'password')\n"
"                ->press('Login')\n"
"                ->assertPathIs('/home');\n"
"    });\n"
"});"
msgstr ""

#: ./docs/8.x/dusk.md:346
#: ./docs/9.x/dusk.md:422
#: ./docs/10.x/dusk.md:437
#: ./docs/11.x/dusk.md:488
#: ./docs/master/dusk.md:488
msgctxt "P"
msgid "The `macro` function accepts a name as its first argument, and a closure as its second. The macro's closure will be executed when calling the macro as a method on a `Browser` instance:"
msgstr ""

#: ./docs/8.x/dusk.md:348
#: ./docs/9.x/dusk.md:424
msgctxt "CODE"
msgid "$this->browse(function ($browser) use ($user) {\n"
"    $browser->visit('/pay')\n"
"            ->scrollToElement('#credit-card-details')\n"
"            ->assertSee('Enter Credit Card Details');\n"
"});"
msgstr ""

#: ./docs/10.x/dusk.md:351
#: ./docs/11.x/dusk.md:402
#: ./docs/master/dusk.md:402
msgctxt "CODE"
msgid "$this->browse(function (Browser $first, Browser $second) {\n"
"    $first->loginAs(User::find(1))\n"
"          ->visit('/home')\n"
"          ->waitForText('Message');\n\n"
"    $second->loginAs(User::find(2))\n"
"           ->visit('/home')\n"
"           ->waitForText('Message')\n"
"           ->type('message', 'Hey Taylor')\n"
"           ->press('Send');\n\n"
"    $first->waitForText('Hey Taylor')\n"
"          ->assertSee('Jeffrey Way');\n"
"});"
msgstr ""

#: ./docs/8.x/dusk.md:354
#: ./docs/9.x/dusk.md:430
#: ./docs/10.x/dusk.md:445
#: ./docs/11.x/dusk.md:496
#: ./docs/master/dusk.md:496
#~ msgctxt "P"
#~ msgid "<a name=\"authentication\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:355
#: ./docs/9.x/dusk.md:431
#: ./docs/10.x/dusk.md:446
#: ./docs/11.x/dusk.md:497
#: ./docs/master/dusk.md:497
msgctxt "H3"
msgid "Authentication"
msgstr ""

#: ./docs/8.x/dusk.md:357
#: ./docs/9.x/dusk.md:433
#: ./docs/10.x/dusk.md:448
#: ./docs/11.x/dusk.md:499
#: ./docs/master/dusk.md:499
msgctxt "P"
msgid "Often, you will be testing pages that require authentication. You can use Dusk's `loginAs` method in order to avoid interacting with your application's login screen during every test. The `loginAs` method accepts a primary key associated with your authenticatable model or an authenticatable model instance:"
msgstr ""

#: ./docs/8.x/dusk.md:359
#: ./docs/9.x/dusk.md:435
msgctxt "CODE"
msgid "use App\\Models\\User;\n\n"
"$this->browse(function ($browser) {\n"
"    $browser->loginAs(User::find(1))\n"
"          ->visit('/home');\n"
"});"
msgstr ""

#: ./docs/11.x/dusk.md:361
#: ./docs/master/dusk.md:361
msgctxt "CODE: php tab=PHPUnit"
msgid "<?php\n\n"
"namespace Tests\\Browser;\n\n"
"use App\\Models\\User;\n"
"use Illuminate\\Foundation\\Testing\\DatabaseMigrations;\n"
"use Laravel\\Dusk\\Browser;\n"
"use Tests\\DuskTestCase;\n\n"
"class ExampleTest extends DuskTestCase\n"
"{\n"
"    use DatabaseMigrations;\n\n"
"    /**\n"
"     * A basic browser test example.\n"
"     */\n"
"    public function test_basic_example(): void\n"
"    {\n"
"        $user = User::factory()->create([\n"
"            'email' => 'taylor@laravel.com',\n"
"        ]);\n\n"
"        $this->browse(function (Browser $browser) use ($user) {\n"
"            $browser->visit('/login')\n"
"                    ->type('email', $user->email)\n"
"                    ->type('password', 'password')\n"
"                    ->press('Login')\n"
"                    ->assertPathIs('/home');\n"
"        });\n"
"    }\n"
"}"
msgstr ""

#: ./docs/8.x/dusk.md:366
#: ./docs/9.x/dusk.md:443
#: ./docs/10.x/dusk.md:459
#: ./docs/11.x/dusk.md:510
#: ./docs/master/dusk.md:510
msgctxt "P"
msgid "After using the `loginAs` method, the user session will be maintained for all tests within the file."
msgstr ""

#: ./docs/8.x/dusk.md:368
#: ./docs/9.x/dusk.md:445
#: ./docs/10.x/dusk.md:461
#: ./docs/11.x/dusk.md:512
#: ./docs/master/dusk.md:512
#~ msgctxt "P"
#~ msgid "<a name=\"cookies\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:369
#: ./docs/9.x/dusk.md:446
#: ./docs/10.x/dusk.md:462
#: ./docs/11.x/dusk.md:513
#: ./docs/master/dusk.md:513
msgctxt "H3"
msgid "Cookies"
msgstr ""

#: ./docs/8.x/dusk.md:371
#: ./docs/9.x/dusk.md:448
#: ./docs/10.x/dusk.md:464
#: ./docs/11.x/dusk.md:515
#: ./docs/master/dusk.md:515
msgctxt "P"
msgid "You may use the `cookie` method to get or set an encrypted cookie's value. By default, all of the cookies created by Laravel are encrypted:"
msgstr ""

#: ./docs/8.x/dusk.md:373
#: ./docs/9.x/dusk.md:450
#: ./docs/10.x/dusk.md:466
#: ./docs/11.x/dusk.md:517
#: ./docs/master/dusk.md:517
msgctxt "CODE"
msgid "$browser->cookie('name');\n\n"
"$browser->cookie('name', 'Taylor');"
msgstr ""

#: ./docs/8.x/dusk.md:377
#: ./docs/9.x/dusk.md:454
#: ./docs/10.x/dusk.md:470
#: ./docs/11.x/dusk.md:521
#: ./docs/master/dusk.md:521
msgctxt "P"
msgid "You may use the `plainCookie` method to get or set an unencrypted cookie's value:"
msgstr ""

#: ./docs/8.x/dusk.md:379
#: ./docs/9.x/dusk.md:456
#: ./docs/10.x/dusk.md:472
#: ./docs/11.x/dusk.md:523
#: ./docs/master/dusk.md:523
msgctxt "CODE"
msgid "$browser->plainCookie('name');\n\n"
"$browser->plainCookie('name', 'Taylor');"
msgstr ""

#: ./docs/8.x/dusk.md:383
#: ./docs/9.x/dusk.md:460
#: ./docs/10.x/dusk.md:476
#: ./docs/11.x/dusk.md:527
#: ./docs/master/dusk.md:527
msgctxt "P"
msgid "You may use the `deleteCookie` method to delete the given cookie:"
msgstr ""

#: ./docs/8.x/dusk.md:385
#: ./docs/9.x/dusk.md:462
#: ./docs/10.x/dusk.md:478
#: ./docs/11.x/dusk.md:529
#: ./docs/master/dusk.md:529
msgctxt "CODE"
msgid "$browser->deleteCookie('name');"
msgstr ""

#: ./docs/8.x/dusk.md:387
#: ./docs/9.x/dusk.md:464
#: ./docs/10.x/dusk.md:480
#: ./docs/11.x/dusk.md:531
#: ./docs/master/dusk.md:531
#~ msgctxt "P"
#~ msgid "<a name=\"executing-javascript\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:388
#: ./docs/9.x/dusk.md:465
#: ./docs/10.x/dusk.md:481
#: ./docs/11.x/dusk.md:532
#: ./docs/master/dusk.md:532
msgctxt "H3"
msgid "Executing JavaScript"
msgstr ""

#: ./docs/8.x/dusk.md:390
#: ./docs/9.x/dusk.md:467
#: ./docs/10.x/dusk.md:483
#: ./docs/11.x/dusk.md:534
#: ./docs/master/dusk.md:534
msgctxt "P"
msgid "You may use the `script` method to execute arbitrary JavaScript statements within the browser:"
msgstr ""

#: ./docs/8.x/dusk.md:392
#: ./docs/9.x/dusk.md:469
#: ./docs/10.x/dusk.md:485
#: ./docs/11.x/dusk.md:536
#: ./docs/master/dusk.md:536
msgctxt "CODE"
msgid "$browser->script('document.documentElement.scrollTop = 0');\n\n"
"$browser->script([\n"
"    'document.body.scrollTop = 0',\n"
"    'document.documentElement.scrollTop = 0',\n"
"]);\n\n"
"$output = $browser->script('return window.location.pathname');"
msgstr ""

#: ./docs/8.x/dusk.md:401
#: ./docs/9.x/dusk.md:478
#: ./docs/10.x/dusk.md:494
#: ./docs/11.x/dusk.md:545
#: ./docs/master/dusk.md:545
#~ msgctxt "P"
#~ msgid "<a name=\"taking-a-screenshot\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:402
#: ./docs/9.x/dusk.md:479
msgctxt "H3"
msgid "Taking A Screenshot"
msgstr ""

#: ./docs/8.x/dusk.md:404
#: ./docs/9.x/dusk.md:481
#: ./docs/10.x/dusk.md:497
#: ./docs/11.x/dusk.md:548
#: ./docs/master/dusk.md:548
msgctxt "P"
msgid "You may use the `screenshot` method to take a screenshot and store it with the given filename. All screenshots will be stored within the `tests/Browser/screenshots` directory:"
msgstr ""

#: ./docs/8.x/dusk.md:406
#: ./docs/9.x/dusk.md:483
#: ./docs/10.x/dusk.md:499
#: ./docs/11.x/dusk.md:550
#: ./docs/master/dusk.md:550
msgctxt "CODE"
msgid "$browser->screenshot('filename');"
msgstr ""

#: ./docs/8.x/dusk.md:408
#: ./docs/9.x/dusk.md:489
#: ./docs/10.x/dusk.md:505
#: ./docs/11.x/dusk.md:560
#: ./docs/master/dusk.md:556
#~ msgctxt "P"
#~ msgid "<a name=\"storing-console-output-to-disk\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:409
#: ./docs/9.x/dusk.md:490
msgctxt "H3"
msgid "Storing Console Output To Disk"
msgstr ""

#: ./docs/8.x/dusk.md:411
#: ./docs/9.x/dusk.md:492
#: ./docs/10.x/dusk.md:508
#: ./docs/11.x/dusk.md:563
#: ./docs/master/dusk.md:559
msgctxt "P"
msgid "You may use the `storeConsoleLog` method to write the current browser's console output to disk with the given filename. Console output will be stored within the `tests/Browser/console` directory:"
msgstr ""

#: ./docs/8.x/dusk.md:413
#: ./docs/9.x/dusk.md:494
#: ./docs/10.x/dusk.md:510
#: ./docs/11.x/dusk.md:565
#: ./docs/master/dusk.md:561
msgctxt "CODE"
msgid "$browser->storeConsoleLog('filename');"
msgstr ""

#: ./docs/10.x/dusk.md:415
#: ./docs/11.x/dusk.md:466
#: ./docs/master/dusk.md:466
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Providers;\n\n"
"use Illuminate\\Support\\ServiceProvider;\n"
"use Laravel\\Dusk\\Browser;\n\n"
"class DuskServiceProvider extends ServiceProvider\n"
"{\n"
"    /**\n"
"     * Register Dusk's browser macros.\n"
"     */\n"
"    public function boot(): void\n"
"    {\n"
"        Browser::macro('scrollToElement', function (string $element = null) {\n"
"            $this->script(\"$('html, body').animate({ scrollTop: $('$element').offset().top }, 0);\");\n\n"
"            return $this;\n"
"        });\n"
"    }\n"
"}"
msgstr ""

#: ./docs/8.x/dusk.md:415
#: ./docs/9.x/dusk.md:496
#: ./docs/10.x/dusk.md:512
#: ./docs/11.x/dusk.md:567
#: ./docs/master/dusk.md:563
#~ msgctxt "P"
#~ msgid "<a name=\"storing-page-source-to-disk\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:416
#: ./docs/9.x/dusk.md:497
msgctxt "H3"
msgid "Storing Page Source To Disk"
msgstr ""

#: ./docs/8.x/dusk.md:418
#: ./docs/9.x/dusk.md:499
#: ./docs/10.x/dusk.md:515
#: ./docs/11.x/dusk.md:570
#: ./docs/master/dusk.md:566
msgctxt "P"
msgid "You may use the `storeSource` method to write the current page's source to disk with the given filename. The page source will be stored within the `tests/Browser/source` directory:"
msgstr ""

#: ./docs/8.x/dusk.md:420
#: ./docs/9.x/dusk.md:501
#: ./docs/10.x/dusk.md:517
#: ./docs/11.x/dusk.md:572
#: ./docs/master/dusk.md:568
msgctxt "CODE"
msgid "$browser->storeSource('filename');"
msgstr ""

#: ./docs/8.x/dusk.md:422
#: ./docs/9.x/dusk.md:503
#: ./docs/10.x/dusk.md:519
#: ./docs/11.x/dusk.md:574
#: ./docs/master/dusk.md:570
#~ msgctxt "P"
#~ msgid "<a name=\"interacting-with-elements\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:423
#: ./docs/9.x/dusk.md:504
#: ./docs/10.x/dusk.md:520
#: ./docs/11.x/dusk.md:575
#: ./docs/master/dusk.md:571
msgctxt "H2"
msgid "Interacting With Elements"
msgstr ""

#: ./docs/8.x/dusk.md:425
#: ./docs/9.x/dusk.md:506
#: ./docs/10.x/dusk.md:522
#: ./docs/11.x/dusk.md:577
#: ./docs/master/dusk.md:573
#~ msgctxt "P"
#~ msgid "<a name=\"dusk-selectors\"></a>"
#~ msgstr ""

#: ./docs/11.x/dusk.md:426
msgctxt "CODE"
msgid "$browser->visitRoute($routeName, $parameters);"
msgstr ""

#: ./docs/8.x/dusk.md:426
#: ./docs/9.x/dusk.md:507
#: ./docs/10.x/dusk.md:523
#: ./docs/11.x/dusk.md:578
#: ./docs/master/dusk.md:574
msgctxt "H3"
msgid "Dusk Selectors"
msgstr ""

#: ./docs/8.x/dusk.md:428
#: ./docs/9.x/dusk.md:509
#: ./docs/10.x/dusk.md:525
#: ./docs/11.x/dusk.md:580
#: ./docs/master/dusk.md:576
msgctxt "P"
msgid "Choosing good CSS selectors for interacting with elements is one of the hardest parts of writing Dusk tests. Over time, frontend changes can cause CSS selectors like the following to break your tests:"
msgstr ""

#: ./docs/8.x/dusk.md:430
#: ./docs/9.x/dusk.md:511
#: ./docs/10.x/dusk.md:527
#: ./docs/11.x/dusk.md:582
#: ./docs/master/dusk.md:578
msgctxt "CODE"
msgid "// HTML...\n\n"
"<button>Login</button>\n\n"
"// Test...\n\n"
"$browser->click('.login-page .container div > button');"
msgstr ""

#: ./docs/8.x/dusk.md:438
#: ./docs/9.x/dusk.md:519
#: ./docs/10.x/dusk.md:535
#: ./docs/11.x/dusk.md:590
#: ./docs/master/dusk.md:586
msgctxt "P"
msgid "Dusk selectors allow you to focus on writing effective tests rather than remembering CSS selectors. To define a selector, add a `dusk` attribute to your HTML element. Then, when interacting with a Dusk browser, prefix the selector with `@` to manipulate the attached element within your test:"
msgstr ""

#: ./docs/10.x/dusk.md:439
#: ./docs/11.x/dusk.md:490
#: ./docs/master/dusk.md:490
msgctxt "CODE"
msgid "$this->browse(function (Browser $browser) use ($user) {\n"
"    $browser->visit('/pay')\n"
"            ->scrollToElement('#credit-card-details')\n"
"            ->assertSee('Enter Credit Card Details');\n"
"});"
msgstr ""

#: ./docs/8.x/dusk.md:440
#: ./docs/9.x/dusk.md:521
#: ./docs/10.x/dusk.md:537
#: ./docs/11.x/dusk.md:592
#: ./docs/master/dusk.md:588
msgctxt "CODE"
msgid "// HTML...\n\n"
"<button dusk=\"login-button\">Login</button>\n\n"
"// Test...\n\n"
"$browser->click('@login-button');"
msgstr ""

#: ./docs/8.x/dusk.md:448
#: ./docs/9.x/dusk.md:529
#: ./docs/10.x/dusk.md:551
#: ./docs/11.x/dusk.md:606
#: ./docs/master/dusk.md:602
#~ msgctxt "P"
#~ msgid "<a name=\"text-values-and-attributes\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:449
#: ./docs/9.x/dusk.md:530
msgctxt "H3"
msgid "Text, Values, & Attributes"
msgstr ""

#: ./docs/10.x/dusk.md:450
#: ./docs/11.x/dusk.md:501
#: ./docs/master/dusk.md:501
msgctxt "CODE"
msgid "use App\\Models\\User;\n"
"use Laravel\\Dusk\\Browser;\n\n"
"$this->browse(function (Browser $browser) {\n"
"    $browser->loginAs(User::find(1))\n"
"          ->visit('/home');\n"
"});"
msgstr ""

#: ./docs/8.x/dusk.md:451
#: ./docs/9.x/dusk.md:532
#: ./docs/10.x/dusk.md:554
#: ./docs/11.x/dusk.md:609
#: ./docs/master/dusk.md:605
#~ msgctxt "P"
#~ msgid "<a name=\"retrieving-setting-values\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:452
#: ./docs/9.x/dusk.md:533
msgctxt "H4"
msgid "Retrieving & Setting Values"
msgstr ""

#: ./docs/8.x/dusk.md:454
#: ./docs/9.x/dusk.md:535
#: ./docs/10.x/dusk.md:557
#: ./docs/11.x/dusk.md:612
#: ./docs/master/dusk.md:608
msgctxt "P"
msgid "Dusk provides several methods for interacting with the current value, display text, and attributes of elements on the page. For example, to get the \"value\" of an element that matches a given CSS or Dusk selector, use the `value` method:"
msgstr ""

#: ./docs/8.x/dusk.md:456
#: ./docs/9.x/dusk.md:537
#: ./docs/10.x/dusk.md:559
#: ./docs/11.x/dusk.md:614
#: ./docs/master/dusk.md:610
msgctxt "CODE"
msgid "// Retrieve the value...\n"
"$value = $browser->value('selector');\n\n"
"// Set the value...\n"
"$browser->value('selector', 'value');"
msgstr ""

#: ./docs/8.x/dusk.md:462
#: ./docs/9.x/dusk.md:543
#: ./docs/10.x/dusk.md:565
#: ./docs/11.x/dusk.md:620
#: ./docs/master/dusk.md:616
msgctxt "P"
msgid "You may use the `inputValue` method to get the \"value\" of an input element that has a given field name:"
msgstr ""

#: ./docs/8.x/dusk.md:464
#: ./docs/9.x/dusk.md:545
#: ./docs/10.x/dusk.md:567
#: ./docs/11.x/dusk.md:622
#: ./docs/master/dusk.md:618
msgctxt "CODE"
msgid "$value = $browser->inputValue('field');"
msgstr ""

#: ./docs/8.x/dusk.md:466
#: ./docs/9.x/dusk.md:547
#: ./docs/10.x/dusk.md:569
#: ./docs/11.x/dusk.md:624
#: ./docs/master/dusk.md:620
#~ msgctxt "P"
#~ msgid "<a name=\"retrieving-text\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:467
#: ./docs/9.x/dusk.md:548
#: ./docs/10.x/dusk.md:570
#: ./docs/11.x/dusk.md:625
#: ./docs/master/dusk.md:621
msgctxt "H4"
msgid "Retrieving Text"
msgstr ""

#: ./docs/8.x/dusk.md:469
#: ./docs/9.x/dusk.md:550
#: ./docs/10.x/dusk.md:572
#: ./docs/11.x/dusk.md:627
#: ./docs/master/dusk.md:623
msgctxt "P"
msgid "The `text` method may be used to retrieve the display text of an element that matches the given selector:"
msgstr ""

#: ./docs/8.x/dusk.md:471
#: ./docs/9.x/dusk.md:552
#: ./docs/10.x/dusk.md:574
#: ./docs/11.x/dusk.md:629
#: ./docs/master/dusk.md:625
msgctxt "CODE"
msgid "$text = $browser->text('selector');"
msgstr ""

#: ./docs/8.x/dusk.md:473
#: ./docs/9.x/dusk.md:554
#: ./docs/10.x/dusk.md:576
#: ./docs/11.x/dusk.md:631
#: ./docs/master/dusk.md:627
#~ msgctxt "P"
#~ msgid "<a name=\"retrieving-attributes\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:474
#: ./docs/9.x/dusk.md:555
#: ./docs/10.x/dusk.md:577
#: ./docs/11.x/dusk.md:632
#: ./docs/master/dusk.md:628
msgctxt "H4"
msgid "Retrieving Attributes"
msgstr ""

#: ./docs/8.x/dusk.md:476
#: ./docs/9.x/dusk.md:557
#: ./docs/10.x/dusk.md:579
#: ./docs/11.x/dusk.md:634
#: ./docs/master/dusk.md:630
msgctxt "P"
msgid "Finally, the `attribute` method may be used to retrieve the value of an attribute of an element matching the given selector:"
msgstr ""

#: ./docs/8.x/dusk.md:478
#: ./docs/9.x/dusk.md:559
#: ./docs/10.x/dusk.md:581
#: ./docs/11.x/dusk.md:636
#: ./docs/master/dusk.md:632
msgctxt "CODE"
msgid "$attribute = $browser->attribute('selector', 'value');"
msgstr ""

#: ./docs/8.x/dusk.md:480
#: ./docs/9.x/dusk.md:561
#: ./docs/10.x/dusk.md:583
#: ./docs/11.x/dusk.md:638
#: ./docs/master/dusk.md:634
#~ msgctxt "P"
#~ msgid "<a name=\"interacting-with-forms\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:481
#: ./docs/9.x/dusk.md:562
#: ./docs/10.x/dusk.md:584
#: ./docs/11.x/dusk.md:639
#: ./docs/master/dusk.md:635
msgctxt "H3"
msgid "Interacting With Forms"
msgstr ""

#: ./docs/8.x/dusk.md:483
#: ./docs/9.x/dusk.md:564
#: ./docs/10.x/dusk.md:586
#: ./docs/11.x/dusk.md:641
#: ./docs/master/dusk.md:637
#~ msgctxt "P"
#~ msgid "<a name=\"typing-values\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:484
#: ./docs/9.x/dusk.md:565
#: ./docs/10.x/dusk.md:587
#: ./docs/11.x/dusk.md:642
#: ./docs/master/dusk.md:638
msgctxt "H4"
msgid "Typing Values"
msgstr ""

#: ./docs/9.x/dusk.md:485
#: ./docs/10.x/dusk.md:501
#: ./docs/11.x/dusk.md:552
#: ./docs/master/dusk.md:552
msgctxt "P"
msgid "The `responsiveScreenshots` method may be used to take a series of screenshots at various breakpoints:"
msgstr ""

#: ./docs/8.x/dusk.md:486
#: ./docs/9.x/dusk.md:567
#: ./docs/10.x/dusk.md:589
#: ./docs/11.x/dusk.md:644
#: ./docs/master/dusk.md:640
msgctxt "P"
msgid "Dusk provides a variety of methods for interacting with forms and input elements. First, let's take a look at an example of typing text into an input field:"
msgstr ""

#: ./docs/9.x/dusk.md:487
#: ./docs/10.x/dusk.md:503
#: ./docs/11.x/dusk.md:554
#: ./docs/master/dusk.md:554
msgctxt "CODE"
msgid "$browser->responsiveScreenshots('filename');"
msgstr ""

#: ./docs/8.x/dusk.md:488
#: ./docs/9.x/dusk.md:569
#: ./docs/10.x/dusk.md:591
#: ./docs/11.x/dusk.md:646
#: ./docs/master/dusk.md:642
msgctxt "CODE"
msgid "$browser->type('email', 'taylor@laravel.com');"
msgstr ""

#: ./docs/8.x/dusk.md:490
#: ./docs/9.x/dusk.md:571
#: ./docs/10.x/dusk.md:593
#: ./docs/11.x/dusk.md:648
#: ./docs/master/dusk.md:644
msgctxt "P"
msgid "Note that, although the method accepts one if necessary, we are not required to pass a CSS selector into the `type` method. If a CSS selector is not provided, Dusk will search for an `input` or `textarea` field with the given `name` attribute."
msgstr ""

#: ./docs/8.x/dusk.md:492
#: ./docs/9.x/dusk.md:573
#: ./docs/10.x/dusk.md:595
#: ./docs/11.x/dusk.md:650
#: ./docs/master/dusk.md:646
msgctxt "P"
msgid "To append text to a field without clearing its content, you may use the `append` method:"
msgstr ""

#: ./docs/8.x/dusk.md:494
#: ./docs/9.x/dusk.md:575
#: ./docs/10.x/dusk.md:597
#: ./docs/11.x/dusk.md:652
#: ./docs/master/dusk.md:648
msgctxt "CODE"
msgid "$browser->type('tags', 'foo')\n"
"        ->append('tags', ', bar, baz');"
msgstr ""

#: ./docs/10.x/dusk.md:495
#: ./docs/11.x/dusk.md:546
#: ./docs/master/dusk.md:546
msgctxt "H3"
msgid "Taking a Screenshot"
msgstr ""

#: ./docs/8.x/dusk.md:497
#: ./docs/9.x/dusk.md:578
#: ./docs/10.x/dusk.md:600
#: ./docs/11.x/dusk.md:655
#: ./docs/master/dusk.md:651
msgctxt "P"
msgid "You may clear the value of an input using the `clear` method:"
msgstr ""

#: ./docs/8.x/dusk.md:499
#: ./docs/9.x/dusk.md:580
#: ./docs/10.x/dusk.md:602
#: ./docs/11.x/dusk.md:657
#: ./docs/master/dusk.md:653
msgctxt "CODE"
msgid "$browser->clear('email');"
msgstr ""

#: ./docs/8.x/dusk.md:501
#: ./docs/9.x/dusk.md:582
#: ./docs/10.x/dusk.md:604
#: ./docs/11.x/dusk.md:659
#: ./docs/master/dusk.md:655
msgctxt "P"
msgid "You can instruct Dusk to type slowly using the `typeSlowly` method. By default, Dusk will pause for 100 milliseconds between key presses. To customize the amount of time between key presses, you may pass the appropriate number of milliseconds as the third argument to the method:"
msgstr ""

#: ./docs/8.x/dusk.md:503
#: ./docs/9.x/dusk.md:584
#: ./docs/10.x/dusk.md:606
#: ./docs/11.x/dusk.md:661
#: ./docs/master/dusk.md:657
msgctxt "CODE"
msgid "$browser->typeSlowly('mobile', '+1 (202) 555-5555');\n\n"
"$browser->typeSlowly('mobile', '+1 (202) 555-5555', 300);"
msgstr ""

#: ./docs/10.x/dusk.md:506
#: ./docs/11.x/dusk.md:561
#: ./docs/master/dusk.md:557
msgctxt "H3"
msgid "Storing Console Output to Disk"
msgstr ""

#: ./docs/8.x/dusk.md:507
#: ./docs/9.x/dusk.md:588
#: ./docs/10.x/dusk.md:610
#: ./docs/11.x/dusk.md:665
#: ./docs/master/dusk.md:661
msgctxt "P"
msgid "You may use the `appendSlowly` method to append text slowly:"
msgstr ""

#: ./docs/8.x/dusk.md:509
#: ./docs/9.x/dusk.md:590
#: ./docs/10.x/dusk.md:612
#: ./docs/11.x/dusk.md:667
#: ./docs/master/dusk.md:663
msgctxt "CODE"
msgid "$browser->type('tags', 'foo')\n"
"        ->appendSlowly('tags', ', bar, baz');"
msgstr ""

#: ./docs/8.x/dusk.md:512
#: ./docs/9.x/dusk.md:593
#: ./docs/10.x/dusk.md:615
#: ./docs/11.x/dusk.md:670
#: ./docs/master/dusk.md:666
#~ msgctxt "P"
#~ msgid "<a name=\"dropdowns\"></a>"
#~ msgstr ""

#: ./docs/10.x/dusk.md:513
#: ./docs/11.x/dusk.md:568
#: ./docs/master/dusk.md:564
msgctxt "H3"
msgid "Storing Page Source to Disk"
msgstr ""

#: ./docs/8.x/dusk.md:513
#: ./docs/9.x/dusk.md:594
#: ./docs/10.x/dusk.md:616
#: ./docs/11.x/dusk.md:671
#: ./docs/master/dusk.md:667
msgctxt "H4"
msgid "Dropdowns"
msgstr ""

#: ./docs/8.x/dusk.md:515
#: ./docs/9.x/dusk.md:596
#: ./docs/10.x/dusk.md:618
#: ./docs/11.x/dusk.md:673
#: ./docs/master/dusk.md:669
msgctxt "P"
msgid "To select a value available on a `select` element, you may use the `select` method. Like the `type` method, the `select` method does not require a full CSS selector. When passing a value to the `select` method, you should pass the underlying option value instead of the display text:"
msgstr ""

#: ./docs/8.x/dusk.md:517
#: ./docs/9.x/dusk.md:598
#: ./docs/10.x/dusk.md:620
#: ./docs/11.x/dusk.md:675
#: ./docs/master/dusk.md:671
msgctxt "CODE"
msgid "$browser->select('size', 'Large');"
msgstr ""

#: ./docs/8.x/dusk.md:519
#: ./docs/9.x/dusk.md:600
#: ./docs/10.x/dusk.md:622
#: ./docs/11.x/dusk.md:677
#: ./docs/master/dusk.md:673
msgctxt "P"
msgid "You may select a random option by omitting the second argument:"
msgstr ""

#: ./docs/8.x/dusk.md:521
#: ./docs/9.x/dusk.md:602
#: ./docs/10.x/dusk.md:624
#: ./docs/11.x/dusk.md:679
#: ./docs/master/dusk.md:675
msgctxt "CODE"
msgid "$browser->select('size');"
msgstr ""

#: ./docs/8.x/dusk.md:523
#: ./docs/9.x/dusk.md:604
#: ./docs/10.x/dusk.md:626
#: ./docs/11.x/dusk.md:681
#: ./docs/master/dusk.md:677
msgctxt "P"
msgid "By providing an array as the second argument to the `select` method, you can instruct the method to select multiple options:"
msgstr ""

#: ./docs/8.x/dusk.md:525
#: ./docs/9.x/dusk.md:606
#: ./docs/10.x/dusk.md:628
#: ./docs/11.x/dusk.md:683
#: ./docs/master/dusk.md:679
msgctxt "CODE"
msgid "$browser->select('categories', ['Art', 'Music']);"
msgstr ""

#: ./docs/8.x/dusk.md:527
#: ./docs/9.x/dusk.md:608
#: ./docs/10.x/dusk.md:630
#: ./docs/11.x/dusk.md:685
#: ./docs/master/dusk.md:681
#~ msgctxt "P"
#~ msgid "<a name=\"checkboxes\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:528
#: ./docs/9.x/dusk.md:609
#: ./docs/10.x/dusk.md:631
#: ./docs/11.x/dusk.md:686
#: ./docs/master/dusk.md:682
msgctxt "H4"
msgid "Checkboxes"
msgstr ""

#: ./docs/8.x/dusk.md:530
#: ./docs/9.x/dusk.md:611
#: ./docs/10.x/dusk.md:633
#: ./docs/11.x/dusk.md:688
#: ./docs/master/dusk.md:684
msgctxt "P"
msgid "To \"check\" a checkbox input, you may use the `check` method. Like many other input related methods, a full CSS selector is not required. If a CSS selector match can't be found, Dusk will search for a checkbox with a matching `name` attribute:"
msgstr ""

#: ./docs/8.x/dusk.md:532
#: ./docs/9.x/dusk.md:613
#: ./docs/10.x/dusk.md:635
#: ./docs/11.x/dusk.md:690
#: ./docs/master/dusk.md:686
msgctxt "CODE"
msgid "$browser->check('terms');"
msgstr ""

#: ./docs/8.x/dusk.md:534
#: ./docs/9.x/dusk.md:615
#: ./docs/10.x/dusk.md:637
#: ./docs/11.x/dusk.md:692
#: ./docs/master/dusk.md:688
msgctxt "P"
msgid "The `uncheck` method may be used to \"uncheck\" a checkbox input:"
msgstr ""

#: ./docs/8.x/dusk.md:536
#: ./docs/9.x/dusk.md:617
#: ./docs/10.x/dusk.md:639
#: ./docs/11.x/dusk.md:694
#: ./docs/master/dusk.md:690
msgctxt "CODE"
msgid "$browser->uncheck('terms');"
msgstr ""

#: ./docs/8.x/dusk.md:538
#: ./docs/9.x/dusk.md:619
#: ./docs/10.x/dusk.md:641
#: ./docs/11.x/dusk.md:696
#: ./docs/master/dusk.md:692
#~ msgctxt "P"
#~ msgid "<a name=\"radio-buttons\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:539
#: ./docs/9.x/dusk.md:620
#: ./docs/10.x/dusk.md:642
#: ./docs/11.x/dusk.md:697
#: ./docs/master/dusk.md:693
msgctxt "H4"
msgid "Radio Buttons"
msgstr ""

#: ./docs/8.x/dusk.md:541
#: ./docs/9.x/dusk.md:622
#: ./docs/10.x/dusk.md:644
#: ./docs/11.x/dusk.md:699
#: ./docs/master/dusk.md:695
msgctxt "P"
msgid "To \"select\" a `radio` input option, you may use the `radio` method. Like many other input related methods, a full CSS selector is not required. If a CSS selector match can't be found, Dusk will search for a `radio` input with matching `name` and `value` attributes:"
msgstr ""

#: ./docs/8.x/dusk.md:543
#: ./docs/9.x/dusk.md:624
#: ./docs/10.x/dusk.md:646
#: ./docs/11.x/dusk.md:701
#: ./docs/master/dusk.md:697
msgctxt "CODE"
msgid "$browser->radio('size', 'large');"
msgstr ""

#: ./docs/10.x/dusk.md:545
#: ./docs/11.x/dusk.md:600
#: ./docs/master/dusk.md:596
msgctxt "P"
msgid "If desired, you may customize the HTML attribute that the Dusk selector utilizes via the `selectorHtmlAttribute` method. Typically, this method should be called from the `boot` method of your application's `AppServiceProvider`:"
msgstr ""

#: ./docs/8.x/dusk.md:545
#: ./docs/9.x/dusk.md:626
#: ./docs/10.x/dusk.md:648
#: ./docs/11.x/dusk.md:703
#: ./docs/master/dusk.md:699
#~ msgctxt "P"
#~ msgid "<a name=\"attaching-files\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:546
#: ./docs/9.x/dusk.md:627
#: ./docs/10.x/dusk.md:649
#: ./docs/11.x/dusk.md:704
#: ./docs/master/dusk.md:700
msgctxt "H3"
msgid "Attaching Files"
msgstr ""

#: ./docs/10.x/dusk.md:547
#: ./docs/11.x/dusk.md:602
#: ./docs/master/dusk.md:598
msgctxt "CODE"
msgid "use Laravel\\Dusk\\Dusk;\n\n"
"Dusk::selectorHtmlAttribute('data-dusk');"
msgstr ""

#: ./docs/8.x/dusk.md:548
#: ./docs/9.x/dusk.md:629
#: ./docs/10.x/dusk.md:651
#: ./docs/11.x/dusk.md:706
#: ./docs/master/dusk.md:702
msgctxt "P"
msgid "The `attach` method may be used to attach a file to a `file` input element. Like many other input related methods, a full CSS selector is not required. If a CSS selector match can't be found, Dusk will search for a `file` input with a matching `name` attribute:"
msgstr ""

#: ./docs/8.x/dusk.md:550
#: ./docs/9.x/dusk.md:631
#: ./docs/10.x/dusk.md:653
#: ./docs/11.x/dusk.md:708
#: ./docs/master/dusk.md:704
msgctxt "CODE"
msgid "$browser->attach('photo', __DIR__.'/photos/mountains.png');"
msgstr ""

#: ./docs/10.x/dusk.md:552
#: ./docs/11.x/dusk.md:607
#: ./docs/master/dusk.md:603
msgctxt "H3"
msgid "Text, Values, and Attributes"
msgstr ""

#: ./docs/8.x/dusk.md:552
#: ./docs/9.x/dusk.md:634
#: ./docs/10.x/dusk.md:656
#: ./docs/11.x/dusk.md:711
#: ./docs/master/dusk.md:707
msgctxt "P"
msgid "The attach function requires the `Zip` PHP extension to be installed and enabled on your server."
msgstr ""

#: ./docs/8.x/dusk.md:554
#: ./docs/9.x/dusk.md:636
#: ./docs/10.x/dusk.md:658
#: ./docs/11.x/dusk.md:713
#: ./docs/master/dusk.md:709
#~ msgctxt "P"
#~ msgid "<a name=\"pressing-buttons\"></a>"
#~ msgstr ""

#: ./docs/10.x/dusk.md:555
#: ./docs/11.x/dusk.md:610
#: ./docs/master/dusk.md:606
msgctxt "H4"
msgid "Retrieving and Setting Values"
msgstr ""

#: ./docs/8.x/dusk.md:555
#: ./docs/9.x/dusk.md:637
#: ./docs/10.x/dusk.md:659
#: ./docs/11.x/dusk.md:714
#: ./docs/master/dusk.md:710
msgctxt "H3"
msgid "Pressing Buttons"
msgstr ""

#: ./docs/11.x/dusk.md:556
msgctxt "P"
msgid "The `screenshotElement` method may be used to take a screenshot of a specific element on the page:"
msgstr ""

#: ./docs/8.x/dusk.md:557
msgctxt "P"
msgid "The `press` method may be used to click a button element on the page. The first argument given to the `press` method may be either the display text of the button or a CSS / Dusk selector:"
msgstr ""

#: ./docs/11.x/dusk.md:558
msgctxt "CODE"
msgid "$browser->screenshotElement('#selector', 'filename');"
msgstr ""

#: ./docs/8.x/dusk.md:559
#: ./docs/9.x/dusk.md:641
#: ./docs/10.x/dusk.md:663
#: ./docs/11.x/dusk.md:718
#: ./docs/master/dusk.md:714
msgctxt "CODE"
msgid "$browser->press('Login');"
msgstr ""

#: ./docs/8.x/dusk.md:561
msgctxt "P"
msgid "When submitting forms, many application's disable the form's submission button after it is pressed and then re-enable the button when the form submission's HTTP request is complete. To press a button and wait for the button to be re-enabled, you may use the `pressAndWaitFor` method:"
msgstr ""

#: ./docs/8.x/dusk.md:563
#: ./docs/9.x/dusk.md:645
#: ./docs/10.x/dusk.md:667
#: ./docs/11.x/dusk.md:722
#: ./docs/master/dusk.md:718
msgctxt "CODE"
msgid "// Press the button and wait a maximum of 5 seconds for it to be enabled...\n"
"$browser->pressAndWaitFor('Save');\n\n"
"// Press the button and wait a maximum of 1 second for it to be enabled...\n"
"$browser->pressAndWaitFor('Save', 1);"
msgstr ""

#: ./docs/8.x/dusk.md:569
#: ./docs/9.x/dusk.md:651
#: ./docs/10.x/dusk.md:673
#: ./docs/11.x/dusk.md:728
#: ./docs/master/dusk.md:724
#~ msgctxt "P"
#~ msgid "<a name=\"clicking-links\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:570
#: ./docs/9.x/dusk.md:652
#: ./docs/10.x/dusk.md:674
#: ./docs/11.x/dusk.md:729
#: ./docs/master/dusk.md:725
msgctxt "H3"
msgid "Clicking Links"
msgstr ""

#: ./docs/8.x/dusk.md:572
#: ./docs/9.x/dusk.md:654
#: ./docs/10.x/dusk.md:676
#: ./docs/11.x/dusk.md:731
#: ./docs/master/dusk.md:727
msgctxt "P"
msgid "To click a link, you may use the `clickLink` method on the browser instance. The `clickLink` method will click the link that has the given display text:"
msgstr ""

#: ./docs/8.x/dusk.md:574
#: ./docs/9.x/dusk.md:656
#: ./docs/10.x/dusk.md:678
#: ./docs/11.x/dusk.md:733
#: ./docs/master/dusk.md:729
msgctxt "CODE"
msgid "$browser->clickLink($linkText);"
msgstr ""

#: ./docs/8.x/dusk.md:576
#: ./docs/9.x/dusk.md:658
#: ./docs/10.x/dusk.md:680
#: ./docs/11.x/dusk.md:735
#: ./docs/master/dusk.md:731
msgctxt "P"
msgid "You may use the `seeLink` method to determine if a link with the given display text is visible on the page:"
msgstr ""

#: ./docs/8.x/dusk.md:578
#: ./docs/9.x/dusk.md:660
#: ./docs/10.x/dusk.md:682
#: ./docs/11.x/dusk.md:737
#: ./docs/master/dusk.md:733
msgctxt "CODE"
msgid "if ($browser->seeLink($linkText)) {\n"
"    // ...\n"
"}"
msgstr ""

#: ./docs/8.x/dusk.md:582
#: ./docs/9.x/dusk.md:665
#: ./docs/10.x/dusk.md:687
#: ./docs/11.x/dusk.md:742
#: ./docs/master/dusk.md:738
msgctxt "P"
msgid "These methods interact with jQuery. If jQuery is not available on the page, Dusk will automatically inject it into the page so it is available for the test's duration."
msgstr ""

#: ./docs/8.x/dusk.md:584
#: ./docs/9.x/dusk.md:667
#: ./docs/10.x/dusk.md:689
#: ./docs/11.x/dusk.md:744
#: ./docs/master/dusk.md:740
#~ msgctxt "P"
#~ msgid "<a name=\"using-the-keyboard\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:585
#: ./docs/9.x/dusk.md:668
msgctxt "H3"
msgid "Using The Keyboard"
msgstr ""

#: ./docs/8.x/dusk.md:587
#: ./docs/9.x/dusk.md:670
#: ./docs/10.x/dusk.md:692
#: ./docs/11.x/dusk.md:747
#: ./docs/master/dusk.md:743
msgctxt "P"
msgid "The `keys` method allows you to provide more complex input sequences to a given element than normally allowed by the `type` method. For example, you may instruct Dusk to hold modifier keys while entering values. In this example, the `shift` key will be held while `taylor` is entered into the element matching the given selector. After `taylor` is typed, `swift` will be typed without any modifier keys:"
msgstr ""

#: ./docs/8.x/dusk.md:589
#: ./docs/9.x/dusk.md:672
#: ./docs/10.x/dusk.md:694
#: ./docs/11.x/dusk.md:749
#: ./docs/master/dusk.md:745
msgctxt "CODE"
msgid "$browser->keys('selector', ['{shift}', 'taylor'], 'swift');"
msgstr ""

#: ./docs/8.x/dusk.md:591
#: ./docs/9.x/dusk.md:674
#: ./docs/10.x/dusk.md:696
#: ./docs/11.x/dusk.md:751
#: ./docs/master/dusk.md:747
msgctxt "P"
msgid "Another valuable use case for the `keys` method is sending a \"keyboard shortcut\" combination to the primary CSS selector for your application:"
msgstr ""

#: ./docs/8.x/dusk.md:593
#: ./docs/9.x/dusk.md:676
#: ./docs/10.x/dusk.md:698
#: ./docs/11.x/dusk.md:753
#: ./docs/master/dusk.md:749
msgctxt "CODE"
msgid "$browser->keys('.app', ['{command}', 'j']);"
msgstr ""

#: ./docs/8.x/dusk.md:595
#: ./docs/9.x/dusk.md:679
#: ./docs/10.x/dusk.md:701
#: ./docs/11.x/dusk.md:756
#: ./docs/master/dusk.md:752
msgctxt "P"
msgid "All modifier keys such as `{command}` are wrapped in `{}` characters, and match the constants defined in the `Facebook\\WebDriver\\WebDriverKeys` class, which can be [found on GitHub](https://github.com/php-webdriver/php-webdriver/blob/master/lib/WebDriverKeys.php)."
msgstr ""

#: ./docs/8.x/dusk.md:597
#: ./docs/9.x/dusk.md:681
#: ./docs/10.x/dusk.md:763
#: ./docs/11.x/dusk.md:818
#: ./docs/master/dusk.md:814
#~ msgctxt "P"
#~ msgid "<a name=\"using-the-mouse\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:598
#: ./docs/9.x/dusk.md:682
msgctxt "H3"
msgid "Using The Mouse"
msgstr ""

#: ./docs/8.x/dusk.md:600
#: ./docs/9.x/dusk.md:684
#: ./docs/10.x/dusk.md:766
#: ./docs/11.x/dusk.md:821
#: ./docs/master/dusk.md:817
#~ msgctxt "P"
#~ msgid "<a name=\"clicking-on-elements\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:601
#: ./docs/9.x/dusk.md:685
msgctxt "H4"
msgid "Clicking On Elements"
msgstr ""

#: ./docs/8.x/dusk.md:603
#: ./docs/9.x/dusk.md:687
#: ./docs/10.x/dusk.md:769
#: ./docs/11.x/dusk.md:824
#: ./docs/master/dusk.md:820
msgctxt "P"
msgid "The `click` method may be used to click on an element matching the given CSS or Dusk selector:"
msgstr ""

#: ./docs/8.x/dusk.md:605
#: ./docs/9.x/dusk.md:689
#: ./docs/10.x/dusk.md:771
#: ./docs/11.x/dusk.md:826
#: ./docs/master/dusk.md:822
msgctxt "CODE"
msgid "$browser->click('.selector');"
msgstr ""

#: ./docs/8.x/dusk.md:607
#: ./docs/9.x/dusk.md:691
#: ./docs/10.x/dusk.md:773
#: ./docs/11.x/dusk.md:828
#: ./docs/master/dusk.md:824
msgctxt "P"
msgid "The `clickAtXPath` method may be used to click on an element matching the given XPath expression:"
msgstr ""

#: ./docs/8.x/dusk.md:609
#: ./docs/9.x/dusk.md:693
#: ./docs/10.x/dusk.md:775
#: ./docs/11.x/dusk.md:830
#: ./docs/master/dusk.md:826
msgctxt "CODE"
msgid "$browser->clickAtXPath('//div[@class = \"selector\"]');"
msgstr ""

#: ./docs/8.x/dusk.md:611
#: ./docs/9.x/dusk.md:695
#: ./docs/10.x/dusk.md:777
#: ./docs/11.x/dusk.md:832
#: ./docs/master/dusk.md:828
msgctxt "P"
msgid "The `clickAtPoint` method may be used to click on the topmost element at a given pair of coordinates relative to the viewable area of the browser:"
msgstr ""

#: ./docs/8.x/dusk.md:613
#: ./docs/9.x/dusk.md:697
#: ./docs/10.x/dusk.md:779
#: ./docs/11.x/dusk.md:834
#: ./docs/master/dusk.md:830
msgctxt "CODE"
msgid "$browser->clickAtPoint($x = 0, $y = 0);"
msgstr ""

#: ./docs/8.x/dusk.md:615
#: ./docs/9.x/dusk.md:699
#: ./docs/10.x/dusk.md:781
#: ./docs/11.x/dusk.md:836
#: ./docs/master/dusk.md:832
msgctxt "P"
msgid "The `doubleClick` method may be used to simulate the double click of a mouse:"
msgstr ""

#: ./docs/8.x/dusk.md:617
#: ./docs/9.x/dusk.md:701
msgctxt "CODE"
msgid "$browser->doubleClick();"
msgstr ""

#: ./docs/8.x/dusk.md:619
#: ./docs/9.x/dusk.md:703
#: ./docs/10.x/dusk.md:787
#: ./docs/11.x/dusk.md:842
#: ./docs/master/dusk.md:838
msgctxt "P"
msgid "The `rightClick` method may be used to simulate the right click of a mouse:"
msgstr ""

#: ./docs/8.x/dusk.md:621
#: ./docs/9.x/dusk.md:705
#: ./docs/10.x/dusk.md:789
#: ./docs/11.x/dusk.md:844
#: ./docs/master/dusk.md:840
msgctxt "CODE"
msgid "$browser->rightClick();\n\n"
"$browser->rightClick('.selector');"
msgstr ""

#: ./docs/8.x/dusk.md:625
#: ./docs/9.x/dusk.md:709
#: ./docs/10.x/dusk.md:793
#: ./docs/11.x/dusk.md:848
#: ./docs/master/dusk.md:844
msgctxt "P"
msgid "The `clickAndHold` method may be used to simulate a mouse button being clicked and held down. A subsequent call to the `releaseMouse` method will undo this behavior and release the mouse button:"
msgstr ""

#: ./docs/8.x/dusk.md:627
#: ./docs/9.x/dusk.md:711
msgctxt "CODE"
msgid "$browser->clickAndHold()\n"
"        ->pause(1000)\n"
"        ->releaseMouse();"
msgstr ""

#: ./docs/8.x/dusk.md:631
#: ./docs/9.x/dusk.md:715
#: ./docs/10.x/dusk.md:807
#: ./docs/11.x/dusk.md:862
#: ./docs/master/dusk.md:858
#~ msgctxt "P"
#~ msgid "<a name=\"mouseover\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:632
#: ./docs/9.x/dusk.md:716
#: ./docs/10.x/dusk.md:808
#: ./docs/11.x/dusk.md:863
#: ./docs/master/dusk.md:859
msgctxt "H4"
msgid "Mouseover"
msgstr ""

#: ./docs/8.x/dusk.md:634
#: ./docs/9.x/dusk.md:718
#: ./docs/10.x/dusk.md:810
#: ./docs/11.x/dusk.md:865
#: ./docs/master/dusk.md:861
msgctxt "P"
msgid "The `mouseover` method may be used when you need to move the mouse over an element matching the given CSS or Dusk selector:"
msgstr ""

#: ./docs/8.x/dusk.md:636
#: ./docs/9.x/dusk.md:720
#: ./docs/10.x/dusk.md:812
#: ./docs/11.x/dusk.md:867
#: ./docs/master/dusk.md:863
msgctxt "CODE"
msgid "$browser->mouseover('.selector');"
msgstr ""

#: ./docs/8.x/dusk.md:638
#: ./docs/9.x/dusk.md:722
#: ./docs/10.x/dusk.md:814
#: ./docs/11.x/dusk.md:869
#: ./docs/master/dusk.md:865
#~ msgctxt "P"
#~ msgid "<a name=\"drag-drop\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:639
#: ./docs/9.x/dusk.md:723
msgctxt "H4"
msgid "Drag & Drop"
msgstr ""

#: ./docs/9.x/dusk.md:639
#: ./docs/10.x/dusk.md:661
#: ./docs/11.x/dusk.md:716
#: ./docs/master/dusk.md:712
msgctxt "P"
msgid "The `press` method may be used to click a button element on the page. The argument given to the `press` method may be either the display text of the button or a CSS / Dusk selector:"
msgstr ""

#: ./docs/8.x/dusk.md:641
#: ./docs/9.x/dusk.md:725
#: ./docs/10.x/dusk.md:817
#: ./docs/11.x/dusk.md:872
#: ./docs/master/dusk.md:868
msgctxt "P"
msgid "The `drag` method may be used to drag an element matching the given selector to another element:"
msgstr ""

#: ./docs/8.x/dusk.md:643
#: ./docs/9.x/dusk.md:727
#: ./docs/10.x/dusk.md:819
#: ./docs/11.x/dusk.md:874
#: ./docs/master/dusk.md:870
msgctxt "CODE"
msgid "$browser->drag('.from-selector', '.to-selector');"
msgstr ""

#: ./docs/9.x/dusk.md:643
#: ./docs/10.x/dusk.md:665
#: ./docs/11.x/dusk.md:720
#: ./docs/master/dusk.md:716
msgctxt "P"
msgid "When submitting forms, many applications disable the form's submission button after it is pressed and then re-enable the button when the form submission's HTTP request is complete. To press a button and wait for the button to be re-enabled, you may use the `pressAndWaitFor` method:"
msgstr ""

#: ./docs/8.x/dusk.md:645
#: ./docs/9.x/dusk.md:729
#: ./docs/10.x/dusk.md:821
#: ./docs/11.x/dusk.md:876
#: ./docs/master/dusk.md:872
msgctxt "P"
msgid "Or, you may drag an element in a single direction:"
msgstr ""

#: ./docs/8.x/dusk.md:647
#: ./docs/9.x/dusk.md:731
#: ./docs/10.x/dusk.md:823
#: ./docs/11.x/dusk.md:878
#: ./docs/master/dusk.md:874
msgctxt "CODE"
msgid "$browser->dragLeft('.selector', $pixels = 10);\n"
"$browser->dragRight('.selector', $pixels = 10);\n"
"$browser->dragUp('.selector', $pixels = 10);\n"
"$browser->dragDown('.selector', $pixels = 10);"
msgstr ""

#: ./docs/8.x/dusk.md:652
#: ./docs/9.x/dusk.md:736
#: ./docs/10.x/dusk.md:828
#: ./docs/11.x/dusk.md:883
#: ./docs/master/dusk.md:879
msgctxt "P"
msgid "Finally, you may drag an element by a given offset:"
msgstr ""

#: ./docs/8.x/dusk.md:654
#: ./docs/9.x/dusk.md:738
#: ./docs/10.x/dusk.md:830
#: ./docs/11.x/dusk.md:885
#: ./docs/master/dusk.md:881
msgctxt "CODE"
msgid "$browser->dragOffset('.selector', $x = 10, $y = 10);"
msgstr ""

#: ./docs/8.x/dusk.md:656
#: ./docs/9.x/dusk.md:740
#: ./docs/10.x/dusk.md:832
#: ./docs/11.x/dusk.md:887
#: ./docs/master/dusk.md:883
#~ msgctxt "P"
#~ msgid "<a name=\"javascript-dialogs\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:657
#: ./docs/9.x/dusk.md:741
#: ./docs/10.x/dusk.md:833
#: ./docs/11.x/dusk.md:888
#: ./docs/master/dusk.md:884
msgctxt "H3"
msgid "JavaScript Dialogs"
msgstr ""

#: ./docs/8.x/dusk.md:659
#: ./docs/9.x/dusk.md:743
#: ./docs/10.x/dusk.md:835
#: ./docs/11.x/dusk.md:890
#: ./docs/master/dusk.md:886
msgctxt "P"
msgid "Dusk provides various methods to interact with JavaScript Dialogs. For example, you may use the `waitForDialog` method to wait for a JavaScript dialog to appear. This method accepts an optional argument indicating how many seconds to wait for the dialog to appear:"
msgstr ""

#: ./docs/8.x/dusk.md:661
#: ./docs/9.x/dusk.md:745
#: ./docs/10.x/dusk.md:837
#: ./docs/11.x/dusk.md:892
#: ./docs/master/dusk.md:888
msgctxt "CODE"
msgid "$browser->waitForDialog($seconds = null);"
msgstr ""

#: ./docs/8.x/dusk.md:663
#: ./docs/9.x/dusk.md:747
#: ./docs/10.x/dusk.md:839
#: ./docs/11.x/dusk.md:894
#: ./docs/master/dusk.md:890
msgctxt "P"
msgid "The `assertDialogOpened` method may be used to assert that a dialog has been displayed and contains the given message:"
msgstr ""

#: ./docs/8.x/dusk.md:665
#: ./docs/9.x/dusk.md:749
#: ./docs/10.x/dusk.md:841
#: ./docs/11.x/dusk.md:896
#: ./docs/master/dusk.md:892
msgctxt "CODE"
msgid "$browser->assertDialogOpened('Dialog message');"
msgstr ""

#: ./docs/8.x/dusk.md:667
#: ./docs/9.x/dusk.md:751
#: ./docs/10.x/dusk.md:843
#: ./docs/11.x/dusk.md:898
#: ./docs/master/dusk.md:894
msgctxt "P"
msgid "If the JavaScript dialog contains a prompt, you may use the `typeInDialog` method to type a value into the prompt:"
msgstr ""

#: ./docs/8.x/dusk.md:669
#: ./docs/9.x/dusk.md:753
#: ./docs/10.x/dusk.md:845
#: ./docs/11.x/dusk.md:900
#: ./docs/master/dusk.md:896
msgctxt "CODE"
msgid "$browser->typeInDialog('Hello World');"
msgstr ""

#: ./docs/8.x/dusk.md:671
#: ./docs/9.x/dusk.md:755
#: ./docs/10.x/dusk.md:847
#: ./docs/11.x/dusk.md:902
#: ./docs/master/dusk.md:898
msgctxt "P"
msgid "To close an open JavaScript dialog by clicking the \"OK\" button, you may invoke the `acceptDialog` method:"
msgstr ""

#: ./docs/8.x/dusk.md:673
#: ./docs/9.x/dusk.md:757
#: ./docs/10.x/dusk.md:849
#: ./docs/11.x/dusk.md:904
#: ./docs/master/dusk.md:900
msgctxt "CODE"
msgid "$browser->acceptDialog();"
msgstr ""

#: ./docs/8.x/dusk.md:675
#: ./docs/9.x/dusk.md:759
#: ./docs/10.x/dusk.md:851
#: ./docs/11.x/dusk.md:906
#: ./docs/master/dusk.md:902
msgctxt "P"
msgid "To close an open JavaScript dialog by clicking the \"Cancel\" button, you may invoke the `dismissDialog` method:"
msgstr ""

#: ./docs/8.x/dusk.md:677
#: ./docs/9.x/dusk.md:761
#: ./docs/10.x/dusk.md:853
#: ./docs/11.x/dusk.md:908
#: ./docs/master/dusk.md:904
msgctxt "CODE"
msgid "$browser->dismissDialog();"
msgstr ""

#: ./docs/8.x/dusk.md:679
#: ./docs/9.x/dusk.md:763
#: ./docs/10.x/dusk.md:867
#: ./docs/11.x/dusk.md:922
#: ./docs/master/dusk.md:918
#~ msgctxt "P"
#~ msgid "<a name=\"scoping-selectors\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:680
#: ./docs/9.x/dusk.md:764
#: ./docs/10.x/dusk.md:868
#: ./docs/11.x/dusk.md:923
#: ./docs/master/dusk.md:919
msgctxt "H3"
msgid "Scoping Selectors"
msgstr ""

#: ./docs/8.x/dusk.md:682
#: ./docs/9.x/dusk.md:766
#: ./docs/10.x/dusk.md:870
#: ./docs/11.x/dusk.md:925
#: ./docs/master/dusk.md:921
msgctxt "P"
msgid "Sometimes you may wish to perform several operations while scoping all of the operations within a given selector. For example, you may wish to assert that some text exists only within a table and then click a button within that table. You may use the `with` method to accomplish this. All operations performed within the closure given to the `with` method will be scoped to the original selector:"
msgstr ""

#: ./docs/8.x/dusk.md:684
#: ./docs/9.x/dusk.md:768
msgctxt "CODE"
msgid "$browser->with('.table', function ($table) {\n"
"    $table->assertSee('Hello World')\n"
"          ->clickLink('Delete');\n"
"});"
msgstr ""

#: ./docs/8.x/dusk.md:689
#: ./docs/9.x/dusk.md:773
#: ./docs/10.x/dusk.md:877
#: ./docs/11.x/dusk.md:932
#: ./docs/master/dusk.md:928
msgctxt "P"
msgid "You may occasionally need to execute assertions outside of the current scope. You may use the `elsewhere` and `elsewhereWhenAvailable` methods to accomplish this:"
msgstr ""

#: ./docs/10.x/dusk.md:690
#: ./docs/11.x/dusk.md:745
#: ./docs/master/dusk.md:741
msgctxt "H3"
msgid "Using the Keyboard"
msgstr ""

#: ./docs/8.x/dusk.md:691
#: ./docs/9.x/dusk.md:775
msgctxt "CODE"
msgid " $browser->with('.table', function ($table) {\n"
"    // Current scope is `body .table`...\n\n"
"    $browser->elsewhere('.page-title', function ($title) {\n"
"        // Current scope is `body .page-title`...\n"
"        $title->assertSee('Hello World');\n"
"    });\n\n"
"    $browser->elsewhereWhenAvailable('.page-title', function ($title) {\n"
"        // Current scope is `body .page-title`...\n"
"        $title->assertSee('Hello World');\n"
"    });\n"
" });"
msgstr ""

#: ./docs/10.x/dusk.md:703
#: ./docs/11.x/dusk.md:758
#: ./docs/master/dusk.md:754
#~ msgctxt "P"
#~ msgid "<a name=\"fluent-keyboard-interactions\"></a>"
#~ msgstr ""

#: ./docs/10.x/dusk.md:704
#: ./docs/11.x/dusk.md:759
#: ./docs/master/dusk.md:755
msgctxt "H4"
msgid "Fluent Keyboard Interactions"
msgstr ""

#: ./docs/8.x/dusk.md:705
#: ./docs/9.x/dusk.md:789
#: ./docs/10.x/dusk.md:893
#: ./docs/11.x/dusk.md:948
#: ./docs/master/dusk.md:944
#~ msgctxt "P"
#~ msgid "<a name=\"waiting-for-elements\"></a>"
#~ msgstr ""

#: ./docs/10.x/dusk.md:706
#: ./docs/11.x/dusk.md:761
#: ./docs/master/dusk.md:757
msgctxt "P"
msgid "Dusk also provides a `withKeyboard` method, allowing you to fluently perform complex keyboard interactions via the `Laravel\\Dusk\\Keyboard` class. The `Keyboard` class provides `press`, `release`, `type`, and `pause` methods:"
msgstr ""

#: ./docs/8.x/dusk.md:706
#: ./docs/9.x/dusk.md:790
msgctxt "H3"
msgid "Waiting For Elements"
msgstr ""

#: ./docs/10.x/dusk.md:708
#: ./docs/11.x/dusk.md:763
#: ./docs/master/dusk.md:759
msgctxt "CODE"
msgid "use Laravel\\Dusk\\Keyboard;\n\n"
"$browser->withKeyboard(function (Keyboard $keyboard) {\n"
"    $keyboard->press('c')\n"
"        ->pause(1000)\n"
"        ->release('c')\n"
"        ->type(['c', 'e', 'o']);\n"
"});"
msgstr ""

#: ./docs/8.x/dusk.md:708
#: ./docs/9.x/dusk.md:792
#: ./docs/10.x/dusk.md:896
#: ./docs/11.x/dusk.md:951
#: ./docs/master/dusk.md:947
msgctxt "P"
msgid "When testing applications that use JavaScript extensively, it often becomes necessary to \"wait\" for certain elements or data to be available before proceeding with a test. Dusk makes this a cinch. Using a variety of methods, you may wait for elements to become visible on the page or even wait until a given JavaScript expression evaluates to `true`."
msgstr ""

#: ./docs/8.x/dusk.md:710
#: ./docs/9.x/dusk.md:794
#: ./docs/10.x/dusk.md:898
#: ./docs/11.x/dusk.md:953
#: ./docs/master/dusk.md:949
#~ msgctxt "P"
#~ msgid "<a name=\"waiting\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:711
#: ./docs/9.x/dusk.md:795
#: ./docs/10.x/dusk.md:899
#: ./docs/11.x/dusk.md:954
#: ./docs/master/dusk.md:950
msgctxt "H4"
msgid "Waiting"
msgstr ""

#: ./docs/8.x/dusk.md:713
#: ./docs/9.x/dusk.md:797
#: ./docs/10.x/dusk.md:901
#: ./docs/11.x/dusk.md:956
#: ./docs/master/dusk.md:952
msgctxt "P"
msgid "If you just need to pause the test for a given number of milliseconds, use the `pause` method:"
msgstr ""

#: ./docs/8.x/dusk.md:715
#: ./docs/9.x/dusk.md:799
#: ./docs/10.x/dusk.md:903
#: ./docs/11.x/dusk.md:958
#: ./docs/master/dusk.md:954
msgctxt "CODE"
msgid "$browser->pause(1000);"
msgstr ""

#: ./docs/10.x/dusk.md:717
#: ./docs/11.x/dusk.md:772
#: ./docs/master/dusk.md:768
#~ msgctxt "P"
#~ msgid "<a name=\"keyboard-macros\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:717
#: ./docs/9.x/dusk.md:809
#: ./docs/10.x/dusk.md:913
#: ./docs/11.x/dusk.md:968
#: ./docs/master/dusk.md:964
#~ msgctxt "P"
#~ msgid "<a name=\"waiting-for-selectors\"></a>"
#~ msgstr ""

#: ./docs/10.x/dusk.md:718
#: ./docs/11.x/dusk.md:773
#: ./docs/master/dusk.md:769
msgctxt "H4"
msgid "Keyboard Macros"
msgstr ""

#: ./docs/8.x/dusk.md:718
#: ./docs/9.x/dusk.md:810
msgctxt "H4"
msgid "Waiting For Selectors"
msgstr ""

#: ./docs/10.x/dusk.md:720
#: ./docs/11.x/dusk.md:775
#: ./docs/master/dusk.md:771
msgctxt "P"
msgid "If you would like to define custom keyboard interactions that you can easily re-use throughout your test suite, you may use the `macro` method provided by the `Keyboard` class. Typically, you should call this method from a [service provider's](/docs/{{version}}/providers) `boot` method:"
msgstr ""

#: ./docs/8.x/dusk.md:720
#: ./docs/9.x/dusk.md:812
#: ./docs/10.x/dusk.md:916
#: ./docs/11.x/dusk.md:971
#: ./docs/master/dusk.md:967
msgctxt "P"
msgid "The `waitFor` method may be used to pause the execution of the test until the element matching the given CSS or Dusk selector is displayed on the page. By default, this will pause the test for a maximum of five seconds before throwing an exception. If necessary, you may pass a custom timeout threshold as the second argument to the method:"
msgstr ""

#: ./docs/10.x/dusk.md:722
#: ./docs/11.x/dusk.md:777
#: ./docs/master/dusk.md:773
msgctxt "CODE"
msgid "<?php\n\n"
"namespace App\\Providers;\n\n"
"use Facebook\\WebDriver\\WebDriverKeys;\n"
"use Illuminate\\Support\\ServiceProvider;\n"
"use Laravel\\Dusk\\Keyboard;\n"
"use Laravel\\Dusk\\OperatingSystem;\n\n"
"class DuskServiceProvider extends ServiceProvider\n"
"{\n"
"    /**\n"
"     * Register Dusk's browser macros.\n"
"     */\n"
"    public function boot(): void\n"
"    {\n"
"        Keyboard::macro('copy', function (string $element = null) {\n"
"            $this->type([\n"
"                OperatingSystem::onMac() ? WebDriverKeys::META : WebDriverKeys::CONTROL, 'c',\n"
"            ]);\n\n"
"            return $this;\n"
"        });\n\n"
"        Keyboard::macro('paste', function (string $element = null) {\n"
"            $this->type([\n"
"                OperatingSystem::onMac() ? WebDriverKeys::META : WebDriverKeys::CONTROL, 'v',\n"
"            ]);\n\n"
"            return $this;\n"
"        });\n"
"    }\n"
"}"
msgstr ""

#: ./docs/8.x/dusk.md:722
#: ./docs/9.x/dusk.md:814
#: ./docs/10.x/dusk.md:918
#: ./docs/11.x/dusk.md:973
#: ./docs/master/dusk.md:969
msgctxt "CODE"
msgid "// Wait a maximum of five seconds for the selector...\n"
"$browser->waitFor('.selector');\n\n"
"// Wait a maximum of one second for the selector...\n"
"$browser->waitFor('.selector', 1);"
msgstr ""

#: ./docs/8.x/dusk.md:728
#: ./docs/9.x/dusk.md:820
#: ./docs/10.x/dusk.md:924
#: ./docs/11.x/dusk.md:979
#: ./docs/master/dusk.md:975
msgctxt "P"
msgid "You may also wait until the element matching the given selector contains the given text:"
msgstr ""

#: ./docs/8.x/dusk.md:730
#: ./docs/9.x/dusk.md:822
#: ./docs/10.x/dusk.md:926
#: ./docs/11.x/dusk.md:981
#: ./docs/master/dusk.md:977
msgctxt "CODE"
msgid "// Wait a maximum of five seconds for the selector to contain the given text...\n"
"$browser->waitForTextIn('.selector', 'Hello World');\n\n"
"// Wait a maximum of one second for the selector to contain the given text...\n"
"$browser->waitForTextIn('.selector', 'Hello World', 1);"
msgstr ""

#: ./docs/8.x/dusk.md:736
#: ./docs/9.x/dusk.md:828
#: ./docs/10.x/dusk.md:932
#: ./docs/11.x/dusk.md:987
#: ./docs/master/dusk.md:983
msgctxt "P"
msgid "You may also wait until the element matching the given selector is missing from the page:"
msgstr ""

#: ./docs/8.x/dusk.md:738
#: ./docs/9.x/dusk.md:830
#: ./docs/10.x/dusk.md:934
#: ./docs/11.x/dusk.md:989
#: ./docs/master/dusk.md:985
msgctxt "CODE"
msgid "// Wait a maximum of five seconds until the selector is missing...\n"
"$browser->waitUntilMissing('.selector');\n\n"
"// Wait a maximum of one second until the selector is missing...\n"
"$browser->waitUntilMissing('.selector', 1);"
msgstr ""

#: ./docs/8.x/dusk.md:744
#: ./docs/9.x/dusk.md:836
#: ./docs/10.x/dusk.md:940
#: ./docs/11.x/dusk.md:995
#: ./docs/master/dusk.md:991
msgctxt "P"
msgid "Or, you may wait until the element matching the given selector is enabled or disabled:"
msgstr ""

#: ./docs/8.x/dusk.md:746
#: ./docs/9.x/dusk.md:838
#: ./docs/10.x/dusk.md:942
#: ./docs/11.x/dusk.md:997
#: ./docs/master/dusk.md:993
msgctxt "CODE"
msgid "// Wait a maximum of five seconds until the selector is enabled...\n"
"$browser->waitUntilEnabled('.selector');\n\n"
"// Wait a maximum of one second until the selector is enabled...\n"
"$browser->waitUntilEnabled('.selector', 1);\n\n"
"// Wait a maximum of five seconds until the selector is disabled...\n"
"$browser->waitUntilDisabled('.selector');\n\n"
"// Wait a maximum of one second until the selector is disabled...\n"
"$browser->waitUntilDisabled('.selector', 1);"
msgstr ""

#: ./docs/10.x/dusk.md:756
#: ./docs/11.x/dusk.md:811
#: ./docs/master/dusk.md:807
msgctxt "P"
msgid "The `macro` function accepts a name as its first argument and a closure as its second. The macro's closure will be executed when calling the macro as a method on a `Keyboard` instance:"
msgstr ""

#: ./docs/10.x/dusk.md:758
#: ./docs/11.x/dusk.md:813
#: ./docs/master/dusk.md:809
msgctxt "CODE"
msgid "$browser->click('@textarea')\n"
"    ->withKeyboard(fn (Keyboard $keyboard) => $keyboard->copy())\n"
"    ->click('@another-textarea')\n"
"    ->withKeyboard(fn (Keyboard $keyboard) => $keyboard->paste());"
msgstr ""

#: ./docs/8.x/dusk.md:758
#: ./docs/9.x/dusk.md:850
#: ./docs/10.x/dusk.md:954
#: ./docs/11.x/dusk.md:1009
#: ./docs/master/dusk.md:1005
#~ msgctxt "P"
#~ msgid "<a name=\"scoping-selectors-when-available\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:759
#: ./docs/9.x/dusk.md:851
#: ./docs/10.x/dusk.md:955
#: ./docs/11.x/dusk.md:1010
#: ./docs/master/dusk.md:1006
msgctxt "H4"
msgid "Scoping Selectors When Available"
msgstr ""

#: ./docs/8.x/dusk.md:761
#: ./docs/9.x/dusk.md:853
#: ./docs/10.x/dusk.md:957
#: ./docs/11.x/dusk.md:1012
#: ./docs/master/dusk.md:1008
msgctxt "P"
msgid "Occasionally, you may wish to wait for an element to appear that matches a given selector and then interact with the element. For example, you may wish to wait until a modal window is available and then press the \"OK\" button within the modal. The `whenAvailable` method may be used to accomplish this. All element operations performed within the given closure will be scoped to the original selector:"
msgstr ""

#: ./docs/8.x/dusk.md:763
#: ./docs/9.x/dusk.md:855
msgctxt "CODE"
msgid "$browser->whenAvailable('.modal', function ($modal) {\n"
"    $modal->assertSee('Hello World')\n"
"          ->press('OK');\n"
"});"
msgstr ""

#: ./docs/10.x/dusk.md:764
#: ./docs/11.x/dusk.md:819
#: ./docs/master/dusk.md:815
msgctxt "H3"
msgid "Using the Mouse"
msgstr ""

#: ./docs/10.x/dusk.md:767
#: ./docs/11.x/dusk.md:822
#: ./docs/master/dusk.md:818
msgctxt "H4"
msgid "Clicking on Elements"
msgstr ""

#: ./docs/8.x/dusk.md:768
#: ./docs/9.x/dusk.md:860
#: ./docs/10.x/dusk.md:964
#: ./docs/11.x/dusk.md:1019
#: ./docs/master/dusk.md:1015
#~ msgctxt "P"
#~ msgid "<a name=\"waiting-for-text\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:769
#: ./docs/9.x/dusk.md:861
msgctxt "H4"
msgid "Waiting For Text"
msgstr ""

#: ./docs/8.x/dusk.md:771
#: ./docs/9.x/dusk.md:863
#: ./docs/10.x/dusk.md:967
#: ./docs/11.x/dusk.md:1022
#: ./docs/master/dusk.md:1018
msgctxt "P"
msgid "The `waitForText` method may be used to wait until the given text is displayed on the page:"
msgstr ""

#: ./docs/8.x/dusk.md:773
#: ./docs/9.x/dusk.md:865
#: ./docs/10.x/dusk.md:969
#: ./docs/11.x/dusk.md:1024
#: ./docs/master/dusk.md:1020
msgctxt "CODE"
msgid "// Wait a maximum of five seconds for the text...\n"
"$browser->waitForText('Hello World');\n\n"
"// Wait a maximum of one second for the text...\n"
"$browser->waitForText('Hello World', 1);"
msgstr ""

#: ./docs/8.x/dusk.md:779
#: ./docs/9.x/dusk.md:871
#: ./docs/10.x/dusk.md:975
#: ./docs/11.x/dusk.md:1030
#: ./docs/master/dusk.md:1026
msgctxt "P"
msgid "You may use the `waitUntilMissingText` method to wait until the displayed text has been removed from the page:"
msgstr ""

#: ./docs/8.x/dusk.md:781
#: ./docs/9.x/dusk.md:873
#: ./docs/10.x/dusk.md:977
#: ./docs/11.x/dusk.md:1032
#: ./docs/master/dusk.md:1028
msgctxt "CODE"
msgid "// Wait a maximum of five seconds for the text to be removed...\n"
"$browser->waitUntilMissingText('Hello World');\n\n"
"// Wait a maximum of one second for the text to be removed...\n"
"$browser->waitUntilMissingText('Hello World', 1);"
msgstr ""

#: ./docs/10.x/dusk.md:783
#: ./docs/11.x/dusk.md:838
#: ./docs/master/dusk.md:834
msgctxt "CODE"
msgid "$browser->doubleClick();\n\n"
"$browser->doubleClick('.selector');"
msgstr ""

#: ./docs/8.x/dusk.md:787
#: ./docs/9.x/dusk.md:879
#: ./docs/10.x/dusk.md:983
#: ./docs/11.x/dusk.md:1038
#: ./docs/master/dusk.md:1034
#~ msgctxt "P"
#~ msgid "<a name=\"waiting-for-links\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:788
#: ./docs/9.x/dusk.md:880
msgctxt "H4"
msgid "Waiting For Links"
msgstr ""

#: ./docs/8.x/dusk.md:790
#: ./docs/9.x/dusk.md:882
#: ./docs/10.x/dusk.md:986
#: ./docs/11.x/dusk.md:1041
#: ./docs/master/dusk.md:1037
msgctxt "P"
msgid "The `waitForLink` method may be used to wait until the given link text is displayed on the page:"
msgstr ""

#: ./docs/8.x/dusk.md:792
#: ./docs/9.x/dusk.md:884
#: ./docs/10.x/dusk.md:988
#: ./docs/11.x/dusk.md:1043
#: ./docs/master/dusk.md:1039
msgctxt "CODE"
msgid "// Wait a maximum of five seconds for the link...\n"
"$browser->waitForLink('Create');\n\n"
"// Wait a maximum of one second for the link...\n"
"$browser->waitForLink('Create', 1);"
msgstr ""

#: ./docs/10.x/dusk.md:795
#: ./docs/11.x/dusk.md:850
#: ./docs/master/dusk.md:846
msgctxt "CODE"
msgid "$browser->clickAndHold('.selector');\n\n"
"$browser->clickAndHold()\n"
"        ->pause(1000)\n"
"        ->releaseMouse();"
msgstr ""

#: ./docs/8.x/dusk.md:798
#: ./docs/9.x/dusk.md:901
#: ./docs/10.x/dusk.md:1005
#: ./docs/11.x/dusk.md:1060
#: ./docs/master/dusk.md:1056
#~ msgctxt "P"
#~ msgid "<a name=\"waiting-on-the-page-location\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:799
#: ./docs/9.x/dusk.md:902
msgctxt "H4"
msgid "Waiting On The Page Location"
msgstr ""

#: ./docs/10.x/dusk.md:801
#: ./docs/11.x/dusk.md:856
#: ./docs/master/dusk.md:852
msgctxt "P"
msgid "The `controlClick` method may be used to simulate the `ctrl+click` event within the browser:"
msgstr ""

#: ./docs/8.x/dusk.md:801
#: ./docs/9.x/dusk.md:904
#: ./docs/10.x/dusk.md:1008
#: ./docs/11.x/dusk.md:1063
#: ./docs/master/dusk.md:1059
msgctxt "P"
msgid "When making a path assertion such as `$browser->assertPathIs('/home')`, the assertion can fail if `window.location.pathname` is being updated asynchronously. You may use the `waitForLocation` method to wait for the location to be a given value:"
msgstr ""

#: ./docs/9.x/dusk.md:801
#: ./docs/10.x/dusk.md:905
#: ./docs/11.x/dusk.md:960
#: ./docs/master/dusk.md:956
msgctxt "P"
msgid "If you need to pause the test only if a given condition is `true`, use the `pauseIf` method:"
msgstr ""

#: ./docs/10.x/dusk.md:803
#: ./docs/11.x/dusk.md:858
#: ./docs/master/dusk.md:854
msgctxt "CODE"
msgid "$browser->controlClick();\n\n"
"$browser->controlClick('.selector');"
msgstr ""

#: ./docs/8.x/dusk.md:803
#: ./docs/9.x/dusk.md:906
#: ./docs/10.x/dusk.md:1010
#: ./docs/11.x/dusk.md:1065
#: ./docs/master/dusk.md:1061
msgctxt "CODE"
msgid "$browser->waitForLocation('/secret');"
msgstr ""

#: ./docs/9.x/dusk.md:803
#: ./docs/10.x/dusk.md:907
#: ./docs/11.x/dusk.md:962
#: ./docs/master/dusk.md:958
msgctxt "CODE"
msgid "$browser->pauseIf(App::environment('production'), 1000);"
msgstr ""

#: ./docs/8.x/dusk.md:805
#: ./docs/9.x/dusk.md:908
#: ./docs/10.x/dusk.md:1012
#: ./docs/11.x/dusk.md:1067
#: ./docs/master/dusk.md:1063
msgctxt "P"
msgid "The `waitForLocation` method can also be used to wait for the current window location to be a fully qualified URL:"
msgstr ""

#: ./docs/9.x/dusk.md:805
#: ./docs/10.x/dusk.md:909
#: ./docs/11.x/dusk.md:964
#: ./docs/master/dusk.md:960
msgctxt "P"
msgid "Likewise, if you need to pause the test unless a given condition is `true`, you may use the `pauseUnless` method:"
msgstr ""

#: ./docs/8.x/dusk.md:807
#: ./docs/9.x/dusk.md:910
#: ./docs/10.x/dusk.md:1014
#: ./docs/11.x/dusk.md:1069
#: ./docs/master/dusk.md:1065
msgctxt "CODE"
msgid "$browser->waitForLocation('https://example.com/path');"
msgstr ""

#: ./docs/9.x/dusk.md:807
#: ./docs/10.x/dusk.md:911
#: ./docs/11.x/dusk.md:966
#: ./docs/master/dusk.md:962
msgctxt "CODE"
msgid "$browser->pauseUnless(App::environment('testing'), 1000);"
msgstr ""

#: ./docs/8.x/dusk.md:809
#: ./docs/9.x/dusk.md:912
#: ./docs/10.x/dusk.md:1016
#: ./docs/11.x/dusk.md:1071
#: ./docs/master/dusk.md:1067
msgctxt "P"
msgid "You may also wait for a [named route's](/docs/{{version}}/routing#named-routes) location:"
msgstr ""

#: ./docs/8.x/dusk.md:811
#: ./docs/9.x/dusk.md:914
#: ./docs/10.x/dusk.md:1018
#: ./docs/11.x/dusk.md:1073
#: ./docs/master/dusk.md:1069
msgctxt "CODE"
msgid "$browser->waitForRoute($routeName, $parameters);"
msgstr ""

#: ./docs/8.x/dusk.md:813
#: ./docs/9.x/dusk.md:916
#: ./docs/10.x/dusk.md:1020
#: ./docs/11.x/dusk.md:1075
#: ./docs/master/dusk.md:1071
#~ msgctxt "P"
#~ msgid "<a name=\"waiting-for-page-reloads\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:814
#: ./docs/10.x/dusk.md:1021
#: ./docs/11.x/dusk.md:1076
#: ./docs/master/dusk.md:1072
msgctxt "H4"
msgid "Waiting for Page Reloads"
msgstr ""

#: ./docs/10.x/dusk.md:815
#: ./docs/11.x/dusk.md:870
#: ./docs/master/dusk.md:866
msgctxt "H4"
msgid "Drag and Drop"
msgstr ""

#: ./docs/8.x/dusk.md:816
#: ./docs/9.x/dusk.md:919
#: ./docs/10.x/dusk.md:1023
#: ./docs/11.x/dusk.md:1078
#: ./docs/master/dusk.md:1074
msgctxt "P"
msgid "If you need to wait for a page to reload after performing an action, use the `waitForReload` method:"
msgstr ""

#: ./docs/8.x/dusk.md:818
#: ./docs/9.x/dusk.md:921
#: ./docs/10.x/dusk.md:1025
#: ./docs/11.x/dusk.md:1080
#: ./docs/master/dusk.md:1076
msgctxt "CODE"
msgid "use Laravel\\Dusk\\Browser;\n\n"
"$browser->waitForReload(function (Browser $browser) {\n"
"    $browser->press('Submit');\n"
"})\n"
"->assertSee('Success!');"
msgstr ""

#: ./docs/8.x/dusk.md:825
#: ./docs/9.x/dusk.md:928
#: ./docs/10.x/dusk.md:1032
#: ./docs/11.x/dusk.md:1087
#: ./docs/master/dusk.md:1083
msgctxt "P"
msgid "Since the need to wait for the page to reload typically occurs after clicking a button, you may use the `clickAndWaitForReload` method for convenience:"
msgstr ""

#: ./docs/8.x/dusk.md:827
#: ./docs/9.x/dusk.md:930
#: ./docs/10.x/dusk.md:1034
#: ./docs/11.x/dusk.md:1089
#: ./docs/master/dusk.md:1085
msgctxt "CODE"
msgid "$browser->clickAndWaitForReload('.selector')\n"
"        ->assertSee('something');"
msgstr ""

#: ./docs/8.x/dusk.md:830
#: ./docs/9.x/dusk.md:933
#: ./docs/10.x/dusk.md:1037
#: ./docs/11.x/dusk.md:1092
#: ./docs/master/dusk.md:1088
#~ msgctxt "P"
#~ msgid "<a name=\"waiting-on-javascript-expressions\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:831
#: ./docs/9.x/dusk.md:934
msgctxt "H4"
msgid "Waiting On JavaScript Expressions"
msgstr ""

#: ./docs/8.x/dusk.md:833
#: ./docs/9.x/dusk.md:936
#: ./docs/10.x/dusk.md:1040
#: ./docs/11.x/dusk.md:1095
#: ./docs/master/dusk.md:1091
msgctxt "P"
msgid "Sometimes you may wish to pause the execution of a test until a given JavaScript expression evaluates to `true`. You may easily accomplish this using the `waitUntil` method. When passing an expression to this method, you do not need to include the `return` keyword or an ending semi-colon:"
msgstr ""

#: ./docs/8.x/dusk.md:835
#: ./docs/9.x/dusk.md:938
#: ./docs/10.x/dusk.md:1042
#: ./docs/11.x/dusk.md:1097
#: ./docs/master/dusk.md:1093
msgctxt "CODE"
msgid "// Wait a maximum of five seconds for the expression to be true...\n"
"$browser->waitUntil('App.data.servers.length > 0');\n\n"
"// Wait a maximum of one second for the expression to be true...\n"
"$browser->waitUntil('App.data.servers.length > 0', 1);"
msgstr ""

#: ./docs/8.x/dusk.md:841
#: ./docs/9.x/dusk.md:944
#: ./docs/10.x/dusk.md:1048
#: ./docs/11.x/dusk.md:1103
#: ./docs/master/dusk.md:1099
#~ msgctxt "P"
#~ msgid "<a name=\"waiting-on-vue-expressions\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:842
#: ./docs/9.x/dusk.md:945
msgctxt "H4"
msgid "Waiting On Vue Expressions"
msgstr ""

#: ./docs/8.x/dusk.md:844
#: ./docs/9.x/dusk.md:947
#: ./docs/10.x/dusk.md:1051
#: ./docs/11.x/dusk.md:1106
#: ./docs/master/dusk.md:1102
msgctxt "P"
msgid "The `waitUntilVue` and `waitUntilVueIsNot` methods may be used to wait until a [Vue component](https://vuejs.org) attribute has a given value:"
msgstr ""

#: ./docs/8.x/dusk.md:846
#: ./docs/9.x/dusk.md:949
#: ./docs/10.x/dusk.md:1053
#: ./docs/11.x/dusk.md:1108
#: ./docs/master/dusk.md:1104
msgctxt "CODE"
msgid "// Wait until the component attribute contains the given value...\n"
"$browser->waitUntilVue('user.name', 'Taylor', '@user');\n\n"
"// Wait until the component attribute doesn't contain the given value...\n"
"$browser->waitUntilVueIsNot('user.name', null, '@user');"
msgstr ""

#: ./docs/8.x/dusk.md:852
#: ./docs/9.x/dusk.md:981
#: ./docs/10.x/dusk.md:1085
#: ./docs/11.x/dusk.md:1140
#: ./docs/master/dusk.md:1136
#~ msgctxt "P"
#~ msgid "<a name=\"waiting-with-a-callback\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:853
#: ./docs/9.x/dusk.md:982
msgctxt "H4"
msgid "Waiting With A Callback"
msgstr ""

#: ./docs/10.x/dusk.md:855
#: ./docs/11.x/dusk.md:910
#: ./docs/master/dusk.md:906
#~ msgctxt "P"
#~ msgid "<a name=\"interacting-with-iframes\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:855
#: ./docs/9.x/dusk.md:984
#: ./docs/10.x/dusk.md:1088
#: ./docs/11.x/dusk.md:1143
#: ./docs/master/dusk.md:1139
msgctxt "P"
msgid "Many of the \"wait\" methods in Dusk rely on the underlying `waitUsing` method. You may use this method directly to wait for a given closure to return `true`. The `waitUsing` method accepts the maximum number of seconds to wait, the interval at which the closure should be evaluated, the closure, and an optional failure message:"
msgstr ""

#: ./docs/10.x/dusk.md:856
#: ./docs/11.x/dusk.md:911
#: ./docs/master/dusk.md:907
msgctxt "H3"
msgid "Interacting With Inline Frames"
msgstr ""

#: ./docs/8.x/dusk.md:857
#: ./docs/9.x/dusk.md:986
#: ./docs/10.x/dusk.md:1090
#: ./docs/11.x/dusk.md:1145
#: ./docs/master/dusk.md:1141
msgctxt "CODE"
msgid "$browser->waitUsing(10, 1, function () use ($something) {\n"
"    return $something->isReady();\n"
"}, \"Something wasn't ready in time.\");"
msgstr ""

#: ./docs/10.x/dusk.md:858
#: ./docs/11.x/dusk.md:913
#: ./docs/master/dusk.md:909
msgctxt "P"
msgid "If you need to interact with elements within an iframe, you may use the `withinFrame` method. All element interactions that take place within the closure provided to the `withinFrame` method will be scoped to the context of the specified iframe:"
msgstr ""

#: ./docs/10.x/dusk.md:860
#: ./docs/master/dusk.md:911
msgctxt "CODE"
msgid "$browser->withinFrame('#credit-card-details', function ($browser) {\n"
"    $browser->type('input[name=\"cardnumber\"]', '4242424242424242')\n"
"        ->type('input[name=\"exp-date\"]', '12/24')\n"
"        ->type('input[name=\"cvc\"]', '123');\n"
"    })->press('Pay');\n"
"});"
msgstr ""

#: ./docs/8.x/dusk.md:861
#: ./docs/9.x/dusk.md:990
#: ./docs/10.x/dusk.md:1094
#: ./docs/11.x/dusk.md:1149
#: ./docs/master/dusk.md:1145
#~ msgctxt "P"
#~ msgid "<a name=\"scrolling-an-element-into-view\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:862
#: ./docs/9.x/dusk.md:991
msgctxt "H3"
msgid "Scrolling An Element Into View"
msgstr ""

#: ./docs/8.x/dusk.md:864
#: ./docs/9.x/dusk.md:993
#: ./docs/10.x/dusk.md:1097
#: ./docs/11.x/dusk.md:1152
#: ./docs/master/dusk.md:1148
msgctxt "P"
msgid "Sometimes you may not be able to click on an element because it is outside of the viewable area of the browser. The `scrollIntoView` method will scroll the browser window until the element at the given selector is within the view:"
msgstr ""

#: ./docs/8.x/dusk.md:866
#: ./docs/9.x/dusk.md:995
#: ./docs/10.x/dusk.md:1099
#: ./docs/11.x/dusk.md:1154
#: ./docs/master/dusk.md:1150
msgctxt "CODE"
msgid "$browser->scrollIntoView('.selector')\n"
"        ->click('.selector');"
msgstr ""

#: ./docs/8.x/dusk.md:869
#: ./docs/9.x/dusk.md:998
#: ./docs/10.x/dusk.md:1102
#: ./docs/11.x/dusk.md:1157
#: ./docs/master/dusk.md:1153
#~ msgctxt "P"
#~ msgid "<a name=\"available-assertions\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:870
#: ./docs/9.x/dusk.md:999
#: ./docs/10.x/dusk.md:1103
#: ./docs/11.x/dusk.md:1158
#: ./docs/master/dusk.md:1154
msgctxt "H2"
msgid "Available Assertions"
msgstr ""

#: ./docs/10.x/dusk.md:872
#: ./docs/11.x/dusk.md:927
#: ./docs/master/dusk.md:923
msgctxt "CODE"
msgid "$browser->with('.table', function (Browser $table) {\n"
"    $table->assertSee('Hello World')\n"
"          ->clickLink('Delete');\n"
"});"
msgstr ""

#: ./docs/8.x/dusk.md:872
#: ./docs/9.x/dusk.md:1001
#: ./docs/10.x/dusk.md:1105
#: ./docs/11.x/dusk.md:1160
#: ./docs/master/dusk.md:1156
msgctxt "P"
msgid "Dusk provides a variety of assertions that you may make against your application. All of the available assertions are documented in the list below:"
msgstr ""

#: ./docs/10.x/dusk.md:879
#: ./docs/11.x/dusk.md:934
#: ./docs/master/dusk.md:930
msgctxt "CODE"
msgid " $browser->with('.table', function (Browser $table) {\n"
"    // Current scope is `body .table`...\n\n"
"    $browser->elsewhere('.page-title', function (Browser $title) {\n"
"        // Current scope is `body .page-title`...\n"
"        $title->assertSee('Hello World');\n"
"    });\n\n"
"    $browser->elsewhereWhenAvailable('.page-title', function (Browser $title) {\n"
"        // Current scope is `body .page-title`...\n"
"        $title->assertSee('Hello World');\n"
"    });\n"
" });"
msgstr ""

#: ./docs/8.x/dusk.md:887
msgctxt "P"
msgid "[assertTitle](#assert-title)\n"
"[assertTitleContains](#assert-title-contains)\n"
"[assertUrlIs](#assert-url-is)\n"
"[assertSchemeIs](#assert-scheme-is)\n"
"[assertSchemeIsNot](#assert-scheme-is-not)\n"
"[assertHostIs](#assert-host-is)\n"
"[assertHostIsNot](#assert-host-is-not)\n"
"[assertPortIs](#assert-port-is)\n"
"[assertPortIsNot](#assert-port-is-not)\n"
"[assertPathBeginsWith](#assert-path-begins-with)\n"
"[assertPathIs](#assert-path-is)\n"
"[assertPathIsNot](#assert-path-is-not)\n"
"[assertRouteIs](#assert-route-is)\n"
"[assertQueryStringHas](#assert-query-string-has)\n"
"[assertQueryStringMissing](#assert-query-string-missing)\n"
"[assertFragmentIs](#assert-fragment-is)\n"
"[assertFragmentBeginsWith](#assert-fragment-begins-with)\n"
"[assertFragmentIsNot](#assert-fragment-is-not)\n"
"[assertHasCookie](#assert-has-cookie)\n"
"[assertHasPlainCookie](#assert-has-plain-cookie)\n"
"[assertCookieMissing](#assert-cookie-missing)\n"
"[assertPlainCookieMissing](#assert-plain-cookie-missing)\n"
"[assertCookieValue](#assert-cookie-value)\n"
"[assertPlainCookieValue](#assert-plain-cookie-value)\n"
"[assertSee](#assert-see)\n"
"[assertDontSee](#assert-dont-see)\n"
"[assertSeeIn](#assert-see-in)\n"
"[assertDontSeeIn](#assert-dont-see-in)\n"
"[assertSeeAnythingIn](#assert-see-anything-in)\n"
"[assertSeeNothingIn](#assert-see-nothing-in)\n"
"[assertScript](#assert-script)\n"
"[assertSourceHas](#assert-source-has)\n"
"[assertSourceMissing](#assert-source-missing)\n"
"[assertSeeLink](#assert-see-link)\n"
"[assertDontSeeLink](#assert-dont-see-link)\n"
"[assertInputValue](#assert-input-value)\n"
"[assertInputValueIsNot](#assert-input-value-is-not)\n"
"[assertChecked](#assert-checked)\n"
"[assertNotChecked](#assert-not-checked)\n"
"[assertRadioSelected](#assert-radio-selected)\n"
"[assertRadioNotSelected](#assert-radio-not-selected)\n"
"[assertSelected](#assert-selected)\n"
"[assertNotSelected](#assert-not-selected)\n"
"[assertSelectHasOptions](#assert-select-has-options)\n"
"[assertSelectMissingOptions](#assert-select-missing-options)\n"
"[assertSelectHasOption](#assert-select-has-option)\n"
"[assertSelectMissingOption](#assert-select-missing-option)\n"
"[assertValue](#assert-value)\n"
"[assertValueIsNot](#assert-value-is-not)\n"
"[assertAttribute](#assert-attribute)\n"
"[assertAttributeContains](#assert-attribute-contains)\n"
"[assertAriaAttribute](#assert-aria-attribute)\n"
"[assertDataAttribute](#assert-data-attribute)\n"
"[assertVisible](#assert-visible)\n"
"[assertPresent](#assert-present)\n"
"[assertNotPresent](#assert-not-present)\n"
"[assertMissing](#assert-missing)\n"
"[assertInputPresent](#assert-input-present)\n"
"[assertInputMissing](#assert-input-missing)\n"
"[assertDialogOpened](#assert-dialog-opened)\n"
"[assertEnabled](#assert-enabled)\n"
"[assertDisabled](#assert-disabled)\n"
"[assertButtonEnabled](#assert-button-enabled)\n"
"[assertButtonDisabled](#assert-button-disabled)\n"
"[assertFocused](#assert-focused)\n"
"[assertNotFocused](#assert-not-focused)\n"
"[assertAuthenticated](#assert-authenticated)\n"
"[assertGuest](#assert-guest)\n"
"[assertAuthenticatedAs](#assert-authenticated-as)\n"
"[assertVue](#assert-vue)\n"
"[assertVueIsNot](#assert-vue-is-not)\n"
"[assertVueContains](#assert-vue-contains)\n"
"[assertVueDoesNotContain](#assert-vue-does-not-contain)"
msgstr ""

#: ./docs/9.x/dusk.md:890
#: ./docs/10.x/dusk.md:994
#: ./docs/11.x/dusk.md:1049
#: ./docs/master/dusk.md:1045
#~ msgctxt "P"
#~ msgid "<a name=\"waiting-for-inputs\"></a>"
#~ msgstr ""

#: ./docs/9.x/dusk.md:891
msgctxt "H4"
msgid "Waiting For Inputs"
msgstr ""

#: ./docs/9.x/dusk.md:893
#: ./docs/10.x/dusk.md:997
#: ./docs/11.x/dusk.md:1052
#: ./docs/master/dusk.md:1048
msgctxt "P"
msgid "The `waitForInput` method may be used to wait until the given input field is visible on the page:"
msgstr ""

#: ./docs/10.x/dusk.md:894
#: ./docs/11.x/dusk.md:949
#: ./docs/master/dusk.md:945
msgctxt "H3"
msgid "Waiting for Elements"
msgstr ""

#: ./docs/9.x/dusk.md:895
#: ./docs/10.x/dusk.md:999
#: ./docs/11.x/dusk.md:1054
#: ./docs/master/dusk.md:1050
msgctxt "CODE"
msgid "// Wait a maximum of five seconds for the input...\n"
"$browser->waitForInput($field);\n\n"
"// Wait a maximum of one second for the input...\n"
"$browser->waitForInput($field, 1);"
msgstr ""

#: ./docs/10.x/dusk.md:914
#: ./docs/11.x/dusk.md:969
#: ./docs/master/dusk.md:965
msgctxt "H4"
msgid "Waiting for Selectors"
msgstr ""

#: ./docs/11.x/dusk.md:915
msgctxt "CODE"
msgid "$browser->withinFrame('#credit-card-details', function ($browser) {\n"
"    $browser->type('input[name=\"cardnumber\"]', '4242424242424242')\n"
"        ->type('input[name=\"exp-date\"]', '1224')\n"
"        ->type('input[name=\"cvc\"]', '123')\n"
"        ->press('Pay');\n"
"});"
msgstr ""

#: ./docs/9.x/dusk.md:917
msgctxt "H4"
msgid "Waiting For Page Reloads"
msgstr ""

#: ./docs/9.x/dusk.md:955
#: ./docs/10.x/dusk.md:1059
#: ./docs/11.x/dusk.md:1114
#: ./docs/master/dusk.md:1110
#~ msgctxt "P"
#~ msgid "<a name=\"waiting-for-javascript-events\"></a>"
#~ msgstr ""

#: ./docs/9.x/dusk.md:956
msgctxt "H4"
msgid "Waiting For JavaScript Events"
msgstr ""

#: ./docs/9.x/dusk.md:958
#: ./docs/10.x/dusk.md:1062
#: ./docs/11.x/dusk.md:1117
#: ./docs/master/dusk.md:1113
msgctxt "P"
msgid "The `waitForEvent` method can be used to pause the execution of a test until a JavaScript event occurs:"
msgstr ""

#: ./docs/10.x/dusk.md:959
#: ./docs/11.x/dusk.md:1014
#: ./docs/master/dusk.md:1010
msgctxt "CODE"
msgid "$browser->whenAvailable('.modal', function (Browser $modal) {\n"
"    $modal->assertSee('Hello World')\n"
"          ->press('OK');\n"
"});"
msgstr ""

#: ./docs/9.x/dusk.md:960
#: ./docs/10.x/dusk.md:1064
#: ./docs/11.x/dusk.md:1119
#: ./docs/master/dusk.md:1115
msgctxt "CODE"
msgid "$browser->waitForEvent('load');"
msgstr ""

#: ./docs/9.x/dusk.md:962
#: ./docs/10.x/dusk.md:1066
#: ./docs/11.x/dusk.md:1121
#: ./docs/master/dusk.md:1117
msgctxt "P"
msgid "The event listener is attached to the current scope, which is the `body` element by default. When using a scoped selector, the event listener will be attached to the matching element:"
msgstr ""

#: ./docs/8.x/dusk.md:963
#: ./docs/9.x/dusk.md:1095
#: ./docs/10.x/dusk.md:1200
#: ./docs/11.x/dusk.md:1257
#: ./docs/master/dusk.md:1251
#~ msgctxt "P"
#~ msgid "<a name=\"assert-title\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:964
#: ./docs/9.x/dusk.md:1096
#: ./docs/10.x/dusk.md:1201
#: ./docs/11.x/dusk.md:1258
#: ./docs/master/dusk.md:1252
msgctxt "H4"
msgid "assertTitle"
msgstr ""

#: ./docs/9.x/dusk.md:964
msgctxt "CODE"
msgid "$browser->with('iframe', function ($iframe) {\n"
"    // Wait for the iframe's load event...\n"
"    $iframe->waitForEvent('load');\n"
"});"
msgstr ""

#: ./docs/10.x/dusk.md:965
#: ./docs/11.x/dusk.md:1020
#: ./docs/master/dusk.md:1016
msgctxt "H4"
msgid "Waiting for Text"
msgstr ""

#: ./docs/8.x/dusk.md:966
#: ./docs/9.x/dusk.md:1098
#: ./docs/10.x/dusk.md:1203
#: ./docs/11.x/dusk.md:1260
#: ./docs/master/dusk.md:1254
msgctxt "P"
msgid "Assert that the page title matches the given text:"
msgstr ""

#: ./docs/8.x/dusk.md:968
#: ./docs/9.x/dusk.md:1100
#: ./docs/10.x/dusk.md:1205
#: ./docs/11.x/dusk.md:1262
#: ./docs/master/dusk.md:1256
msgctxt "CODE"
msgid "$browser->assertTitle($title);"
msgstr ""

#: ./docs/9.x/dusk.md:969
#: ./docs/10.x/dusk.md:1073
#: ./docs/11.x/dusk.md:1128
#: ./docs/master/dusk.md:1124
msgctxt "P"
msgid "You may also provide a selector as the second argument to the `waitForEvent` method to attach the event listener to a specific element:"
msgstr ""

#: ./docs/8.x/dusk.md:970
#: ./docs/9.x/dusk.md:1102
#: ./docs/10.x/dusk.md:1207
#: ./docs/11.x/dusk.md:1264
#: ./docs/master/dusk.md:1258
#~ msgctxt "P"
#~ msgid "<a name=\"assert-title-contains\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:971
#: ./docs/9.x/dusk.md:1103
#: ./docs/10.x/dusk.md:1208
#: ./docs/11.x/dusk.md:1265
#: ./docs/master/dusk.md:1259
msgctxt "H4"
msgid "assertTitleContains"
msgstr ""

#: ./docs/9.x/dusk.md:971
#: ./docs/10.x/dusk.md:1075
#: ./docs/11.x/dusk.md:1130
#: ./docs/master/dusk.md:1126
msgctxt "CODE"
msgid "$browser->waitForEvent('load', '.selector');"
msgstr ""

#: ./docs/8.x/dusk.md:973
#: ./docs/9.x/dusk.md:1105
#: ./docs/10.x/dusk.md:1210
#: ./docs/11.x/dusk.md:1267
#: ./docs/master/dusk.md:1261
msgctxt "P"
msgid "Assert that the page title contains the given text:"
msgstr ""

#: ./docs/9.x/dusk.md:973
#: ./docs/10.x/dusk.md:1077
#: ./docs/11.x/dusk.md:1132
#: ./docs/master/dusk.md:1128
msgctxt "P"
msgid "You may also wait for events on the `document` and `window` objects:"
msgstr ""

#: ./docs/8.x/dusk.md:975
#: ./docs/9.x/dusk.md:1107
#: ./docs/10.x/dusk.md:1212
#: ./docs/11.x/dusk.md:1269
#: ./docs/master/dusk.md:1263
msgctxt "CODE"
msgid "$browser->assertTitleContains($title);"
msgstr ""

#: ./docs/9.x/dusk.md:975
#: ./docs/10.x/dusk.md:1079
#: ./docs/11.x/dusk.md:1134
#: ./docs/master/dusk.md:1130
msgctxt "CODE"
msgid "// Wait until the document is scrolled...\n"
"$browser->waitForEvent('scroll', 'document');\n\n"
"// Wait a maximum of five seconds until the window is resized...\n"
"$browser->waitForEvent('resize', 'window', 5);"
msgstr ""

#: ./docs/8.x/dusk.md:977
#: ./docs/9.x/dusk.md:1109
#: ./docs/10.x/dusk.md:1214
#: ./docs/11.x/dusk.md:1271
#: ./docs/master/dusk.md:1265
#~ msgctxt "P"
#~ msgid "<a name=\"assert-url-is\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:978
#: ./docs/9.x/dusk.md:1110
#: ./docs/10.x/dusk.md:1215
#: ./docs/11.x/dusk.md:1272
#: ./docs/master/dusk.md:1266
msgctxt "H4"
msgid "assertUrlIs"
msgstr ""

#: ./docs/8.x/dusk.md:980
#: ./docs/9.x/dusk.md:1112
#: ./docs/10.x/dusk.md:1217
#: ./docs/11.x/dusk.md:1274
#: ./docs/master/dusk.md:1268
msgctxt "P"
msgid "Assert that the current URL (without the query string) matches the given string:"
msgstr ""

#: ./docs/8.x/dusk.md:982
#: ./docs/9.x/dusk.md:1114
#: ./docs/10.x/dusk.md:1219
#: ./docs/11.x/dusk.md:1276
#: ./docs/master/dusk.md:1270
msgctxt "CODE"
msgid "$browser->assertUrlIs($url);"
msgstr ""

#: ./docs/10.x/dusk.md:984
#: ./docs/11.x/dusk.md:1039
#: ./docs/master/dusk.md:1035
msgctxt "H4"
msgid "Waiting for Links"
msgstr ""

#: ./docs/8.x/dusk.md:984
#: ./docs/9.x/dusk.md:1116
#: ./docs/10.x/dusk.md:1221
#: ./docs/11.x/dusk.md:1278
#: ./docs/master/dusk.md:1272
#~ msgctxt "P"
#~ msgid "<a name=\"assert-scheme-is\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:985
#: ./docs/9.x/dusk.md:1117
#: ./docs/10.x/dusk.md:1222
#: ./docs/11.x/dusk.md:1279
#: ./docs/master/dusk.md:1273
msgctxt "H4"
msgid "assertSchemeIs"
msgstr ""

#: ./docs/8.x/dusk.md:987
#: ./docs/9.x/dusk.md:1119
#: ./docs/10.x/dusk.md:1224
#: ./docs/11.x/dusk.md:1281
#: ./docs/master/dusk.md:1275
msgctxt "P"
msgid "Assert that the current URL scheme matches the given scheme:"
msgstr ""

#: ./docs/8.x/dusk.md:989
#: ./docs/9.x/dusk.md:1121
#: ./docs/10.x/dusk.md:1226
#: ./docs/11.x/dusk.md:1283
#: ./docs/master/dusk.md:1277
msgctxt "CODE"
msgid "$browser->assertSchemeIs($scheme);"
msgstr ""

#: ./docs/8.x/dusk.md:991
#: ./docs/9.x/dusk.md:1123
#: ./docs/10.x/dusk.md:1228
#: ./docs/11.x/dusk.md:1285
#: ./docs/master/dusk.md:1279
#~ msgctxt "P"
#~ msgid "<a name=\"assert-scheme-is-not\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:992
#: ./docs/9.x/dusk.md:1124
#: ./docs/10.x/dusk.md:1229
#: ./docs/11.x/dusk.md:1286
#: ./docs/master/dusk.md:1280
msgctxt "H4"
msgid "assertSchemeIsNot"
msgstr ""

#: ./docs/8.x/dusk.md:994
#: ./docs/9.x/dusk.md:1126
#: ./docs/10.x/dusk.md:1231
#: ./docs/11.x/dusk.md:1288
#: ./docs/master/dusk.md:1282
msgctxt "P"
msgid "Assert that the current URL scheme does not match the given scheme:"
msgstr ""

#: ./docs/10.x/dusk.md:995
#: ./docs/11.x/dusk.md:1050
#: ./docs/master/dusk.md:1046
msgctxt "H4"
msgid "Waiting for Inputs"
msgstr ""

#: ./docs/8.x/dusk.md:996
#: ./docs/9.x/dusk.md:1128
#: ./docs/10.x/dusk.md:1233
#: ./docs/11.x/dusk.md:1290
#: ./docs/master/dusk.md:1284
msgctxt "CODE"
msgid "$browser->assertSchemeIsNot($scheme);"
msgstr ""

#: ./docs/8.x/dusk.md:998
#: ./docs/9.x/dusk.md:1130
#: ./docs/10.x/dusk.md:1235
#: ./docs/11.x/dusk.md:1292
#: ./docs/master/dusk.md:1286
#~ msgctxt "P"
#~ msgid "<a name=\"assert-host-is\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:999
#: ./docs/9.x/dusk.md:1131
#: ./docs/10.x/dusk.md:1236
#: ./docs/11.x/dusk.md:1293
#: ./docs/master/dusk.md:1287
msgctxt "H4"
msgid "assertHostIs"
msgstr ""

#: ./docs/8.x/dusk.md:1001
#: ./docs/9.x/dusk.md:1133
#: ./docs/10.x/dusk.md:1238
#: ./docs/11.x/dusk.md:1295
#: ./docs/master/dusk.md:1289
msgctxt "P"
msgid "Assert that the current URL host matches the given host:"
msgstr ""

#: ./docs/8.x/dusk.md:1003
#: ./docs/9.x/dusk.md:1135
#: ./docs/10.x/dusk.md:1240
#: ./docs/11.x/dusk.md:1297
#: ./docs/master/dusk.md:1291
msgctxt "CODE"
msgid "$browser->assertHostIs($host);"
msgstr ""

#: ./docs/8.x/dusk.md:1005
#: ./docs/9.x/dusk.md:1137
#: ./docs/10.x/dusk.md:1242
#: ./docs/11.x/dusk.md:1299
#: ./docs/master/dusk.md:1293
#~ msgctxt "P"
#~ msgid "<a name=\"assert-host-is-not\"></a>"
#~ msgstr ""

#: ./docs/10.x/dusk.md:1006
#: ./docs/11.x/dusk.md:1061
#: ./docs/master/dusk.md:1057
msgctxt "H4"
msgid "Waiting on the Page Location"
msgstr ""

#: ./docs/8.x/dusk.md:1006
#: ./docs/9.x/dusk.md:1138
#: ./docs/10.x/dusk.md:1243
#: ./docs/11.x/dusk.md:1300
#: ./docs/master/dusk.md:1294
msgctxt "H4"
msgid "assertHostIsNot"
msgstr ""

#: ./docs/8.x/dusk.md:1008
#: ./docs/9.x/dusk.md:1140
#: ./docs/10.x/dusk.md:1245
#: ./docs/11.x/dusk.md:1302
#: ./docs/master/dusk.md:1296
msgctxt "P"
msgid "Assert that the current URL host does not match the given host:"
msgstr ""

#: ./docs/8.x/dusk.md:1010
#: ./docs/9.x/dusk.md:1142
#: ./docs/10.x/dusk.md:1247
#: ./docs/11.x/dusk.md:1304
#: ./docs/master/dusk.md:1298
msgctxt "CODE"
msgid "$browser->assertHostIsNot($host);"
msgstr ""

#: ./docs/8.x/dusk.md:1012
#: ./docs/9.x/dusk.md:1144
#: ./docs/10.x/dusk.md:1249
#: ./docs/11.x/dusk.md:1306
#: ./docs/master/dusk.md:1300
#~ msgctxt "P"
#~ msgid "<a name=\"assert-port-is\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1013
#: ./docs/9.x/dusk.md:1145
#: ./docs/10.x/dusk.md:1250
#: ./docs/11.x/dusk.md:1307
#: ./docs/master/dusk.md:1301
msgctxt "H4"
msgid "assertPortIs"
msgstr ""

#: ./docs/8.x/dusk.md:1015
#: ./docs/9.x/dusk.md:1147
#: ./docs/10.x/dusk.md:1252
#: ./docs/11.x/dusk.md:1309
#: ./docs/master/dusk.md:1303
msgctxt "P"
msgid "Assert that the current URL port matches the given port:"
msgstr ""

#: ./docs/8.x/dusk.md:1017
#: ./docs/9.x/dusk.md:1149
#: ./docs/10.x/dusk.md:1254
#: ./docs/11.x/dusk.md:1311
#: ./docs/master/dusk.md:1305
msgctxt "CODE"
msgid "$browser->assertPortIs($port);"
msgstr ""

#: ./docs/9.x/dusk.md:1018
msgctxt "P"
msgid "[assertTitle](#assert-title)\n"
"[assertTitleContains](#assert-title-contains)\n"
"[assertUrlIs](#assert-url-is)\n"
"[assertSchemeIs](#assert-scheme-is)\n"
"[assertSchemeIsNot](#assert-scheme-is-not)\n"
"[assertHostIs](#assert-host-is)\n"
"[assertHostIsNot](#assert-host-is-not)\n"
"[assertPortIs](#assert-port-is)\n"
"[assertPortIsNot](#assert-port-is-not)\n"
"[assertPathBeginsWith](#assert-path-begins-with)\n"
"[assertPathIs](#assert-path-is)\n"
"[assertPathIsNot](#assert-path-is-not)\n"
"[assertRouteIs](#assert-route-is)\n"
"[assertQueryStringHas](#assert-query-string-has)\n"
"[assertQueryStringMissing](#assert-query-string-missing)\n"
"[assertFragmentIs](#assert-fragment-is)\n"
"[assertFragmentBeginsWith](#assert-fragment-begins-with)\n"
"[assertFragmentIsNot](#assert-fragment-is-not)\n"
"[assertHasCookie](#assert-has-cookie)\n"
"[assertHasPlainCookie](#assert-has-plain-cookie)\n"
"[assertCookieMissing](#assert-cookie-missing)\n"
"[assertPlainCookieMissing](#assert-plain-cookie-missing)\n"
"[assertCookieValue](#assert-cookie-value)\n"
"[assertPlainCookieValue](#assert-plain-cookie-value)\n"
"[assertSee](#assert-see)\n"
"[assertDontSee](#assert-dont-see)\n"
"[assertSeeIn](#assert-see-in)\n"
"[assertDontSeeIn](#assert-dont-see-in)\n"
"[assertSeeAnythingIn](#assert-see-anything-in)\n"
"[assertSeeNothingIn](#assert-see-nothing-in)\n"
"[assertScript](#assert-script)\n"
"[assertSourceHas](#assert-source-has)\n"
"[assertSourceMissing](#assert-source-missing)\n"
"[assertSeeLink](#assert-see-link)\n"
"[assertDontSeeLink](#assert-dont-see-link)\n"
"[assertInputValue](#assert-input-value)\n"
"[assertInputValueIsNot](#assert-input-value-is-not)\n"
"[assertChecked](#assert-checked)\n"
"[assertNotChecked](#assert-not-checked)\n"
"[assertIndeterminate](#assert-indeterminate)\n"
"[assertRadioSelected](#assert-radio-selected)\n"
"[assertRadioNotSelected](#assert-radio-not-selected)\n"
"[assertSelected](#assert-selected)\n"
"[assertNotSelected](#assert-not-selected)\n"
"[assertSelectHasOptions](#assert-select-has-options)\n"
"[assertSelectMissingOptions](#assert-select-missing-options)\n"
"[assertSelectHasOption](#assert-select-has-option)\n"
"[assertSelectMissingOption](#assert-select-missing-option)\n"
"[assertValue](#assert-value)\n"
"[assertValueIsNot](#assert-value-is-not)\n"
"[assertAttribute](#assert-attribute)\n"
"[assertAttributeContains](#assert-attribute-contains)\n"
"[assertAriaAttribute](#assert-aria-attribute)\n"
"[assertDataAttribute](#assert-data-attribute)\n"
"[assertVisible](#assert-visible)\n"
"[assertPresent](#assert-present)\n"
"[assertNotPresent](#assert-not-present)\n"
"[assertMissing](#assert-missing)\n"
"[assertInputPresent](#assert-input-present)\n"
"[assertInputMissing](#assert-input-missing)\n"
"[assertDialogOpened](#assert-dialog-opened)\n"
"[assertEnabled](#assert-enabled)\n"
"[assertDisabled](#assert-disabled)\n"
"[assertButtonEnabled](#assert-button-enabled)\n"
"[assertButtonDisabled](#assert-button-disabled)\n"
"[assertFocused](#assert-focused)\n"
"[assertNotFocused](#assert-not-focused)\n"
"[assertAuthenticated](#assert-authenticated)\n"
"[assertGuest](#assert-guest)\n"
"[assertAuthenticatedAs](#assert-authenticated-as)\n"
"[assertVue](#assert-vue)\n"
"[assertVueIsNot](#assert-vue-is-not)\n"
"[assertVueContains](#assert-vue-contains)\n"
"[assertVueDoesNotContain](#assert-vue-does-not-contain)"
msgstr ""

#: ./docs/8.x/dusk.md:1019
#: ./docs/9.x/dusk.md:1151
#: ./docs/10.x/dusk.md:1256
#: ./docs/11.x/dusk.md:1313
#: ./docs/master/dusk.md:1307
#~ msgctxt "P"
#~ msgid "<a name=\"assert-port-is-not\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1020
#: ./docs/9.x/dusk.md:1152
#: ./docs/10.x/dusk.md:1257
#: ./docs/11.x/dusk.md:1314
#: ./docs/master/dusk.md:1308
msgctxt "H4"
msgid "assertPortIsNot"
msgstr ""

#: ./docs/8.x/dusk.md:1022
#: ./docs/9.x/dusk.md:1154
#: ./docs/10.x/dusk.md:1259
#: ./docs/11.x/dusk.md:1316
#: ./docs/master/dusk.md:1310
msgctxt "P"
msgid "Assert that the current URL port does not match the given port:"
msgstr ""

#: ./docs/8.x/dusk.md:1024
#: ./docs/9.x/dusk.md:1156
#: ./docs/10.x/dusk.md:1261
#: ./docs/11.x/dusk.md:1318
#: ./docs/master/dusk.md:1312
msgctxt "CODE"
msgid "$browser->assertPortIsNot($port);"
msgstr ""

#: ./docs/8.x/dusk.md:1026
#: ./docs/9.x/dusk.md:1158
#: ./docs/10.x/dusk.md:1263
#: ./docs/11.x/dusk.md:1320
#: ./docs/master/dusk.md:1314
#~ msgctxt "P"
#~ msgid "<a name=\"assert-path-begins-with\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1027
#: ./docs/9.x/dusk.md:1159
#: ./docs/10.x/dusk.md:1264
#: ./docs/11.x/dusk.md:1321
#: ./docs/master/dusk.md:1315
msgctxt "H4"
msgid "assertPathBeginsWith"
msgstr ""

#: ./docs/8.x/dusk.md:1029
#: ./docs/9.x/dusk.md:1161
#: ./docs/10.x/dusk.md:1266
#: ./docs/11.x/dusk.md:1323
#: ./docs/master/dusk.md:1317
msgctxt "P"
msgid "Assert that the current URL path begins with the given path:"
msgstr ""

#: ./docs/8.x/dusk.md:1031
#: ./docs/9.x/dusk.md:1163
#: ./docs/10.x/dusk.md:1268
#: ./docs/11.x/dusk.md:1325
#: ./docs/master/dusk.md:1319
msgctxt "CODE"
msgid "$browser->assertPathBeginsWith('/home');"
msgstr ""

#: ./docs/8.x/dusk.md:1033
#: ./docs/9.x/dusk.md:1165
#: ./docs/10.x/dusk.md:1270
#: ./docs/11.x/dusk.md:1341
#: ./docs/master/dusk.md:1321
#~ msgctxt "P"
#~ msgid "<a name=\"assert-path-is\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1034
#: ./docs/9.x/dusk.md:1166
#: ./docs/10.x/dusk.md:1271
#: ./docs/11.x/dusk.md:1342
#: ./docs/master/dusk.md:1322
msgctxt "H4"
msgid "assertPathIs"
msgstr ""

#: ./docs/8.x/dusk.md:1036
#: ./docs/9.x/dusk.md:1168
#: ./docs/10.x/dusk.md:1273
#: ./docs/11.x/dusk.md:1344
#: ./docs/master/dusk.md:1324
msgctxt "P"
msgid "Assert that the current path matches the given path:"
msgstr ""

#: ./docs/10.x/dusk.md:1038
#: ./docs/11.x/dusk.md:1093
#: ./docs/master/dusk.md:1089
msgctxt "H4"
msgid "Waiting on JavaScript Expressions"
msgstr ""

#: ./docs/8.x/dusk.md:1038
#: ./docs/9.x/dusk.md:1170
#: ./docs/10.x/dusk.md:1275
#: ./docs/11.x/dusk.md:1346
#: ./docs/master/dusk.md:1326
msgctxt "CODE"
msgid "$browser->assertPathIs('/home');"
msgstr ""

#: ./docs/8.x/dusk.md:1040
#: ./docs/9.x/dusk.md:1172
#: ./docs/10.x/dusk.md:1277
#: ./docs/11.x/dusk.md:1348
#: ./docs/master/dusk.md:1328
#~ msgctxt "P"
#~ msgid "<a name=\"assert-path-is-not\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1041
#: ./docs/9.x/dusk.md:1173
#: ./docs/10.x/dusk.md:1278
#: ./docs/11.x/dusk.md:1349
#: ./docs/master/dusk.md:1329
msgctxt "H4"
msgid "assertPathIsNot"
msgstr ""

#: ./docs/8.x/dusk.md:1043
#: ./docs/9.x/dusk.md:1175
#: ./docs/10.x/dusk.md:1280
#: ./docs/11.x/dusk.md:1351
#: ./docs/master/dusk.md:1331
msgctxt "P"
msgid "Assert that the current path does not match the given path:"
msgstr ""

#: ./docs/8.x/dusk.md:1045
#: ./docs/9.x/dusk.md:1177
#: ./docs/10.x/dusk.md:1282
#: ./docs/11.x/dusk.md:1353
#: ./docs/master/dusk.md:1333
msgctxt "CODE"
msgid "$browser->assertPathIsNot('/home');"
msgstr ""

#: ./docs/8.x/dusk.md:1047
#: ./docs/9.x/dusk.md:1179
#: ./docs/10.x/dusk.md:1284
#: ./docs/11.x/dusk.md:1355
#: ./docs/master/dusk.md:1335
#~ msgctxt "P"
#~ msgid "<a name=\"assert-route-is\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1048
#: ./docs/9.x/dusk.md:1180
#: ./docs/10.x/dusk.md:1285
#: ./docs/11.x/dusk.md:1356
#: ./docs/master/dusk.md:1336
msgctxt "H4"
msgid "assertRouteIs"
msgstr ""

#: ./docs/10.x/dusk.md:1049
#: ./docs/11.x/dusk.md:1104
#: ./docs/master/dusk.md:1100
msgctxt "H4"
msgid "Waiting on Vue Expressions"
msgstr ""

#: ./docs/8.x/dusk.md:1050
#: ./docs/9.x/dusk.md:1182
#: ./docs/10.x/dusk.md:1287
#: ./docs/11.x/dusk.md:1358
#: ./docs/master/dusk.md:1338
msgctxt "P"
msgid "Assert that the current URL matches the given [named route's](/docs/{{version}}/routing#named-routes) URL:"
msgstr ""

#: ./docs/8.x/dusk.md:1052
#: ./docs/9.x/dusk.md:1184
#: ./docs/10.x/dusk.md:1289
#: ./docs/11.x/dusk.md:1360
#: ./docs/master/dusk.md:1340
msgctxt "CODE"
msgid "$browser->assertRouteIs($name, $parameters);"
msgstr ""

#: ./docs/8.x/dusk.md:1054
#: ./docs/9.x/dusk.md:1186
#: ./docs/10.x/dusk.md:1291
#: ./docs/11.x/dusk.md:1362
#: ./docs/master/dusk.md:1342
#~ msgctxt "P"
#~ msgid "<a name=\"assert-query-string-has\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1055
#: ./docs/9.x/dusk.md:1187
#: ./docs/10.x/dusk.md:1292
#: ./docs/11.x/dusk.md:1363
#: ./docs/master/dusk.md:1343
msgctxt "H4"
msgid "assertQueryStringHas"
msgstr ""

#: ./docs/8.x/dusk.md:1057
#: ./docs/9.x/dusk.md:1189
#: ./docs/10.x/dusk.md:1294
#: ./docs/11.x/dusk.md:1365
#: ./docs/master/dusk.md:1345
msgctxt "P"
msgid "Assert that the given query string parameter is present:"
msgstr ""

#: ./docs/8.x/dusk.md:1059
#: ./docs/9.x/dusk.md:1191
#: ./docs/10.x/dusk.md:1296
#: ./docs/11.x/dusk.md:1367
#: ./docs/master/dusk.md:1347
msgctxt "CODE"
msgid "$browser->assertQueryStringHas($name);"
msgstr ""

#: ./docs/10.x/dusk.md:1060
#: ./docs/11.x/dusk.md:1115
#: ./docs/master/dusk.md:1111
msgctxt "H4"
msgid "Waiting for JavaScript Events"
msgstr ""

#: ./docs/8.x/dusk.md:1061
#: ./docs/9.x/dusk.md:1193
#: ./docs/10.x/dusk.md:1298
#: ./docs/11.x/dusk.md:1369
#: ./docs/master/dusk.md:1349
msgctxt "P"
msgid "Assert that the given query string parameter is present and has a given value:"
msgstr ""

#: ./docs/8.x/dusk.md:1063
#: ./docs/9.x/dusk.md:1195
#: ./docs/10.x/dusk.md:1300
#: ./docs/11.x/dusk.md:1371
#: ./docs/master/dusk.md:1351
msgctxt "CODE"
msgid "$browser->assertQueryStringHas($name, $value);"
msgstr ""

#: ./docs/8.x/dusk.md:1065
#: ./docs/9.x/dusk.md:1197
#: ./docs/10.x/dusk.md:1302
#: ./docs/11.x/dusk.md:1373
#: ./docs/master/dusk.md:1353
#~ msgctxt "P"
#~ msgid "<a name=\"assert-query-string-missing\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1066
#: ./docs/9.x/dusk.md:1198
#: ./docs/10.x/dusk.md:1303
#: ./docs/11.x/dusk.md:1374
#: ./docs/master/dusk.md:1354
msgctxt "H4"
msgid "assertQueryStringMissing"
msgstr ""

#: ./docs/10.x/dusk.md:1068
#: ./docs/11.x/dusk.md:1123
#: ./docs/master/dusk.md:1119
msgctxt "CODE"
msgid "$browser->with('iframe', function (Browser $iframe) {\n"
"    // Wait for the iframe's load event...\n"
"    $iframe->waitForEvent('load');\n"
"});"
msgstr ""

#: ./docs/8.x/dusk.md:1068
#: ./docs/9.x/dusk.md:1200
#: ./docs/10.x/dusk.md:1305
#: ./docs/11.x/dusk.md:1376
#: ./docs/master/dusk.md:1356
msgctxt "P"
msgid "Assert that the given query string parameter is missing:"
msgstr ""

#: ./docs/8.x/dusk.md:1070
#: ./docs/9.x/dusk.md:1202
#: ./docs/10.x/dusk.md:1307
#: ./docs/11.x/dusk.md:1378
#: ./docs/master/dusk.md:1358
msgctxt "CODE"
msgid "$browser->assertQueryStringMissing($name);"
msgstr ""

#: ./docs/8.x/dusk.md:1072
#: ./docs/9.x/dusk.md:1204
#: ./docs/10.x/dusk.md:1309
#: ./docs/11.x/dusk.md:1380
#: ./docs/master/dusk.md:1360
#~ msgctxt "P"
#~ msgid "<a name=\"assert-fragment-is\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1073
#: ./docs/9.x/dusk.md:1205
#: ./docs/10.x/dusk.md:1310
#: ./docs/11.x/dusk.md:1381
#: ./docs/master/dusk.md:1361
msgctxt "H4"
msgid "assertFragmentIs"
msgstr ""

#: ./docs/8.x/dusk.md:1075
#: ./docs/9.x/dusk.md:1207
#: ./docs/10.x/dusk.md:1312
#: ./docs/11.x/dusk.md:1383
#: ./docs/master/dusk.md:1363
msgctxt "P"
msgid "Assert that the URL's current hash fragment matches the given fragment:"
msgstr ""

#: ./docs/8.x/dusk.md:1077
#: ./docs/9.x/dusk.md:1209
#: ./docs/10.x/dusk.md:1314
#: ./docs/11.x/dusk.md:1385
#: ./docs/master/dusk.md:1365
msgctxt "CODE"
msgid "$browser->assertFragmentIs('anchor');"
msgstr ""

#: ./docs/8.x/dusk.md:1079
#: ./docs/9.x/dusk.md:1211
#: ./docs/10.x/dusk.md:1316
#: ./docs/11.x/dusk.md:1387
#: ./docs/master/dusk.md:1367
#~ msgctxt "P"
#~ msgid "<a name=\"assert-fragment-begins-with\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1080
#: ./docs/9.x/dusk.md:1212
#: ./docs/10.x/dusk.md:1317
#: ./docs/11.x/dusk.md:1388
#: ./docs/master/dusk.md:1368
msgctxt "H4"
msgid "assertFragmentBeginsWith"
msgstr ""

#: ./docs/8.x/dusk.md:1082
#: ./docs/9.x/dusk.md:1214
#: ./docs/10.x/dusk.md:1319
#: ./docs/11.x/dusk.md:1390
#: ./docs/master/dusk.md:1370
msgctxt "P"
msgid "Assert that the URL's current hash fragment begins with the given fragment:"
msgstr ""

#: ./docs/8.x/dusk.md:1084
#: ./docs/9.x/dusk.md:1216
#: ./docs/10.x/dusk.md:1321
#: ./docs/11.x/dusk.md:1392
#: ./docs/master/dusk.md:1372
msgctxt "CODE"
msgid "$browser->assertFragmentBeginsWith('anchor');"
msgstr ""

#: ./docs/10.x/dusk.md:1086
#: ./docs/11.x/dusk.md:1141
#: ./docs/master/dusk.md:1137
msgctxt "H4"
msgid "Waiting With a Callback"
msgstr ""

#: ./docs/8.x/dusk.md:1086
#: ./docs/9.x/dusk.md:1218
#: ./docs/10.x/dusk.md:1323
#: ./docs/11.x/dusk.md:1394
#: ./docs/master/dusk.md:1374
#~ msgctxt "P"
#~ msgid "<a name=\"assert-fragment-is-not\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1087
#: ./docs/9.x/dusk.md:1219
#: ./docs/10.x/dusk.md:1324
#: ./docs/11.x/dusk.md:1395
#: ./docs/master/dusk.md:1375
msgctxt "H4"
msgid "assertFragmentIsNot"
msgstr ""

#: ./docs/8.x/dusk.md:1089
#: ./docs/9.x/dusk.md:1221
#: ./docs/10.x/dusk.md:1326
#: ./docs/11.x/dusk.md:1397
#: ./docs/master/dusk.md:1377
msgctxt "P"
msgid "Assert that the URL's current hash fragment does not match the given fragment:"
msgstr ""

#: ./docs/8.x/dusk.md:1091
#: ./docs/9.x/dusk.md:1223
#: ./docs/10.x/dusk.md:1328
#: ./docs/11.x/dusk.md:1399
#: ./docs/master/dusk.md:1379
msgctxt "CODE"
msgid "$browser->assertFragmentIsNot('anchor');"
msgstr ""

#: ./docs/8.x/dusk.md:1093
#: ./docs/9.x/dusk.md:1225
#: ./docs/10.x/dusk.md:1330
#: ./docs/11.x/dusk.md:1401
#: ./docs/master/dusk.md:1381
#~ msgctxt "P"
#~ msgid "<a name=\"assert-has-cookie\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1094
#: ./docs/9.x/dusk.md:1226
#: ./docs/10.x/dusk.md:1331
#: ./docs/11.x/dusk.md:1402
#: ./docs/master/dusk.md:1382
msgctxt "H4"
msgid "assertHasCookie"
msgstr ""

#: ./docs/10.x/dusk.md:1095
#: ./docs/11.x/dusk.md:1150
#: ./docs/master/dusk.md:1146
msgctxt "H3"
msgid "Scrolling an Element Into View"
msgstr ""

#: ./docs/8.x/dusk.md:1096
#: ./docs/9.x/dusk.md:1228
#: ./docs/10.x/dusk.md:1333
#: ./docs/11.x/dusk.md:1404
#: ./docs/master/dusk.md:1384
msgctxt "P"
msgid "Assert that the given encrypted cookie is present:"
msgstr ""

#: ./docs/8.x/dusk.md:1098
#: ./docs/9.x/dusk.md:1230
#: ./docs/10.x/dusk.md:1335
#: ./docs/11.x/dusk.md:1406
#: ./docs/master/dusk.md:1386
msgctxt "CODE"
msgid "$browser->assertHasCookie($name);"
msgstr ""

#: ./docs/8.x/dusk.md:1100
#: ./docs/9.x/dusk.md:1232
#: ./docs/10.x/dusk.md:1337
#: ./docs/11.x/dusk.md:1408
#: ./docs/master/dusk.md:1388
#~ msgctxt "P"
#~ msgid "<a name=\"assert-has-plain-cookie\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1101
#: ./docs/9.x/dusk.md:1233
#: ./docs/10.x/dusk.md:1338
#: ./docs/11.x/dusk.md:1409
#: ./docs/master/dusk.md:1389
msgctxt "H4"
msgid "assertHasPlainCookie"
msgstr ""

#: ./docs/8.x/dusk.md:1103
#: ./docs/9.x/dusk.md:1235
#: ./docs/10.x/dusk.md:1340
#: ./docs/11.x/dusk.md:1411
#: ./docs/master/dusk.md:1391
msgctxt "P"
msgid "Assert that the given unencrypted cookie is present:"
msgstr ""

#: ./docs/8.x/dusk.md:1105
#: ./docs/9.x/dusk.md:1237
#: ./docs/10.x/dusk.md:1342
#: ./docs/11.x/dusk.md:1413
#: ./docs/master/dusk.md:1393
msgctxt "CODE"
msgid "$browser->assertHasPlainCookie($name);"
msgstr ""

#: ./docs/8.x/dusk.md:1107
#: ./docs/9.x/dusk.md:1239
#: ./docs/10.x/dusk.md:1344
#: ./docs/11.x/dusk.md:1415
#: ./docs/master/dusk.md:1395
#~ msgctxt "P"
#~ msgid "<a name=\"assert-cookie-missing\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1108
#: ./docs/9.x/dusk.md:1240
#: ./docs/10.x/dusk.md:1345
#: ./docs/11.x/dusk.md:1416
#: ./docs/master/dusk.md:1396
msgctxt "H4"
msgid "assertCookieMissing"
msgstr ""

#: ./docs/8.x/dusk.md:1110
#: ./docs/9.x/dusk.md:1242
#: ./docs/10.x/dusk.md:1347
#: ./docs/11.x/dusk.md:1418
#: ./docs/master/dusk.md:1398
msgctxt "P"
msgid "Assert that the given encrypted cookie is not present:"
msgstr ""

#: ./docs/8.x/dusk.md:1112
#: ./docs/9.x/dusk.md:1244
#: ./docs/10.x/dusk.md:1349
#: ./docs/11.x/dusk.md:1420
#: ./docs/master/dusk.md:1400
msgctxt "CODE"
msgid "$browser->assertCookieMissing($name);"
msgstr ""

#: ./docs/8.x/dusk.md:1114
#: ./docs/9.x/dusk.md:1246
#: ./docs/10.x/dusk.md:1351
#: ./docs/11.x/dusk.md:1422
#: ./docs/master/dusk.md:1402
#~ msgctxt "P"
#~ msgid "<a name=\"assert-plain-cookie-missing\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1115
#: ./docs/9.x/dusk.md:1247
#: ./docs/10.x/dusk.md:1352
#: ./docs/11.x/dusk.md:1423
#: ./docs/master/dusk.md:1403
msgctxt "H4"
msgid "assertPlainCookieMissing"
msgstr ""

#: ./docs/8.x/dusk.md:1117
#: ./docs/9.x/dusk.md:1249
#: ./docs/10.x/dusk.md:1354
#: ./docs/11.x/dusk.md:1425
#: ./docs/master/dusk.md:1405
msgctxt "P"
msgid "Assert that the given unencrypted cookie is not present:"
msgstr ""

#: ./docs/8.x/dusk.md:1119
#: ./docs/9.x/dusk.md:1251
#: ./docs/10.x/dusk.md:1356
#: ./docs/11.x/dusk.md:1427
#: ./docs/master/dusk.md:1407
msgctxt "CODE"
msgid "$browser->assertPlainCookieMissing($name);"
msgstr ""

#: ./docs/8.x/dusk.md:1121
#: ./docs/9.x/dusk.md:1253
#: ./docs/10.x/dusk.md:1358
#: ./docs/11.x/dusk.md:1429
#: ./docs/master/dusk.md:1409
#~ msgctxt "P"
#~ msgid "<a name=\"assert-cookie-value\"></a>"
#~ msgstr ""

#: ./docs/10.x/dusk.md:1122
#: ./docs/master/dusk.md:1173
msgctxt "P"
msgid "[assertTitle](#assert-title)\n"
"[assertTitleContains](#assert-title-contains)\n"
"[assertUrlIs](#assert-url-is)\n"
"[assertSchemeIs](#assert-scheme-is)\n"
"[assertSchemeIsNot](#assert-scheme-is-not)\n"
"[assertHostIs](#assert-host-is)\n"
"[assertHostIsNot](#assert-host-is-not)\n"
"[assertPortIs](#assert-port-is)\n"
"[assertPortIsNot](#assert-port-is-not)\n"
"[assertPathBeginsWith](#assert-path-begins-with)\n"
"[assertPathIs](#assert-path-is)\n"
"[assertPathIsNot](#assert-path-is-not)\n"
"[assertRouteIs](#assert-route-is)\n"
"[assertQueryStringHas](#assert-query-string-has)\n"
"[assertQueryStringMissing](#assert-query-string-missing)\n"
"[assertFragmentIs](#assert-fragment-is)\n"
"[assertFragmentBeginsWith](#assert-fragment-begins-with)\n"
"[assertFragmentIsNot](#assert-fragment-is-not)\n"
"[assertHasCookie](#assert-has-cookie)\n"
"[assertHasPlainCookie](#assert-has-plain-cookie)\n"
"[assertCookieMissing](#assert-cookie-missing)\n"
"[assertPlainCookieMissing](#assert-plain-cookie-missing)\n"
"[assertCookieValue](#assert-cookie-value)\n"
"[assertPlainCookieValue](#assert-plain-cookie-value)\n"
"[assertSee](#assert-see)\n"
"[assertDontSee](#assert-dont-see)\n"
"[assertSeeIn](#assert-see-in)\n"
"[assertDontSeeIn](#assert-dont-see-in)\n"
"[assertSeeAnythingIn](#assert-see-anything-in)\n"
"[assertSeeNothingIn](#assert-see-nothing-in)\n"
"[assertScript](#assert-script)\n"
"[assertSourceHas](#assert-source-has)\n"
"[assertSourceMissing](#assert-source-missing)\n"
"[assertSeeLink](#assert-see-link)\n"
"[assertDontSeeLink](#assert-dont-see-link)\n"
"[assertInputValue](#assert-input-value)\n"
"[assertInputValueIsNot](#assert-input-value-is-not)\n"
"[assertChecked](#assert-checked)\n"
"[assertNotChecked](#assert-not-checked)\n"
"[assertIndeterminate](#assert-indeterminate)\n"
"[assertRadioSelected](#assert-radio-selected)\n"
"[assertRadioNotSelected](#assert-radio-not-selected)\n"
"[assertSelected](#assert-selected)\n"
"[assertNotSelected](#assert-not-selected)\n"
"[assertSelectHasOptions](#assert-select-has-options)\n"
"[assertSelectMissingOptions](#assert-select-missing-options)\n"
"[assertSelectHasOption](#assert-select-has-option)\n"
"[assertSelectMissingOption](#assert-select-missing-option)\n"
"[assertValue](#assert-value)\n"
"[assertValueIsNot](#assert-value-is-not)\n"
"[assertAttribute](#assert-attribute)\n"
"[assertAttributeContains](#assert-attribute-contains)\n"
"[assertAttributeDoesntContain](#assert-attribute-doesnt-contain)\n"
"[assertAriaAttribute](#assert-aria-attribute)\n"
"[assertDataAttribute](#assert-data-attribute)\n"
"[assertVisible](#assert-visible)\n"
"[assertPresent](#assert-present)\n"
"[assertNotPresent](#assert-not-present)\n"
"[assertMissing](#assert-missing)\n"
"[assertInputPresent](#assert-input-present)\n"
"[assertInputMissing](#assert-input-missing)\n"
"[assertDialogOpened](#assert-dialog-opened)\n"
"[assertEnabled](#assert-enabled)\n"
"[assertDisabled](#assert-disabled)\n"
"[assertButtonEnabled](#assert-button-enabled)\n"
"[assertButtonDisabled](#assert-button-disabled)\n"
"[assertFocused](#assert-focused)\n"
"[assertNotFocused](#assert-not-focused)\n"
"[assertAuthenticated](#assert-authenticated)\n"
"[assertGuest](#assert-guest)\n"
"[assertAuthenticatedAs](#assert-authenticated-as)\n"
"[assertVue](#assert-vue)\n"
"[assertVueIsNot](#assert-vue-is-not)\n"
"[assertVueContains](#assert-vue-contains)\n"
"[assertVueDoesntContain](#assert-vue-doesnt-contain)"
msgstr ""

#: ./docs/8.x/dusk.md:1122
#: ./docs/9.x/dusk.md:1254
#: ./docs/10.x/dusk.md:1359
#: ./docs/11.x/dusk.md:1430
#: ./docs/master/dusk.md:1410
msgctxt "H4"
msgid "assertCookieValue"
msgstr ""

#: ./docs/8.x/dusk.md:1124
#: ./docs/9.x/dusk.md:1256
#: ./docs/10.x/dusk.md:1361
#: ./docs/11.x/dusk.md:1432
#: ./docs/master/dusk.md:1412
msgctxt "P"
msgid "Assert that an encrypted cookie has a given value:"
msgstr ""

#: ./docs/8.x/dusk.md:1126
#: ./docs/9.x/dusk.md:1258
#: ./docs/10.x/dusk.md:1363
#: ./docs/11.x/dusk.md:1434
#: ./docs/master/dusk.md:1414
msgctxt "CODE"
msgid "$browser->assertCookieValue($name, $value);"
msgstr ""

#: ./docs/8.x/dusk.md:1128
#: ./docs/9.x/dusk.md:1260
#: ./docs/10.x/dusk.md:1365
#: ./docs/11.x/dusk.md:1436
#: ./docs/master/dusk.md:1416
#~ msgctxt "P"
#~ msgid "<a name=\"assert-plain-cookie-value\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1129
#: ./docs/9.x/dusk.md:1261
#: ./docs/10.x/dusk.md:1366
#: ./docs/11.x/dusk.md:1437
#: ./docs/master/dusk.md:1417
msgctxt "H4"
msgid "assertPlainCookieValue"
msgstr ""

#: ./docs/8.x/dusk.md:1131
#: ./docs/9.x/dusk.md:1263
#: ./docs/10.x/dusk.md:1368
#: ./docs/11.x/dusk.md:1439
#: ./docs/master/dusk.md:1419
msgctxt "P"
msgid "Assert that an unencrypted cookie has a given value:"
msgstr ""

#: ./docs/8.x/dusk.md:1133
#: ./docs/9.x/dusk.md:1265
#: ./docs/10.x/dusk.md:1370
#: ./docs/11.x/dusk.md:1441
#: ./docs/master/dusk.md:1421
msgctxt "CODE"
msgid "$browser->assertPlainCookieValue($name, $value);"
msgstr ""

#: ./docs/8.x/dusk.md:1135
#: ./docs/9.x/dusk.md:1267
#: ./docs/10.x/dusk.md:1372
#: ./docs/11.x/dusk.md:1443
#: ./docs/master/dusk.md:1423
#~ msgctxt "P"
#~ msgid "<a name=\"assert-see\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1136
#: ./docs/9.x/dusk.md:1268
#: ./docs/10.x/dusk.md:1373
#: ./docs/11.x/dusk.md:1444
#: ./docs/master/dusk.md:1424
msgctxt "H4"
msgid "assertSee"
msgstr ""

#: ./docs/8.x/dusk.md:1138
#: ./docs/9.x/dusk.md:1270
#: ./docs/10.x/dusk.md:1375
#: ./docs/11.x/dusk.md:1446
#: ./docs/master/dusk.md:1426
msgctxt "P"
msgid "Assert that the given text is present on the page:"
msgstr ""

#: ./docs/8.x/dusk.md:1140
#: ./docs/9.x/dusk.md:1272
#: ./docs/10.x/dusk.md:1377
#: ./docs/11.x/dusk.md:1448
#: ./docs/master/dusk.md:1428
msgctxt "CODE"
msgid "$browser->assertSee($text);"
msgstr ""

#: ./docs/8.x/dusk.md:1142
#: ./docs/9.x/dusk.md:1274
#: ./docs/10.x/dusk.md:1379
#: ./docs/11.x/dusk.md:1450
#: ./docs/master/dusk.md:1430
#~ msgctxt "P"
#~ msgid "<a name=\"assert-dont-see\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1143
#: ./docs/9.x/dusk.md:1275
#: ./docs/10.x/dusk.md:1380
#: ./docs/11.x/dusk.md:1451
#: ./docs/master/dusk.md:1431
msgctxt "H4"
msgid "assertDontSee"
msgstr ""

#: ./docs/8.x/dusk.md:1145
#: ./docs/9.x/dusk.md:1277
#: ./docs/10.x/dusk.md:1382
#: ./docs/11.x/dusk.md:1453
#: ./docs/master/dusk.md:1433
msgctxt "P"
msgid "Assert that the given text is not present on the page:"
msgstr ""

#: ./docs/8.x/dusk.md:1147
#: ./docs/9.x/dusk.md:1279
#: ./docs/10.x/dusk.md:1384
#: ./docs/11.x/dusk.md:1455
#: ./docs/master/dusk.md:1435
msgctxt "CODE"
msgid "$browser->assertDontSee($text);"
msgstr ""

#: ./docs/8.x/dusk.md:1149
#: ./docs/9.x/dusk.md:1281
#: ./docs/10.x/dusk.md:1386
#: ./docs/11.x/dusk.md:1457
#: ./docs/master/dusk.md:1437
#~ msgctxt "P"
#~ msgid "<a name=\"assert-see-in\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1150
#: ./docs/9.x/dusk.md:1282
#: ./docs/10.x/dusk.md:1387
#: ./docs/11.x/dusk.md:1458
#: ./docs/master/dusk.md:1438
msgctxt "H4"
msgid "assertSeeIn"
msgstr ""

#: ./docs/8.x/dusk.md:1152
#: ./docs/9.x/dusk.md:1284
#: ./docs/10.x/dusk.md:1389
#: ./docs/11.x/dusk.md:1460
#: ./docs/master/dusk.md:1440
msgctxt "P"
msgid "Assert that the given text is present within the selector:"
msgstr ""

#: ./docs/8.x/dusk.md:1154
#: ./docs/9.x/dusk.md:1286
#: ./docs/10.x/dusk.md:1391
#: ./docs/11.x/dusk.md:1462
#: ./docs/master/dusk.md:1442
msgctxt "CODE"
msgid "$browser->assertSeeIn($selector, $text);"
msgstr ""

#: ./docs/8.x/dusk.md:1156
#: ./docs/9.x/dusk.md:1288
#: ./docs/10.x/dusk.md:1393
#: ./docs/11.x/dusk.md:1464
#: ./docs/master/dusk.md:1444
#~ msgctxt "P"
#~ msgid "<a name=\"assert-dont-see-in\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1157
#: ./docs/9.x/dusk.md:1289
#: ./docs/10.x/dusk.md:1394
#: ./docs/11.x/dusk.md:1465
#: ./docs/master/dusk.md:1445
msgctxt "H4"
msgid "assertDontSeeIn"
msgstr ""

#: ./docs/8.x/dusk.md:1159
#: ./docs/9.x/dusk.md:1291
#: ./docs/10.x/dusk.md:1396
#: ./docs/11.x/dusk.md:1467
#: ./docs/master/dusk.md:1447
msgctxt "P"
msgid "Assert that the given text is not present within the selector:"
msgstr ""

#: ./docs/8.x/dusk.md:1161
#: ./docs/9.x/dusk.md:1293
#: ./docs/10.x/dusk.md:1398
#: ./docs/11.x/dusk.md:1469
#: ./docs/master/dusk.md:1449
msgctxt "CODE"
msgid "$browser->assertDontSeeIn($selector, $text);"
msgstr ""

#: ./docs/8.x/dusk.md:1163
#: ./docs/9.x/dusk.md:1295
#: ./docs/10.x/dusk.md:1400
#: ./docs/11.x/dusk.md:1471
#: ./docs/master/dusk.md:1451
#~ msgctxt "P"
#~ msgid "<a name=\"assert-see-anything-in\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1164
#: ./docs/9.x/dusk.md:1296
#: ./docs/10.x/dusk.md:1401
#: ./docs/11.x/dusk.md:1472
#: ./docs/master/dusk.md:1452
msgctxt "H4"
msgid "assertSeeAnythingIn"
msgstr ""

#: ./docs/8.x/dusk.md:1166
#: ./docs/9.x/dusk.md:1298
#: ./docs/10.x/dusk.md:1403
#: ./docs/11.x/dusk.md:1474
#: ./docs/master/dusk.md:1454
msgctxt "P"
msgid "Assert that any text is present within the selector:"
msgstr ""

#: ./docs/8.x/dusk.md:1168
#: ./docs/9.x/dusk.md:1300
#: ./docs/10.x/dusk.md:1405
#: ./docs/11.x/dusk.md:1476
#: ./docs/master/dusk.md:1456
msgctxt "CODE"
msgid "$browser->assertSeeAnythingIn($selector);"
msgstr ""

#: ./docs/8.x/dusk.md:1170
#: ./docs/9.x/dusk.md:1302
#: ./docs/10.x/dusk.md:1407
#: ./docs/11.x/dusk.md:1478
#: ./docs/master/dusk.md:1458
#~ msgctxt "P"
#~ msgid "<a name=\"assert-see-nothing-in\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1171
#: ./docs/9.x/dusk.md:1303
#: ./docs/10.x/dusk.md:1408
#: ./docs/11.x/dusk.md:1479
#: ./docs/master/dusk.md:1459
msgctxt "H4"
msgid "assertSeeNothingIn"
msgstr ""

#: ./docs/8.x/dusk.md:1173
#: ./docs/9.x/dusk.md:1305
#: ./docs/10.x/dusk.md:1410
#: ./docs/11.x/dusk.md:1481
#: ./docs/master/dusk.md:1461
msgctxt "P"
msgid "Assert that no text is present within the selector:"
msgstr ""

#: ./docs/8.x/dusk.md:1175
#: ./docs/9.x/dusk.md:1307
#: ./docs/10.x/dusk.md:1412
#: ./docs/11.x/dusk.md:1483
#: ./docs/master/dusk.md:1463
msgctxt "CODE"
msgid "$browser->assertSeeNothingIn($selector);"
msgstr ""

#: ./docs/11.x/dusk.md:1177
msgctxt "P"
msgid "[assertTitle](#assert-title)\n"
"[assertTitleContains](#assert-title-contains)\n"
"[assertUrlIs](#assert-url-is)\n"
"[assertSchemeIs](#assert-scheme-is)\n"
"[assertSchemeIsNot](#assert-scheme-is-not)\n"
"[assertHostIs](#assert-host-is)\n"
"[assertHostIsNot](#assert-host-is-not)\n"
"[assertPortIs](#assert-port-is)\n"
"[assertPortIsNot](#assert-port-is-not)\n"
"[assertPathBeginsWith](#assert-path-begins-with)\n"
"[assertPathEndsWith](#assert-path-ends-with)\n"
"[assertPathContains](#assert-path-contains)\n"
"[assertPathIs](#assert-path-is)\n"
"[assertPathIsNot](#assert-path-is-not)\n"
"[assertRouteIs](#assert-route-is)\n"
"[assertQueryStringHas](#assert-query-string-has)\n"
"[assertQueryStringMissing](#assert-query-string-missing)\n"
"[assertFragmentIs](#assert-fragment-is)\n"
"[assertFragmentBeginsWith](#assert-fragment-begins-with)\n"
"[assertFragmentIsNot](#assert-fragment-is-not)\n"
"[assertHasCookie](#assert-has-cookie)\n"
"[assertHasPlainCookie](#assert-has-plain-cookie)\n"
"[assertCookieMissing](#assert-cookie-missing)\n"
"[assertPlainCookieMissing](#assert-plain-cookie-missing)\n"
"[assertCookieValue](#assert-cookie-value)\n"
"[assertPlainCookieValue](#assert-plain-cookie-value)\n"
"[assertSee](#assert-see)\n"
"[assertDontSee](#assert-dont-see)\n"
"[assertSeeIn](#assert-see-in)\n"
"[assertDontSeeIn](#assert-dont-see-in)\n"
"[assertSeeAnythingIn](#assert-see-anything-in)\n"
"[assertSeeNothingIn](#assert-see-nothing-in)\n"
"[assertScript](#assert-script)\n"
"[assertSourceHas](#assert-source-has)\n"
"[assertSourceMissing](#assert-source-missing)\n"
"[assertSeeLink](#assert-see-link)\n"
"[assertDontSeeLink](#assert-dont-see-link)\n"
"[assertInputValue](#assert-input-value)\n"
"[assertInputValueIsNot](#assert-input-value-is-not)\n"
"[assertChecked](#assert-checked)\n"
"[assertNotChecked](#assert-not-checked)\n"
"[assertIndeterminate](#assert-indeterminate)\n"
"[assertRadioSelected](#assert-radio-selected)\n"
"[assertRadioNotSelected](#assert-radio-not-selected)\n"
"[assertSelected](#assert-selected)\n"
"[assertNotSelected](#assert-not-selected)\n"
"[assertSelectHasOptions](#assert-select-has-options)\n"
"[assertSelectMissingOptions](#assert-select-missing-options)\n"
"[assertSelectHasOption](#assert-select-has-option)\n"
"[assertSelectMissingOption](#assert-select-missing-option)\n"
"[assertValue](#assert-value)\n"
"[assertValueIsNot](#assert-value-is-not)\n"
"[assertAttribute](#assert-attribute)\n"
"[assertAttributeContains](#assert-attribute-contains)\n"
"[assertAttributeDoesntContain](#assert-attribute-doesnt-contain)\n"
"[assertAriaAttribute](#assert-aria-attribute)\n"
"[assertDataAttribute](#assert-data-attribute)\n"
"[assertVisible](#assert-visible)\n"
"[assertPresent](#assert-present)\n"
"[assertNotPresent](#assert-not-present)\n"
"[assertMissing](#assert-missing)\n"
"[assertInputPresent](#assert-input-present)\n"
"[assertInputMissing](#assert-input-missing)\n"
"[assertDialogOpened](#assert-dialog-opened)\n"
"[assertEnabled](#assert-enabled)\n"
"[assertDisabled](#assert-disabled)\n"
"[assertButtonEnabled](#assert-button-enabled)\n"
"[assertButtonDisabled](#assert-button-disabled)\n"
"[assertFocused](#assert-focused)\n"
"[assertNotFocused](#assert-not-focused)\n"
"[assertAuthenticated](#assert-authenticated)\n"
"[assertGuest](#assert-guest)\n"
"[assertAuthenticatedAs](#assert-authenticated-as)\n"
"[assertVue](#assert-vue)\n"
"[assertVueIsNot](#assert-vue-is-not)\n"
"[assertVueContains](#assert-vue-contains)\n"
"[assertVueDoesntContain](#assert-vue-doesnt-contain)"
msgstr ""

#: ./docs/8.x/dusk.md:1177
#: ./docs/9.x/dusk.md:1309
#: ./docs/10.x/dusk.md:1414
#: ./docs/11.x/dusk.md:1485
#: ./docs/master/dusk.md:1465
#~ msgctxt "P"
#~ msgid "<a name=\"assert-script\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1178
#: ./docs/9.x/dusk.md:1310
#: ./docs/10.x/dusk.md:1415
#: ./docs/11.x/dusk.md:1486
#: ./docs/master/dusk.md:1466
msgctxt "H4"
msgid "assertScript"
msgstr ""

#: ./docs/8.x/dusk.md:1180
#: ./docs/9.x/dusk.md:1312
#: ./docs/10.x/dusk.md:1417
#: ./docs/11.x/dusk.md:1488
#: ./docs/master/dusk.md:1468
msgctxt "P"
msgid "Assert that the given JavaScript expression evaluates to the given value:"
msgstr ""

#: ./docs/8.x/dusk.md:1182
#: ./docs/9.x/dusk.md:1314
#: ./docs/10.x/dusk.md:1419
#: ./docs/11.x/dusk.md:1490
#: ./docs/master/dusk.md:1470
msgctxt "CODE"
msgid "$browser->assertScript('window.isLoaded')\n"
"        ->assertScript('document.readyState', 'complete');"
msgstr ""

#: ./docs/8.x/dusk.md:1185
#: ./docs/9.x/dusk.md:1317
#: ./docs/10.x/dusk.md:1422
#: ./docs/11.x/dusk.md:1493
#: ./docs/master/dusk.md:1473
#~ msgctxt "P"
#~ msgid "<a name=\"assert-source-has\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1186
#: ./docs/9.x/dusk.md:1318
#: ./docs/10.x/dusk.md:1423
#: ./docs/11.x/dusk.md:1494
#: ./docs/master/dusk.md:1474
msgctxt "H4"
msgid "assertSourceHas"
msgstr ""

#: ./docs/8.x/dusk.md:1188
#: ./docs/9.x/dusk.md:1320
#: ./docs/10.x/dusk.md:1425
#: ./docs/11.x/dusk.md:1496
#: ./docs/master/dusk.md:1476
msgctxt "P"
msgid "Assert that the given source code is present on the page:"
msgstr ""

#: ./docs/8.x/dusk.md:1190
#: ./docs/9.x/dusk.md:1322
#: ./docs/10.x/dusk.md:1427
#: ./docs/11.x/dusk.md:1498
#: ./docs/master/dusk.md:1478
msgctxt "CODE"
msgid "$browser->assertSourceHas($code);"
msgstr ""

#: ./docs/8.x/dusk.md:1192
#: ./docs/9.x/dusk.md:1324
#: ./docs/10.x/dusk.md:1429
#: ./docs/11.x/dusk.md:1500
#: ./docs/master/dusk.md:1480
#~ msgctxt "P"
#~ msgid "<a name=\"assert-source-missing\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1193
#: ./docs/9.x/dusk.md:1325
#: ./docs/10.x/dusk.md:1430
#: ./docs/11.x/dusk.md:1501
#: ./docs/master/dusk.md:1481
msgctxt "H4"
msgid "assertSourceMissing"
msgstr ""

#: ./docs/8.x/dusk.md:1195
#: ./docs/9.x/dusk.md:1327
#: ./docs/10.x/dusk.md:1432
#: ./docs/11.x/dusk.md:1503
#: ./docs/master/dusk.md:1483
msgctxt "P"
msgid "Assert that the given source code is not present on the page:"
msgstr ""

#: ./docs/8.x/dusk.md:1197
#: ./docs/9.x/dusk.md:1329
#: ./docs/10.x/dusk.md:1434
#: ./docs/11.x/dusk.md:1505
#: ./docs/master/dusk.md:1485
msgctxt "CODE"
msgid "$browser->assertSourceMissing($code);"
msgstr ""

#: ./docs/8.x/dusk.md:1199
#: ./docs/9.x/dusk.md:1331
#: ./docs/10.x/dusk.md:1436
#: ./docs/11.x/dusk.md:1507
#: ./docs/master/dusk.md:1487
#~ msgctxt "P"
#~ msgid "<a name=\"assert-see-link\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1200
#: ./docs/9.x/dusk.md:1332
#: ./docs/10.x/dusk.md:1437
#: ./docs/11.x/dusk.md:1508
#: ./docs/master/dusk.md:1488
msgctxt "H4"
msgid "assertSeeLink"
msgstr ""

#: ./docs/8.x/dusk.md:1202
#: ./docs/9.x/dusk.md:1334
#: ./docs/10.x/dusk.md:1439
#: ./docs/11.x/dusk.md:1510
#: ./docs/master/dusk.md:1490
msgctxt "P"
msgid "Assert that the given link is present on the page:"
msgstr ""

#: ./docs/8.x/dusk.md:1204
#: ./docs/9.x/dusk.md:1336
#: ./docs/10.x/dusk.md:1441
#: ./docs/11.x/dusk.md:1512
#: ./docs/master/dusk.md:1492
msgctxt "CODE"
msgid "$browser->assertSeeLink($linkText);"
msgstr ""

#: ./docs/8.x/dusk.md:1206
#: ./docs/9.x/dusk.md:1338
#: ./docs/10.x/dusk.md:1443
#: ./docs/11.x/dusk.md:1514
#: ./docs/master/dusk.md:1494
#~ msgctxt "P"
#~ msgid "<a name=\"assert-dont-see-link\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1207
#: ./docs/9.x/dusk.md:1339
#: ./docs/10.x/dusk.md:1444
#: ./docs/11.x/dusk.md:1515
#: ./docs/master/dusk.md:1495
msgctxt "H4"
msgid "assertDontSeeLink"
msgstr ""

#: ./docs/8.x/dusk.md:1209
#: ./docs/9.x/dusk.md:1341
#: ./docs/10.x/dusk.md:1446
#: ./docs/11.x/dusk.md:1517
#: ./docs/master/dusk.md:1497
msgctxt "P"
msgid "Assert that the given link is not present on the page:"
msgstr ""

#: ./docs/8.x/dusk.md:1211
#: ./docs/9.x/dusk.md:1343
#: ./docs/10.x/dusk.md:1448
#: ./docs/11.x/dusk.md:1519
#: ./docs/master/dusk.md:1499
msgctxt "CODE"
msgid "$browser->assertDontSeeLink($linkText);"
msgstr ""

#: ./docs/8.x/dusk.md:1213
#: ./docs/9.x/dusk.md:1345
#: ./docs/10.x/dusk.md:1450
#: ./docs/11.x/dusk.md:1521
#: ./docs/master/dusk.md:1501
#~ msgctxt "P"
#~ msgid "<a name=\"assert-input-value\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1214
#: ./docs/9.x/dusk.md:1346
#: ./docs/10.x/dusk.md:1451
#: ./docs/11.x/dusk.md:1522
#: ./docs/master/dusk.md:1502
msgctxt "H4"
msgid "assertInputValue"
msgstr ""

#: ./docs/8.x/dusk.md:1216
#: ./docs/9.x/dusk.md:1348
#: ./docs/10.x/dusk.md:1453
#: ./docs/11.x/dusk.md:1524
#: ./docs/master/dusk.md:1504
msgctxt "P"
msgid "Assert that the given input field has the given value:"
msgstr ""

#: ./docs/8.x/dusk.md:1218
#: ./docs/9.x/dusk.md:1350
#: ./docs/10.x/dusk.md:1455
#: ./docs/11.x/dusk.md:1526
#: ./docs/master/dusk.md:1506
msgctxt "CODE"
msgid "$browser->assertInputValue($field, $value);"
msgstr ""

#: ./docs/8.x/dusk.md:1220
#: ./docs/9.x/dusk.md:1352
#: ./docs/10.x/dusk.md:1457
#: ./docs/11.x/dusk.md:1528
#: ./docs/master/dusk.md:1508
#~ msgctxt "P"
#~ msgid "<a name=\"assert-input-value-is-not\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1221
#: ./docs/9.x/dusk.md:1353
#: ./docs/10.x/dusk.md:1458
#: ./docs/11.x/dusk.md:1529
#: ./docs/master/dusk.md:1509
msgctxt "H4"
msgid "assertInputValueIsNot"
msgstr ""

#: ./docs/8.x/dusk.md:1223
#: ./docs/9.x/dusk.md:1355
#: ./docs/10.x/dusk.md:1460
#: ./docs/11.x/dusk.md:1531
#: ./docs/master/dusk.md:1511
msgctxt "P"
msgid "Assert that the given input field does not have the given value:"
msgstr ""

#: ./docs/8.x/dusk.md:1225
#: ./docs/9.x/dusk.md:1357
#: ./docs/10.x/dusk.md:1462
#: ./docs/11.x/dusk.md:1533
#: ./docs/master/dusk.md:1513
msgctxt "CODE"
msgid "$browser->assertInputValueIsNot($field, $value);"
msgstr ""

#: ./docs/8.x/dusk.md:1227
#: ./docs/9.x/dusk.md:1359
#: ./docs/10.x/dusk.md:1464
#: ./docs/11.x/dusk.md:1535
#: ./docs/master/dusk.md:1515
#~ msgctxt "P"
#~ msgid "<a name=\"assert-checked\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1228
#: ./docs/9.x/dusk.md:1360
#: ./docs/10.x/dusk.md:1465
#: ./docs/11.x/dusk.md:1536
#: ./docs/master/dusk.md:1516
msgctxt "H4"
msgid "assertChecked"
msgstr ""

#: ./docs/8.x/dusk.md:1230
#: ./docs/9.x/dusk.md:1362
#: ./docs/10.x/dusk.md:1467
#: ./docs/11.x/dusk.md:1538
#: ./docs/master/dusk.md:1518
msgctxt "P"
msgid "Assert that the given checkbox is checked:"
msgstr ""

#: ./docs/8.x/dusk.md:1232
#: ./docs/9.x/dusk.md:1364
#: ./docs/10.x/dusk.md:1469
#: ./docs/11.x/dusk.md:1540
#: ./docs/master/dusk.md:1520
msgctxt "CODE"
msgid "$browser->assertChecked($field);"
msgstr ""

#: ./docs/8.x/dusk.md:1234
#: ./docs/9.x/dusk.md:1366
#: ./docs/10.x/dusk.md:1471
#: ./docs/11.x/dusk.md:1542
#: ./docs/master/dusk.md:1522
#~ msgctxt "P"
#~ msgid "<a name=\"assert-not-checked\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1235
#: ./docs/9.x/dusk.md:1367
#: ./docs/10.x/dusk.md:1472
#: ./docs/11.x/dusk.md:1543
#: ./docs/master/dusk.md:1523
msgctxt "H4"
msgid "assertNotChecked"
msgstr ""

#: ./docs/8.x/dusk.md:1237
#: ./docs/9.x/dusk.md:1369
#: ./docs/10.x/dusk.md:1474
#: ./docs/11.x/dusk.md:1545
#: ./docs/master/dusk.md:1525
msgctxt "P"
msgid "Assert that the given checkbox is not checked:"
msgstr ""

#: ./docs/8.x/dusk.md:1239
#: ./docs/9.x/dusk.md:1371
#: ./docs/10.x/dusk.md:1476
#: ./docs/11.x/dusk.md:1547
#: ./docs/master/dusk.md:1527
msgctxt "CODE"
msgid "$browser->assertNotChecked($field);"
msgstr ""

#: ./docs/8.x/dusk.md:1241
#: ./docs/9.x/dusk.md:1380
#: ./docs/10.x/dusk.md:1485
#: ./docs/11.x/dusk.md:1556
#: ./docs/master/dusk.md:1536
#~ msgctxt "P"
#~ msgid "<a name=\"assert-radio-selected\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1242
#: ./docs/9.x/dusk.md:1381
#: ./docs/10.x/dusk.md:1486
#: ./docs/11.x/dusk.md:1557
#: ./docs/master/dusk.md:1537
msgctxt "H4"
msgid "assertRadioSelected"
msgstr ""

#: ./docs/8.x/dusk.md:1244
#: ./docs/9.x/dusk.md:1383
#: ./docs/10.x/dusk.md:1488
#: ./docs/11.x/dusk.md:1559
#: ./docs/master/dusk.md:1539
msgctxt "P"
msgid "Assert that the given radio field is selected:"
msgstr ""

#: ./docs/8.x/dusk.md:1246
#: ./docs/9.x/dusk.md:1385
#: ./docs/10.x/dusk.md:1490
#: ./docs/11.x/dusk.md:1561
#: ./docs/master/dusk.md:1541
msgctxt "CODE"
msgid "$browser->assertRadioSelected($field, $value);"
msgstr ""

#: ./docs/8.x/dusk.md:1248
#: ./docs/9.x/dusk.md:1387
#: ./docs/10.x/dusk.md:1492
#: ./docs/11.x/dusk.md:1563
#: ./docs/master/dusk.md:1543
#~ msgctxt "P"
#~ msgid "<a name=\"assert-radio-not-selected\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1249
#: ./docs/9.x/dusk.md:1388
#: ./docs/10.x/dusk.md:1493
#: ./docs/11.x/dusk.md:1564
#: ./docs/master/dusk.md:1544
msgctxt "H4"
msgid "assertRadioNotSelected"
msgstr ""

#: ./docs/8.x/dusk.md:1251
#: ./docs/9.x/dusk.md:1390
#: ./docs/10.x/dusk.md:1495
#: ./docs/11.x/dusk.md:1566
#: ./docs/master/dusk.md:1546
msgctxt "P"
msgid "Assert that the given radio field is not selected:"
msgstr ""

#: ./docs/8.x/dusk.md:1253
#: ./docs/9.x/dusk.md:1392
#: ./docs/10.x/dusk.md:1497
#: ./docs/11.x/dusk.md:1568
#: ./docs/master/dusk.md:1548
msgctxt "CODE"
msgid "$browser->assertRadioNotSelected($field, $value);"
msgstr ""

#: ./docs/8.x/dusk.md:1255
#: ./docs/9.x/dusk.md:1394
#: ./docs/10.x/dusk.md:1499
#: ./docs/11.x/dusk.md:1570
#: ./docs/master/dusk.md:1550
#~ msgctxt "P"
#~ msgid "<a name=\"assert-selected\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1256
#: ./docs/9.x/dusk.md:1395
#: ./docs/10.x/dusk.md:1500
#: ./docs/11.x/dusk.md:1571
#: ./docs/master/dusk.md:1551
msgctxt "H4"
msgid "assertSelected"
msgstr ""

#: ./docs/8.x/dusk.md:1258
#: ./docs/9.x/dusk.md:1397
#: ./docs/10.x/dusk.md:1502
#: ./docs/11.x/dusk.md:1573
#: ./docs/master/dusk.md:1553
msgctxt "P"
msgid "Assert that the given dropdown has the given value selected:"
msgstr ""

#: ./docs/8.x/dusk.md:1260
#: ./docs/9.x/dusk.md:1399
#: ./docs/10.x/dusk.md:1504
#: ./docs/11.x/dusk.md:1575
#: ./docs/master/dusk.md:1555
msgctxt "CODE"
msgid "$browser->assertSelected($field, $value);"
msgstr ""

#: ./docs/8.x/dusk.md:1262
#: ./docs/9.x/dusk.md:1401
#: ./docs/10.x/dusk.md:1506
#: ./docs/11.x/dusk.md:1577
#: ./docs/master/dusk.md:1557
#~ msgctxt "P"
#~ msgid "<a name=\"assert-not-selected\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1263
#: ./docs/9.x/dusk.md:1402
#: ./docs/10.x/dusk.md:1507
#: ./docs/11.x/dusk.md:1578
#: ./docs/master/dusk.md:1558
msgctxt "H4"
msgid "assertNotSelected"
msgstr ""

#: ./docs/8.x/dusk.md:1265
#: ./docs/9.x/dusk.md:1404
#: ./docs/10.x/dusk.md:1509
#: ./docs/11.x/dusk.md:1580
#: ./docs/master/dusk.md:1560
msgctxt "P"
msgid "Assert that the given dropdown does not have the given value selected:"
msgstr ""

#: ./docs/8.x/dusk.md:1267
#: ./docs/9.x/dusk.md:1406
#: ./docs/10.x/dusk.md:1511
#: ./docs/11.x/dusk.md:1582
#: ./docs/master/dusk.md:1562
msgctxt "CODE"
msgid "$browser->assertNotSelected($field, $value);"
msgstr ""

#: ./docs/8.x/dusk.md:1269
#: ./docs/9.x/dusk.md:1408
#: ./docs/10.x/dusk.md:1513
#: ./docs/11.x/dusk.md:1584
#: ./docs/master/dusk.md:1564
#~ msgctxt "P"
#~ msgid "<a name=\"assert-select-has-options\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1270
#: ./docs/9.x/dusk.md:1409
#: ./docs/10.x/dusk.md:1514
#: ./docs/11.x/dusk.md:1585
#: ./docs/master/dusk.md:1565
msgctxt "H4"
msgid "assertSelectHasOptions"
msgstr ""

#: ./docs/8.x/dusk.md:1272
#: ./docs/9.x/dusk.md:1411
#: ./docs/10.x/dusk.md:1516
#: ./docs/11.x/dusk.md:1587
#: ./docs/master/dusk.md:1567
msgctxt "P"
msgid "Assert that the given array of values are available to be selected:"
msgstr ""

#: ./docs/8.x/dusk.md:1274
#: ./docs/9.x/dusk.md:1413
#: ./docs/10.x/dusk.md:1518
#: ./docs/11.x/dusk.md:1589
#: ./docs/master/dusk.md:1569
msgctxt "CODE"
msgid "$browser->assertSelectHasOptions($field, $values);"
msgstr ""

#: ./docs/8.x/dusk.md:1276
#: ./docs/9.x/dusk.md:1415
#: ./docs/10.x/dusk.md:1520
#: ./docs/11.x/dusk.md:1591
#: ./docs/master/dusk.md:1571
#~ msgctxt "P"
#~ msgid "<a name=\"assert-select-missing-options\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1277
#: ./docs/9.x/dusk.md:1416
#: ./docs/10.x/dusk.md:1521
#: ./docs/11.x/dusk.md:1592
#: ./docs/master/dusk.md:1572
msgctxt "H4"
msgid "assertSelectMissingOptions"
msgstr ""

#: ./docs/8.x/dusk.md:1279
#: ./docs/9.x/dusk.md:1418
#: ./docs/10.x/dusk.md:1523
#: ./docs/11.x/dusk.md:1594
#: ./docs/master/dusk.md:1574
msgctxt "P"
msgid "Assert that the given array of values are not available to be selected:"
msgstr ""

#: ./docs/8.x/dusk.md:1281
#: ./docs/9.x/dusk.md:1420
#: ./docs/10.x/dusk.md:1525
#: ./docs/11.x/dusk.md:1596
#: ./docs/master/dusk.md:1576
msgctxt "CODE"
msgid "$browser->assertSelectMissingOptions($field, $values);"
msgstr ""

#: ./docs/8.x/dusk.md:1283
#: ./docs/9.x/dusk.md:1422
#: ./docs/10.x/dusk.md:1527
#: ./docs/11.x/dusk.md:1598
#: ./docs/master/dusk.md:1578
#~ msgctxt "P"
#~ msgid "<a name=\"assert-select-has-option\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1284
#: ./docs/9.x/dusk.md:1423
#: ./docs/10.x/dusk.md:1528
#: ./docs/11.x/dusk.md:1599
#: ./docs/master/dusk.md:1579
msgctxt "H4"
msgid "assertSelectHasOption"
msgstr ""

#: ./docs/8.x/dusk.md:1286
#: ./docs/9.x/dusk.md:1425
#: ./docs/10.x/dusk.md:1530
#: ./docs/11.x/dusk.md:1601
#: ./docs/master/dusk.md:1581
msgctxt "P"
msgid "Assert that the given value is available to be selected on the given field:"
msgstr ""

#: ./docs/8.x/dusk.md:1288
#: ./docs/9.x/dusk.md:1427
#: ./docs/10.x/dusk.md:1532
#: ./docs/11.x/dusk.md:1603
#: ./docs/master/dusk.md:1583
msgctxt "CODE"
msgid "$browser->assertSelectHasOption($field, $value);"
msgstr ""

#: ./docs/8.x/dusk.md:1290
#: ./docs/9.x/dusk.md:1429
#: ./docs/10.x/dusk.md:1534
#: ./docs/11.x/dusk.md:1605
#: ./docs/master/dusk.md:1585
#~ msgctxt "P"
#~ msgid "<a name=\"assert-select-missing-option\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1291
#: ./docs/9.x/dusk.md:1430
#: ./docs/10.x/dusk.md:1535
#: ./docs/11.x/dusk.md:1606
#: ./docs/master/dusk.md:1586
msgctxt "H4"
msgid "assertSelectMissingOption"
msgstr ""

#: ./docs/8.x/dusk.md:1293
#: ./docs/9.x/dusk.md:1432
#: ./docs/10.x/dusk.md:1537
#: ./docs/11.x/dusk.md:1608
#: ./docs/master/dusk.md:1588
msgctxt "P"
msgid "Assert that the given value is not available to be selected:"
msgstr ""

#: ./docs/8.x/dusk.md:1295
#: ./docs/9.x/dusk.md:1434
#: ./docs/10.x/dusk.md:1539
#: ./docs/11.x/dusk.md:1610
#: ./docs/master/dusk.md:1590
msgctxt "CODE"
msgid "$browser->assertSelectMissingOption($field, $value);"
msgstr ""

#: ./docs/8.x/dusk.md:1297
#: ./docs/9.x/dusk.md:1436
#: ./docs/10.x/dusk.md:1541
#: ./docs/11.x/dusk.md:1612
#: ./docs/master/dusk.md:1592
#~ msgctxt "P"
#~ msgid "<a name=\"assert-value\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1298
#: ./docs/9.x/dusk.md:1437
#: ./docs/10.x/dusk.md:1542
#: ./docs/11.x/dusk.md:1613
#: ./docs/master/dusk.md:1593
msgctxt "H4"
msgid "assertValue"
msgstr ""

#: ./docs/8.x/dusk.md:1300
#: ./docs/9.x/dusk.md:1439
#: ./docs/10.x/dusk.md:1544
#: ./docs/11.x/dusk.md:1615
#: ./docs/master/dusk.md:1595
msgctxt "P"
msgid "Assert that the element matching the given selector has the given value:"
msgstr ""

#: ./docs/8.x/dusk.md:1302
#: ./docs/9.x/dusk.md:1441
#: ./docs/10.x/dusk.md:1546
#: ./docs/11.x/dusk.md:1617
#: ./docs/master/dusk.md:1597
msgctxt "CODE"
msgid "$browser->assertValue($selector, $value);"
msgstr ""

#: ./docs/8.x/dusk.md:1304
#: ./docs/9.x/dusk.md:1443
#: ./docs/10.x/dusk.md:1548
#: ./docs/11.x/dusk.md:1619
#: ./docs/master/dusk.md:1599
#~ msgctxt "P"
#~ msgid "<a name=\"assert-value-is-not\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1305
#: ./docs/9.x/dusk.md:1444
#: ./docs/10.x/dusk.md:1549
#: ./docs/11.x/dusk.md:1620
#: ./docs/master/dusk.md:1600
msgctxt "H4"
msgid "assertValueIsNot"
msgstr ""

#: ./docs/8.x/dusk.md:1307
#: ./docs/9.x/dusk.md:1446
#: ./docs/10.x/dusk.md:1551
#: ./docs/11.x/dusk.md:1622
#: ./docs/master/dusk.md:1602
msgctxt "P"
msgid "Assert that the element matching the given selector does not have the given value:"
msgstr ""

#: ./docs/8.x/dusk.md:1309
#: ./docs/9.x/dusk.md:1448
#: ./docs/10.x/dusk.md:1553
#: ./docs/11.x/dusk.md:1624
#: ./docs/master/dusk.md:1604
msgctxt "CODE"
msgid "$browser->assertValueIsNot($selector, $value);"
msgstr ""

#: ./docs/8.x/dusk.md:1311
#: ./docs/9.x/dusk.md:1450
#: ./docs/10.x/dusk.md:1555
#: ./docs/11.x/dusk.md:1626
#: ./docs/master/dusk.md:1606
#~ msgctxt "P"
#~ msgid "<a name=\"assert-attribute\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1312
#: ./docs/9.x/dusk.md:1451
#: ./docs/10.x/dusk.md:1556
#: ./docs/11.x/dusk.md:1627
#: ./docs/master/dusk.md:1607
msgctxt "H4"
msgid "assertAttribute"
msgstr ""

#: ./docs/8.x/dusk.md:1314
#: ./docs/9.x/dusk.md:1453
#: ./docs/10.x/dusk.md:1558
#: ./docs/11.x/dusk.md:1629
#: ./docs/master/dusk.md:1609
msgctxt "P"
msgid "Assert that the element matching the given selector has the given value in the provided attribute:"
msgstr ""

#: ./docs/8.x/dusk.md:1316
#: ./docs/9.x/dusk.md:1455
#: ./docs/10.x/dusk.md:1560
#: ./docs/11.x/dusk.md:1631
#: ./docs/master/dusk.md:1611
msgctxt "CODE"
msgid "$browser->assertAttribute($selector, $attribute, $value);"
msgstr ""

#: ./docs/8.x/dusk.md:1318
#: ./docs/9.x/dusk.md:1457
#: ./docs/10.x/dusk.md:1562
#: ./docs/11.x/dusk.md:1633
#: ./docs/master/dusk.md:1613
#~ msgctxt "P"
#~ msgid "<a name=\"assert-attribute-contains\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1319
#: ./docs/9.x/dusk.md:1458
#: ./docs/10.x/dusk.md:1563
#: ./docs/11.x/dusk.md:1634
#: ./docs/master/dusk.md:1614
msgctxt "H4"
msgid "assertAttributeContains"
msgstr ""

#: ./docs/8.x/dusk.md:1321
#: ./docs/9.x/dusk.md:1460
#: ./docs/10.x/dusk.md:1565
#: ./docs/11.x/dusk.md:1636
#: ./docs/master/dusk.md:1616
msgctxt "P"
msgid "Assert that the element matching the given selector contains the given value in the provided attribute:"
msgstr ""

#: ./docs/8.x/dusk.md:1323
#: ./docs/9.x/dusk.md:1462
#: ./docs/10.x/dusk.md:1567
#: ./docs/11.x/dusk.md:1638
#: ./docs/master/dusk.md:1618
msgctxt "CODE"
msgid "$browser->assertAttributeContains($selector, $attribute, $value);"
msgstr ""

#: ./docs/8.x/dusk.md:1325
#: ./docs/9.x/dusk.md:1464
#: ./docs/10.x/dusk.md:1576
#: ./docs/11.x/dusk.md:1647
#: ./docs/master/dusk.md:1627
#~ msgctxt "P"
#~ msgid "<a name=\"assert-aria-attribute\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1326
#: ./docs/9.x/dusk.md:1465
#: ./docs/10.x/dusk.md:1577
#: ./docs/11.x/dusk.md:1648
#: ./docs/master/dusk.md:1628
msgctxt "H4"
msgid "assertAriaAttribute"
msgstr ""

#: ./docs/11.x/dusk.md:1327
#~ msgctxt "P"
#~ msgid "<a name=\"assert-path-ends-with\"></a>"
#~ msgstr ""

#: ./docs/11.x/dusk.md:1328
msgctxt "H4"
msgid "assertPathEndsWith"
msgstr ""

#: ./docs/8.x/dusk.md:1328
#: ./docs/9.x/dusk.md:1467
#: ./docs/10.x/dusk.md:1579
#: ./docs/11.x/dusk.md:1650
#: ./docs/master/dusk.md:1630
msgctxt "P"
msgid "Assert that the element matching the given selector has the given value in the provided aria attribute:"
msgstr ""

#: ./docs/11.x/dusk.md:1330
msgctxt "P"
msgid "Assert that the current URL path ends with the given path:"
msgstr ""

#: ./docs/8.x/dusk.md:1330
#: ./docs/9.x/dusk.md:1469
#: ./docs/10.x/dusk.md:1581
#: ./docs/11.x/dusk.md:1652
#: ./docs/master/dusk.md:1632
msgctxt "CODE"
msgid "$browser->assertAriaAttribute($selector, $attribute, $value);"
msgstr ""

#: ./docs/11.x/dusk.md:1332
msgctxt "CODE"
msgid "$browser->assertPathEndsWith('/home');"
msgstr ""

#: ./docs/8.x/dusk.md:1332
#: ./docs/9.x/dusk.md:1471
#: ./docs/10.x/dusk.md:1583
#: ./docs/11.x/dusk.md:1654
#: ./docs/master/dusk.md:1634
msgctxt "P"
msgid "For example, given the markup `<button aria-label=\"Add\"></button>`, you may assert against the `aria-label` attribute like so:"
msgstr ""

#: ./docs/11.x/dusk.md:1334
#~ msgctxt "P"
#~ msgid "<a name=\"assert-path-contains\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1334
#: ./docs/9.x/dusk.md:1473
#: ./docs/10.x/dusk.md:1585
#: ./docs/11.x/dusk.md:1656
#: ./docs/master/dusk.md:1636
msgctxt "CODE"
msgid "$browser->assertAriaAttribute('button', 'label', 'Add')"
msgstr ""

#: ./docs/11.x/dusk.md:1335
msgctxt "H4"
msgid "assertPathContains"
msgstr ""

#: ./docs/8.x/dusk.md:1336
#: ./docs/9.x/dusk.md:1475
#: ./docs/10.x/dusk.md:1587
#: ./docs/11.x/dusk.md:1658
#: ./docs/master/dusk.md:1638
#~ msgctxt "P"
#~ msgid "<a name=\"assert-data-attribute\"></a>"
#~ msgstr ""

#: ./docs/11.x/dusk.md:1337
msgctxt "P"
msgid "Assert that the current URL path contains the given path:"
msgstr ""

#: ./docs/8.x/dusk.md:1337
#: ./docs/9.x/dusk.md:1476
#: ./docs/10.x/dusk.md:1588
#: ./docs/11.x/dusk.md:1659
#: ./docs/master/dusk.md:1639
msgctxt "H4"
msgid "assertDataAttribute"
msgstr ""

#: ./docs/11.x/dusk.md:1339
msgctxt "CODE"
msgid "$browser->assertPathContains('/home');"
msgstr ""

#: ./docs/8.x/dusk.md:1339
#: ./docs/9.x/dusk.md:1478
#: ./docs/10.x/dusk.md:1590
#: ./docs/11.x/dusk.md:1661
#: ./docs/master/dusk.md:1641
msgctxt "P"
msgid "Assert that the element matching the given selector has the given value in the provided data attribute:"
msgstr ""

#: ./docs/8.x/dusk.md:1341
#: ./docs/9.x/dusk.md:1480
#: ./docs/10.x/dusk.md:1592
#: ./docs/11.x/dusk.md:1663
#: ./docs/master/dusk.md:1643
msgctxt "CODE"
msgid "$browser->assertDataAttribute($selector, $attribute, $value);"
msgstr ""

#: ./docs/8.x/dusk.md:1343
#: ./docs/9.x/dusk.md:1482
#: ./docs/10.x/dusk.md:1594
#: ./docs/11.x/dusk.md:1665
#: ./docs/master/dusk.md:1645
msgctxt "P"
msgid "For example, given the markup `<tr id=\"row-1\" data-content=\"attendees\"></tr>`, you may assert against the `data-label` attribute like so:"
msgstr ""

#: ./docs/8.x/dusk.md:1345
#: ./docs/9.x/dusk.md:1484
#: ./docs/10.x/dusk.md:1596
#: ./docs/11.x/dusk.md:1667
#: ./docs/master/dusk.md:1647
msgctxt "CODE"
msgid "$browser->assertDataAttribute('#row-1', 'content', 'attendees')"
msgstr ""

#: ./docs/8.x/dusk.md:1347
#: ./docs/9.x/dusk.md:1486
#: ./docs/10.x/dusk.md:1598
#: ./docs/11.x/dusk.md:1669
#: ./docs/master/dusk.md:1649
#~ msgctxt "P"
#~ msgid "<a name=\"assert-visible\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1348
#: ./docs/9.x/dusk.md:1487
#: ./docs/10.x/dusk.md:1599
#: ./docs/11.x/dusk.md:1670
#: ./docs/master/dusk.md:1650
msgctxt "H4"
msgid "assertVisible"
msgstr ""

#: ./docs/8.x/dusk.md:1350
#: ./docs/9.x/dusk.md:1489
#: ./docs/10.x/dusk.md:1601
#: ./docs/11.x/dusk.md:1672
#: ./docs/master/dusk.md:1652
msgctxt "P"
msgid "Assert that the element matching the given selector is visible:"
msgstr ""

#: ./docs/8.x/dusk.md:1352
#: ./docs/9.x/dusk.md:1491
#: ./docs/10.x/dusk.md:1603
#: ./docs/11.x/dusk.md:1674
#: ./docs/master/dusk.md:1654
msgctxt "CODE"
msgid "$browser->assertVisible($selector);"
msgstr ""

#: ./docs/8.x/dusk.md:1354
#: ./docs/9.x/dusk.md:1493
#: ./docs/10.x/dusk.md:1605
#: ./docs/11.x/dusk.md:1676
#: ./docs/master/dusk.md:1656
#~ msgctxt "P"
#~ msgid "<a name=\"assert-present\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1355
#: ./docs/9.x/dusk.md:1494
#: ./docs/10.x/dusk.md:1606
#: ./docs/11.x/dusk.md:1677
#: ./docs/master/dusk.md:1657
msgctxt "H4"
msgid "assertPresent"
msgstr ""

#: ./docs/8.x/dusk.md:1357
#: ./docs/9.x/dusk.md:1496
#: ./docs/10.x/dusk.md:1608
#: ./docs/11.x/dusk.md:1679
#: ./docs/master/dusk.md:1659
msgctxt "P"
msgid "Assert that the element matching the given selector is present in the source:"
msgstr ""

#: ./docs/8.x/dusk.md:1359
#: ./docs/9.x/dusk.md:1498
#: ./docs/10.x/dusk.md:1610
#: ./docs/11.x/dusk.md:1681
#: ./docs/master/dusk.md:1661
msgctxt "CODE"
msgid "$browser->assertPresent($selector);"
msgstr ""

#: ./docs/8.x/dusk.md:1361
#: ./docs/9.x/dusk.md:1500
#: ./docs/10.x/dusk.md:1612
#: ./docs/11.x/dusk.md:1683
#: ./docs/master/dusk.md:1663
#~ msgctxt "P"
#~ msgid "<a name=\"assert-not-present\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1362
#: ./docs/9.x/dusk.md:1501
#: ./docs/10.x/dusk.md:1613
#: ./docs/11.x/dusk.md:1684
#: ./docs/master/dusk.md:1664
msgctxt "H4"
msgid "assertNotPresent"
msgstr ""

#: ./docs/8.x/dusk.md:1364
#: ./docs/9.x/dusk.md:1503
#: ./docs/10.x/dusk.md:1615
#: ./docs/11.x/dusk.md:1686
#: ./docs/master/dusk.md:1666
msgctxt "P"
msgid "Assert that the element matching the given selector is not present in the source:"
msgstr ""

#: ./docs/8.x/dusk.md:1366
#: ./docs/9.x/dusk.md:1505
#: ./docs/10.x/dusk.md:1617
#: ./docs/11.x/dusk.md:1688
#: ./docs/master/dusk.md:1668
msgctxt "CODE"
msgid "$browser->assertNotPresent($selector);"
msgstr ""

#: ./docs/8.x/dusk.md:1368
#: ./docs/9.x/dusk.md:1507
#: ./docs/10.x/dusk.md:1619
#: ./docs/11.x/dusk.md:1690
#: ./docs/master/dusk.md:1670
#~ msgctxt "P"
#~ msgid "<a name=\"assert-missing\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1369
#: ./docs/9.x/dusk.md:1508
#: ./docs/10.x/dusk.md:1620
#: ./docs/11.x/dusk.md:1691
#: ./docs/master/dusk.md:1671
msgctxt "H4"
msgid "assertMissing"
msgstr ""

#: ./docs/8.x/dusk.md:1371
#: ./docs/9.x/dusk.md:1510
#: ./docs/10.x/dusk.md:1622
#: ./docs/11.x/dusk.md:1693
#: ./docs/master/dusk.md:1673
msgctxt "P"
msgid "Assert that the element matching the given selector is not visible:"
msgstr ""

#: ./docs/8.x/dusk.md:1373
#: ./docs/9.x/dusk.md:1512
#: ./docs/10.x/dusk.md:1624
#: ./docs/11.x/dusk.md:1695
#: ./docs/master/dusk.md:1675
msgctxt "CODE"
msgid "$browser->assertMissing($selector);"
msgstr ""

#: ./docs/9.x/dusk.md:1373
#: ./docs/10.x/dusk.md:1478
#: ./docs/11.x/dusk.md:1549
#: ./docs/master/dusk.md:1529
#~ msgctxt "P"
#~ msgid "<a name=\"assert-indeterminate\"></a>"
#~ msgstr ""

#: ./docs/9.x/dusk.md:1374
#: ./docs/10.x/dusk.md:1479
#: ./docs/11.x/dusk.md:1550
#: ./docs/master/dusk.md:1530
msgctxt "H4"
msgid "assertIndeterminate"
msgstr ""

#: ./docs/8.x/dusk.md:1375
#: ./docs/9.x/dusk.md:1514
#: ./docs/10.x/dusk.md:1626
#: ./docs/11.x/dusk.md:1697
#: ./docs/master/dusk.md:1677
#~ msgctxt "P"
#~ msgid "<a name=\"assert-input-present\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1376
#: ./docs/9.x/dusk.md:1515
#: ./docs/10.x/dusk.md:1627
#: ./docs/11.x/dusk.md:1698
#: ./docs/master/dusk.md:1678
msgctxt "H4"
msgid "assertInputPresent"
msgstr ""

#: ./docs/9.x/dusk.md:1376
#: ./docs/10.x/dusk.md:1481
#: ./docs/11.x/dusk.md:1552
#: ./docs/master/dusk.md:1532
msgctxt "P"
msgid "Assert that the given checkbox is in an indeterminate state:"
msgstr ""

#: ./docs/8.x/dusk.md:1378
#: ./docs/9.x/dusk.md:1517
#: ./docs/10.x/dusk.md:1629
#: ./docs/11.x/dusk.md:1700
#: ./docs/master/dusk.md:1680
msgctxt "P"
msgid "Assert that an input with the given name is present:"
msgstr ""

#: ./docs/9.x/dusk.md:1378
#: ./docs/10.x/dusk.md:1483
#: ./docs/11.x/dusk.md:1554
#: ./docs/master/dusk.md:1534
msgctxt "CODE"
msgid "$browser->assertIndeterminate($field);"
msgstr ""

#: ./docs/8.x/dusk.md:1380
#: ./docs/9.x/dusk.md:1519
#: ./docs/10.x/dusk.md:1631
#: ./docs/11.x/dusk.md:1702
#: ./docs/master/dusk.md:1682
msgctxt "CODE"
msgid "$browser->assertInputPresent($name);"
msgstr ""

#: ./docs/8.x/dusk.md:1382
#: ./docs/9.x/dusk.md:1521
#: ./docs/10.x/dusk.md:1633
#: ./docs/11.x/dusk.md:1704
#: ./docs/master/dusk.md:1684
#~ msgctxt "P"
#~ msgid "<a name=\"assert-input-missing\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1383
#: ./docs/9.x/dusk.md:1522
#: ./docs/10.x/dusk.md:1634
#: ./docs/11.x/dusk.md:1705
#: ./docs/master/dusk.md:1685
msgctxt "H4"
msgid "assertInputMissing"
msgstr ""

#: ./docs/8.x/dusk.md:1385
#: ./docs/9.x/dusk.md:1524
#: ./docs/10.x/dusk.md:1636
#: ./docs/11.x/dusk.md:1707
#: ./docs/master/dusk.md:1687
msgctxt "P"
msgid "Assert that an input with the given name is not present in the source:"
msgstr ""

#: ./docs/8.x/dusk.md:1387
#: ./docs/9.x/dusk.md:1526
#: ./docs/10.x/dusk.md:1638
#: ./docs/11.x/dusk.md:1709
#: ./docs/master/dusk.md:1689
msgctxt "CODE"
msgid "$browser->assertInputMissing($name);"
msgstr ""

#: ./docs/8.x/dusk.md:1389
#: ./docs/9.x/dusk.md:1528
#: ./docs/10.x/dusk.md:1640
#: ./docs/11.x/dusk.md:1711
#: ./docs/master/dusk.md:1691
#~ msgctxt "P"
#~ msgid "<a name=\"assert-dialog-opened\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1390
#: ./docs/9.x/dusk.md:1529
#: ./docs/10.x/dusk.md:1641
#: ./docs/11.x/dusk.md:1712
#: ./docs/master/dusk.md:1692
msgctxt "H4"
msgid "assertDialogOpened"
msgstr ""

#: ./docs/8.x/dusk.md:1392
#: ./docs/9.x/dusk.md:1531
#: ./docs/10.x/dusk.md:1643
#: ./docs/11.x/dusk.md:1714
#: ./docs/master/dusk.md:1694
msgctxt "P"
msgid "Assert that a JavaScript dialog with the given message has been opened:"
msgstr ""

#: ./docs/8.x/dusk.md:1394
#: ./docs/9.x/dusk.md:1533
#: ./docs/10.x/dusk.md:1645
#: ./docs/11.x/dusk.md:1716
#: ./docs/master/dusk.md:1696
msgctxt "CODE"
msgid "$browser->assertDialogOpened($message);"
msgstr ""

#: ./docs/8.x/dusk.md:1396
#: ./docs/9.x/dusk.md:1535
#: ./docs/10.x/dusk.md:1647
#: ./docs/11.x/dusk.md:1718
#: ./docs/master/dusk.md:1698
#~ msgctxt "P"
#~ msgid "<a name=\"assert-enabled\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1397
#: ./docs/9.x/dusk.md:1536
#: ./docs/10.x/dusk.md:1648
#: ./docs/11.x/dusk.md:1719
#: ./docs/master/dusk.md:1699
msgctxt "H4"
msgid "assertEnabled"
msgstr ""

#: ./docs/8.x/dusk.md:1399
#: ./docs/9.x/dusk.md:1538
#: ./docs/10.x/dusk.md:1650
#: ./docs/11.x/dusk.md:1721
#: ./docs/master/dusk.md:1701
msgctxt "P"
msgid "Assert that the given field is enabled:"
msgstr ""

#: ./docs/8.x/dusk.md:1401
#: ./docs/9.x/dusk.md:1540
#: ./docs/10.x/dusk.md:1652
#: ./docs/11.x/dusk.md:1723
#: ./docs/master/dusk.md:1703
msgctxt "CODE"
msgid "$browser->assertEnabled($field);"
msgstr ""

#: ./docs/8.x/dusk.md:1403
#: ./docs/9.x/dusk.md:1542
#: ./docs/10.x/dusk.md:1654
#: ./docs/11.x/dusk.md:1725
#: ./docs/master/dusk.md:1705
#~ msgctxt "P"
#~ msgid "<a name=\"assert-disabled\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1404
#: ./docs/9.x/dusk.md:1543
#: ./docs/10.x/dusk.md:1655
#: ./docs/11.x/dusk.md:1726
#: ./docs/master/dusk.md:1706
msgctxt "H4"
msgid "assertDisabled"
msgstr ""

#: ./docs/8.x/dusk.md:1406
#: ./docs/9.x/dusk.md:1545
#: ./docs/10.x/dusk.md:1657
#: ./docs/11.x/dusk.md:1728
#: ./docs/master/dusk.md:1708
msgctxt "P"
msgid "Assert that the given field is disabled:"
msgstr ""

#: ./docs/8.x/dusk.md:1408
#: ./docs/9.x/dusk.md:1547
#: ./docs/10.x/dusk.md:1659
#: ./docs/11.x/dusk.md:1730
#: ./docs/master/dusk.md:1710
msgctxt "CODE"
msgid "$browser->assertDisabled($field);"
msgstr ""

#: ./docs/8.x/dusk.md:1410
#: ./docs/9.x/dusk.md:1549
#: ./docs/10.x/dusk.md:1661
#: ./docs/11.x/dusk.md:1732
#: ./docs/master/dusk.md:1712
#~ msgctxt "P"
#~ msgid "<a name=\"assert-button-enabled\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1411
#: ./docs/9.x/dusk.md:1550
#: ./docs/10.x/dusk.md:1662
#: ./docs/11.x/dusk.md:1733
#: ./docs/master/dusk.md:1713
msgctxt "H4"
msgid "assertButtonEnabled"
msgstr ""

#: ./docs/8.x/dusk.md:1413
#: ./docs/9.x/dusk.md:1552
#: ./docs/10.x/dusk.md:1664
#: ./docs/11.x/dusk.md:1735
#: ./docs/master/dusk.md:1715
msgctxt "P"
msgid "Assert that the given button is enabled:"
msgstr ""

#: ./docs/8.x/dusk.md:1415
#: ./docs/9.x/dusk.md:1554
#: ./docs/10.x/dusk.md:1666
#: ./docs/11.x/dusk.md:1737
#: ./docs/master/dusk.md:1717
msgctxt "CODE"
msgid "$browser->assertButtonEnabled($button);"
msgstr ""

#: ./docs/8.x/dusk.md:1417
#: ./docs/9.x/dusk.md:1556
#: ./docs/10.x/dusk.md:1668
#: ./docs/11.x/dusk.md:1739
#: ./docs/master/dusk.md:1719
#~ msgctxt "P"
#~ msgid "<a name=\"assert-button-disabled\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1418
#: ./docs/9.x/dusk.md:1557
#: ./docs/10.x/dusk.md:1669
#: ./docs/11.x/dusk.md:1740
#: ./docs/master/dusk.md:1720
msgctxt "H4"
msgid "assertButtonDisabled"
msgstr ""

#: ./docs/8.x/dusk.md:1420
#: ./docs/9.x/dusk.md:1559
#: ./docs/10.x/dusk.md:1671
#: ./docs/11.x/dusk.md:1742
#: ./docs/master/dusk.md:1722
msgctxt "P"
msgid "Assert that the given button is disabled:"
msgstr ""

#: ./docs/8.x/dusk.md:1422
#: ./docs/9.x/dusk.md:1561
#: ./docs/10.x/dusk.md:1673
#: ./docs/11.x/dusk.md:1744
#: ./docs/master/dusk.md:1724
msgctxt "CODE"
msgid "$browser->assertButtonDisabled($button);"
msgstr ""

#: ./docs/8.x/dusk.md:1424
#: ./docs/9.x/dusk.md:1563
#: ./docs/10.x/dusk.md:1675
#: ./docs/11.x/dusk.md:1746
#: ./docs/master/dusk.md:1726
#~ msgctxt "P"
#~ msgid "<a name=\"assert-focused\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1425
#: ./docs/9.x/dusk.md:1564
#: ./docs/10.x/dusk.md:1676
#: ./docs/11.x/dusk.md:1747
#: ./docs/master/dusk.md:1727
msgctxt "H4"
msgid "assertFocused"
msgstr ""

#: ./docs/8.x/dusk.md:1427
#: ./docs/9.x/dusk.md:1566
#: ./docs/10.x/dusk.md:1678
#: ./docs/11.x/dusk.md:1749
#: ./docs/master/dusk.md:1729
msgctxt "P"
msgid "Assert that the given field is focused:"
msgstr ""

#: ./docs/8.x/dusk.md:1429
#: ./docs/9.x/dusk.md:1568
#: ./docs/10.x/dusk.md:1680
#: ./docs/11.x/dusk.md:1751
#: ./docs/master/dusk.md:1731
msgctxt "CODE"
msgid "$browser->assertFocused($field);"
msgstr ""

#: ./docs/8.x/dusk.md:1431
#: ./docs/9.x/dusk.md:1570
#: ./docs/10.x/dusk.md:1682
#: ./docs/11.x/dusk.md:1753
#: ./docs/master/dusk.md:1733
#~ msgctxt "P"
#~ msgid "<a name=\"assert-not-focused\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1432
#: ./docs/9.x/dusk.md:1571
#: ./docs/10.x/dusk.md:1683
#: ./docs/11.x/dusk.md:1754
#: ./docs/master/dusk.md:1734
msgctxt "H4"
msgid "assertNotFocused"
msgstr ""

#: ./docs/8.x/dusk.md:1434
#: ./docs/9.x/dusk.md:1573
#: ./docs/10.x/dusk.md:1685
#: ./docs/11.x/dusk.md:1756
#: ./docs/master/dusk.md:1736
msgctxt "P"
msgid "Assert that the given field is not focused:"
msgstr ""

#: ./docs/8.x/dusk.md:1436
#: ./docs/9.x/dusk.md:1575
#: ./docs/10.x/dusk.md:1687
#: ./docs/11.x/dusk.md:1758
#: ./docs/master/dusk.md:1738
msgctxt "CODE"
msgid "$browser->assertNotFocused($field);"
msgstr ""

#: ./docs/8.x/dusk.md:1438
#: ./docs/9.x/dusk.md:1577
#: ./docs/10.x/dusk.md:1689
#: ./docs/11.x/dusk.md:1760
#: ./docs/master/dusk.md:1740
#~ msgctxt "P"
#~ msgid "<a name=\"assert-authenticated\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1439
#: ./docs/9.x/dusk.md:1578
#: ./docs/10.x/dusk.md:1690
#: ./docs/11.x/dusk.md:1761
#: ./docs/master/dusk.md:1741
msgctxt "H4"
msgid "assertAuthenticated"
msgstr ""

#: ./docs/8.x/dusk.md:1441
#: ./docs/9.x/dusk.md:1580
#: ./docs/10.x/dusk.md:1692
#: ./docs/11.x/dusk.md:1763
#: ./docs/master/dusk.md:1743
msgctxt "P"
msgid "Assert that the user is authenticated:"
msgstr ""

#: ./docs/8.x/dusk.md:1443
#: ./docs/9.x/dusk.md:1582
#: ./docs/10.x/dusk.md:1694
#: ./docs/11.x/dusk.md:1765
#: ./docs/master/dusk.md:1745
msgctxt "CODE"
msgid "$browser->assertAuthenticated();"
msgstr ""

#: ./docs/8.x/dusk.md:1445
#: ./docs/9.x/dusk.md:1584
#: ./docs/10.x/dusk.md:1696
#: ./docs/11.x/dusk.md:1767
#: ./docs/master/dusk.md:1747
#~ msgctxt "P"
#~ msgid "<a name=\"assert-guest\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1446
#: ./docs/9.x/dusk.md:1585
#: ./docs/10.x/dusk.md:1697
#: ./docs/11.x/dusk.md:1768
#: ./docs/master/dusk.md:1748
msgctxt "H4"
msgid "assertGuest"
msgstr ""

#: ./docs/8.x/dusk.md:1448
#: ./docs/9.x/dusk.md:1587
#: ./docs/10.x/dusk.md:1699
#: ./docs/11.x/dusk.md:1770
#: ./docs/master/dusk.md:1750
msgctxt "P"
msgid "Assert that the user is not authenticated:"
msgstr ""

#: ./docs/8.x/dusk.md:1450
#: ./docs/9.x/dusk.md:1589
#: ./docs/10.x/dusk.md:1701
#: ./docs/11.x/dusk.md:1772
#: ./docs/master/dusk.md:1752
msgctxt "CODE"
msgid "$browser->assertGuest();"
msgstr ""

#: ./docs/8.x/dusk.md:1452
#: ./docs/9.x/dusk.md:1591
#: ./docs/10.x/dusk.md:1703
#: ./docs/11.x/dusk.md:1774
#: ./docs/master/dusk.md:1754
#~ msgctxt "P"
#~ msgid "<a name=\"assert-authenticated-as\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1453
#: ./docs/9.x/dusk.md:1592
#: ./docs/10.x/dusk.md:1704
#: ./docs/11.x/dusk.md:1775
#: ./docs/master/dusk.md:1755
msgctxt "H4"
msgid "assertAuthenticatedAs"
msgstr ""

#: ./docs/8.x/dusk.md:1455
#: ./docs/9.x/dusk.md:1594
#: ./docs/10.x/dusk.md:1706
#: ./docs/11.x/dusk.md:1777
#: ./docs/master/dusk.md:1757
msgctxt "P"
msgid "Assert that the user is authenticated as the given user:"
msgstr ""

#: ./docs/8.x/dusk.md:1457
#: ./docs/9.x/dusk.md:1596
#: ./docs/10.x/dusk.md:1708
#: ./docs/11.x/dusk.md:1779
#: ./docs/master/dusk.md:1759
msgctxt "CODE"
msgid "$browser->assertAuthenticatedAs($user);"
msgstr ""

#: ./docs/8.x/dusk.md:1459
#: ./docs/9.x/dusk.md:1598
#: ./docs/10.x/dusk.md:1710
#: ./docs/11.x/dusk.md:1781
#: ./docs/master/dusk.md:1761
#~ msgctxt "P"
#~ msgid "<a name=\"assert-vue\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1460
#: ./docs/9.x/dusk.md:1599
#: ./docs/10.x/dusk.md:1711
#: ./docs/11.x/dusk.md:1782
#: ./docs/master/dusk.md:1762
msgctxt "H4"
msgid "assertVue"
msgstr ""

#: ./docs/8.x/dusk.md:1462
#: ./docs/9.x/dusk.md:1601
#: ./docs/10.x/dusk.md:1713
#: ./docs/11.x/dusk.md:1784
#: ./docs/master/dusk.md:1764
msgctxt "P"
msgid "Dusk even allows you to make assertions on the state of [Vue component](https://vuejs.org) data. For example, imagine your application contains the following Vue component:"
msgstr ""

#: ./docs/8.x/dusk.md:1464
#: ./docs/9.x/dusk.md:1603
#: ./docs/10.x/dusk.md:1715
#: ./docs/11.x/dusk.md:1786
#: ./docs/master/dusk.md:1766
msgctxt "CODE"
msgid "// HTML...\n\n"
"<profile dusk=\"profile-component\"></profile>\n\n"
"// Component Definition...\n\n"
"Vue.component('profile', {\n"
"    template: '<div>{{ user.name }}</div>',\n\n"
"    data: function () {\n"
"        return {\n"
"            user: {\n"
"                name: 'Taylor'\n"
"            }\n"
"        };\n"
"    }\n"
"});"
msgstr ""

#: ./docs/8.x/dusk.md:1482
#: ./docs/9.x/dusk.md:1621
#: ./docs/10.x/dusk.md:1733
#: ./docs/11.x/dusk.md:1804
#: ./docs/master/dusk.md:1784
msgctxt "P"
msgid "You may assert on the state of the Vue component like so:"
msgstr ""

#: ./docs/8.x/dusk.md:1484
#: ./docs/9.x/dusk.md:1623
msgctxt "CODE"
msgid "/**\n"
" * A basic Vue test example.\n"
" *\n"
" * @return void\n"
" */\n"
"public function testVue()\n"
"{\n"
"    $this->browse(function (Browser $browser) {\n"
"        $browser->visit('/')\n"
"                ->assertVue('user.name', 'Taylor', '@profile-component');\n"
"    });\n"
"}"
msgstr ""

#: ./docs/8.x/dusk.md:1497
#: ./docs/9.x/dusk.md:1636
#: ./docs/10.x/dusk.md:1746
#: ./docs/11.x/dusk.md:1828
#: ./docs/master/dusk.md:1808
#~ msgctxt "P"
#~ msgid "<a name=\"assert-vue-is-not\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1498
#: ./docs/9.x/dusk.md:1637
#: ./docs/10.x/dusk.md:1747
#: ./docs/11.x/dusk.md:1829
#: ./docs/master/dusk.md:1809
msgctxt "H4"
msgid "assertVueIsNot"
msgstr ""

#: ./docs/8.x/dusk.md:1500
#: ./docs/9.x/dusk.md:1639
#: ./docs/10.x/dusk.md:1749
#: ./docs/11.x/dusk.md:1831
#: ./docs/master/dusk.md:1811
msgctxt "P"
msgid "Assert that a given Vue component data property does not match the given value:"
msgstr ""

#: ./docs/8.x/dusk.md:1502
#: ./docs/9.x/dusk.md:1641
#: ./docs/10.x/dusk.md:1751
#: ./docs/11.x/dusk.md:1833
#: ./docs/master/dusk.md:1813
msgctxt "CODE"
msgid "$browser->assertVueIsNot($property, $value, $componentSelector = null);"
msgstr ""

#: ./docs/8.x/dusk.md:1504
#: ./docs/9.x/dusk.md:1643
#: ./docs/10.x/dusk.md:1753
#: ./docs/11.x/dusk.md:1835
#: ./docs/master/dusk.md:1815
#~ msgctxt "P"
#~ msgid "<a name=\"assert-vue-contains\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1505
#: ./docs/9.x/dusk.md:1644
#: ./docs/10.x/dusk.md:1754
#: ./docs/11.x/dusk.md:1836
#: ./docs/master/dusk.md:1816
msgctxt "H4"
msgid "assertVueContains"
msgstr ""

#: ./docs/8.x/dusk.md:1507
#: ./docs/9.x/dusk.md:1646
#: ./docs/10.x/dusk.md:1756
#: ./docs/11.x/dusk.md:1838
#: ./docs/master/dusk.md:1818
msgctxt "P"
msgid "Assert that a given Vue component data property is an array and contains the given value:"
msgstr ""

#: ./docs/8.x/dusk.md:1509
#: ./docs/9.x/dusk.md:1648
#: ./docs/10.x/dusk.md:1758
#: ./docs/11.x/dusk.md:1840
#: ./docs/master/dusk.md:1820
msgctxt "CODE"
msgid "$browser->assertVueContains($property, $value, $componentSelector = null);"
msgstr ""

#: ./docs/8.x/dusk.md:1511
#: ./docs/9.x/dusk.md:1650
#~ msgctxt "P"
#~ msgid "<a name=\"assert-vue-does-not-contain\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1512
#: ./docs/9.x/dusk.md:1651
msgctxt "H4"
msgid "assertVueDoesNotContain"
msgstr ""

#: ./docs/8.x/dusk.md:1514
#: ./docs/9.x/dusk.md:1653
#: ./docs/10.x/dusk.md:1763
#: ./docs/11.x/dusk.md:1845
#: ./docs/master/dusk.md:1825
msgctxt "P"
msgid "Assert that a given Vue component data property is an array and does not contain the given value:"
msgstr ""

#: ./docs/8.x/dusk.md:1516
#: ./docs/9.x/dusk.md:1655
msgctxt "CODE"
msgid "$browser->assertVueDoesNotContain($property, $value, $componentSelector = null);"
msgstr ""

#: ./docs/8.x/dusk.md:1518
#: ./docs/9.x/dusk.md:1657
#: ./docs/10.x/dusk.md:1767
#: ./docs/11.x/dusk.md:1849
#: ./docs/master/dusk.md:1829
#~ msgctxt "P"
#~ msgid "<a name=\"pages\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1519
#: ./docs/9.x/dusk.md:1658
#: ./docs/10.x/dusk.md:1768
#: ./docs/11.x/dusk.md:1850
#: ./docs/master/dusk.md:1830
msgctxt "H2"
msgid "Pages"
msgstr ""

#: ./docs/8.x/dusk.md:1521
#: ./docs/9.x/dusk.md:1660
#: ./docs/10.x/dusk.md:1770
#: ./docs/11.x/dusk.md:1852
#: ./docs/master/dusk.md:1832
msgctxt "P"
msgid "Sometimes, tests require several complicated actions to be performed in sequence. This can make your tests harder to read and understand. Dusk Pages allow you to define expressive actions that may then be performed on a given page via a single method. Pages also allow you to define short-cuts to common selectors for your application or for a single page."
msgstr ""

#: ./docs/8.x/dusk.md:1523
#: ./docs/9.x/dusk.md:1662
#: ./docs/10.x/dusk.md:1772
#: ./docs/11.x/dusk.md:1854
#: ./docs/master/dusk.md:1834
#~ msgctxt "P"
#~ msgid "<a name=\"generating-pages\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1524
#: ./docs/9.x/dusk.md:1663
#: ./docs/10.x/dusk.md:1773
#: ./docs/11.x/dusk.md:1855
#: ./docs/master/dusk.md:1835
msgctxt "H3"
msgid "Generating Pages"
msgstr ""

#: ./docs/8.x/dusk.md:1526
#: ./docs/9.x/dusk.md:1665
#: ./docs/10.x/dusk.md:1775
#: ./docs/11.x/dusk.md:1857
#: ./docs/master/dusk.md:1837
msgctxt "P"
msgid "To generate a page object, execute the `dusk:page` Artisan command. All page objects will be placed in your application's `tests/Browser/Pages` directory:"
msgstr ""

#: ./docs/8.x/dusk.md:1528
#: ./docs/9.x/dusk.md:1667
#: ./docs/10.x/dusk.md:1777
#: ./docs/11.x/dusk.md:1859
#: ./docs/master/dusk.md:1839
msgctxt "CODE"
msgid "php artisan dusk:page Login"
msgstr ""

#: ./docs/8.x/dusk.md:1530
#: ./docs/9.x/dusk.md:1669
#: ./docs/10.x/dusk.md:1779
#: ./docs/11.x/dusk.md:1861
#: ./docs/master/dusk.md:1841
#~ msgctxt "P"
#~ msgid "<a name=\"configuring-pages\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1531
#: ./docs/9.x/dusk.md:1670
#: ./docs/10.x/dusk.md:1780
#: ./docs/11.x/dusk.md:1862
#: ./docs/master/dusk.md:1842
msgctxt "H3"
msgid "Configuring Pages"
msgstr ""

#: ./docs/8.x/dusk.md:1533
#: ./docs/9.x/dusk.md:1672
#: ./docs/10.x/dusk.md:1782
#: ./docs/11.x/dusk.md:1864
#: ./docs/master/dusk.md:1844
msgctxt "P"
msgid "By default, pages have three methods: `url`, `assert`, and `elements`. We will discuss the `url` and `assert` methods now. The `elements` method will be [discussed in more detail below](#shorthand-selectors)."
msgstr ""

#: ./docs/8.x/dusk.md:1535
#: ./docs/9.x/dusk.md:1674
#: ./docs/10.x/dusk.md:1784
#: ./docs/11.x/dusk.md:1866
#: ./docs/master/dusk.md:1846
#~ msgctxt "P"
#~ msgid "<a name=\"the-url-method\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1536
#: ./docs/9.x/dusk.md:1675
#: ./docs/10.x/dusk.md:1785
#: ./docs/11.x/dusk.md:1867
#: ./docs/master/dusk.md:1847
msgctxt "H4"
msgid "The `url` Method"
msgstr ""

#: ./docs/8.x/dusk.md:1538
#: ./docs/9.x/dusk.md:1677
#: ./docs/10.x/dusk.md:1787
#: ./docs/11.x/dusk.md:1869
#: ./docs/master/dusk.md:1849
msgctxt "P"
msgid "The `url` method should return the path of the URL that represents the page. Dusk will use this URL when navigating to the page in the browser:"
msgstr ""

#: ./docs/8.x/dusk.md:1540
#: ./docs/9.x/dusk.md:1679
msgctxt "CODE"
msgid "/**\n"
" * Get the URL for the page.\n"
" *\n"
" * @return string\n"
" */\n"
"public function url()\n"
"{\n"
"    return '/login';\n"
"}"
msgstr ""

#: ./docs/8.x/dusk.md:1550
#: ./docs/9.x/dusk.md:1689
#: ./docs/10.x/dusk.md:1797
#: ./docs/11.x/dusk.md:1879
#: ./docs/master/dusk.md:1859
#~ msgctxt "P"
#~ msgid "<a name=\"the-assert-method\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1551
#: ./docs/9.x/dusk.md:1690
#: ./docs/10.x/dusk.md:1798
#: ./docs/11.x/dusk.md:1880
#: ./docs/master/dusk.md:1860
msgctxt "H4"
msgid "The `assert` Method"
msgstr ""

#: ./docs/8.x/dusk.md:1553
#: ./docs/9.x/dusk.md:1692
#: ./docs/10.x/dusk.md:1800
#: ./docs/11.x/dusk.md:1882
#: ./docs/master/dusk.md:1862
msgctxt "P"
msgid "The `assert` method may make any assertions necessary to verify that the browser is actually on the given page. It is not actually necessary to place anything within this method; however, you are free to make these assertions if you wish. These assertions will be run automatically when navigating to the page:"
msgstr ""

#: ./docs/8.x/dusk.md:1555
#: ./docs/9.x/dusk.md:1694
msgctxt "CODE"
msgid "/**\n"
" * Assert that the browser is on the page.\n"
" *\n"
" * @return void\n"
" */\n"
"public function assert(Browser $browser)\n"
"{\n"
"    $browser->assertPathIs($this->url());\n"
"}"
msgstr ""

#: ./docs/8.x/dusk.md:1565
#: ./docs/9.x/dusk.md:1704
#: ./docs/10.x/dusk.md:1810
#: ./docs/11.x/dusk.md:1892
#: ./docs/master/dusk.md:1872
#~ msgctxt "P"
#~ msgid "<a name=\"navigating-to-pages\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1566
#: ./docs/9.x/dusk.md:1705
msgctxt "H3"
msgid "Navigating To Pages"
msgstr ""

#: ./docs/8.x/dusk.md:1568
#: ./docs/9.x/dusk.md:1707
#: ./docs/10.x/dusk.md:1813
#: ./docs/11.x/dusk.md:1895
#: ./docs/master/dusk.md:1875
msgctxt "P"
msgid "Once a page has been defined, you may navigate to it using the `visit` method:"
msgstr ""

#: ./docs/10.x/dusk.md:1569
#: ./docs/11.x/dusk.md:1640
#: ./docs/master/dusk.md:1620
#~ msgctxt "P"
#~ msgid "<a name=\"assert-attribute-doesnt-contain\"></a>"
#~ msgstr ""

#: ./docs/10.x/dusk.md:1570
#: ./docs/11.x/dusk.md:1641
#: ./docs/master/dusk.md:1621
msgctxt "H4"
msgid "assertAttributeDoesntContain"
msgstr ""

#: ./docs/8.x/dusk.md:1570
#: ./docs/9.x/dusk.md:1709
#: ./docs/10.x/dusk.md:1815
#: ./docs/11.x/dusk.md:1897
#: ./docs/master/dusk.md:1877
msgctxt "CODE"
msgid "use Tests\\Browser\\Pages\\Login;\n\n"
"$browser->visit(new Login);"
msgstr ""

#: ./docs/10.x/dusk.md:1572
#: ./docs/11.x/dusk.md:1643
#: ./docs/master/dusk.md:1623
msgctxt "P"
msgid "Assert that the element matching the given selector does not contain the given value in the provided attribute:"
msgstr ""

#: ./docs/10.x/dusk.md:1574
#: ./docs/11.x/dusk.md:1645
#: ./docs/master/dusk.md:1625
msgctxt "CODE"
msgid "$browser->assertAttributeDoesntContain($selector, $attribute, $value);"
msgstr ""

#: ./docs/8.x/dusk.md:1574
#: ./docs/9.x/dusk.md:1713
#: ./docs/10.x/dusk.md:1819
#: ./docs/11.x/dusk.md:1901
#: ./docs/master/dusk.md:1881
msgctxt "P"
msgid "Sometimes you may already be on a given page and need to \"load\" the page's selectors and methods into the current test context. This is common when pressing a button and being redirected to a given page without explicitly navigating to it. In this situation, you may use the `on` method to load the page:"
msgstr ""

#: ./docs/8.x/dusk.md:1576
#: ./docs/9.x/dusk.md:1715
#: ./docs/10.x/dusk.md:1821
#: ./docs/11.x/dusk.md:1903
#: ./docs/master/dusk.md:1883
msgctxt "CODE"
msgid "use Tests\\Browser\\Pages\\CreatePlaylist;\n\n"
"$browser->visit('/dashboard')\n"
"        ->clickLink('Create Playlist')\n"
"        ->on(new CreatePlaylist)\n"
"        ->assertSee('@create');"
msgstr ""

#: ./docs/8.x/dusk.md:1583
#: ./docs/9.x/dusk.md:1722
#: ./docs/10.x/dusk.md:1828
#: ./docs/11.x/dusk.md:1910
#: ./docs/master/dusk.md:1890
#~ msgctxt "P"
#~ msgid "<a name=\"shorthand-selectors\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1584
#: ./docs/9.x/dusk.md:1723
#: ./docs/10.x/dusk.md:1829
#: ./docs/11.x/dusk.md:1911
#: ./docs/master/dusk.md:1891
msgctxt "H3"
msgid "Shorthand Selectors"
msgstr ""

#: ./docs/8.x/dusk.md:1586
#: ./docs/9.x/dusk.md:1725
#: ./docs/10.x/dusk.md:1831
#: ./docs/11.x/dusk.md:1913
#: ./docs/master/dusk.md:1893
msgctxt "P"
msgid "The `elements` method within page classes allows you to define quick, easy-to-remember shortcuts for any CSS selector on your page. For example, let's define a shortcut for the \"email\" input field of the application's login page:"
msgstr ""

#: ./docs/8.x/dusk.md:1588
#: ./docs/9.x/dusk.md:1727
msgctxt "CODE"
msgid "/**\n"
" * Get the element shortcuts for the page.\n"
" *\n"
" * @return array\n"
" */\n"
"public function elements()\n"
"{\n"
"    return [\n"
"        '@email' => 'input[name=email]',\n"
"    ];\n"
"}"
msgstr ""

#: ./docs/8.x/dusk.md:1600
#: ./docs/9.x/dusk.md:1739
#: ./docs/10.x/dusk.md:1845
#: ./docs/11.x/dusk.md:1927
#: ./docs/master/dusk.md:1907
msgctxt "P"
msgid "Once the shortcut has been defined, you may use the shorthand selector anywhere you would typically use a full CSS selector:"
msgstr ""

#: ./docs/8.x/dusk.md:1602
#: ./docs/9.x/dusk.md:1741
#: ./docs/10.x/dusk.md:1847
#: ./docs/11.x/dusk.md:1929
#: ./docs/master/dusk.md:1909
msgctxt "CODE"
msgid "$browser->type('@email', 'taylor@laravel.com');"
msgstr ""

#: ./docs/8.x/dusk.md:1604
#: ./docs/9.x/dusk.md:1743
#: ./docs/10.x/dusk.md:1849
#: ./docs/11.x/dusk.md:1931
#: ./docs/master/dusk.md:1911
#~ msgctxt "P"
#~ msgid "<a name=\"global-shorthand-selectors\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1605
#: ./docs/9.x/dusk.md:1744
#: ./docs/10.x/dusk.md:1850
#: ./docs/11.x/dusk.md:1932
#: ./docs/master/dusk.md:1912
msgctxt "H4"
msgid "Global Shorthand Selectors"
msgstr ""

#: ./docs/8.x/dusk.md:1607
#: ./docs/9.x/dusk.md:1746
#: ./docs/10.x/dusk.md:1852
#: ./docs/11.x/dusk.md:1934
#: ./docs/master/dusk.md:1914
msgctxt "P"
msgid "After installing Dusk, a base `Page` class will be placed in your `tests/Browser/Pages` directory. This class contains a `siteElements` method which may be used to define global shorthand selectors that should be available on every page throughout your application:"
msgstr ""

#: ./docs/8.x/dusk.md:1609
#: ./docs/9.x/dusk.md:1748
msgctxt "CODE"
msgid "/**\n"
" * Get the global element shortcuts for the site.\n"
" *\n"
" * @return array\n"
" */\n"
"public static function siteElements()\n"
"{\n"
"    return [\n"
"        '@element' => '#selector',\n"
"    ];\n"
"}"
msgstr ""

#: ./docs/8.x/dusk.md:1621
#: ./docs/9.x/dusk.md:1760
#: ./docs/10.x/dusk.md:1866
#: ./docs/11.x/dusk.md:1948
#: ./docs/master/dusk.md:1928
#~ msgctxt "P"
#~ msgid "<a name=\"page-methods\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1622
#: ./docs/9.x/dusk.md:1761
#: ./docs/10.x/dusk.md:1867
#: ./docs/11.x/dusk.md:1949
#: ./docs/master/dusk.md:1929
msgctxt "H3"
msgid "Page Methods"
msgstr ""

#: ./docs/8.x/dusk.md:1624
#: ./docs/9.x/dusk.md:1763
#: ./docs/10.x/dusk.md:1869
#: ./docs/11.x/dusk.md:1951
#: ./docs/master/dusk.md:1931
msgctxt "P"
msgid "In addition to the default methods defined on pages, you may define additional methods which may be used throughout your tests. For example, let's imagine we are building a music management application. A common action for one page of the application might be to create a playlist. Instead of re-writing the logic to create a playlist in each test, you may define a `createPlaylist` method on a page class:"
msgstr ""

#: ./docs/8.x/dusk.md:1626
#: ./docs/9.x/dusk.md:1765
msgctxt "CODE"
msgid "<?php\n\n"
"namespace Tests\\Browser\\Pages;\n\n"
"use Laravel\\Dusk\\Browser;\n\n"
"class Dashboard extends Page\n"
"{\n"
"    // Other page methods...\n\n"
"    /**\n"
"     * Create a new playlist.\n"
"     *\n"
"     * @param  \\Laravel\\Dusk\\Browser  $browser\n"
"     * @param  string  $name\n"
"     * @return void\n"
"     */\n"
"    public function createPlaylist(Browser $browser, $name)\n"
"    {\n"
"        $browser->type('name', $name)\n"
"                ->check('share')\n"
"                ->press('Create Playlist');\n"
"    }\n"
"}"
msgstr ""

#: ./docs/8.x/dusk.md:1651
#: ./docs/9.x/dusk.md:1790
#: ./docs/10.x/dusk.md:1892
#: ./docs/11.x/dusk.md:1975
#: ./docs/master/dusk.md:1954
msgctxt "P"
msgid "Once the method has been defined, you may use it within any test that utilizes the page. The browser instance will automatically be passed as the first argument to custom page methods:"
msgstr ""

#: ./docs/8.x/dusk.md:1653
#: ./docs/9.x/dusk.md:1792
#: ./docs/10.x/dusk.md:1894
#: ./docs/11.x/dusk.md:1977
#: ./docs/master/dusk.md:1956
msgctxt "CODE"
msgid "use Tests\\Browser\\Pages\\Dashboard;\n\n"
"$browser->visit(new Dashboard)\n"
"        ->createPlaylist('My Playlist')\n"
"        ->assertSee('My Playlist');"
msgstr ""

#: ./docs/8.x/dusk.md:1659
#: ./docs/9.x/dusk.md:1798
#: ./docs/10.x/dusk.md:1900
#: ./docs/11.x/dusk.md:1983
#: ./docs/master/dusk.md:1962
#~ msgctxt "P"
#~ msgid "<a name=\"components\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1660
#: ./docs/9.x/dusk.md:1799
#: ./docs/10.x/dusk.md:1901
#: ./docs/11.x/dusk.md:1984
#: ./docs/master/dusk.md:1963
msgctxt "H2"
msgid "Components"
msgstr ""

#: ./docs/8.x/dusk.md:1662
#: ./docs/9.x/dusk.md:1801
#: ./docs/10.x/dusk.md:1903
#: ./docs/11.x/dusk.md:1986
#: ./docs/master/dusk.md:1965
msgctxt "P"
msgid "Components are similar to Dusk’s “page objects”, but are intended for pieces of UI and functionality that are re-used throughout your application, such as a navigation bar or notification window. As such, components are not bound to specific URLs."
msgstr ""

#: ./docs/8.x/dusk.md:1664
#: ./docs/9.x/dusk.md:1803
#: ./docs/10.x/dusk.md:1905
#: ./docs/11.x/dusk.md:1988
#: ./docs/master/dusk.md:1967
#~ msgctxt "P"
#~ msgid "<a name=\"generating-components\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1665
#: ./docs/9.x/dusk.md:1804
#: ./docs/10.x/dusk.md:1906
#: ./docs/11.x/dusk.md:1989
#: ./docs/master/dusk.md:1968
msgctxt "H3"
msgid "Generating Components"
msgstr ""

#: ./docs/8.x/dusk.md:1667
#: ./docs/9.x/dusk.md:1806
#: ./docs/10.x/dusk.md:1908
#: ./docs/11.x/dusk.md:1991
#: ./docs/master/dusk.md:1970
msgctxt "P"
msgid "To generate a component, execute the `dusk:component` Artisan command. New components are placed in the `tests/Browser/Components` directory:"
msgstr ""

#: ./docs/8.x/dusk.md:1669
#: ./docs/9.x/dusk.md:1808
#: ./docs/10.x/dusk.md:1910
#: ./docs/11.x/dusk.md:1993
#: ./docs/master/dusk.md:1972
msgctxt "CODE"
msgid "php artisan dusk:component DatePicker"
msgstr ""

#: ./docs/8.x/dusk.md:1671
#: ./docs/9.x/dusk.md:1810
#: ./docs/10.x/dusk.md:1912
#: ./docs/11.x/dusk.md:1995
#: ./docs/master/dusk.md:1974
msgctxt "P"
msgid "As shown above, a \"date picker\" is an example of a component that might exist throughout your application on a variety of pages. It can become cumbersome to manually write the browser automation logic to select a date in dozens of tests throughout your test suite. Instead, we can define a Dusk component to represent the date picker, allowing us to encapsulate that logic within the component:"
msgstr ""

#: ./docs/8.x/dusk.md:1673
#: ./docs/9.x/dusk.md:1812
msgctxt "CODE"
msgid "<?php\n\n"
"namespace Tests\\Browser\\Components;\n\n"
"use Laravel\\Dusk\\Browser;\n"
"use Laravel\\Dusk\\Component as BaseComponent;\n\n"
"class DatePicker extends BaseComponent\n"
"{\n"
"    /**\n"
"     * Get the root selector for the component.\n"
"     *\n"
"     * @return string\n"
"     */\n"
"    public function selector()\n"
"    {\n"
"        return '.date-picker';\n"
"    }\n\n"
"    /**\n"
"     * Assert that the browser page contains the component.\n"
"     *\n"
"     * @param  Browser  $browser\n"
"     * @return void\n"
"     */\n"
"    public function assert(Browser $browser)\n"
"    {\n"
"        $browser->assertVisible($this->selector());\n"
"    }\n\n"
"    /**\n"
"     * Get the element shortcuts for the component.\n"
"     *\n"
"     * @return array\n"
"     */\n"
"    public function elements()\n"
"    {\n"
"        return [\n"
"            '@date-field' => 'input.datepicker-input',\n"
"            '@year-list' => 'div > div.datepicker-years',\n"
"            '@month-list' => 'div > div.datepicker-months',\n"
"            '@day-list' => 'div > div.datepicker-days',\n"
"        ];\n"
"    }\n\n"
"    /**\n"
"     * Select the given date.\n"
"     *\n"
"     * @param  \\Laravel\\Dusk\\Browser  $browser\n"
"     * @param  int  $year\n"
"     * @param  int  $month\n"
"     * @param  int  $day\n"
"     * @return void\n"
"     */\n"
"    public function selectDate(Browser $browser, $year, $month, $day)\n"
"    {\n"
"        $browser->click('@date-field')\n"
"                ->within('@year-list', function ($browser) use ($year) {\n"
"                    $browser->click($year);\n"
"                })\n"
"                ->within('@month-list', function ($browser) use ($month) {\n"
"                    $browser->click($month);\n"
"                })\n"
"                ->within('@day-list', function ($browser) use ($day) {\n"
"                    $browser->click($day);\n"
"                });\n"
"    }\n"
"}"
msgstr ""

#: ./docs/10.x/dusk.md:1735
#: ./docs/11.x/dusk.md:1815
#: ./docs/master/dusk.md:1795
msgctxt "CODE"
msgid "/**\n"
" * A basic Vue test example.\n"
" */\n"
"public function test_vue(): void\n"
"{\n"
"    $this->browse(function (Browser $browser) {\n"
"        $browser->visit('/')\n"
"                ->assertVue('user.name', 'Taylor', '@profile-component');\n"
"    });\n"
"}"
msgstr ""

#: ./docs/8.x/dusk.md:1742
#: ./docs/9.x/dusk.md:1881
#: ./docs/10.x/dusk.md:1972
#: ./docs/11.x/dusk.md:2055
#: ./docs/master/dusk.md:2034
#~ msgctxt "P"
#~ msgid "<a name=\"using-components\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1743
#: ./docs/9.x/dusk.md:1882
#: ./docs/10.x/dusk.md:1973
#: ./docs/11.x/dusk.md:2056
#: ./docs/master/dusk.md:2035
msgctxt "H3"
msgid "Using Components"
msgstr ""

#: ./docs/8.x/dusk.md:1745
#: ./docs/9.x/dusk.md:1884
#: ./docs/10.x/dusk.md:1975
#: ./docs/11.x/dusk.md:2058
#: ./docs/master/dusk.md:2037
msgctxt "P"
msgid "Once the component has been defined, we can easily select a date within the date picker from any test. And, if the logic necessary to select a date changes, we only need to update the component:"
msgstr ""

#: ./docs/8.x/dusk.md:1747
#: ./docs/9.x/dusk.md:1886
msgctxt "CODE"
msgid "<?php\n\n"
"namespace Tests\\Browser;\n\n"
"use Illuminate\\Foundation\\Testing\\DatabaseMigrations;\n"
"use Laravel\\Dusk\\Browser;\n"
"use Tests\\Browser\\Components\\DatePicker;\n"
"use Tests\\DuskTestCase;\n\n"
"class ExampleTest extends DuskTestCase\n"
"{\n"
"    /**\n"
"     * A basic component test example.\n"
"     *\n"
"     * @return void\n"
"     */\n"
"    public function testBasicExample()\n"
"    {\n"
"        $this->browse(function (Browser $browser) {\n"
"            $browser->visit('/')\n"
"                    ->within(new DatePicker, function ($browser) {\n"
"                        $browser->selectDate(2019, 1, 30);\n"
"                    })\n"
"                    ->assertSee('January');\n"
"        });\n"
"    }\n"
"}"
msgstr ""

#: ./docs/10.x/dusk.md:1760
#: ./docs/11.x/dusk.md:1842
#: ./docs/master/dusk.md:1822
#~ msgctxt "P"
#~ msgid "<a name=\"assert-vue-doesnt-contain\"></a>"
#~ msgstr ""

#: ./docs/10.x/dusk.md:1761
#: ./docs/11.x/dusk.md:1843
#: ./docs/master/dusk.md:1823
msgctxt "H4"
msgid "assertVueDoesntContain"
msgstr ""

#: ./docs/10.x/dusk.md:1765
#: ./docs/11.x/dusk.md:1847
#: ./docs/master/dusk.md:1827
msgctxt "CODE"
msgid "$browser->assertVueDoesntContain($property, $value, $componentSelector = null);"
msgstr ""

#: ./docs/8.x/dusk.md:1775
#: ./docs/9.x/dusk.md:1914
#: ./docs/10.x/dusk.md:2003
#: ./docs/11.x/dusk.md:2108
#: ./docs/master/dusk.md:2087
#~ msgctxt "P"
#~ msgid "<a name=\"continuous-integration\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1776
#: ./docs/9.x/dusk.md:1915
#: ./docs/10.x/dusk.md:2004
#: ./docs/11.x/dusk.md:2109
#: ./docs/master/dusk.md:2088
msgctxt "H2"
msgid "Continuous Integration"
msgstr ""

#: ./docs/8.x/dusk.md:1778
#: ./docs/9.x/dusk.md:1918
#: ./docs/10.x/dusk.md:2007
#: ./docs/11.x/dusk.md:2112
#: ./docs/master/dusk.md:2091
msgctxt "P"
msgid "Most Dusk continuous integration configurations expect your Laravel application to be served using the built-in PHP development server on port 8000. Therefore, before continuing, you should ensure that your continuous integration environment has an `APP_URL` environment variable value of `http://127.0.0.1:8000`."
msgstr ""

#: ./docs/8.x/dusk.md:1780
#: ./docs/9.x/dusk.md:1920
#: ./docs/10.x/dusk.md:2009
#: ./docs/11.x/dusk.md:2114
#: ./docs/master/dusk.md:2093
#~ msgctxt "P"
#~ msgid "<a name=\"running-tests-on-heroku-ci\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1781
#: ./docs/9.x/dusk.md:1921
#: ./docs/10.x/dusk.md:2010
#: ./docs/11.x/dusk.md:2115
#: ./docs/master/dusk.md:2094
msgctxt "H3"
msgid "Heroku CI"
msgstr ""

#: ./docs/8.x/dusk.md:1783
#: ./docs/9.x/dusk.md:1923
#: ./docs/10.x/dusk.md:2012
#: ./docs/11.x/dusk.md:2117
#: ./docs/master/dusk.md:2096
msgctxt "P"
msgid "To run Dusk tests on [Heroku CI](https://www.heroku.com/continuous-integration), add the following Google Chrome buildpack and scripts to your Heroku `app.json` file:"
msgstr ""

#: ./docs/8.x/dusk.md:1785
#: ./docs/9.x/dusk.md:1925
#: ./docs/10.x/dusk.md:2014
#: ./docs/master/dusk.md:2098
msgctxt "CODE"
msgid "{\n"
"  \"environments\": {\n"
"    \"test\": {\n"
"      \"buildpacks\": [\n"
"        { \"url\": \"heroku/php\" },\n"
"        { \"url\": \"https://github.com/heroku/heroku-buildpack-google-chrome\" }\n"
"      ],\n"
"      \"scripts\": {\n"
"        \"test-setup\": \"cp .env.testing .env\",\n"
"        \"test\": \"nohup bash -c './vendor/laravel/dusk/bin/chromedriver-linux > /dev/null 2>&1 &' && nohup bash -c 'php artisan serve --no-reload > /dev/null 2>&1 &' && php artisan dusk\"\n"
"      }\n"
"    }\n"
"  }\n"
"}"
msgstr ""

#: ./docs/10.x/dusk.md:1789
#: ./docs/11.x/dusk.md:1871
#: ./docs/master/dusk.md:1851
msgctxt "CODE"
msgid "/**\n"
" * Get the URL for the page.\n"
" */\n"
"public function url(): string\n"
"{\n"
"    return '/login';\n"
"}"
msgstr ""

#: ./docs/8.x/dusk.md:1800
#: ./docs/9.x/dusk.md:1940
#: ./docs/10.x/dusk.md:2029
#: ./docs/11.x/dusk.md:2134
#: ./docs/master/dusk.md:2113
#~ msgctxt "P"
#~ msgid "<a name=\"running-tests-on-travis-ci\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1801
#: ./docs/9.x/dusk.md:1941
#: ./docs/10.x/dusk.md:2030
#: ./docs/11.x/dusk.md:2135
#: ./docs/master/dusk.md:2114
msgctxt "H3"
msgid "Travis CI"
msgstr ""

#: ./docs/10.x/dusk.md:1802
#: ./docs/11.x/dusk.md:1884
#: ./docs/master/dusk.md:1864
msgctxt "CODE"
msgid "/**\n"
" * Assert that the browser is on the page.\n"
" */\n"
"public function assert(Browser $browser): void\n"
"{\n"
"    $browser->assertPathIs($this->url());\n"
"}"
msgstr ""

#: ./docs/8.x/dusk.md:1803
#: ./docs/9.x/dusk.md:1943
#: ./docs/10.x/dusk.md:2032
#: ./docs/11.x/dusk.md:2137
#: ./docs/master/dusk.md:2116
msgctxt "P"
msgid "To run your Dusk tests on [Travis CI](https://travis-ci.org), use the following `.travis.yml` configuration. Since Travis CI is not a graphical environment, we will need to take some extra steps in order to launch a Chrome browser. In addition, we will use `php artisan serve` to launch PHP's built-in web server:"
msgstr ""

#: ./docs/8.x/dusk.md:1805
#: ./docs/9.x/dusk.md:1945
#: ./docs/10.x/dusk.md:2034
#: ./docs/master/dusk.md:2118
msgctxt "CODE"
msgid "language: php\n\n"
"php:\n"
"  - 7.3\n\n"
"addons:\n"
"  chrome: stable\n\n"
"install:\n"
"  - cp .env.testing .env\n"
"  - travis_retry composer install --no-interaction --prefer-dist\n"
"  - php artisan key:generate\n"
"  - php artisan dusk:chrome-driver\n\n"
"before_script:\n"
"  - google-chrome-stable --headless --disable-gpu --remote-debugging-port=9222 http://localhost &\n"
"  - php artisan serve --no-reload &\n\n"
"script:\n"
"  - php artisan dusk"
msgstr ""

#: ./docs/11.x/dusk.md:1806
#: ./docs/master/dusk.md:1786
msgctxt "CODE: php tab=Pest"
msgid "test('vue', function () {\n"
"    $this->browse(function (Browser $browser) {\n"
"        $browser->visit('/')\n"
"                ->assertVue('user.name', 'Taylor', '@profile-component');\n"
"    });\n"
"});"
msgstr ""

#: ./docs/10.x/dusk.md:1811
#: ./docs/11.x/dusk.md:1893
#: ./docs/master/dusk.md:1873
msgctxt "H3"
msgid "Navigating to Pages"
msgstr ""

#: ./docs/8.x/dusk.md:1826
#: ./docs/9.x/dusk.md:1968
#: ./docs/10.x/dusk.md:2057
#: ./docs/11.x/dusk.md:2162
#: ./docs/master/dusk.md:2141
#~ msgctxt "P"
#~ msgid "<a name=\"running-tests-on-github-actions\"></a>"
#~ msgstr ""

#: ./docs/8.x/dusk.md:1827
#: ./docs/9.x/dusk.md:1969
#: ./docs/10.x/dusk.md:2058
#: ./docs/11.x/dusk.md:2163
#: ./docs/master/dusk.md:2142
msgctxt "H3"
msgid "GitHub Actions"
msgstr ""

#: ./docs/8.x/dusk.md:1829
msgctxt "P"
msgid "If you are using [Github Actions](https://github.com/features/actions) to run your Dusk tests, you may use the following configuration file as a starting point. Like TravisCI, we will use the `php artisan serve` command to launch PHP's built-in web server:"
msgstr ""

#: ./docs/8.x/dusk.md:1831
msgctxt "CODE"
msgid "name: CI\n"
"on: [push]\n"
"jobs:\n\n"
"  dusk-php:\n"
"    runs-on: ubuntu-latest\n"
"    steps:\n"
"      - uses: actions/checkout@v2\n"
"      - name: Prepare The Environment\n"
"        run: cp .env.example .env\n"
"      - name: Create Database\n"
"        run: |\n"
"          sudo systemctl start mysql\n"
"          mysql --user=\"root\" --password=\"root\" -e \"CREATE DATABASE 'my-database' character set UTF8mb4 collate utf8mb4_bin;\"\n"
"      - name: Install Composer Dependencies\n"
"        run: composer install --no-progress --prefer-dist --optimize-autoloader\n"
"      - name: Generate Application Key\n"
"        run: php artisan key:generate\n"
"      - name: Upgrade Chrome Driver\n"
"        run: php artisan dusk:chrome-driver `/opt/google/chrome/chrome --version | cut -d \" \" -f3 | cut -d \".\" -f1`\n"
"      - name: Start Chrome Driver\n"
"        run: ./vendor/laravel/dusk/bin/chromedriver-linux &\n"
"      - name: Run Laravel Server\n"
"        run: php artisan serve --no-reload &\n"
"      - name: Run Dusk Tests\n"
"        env:\n"
"          APP_URL: \"http://127.0.0.1:8000\"\n"
"        run: php artisan dusk\n"
"      - name: Upload Screenshots\n"
"        if: failure()\n"
"        uses: actions/upload-artifact@v2\n"
"        with:\n"
"          name: screenshots\n"
"          path: tests/Browser/screenshots\n"
"      - name: Upload Console Logs\n"
"        if: failure()\n"
"        uses: actions/upload-artifact@v2\n"
"        with:\n"
"          name: console\n"
"          path: tests/Browser/console"
msgstr ""

#: ./docs/10.x/dusk.md:1833
#: ./docs/11.x/dusk.md:1915
#: ./docs/master/dusk.md:1895
msgctxt "CODE"
msgid "/**\n"
" * Get the element shortcuts for the page.\n"
" *\n"
" * @return array<string, string>\n"
" */\n"
"public function elements(): array\n"
"{\n"
"    return [\n"
"        '@email' => 'input[name=email]',\n"
"    ];\n"
"}"
msgstr ""

#: ./docs/10.x/dusk.md:1854
#: ./docs/11.x/dusk.md:1936
#: ./docs/master/dusk.md:1916
msgctxt "CODE"
msgid "/**\n"
" * Get the global element shortcuts for the site.\n"
" *\n"
" * @return array<string, string>\n"
" */\n"
"public static function siteElements(): array\n"
"{\n"
"    return [\n"
"        '@element' => '#selector',\n"
"    ];\n"
"}"
msgstr ""

#: ./docs/10.x/dusk.md:1871
#: ./docs/master/dusk.md:1933
msgctxt "CODE"
msgid "<?php\n\n"
"namespace Tests\\Browser\\Pages;\n\n"
"use Laravel\\Dusk\\Browser;\n\n"
"class Dashboard extends Page\n"
"{\n"
"    // Other page methods...\n\n"
"    /**\n"
"     * Create a new playlist.\n"
"     */\n"
"    public function createPlaylist(Browser $browser, string $name): void\n"
"    {\n"
"        $browser->type('name', $name)\n"
"                ->check('share')\n"
"                ->press('Create Playlist');\n"
"    }\n"
"}"
msgstr ""

#: ./docs/10.x/dusk.md:1914
#: ./docs/11.x/dusk.md:1997
#: ./docs/master/dusk.md:1976
msgctxt "CODE"
msgid "<?php\n\n"
"namespace Tests\\Browser\\Components;\n\n"
"use Laravel\\Dusk\\Browser;\n"
"use Laravel\\Dusk\\Component as BaseComponent;\n\n"
"class DatePicker extends BaseComponent\n"
"{\n"
"    /**\n"
"     * Get the root selector for the component.\n"
"     */\n"
"    public function selector(): string\n"
"    {\n"
"        return '.date-picker';\n"
"    }\n\n"
"    /**\n"
"     * Assert that the browser page contains the component.\n"
"     */\n"
"    public function assert(Browser $browser): void\n"
"    {\n"
"        $browser->assertVisible($this->selector());\n"
"    }\n\n"
"    /**\n"
"     * Get the element shortcuts for the component.\n"
"     *\n"
"     * @return array<string, string>\n"
"     */\n"
"    public function elements(): array\n"
"    {\n"
"        return [\n"
"            '@date-field' => 'input.datepicker-input',\n"
"            '@year-list' => 'div > div.datepicker-years',\n"
"            '@month-list' => 'div > div.datepicker-months',\n"
"            '@day-list' => 'div > div.datepicker-days',\n"
"        ];\n"
"    }\n\n"
"    /**\n"
"     * Select the given date.\n"
"     */\n"
"    public function selectDate(Browser $browser, int $year, int $month, int $day): void\n"
"    {\n"
"        $browser->click('@date-field')\n"
"                ->within('@year-list', function (Browser $browser) use ($year) {\n"
"                    $browser->click($year);\n"
"                })\n"
"                ->within('@month-list', function (Browser $browser) use ($month) {\n"
"                    $browser->click($month);\n"
"                })\n"
"                ->within('@day-list', function (Browser $browser) use ($day) {\n"
"                    $browser->click($day);\n"
"                });\n"
"    }\n"
"}"
msgstr ""

#: ./docs/11.x/dusk.md:1953
msgctxt "CODE"
msgid "<?php\n\n"
"namespace Tests\\Browser\\Pages;\n\n"
"use Laravel\\Dusk\\Browser;\n"
"use Laravel\\Dusk\\Page;\n\n"
"class Dashboard extends Page\n"
"{\n"
"    // Other page methods...\n\n"
"    /**\n"
"     * Create a new playlist.\n"
"     */\n"
"    public function createPlaylist(Browser $browser, string $name): void\n"
"    {\n"
"        $browser->type('name', $name)\n"
"                ->check('share')\n"
"                ->press('Create Playlist');\n"
"    }\n"
"}"
msgstr ""

#: ./docs/9.x/dusk.md:1971
#: ./docs/10.x/dusk.md:2060
#: ./docs/11.x/dusk.md:2165
#: ./docs/master/dusk.md:2144
msgctxt "P"
msgid "If you are using [GitHub Actions](https://github.com/features/actions) to run your Dusk tests, you may use the following configuration file as a starting point. Like TravisCI, we will use the `php artisan serve` command to launch PHP's built-in web server:"
msgstr ""

#: ./docs/9.x/dusk.md:1973
msgctxt "CODE: yaml"
msgid "name: CI\n"
"on: [push]\n"
"jobs:\n\n"
"  dusk-php:\n"
"    runs-on: ubuntu-latest\n"
"    env:\n"
"      APP_URL: \"http://127.0.0.1:8000\"\n"
"      DB_USERNAME: root\n"
"      DB_PASSWORD: root\n"
"      MAIL_MAILER: log\n"
"    steps:\n"
"      - uses: actions/checkout@v3\n"
"      - name: Prepare The Environment\n"
"        run: cp .env.example .env\n"
"      - name: Create Database\n"
"        run: |\n"
"          sudo systemctl start mysql\n"
"          mysql --user=\"root\" --password=\"root\" -e \"CREATE DATABASE \\`my-database\\` character set UTF8mb4 collate utf8mb4_bin;\"\n"
"      - name: Install Composer Dependencies\n"
"        run: composer install --no-progress --prefer-dist --optimize-autoloader\n"
"      - name: Generate Application Key\n"
"        run: php artisan key:generate\n"
"      - name: Upgrade Chrome Driver\n"
"        run: php artisan dusk:chrome-driver --detect\n"
"      - name: Start Chrome Driver\n"
"        run: ./vendor/laravel/dusk/bin/chromedriver-linux &\n"
"      - name: Run Laravel Server\n"
"        run: php artisan serve --no-reload &\n"
"      - name: Run Dusk Tests\n"
"        run: php artisan dusk\n"
"      - name: Upload Screenshots\n"
"        if: failure()\n"
"        uses: actions/upload-artifact@v2\n"
"        with:\n"
"          name: screenshots\n"
"          path: tests/Browser/screenshots\n"
"      - name: Upload Console Logs\n"
"        if: failure()\n"
"        uses: actions/upload-artifact@v2\n"
"        with:\n"
"          name: console\n"
"          path: tests/Browser/console"
msgstr ""

#: ./docs/10.x/dusk.md:1977
#: ./docs/11.x/dusk.md:2080
#: ./docs/master/dusk.md:2059
msgctxt "CODE"
msgid "<?php\n\n"
"namespace Tests\\Browser;\n\n"
"use Illuminate\\Foundation\\Testing\\DatabaseMigrations;\n"
"use Laravel\\Dusk\\Browser;\n"
"use Tests\\Browser\\Components\\DatePicker;\n"
"use Tests\\DuskTestCase;\n\n"
"class ExampleTest extends DuskTestCase\n"
"{\n"
"    /**\n"
"     * A basic component test example.\n"
"     */\n"
"    public function test_basic_example(): void\n"
"    {\n"
"        $this->browse(function (Browser $browser) {\n"
"            $browser->visit('/')\n"
"                    ->within(new DatePicker, function (Browser $browser) {\n"
"                        $browser->selectDate(2019, 1, 30);\n"
"                    })\n"
"                    ->assertSee('January');\n"
"        });\n"
"    }\n"
"}"
msgstr ""

#: ./docs/11.x/dusk.md:2060
#: ./docs/master/dusk.md:2039
msgctxt "CODE: php tab=Pest"
msgid "<?php\n\n"
"use Illuminate\\Foundation\\Testing\\DatabaseMigrations;\n"
"use Laravel\\Dusk\\Browser;\n"
"use Tests\\Browser\\Components\\DatePicker;\n\n"
"uses(DatabaseMigrations::class);\n\n"
"test('basic example', function () {\n"
"    $this->browse(function (Browser $browser) {\n"
"        $browser->visit('/')\n"
"                ->within(new DatePicker, function (Browser $browser) {\n"
"                    $browser->selectDate(2019, 1, 30);\n"
"                })\n"
"                ->assertSee('January');\n"
"    });\n"
"});"
msgstr ""

#: ./docs/10.x/dusk.md:2062
#: ./docs/master/dusk.md:2146
msgctxt "CODE: yaml"
msgid "name: CI\n"
"on: [push]\n"
"jobs:\n\n"
"  dusk-php:\n"
"    runs-on: ubuntu-latest\n"
"    env:\n"
"      APP_URL: \"http://127.0.0.1:8000\"\n"
"      DB_USERNAME: root\n"
"      DB_PASSWORD: root\n"
"      MAIL_MAILER: log\n"
"    steps:\n"
"      - uses: actions/checkout@v4\n"
"      - name: Prepare The Environment\n"
"        run: cp .env.example .env\n"
"      - name: Create Database\n"
"        run: |\n"
"          sudo systemctl start mysql\n"
"          mysql --user=\"root\" --password=\"root\" -e \"CREATE DATABASE \\`my-database\\` character set UTF8mb4 collate utf8mb4_bin;\"\n"
"      - name: Install Composer Dependencies\n"
"        run: composer install --no-progress --prefer-dist --optimize-autoloader\n"
"      - name: Generate Application Key\n"
"        run: php artisan key:generate\n"
"      - name: Upgrade Chrome Driver\n"
"        run: php artisan dusk:chrome-driver --detect\n"
"      - name: Start Chrome Driver\n"
"        run: ./vendor/laravel/dusk/bin/chromedriver-linux &\n"
"      - name: Run Laravel Server\n"
"        run: php artisan serve --no-reload &\n"
"      - name: Run Dusk Tests\n"
"        run: php artisan dusk\n"
"      - name: Upload Screenshots\n"
"        if: failure()\n"
"        uses: actions/upload-artifact@v2\n"
"        with:\n"
"          name: screenshots\n"
"          path: tests/Browser/screenshots\n"
"      - name: Upload Console Logs\n"
"        if: failure()\n"
"        uses: actions/upload-artifact@v2\n"
"        with:\n"
"          name: console\n"
"          path: tests/Browser/console"
msgstr ""

#: ./docs/10.x/dusk.md:2108
#: ./docs/11.x/dusk.md:2213
#: ./docs/master/dusk.md:2192
#~ msgctxt "P"
#~ msgid "<a name=\"running-tests-on-chipper-ci\"></a>"
#~ msgstr ""

#: ./docs/10.x/dusk.md:2109
#: ./docs/11.x/dusk.md:2214
#: ./docs/master/dusk.md:2193
msgctxt "H3"
msgid "Chipper CI"
msgstr ""

#: ./docs/10.x/dusk.md:2111
#: ./docs/11.x/dusk.md:2216
#: ./docs/master/dusk.md:2195
msgctxt "P"
msgid "If you are using [Chipper CI](https://chipperci.com) to run your Dusk tests, you may use the following configuration file as a starting point. We will use PHP's built-in server to run Laravel so we can listen for requests:"
msgstr ""

#: ./docs/10.x/dusk.md:2113
#: ./docs/master/dusk.md:2197
msgctxt "CODE: yaml"
msgid "# file .chipperci.yml\n"
"version: 1\n\n"
"environment:\n"
"  php: 8.2\n"
"  node: 16\n\n"
"# Include Chrome in the build environment\n"
"services:\n"
"  - dusk\n\n"
"# Build all commits\n"
"on:\n"
"   push:\n"
"      branches: .*\n\n"
"pipeline:\n"
"  - name: Setup\n"
"    cmd: |\n"
"      cp -v .env.example .env\n"
"      composer install --no-interaction --prefer-dist --optimize-autoloader\n"
"      php artisan key:generate\n"
"      \n"
"      # Create a dusk env file, ensuring APP_URL uses BUILD_HOST\n"
"      cp -v .env .env.dusk.ci\n"
"      sed -i \"s@APP_URL=.*@APP_URL=http://$BUILD_HOST:8000@g\" .env.dusk.ci\n\n"
"  - name: Compile Assets\n"
"    cmd: |\n"
"      npm ci --no-audit\n"
"      npm run build\n\n"
"  - name: Browser Tests\n"
"    cmd: |\n"
"      php -S [::0]:8000 -t public 2>server.log &\n"
"      sleep 2\n"
"      php artisan dusk:chrome-driver $CHROME_DRIVER\n"
"      php artisan dusk --env=ci"
msgstr ""

#: ./docs/11.x/dusk.md:2119
msgctxt "CODE"
msgid "{\n"
"  \"environments\": {\n"
"    \"test\": {\n"
"      \"buildpacks\": [\n"
"        { \"url\": \"heroku/php\" },\n"
"        { \"url\": \"https://github.com/heroku/heroku-buildpack-chrome-for-testing\" }\n"
"      ],\n"
"      \"scripts\": {\n"
"        \"test-setup\": \"cp .env.testing .env\",\n"
"        \"test\": \"nohup bash -c './vendor/laravel/dusk/bin/chromedriver-linux --port=9515 > /dev/null 2>&1 &' && nohup bash -c 'php artisan serve --no-reload > /dev/null 2>&1 &' && php artisan dusk\"\n"
"      }\n"
"    }\n"
"  }\n"
"}"
msgstr ""

#: ./docs/11.x/dusk.md:2139
msgctxt "CODE: yaml"
msgid "language: php\n\n"
"php:\n"
"  - 8.2\n\n"
"addons:\n"
"  chrome: stable\n\n"
"install:\n"
"  - cp .env.testing .env\n"
"  - travis_retry composer install --no-interaction --prefer-dist\n"
"  - php artisan key:generate\n"
"  - php artisan dusk:chrome-driver\n\n"
"before_script:\n"
"  - google-chrome-stable --headless --disable-gpu --remote-debugging-port=9222 http://localhost &\n"
"  - php artisan serve --no-reload &\n\n"
"script:\n"
"  - php artisan dusk"
msgstr ""

#: ./docs/10.x/dusk.md:2154
#: ./docs/11.x/dusk.md:2259
#: ./docs/master/dusk.md:2238
msgctxt "P"
msgid "To learn more about running Dusk tests on Chipper CI, including how to use databases, consult the [official Chipper CI documentation](https://chipperci.com/docs/testing/laravel-dusk-new/)."
msgstr ""

#: ./docs/11.x/dusk.md:2167
msgctxt "CODE: yaml"
msgid "name: CI\n"
"on: [push]\n"
"jobs:\n\n"
"  dusk-php:\n"
"    runs-on: ubuntu-latest\n"
"    env:\n"
"      APP_URL: \"http://127.0.0.1:8000\"\n"
"      DB_USERNAME: root\n"
"      DB_PASSWORD: root\n"
"      MAIL_MAILER: log\n"
"    steps:\n"
"      - uses: actions/checkout@v4\n"
"      - name: Prepare The Environment\n"
"        run: cp .env.example .env\n"
"      - name: Create Database\n"
"        run: |\n"
"          sudo systemctl start mysql\n"
"          mysql --user=\"root\" --password=\"root\" -e \"CREATE DATABASE \\`my-database\\` character set UTF8mb4 collate utf8mb4_bin;\"\n"
"      - name: Install Composer Dependencies\n"
"        run: composer install --no-progress --prefer-dist --optimize-autoloader\n"
"      - name: Generate Application Key\n"
"        run: php artisan key:generate\n"
"      - name: Upgrade Chrome Driver\n"
"        run: php artisan dusk:chrome-driver --detect\n"
"      - name: Start Chrome Driver\n"
"        run: ./vendor/laravel/dusk/bin/chromedriver-linux --port=9515 &\n"
"      - name: Run Laravel Server\n"
"        run: php artisan serve --no-reload &\n"
"      - name: Run Dusk Tests\n"
"        run: php artisan dusk\n"
"      - name: Upload Screenshots\n"
"        if: failure()\n"
"        uses: actions/upload-artifact@v4\n"
"        with:\n"
"          name: screenshots\n"
"          path: tests/Browser/screenshots\n"
"      - name: Upload Console Logs\n"
"        if: failure()\n"
"        uses: actions/upload-artifact@v4\n"
"        with:\n"
"          name: console\n"
"          path: tests/Browser/console"
msgstr ""

#: ./docs/11.x/dusk.md:2218
msgctxt "CODE: yaml"
msgid "# file .chipperci.yml\n"
"version: 1\n\n"
"environment:\n"
"  php: 8.2\n"
"  node: 16\n\n"
"# Include Chrome in the build environment\n"
"services:\n"
"  - dusk\n\n"
"# Build all commits\n"
"on:\n"
"   push:\n"
"      branches: .*\n\n"
"pipeline:\n"
"  - name: Setup\n"
"    cmd: |\n"
"      cp -v .env.example .env\n"
"      composer install --no-interaction --prefer-dist --optimize-autoloader\n"
"      php artisan key:generate\n\n"
"      # Create a dusk env file, ensuring APP_URL uses BUILD_HOST\n"
"      cp -v .env .env.dusk.ci\n"
"      sed -i \"s@APP_URL=.*@APP_URL=http://$BUILD_HOST:8000@g\" .env.dusk.ci\n\n"
"  - name: Compile Assets\n"
"    cmd: |\n"
"      npm ci --no-audit\n"
"      npm run build\n\n"
"  - name: Browser Tests\n"
"    cmd: |\n"
"      php -S [::0]:8000 -t public 2>server.log &\n"
"      sleep 2\n"
"      php artisan dusk:chrome-driver $CHROME_DRIVER\n"
"      php artisan dusk --env=ci"
msgstr ""

